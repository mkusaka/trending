<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:31:19Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>krenx1983/openctp</title>
    <updated>2022-11-20T01:31:19Z</updated>
    <id>tag:github.com,2022-11-20:/krenx1983/openctp</id>
    <link href="https://github.com/krenx1983/openctp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CTP开放平台提供A股、港股、美股、期货、期权等全品种接入通道，通过提供中泰证券XTP、华鑫证券奇点、东方证券OST、东方财富证券EMT、盈透证券TWS等各通道的CTPAPI接口，CTP程序可以无缝对接各股票柜台。平台也提供了一套基于TTS交易系统的模拟环境，同样提供了CTPAPI兼容接口，可以替代Simnow，为CTP量化交易开发者提供7x24可用的模拟环境。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;strong&gt;CTP开放平台（Powered by TTS - Tick Trading System）&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Github集 1000 Star，&lt;a href=&#34;https://www.zhihu.com/people/krenx&#34;&gt;知乎krenx&lt;/a&gt;集 10000 收藏，将开启平台各接口源码开放进程。&lt;/h3&gt; &#xA;&lt;p&gt;开放平台采用与CTPAPI完全兼容的接口，一定程度上可替代simnow等模拟平台进行功能测试。 CTP程序无需修改代码也无需重新编译，只需在这里&lt;strong&gt;下载与CTP API版本号一致的动态库&lt;/strong&gt;，覆盖掉自己的即可。&lt;/p&gt; &#xA;&lt;p&gt;提供CTPAPI 6.3.15、6.3.19、6.5.1、6.6.1、6.6.7全部在用的版本，对应支持win32、win64、linux、MacOS等多个操作系统。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/148639077-6c328032-b75a-4979-be8d-157de60cf3b4.jpg&#34; alt=&#34;ctp开放平台全景图&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;openctp培训与咨询服务&lt;/h3&gt; &#xA;&lt;p&gt;openctp现已推出培训与技术咨询服务，&lt;strong&gt;培训服务&lt;/strong&gt;共准备了五期付费培训课程和多期免费公开课，付费培训时间为每个周日晚20:00～21:30，培训方式为腾讯会议，课后可无限回看，课后可无限时间交流，详情请在openctp公众号回复“培训”两个字，培训完成可帮推荐工作，可长期跟同学们沟通交流，培训内容是我个人从业近二十年的技术精华，付费课程需要有一定的C/C++语言基础，完成五期付费课程培训，在金融交易领域的工作应该会得心应手。免费课程时间不确定，请关注openctp公众号了解相关动态。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;咨询服务&lt;/strong&gt;为零散问题解答服务，如果你在CTP技术群、编程语言群等等地方问问题没人理你，你可以来咨询我们，这项服务我们是以团队的形式对外进行服务，由各项技术的大厂专家组成，对技术都有丰富的经验和极高的追求，现推广阶段咨询费也很便宜，报名请在openctp公众号回复“咨询”两个字。请注意，咨询不是培训，如果你需要的是系统性的学习，请报相应的培训课程，咨询也不会帮忙写代码，只问诊不开药，也不作任何保证，如果你对自己所提出的问题价值没有概念又很较真，请不要来骚扰。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CTP接口与业务咨询：1000/年，针对官方技术服务不够的地方作为补充，官方得不到回复或者得不到及时回复的，可以咨询我们。&lt;/li&gt; &#xA; &lt;li&gt;一般技术咨询：3000/年，C/C++、Java、Python、Go等语言基础编程技术咨询，可以作为各语言0基础课程的补充，帮助你更快掌握一门语言。0基础课程均为免费课程，课程安排请关注openctp公众号了解。&lt;/li&gt; &#xA; &lt;li&gt;高级技术咨询：5000/年，可以咨询编程框架、系统架构、业务规划等高阶内容。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;各期培训内容安排（已完成的课程可至&lt;a href=&#34;https://space.bilibili.com/549478063/video&#34;&gt;B站&lt;/a&gt;及&lt;a href=&#34;https://www.ixigua.com/home/4388848858576499/?source=pgc_author_profile&amp;amp;list_entrance=anyVideo&#34;&gt;西瓜&lt;/a&gt;试看）：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第一期：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484363&amp;amp;idx=1&amp;amp;sn=0d74fb1a61e1c595d36527b23eb23323&amp;amp;chksm=c36bd862f41c51749f9490a2b0027fb6a8df53d22c9768b73353a995d7a879171e9fea4d03b4&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;C/C++高级编程&lt;/a&gt;，3000元，以Think库为基准进行讲解，含socket网络编程、IPC进程通讯等，已完成一次培训，可直接回看视频。&lt;/li&gt; &#xA; &lt;li&gt;第二期：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484422&amp;amp;idx=1&amp;amp;sn=0165c1b7b5f964ce32c34445d8230f25&amp;amp;chksm=c36bdfaff41c56b9d05870e0d54880a7c62b9dea092372c074b786bc390e5d665fe5e9ef5f84&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;CTP技术开发&lt;/a&gt;，3000元，以openctp相关技术为基准进行讲解，含CTPAPI底层逻辑、CTPAPI各种注意事项、开源CTP客户端TextTrader源码讲解等，已完成一次培训，可直接回看视频。&lt;/li&gt; &#xA; &lt;li&gt;第三期：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484574&amp;amp;idx=1&amp;amp;sn=4ff8d92d1f810ad456ac3eda9b3736f7&amp;amp;chksm=c36bdf37f41c5621d1ba8eed48b5ba46a674b57b66ce8e312d364bedec32913b5eb00413fbc4&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;交易系统开发&lt;/a&gt;，3000元，以TTS交易系统为基准进行讲解，含内存数据库架构技术、双机热备技术、重演技术、业务表结构设计、关键业务处理等，11月20号开讲。&lt;/li&gt; &#xA; &lt;li&gt;第四期：金融交易业务，3000元，通讲全球股票、期货、期权交易发展历程、交易规则、风险控制及产品设计。&lt;/li&gt; &#xA; &lt;li&gt;第五期：内存数据库架构开发技术，10000元，通过TTS的总线架构技术讲解CTP那样的总线开发技术，包括重演、热备、负载均衡、最短路由等技术，内存计算架构在各行业的高性能通讯方面都可以应用，远不止金融交易领域。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;openctp公开课：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C语言0基础：以生动有趣的方式讲C语言基础性编程技术，重在兴趣培养和信心建立，11月13号开讲，通过腾讯会议开放式直播，课后会将录制视频放到&lt;a href=&#34;https://space.bilibili.com/549478063/video&#34;&gt;B站&lt;/a&gt;及&lt;a href=&#34;https://www.ixigua.com/home/4388848858576499/?source=pgc_author_profile&amp;amp;list_entrance=anyVideo&#34;&gt;西瓜&lt;/a&gt;上。&lt;/li&gt; &#xA; &lt;li&gt;C++语言0基础：以生动有趣的方式讲C++语言基础性编程技术。&lt;/li&gt; &#xA; &lt;li&gt;Python语言0基础：以生动有趣的方式讲Python语言基础性编程技术。&lt;/li&gt; &#xA; &lt;li&gt;Java语言0基础：以生动有趣的方式讲Java语言基础性编程技术。&lt;/li&gt; &#xA; &lt;li&gt;Go语言0基础：以生动有趣的方式讲Go语言基础性编程技术。&lt;/li&gt; &#xA; &lt;li&gt;Linux环境编程0基础：以生动有趣的方式讲Linux环境编程技术。&lt;/li&gt; &#xA; &lt;li&gt;金融业务、产品设计、软件测试0基础：这期课程主要为女生设计，相比编程，女生在金融领域可能更适合业务、产品与测试层面的工作，将来的职业发展空间也比较大。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;目录结构：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;6.3.15 ~ 6.6.7：开放平台标准模拟环境TTS系统的CTPAPI兼容接口，替换CTP官方动态库即可连接TTS系统。&lt;/li&gt; &#xA; &lt;li&gt;ctp2IB盈透：盈透证券的CTPAPI兼容接口。&lt;/li&gt; &#xA; &lt;li&gt;ctp2OST东方证券：东方证券的CTPAPI兼容接口。&lt;/li&gt; &#xA; &lt;li&gt;ctp2中泰证券XTP：中泰证券XTP柜台的CTPAPI兼容接口。&lt;/li&gt; &#xA; &lt;li&gt;ctp2华鑫证券STP：华鑫证券奇点柜台的CTPAPI兼容接口。&lt;/li&gt; &#xA; &lt;li&gt;ctp2QQ行情：腾讯行情的CTPAPI兼容接口。&lt;/li&gt; &#xA; &lt;li&gt;ctp2Sina行情：新浪行情的CTPAPI兼容接口。&lt;/li&gt; &#xA; &lt;li&gt;demo：CTPAPI开发相关的demo及工具源码。&lt;/li&gt; &#xA; &lt;li&gt;tools：生产力工具。&lt;/li&gt; &#xA; &lt;li&gt;docs：开发文档及行业资料。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;各套环境运行状态监控：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;监控页面地址：&lt;a href=&#34;http://121.37.80.177:50080/detail.html&#34;&gt;http://121.37.80.177:50080/detail.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;使用的技术：&lt;a href=&#34;https://github.com/krenx1983/openctp/tree/master/tools/Ping&#34;&gt;https://github.com/krenx1983/openctp/tree/master/tools/Ping&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;相关源码：&lt;a href=&#34;https://github.com/krenx1983/openctp/tree/master/demo/ctpping&#34;&gt;https://github.com/krenx1983/openctp/tree/master/demo/ctpping&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/148802378-2c9b3d3f-1959-4aab-851a-cf55666806d8.png&#34; alt=&#34;613dc093f916d1bf0764e5365f202ff&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;支持品种：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A股股票、债券、基金&lt;/li&gt; &#xA; &lt;li&gt;上期所等国内全品种期货、期权&lt;/li&gt; &#xA; &lt;li&gt;港股、美股全部股票合约模拟交易&lt;/li&gt; &#xA; &lt;li&gt;CME等外盘期货品种（即将上线）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;相对Simnow优点：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持负价交易（负价合约的合约号为MINUS，仅在7x24环境提供）。&lt;/li&gt; &#xA; &lt;li&gt;支持部分撮合、部分撤消。&lt;/li&gt; &#xA; &lt;li&gt;提供各交易所全商品模拟交易。&lt;/li&gt; &#xA; &lt;li&gt;关注“CTP开放平台”公众号即可自动得到一个7x24测试账号及仿真账号，回复“注册仿真”可再注册多个仿真账号，回复“注册24”可再注册多个7x24测试账号，且立即生效。&lt;/li&gt; &#xA; &lt;li&gt;QQ群546977604有问必答，解答CTP及各交易相关问题。&lt;/li&gt; &#xA; &lt;li&gt;真正的7x24，1秒钟都不停。&lt;/li&gt; &#xA; &lt;li&gt;除国内期货及期权外，还提供A股股票、债券、基金及港美股、外盘期货等全球市场模拟交易。&lt;/li&gt; &#xA; &lt;li&gt;支持市价单。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;热门文章：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484484&amp;amp;idx=1&amp;amp;sn=61385fada56d0e4ff620ce15b5dac864&amp;amp;chksm=c36bdfedf41c56fb52d5a200d01cf96be2f3c6578ede02571346717c821c769f192dae4f6a25&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;openctp欢迎你&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484581&amp;amp;idx=1&amp;amp;sn=c8858fdabf575675d6af6eec363c5fa8&amp;amp;chksm=c36bdf0cf41c561a5185e2d5a8f2e69e33f031395afb3c9f9780e6f73f7b1f755eba142c4737&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;openctp私募成长计划&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484610&amp;amp;idx=1&amp;amp;sn=b7317eb127d22fd52958a41e40121b06&amp;amp;chksm=c36bdf6bf41c567d4f3c16454fc1f5ff2a22f567d893ea35a2135c082b78ce5d01d944b086e4&amp;amp;token=55513683&amp;amp;lang=zh_CN#rd&#34;&gt;openctp培训与咨询服务&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484606&amp;amp;idx=1&amp;amp;sn=270ba6034d9e45334642236dc315b16e&amp;amp;chksm=c36bdf17f41c56011a5a3bf974022c13f53b21b0cad35d43ea85130748152b4f0739e02f7a0e&amp;amp;token=55513683&amp;amp;lang=zh_CN#rd&#34;&gt;开放腾讯行情CTPAPI接口源码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484094&amp;amp;idx=1&amp;amp;sn=97bd791622333886260bf767bea40db1&amp;amp;chksm=c36bd917f41c50016b676b5f5b11f899aea889cd9b10e6724c7fee0ad443f31351f87ff5a4d2&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;如何使用CTP开放平台提供的各项能力&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/453332727&#34;&gt;连接CTP开放平台报错4097的解决方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484049&amp;amp;idx=1&amp;amp;sn=ae3b799bc8097750b9bb50f4e1461c07&amp;amp;chksm=c36bd938f41c502e194d7135844db328694c9f791797de5dfc72f5290924359309114d4881e2&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;发布一批CTP链路检测工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484039&amp;amp;idx=1&amp;amp;sn=794a13777cb358e01c175439e022d99b&amp;amp;chksm=c36bd92ef41c5038224f3b38740b001ef3b36bec89b0ccede51a446039fd1fa679ff7b4bc3b5&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;发布一批行情显示工具（命令行版）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/367326886&#34;&gt;CTP开放平台支撑系统（TTS）架构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/360872258&#34;&gt;期货交易系统架构演变&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247483745&amp;amp;idx=1&amp;amp;sn=555d1c26d66f5888f9f043f15335929c&amp;amp;chksm=c36bdac8f41c53de648bb55ae139d6f205827937872a74d6781e55162a7aaae3a1a6ad5acd2c&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;内存数据库交易系统架构第一篇--概览篇&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247483797&amp;amp;idx=1&amp;amp;sn=29bba0e8b654ae6db1fc9723e740e88f&amp;amp;chksm=c36bda3cf41c532ae906599a609e6c16dd4700f2a880ab3249e92bf718587f0fced40de47b78&amp;amp;token=1790747698&amp;amp;lang=zh_CN#rd&#34;&gt;内存数据库交易系统架构第二篇--数据恢复机制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/430975046&#34;&gt;交易系统的“白”（一）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;撮合方式（同时支持做市与撮合）：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;撮合：完全由用户之间撮合，按价格优先、时间优先撮合成交。撮合模式的合约只有三个，合约代码分别为TEST、BTC、MINUS，其它合约均为做市模式。&lt;/li&gt; &#xA; &lt;li&gt;做市：Simnow用的就是做市模式，以实盘行情盘口做市成交，即高于叫卖价的多单立即成交，低于叫买价的空单立即成交，否则挂在队列中等行情符合条件的时候成交。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;部分成交、部分撤消：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;模拟撮合在做市处理时对成交数量作了一定的随机处理，可能一次全部成交，可能部分成交并且间隔1秒左右再次撮合，再次撮合的时候如果果盘口不符合成交条件则不会成交。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;开放平台仿真环境（交易时段与实盘一致）：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;交易前置 - tcp://121.36.146.182:20002&lt;/li&gt; &#xA; &lt;li&gt;行情前置 - tcp://121.36.146.182:20004（建议直接使用CTP实盘行情前置，行情前置均不校验密码）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;开放平台7x24环境（不间断轮播某天行情）：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;交易前置 - tcp://121.37.80.177:20002&lt;/li&gt; &#xA; &lt;li&gt;行情前置 - tcp://121.37.80.177:20004&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;开放平台VIP仿真环境（需要付费申请，提供更快的速度、更全的品种，具体&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzk0ODI0NDE2Ng==&amp;amp;mid=2247484339&amp;amp;idx=1&amp;amp;sn=3c56cb0b201d3635a67f40b78dd7ae98&amp;amp;chksm=c36bd81af41c510c8d8e2ab43396a2de2fc73432f23b3cdff46debb85ec1170856903717a23b&amp;amp;token=1217034697&amp;amp;lang=zh_CN#rd&#34;&gt;点这里&lt;/a&gt;）：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;交易前置 - tcp://42.192.226.242:20002&lt;/li&gt; &#xA; &lt;li&gt;行情前置 - 无（行情需要直连相应通道）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;模拟账号：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;扫扫下面的二维码，关注开放平台公众号，即可获得一个7x24账号及一个仿真账号，也可以回复&#34;注册24&#34;或&#34;注册仿真&#34;再申请新的模拟号，一个微信号最多可以申请3个7x24测试账号及3个仿真模拟账号，可以回复&#34;查询&#34;得到已注册的模拟账号列表。7x24与仿真环境独立结算，账号也是独立的，但是密码是同一个，包括vip环境的密码也是同一个，也就是一个微信号申请的所有账号都共用一个密码，可以使用快期等支持修改密码的软件修改任何一个模拟号密码即可。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/120095274-ad600a00-c157-11eb-8496-7d680bd1f39b.jpg&#34; alt=&#34;qrcode_for_gh_564e4bf4668c_258&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;CTP程序接入股票柜台：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;除提供开放平台模拟交易外，还提供使用CTP接口接入证券柜台的能力，可以进行股票、债券、逆回购、新股申购、融资融券、ETF期权等交易，同样使用CTP接口将证券柜台接口封装成跟CTP完全兼容的动态库，使得CTP程序无需任何修改，只更换CTP动态库即可接入证券柜台，目前已完成华鑫证券、中泰证券股票交易接入功能，同样发布了目前在用的四个CTPAPI版本，分别提供win32、win64、linux三套动态库。&lt;/p&gt; &#xA;&lt;p&gt;股票接入方式采用&lt;strong&gt;直连证券柜台&lt;/strong&gt;方式，不经过开放平台处理，因此需要向证券公司申请模拟账号。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;华鑫证券&lt;/strong&gt;，N视界模拟平台QQ客服群：860160807，加群验证信息填openctp（否则可能通过不了），模拟账号申请地址：&lt;a href=&#34;http://www.n-sight.com.cn&#34;&gt;http://www.n-sight.com.cn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;中泰证券&lt;/strong&gt;，XTP柜台QQ客服群：188500929，加群验证信息填openctp（否则可能通过不了），模拟账号申请地址：&lt;a href=&#34;https://xtp.zts.com.cn&#34;&gt;https://xtp.zts.com.cn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;已官方支持TTS通道（CTP开放平台）的产品：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vnpy.com/&#34;&gt;vn.py（知名Python量化交易客户端，支持全球市场交易）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/136988918-1159fc88-073e-4b6f-a8d6-3f33991e8a72.png&#34; alt=&#34;vnpy&#34; width=&#34;700&#34; height=&#34;400&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/people/mt5ctp&#34;&gt;MT5CTP（MT5软件，已支持国内A股、期货及期权交易，QQ群：967352413）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/136989596-b12d91e8-48a0-4b26-bcaf-fdfca52d962c.png&#34; alt=&#34;mt5ctp&#34; width=&#34;700&#34; height=&#34;400&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/krenx1983/TextTrader&#34;&gt;TextTrader（CTP开源命令行交易终端，支持A股、期货及期权交易）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/136989754-1f0130e6-5d75-427f-bbf3-7ed084b6eae1.png&#34; alt=&#34;texttrader&#34; width=&#34;700&#34; height=&#34;400&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/column/c_1338797723131740161&#34;&gt;WonderTrader（一个基于C++核心模块的，适应全市场全品种交易的，高效率、高可用的量化交易开发框架，QQ群：610730738）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/198839414-d72614d8-9752-497a-b9a9-19b38d3da326.png&#34; alt=&#34;WonderTrader&#34; width=&#34;700&#34; height=&#34;400&#34;&gt; &#xA;&lt;h3&gt;&lt;strong&gt;通过自己替换dll可接入TTS通道（CTP开放平台）的产品：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/376482285&#34;&gt;快期V3（CTP期货交易客户端）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/138928402-f7e12a28-50d3-457b-9c0a-32b356448913.png&#34; alt=&#34;快期V3&#34; width=&#34;700&#34; height=&#34;400&#34;&gt; - [快期V2（CTP期货交易客户端）](https://zhuanlan.zhihu.com/p/432252376) &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/148678947-b2a7ed9c-f77f-43d6-8e85-74b2c9ca4c44.png&#34; alt=&#34;快期V2&#34; width=&#34;700&#34; height=&#34;400&#34;&gt; - [TBTerminalCTP（交易开拓者）](https://zhuanlan.zhihu.com/p/437818698) &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/149624377-01c97148-9e34-4f2b-8bb3-c43b57340284.png&#34; alt=&#34;TBTerminal&#34; width=&#34;700&#34; height=&#34;400&#34;&gt; &#xA;&lt;h3&gt;&lt;strong&gt;QQ交流群：564385877&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/83346523/146651068-3c2b3401-8c87-4ff3-beb4-a86492ea6bef.png&#34; alt=&#34;QQ群二维码&#34; width=&#34;300&#34; height=&#34;300&#34;&gt; &#xA;&lt;h3&gt;&lt;strong&gt;特别说明：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;AuthCode、AppID认证信息任意填，不作校验&lt;/p&gt; &#xA;&lt;p&gt;Broker任意填，填什么就回什么&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;咨询服务：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;需要C/C++、Python、Java、Go、CTPAPI、交易系统等相关技术咨询服务的，请在openctp公众号回复”咨询“两个字。&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;招聘服务：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;需要C/C++、量化交易、互联网等方面的人才或职位请在openctp公众号回复“找工作”三个字，通过openctp推荐工作将免费得到openctp咨询服务（价值1000元/年）。&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;活动：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;openctp每个月至少会有一次粉丝线下活动，可以是吃饭、喝茶、徒步等等，想参加的请在openctp公众号回复“活动”两个字。&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;培训：&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;年轻时投资自己是最划算的，因为时间比任何东西都值钱，借别人的力量充实自己，在很短的时间内获得别人的经验值。&lt;/p&gt; &#xA;&lt;p&gt;&lt;u&gt;&lt;em&gt;本模拟平台不对模拟结果作任何保证，依据本平台测试结果进行实盘交易的后果完全由使用者自己承担。&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SuperIlu/DOjS</title>
    <updated>2022-11-20T01:31:19Z</updated>
    <id>tag:github.com,2022-11-20:/SuperIlu/DOjS</id>
    <link href="https://github.com/SuperIlu/DOjS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A DOS JavaScript Canvas with sound&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DOjS&lt;/h1&gt; &#xA;&lt;h2&gt;A DOS JavaScript Canvas with sound.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SuperIlu/DOjS&#34;&gt;DOjS&lt;/a&gt; is a JavaScript programming environment for systems running MS-DOS, &lt;a href=&#34;http://freedos.org/&#34;&gt;FreeDOS&lt;/a&gt; or any DOS based Windows (like 95, 98, ME). It features an integrated editor, graphics &amp;amp; sound output, mouse/keyboard/joystick input and more (see below). It was inspired by &lt;a href=&#34;https://processing.org/&#34;&gt;Processing&lt;/a&gt; which is described on &lt;a href=&#34;https://en.wikipedia.org/wiki/Processing_(programming_language)&#34;&gt;Wikipedia&lt;/a&gt; as:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Processing is an open-source graphical library and integrated development environment (IDE) / playground built for the electronic arts, new media art, and visual design communities with the purpose of teaching non-programmers the fundamentals of computer programming in a visual context.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;It also has a p5js compatibility mode where some of the functions of &lt;a href=&#34;https://p5js.org/&#34;&gt;p5js&lt;/a&gt; are available and scripts can have a similar structure to Processing sketches.&lt;/p&gt; &#xA;&lt;p&gt;You can type in a script with the builtin or your favorite text editor and then run it on a DOS command prompt.&lt;/p&gt; &#xA;&lt;p&gt;DOjS is pronounces like &lt;a href=&#34;https://en.wikipedia.org/wiki/Doge_(meme)&#34;&gt;doge&lt;/a&gt;, but ending with an &#34;s&#34;.&lt;/p&gt; &#xA;&lt;p&gt;DOjS was only possible due to the work of these people/projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mujs.com/&#34;&gt;MuJS&lt;/a&gt; JavaScript interpreter&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://liballeg.org/&#34;&gt;Allegro library&lt;/a&gt; and &lt;a href=&#34;https://github.com/msikma/allegro-4.2.2-xc&#34;&gt;Allegro XC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.delorie.com/djgpp/&#34;&gt;DJGPP&lt;/a&gt; from DJ Delorie and the &lt;a href=&#34;https://github.com/andrewwutw/build-djgpp&#34;&gt;Linux compile scripts&lt;/a&gt; by Andrew Wu.&lt;/li&gt; &#xA; &lt;li&gt;The people that contributed to &lt;a href=&#34;https://p5js.org/&#34;&gt;p5js&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The Glide source cleanup of &lt;a href=&#34;https://github.com/sezero/glide&#34;&gt;Ozkan Sezer&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://alpng.sourceforge.net/&#34;&gt;AllegroPNG&lt;/a&gt; PNG loader for Allegro&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dzcomm.sourceforge.net/&#34;&gt;DZCOMM&lt;/a&gt; COM port library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anrieff/libcpuid&#34;&gt;libcpuid&lt;/a&gt; for cpuid module&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://curl.se/&#34;&gt;curl&lt;/a&gt; and &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; for curl module&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sourceforge.net/projects/cylindrix/&#34;&gt;cylindrix&lt;/a&gt; for IPX module&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/memononen/nanosvg&#34;&gt;nanosvg&lt;/a&gt; for SVG loading&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stegu/perlin-noise&#34;&gt;noise&lt;/a&gt; for perlin noise generation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/codeplea/genann&#34;&gt;genann&lt;/a&gt; for neural network engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/index.html&#34;&gt;SQLite&lt;/a&gt; for sqlite module&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.watt-32.net/&#34;&gt;Watt32&lt;/a&gt; for TCP/IP networking&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kuba--/zip&#34;&gt;zip&lt;/a&gt; for ZIP file access&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://zlib.net/&#34;&gt;zlib&lt;/a&gt; for compression&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://keyj.emphy.de/nanojpeg/&#34;&gt;nanojpeg&lt;/a&gt; for JPEG loading&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitbank2/AnimatedGIF/&#34;&gt;AnimatedGIF&lt;/a&gt; for rendering GIF animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phoboslab/pl_mpeg&#34;&gt;PL_MPEG&lt;/a&gt; for mpeg1 decoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AndreRenaud/PDFGen&#34;&gt;pdfgen&lt;/a&gt; for PDF rendering.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;You can find me on &lt;a href=&#34;https://twitter.com/dec_hl&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://mastodon.social/@dec_hl&#34;&gt;Mastodon&lt;/a&gt; or in the &lt;a href=&#34;https://discord.gg/J7MUTap9fM&#34;&gt;DOjS Discord&lt;/a&gt; if you want...&lt;/p&gt; &#xA;&lt;h1&gt;Download and quick start&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can find binary releases on the &lt;a href=&#34;https://github.com/SuperIlu/DOjS/releases&#34;&gt;GitHub release page&lt;/a&gt;.&lt;/strong&gt; Just extract the contents of the archive and run &lt;code&gt;DOjS.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;DOjS runs in &lt;a href=&#34;https://www.dosbox.com/&#34;&gt;Dosbox&lt;/a&gt; and on real hardware or a virtual machine with MS-DOS, &lt;a href=&#34;https://www.freedos.org/&#34;&gt;FreeDOS&lt;/a&gt; or any DOS based Windows like Windows 95/98/ME. To use 3Dfx/Glide support you need a Voodoo card or &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/releases&#34;&gt;DOSBox-X&lt;/a&gt; (see below).&lt;/p&gt; &#xA;&lt;p&gt;If you run it on real hardware you need at least a &lt;strong&gt;80386 with 4MB&lt;/strong&gt;. I recommend a &lt;strong&gt;Pentium class machine (&amp;gt;= 100MHz) with at least 32MB RAM&lt;/strong&gt;. The example files run fine on an Athlon 1GHz and with 256MB RAM.&lt;/p&gt; &#xA;&lt;p&gt;The following hardware/functions are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;8/16/24 and 32 bit 2D graphics. On 24/32bit display modes alpha channel transparency is available.&lt;/li&gt; &#xA; &lt;li&gt;BMP, PCX, TGA and PNG image reading and writing, JPEG and SVG loading&lt;/li&gt; &#xA; &lt;li&gt;GRX font loading and rendering&lt;/li&gt; &#xA; &lt;li&gt;Keyboard input&lt;/li&gt; &#xA; &lt;li&gt;Mouse input&lt;/li&gt; &#xA; &lt;li&gt;Joystick/Joyport input&lt;/li&gt; &#xA; &lt;li&gt;File IO&lt;/li&gt; &#xA; &lt;li&gt;MIDI output&lt;/li&gt; &#xA; &lt;li&gt;WAV output&lt;/li&gt; &#xA; &lt;li&gt;Audio input/sampling&lt;/li&gt; &#xA; &lt;li&gt;Allegro 3D rendering (software)&lt;/li&gt; &#xA; &lt;li&gt;3dfx/Glide3 3D rendering output (hardware)&lt;/li&gt; &#xA; &lt;li&gt;p5js compatibility&lt;/li&gt; &#xA; &lt;li&gt;direct io-port access (inb, outb, etc)&lt;/li&gt; &#xA; &lt;li&gt;LPT or parallel port access (bi-directional)&lt;/li&gt; &#xA; &lt;li&gt;COM or serial port access&lt;/li&gt; &#xA; &lt;li&gt;IPX and TCP/IP networking&lt;/li&gt; &#xA; &lt;li&gt;ZIP file access&lt;/li&gt; &#xA; &lt;li&gt;GIF-Animation, FLC/FLI, MPEG1 or OggVorbis playback&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_003.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_010.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_019.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_034.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_004.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_013.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_025.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/gltixy.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_009.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_018.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/dojs_026.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/SuperIlu/DOjS/raw/master/images/ogl02.png&#34; alt=&#34;DOjS example&#34; width=&#34;200&#34;&gt; &#xA;&lt;h2&gt;A minimal script&lt;/h2&gt; &#xA;&lt;p&gt;You can find the following example in &lt;code&gt;examples/exampl.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;/*&#xA;** This function is called once when the script is started.&#xA;*/&#xA;function Setup() {&#xA;    pink = new Color(241, 66, 244, 255); // define the color pink&#xA;}&#xA;&#xA;/*&#xA;** This function is called repeatedly until ESC is pressed or Stop() is called.&#xA;*/&#xA;function Loop() {&#xA;    ClearScreen(EGA.BLACK);&#xA;    TextXY(SizeX() / 2, SizeY() / 2, &#34;Hello World!&#34;, pink, NO_COLOR);&#xA;&#xA;    TextXY(10, 10, &#34;rate=&#34; + GetFramerate(), EGA.BLACK, EGA.LIGHT_BLUE);&#xA;}&#xA;&#xA;/*&#xA;** This function is called on any input.&#xA;*/&#xA;function Input(event) {&#xA;    str = JSON.stringify(event);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open this script with &lt;code&gt;DOjS.EXE examples\exampl.js&lt;/code&gt; or use &lt;code&gt;DOjS.EXE -r examples\exampl.js&lt;/code&gt; to run it without starting the integrated editor first. If the script does not exist the editor loads the template for a new script.&lt;/p&gt; &#xA;&lt;h2&gt;p5js compatibility&lt;/h2&gt; &#xA;&lt;p&gt;If you want to write scripts using the syntax of &lt;a href=&#34;https://p5js.org/&#34;&gt;p5js&lt;/a&gt; you need to use &lt;code&gt;Include(&#39;p5&#39;);&lt;/code&gt; as first line of your script. You can find the following example in &lt;code&gt;examples/examplp5.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Include(&#39;p5&#39;);&#xA;&#xA;/*&#xA;** This function is called once when the script is started.&#xA;*/&#xA;function setup() {&#xA;    pink = color(241, 66, 244); // define the color pink&#xA;}&#xA;&#xA;/*&#xA;** This function is called repeatedly until ESC is pressed or Stop() is called.&#xA;*/&#xA;function draw() {&#xA;    background(EGA.BLACK);&#xA;    stroke(pink);&#xA;    fill(pink);&#xA;    text(&#34;Hello p5js World!&#34;, width / 2, height / 2);&#xA;&#xA;    stroke(EGA.LIGHT_BLUE);&#xA;    fill(EGA.LIGHT_BLUE);&#xA;    text(&#34;rate=&#34; + getFrameRate(), 10, 10);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More info can be found at the end of this README in the section &lt;strong&gt;Usage&lt;/strong&gt; and in the API documentation. Take a look at the &lt;code&gt;examples/&lt;/code&gt; as well.&lt;/p&gt; &#xA;&lt;h2&gt;additional packages&lt;/h2&gt; &#xA;&lt;p&gt;DOjS has a very simple integrated package manager (DPM). It can be started with &lt;code&gt;DPM.BAT&lt;/code&gt;. A working packet driver is needed to connect to the package index and download packages using HTTPS. Packages (and the package index) are fetched from the &lt;a href=&#34;https://github.com/SuperIlu/DOjSHPackages&#34;&gt;DOjS/jSH package repository&lt;/a&gt;. Downloaded packages are put into &lt;code&gt;JSBOOT.ZIP&lt;/code&gt; in the &lt;code&gt;PACKAGE/&lt;/code&gt; directory. Feel free to submit any packages you want to include in that repository using a pull request. DPM commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;installed - list installed packages.&lt;/li&gt; &#xA; &lt;li&gt;remove - remove package.&lt;/li&gt; &#xA; &lt;li&gt;fetch - fetch package index from server.&lt;/li&gt; &#xA; &lt;li&gt;install - install a package (and its dependencies) from package index.&lt;/li&gt; &#xA; &lt;li&gt;list - list available packages in index.&lt;/li&gt; &#xA; &lt;li&gt;setindex - set index URL (HTTP or HTTPS).&lt;/li&gt; &#xA; &lt;li&gt;help - this help.;&lt;/li&gt; &#xA; &lt;li&gt;quit - exit dpm.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3dfx/Glide support&lt;/h2&gt; &#xA;&lt;p&gt;DOjS supports most of the Glide3 API that was used with &lt;a href=&#34;https://en.wikipedia.org/wiki/3dfx_Interactive&#34;&gt;3dfx&lt;/a&gt; accelerator cards. The following hardware is supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Voodoo 1 [tested]&lt;/li&gt; &#xA; &lt;li&gt;Voodoo 2 [tested]&lt;/li&gt; &#xA; &lt;li&gt;Voodoo 3 [tested]&lt;/li&gt; &#xA; &lt;li&gt;Voodoo 4 [tested by &lt;a href=&#34;https://twitter.com/tunguska82&#34;&gt;tunguska&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Voodoo 5 [tested by &lt;a href=&#34;https://twitter.com/tunguska82&#34;&gt;tunguska&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Voodoo Rush (all versions) [tested]&lt;/li&gt; &#xA; &lt;li&gt;Voodoo Banshee (PCI and AGP) [tested]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally you can use &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/releases&#34;&gt;DOSBox-X&lt;/a&gt; which emulates a Voodoo 1 card. Glide functions can be found in the 3dfx-module in the documentation, Javascript support functions have a &#34;FX&#34; prefix, all native functions are prefixed with &#34;fx&#34;. Detailed Glide3-API documentation can be found on the internet, e.g. on &lt;a href=&#34;http://falconfly.3dfx.pl/reference.htm&#34;&gt;FalconFly Central&lt;/a&gt;. &lt;strong&gt;Make sure you grab the Glide3 SDK and not Glide2!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use the included DOS version of &lt;code&gt;TEXUS.EXE&lt;/code&gt; to convert bitmaps to &lt;code&gt;3df&lt;/code&gt; texture files that can be loaded as textures.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;!!! Attention !!!&lt;/strong&gt; 3dfx/Glide3 support ONLY works in plain DOS, NOT in the DOS/command window of Windows 9x! Be sure to always boot into a pure DOS prompt before trying to use any of the fx-functions! Before using 3dfx/Glide3 support you need to copy the appropriate &lt;code&gt;GLIDE3X.DXE&lt;/code&gt; into the same directory as &lt;code&gt;DOJS.EXE&lt;/code&gt;. You can do so by using the &lt;code&gt;V_XXX.BAT&lt;/code&gt; scripts in the distribution ZIP archive.&lt;/p&gt; &#xA;&lt;h1&gt;Compilation&lt;/h1&gt; &#xA;&lt;p&gt;You can compile DOjS on any modern Linux (the instructions below are for Debian based distributions) or on Windows 10 using Windows Subsystem for Linux (WSL). Setup Windows Subsystem for Linux (WSL) according to &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;this&lt;/a&gt; guide (I used Ubuntu 18.04 LTS).&lt;/p&gt; &#xA;&lt;h2&gt;Preparation&lt;/h2&gt; &#xA;&lt;p&gt;Build and install DJGPP 7.2.0 according to &lt;a href=&#34;https://github.com/andrewwutw/build-djgpp&#34;&gt;this&lt;/a&gt; guide. Install &lt;a href=&#34;https://github.com/nvm-sh/nvm#installing-and-updating&#34;&gt;NVM&lt;/a&gt;. I used the following command lines to update/install my dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get dist-upgrade&#xA;sudo apt-get install bison flex curl gcc g++ make texinfo zlib1g-dev g++ unzip htop screen git bash-completion build-essential zip dos2unix python3&#xA;nvm install node&#xA;npm install -g jsdoc&#xA;npm install -g better-docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the following commands to build and install DJGPP to &lt;code&gt;/home/ilu/djgpp&lt;/code&gt;.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/andrewwutw/build-djgpp.git&#xA;cd build-djgpp&#xA;export DJGPP_PREFIX=/home/ilu/djgpp&#xA;./build-djgpp.sh 7.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting &amp;amp; Compiling DOjS&lt;/h2&gt; &#xA;&lt;p&gt;Open a shell/command line in the directory where you want the source to reside.&lt;/p&gt; &#xA;&lt;p&gt;Checkout DOjS from Github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/SuperIlu/DOjS.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure DJGPP is in your PATH and DJDIR is set (e.g. I have these lines in my ~/.profile):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# DJGPP&#xA;export PATH=/home/ilu/djgpp/bin/:/home/ilu/djgpp/i586-pc-msdosdjgpp/bin/:$PATH&#xA;export DJDIR=/home/ilu/djgpp/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you used Windows-Tools to check out DOjS from git you may need to fix the newlines of the shell scripts by using &lt;code&gt;make fixnewlines&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now you are ready to compile DOjS with &lt;code&gt;make clean all&lt;/code&gt;. This might take some time as the dependencies are quite large. &lt;code&gt;make distclean&lt;/code&gt; will clean dependencies as well. &lt;code&gt;make zip&lt;/code&gt; will create the distribution ZIP and &lt;code&gt;make doc&lt;/code&gt; will re-create the HTML help.&lt;/p&gt; &#xA;&lt;h1&gt;Notes&lt;/h1&gt; &#xA;&lt;h2&gt;3dfx/Glide3&lt;/h2&gt; &#xA;&lt;p&gt;In order to compile DOjS you need Glide3 includes and binaries. The ones included with the DOjS sources were created using my &lt;a href=&#34;https://github.com/SuperIlu/glide&#34;&gt;glide repository&lt;/a&gt; on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;GRX Fonts&lt;/h2&gt; &#xA;&lt;p&gt;DOjS comes pre-bundled with all fonts included with GRX (files ending with &#34;.FNT&#34;). If you want/need additional fonts you can find a very simple tool to convert TTF/BDF fonts to GRX format &lt;a href=&#34;https://github.com/SuperIlu/GrxFntConv&#34;&gt;here&lt;/a&gt;. Results may vary... A minimal version capable of converting BDF fonts to FNT is included with DOjS (&lt;code&gt;FONTCONV.EXE&lt;/code&gt;). You can find information on how to convert a TTF to BDF &lt;a href=&#34;https://learn.adafruit.com/custom-fonts-for-pyportal-circuitpython-display/conversion&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Live coding&lt;/h2&gt; &#xA;&lt;p&gt;If you run DOjS on a computer with network interface and a matching packet driver you can (sort of) live code using the &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VSCode&lt;/a&gt; extension in &lt;code&gt;vscode\livedojs-0.0.4.vsix&lt;/code&gt;. You need to start &lt;code&gt;DOjS -r examples/websvr.js&lt;/code&gt; and then set the IP address in VSCode using the command &lt;code&gt;DOjS: Set hostname&lt;/code&gt;. Live coding sketches must look like below to work:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// livedojs&#xA;exports.Setup = function () {&#xA;}&#xA;&#xA;exports.Loop = function () {&#xA;    ClearScreen(EGA.BLACK);&#xA;&#xA;    FilledBox(10, 10, 70, 20, EGA.GREEN);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The first line must be exactly &lt;code&gt;// livedojs&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The file must end with &lt;code&gt;.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Only &lt;code&gt;Setup()&lt;/code&gt; and &lt;code&gt;Loop()&lt;/code&gt; are available, &lt;code&gt;Input()&lt;/code&gt; does not work.&lt;/li&gt; &#xA; &lt;li&gt;p5js compatibility does not work, you must code using DOjS native API&lt;/li&gt; &#xA; &lt;li&gt;If the hostname is set the sketch will be automatically be uploaded on save&lt;/li&gt; &#xA; &lt;li&gt;The sketch can be uploaded using &lt;code&gt;DOjS: Upload sketch&lt;/code&gt; manually&lt;/li&gt; &#xA; &lt;li&gt;you can access the JSLOG.TXT of the running server by using &lt;code&gt;DOjS: get logfile&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;History&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/SuperIlu/DOjS/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; for the projects history.&lt;/p&gt; &#xA;&lt;h1&gt;Planed work&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stack trace selector in the editor&lt;/li&gt; &#xA; &lt;li&gt;TCP/IP remote logging/debugging.&lt;/li&gt; &#xA; &lt;li&gt;add FFT module&lt;/li&gt; &#xA; &lt;li&gt;Add ZIP file functions (e.g. &lt;a href=&#34;https://libzip.org/users/&#34;&gt;https://libzip.org/users/&lt;/a&gt; or &lt;a href=&#34;https://github.com/kuba--/zip&#34;&gt;https://github.com/kuba--/zip&lt;/a&gt;). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Implement 3df file loading from ZIP&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;add/implement some more math functions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mathjs.org/&#34;&gt;https://mathjs.org/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/evanw/lightgl.js&#34;&gt;https://github.com/evanw/lightgl.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Fix bugs!&lt;/li&gt; &#xA; &lt;li&gt;Anything fun... &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.speech.cs.cmu.edu/flite/&#34;&gt;http://www.speech.cs.cmu.edu/flite/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://speect.sourceforge.net/&#34;&gt;http://speect.sourceforge.net/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://espeak.sourceforge.net/&#34;&gt;http://espeak.sourceforge.net/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Licenses&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/SuperIlu/DOjS/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for all licenses.&lt;/p&gt; &#xA;&lt;h2&gt;DOjS&lt;/h2&gt; &#xA;&lt;p&gt;All code from me is released under &lt;strong&gt;MIT license&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;MuJS&lt;/h2&gt; &#xA;&lt;p&gt;MuJS is released under &lt;strong&gt;ISC license&lt;/strong&gt;. See &lt;em&gt;COPYING&lt;/em&gt; in the MuJS folder for details.&lt;/p&gt; &#xA;&lt;h2&gt;Allegro&lt;/h2&gt; &#xA;&lt;p&gt;Allegro 4 is released under the &lt;strong&gt;Giftware license&lt;/strong&gt; (&lt;a href=&#34;https://liballeg.org/license.html&#34;&gt;https://liballeg.org/license.html&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;GRX fonts&lt;/h2&gt; &#xA;&lt;p&gt;The GRX fonts are under &lt;strong&gt;MIT and other licenses&lt;/strong&gt;. See copying.grx in &lt;code&gt;LICENSE&lt;/code&gt; for details. The converted fonts from the Linux Font Project are in the public domain.&lt;/p&gt; &#xA;&lt;h2&gt;IPX and dosbuffer sub-system&lt;/h2&gt; &#xA;&lt;p&gt;This code is taken from the game &lt;a href=&#34;https://www.allegro.cc/depot/Cylindrix&#34;&gt;Cylindrix&lt;/a&gt; by Hotwarez LLC, Goldtree Enterprises. It was &lt;a href=&#34;https://sourceforge.net/projects/cylindrix/&#34;&gt;released&lt;/a&gt; under &lt;strong&gt;GPLv2&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;CWSDPMI.EXE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://sandmann.dotster.com/cwsdpmi/&#34;&gt;CWSDPMI&lt;/a&gt; DPMI host is licensed under &lt;strong&gt;GPL&lt;/strong&gt;. The documentation states:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The files in this binary distribution may be redistributed under the GPL (with source) or without the source code provided.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;3dfx/Glide3&lt;/h2&gt; &#xA;&lt;p&gt;The code is licensed under &#34;3DFX GLIDE Source Code General Public License&#34;. Source code is available at &lt;a href=&#34;https://github.com/SuperIlu/glide&#34;&gt;https://github.com/SuperIlu/glide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;DZComm&lt;/h2&gt; &#xA;&lt;p&gt;DZComm serial library is release as &lt;strong&gt;gift-ware&lt;/strong&gt;. See &lt;em&gt;readme.txt&lt;/em&gt; in the dzcomm folder for details.&lt;/p&gt; &#xA;&lt;h2&gt;Logo&lt;/h2&gt; &#xA;&lt;p&gt;The DOjS logo dog was downloaded from &lt;a href=&#34;https://www.pexels.com/photo/animal-cachorro-doge-pug-1753686/&#34;&gt;Pexels&lt;/a&gt; and kindly provided by Iago Garcia Garcia.&lt;/p&gt; &#xA;&lt;p&gt;The logo font is &lt;a href=&#34;https://www.fontsquirrel.com/fonts/comic-relief&#34;&gt;Comic relief&lt;/a&gt; by Jeff Davis provided under &lt;strong&gt;SIL OPEN FONT LICENSE Version 1.1&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;WAVs&lt;/h2&gt; &#xA;&lt;p&gt;All WAV files were downloaded from &lt;a href=&#34;https://bigsoundbank.com/&#34;&gt;BigSoundBank&lt;/a&gt; and are licensed under &lt;a href=&#34;https://bigsoundbank.com/droit.html&#34;&gt;WTFPL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bigsoundbank.com/detail-0283-song-of-rooster.html&#34;&gt;https://bigsoundbank.com/detail-0283-song-of-rooster.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bigsoundbank.com/detail-1102-bell-bike-5.html&#34;&gt;https://bigsoundbank.com/detail-1102-bell-bike-5.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bigsoundbank.com/detail-1023-explosion-far-away.html&#34;&gt;https://bigsoundbank.com/detail-1023-explosion-far-away.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MIDs&lt;/h2&gt; &#xA;&lt;p&gt;The MIDI files were downloaded from the &lt;a href=&#34;https://github.com/freedoom/freedoom&#34;&gt;FreeDOOM&lt;/a&gt; project and are licensed under &lt;a href=&#34;https://github.com/freedoom/freedoom/raw/master/COPYING.adoc&#34;&gt;this&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;h2&gt;p5js and examples&lt;/h2&gt; &#xA;&lt;p&gt;p5js is is released under &lt;strong&gt;LGPL&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The examples are licensed under a &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;zlib&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.zlib.net/&#34;&gt;zlib&lt;/a&gt; is released under &lt;a href=&#34;http://www.zlib.net/zlib_license.html&#34;&gt;zlib license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;alpng&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2006 Michal Molhanec&lt;/p&gt; &#xA;&lt;p&gt;This software is provided &#39;as-is&#39;, without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.&lt;/p&gt; &#xA;&lt;p&gt;Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This notice may not be removed or altered from any source distribution.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;zip code&lt;/h2&gt; &#xA;&lt;p&gt;See UNLICENSE in zip directory.&lt;/p&gt; &#xA;&lt;h2&gt;WATTCP&lt;/h2&gt; &#xA;&lt;p&gt;See manual.txt in watt32 directory.&lt;/p&gt; &#xA;&lt;h2&gt;OpenSSL&lt;/h2&gt; &#xA;&lt;p&gt;The OpenSSL toolkit stays under a double license, i.e. both the conditions of the OpenSSL License and the original SSLeay license apply to the toolkit.&lt;/p&gt; &#xA;&lt;h2&gt;cURL&lt;/h2&gt; &#xA;&lt;p&gt;See COPYING in curl directory.&lt;/p&gt; &#xA;&lt;h2&gt;genann&lt;/h2&gt; &#xA;&lt;p&gt;See LICENSE in neural.dxelib.&lt;/p&gt; &#xA;&lt;h2&gt;sqlite&lt;/h2&gt; &#xA;&lt;p&gt;See LICENSE.md in sqlite.dxelib.&lt;/p&gt; &#xA;&lt;h2&gt;libcpuid&lt;/h2&gt; &#xA;&lt;p&gt;See COPYING in cpuid.dxelib.&lt;/p&gt; &#xA;&lt;h2&gt;nanosvg&lt;/h2&gt; &#xA;&lt;p&gt;See LICENSE.txt in nanosvg.dxelib.&lt;/p&gt; &#xA;&lt;h2&gt;noise&lt;/h2&gt; &#xA;&lt;p&gt;See LICENSE.md in noise.dxelib.&lt;/p&gt; &#xA;&lt;h2&gt;nanojpeg&lt;/h2&gt; &#xA;&lt;p&gt;See nanojpeg.c in jpeg.dxelib.&lt;/p&gt; &#xA;&lt;h2&gt;nanojpeg&lt;/h2&gt; &#xA;&lt;p&gt;See LICENSE in gifanim.dxelib.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Command line&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: DOjS.EXE [&amp;lt;flags&amp;gt;] &amp;lt;script&amp;gt; [script parameters]&#xA;    -r             : Do not invoke the editor, just run the script.&#xA;    -l             : Use 50-line mode in the editor.&#xA;    -w &amp;lt;width&amp;gt;     : Screen width: 320 or 640, Default: 640.&#xA;    -b &amp;lt;bpp&amp;gt;       : Bit per pixel:8, 16, 24, 32. Default: 32.&#xA;    -s             : No wave sound.&#xA;    -f             : No FM sound.&#xA;    -a             : Disable alpha (speeds up rendering).&#xA;    -x             : Allow raw disk write (CAUTION!)&#xA;    -t             : Disable TCP-stack&#xA;    -n             : Disable JSLOG.TXT.&#xA;    -j &amp;lt;file&amp;gt;      : Redirect JSLOG.TXT to &amp;lt;file&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;dojs.ini&lt;/h2&gt; &#xA;&lt;p&gt;All command line options can also be provided in &lt;code&gt;dojs.ini&lt;/code&gt; (which is read at startup from the current directory). See the included example for details.&lt;/p&gt; &#xA;&lt;h2&gt;Editor keys&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;    F1        : Open/Close help&#xA;    SHIFT-F1  : Function context help&#xA;    F3        : Save script&#xA;    F4        : Run script&#xA;    F7        : Find text&#xA;    F9        : Show/Close logfile&#xA;    F10       : Quit&#xA;&#xA;    Shift-F4       : Truncate logfile and run script&#xA;    Shift-F7       : Find again&#xA;    CTRL-D         : Delete current line&#xA;    SHIFT+Movement : Select text, releasing SHIFT deselects&#xA;    CTRL-C         : Copy selection&#xA;    CTRL-X         : Cut selection&#xA;    CTRL-V         : Paste&#xA;    CTRL-LEFT      : Previous word&#xA;    CTRL-RIGHT     : Next word&#xA;    CTRL/PAGE-UP   : One page up&#xA;    CTRL/PAGE-DOWN : One page down&#xA;    HOME           : Go to start of line&#xA;    END            : Go to end of line&#xA;    CTRL-HOME      : Go to start of line&#xA;    CTRL-END       : Go to end of line&#xA;    TAB            : Insert spaces until next TAB-stop at cursor&#xA;    SHIFT-TAB      : Reduce indentation of line&#xA;&#xA;    TAB size is 4.&#xA;    The help viewer will remember the current position.&#xA;&#xA;    The logfile can be truncated by pressing DEL in the log viewer.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scripts and resources&lt;/h2&gt; &#xA;&lt;p&gt;Scripts, as well as resources can either be stored in the file system or in ZIP files. To load data from a zip file the format is &lt;code&gt;&amp;lt;ZIP filename&amp;gt;=&amp;lt;ZIP entry name&amp;gt;&lt;/code&gt; (e.g. &lt;code&gt;data.zip=mypic.bmp&lt;/code&gt;). DOjS can be started with a script, a script in a ZIP file or no parameters. If the script was loaded from a ZIP file the running script can obtain resources from the same ZIP file by using &lt;code&gt;ZipPrefix()&lt;/code&gt; to obtain paths refering to that ZIP. If the script was not started from a ZIP &lt;code&gt;ZipPrefix()&lt;/code&gt; just passes through the file name (thus loading the file from HDD). If no arameters are supplied DOjS will first try to load &lt;code&gt;&amp;lt;name of the EXE&amp;gt;.ZIP=MAIN.JS&lt;/code&gt; and then &lt;code&gt;JSBOOT.ZIP=MAIN.JS&lt;/code&gt;. Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DOJS.EXE -r script.js&lt;/code&gt; will start &lt;code&gt;script.js&lt;/code&gt; from the HDD, &lt;code&gt;ZipPrefix(&#34;pic.bmp&#34;)&lt;/code&gt; will yield &lt;code&gt;pic.bmp&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DOJS.EXE -r data.zip=script.js&lt;/code&gt; will start &lt;code&gt;script.js&lt;/code&gt; from the ZIP file &lt;code&gt;data.zip&lt;/code&gt;, &lt;code&gt;ZipPrefix(&#34;pic.bmp&#34;)&lt;/code&gt; will yield &lt;code&gt;data.zip=pic.bmp&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;HURTZ.EXE&lt;/code&gt; DOjS was renamed to &lt;code&gt;HURTZ.EXE&lt;/code&gt;. It will start &lt;code&gt;MAIN.JS&lt;/code&gt; from the ZIP file &lt;code&gt;HURTZ.ZIP&lt;/code&gt;, &lt;code&gt;ZipPrefix(&#34;pic.bmp&#34;)&lt;/code&gt; will yield &lt;code&gt;HURTZ.ZIP=pic.bmp&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DOJS.EXE&lt;/code&gt; The script was added to &lt;code&gt;JSBOOT.ZIP&lt;/code&gt;. DOjS will start &lt;code&gt;MAIN.JS&lt;/code&gt; from the ZIP file &lt;code&gt;JSBOOT.ZIP&lt;/code&gt;, &lt;code&gt;ZipPrefix(&#34;pic.bmp&#34;)&lt;/code&gt; will yield &lt;code&gt;JSBOOT.ZIP=pic.bmp&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the full API doc in the &lt;a href=&#34;http://htmlpreview.github.io/?https://github.com/SuperIlu/DOjS/raw/master/doc/html/index.html&#34;&gt;doc/html/&lt;/a&gt; directory. Go to the p5.js hompage for &lt;a href=&#34;https://p5js.org/reference/&#34;&gt;p5.js reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Script format&lt;/h2&gt; &#xA;&lt;p&gt;Scripts need to provide three functions: &lt;code&gt;Setup()&lt;/code&gt;, &lt;code&gt;Loop()&lt;/code&gt; and &lt;code&gt;Input()&lt;/code&gt;. Scripts are loaded and executed top-own. After that &lt;code&gt;Setup()&lt;/code&gt; is called once and then &lt;code&gt;Loop()&lt;/code&gt; repeatedly. &lt;code&gt;Input()&lt;/code&gt; is called whenever mouse of keyboard input happens.&lt;/p&gt; &#xA;&lt;h3&gt;Setup()&lt;/h3&gt; &#xA;&lt;p&gt;This function is called once at startup. It can initialize variables, setup hardware, etc.&lt;/p&gt; &#xA;&lt;h3&gt;Loop()&lt;/h3&gt; &#xA;&lt;p&gt;This function is called after setup repeatedly until &lt;code&gt;Stop()&lt;/code&gt; is called. After calling &lt;code&gt;Stop()&lt;/code&gt; the program ends when &lt;code&gt;Loop()&lt;/code&gt; exits.&lt;/p&gt; &#xA;&lt;h3&gt;Input(event)&lt;/h3&gt; &#xA;&lt;p&gt;This function is called whenever mouse/keyboard input happens.&lt;/p&gt; &#xA;&lt;h2&gt;IPX networking&lt;/h2&gt; &#xA;&lt;p&gt;DOjS supports IPX networking. Node addresses are arrays of 6 numbers between 0-255. Default socket number and broadcast address definitions can be found in &lt;code&gt;jsboot/ipx.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Drawing functions&lt;/h2&gt; &#xA;&lt;p&gt;See API doc for details.&lt;/p&gt; &#xA;&lt;h2&gt;Processing/p5js compatibility layer&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;Include(&#39;p5&#39;);&lt;/code&gt; as first line to your script. After that you have (limited) &lt;a href=&#34;https://p5js.org/reference/&#34;&gt;p5.js&lt;/a&gt; compatibility. Things that don&#39;t work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Anything 3D (objects, lights camera, etc)&lt;/li&gt; &#xA; &lt;li&gt;Key release events work different for Allegro and are simulated for p5js.&lt;/li&gt; &#xA; &lt;li&gt;Only simple vertices are supported.&lt;/li&gt; &#xA; &lt;li&gt;no DOM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Logfile&lt;/h2&gt; &#xA;&lt;p&gt;All output via &lt;code&gt;Print()&lt;/code&gt; and &lt;code&gt;Println()&lt;/code&gt; is sent to the file &lt;code&gt;JSLOG.TXT&lt;/code&gt;. You can use &lt;code&gt;Debug()&lt;/code&gt; instead and output is only generated when you set the global variable &lt;code&gt;DEBUG=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Remote logging/debugging&lt;/h2&gt; &#xA;&lt;p&gt;This feature allows you to debug a running script via IPX networking and a second machine. To use remote logging do the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Put both machines on the same network.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;DOJS.EXE -r JSBOOT\LOGVIEW.JS&lt;/code&gt; on one machine.&lt;/li&gt; &#xA; &lt;li&gt;Enable debugging by setting &lt;code&gt;DEBUG=true&lt;/code&gt; and enable remote debugging by &lt;code&gt;REMOTE_DEBUG=true&lt;/code&gt;. You can either modify &lt;code&gt;JSBOOT\FUNC.JS&lt;/code&gt; or change the variables at the very beginning of your script.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This works fine with two instances of DOSBox as well. Please note that if the log messages are transmitted to fast the receiving instance of DOJS might skip some of these when displaying.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coreutils/coreutils</title>
    <updated>2022-11-20T01:31:19Z</updated>
    <id>tag:github.com,2022-11-20:/coreutils/coreutils</id>
    <link href="https://github.com/coreutils/coreutils" rel="alternate"></link>
    <summary type="html">&lt;p&gt;upstream mirror&lt;/p&gt;&lt;hr&gt;&lt;p&gt;These are the GNU core utilities. This package is the union of the GNU fileutils, sh-utils, and textutils packages.&lt;/p&gt; &#xA;&lt;p&gt;Most of these programs have significant advantages over their Unix counterparts, such as greater speed, additional options, and fewer arbitrary limits.&lt;/p&gt; &#xA;&lt;p&gt;The programs that can be built with this package are:&lt;/p&gt; &#xA;&lt;p&gt;[ arch b2sum base32 base64 basename basenc cat chcon chgrp chmod chown chroot cksum comm coreutils cp csplit cut date dd df dir dircolors dirname du echo env expand expr factor false fmt fold groups head hostid hostname id install join kill link ln logname ls md5sum mkdir mkfifo mknod mktemp mv nice nl nohup nproc numfmt od paste pathchk pinky pr printenv printf ptx pwd readlink realpath rm rmdir runcon seq sha1sum sha224sum sha256sum sha384sum sha512sum shred shuf sleep sort split stat stdbuf stty sum sync tac tail tee test timeout touch tr true truncate tsort tty uname unexpand uniq unlink uptime users vdir wc who whoami yes&lt;/p&gt; &#xA;&lt;p&gt;See the file NEWS for a list of major changes in the current release.&lt;/p&gt; &#xA;&lt;p&gt;If you obtained this file as part of a &#34;git clone&#34;, then see the README-hacking file. If this file came to you as part of a tar archive, then see the file INSTALL for general compilation and installation instructions, or README-install for system and coreutils specific instructions.&lt;/p&gt; &#xA;&lt;p&gt;Like the rest of the GNU system, these programs mostly conform to POSIX, with BSD and other extensions. For closer conformance, or conformance to a particular POSIX version, set the POSIXLY_CORRECT and the _POSIX2_VERSION environment variables, as described in the documentation under &#34;Standards conformance&#34;.&lt;/p&gt; &#xA;&lt;p&gt;The ls, dir, and vdir commands are all separate executables instead of one program that checks argv[0] because people often rename these programs to things like gls, gnuls, l, etc. Renaming a program file shouldn&#39;t affect how it operates, so that people can get the behavior they want with whatever name they want.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to Paul Eggert, Brian Matthews, Bruce Evans, Karl Berry, Kaveh Ghazi, and François Pinard for help with debugging and porting these programs. Many thanks to all of the people who have taken the time to submit problem reports and fixes. All contributed changes are attributed in the commit logs.&lt;/p&gt; &#xA;&lt;p&gt;And thanks to the following people who have provided accounts for portability testing on many different types of systems: Bob Proulx, Christian Robert, François Pinard, Greg McGary, Harlan Stenn, Joel N. Weber, Mark D. Roth, Matt Schalit, Nelson H. F. Beebe, Réjean Payette, Sam Tardieu.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to Michael Stone for inflicting test releases of this package on Debian&#39;s unstable distribution, and to all the kind folks who used that distribution and found and reported bugs.&lt;/p&gt; &#xA;&lt;p&gt;Note that each man page is now automatically generated from a template and from the corresponding --help usage message. Patches to the template files (man/*.x) are welcome. However, the authoritative documentation is in texinfo form in the doc directory.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Feature requests:&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to add a new feature, please try to get some sort of consensus that it is a worthwhile change. One way to do that is to send mail to &lt;a href=&#34;mailto:coreutils@gnu.org&#34;&gt;coreutils@gnu.org&lt;/a&gt; including as much description and justification as you can. Based on the feedback that generates, you may be able to convince us that it&#39;s worth adding. Please also consult the list of previously discussed but ultimately rejected feature requests at: &lt;a href=&#34;https://www.gnu.org/software/coreutils/rejected_requests.html&#34;&gt;https://www.gnu.org/software/coreutils/rejected_requests.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Reporting bugs:&lt;/h2&gt; &#xA;&lt;p&gt;Send bug reports, questions, comments, etc. to &lt;a href=&#34;mailto:bug-coreutils@gnu.org&#34;&gt;bug-coreutils@gnu.org&lt;/a&gt;. To suggest a patch, see the files README-hacking and HACKING for tips.&lt;/p&gt; &#xA;&lt;p&gt;All of these programs except &#39;test&#39; recognize the &#39;--version&#39; option. When reporting bugs, please include in the subject line both the package name/version and the name of the program for which you found a problem.&lt;/p&gt; &#xA;&lt;p&gt;If you have a problem with &#39;sort&#39;, try running &#39;sort --debug&#39;, as it can often help find and fix problems without having to wait for an answer to a bug report. If the debug output does not suffice to fix the problem on your own, please compress and attach it to the rest of your bug report.&lt;/p&gt; &#xA;&lt;p&gt;IMPORTANT: if you take the time to report a test failure, please be sure to include the output of running &#39;make check&#39; in verbose mode for each failing test. For example, if the test that fails is tests/df/df-P.sh, then you would run this command:&lt;/p&gt; &#xA;&lt;p&gt;make check TESTS=tests/df/df-P.sh VERBOSE=yes SUBDIRS=. &amp;gt;&amp;gt; log 2&amp;gt;&amp;amp;1&lt;/p&gt; &#xA;&lt;p&gt;For some tests, you can get even more detail by adding DEBUG=yes. Then include the contents of the file &#39;log&#39; in your bug report.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;There are many tests, but nowhere near as many as we need. Additions and corrections are very welcome.&lt;/p&gt; &#xA;&lt;p&gt;If you see a problem that you&#39;ve already reported, feel free to re-report it -- it won&#39;t bother us to get a reminder. Besides, the more messages we get regarding a particular problem the sooner it&#39;ll be fixed -- usually. If you sent a complete patch and, after a couple weeks you haven&#39;t received any acknowledgement, please ping us. A complete patch includes a well-written ChangeLog entry, unified (diff -u format) diffs relative to the most recent test release (or, better, relative to the latest sources in the public repository), an explanation for why the patch is necessary or useful, and if at all possible, enough information to reproduce whatever problem prompted it. Plus, you&#39;ll earn lots of karma if you include a test case to exercise any bug(s) you fix. Here are instructions for checking out the latest development sources:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://savannah.gnu.org/git/?group=coreutils&#34;&gt;https://savannah.gnu.org/git/?group=coreutils&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For general documentation on the coding and usage standards this distribution follows, see the GNU Coding Standards at: &lt;a href=&#34;https://www.gnu.org/prep/standards/&#34;&gt;https://www.gnu.org/prep/standards/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For any copyright year range specified as YYYY-ZZZZ in this package note that the range specifies every single year in that closed interval.&lt;/p&gt; &#xA;&lt;p&gt;========================================================================&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 1998-2022 Free Software Foundation, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts. A copy of the license is included in the &#34;GNU Free Documentation License&#34; file as part of this distribution.&lt;/p&gt;</summary>
  </entry>
</feed>