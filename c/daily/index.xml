<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-13T01:31:57Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gojue/ecapture</title>
    <updated>2023-02-13T01:31:57Z</updated>
    <id>tag:github.com,2023-02-13:/gojue/ecapture</id>
    <link href="https://github.com/gojue/ecapture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;capture SSL/TLS text content without CA cert using eBPF. supports Linux/Android x86_64/Aarch64.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/images/ecapture-logo-400x400.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-13-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/README_CN.md&#34;&gt;中文介绍&lt;/a&gt; | English&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gojue/ecapture&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/gojue/ecapture.svg?label=Stars&amp;amp;logo=github&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/gojue/ecapture?label=Forks&amp;amp;logo=github&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture/actions/workflows/code-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/gojue/ecapture/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/gojue/ecapture?display_name=tag&amp;amp;include_prereleases&amp;amp;sort=semver&#34; alt=&#34;Github Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;eCapture(旁观者): capture SSL/TLS text content without CA cert Using eBPF.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Supports Linux/Android kernel versions x86_64 4.18 and above, &lt;strong&gt;aarch64 5.5&lt;/strong&gt; and above. Does not support Windows and macOS system.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;How eCapture works&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/images/how-ecapture-works.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SSL/TLS text context capture, support openssl\libressl\boringssl\gnutls\nspr(nss) libraries.&lt;/li&gt; &#xA; &lt;li&gt;bash audit, capture bash command for Host Security Audit.&lt;/li&gt; &#xA; &lt;li&gt;mysql query SQL audit, support mysqld 5.6\5.7\8.0, and mariadDB.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;eCapture Architecture&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/images/ecapture-architecture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;eCapture User Manual&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CoDIjEQCvvA&#34; title=&#34;eCapture User Manual&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/images/ecapture-user-manual.png&#34; alt=&#34;eCapture User Manual&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;h2&gt;use ELF binary file&lt;/h2&gt; &#xA;&lt;p&gt;Download ELF zip file &lt;a href=&#34;https://github.com/gojue/ecapture/releases&#34;&gt;release&lt;/a&gt; , unzip and use by command &lt;code&gt;./ecapture --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux kernel version &amp;gt;= 4.18 is required.&lt;/li&gt; &#xA; &lt;li&gt;Enable BTF &lt;a href=&#34;https://www.kernel.org/doc/html/latest/bpf/btf.html&#34;&gt;BPF Type Format (BTF)&lt;/a&gt; (Optional, 2022-04-17)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command line options&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Need ROOT permission.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;eCapture search &lt;code&gt;/etc/ld.so.conf&lt;/code&gt; file default, to search load directories of &lt;code&gt;SO&lt;/code&gt; file, and search &lt;code&gt;openssl&lt;/code&gt; shard libraries location. or you can use &lt;code&gt;--libssl&lt;/code&gt; flag to set shard library path.&lt;/p&gt; &#xA;&lt;p&gt;If target program is compile statically, you can set program path as &lt;code&gt;--libssl&lt;/code&gt; flag value directly。&lt;/p&gt; &#xA;&lt;h3&gt;Pcapng result&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;./ecapture tls -i eth0 -w pcapng -p 443&lt;/code&gt; capture plaintext packets save as pcapng file, use &lt;code&gt;Wireshark&lt;/code&gt; read it directly.&lt;/p&gt; &#xA;&lt;h3&gt;plaintext result&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;./ecapture tls&lt;/code&gt; will capture all plaintext context ,output to console, and capture &lt;code&gt;Master Secret&lt;/code&gt; of &lt;code&gt;openssl TLS&lt;/code&gt; save to &lt;code&gt;ecapture_masterkey.log&lt;/code&gt;. You can also use &lt;code&gt;tcpdump&lt;/code&gt; to capture raw packet,and use &lt;code&gt;Wireshark&lt;/code&gt; to read them with &lt;code&gt;Master Secret&lt;/code&gt; settings.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;check your server BTF config：&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cfc4n@vm-server:~$# uname -r&#xA;4.18.0-305.3.1.el8.x86_64&#xA;cfc4n@vm-server:~$# cat /boot/config-`uname -r` | grep CONFIG_DEBUG_INFO_BTF&#xA;CONFIG_DEBUG_INFO_BTF=y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;tls command&lt;/h3&gt; &#xA;&lt;p&gt;capture tls text context. Step 1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./ecapture tls --hex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Step 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl https://github.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;libressl&amp;amp;boringssl&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# for installed libressl, libssl.so.52 is the dynamic ssl lib&#xA;vm@vm-server:~$ ldd /usr/local/bin/openssl&#xA;&#x9;linux-vdso.so.1 (0x00007ffc82985000)&#xA;&#x9;libssl.so.52 =&amp;gt; /usr/local/lib/libssl.so.52 (0x00007f1730f9f000)&#xA;&#x9;libcrypto.so.49 =&amp;gt; /usr/local/lib/libcrypto.so.49 (0x00007f1730d8a000)&#xA;&#x9;libc.so.6 =&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f1730b62000)&#xA;&#x9;/lib64/ld-linux-x86-64.so.2 (0x00007f17310b2000)&#xA;&#xA;# use the libssl to config the libssl.so path&#xA;vm@vm-server:~$ sudo ./ecapture tls --libssl=&#34;/usr/local/lib/libssl.so.52&#34; --hex&#xA;&#xA;# in another terminal, use the command, then type some string, watch the output of ecapture&#xA;vm@vm-server:~$ /usr/local/bin/openssl s_client -connect github.com:443&#xA;&#xA;# for installed boringssl, usage is the same&#xA;/path/to/bin/bssl s_client -connect github.com:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;bash command&lt;/h3&gt; &#xA;&lt;p&gt;capture bash command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ps -ef | grep foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;What&#39;s eBPF&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ebpf.io&#34;&gt;eBPF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;uprobe HOOK&lt;/h2&gt; &#xA;&lt;h3&gt;openssl\libressl\boringssl hook&lt;/h3&gt; &#xA;&lt;p&gt;eCapture hook&lt;code&gt;SSL_write&lt;/code&gt; \ &lt;code&gt;SSL_read&lt;/code&gt; function of shared library &lt;code&gt;/lib/x86_64-linux-gnu/libssl.so.1.1&lt;/code&gt;. get text context, and send message to user space by &lt;a href=&#34;https://www.kernel.org/doc/html/latest/bpf/maps.html&#34;&gt;eBPF maps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;Probes: []*manager.Probe{&#xA;    {&#xA;        Section:          &#34;uprobe/SSL_write&#34;,&#xA;        EbpfFuncName:     &#34;probe_entry_SSL_write&#34;,&#xA;        AttachToFuncName: &#34;SSL_write&#34;,&#xA;        //UprobeOffset:     0x386B0,&#xA;        BinaryPath: &#34;/lib/x86_64-linux-gnu/libssl.so.1.1&#34;,&#xA;    },&#xA;    {&#xA;        Section:          &#34;uretprobe/SSL_write&#34;,&#xA;        EbpfFuncName:     &#34;probe_ret_SSL_write&#34;,&#xA;        AttachToFuncName: &#34;SSL_write&#34;,&#xA;        //UprobeOffset:     0x386B0,&#xA;        BinaryPath: &#34;/lib/x86_64-linux-gnu/libssl.so.1.1&#34;,&#xA;    },&#xA;    {&#xA;        Section:          &#34;uprobe/SSL_read&#34;,&#xA;        EbpfFuncName:     &#34;probe_entry_SSL_read&#34;,&#xA;        AttachToFuncName: &#34;SSL_read&#34;,&#xA;        //UprobeOffset:     0x38380,&#xA;        BinaryPath: &#34;/lib/x86_64-linux-gnu/libssl.so.1.1&#34;,&#xA;    },&#xA;    {&#xA;        Section:          &#34;uretprobe/SSL_read&#34;,&#xA;        EbpfFuncName:     &#34;probe_ret_SSL_read&#34;,&#xA;        AttachToFuncName: &#34;SSL_read&#34;,&#xA;        //UprobeOffset:     0x38380,&#xA;        BinaryPath: &#34;/lib/x86_64-linux-gnu/libssl.so.1.1&#34;,&#xA;    },&#xA;    /**/&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;bash readline.so hook&lt;/h3&gt; &#xA;&lt;p&gt;hook &lt;code&gt;/bin/bash&lt;/code&gt; symbol name &lt;code&gt;readline&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;How to compile&lt;/h1&gt; &#xA;&lt;p&gt;Linux Kernel: &amp;gt;= 4.18.&lt;/p&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;golang 1.18 or newer&lt;/li&gt; &#xA; &lt;li&gt;clang 9.0 or newer&lt;/li&gt; &#xA; &lt;li&gt;cmake 3.18.4 or newer&lt;/li&gt; &#xA; &lt;li&gt;clang backend: llvm 9.0 or newer&lt;/li&gt; &#xA; &lt;li&gt;kernel config:CONFIG_DEBUG_INFO_BTF=y (Optional, 2022-04-17)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;command&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get update&#xA;sudo apt-get install --yes build-essential pkgconf libelf-dev llvm-9 clang-9 linux-tools-common linux-tools-generic&#xA;for tool in &#34;clang&#34; &#34;llc&#34; &#34;llvm-strip&#34;&#xA;do&#xA;  sudo rm -f /usr/bin/$tool&#xA;  sudo ln -s /usr/bin/$tool-9 /usr/bin/$tool&#xA;done&#xA;git clone git@github.com:gojue/ecapture.git&#xA;cd ecapture&#xA;make&#xA;bin/ecapture --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;compile without BTF&lt;/h2&gt; &#xA;&lt;p&gt;eCapture support BTF disabled with command &lt;code&gt;make nocore&lt;/code&gt; to compile on 2022/04/17.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make nocore&#xA;bin/ecapture --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.cnxct.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/709947?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;CFC4N&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#infra-cfc4n&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=cfc4n&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=cfc4n&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://chenhengqi.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4277743?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hengqi Chen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gojue/ecapture/master/#infra-chenhengqi&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=chenhengqi&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt; &lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=chenhengqi&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://chriskalix.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/46471110?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;chriskali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=chriskaliX&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/huzai9527&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/33509974?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;huzai9527&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=huzai9527&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://youtube.com/c/LinuxMonkinCloud&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3729694?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vincent Li&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=vincentmli&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://yihong.run&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15976103?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yihong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=yihong0618&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://blaise.wang/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9657268?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Blaise Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=blaisewang&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://4ft35t.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2051049?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;4ft35t&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=4ft35t&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://weishu.me&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4233744?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;weishu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=tiann&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.dashen.tech&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15921519?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cui fliter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=cuishuang&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://nfsec.pl&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15172919?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patryk Krawaczyński&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=nfsec&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/yindex&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38709569?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yindex&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=yindex&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/xujiajiadexiaokeai&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/30225423?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wenhao Jiang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/gojue/ecapture/commits?author=xujiajiadexiaokeai&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
  <entry>
    <title>TASEmulators/desmume</title>
    <updated>2023-02-13T01:31:57Z</updated>
    <id>tag:github.com,2023-02-13:/TASEmulators/desmume</id>
    <link href="https://github.com/TASEmulators/desmume" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DeSmuME is a Nintendo DS emulator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DeSmuME&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/zeromus/desmume&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/abfd7jm09wnmxyvu?svg=true&#34; alt=&#34;AppVeyor CI Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DeSmuME is a Nintendo DS emulator.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://desmume.org/download&#34;&gt;http://desmume.org/download&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>