<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-19T01:31:56Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Wind4/vlmcsd</title>
    <updated>2022-10-19T01:31:56Z</updated>
    <id>tag:github.com,2022-10-19:/Wind4/vlmcsd</id>
    <link href="https://github.com/Wind4/vlmcsd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;KMS Emulator in C (currently runs on Linux including Android, FreeBSD, Solaris, Minix, Mac OS, iOS, Windows with or without Cygwin)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;To view the documentation cd to the directory containing the distribution files and type&lt;/p&gt; &#xA;&lt;p&gt;man man/vlmcsd.8 to see documentation for vlmcsd&lt;/p&gt; &#xA;&lt;p&gt;man man/vlmcs.1 to see documentation for vlmcs&lt;/p&gt; &#xA;&lt;p&gt;man man/vlmcsd.7 to see general documentation for kms&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have man, you may also use the .txt, .html and .pdf files in the man directory&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ORCx41/NoRunPI</title>
    <updated>2022-10-19T01:31:56Z</updated>
    <id>tag:github.com,2022-10-19:/ORCx41/NoRunPI</id>
    <link href="https://github.com/ORCx41/NoRunPI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Your Payload Without Running Your Payload&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;NoRunPI: Run Your Payload Without Running Your Payload&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Since &#34;SettingSyncHost.exe -Embedding&#34; Runs a Thread On &#34;SHCore.dll!Ordinal172+0x100&#34;, We can hijack the flow before this thread start, to do that :&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Load shcore.dll to calculate the thread&#39;s entry&lt;/li&gt; &#xA; &lt;li&gt;Create &#34;SettingSyncHost.exe -Embedding&#34; Process&lt;/li&gt; &#xA; &lt;li&gt;BruteForce the address calculated (stop when its valid)&lt;/li&gt; &#xA; &lt;li&gt;suspend the process&lt;/li&gt; &#xA; &lt;li&gt;inject the payload to the calculated address&lt;/li&gt; &#xA; &lt;li&gt;resume the process&lt;/li&gt; &#xA; &lt;li&gt;$$&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;DEMO:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/111295429/196046411-1adc092c-55a6-49bb-8cee-d12bf341296d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/111295429/196044925-4c8d3b1d-90a4-42cd-90f5-4f43e188c91e.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Note That This is An idea more than a stable poc on a process injection technique, you can find a lot of such processes (creating such threads) and implement your own code using the same way for the same results ... (for example on my machine, the same process have a thread on combase.dll!InternalTlsAllocData+0x70)&lt;/h4&gt;</summary>
  </entry>
  <entry>
    <title>rvaiya/warpd</title>
    <updated>2022-10-19T01:31:56Z</updated>
    <id>tag:github.com,2022-10-19:/rvaiya/warpd</id>
    <link href="https://github.com/rvaiya/warpd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modal keyboard-driven virtual pointer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What&lt;/h1&gt; &#xA;&lt;p&gt;A modal keyboard driven interface for mouse manipulation.&lt;/p&gt; &#xA;&lt;h1&gt;Demo&lt;/h1&gt; &#xA;&lt;h2&gt;Hint Mode &lt;code&gt;Alt-Meta-x&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rvaiya/warpd/master/demo/hints.gif&#34; height=&#34;400px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Grid Mode &lt;code&gt;Alt-Meta-g&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rvaiya/warpd/master/demo/warp.gif&#34; height=&#34;400px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Normal Mode &lt;code&gt;Alt-Meta-c&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rvaiya/warpd/master/demo/discrete.gif&#34; height=&#34;400px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rvaiya/warpd/master/demo/discrete2.gif&#34; height=&#34;400px&#34; width=&#34;711px&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;h2&gt;X&lt;/h2&gt; &#xA;&lt;p&gt;The usual array of X libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libxi&lt;/li&gt; &#xA; &lt;li&gt;libxinerama&lt;/li&gt; &#xA; &lt;li&gt;libxft&lt;/li&gt; &#xA; &lt;li&gt;libxfixes&lt;/li&gt; &#xA; &lt;li&gt;libxtst&lt;/li&gt; &#xA; &lt;li&gt;libx11&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Wayland (sway/wlroots only (&lt;strong&gt;no gnome support&lt;/strong&gt;))&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libwayland-client&lt;/li&gt; &#xA; &lt;li&gt;cairo&lt;/li&gt; &#xA; &lt;li&gt;xkbcommon&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; The wayland port has several limitations due to the nature of Wayland&#39;s architecture.&lt;/p&gt; &#xA;&lt;p&gt;See the LIMITATIONS section of the man page for more details.&lt;/p&gt; &#xA;&lt;h2&gt;MacOS:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The standard Xcode command line developer tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Make sure you have the appropriate dependencies for your system:&lt;/p&gt; &#xA;&lt;p&gt;E.G&lt;/p&gt; &#xA;&lt;h2&gt;debian/ubuntu (X):&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install \&#xA;&#x9;libxi-dev \&#xA;&#x9;libxinerama-dev \&#xA;&#x9;libxft-dev \&#xA;&#x9;libxfixes-dev \&#xA;&#x9;libxtst-dev \&#xA;&#x9;libx11-dev &amp;amp;&amp;amp; \&#xA;make &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;debian/ubuntu (Wayland):&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install \&#xA;&#x9;libcairo2-dev \&#xA;&#x9;libxkbcommon-dev \&#xA;&#x9;libwayland-dev &amp;amp;&amp;amp; \&#xA;PLATFORM=wayland make &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;macos:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo curl -Lo /usr/local/bin/warpd https://github.com/rvaiya/warpd/releases/download/v1.2.2/warpd-osx &amp;amp;&amp;amp; \&#xA;sudo chmod +x /usr/local/bin/warpd &amp;amp;&amp;amp; \&#xA;sudo curl -Lo /usr/local/share/man/man1/warpd.1.gz https://github.com/rvaiya/warpd/releases/download/v1.2.2/warpd.1.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or (from source)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Install the xcode command line tools if you&#xA;# don&#39;t already have them.&#xA;xcode-select --install&#xA;&#xA;make &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Some programs (e.g iTerm) have a &#39;secure input mode&#39; that may need to be disabled in order for warpd to work properly.&lt;/p&gt; &#xA;&lt;h1&gt;Quickstart&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;warpd&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Hint Mode&lt;/h2&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Press &lt;code&gt;A-M-x&lt;/code&gt; (&lt;code&gt;alt+meta+x&lt;/code&gt;) to generate a list of hints&lt;/li&gt; &#xA; &lt;li&gt;Enter the key sequence associated with the desired target to warp the pointer to that location and enter normal mode.&lt;/li&gt; &#xA; &lt;li&gt;Use the normal mode movement keys to select the final desination (see Normal Mode).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Grid Mode&lt;/h2&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Press &lt;code&gt;A-M-g&lt;/code&gt; (meta is the command key) to activate the warping process.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;u&lt;/code&gt;,&lt;code&gt;i&lt;/code&gt;,&lt;code&gt;j&lt;/code&gt;,&lt;code&gt;k&lt;/code&gt; to repeatedly navigate to different quadrants.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;code&gt;m&lt;/code&gt; to left click, &lt;code&gt;,&lt;/code&gt; to middle click or &lt;code&gt;.&lt;/code&gt; to right click.&lt;/li&gt; &#xA; &lt;li&gt;See Normal Mode&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Normal Mode&lt;/h2&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Press &lt;code&gt;A-M-c&lt;/code&gt; to activate normal mode.&lt;/li&gt; &#xA; &lt;li&gt;Use the normal movement keys (default &lt;code&gt;hjkl&lt;/code&gt;) to adjust the cursor.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;code&gt;m&lt;/code&gt; to left click, &lt;code&gt;,&lt;/code&gt; to middle click or &lt;code&gt;.&lt;/code&gt; to right click.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;code&gt;escape&lt;/code&gt; to quit.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;A drag movement can be simulated from any of the above modes by focusing on the source and then pressing the &lt;code&gt;drag_key&lt;/code&gt; (default &lt;code&gt;v&lt;/code&gt;) which will cause normal mode to be activated for selection of the drag target.&lt;/p&gt; &#xA;&lt;p&gt;A more comprehensive description can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/rvaiya/warpd/master/man.md&#34;&gt;man page&lt;/a&gt; (along with a list of options).&lt;/p&gt; &#xA;&lt;h2&gt;Wayland&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Wayland does not permit clients to globally bind hotkeys. These must be bound within the compositor using warpd&#39;s oneshot flags.&lt;/p&gt; &#xA;&lt;p&gt;E.G&lt;/p&gt; &#xA;&lt;p&gt;On sway:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bindsym Mod4+Mod1+x exec warpd --hint&#xA;bindsym Mod4+Mod1+c exec warpd --normal&#xA;bindsym Mod4+Mod1+g exec warpd --grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Packages:&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;warpd&lt;/code&gt; is currently available on the following distributions:&lt;/p&gt; &#xA;&lt;h2&gt;Arch&lt;/h2&gt; &#xA;&lt;p&gt;Available as an &lt;a href=&#34;https://aur.archlinux.org/packages/warpd-git/&#34;&gt;AUR&lt;/a&gt; package (maintained by Matheus Fillipe).&lt;/p&gt; &#xA;&lt;p&gt;If you are interesting in adding warpd to your distribution&#39;s repository please contact me.&lt;/p&gt; &#xA;&lt;h1&gt;Limitations/Bugs&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Programs which use Xinput and or Xtest for keyboard may not work correctly (e.g synergy). If a specific program which you feel should be working does not please file an &lt;a href=&#34;https://github.com/rvaiya/warpd/issues&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The hack used for pointer hiding on OSX doesn&#39;t work on some programs (e.g iTerm). The original cursor will consequently be visible in such cases, though functionality should be otherwise unaffected.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wayland support has several limitations (see CAVEATS in the man page).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributions&lt;/h1&gt; &#xA;&lt;p&gt;A special thanks to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pete Fein - For encouragement and early adoption.&lt;/li&gt; &#xA; &lt;li&gt;Matheus Fillipe - For the original border radius patch as well as numerous bug reports and feature requests.&lt;/li&gt; &#xA; &lt;li&gt;The Kaleidoscope/Vimperator projects - For inspiration.&lt;/li&gt; &#xA; &lt;li&gt;Drew Devault - For making the Wayland ecosystem inhabitable.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>