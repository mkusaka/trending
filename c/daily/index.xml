<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-19T01:31:21Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>atar-axis/xpadneo</title>
    <updated>2023-06-19T01:31:21Z</updated>
    <id>tag:github.com,2023-06-19:/atar-axis/xpadneo</id>
    <link href="https://github.com/atar-axis/xpadneo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Advanced Linux Driver for Xbox One Wireless Controller (shipped with Xbox One S)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/O4O43SURE&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to support me or accelerate the development of a special feature, consider a small donation &lt;span&gt;‚ù§Ô∏è&lt;/span&gt; Just leave a message if your donation is for a specific use (like a new hardware or a specific function).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/dollingerflorian/dollingerflorian/_build/latest?definitionId=1?branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/dollingerflorian/dollingerflorian/_apis/build/status/atar-axis.xpadneo?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/app/atar-axis/xpadneo?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=atar-axis/xpadneo&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/7bba9bae5e6e493189969dd2a80ac09e&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/atar-axis/xpadneo&#34; title=&#34;Average time to resolve an issue&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/resolution/atar-axis/xpadneo.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/xpadneo/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/xpadneo.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/nCqfKa84KA&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/733964971842732042&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Advanced Linux Driver for Xbox One Wireless Gamepad&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/atar-axis/xpadneo/master/img/xpadneo.png&#34; alt=&#34;xpadneo Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Quote from &lt;a href=&#34;https://github.com/atar-axis&#34;&gt;@atar-axis (Florian Dollinger)&lt;/a&gt;, creator of the initial driver:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is the first driver for the Xbox One Wireless Gamepad (which is shipped with the Xbox One S). I wrote it for a student project at fortiss GmbH and it is fully functional but does only support the connection via Bluetooth as yet - more will follow.&lt;/p&gt; &#xA; &lt;p&gt;Many thanks to &lt;em&gt;Kai Krakow&lt;/em&gt; who &lt;strong&gt;sponsored&lt;/strong&gt; me a Xbox One Wireless Controller &lt;span&gt;üéÆ&lt;/span&gt; (including Wireless Adapter) and a pack of mouthwatering guarana cacao &lt;span&gt;‚òï&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Other Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/medusalix/xow&#34;&gt;xow&lt;/a&gt; is a driver for the Xbox One S controllers, too, and supports the native dongles packaged with the controller. Kudos to &lt;a href=&#34;https://github.com/medusalix&#34;&gt;@medusalix&lt;/a&gt; for working together on finding some work-arounds for controller firmware bugs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paroj/xpad&#34;&gt;xpad&lt;/a&gt; supports this and many other controllers in USB mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/medusalix/xone&#34;&gt;xone&lt;/a&gt; is a driver aiming for fully supporting all Microsoft GIP devices thus replacing the xpad driver in the kernel while adding support for additional types of hardware.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ndeadly/MissionControl&#34;&gt;MissionControl&lt;/a&gt; aims to support the controller on Nintendo Switch via Bluetooth.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These other projects may not support some of the advanced features of xpadneo.&lt;/p&gt; &#xA;&lt;h2&gt;Breaking Changes&lt;/h2&gt; &#xA;&lt;h3&gt;Kernel 4.18 or newer required&lt;/h3&gt; &#xA;&lt;p&gt;As of xpadneo v0.10, we require kernel 4.18 or later to utilize &lt;code&gt;HID_QUIRK_INPUT_PER_APP&lt;/code&gt; which splits the gamepad into multiple sub-devices to fix problems and incompatibilities at several layers.&lt;/p&gt; &#xA;&lt;h3&gt;SDL2 2.28 Compatibility&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/slouken&#34;&gt;@slouken&lt;/a&gt; from SDL2, xpadneo mappings are now auto-detected in the upcoming SDL2 2.28 release. This will fix long-standing problems with Steam Input and SDL2 games. With this release, we will also have full paddle support.&lt;/p&gt; &#xA;&lt;p&gt;If you still see problems, ensure that you didn&#39;t create custom controllerdb entries. See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atar-axis/xpadneo/issues/428&#34;&gt;https://github.com/atar-axis/xpadneo/issues/428&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libsdl-org/SDL/commit/9567989eb3ce9c858f0fe76806c5ccad69da89ba&#34;&gt;https://github.com/libsdl-org/SDL/commit/9567989eb3ce9c858f0fe76806c5ccad69da89ba&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libsdl-org/SDL/commit/0f4b15e16b7f07a46db6dc8e651f8c1849d658c5&#34;&gt;https://github.com/libsdl-org/SDL/commit/0f4b15e16b7f07a46db6dc8e651f8c1849d658c5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Known issues:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Share button will currently not be recognized by SDL2, scheduled to be fixed in xpadneo v0.11&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quirks by Design&lt;/h3&gt; &#xA;&lt;p&gt;With BLE firmware, all models switched to a unified HID report descriptor, only the XBE2 controller identifies with PID 0x0B22 while the other models identify with PID 0x0B13. This has some known consequences:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All non-XBE2 controllers will claim to have a Share button no matter if it physically exists. As HID doesn&#39;t report the internal model number, xpadneo cannot fix it currently. The button is currently mapped to F12, so this has no consequences.&lt;/li&gt; &#xA; &lt;li&gt;All XBE2 controllers will claim to have a full keyboard and the Share button is actually the Profile button. Since Share is currently mapped to F12, this will have no consequences.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advantages of this Driver&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports Bluetooth&lt;/li&gt; &#xA; &lt;li&gt;Supports all Force Feedback/Rumble effects through Linux &lt;code&gt;ff-memless&lt;/code&gt; effect emulation&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://www.youtube.com/watch?v=G4PHupKm2OQ&#34;&gt;Trigger Force Feedback&lt;/a&gt; in every game by applying a pressure-dependent effect intensity to the current rumble effect (not even supported in Windows)&lt;/li&gt; &#xA; &lt;li&gt;Supports disabling FF&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple Gamepads at the same time (not even supported in Windows)&lt;/li&gt; &#xA; &lt;li&gt;Offers a consistent mapping, even if the Gamepad was paired to Windows/Xbox before, and independent of software layers (SDL2, Stadia via Chrome Gamepad API, etc)&lt;/li&gt; &#xA; &lt;li&gt;Working Select, Start, Mode buttons&lt;/li&gt; &#xA; &lt;li&gt;Working paddles (buttons on the backside of the controller)&lt;/li&gt; &#xA; &lt;li&gt;Correct Axis Range (signed, important for e.g. RPCS3)&lt;/li&gt; &#xA; &lt;li&gt;Supports Battery Level Indication (including the Play &#39;n Charge Kit) &lt;img src=&#34;https://raw.githubusercontent.com/atar-axis/xpadneo/master/img/battery_support.png&#34; alt=&#34;Battery Level Indication&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Easy Installation&lt;/li&gt; &#xA; &lt;li&gt;Agile Support and Development&lt;/li&gt; &#xA; &lt;li&gt;Supports customization through profiles (work in progress)&lt;/li&gt; &#xA; &lt;li&gt;Optional high-precision mode for Wine/Proton users (disables dead zones so games don&#39;t apply an additional one)&lt;/li&gt; &#xA; &lt;li&gt;Share button support on supported controllers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Unavailable Features&lt;/h2&gt; &#xA;&lt;p&gt;Across all models, xpadneo won&#39;t support audio features of the controllers because the firmware doesn&#39;t support audio in Bluetooth mode. In the future, xpadneo may support audio when USB and dongle support will be added.&lt;/p&gt; &#xA;&lt;h3&gt;Xbox One S Wireless Controller&lt;/h3&gt; &#xA;&lt;p&gt;This is the initial controller supported from the first version of xpadneo. All features are fully supported. This controller uses emulated profile switching support (see below).&lt;/p&gt; &#xA;&lt;h3&gt;Xbox Elite Series 2 Wireless Controller&lt;/h3&gt; &#xA;&lt;p&gt;Basic support for the Xbox Elite Series 2 Wireless controller is present, covering all the features of the driver. The following features are missing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upload of profile mappings and sensitivity curves is currently not supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This controller uses native profile switching support (see below).&lt;/p&gt; &#xA;&lt;h3&gt;Xbox Series X|S Wireless Controller&lt;/h3&gt; &#xA;&lt;p&gt;Full support for the Xbox Series X|S controller is present including the share button. This is currently statically mapped to keyboard event &lt;code&gt;KEY_F12&lt;/code&gt; to take screenshots with Steam. It will be configurable in the future. This controller uses emulated profile switching support (see below).&lt;/p&gt; &#xA;&lt;p&gt;This controller uses BLE (Bluetooth low energy) and can only be supported if your Bluetooth dongle also supports BLE.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Known problems:&lt;/strong&gt; The controller may not properly set its connection parameters, resulting in laggy and choppy input experience. See also: &lt;a href=&#34;https://atar-axis.github.io/xpadneo/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;8BitDo Controllers&lt;/h3&gt; &#xA;&lt;p&gt;This driver supports the Nintendo layout of those controllers to exposes them correctly as button A, B, X, and Y as labelled on the device. This is swapped compared to the original Xbox controller layout. However, this feature is not enabled by default. If you want to use this feature, you have to add a quirk flag to the module options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# /etc/modprobe.conf&#xA;options hid_xpadneo quirks=E4:17:D8:xx:xx:xx+32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where you replace &lt;code&gt;xx:xx:xx&lt;/code&gt; with the values from your controller MAC (as shown in &lt;code&gt;dmesg&lt;/code&gt;). The value &lt;code&gt;32&lt;/code&gt; enables Nintendo layout. If you&#39;ll want to add other quirk flags, simply add the values, e.g. &lt;code&gt;32&lt;/code&gt; + &lt;code&gt;7&lt;/code&gt; (default quirks for 8BitDo) = &lt;code&gt;39&lt;/code&gt;. After changing this, reload the driver or reboot.&lt;/p&gt; &#xA;&lt;p&gt;This controller uses emulated profile switching support (see below).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Breaking change:&lt;/strong&gt; Users of previous versions of the driver may want to remove their custom SDL mappings. Full support has been added for these controllers and broken mapping of previously versions no longer needs to be applied. See also: &lt;a href=&#34;https://atar-axis.github.io/xpadneo/#troubleshooting#sdl&#34;&gt;SDL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;GuliKit KingKong Controller Family&lt;/h3&gt; &#xA;&lt;p&gt;This driver supports the GuliKit King Kong controller family, the driver was tested with model NS09 (using firmware v2.0) but should work just fine for the older models, too. If in doubt, follow the firmware upgrade guides on the GuliKit home page to receive the latest firmware. Both the Android mode and the X-Input mode are supported but it may depend on your Bluetooth stack which mode works better for you (Android mode didn&#39;t pair for me).&lt;/p&gt; &#xA;&lt;p&gt;This driver supports the Nintendo layout of those controllers to exposes them correctly as button A, B, X, and Y as labelled on the device. This is swapped compared to the original Xbox controller layout. However, this feature is not enabled by default. If you want to use this feature, you have to add a quirk flag to the module options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# /etc/modprobe.conf&#xA;options hid_xpadneo quirks=98:B6:EA:xx:xx:xx+32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where you replace &lt;code&gt;xx:xx:xx&lt;/code&gt; with the values from your controller MAC (as shown in &lt;code&gt;dmesg&lt;/code&gt;). The value &lt;code&gt;32&lt;/code&gt; enables Nintendo layout. If you&#39;ll want to add other quirk flags, simply add the values, e.g. &lt;code&gt;32&lt;/code&gt; + &lt;code&gt;131&lt;/code&gt; (default quirks for GuliKit) = &lt;code&gt;163&lt;/code&gt;. After changing this, reload the driver or reboot.&lt;/p&gt; &#xA;&lt;p&gt;However, alternatively the controller supports swapping the buttons on the fly, too: Just press and hold the settings button, the click the plus button. Thus, the quirks flag is just a matter of setting the defaults.&lt;/p&gt; &#xA;&lt;p&gt;This controller uses emulated profile switching support (see below).&lt;/p&gt; &#xA;&lt;h2&gt;Profile Switching&lt;/h2&gt; &#xA;&lt;p&gt;The driver supports switching between different profiles, either through emulation or by using the hardware switch that comes with some models. This switching can be done at any time even while in a game. The API for customizing each profile does not exist yet.&lt;/p&gt; &#xA;&lt;h3&gt;Native Profile Switching Support&lt;/h3&gt; &#xA;&lt;p&gt;The driver support native profile switching for the Xbox Elite Series 2 controller. However, the feature is not finalized yet:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The default profile (no LED) exposes the paddles as extra buttons.&lt;/li&gt; &#xA; &lt;li&gt;The other three profiles behave the same way by default. While there is no support for modifying them currently, configurations set in the &lt;a href=&#34;https://apps.microsoft.com/store/detail/xbox-accessories/9NBLGGH30XJ3&#34;&gt;Xbox Accessories app (Windows only)&lt;/a&gt; will carry over and operate as intended.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Emulated Profile Switching Support&lt;/h3&gt; &#xA;&lt;p&gt;The driver emulates profile switching for controllers without a hardware profile switch by pressing buttons A, B, X, or Y while holding down the Xbox logo button. However, the following caveats apply:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Profiles currently behave all the same, and there is no support for configuring them.&lt;/li&gt; &#xA; &lt;li&gt;Full support will be available once the Xbox Elite Series 2 controller is fully supported.&lt;/li&gt; &#xA; &lt;li&gt;If you hold the button for too long, the controller will turn off - we cannot prevent that.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Distribution Packages&lt;/h3&gt; &#xA;&lt;p&gt;If your distribution has a maintained package, you can just use that and do not need to follow the manual install instructions below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/xpadneo/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/xpadneo.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you have installed &lt;em&gt;dkms&lt;/em&gt;, &lt;em&gt;linux headers&lt;/em&gt; and a bluetooth implementation (e.g. &lt;em&gt;bluez&lt;/em&gt;) and their dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Kernel maintainers should also include the &lt;code&gt;uhid&lt;/code&gt; module (&lt;code&gt;CONFIG_UHID&lt;/code&gt;) because otherwise Bluetooth LE devices (all models with firmware 5.x or higher) cannot create the HID input device which is handled in user-space by the bluez daemon.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On &lt;strong&gt;Arch&lt;/strong&gt; and Arch-based distros (like &lt;strong&gt;EndeavourOS&lt;/strong&gt;), try &lt;code&gt;sudo pacman -S dkms linux-headers bluez bluez-utils&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On &lt;strong&gt;Debian&lt;/strong&gt; based systems (like Ubuntu) you can install those packages by running &lt;code&gt;sudo apt-get install dkms linux-headers-`uname -r` &lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On &lt;strong&gt;Fedora&lt;/strong&gt;, it is &lt;code&gt;sudo dnf install dkms make bluez bluez-tools kernel-devel-`uname -r` kernel-headers &lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On &lt;strong&gt;Manjaro&lt;/strong&gt; try &lt;code&gt;sudo pacman -S dkms linux-latest-headers bluez bluez-utils&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On &lt;strong&gt;openSUSE&lt;/strong&gt; (tested on Tumbleweed, should work for Leap), it is &lt;code&gt;sudo zypper install dkms make bluez bluez-tools kernel-devel kernel-source&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On &lt;strong&gt;OSMC&lt;/strong&gt; you will have to run the following commands &lt;code&gt;sudo apt-get install dkms rbp2-headers-`uname -r` &lt;/code&gt; &lt;code&gt;sudo ln -s &#34;/usr/src/rbp2-headers-`uname -r`&#34; &#34;/lib/modules/`uname -r`/build&#34;&lt;/code&gt; (as a &lt;a href=&#34;https://github.com/osmc/osmc/issues/471&#34;&gt;workaround&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;On &lt;strong&gt;Raspbian&lt;/strong&gt;, it is &lt;code&gt;sudo apt-get install dkms raspberrypi-kernel-headers&lt;/code&gt; If you recently updated your firmware using &lt;code&gt;rpi-update&lt;/code&gt; the above package may not yet include the header files for your kernel. Please follow the steps described &lt;a href=&#34;https://github.com/notro/rpi-source/wiki&#34;&gt;here&lt;/a&gt; in this case.&lt;/li&gt; &#xA; &lt;li&gt;On &lt;strong&gt;generic distributions&lt;/strong&gt;, it doesn&#39;t need DKMS but requires a configured kernel source tree, then: &lt;code&gt;cd hid-xpadneo &amp;amp;&amp;amp; make modules &amp;amp;&amp;amp; sudo make modules_install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please feel free to add other distributions as well!&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the Repository to your local machine &lt;code&gt;git clone https://github.com/atar-axis/xpadneo.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd xpadneo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If using DKMS, run &lt;code&gt;sudo ./install.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If not using DKMS, follow steps above (generic distribution)&lt;/li&gt; &#xA; &lt;li&gt;Done!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Connection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo bluetoothctl&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[bluetooth]# scan on&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;wait until all available devices are listed (otherwise it may be hard to identify which one is the gamepad)&lt;/li&gt; &#xA; &lt;li&gt;push the connect button on upper side of the gamepad, and hold it down until the light starts flashing fast&lt;/li&gt; &#xA; &lt;li&gt;wait for the gamepad to show up in bluetoothctl, remember the &#xA;  &lt;mac&gt;&#xA;    address (e.g. &#xA;   &lt;code&gt;C8:3F:26:XX:XX:XX&lt;/code&gt;)&#xA;  &lt;/mac&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[bluetooth]# scan off&lt;/code&gt; to stop scanning as it may interfere with properly pairing the controller&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[bluetooth]# pair &amp;lt;MAC&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[bluetooth]# trust &amp;lt;MAC&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[bluetooth]# connect &amp;lt;MAC&amp;gt;&lt;/code&gt; (should usually not be needed but there are &lt;a href=&#34;https://github.com/atar-axis/xpadneo/issues/198&#34;&gt;open bugs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;&amp;lt;MAC&amp;gt;&lt;/code&gt; parameter is optional if the command line already shows the controller name&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You know that everything works fine when you feel the gamepad rumble ;)&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If using DKMS: Use &lt;code&gt;sudo ./configure.sh&lt;/code&gt; to configure the driver as you wish. The script will guide you through the available options.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Update&lt;/h3&gt; &#xA;&lt;p&gt;In order to update xpadneo, do the following&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update your cloned repo: &lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If using DKMS: Run &lt;code&gt;sudo ./update.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;otherwise follow the steps above (generic distribution)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Uninstallation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If using DKMS: Run &lt;code&gt;sudo ./uninstall.sh&lt;/code&gt; to remove all installed versions of hid-xpadneo&lt;/li&gt; &#xA; &lt;li&gt;otherwise follow the steps above (generic distribution)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Further Information&lt;/h2&gt; &#xA;&lt;p&gt;For further information please visit the GitHub Page &lt;a href=&#34;https://atar-axis.github.io/xpadneo/&#34;&gt;https://atar-axis.github.io/xpadneo/&lt;/a&gt; which is generated automatically from the content of the &lt;code&gt;/docs&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;You will find there e.g. the following sections&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://atar-axis.github.io/xpadneo/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://atar-axis.github.io/xpadneo/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://atar-axis.github.io/xpadneo/#bt-dongles&#34;&gt;Compatible BT Dongles&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>lanleft/CVE2023-1829</title>
    <updated>2023-06-19T01:31:21Z</updated>
    <id>tag:github.com,2023-06-19:/lanleft/CVE2023-1829</id>
    <link href="https://github.com/lanleft/CVE2023-1829" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE2023-1829&lt;/h1&gt; &#xA;&lt;p&gt;The exploitation is tested on Ubuntu22.04 official source code 5.15.0-25.25&lt;/p&gt; &#xA;&lt;p&gt;Installing dependences for some netlink filter functions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install libnftnl-dev libmnl-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building step:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/randorisec/CVE-2022-34918-LPE-PoC/tree/main&#34;&gt;https://github.com/randorisec/CVE-2022-34918-LPE-PoC/tree/main&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>philipl/pifs</title>
    <updated>2023-06-19T01:31:21Z</updated>
    <id>tag:github.com,2023-06-19:/philipl/pifs</id>
    <link href="https://github.com/philipl/pifs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;œÄfs - the data-free filesystem!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;œÄfs: Never worry about data again!&lt;/h1&gt; &#xA;&lt;p&gt;œÄfs is a revolutionary new file system that, instead of wasting space storing your data on your hard drive, stores your data in œÄ! You&#39;ll never run out of space again - œÄ holds every file that could possibly exist! They said 100% compression was impossible? You&#39;re looking at it!&lt;/p&gt; &#xA;&lt;p&gt;œÄfs is dead simple to build:&lt;/p&gt; &#xA;&lt;p&gt;Firstly, you must install autoconf, automake, libfuse packages in your system. For example, if you have Debian try:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-get install autotools-dev&#xA;sudo apt-get install automake&#xA;sudo apt-get install libfuse-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./autogen.sh&#xA;./configure&#xA;make&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;œÄfs is dead simple to use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;œÄfs -o mdd=&amp;lt;metadata directory&amp;gt; &amp;lt;mountpoint&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where the &lt;em&gt;metadata directory&lt;/em&gt; is where œÄfs should store its metadata (such as filenames or the locations of your files in œÄ) and &lt;em&gt;mountpoint&lt;/em&gt; is your usual filesystem mountpoint.&lt;/p&gt; &#xA;&lt;h2&gt;What does œÄ have to do with my data?&lt;/h2&gt; &#xA;&lt;p&gt;œÄ (or pi) is one of the most important constants in mathematics and has a variety of interesting properties (which you can read about at &lt;a href=&#34;http://en.wikipedia.org/wiki/Pi&#34;&gt;wikipedia&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;One of the properties that œÄ is conjectured to have is that it is &lt;em&gt;normal&lt;/em&gt;, which is to say that its digits are all distributed evenly, with the implication that it is a &lt;em&gt;disjunctive sequence&lt;/em&gt;, meaning that all possible finite sequences of digits will be present somewhere in it. If we consider œÄ in base 16 (hexadecimal) , it is trivial to see that if this conjecture is true, then all possible finite files must exist within œÄ. The first record of this observation dates back to &lt;a href=&#34;http://www.netfunny.com/rhf/jokes/01/Jun/pi.html&#34;&gt;2001&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;From here, it is a small leap to see that if œÄ contains all possible files, why are we wasting exabytes of space storing those files, when we could just look them up in œÄ!&lt;/p&gt; &#xA;&lt;h2&gt;Every file that could possibly exist?&lt;/h2&gt; &#xA;&lt;p&gt;That&#39;s right! Every file you&#39;ve ever created, or anyone else has created or will create! Copyright infringement? It&#39;s just a few digits of œÄ! They were always there!&lt;/p&gt; &#xA;&lt;h2&gt;But how do I look up my data in œÄ?&lt;/h2&gt; &#xA;&lt;p&gt;As long as you know the index into œÄ of your file and its length, its a simple task to extract the file using the &lt;a href=&#34;http://en.wikipedia.org/wiki/BBP-type_formula&#34;&gt;Bailey‚ÄìBorwein‚ÄìPlouffe formula&lt;/a&gt; Similarly, you can use the formula to initially find the index of your file&lt;/p&gt; &#xA;&lt;p&gt;Now, we all know that it can take a while to find a long sequence of digits in œÄ, so for practical reasons, we should break the files up into smaller chunks that can be more readily found.&lt;/p&gt; &#xA;&lt;p&gt;In this implementation, to maximise performance, we consider each individual byte of the file separately, and look it up in œÄ.&lt;/p&gt; &#xA;&lt;h2&gt;So I&#39;ve looked up my bytes in œÄ, but how do I remember where they are?&lt;/h2&gt; &#xA;&lt;p&gt;Well, you&#39;ve obviously got to write them down somewhere; you could use a piece of paper, but remember all that storage space we saved by moving our data into œÄ? Why don&#39;t we store our file locations there!?! Even better, the location of our files in œÄ is metadata and as &lt;a href=&#34;http://datatechnologytoday.wordpress.com/2010/09/07/on-the-importance-of-metadata/&#34;&gt;we all know&lt;/a&gt; metadata is becoming more and more important in everything we do. Doesn&#39;t it feel great to have generated so much metadata? Why waste time with old fashioned data when you can just deal with metadata, and lots of it!&lt;/p&gt; &#xA;&lt;h2&gt;Yeah, but what happens if lose my file locations?&lt;/h2&gt; &#xA;&lt;p&gt;No problem, the locations are just metadata! Your files are still there, sitting in œÄ - they&#39;re never going away, are they?&lt;/p&gt; &#xA;&lt;h2&gt;Why is this thing so slow? It took me five minutes to store a 400 line text file!&lt;/h2&gt; &#xA;&lt;p&gt;Well, this is just an initial prototype, and don&#39;t worry, there&#39;s always Moore&#39;s law!&lt;/p&gt; &#xA;&lt;h2&gt;Where do we go from here?&lt;/h2&gt; &#xA;&lt;p&gt;There&#39;s lots of potential for the future!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Variable run length search and lookup!&lt;/li&gt; &#xA; &lt;li&gt;Arithmetic Coding!&lt;/li&gt; &#xA; &lt;li&gt;Parallelizable lookup!&lt;/li&gt; &#xA; &lt;li&gt;Cloud based œÄ lookup!&lt;/li&gt; &#xA; &lt;li&gt;œÄfs for Hadoop!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>