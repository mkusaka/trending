<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-30T01:23:53Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Circuit-Digest/ESP-Drone</title>
    <updated>2024-03-30T01:23:53Z</updated>
    <id>tag:github.com,2024-03-30:/Circuit-Digest/ESP-Drone</id>
    <link href="https://github.com/Circuit-Digest/ESP-Drone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESP-Drone&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/Circuit-Digest/ESP-Drone/raw/8e10ca8f1701dee8f7fa0e6d4f82067c9e87177b/Tittle%20Image.png&#34; width=&#34;&#34; alt=&#34;alt_text&#34; title=&#34;image_tooltip&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://circuitdigest.com/tags/ESP32&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=&amp;amp;labelColor=505050&amp;amp;message=ESP32 Tutorials Circuit Digest&amp;amp;color=%230076D6&amp;amp;style=social&amp;amp;logo=google-chrome&amp;amp;logoColor=%230076D6&#34; alt=&#34;circuitdigest&#34;&gt;&lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For a full tutorial check out our &lt;a href=&#34;https://circuitdigest.com/microcontroller-projects/DIY-wifi-controlled-drone&#34;&gt;ESP32 Drone Article&lt;/a&gt;. For working video: &lt;a href=&#34;https://youtu.be/uzZjk0TQKtU&#34;&gt;How to build an ESP32 Drone&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Drones have rapidly evolved from niche hobbies to versatile tools with a wide range of applications, from photography to agriculture or even for defense and military purposes. Depending on the application, features and payload capacity their price will vary from pocket changes to a few million. Even though the basic principle behind these drones may appear simple, there is a lot of technology and computation that goes behind it for proper operations and a desired result from these drones. For example, maintaining stability while in the air requires precision sensors such as a Gyroscope and proper processing of reading taken with it. In this project we are going to make such a drone which can be easily controlled using our phones. This DIY drone is small in size and can be built using easily available components such as ESP32 modules, MPU6050 IMU, coreless motors and plastic propellers. &lt;br&gt; [Note: As this projects are very simple we are only providing the code, schemaitic, and a few essential images if you want to get the images or code explanations do check out the Circuit Digest website. &lt;br&gt; &lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>airockchip/rknn-toolkit2</title>
    <updated>2024-03-30T01:23:53Z</updated>
    <id>tag:github.com,2024-03-30:/airockchip/rknn-toolkit2</id>
    <link href="https://github.com/airockchip/rknn-toolkit2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Description&lt;/h1&gt; &#xA;&lt;p&gt;RKNN software stack can help users to quickly deploy AI models to Rockchip chips. The overall framework is as follows: &lt;/p&gt;&#xA;&lt;center class=&#34;half&#34;&gt; &#xA; &lt;div style=&#34;background-color:#ffffff;&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/airockchip/rknn-toolkit2/master/res/framework.png&#34; title=&#34;RKNN&#34;&gt; &#xA; &lt;/div&gt;&#xA;&lt;/center&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to use RKNPU, users need to first run the RKNN-Toolkit2 tool on the computer, convert the trained model into an RKNN format model, and then inference on the development board using the RKNN C API or Python API.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;RKNN-Toolkit2 is a software development kit for users to perform model conversion, inference and performance evaluation on PC and Rockchip NPU platforms.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;RKNN-Toolkit-Lite2 provides Python programming interfaces for Rockchip NPU platform to help users deploy RKNN models and accelerate the implementation of AI applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;RKNN Runtime provides C/C++ programming interfaces for Rockchip NPU platform to help users deploy RKNN models and accelerate the implementation of AI applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;RKNPU kernel driver is responsible for interacting with NPU hardware. It has been open source and can be found in the Rockchip kernel code.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Support Platform&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RK3566/RK3568 Series&lt;/li&gt; &#xA; &lt;li&gt;RK3588 Series&lt;/li&gt; &#xA; &lt;li&gt;RK3576 Series&lt;/li&gt; &#xA; &lt;li&gt;RK3562 Series&lt;/li&gt; &#xA; &lt;li&gt;RV1103/RV1106&lt;/li&gt; &#xA; &lt;li&gt;RK2118&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note:&lt;/p&gt; &#xA;&lt;p&gt;​ &lt;strong&gt;For RK1808/RV1109/RV1126/RK3399Pro, please refer to :&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;​ &lt;a href=&#34;https://github.com/airockchip/rknn-toolkit&#34;&gt;https://github.com/airockchip/rknn-toolkit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;​ &lt;a href=&#34;https://github.com/airockchip/rknpu&#34;&gt;https://github.com/airockchip/rknpu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;​ &lt;a href=&#34;https://github.com/airockchip/RK3399Pro_npu&#34;&gt;https://github.com/airockchip/RK3399Pro_npu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Download&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can also download all packages, docker image, examples, docs and platform-tools from &lt;a href=&#34;https://console.zbox.filez.com/l/I00fc3&#34;&gt;RKNPU2_SDK&lt;/a&gt;, fetch code: rknn&lt;/li&gt; &#xA; &lt;li&gt;You can get more examples from &lt;a href=&#34;https://github.com/airockchip/rknn_model_zoo&#34;&gt;rknn mode zoo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Notes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RKNN-Toolkit2 is not compatible with &lt;a href=&#34;https://github.com/airockchip/rknn-toolkit&#34;&gt;RKNN-Toolkit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Currently only support on: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu 18.04 python 3.6/3.7&lt;/li&gt; &#xA;   &lt;li&gt;Ubuntu 20.04 python 3.8/3.9&lt;/li&gt; &#xA;   &lt;li&gt;Ubuntu 22.04 python 3.10/3.11&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Latest version:v2.0.0-beta0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;RKNN LLM&lt;/h1&gt; &#xA;&lt;p&gt;If you want to deploy LLM (Large Language Model), we have introduced a new SDK called RKNN-LLM. For details, please refer to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/airockchip/rknn-llm&#34;&gt;https://github.com/airockchip/rknn-llm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CHANGELOG&lt;/h1&gt; &#xA;&lt;h2&gt;v2.0.0-beta0&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support RK3576 (Beta)&lt;/li&gt; &#xA; &lt;li&gt;Support RK2118 (Beta)&lt;/li&gt; &#xA; &lt;li&gt;Support SDPA (Scaled Dot Product Attention) to improve transformer performance&lt;/li&gt; &#xA; &lt;li&gt;Improve custom operators support&lt;/li&gt; &#xA; &lt;li&gt;Improve MatMul API&lt;/li&gt; &#xA; &lt;li&gt;Improve support for Reshape,Transpose,BatchLayernorm,Softmax,Deconv,Matmul,ScatterND etc.&lt;/li&gt; &#xA; &lt;li&gt;Support pytorch 2.1&lt;/li&gt; &#xA; &lt;li&gt;Improve support for QAT models of pytorch and onnx&lt;/li&gt; &#xA; &lt;li&gt;Optimize automatic generation of C++ code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;for older version, please refer &lt;a href=&#34;https://raw.githubusercontent.com/airockchip/rknn-toolkit2/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Feedback and Community Support&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redmine.rock-chips.com&#34;&gt;Redmine&lt;/a&gt; (&lt;strong&gt;Feedback recommended, Please consult our sales or FAE for the redmine account&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;QQ Group Chat: 1025468710 (full, please join group 3)&lt;/li&gt; &#xA; &lt;li&gt;QQ Group Chat2: 547021958 (full, please join group 3)&lt;/li&gt; &#xA; &lt;li&gt;QQ Group Chat3: 469385426&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;center class=&#34;half&#34;&gt; &#xA; &lt;img width=&#34;200&#34; height=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/airockchip/rknn-toolkit2/master/res/QQGroupQRCode.png&#34; title=&#34;QQ Group Chat&#34;&gt; &#xA; &lt;img width=&#34;200&#34; height=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/airockchip/rknn-toolkit2/master/res/QQGroup2QRCode.png&#34; title=&#34;QQ Group Chat2&#34;&gt; &#xA; &lt;img width=&#34;200&#34; height=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/airockchip/rknn-toolkit2/master/res/QQGroup3QRCode.png&#34; title=&#34;QQ Group Chat3&#34;&gt; &#xA;&lt;/center&gt;</summary>
  </entry>
</feed>