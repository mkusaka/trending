<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-27T01:36:47Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ExistentialAudio/BlackHole</title>
    <updated>2022-09-27T01:36:47Z</updated>
    <id>tag:github.com,2022-09-27:/ExistentialAudio/BlackHole</id>
    <link href="https://github.com/ExistentialAudio/BlackHole" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BlackHole is a modern macOS virtual audio driver that allows applications to pass audio to other applications with zero additional latency.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/Images/blackhole-banner-830px.png&#34; alt=&#34;BlackHole: Audio Loopback Driver&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BlackHole: Audio Loopback Driver&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-macOS-lightgrey&#34; alt=&#34;Platform: macOS&#34;&gt; &lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ExistentialAudio/BlackHole&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/ExistentialAudio/BlackHole&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ExistentialAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Follow%20on%20Twitter-1da1f2&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/Existential-Audio-103423234434751&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Like%20on%20Facebook-4267B2&#34; alt=&#34;Facebook&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;BlackHole is a modern macOS virtual audio loopback driver that allows applications to pass audio to other applications with zero additional latency.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://existential.audio/blackhole/?pk_campaign=github&amp;amp;pk_kwd=readme&#34;&gt;Download Installer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Funding&lt;/h2&gt; &#xA;&lt;p&gt;Sponsor: &lt;a href=&#34;https://github.com/sponsors/ExistentialAudio&#34;&gt;https://github.com/sponsors/ExistentialAudio&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/#installation-instructions&#34;&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/#uninstallation-instructions&#34;&gt;Uninstallation Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/#user-guides&#34;&gt;User Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/#developer-guides&#34;&gt;Developer Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/#feature-requests&#34;&gt;Feature Requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Builds 2, 16, 64, 128, 256 audio channels versions&lt;/li&gt; &#xA; &lt;li&gt;Customizable channel count, latency, hidden devices&lt;/li&gt; &#xA; &lt;li&gt;Customizable mirror device to allow for a hidden input or output&lt;/li&gt; &#xA; &lt;li&gt;Supports 8kHz, 16kHz, 44.1kHz, 48kHz, 88.2kHz, 96kHz, 176.4kHz, 192kHz, 352.8kHz, 384kHz, 705.6kHz and 768kHz sample rates&lt;/li&gt; &#xA; &lt;li&gt;Zero driver latency&lt;/li&gt; &#xA; &lt;li&gt;Compatible with macOS Mavericks (10.9) and newer.&lt;/li&gt; &#xA; &lt;li&gt;Builds for Intel and Apple Silicon&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ExistentialAudio/BlackHole/master/Images/audio-midi-setup.png&#34; alt=&#34;Audio MIDI Setup&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1: Download Installer&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/blackhole/?pk_campaign=github&amp;amp;pk_kwd=readme&#34;&gt;Download the latest installer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Close all running audio applications&lt;/li&gt; &#xA; &lt;li&gt;Open and install package&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Option 2: Install via Homebrew&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2ch: &lt;code&gt;brew install blackhole-2ch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;16ch: &lt;code&gt;brew install blackhole-16ch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;64ch: &lt;code&gt;brew install blackhole-64ch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Uninstallation Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1: Use Uninstaller&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/downloads/BlackHole2chUninstaller.pkg&#34;&gt;Download BlackHole2ch Uninstaller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/downloads/BlackHole16chUninstaller.pkg&#34;&gt;Download BlackHole16ch Uninstaller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/downloads/BlackHole64chUninstaller.pkg&#34;&gt;Download BlackHole64ch Uninstaller&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Option 2: Manually Uninstall&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete the BlackHole driver with the terminal command:&lt;/p&gt; &lt;p&gt;&lt;code&gt;rm -R /Library/Audio/Plug-Ins/HAL/BlackHoleXch.driver&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Be sure to replace &lt;code&gt;X&lt;/code&gt; with either &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;16&lt;/code&gt;, or &lt;code&gt;64&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Note that the directory is the root &lt;code&gt;/Library&lt;/code&gt; not &lt;code&gt;/Users/user/Library&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Restart CoreAudio with the terminal command:&lt;/p&gt; &lt;p&gt;&lt;code&gt;sudo launchctl kickstart -kp system/com.apple.audio.coreaudiod&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more specific details &lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/wiki/Uninstallation&#34;&gt;visit the Wiki.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;User Guides&lt;/h2&gt; &#xA;&lt;h3&gt;Logic Pro X&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/howto/StreamFromLogicProXtoFaceTime.php&#34;&gt;Logic Pro X to FaceTime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/howto/StreamFromLogicProXtoGoogleMeet.php&#34;&gt;Logic Pro X to Google Meet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/howto/StreamFromLogicProXtoSkype.php&#34;&gt;Logic Pro X to Skype&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/howto/StreamFromLogicProXtoZoom.php&#34;&gt;Logic Pro X to Zoom&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GarageBand&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/howto/StreamFromGarageBandToFaceTime.php&#34;&gt;GarageBand to FaceTime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/howto/StreamFromGarageBandToGoogleMeet.php&#34;&gt;GarageBand to Google Meet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/howto/StreamFromGarageBandToSkype.php&#34;&gt;GarageBand to Skype&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://existential.audio/howto/StreamFromGarageBandToZoom.php&#34;&gt;GarageBand to Zoom&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reaper&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://noahliebman.net/2020/12/telephone-colophon-or-how-i-overengineered-my-call-audio/&#34;&gt;Reaper to Zoom&lt;/a&gt; by Noah Liebman&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Record System Audio&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/wiki/Multi-Output-Device&#34;&gt;Setup Multi-Output Device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;In &lt;code&gt;Audio Midi Setup&lt;/code&gt; â†’ &lt;code&gt;Audio Devices&lt;/code&gt; right-click on the newly created Multi-Output and select &#34;Use This Device For Sound Output&#34;&lt;/li&gt; &#xA; &lt;li&gt;Open digital audio workstation (DAW) such as GarageBand and set input device to &#34;BlackHole&#34;&lt;/li&gt; &#xA; &lt;li&gt;Set track to input from channel 1-2&lt;/li&gt; &#xA; &lt;li&gt;Play audio from another application and monitor or record in your DAW&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Route Audio Between Applications&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set output driver to &#34;BlackHole&#34; in sending application&lt;/li&gt; &#xA; &lt;li&gt;Output audio to any channel&lt;/li&gt; &#xA; &lt;li&gt;Open receiving application and set input device to &#34;BlackHole&#34;&lt;/li&gt; &#xA; &lt;li&gt;Input audio from the corresponding output channels&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Developer Guides&lt;/h2&gt; &#xA;&lt;h3&gt;A license is required for all non GPL-3.0 projects.&lt;/h3&gt; &#xA;&lt;p&gt;Please support our hard work and continued development. To request a license &lt;a href=&#34;mailto:devinroth@existential.audio&#34;&gt;contact Existential Audio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;To install BlackHole copy the &lt;code&gt;BlackHoleXch.driver&lt;/code&gt; folder to &lt;code&gt;/Library/Audio/Plug-Ins/HAL&lt;/code&gt; and restart CoreAudio using &lt;code&gt;sudo launchctl kickstart -kp system/com.apple.audio.coreaudiod&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Customizing BlackHole&lt;/h3&gt; &#xA;&lt;p&gt;The following pre-compiler constants may be used to easily customize a build of BlackHole.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kDriver_Name&#xA;kPlugIn_BundleID&#xA;kPlugIn_Icon&#xA;&#xA;kDevice_Name&#xA;kDevice_IsHidden&#xA;kDevice_HasInput&#xA;kDevice_HasOutput&#xA;&#xA;kDevice2_Name&#xA;kDevice2_IsHidden&#xA;kDevice2_HasInput&#xA;kDevice2_HasOutput&#xA;&#xA;kLatency_Frame_Size&#xA;kNumber_Of_Channels&#xA;kSampleRates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;They can be specified at build time with &lt;code&gt;xcodebuild&lt;/code&gt; using &lt;code&gt;GCC_PREPROCESSOR_DEFINITIONS&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;xcodebuild \&#xA;-project BlackHole.xcodeproj \&#xA;GCC_PREPROCESSOR_DEFINITIONS=&#39;$GCC_PREPROCESSOR_DEFINITIONS &#xA;kSomeConstant=value&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to escape any quotation marks when using strings.&lt;/p&gt; &#xA;&lt;h3&gt;Renaming BlackHole&lt;/h3&gt; &#xA;&lt;p&gt;To customize BlackHole it is required to change the following constants.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;kDriver_Name&lt;/li&gt; &#xA; &lt;li&gt;kPlugIn_BundleID (note that this must match the target bundleID)&lt;/li&gt; &#xA; &lt;li&gt;kPlugIn_Icon&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These can specified as pre-compiler constants using &lt;code&gt;xcodebuild&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;driverName = &#34;BlackHole&#34;&#xA;bundleID = &#34;audio.existential.BlackHole&#34;&#xA;icon = &#34;BlackHole.icns&#34;&#xA;&#xA;xcodebuild \&#xA;-project BlackHole.xcodeproj \&#xA;-configuration Release \&#xA;PRODUCT_BUNDLE_IDENTIFIER=$bundleID \&#xA;GCC_PREPROCESSOR_DEFINITIONS=&#39;$GCC_PREPROCESSOR_DEFINITIONS&#xA;kDriver_Name=\&#34;&#39;$driverName&#39;\&#34;&#xA;kPlugIn_BundleID=\&#34;&#39;$bundleID&#39;\&#34;&#xA;kPlugIn_Icon=\&#34;&#39;$icon&#39;\&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing Channels, Latency, and Sample Rates&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;kNumber_Of_Channels&lt;/code&gt; is used to set the number of channels. Be careful when specifying high channel counts. Although BlackHole is designed to be extremely efficient at higher channel counts it&#39;s possible that your computer might not be able to keep up. Sample rates play a roll as well. Don&#39;t use high sample rates with a high number of channels. Some applications don&#39;t know how to handle high channel counts. Proceed with caution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;kLatency_Frame_Size&lt;/code&gt; is how much time in frames that the driver has to process incoming and outgoing audio. It can be used to delay the audio inside of BlackHole up to a maximum of 65536 frames. This may be helpful if using BlackHole with a high channel count.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;kSampleRates&lt;/code&gt; set the sample rate or sample rates of the audio device. If using multiple sample rates separate each with a &lt;code&gt;,&lt;/code&gt;. Example: &lt;code&gt;44100, 48000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Mirror Device&lt;/h3&gt; &#xA;&lt;p&gt;By default BlackHole has a hidden mirrored audio device. The devices may be customized using the following constants.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// Original Device&#xA;kDevice_IsHidden&#xA;kDevice_HasInput&#xA;kDevice_HasOutput&#xA;&#xA;// Mirrored Device&#xA;kDevice2_IsHidden&#xA;kDevice2_HasInput&#xA;kDevice2_HasOutput&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When all are set to true a 2nd BlackHole will show up that works exactly the same. The inputs and outputs are mirrored so the outputs from both devices go to the inputs of both devices.&lt;/p&gt; &#xA;&lt;p&gt;This is useful if you need a separate device for input and output.&lt;/p&gt; &#xA;&lt;p&gt;Example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// Original Device&#xA;kDevice_IsHidden=false&#xA;kDevice_HasInput=true&#xA;kDevice_HasOutput= false&#xA;&#xA;// Mirrored Device&#xA;kDevice2_IsHidden=false&#xA;kDevice2_HasInput= false&#xA;kDevice2_HasOutput=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this situation we have two BlackHole devices. One will have inputs only and the other will have outputs only.&lt;/p&gt; &#xA;&lt;p&gt;One way to use this in projects is to hide the mirrored device and use it behind the scenes. That way the user will see an input only device while routing audio through to the output behind them scenes.&lt;/p&gt; &#xA;&lt;p&gt;Hidden audio devices can be accessed using &lt;code&gt;kAudioHardwarePropertyTranslateUIDToDevice&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Continuous Integration / Continuous Deployment&lt;/h3&gt; &#xA;&lt;p&gt;BlackHole can be integrated into your CI/CD. Take a look at &lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/raw/master/Installer/create_installer.sh&#34;&gt;https://github.com/ExistentialAudio/BlackHole/blob/master/Installer/create_installer.sh&lt;/a&gt; to see how the installer is built, signed and notarized.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in any of the following features please leave a comment in the linked issue. To request a features not listed please create a new issue.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/issues/27&#34;&gt;Sync Clock with other Audio Devices&lt;/a&gt; in development see v0.3.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/issues/40&#34;&gt;Output Blackhole to other Audio Device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/issues/18&#34;&gt;Add Support for AU Plug-ins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/issues/13&#34;&gt;Inter-channel routing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/issues/8&#34;&gt;Record Directly to File&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/issues/7&#34;&gt;Configuration Options Menu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/issues/42&#34;&gt;Support for Additional Bit Depths&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Why isn&#39;t BlackHole showing up in the Applications folder?&lt;/h3&gt; &#xA;&lt;p&gt;BlackHole is a virtual audio loopback driver. It only shows up in &lt;code&gt;Audio MIDI Setup&lt;/code&gt;, &lt;code&gt;Sound Preferences&lt;/code&gt;, or other audio applications.&lt;/p&gt; &#xA;&lt;h3&gt;How can I listen to the audio and use BlackHole at the same time?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/wiki/Multi-Output-Device&#34;&gt;Setup a Multi-Output Device&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How can I change the volume of a Multi-Output device?&lt;/h3&gt; &#xA;&lt;p&gt;Unfortunately macOS does not support changing the volume of a Multi-Output device but you can set the volume of individual devices in Audio MIDI Setup.&lt;/p&gt; &#xA;&lt;h3&gt;Why is nothing playing through BlackHole?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Check &lt;code&gt;System Preferences&lt;/code&gt; -&amp;gt; &lt;code&gt;Security &amp;amp; Privacy&lt;/code&gt; -&amp;gt; &lt;code&gt;Privacy&lt;/code&gt; -&amp;gt; &lt;code&gt;Microphone&lt;/code&gt; to make sure your digital audio workstation (DAW) has microphone access.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check that the volume is all the way up on BlackHole input and output in &lt;code&gt;Audio Midi Setup&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are using a multi-output device, due to issues with macOS the Built-in Output must be enabled and listed as the top device in the Multi-Output. &lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/wiki/Multi-Output-Device#4-select-output-devices&#34;&gt;See here for details&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Why is audio glitching after X minutes when using a multi-output or an aggregate?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to enable drift correction for all devices except the clock source device.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What Apps Don&#39;t Work with Multi-Outputs?&lt;/h3&gt; &#xA;&lt;p&gt;Unfortunately multi-outputs are pretty buggy and some apps just won&#39;t work with them at all. Here is a list of known ones. If you have more to add please let me know.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apple Podcasts&lt;/li&gt; &#xA; &lt;li&gt;Apple Messages&lt;/li&gt; &#xA; &lt;li&gt;HDHomeRun&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AirPods with an Aggregate/Multi-Output is not working.&lt;/h3&gt; &#xA;&lt;p&gt;The microphone from AirPods runs at a lower sample rate which means it should not be used as the primary/clock device in an Aggregate or Multi-Output device. The solution is to use your built-in speakers (and just mute them) or BlackHole 2ch as the primary/clock device. BlackHole 16ch will not work as the primary since the primary needs to have 2ch.&lt;/p&gt; &#xA;&lt;p&gt;Read the discussion. &lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole/issues/146&#34;&gt;https://github.com/ExistentialAudio/BlackHole/issues/146&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Can I integrate BlackHole into my app?&lt;/h3&gt; &#xA;&lt;p&gt;BlackHole is licensed under GPL-3.0. You can use BlackHole as long as your app is also licensed as GPL-3.0. For all other applications please &lt;a href=&#34;mailto:devinroth@existential.audio&#34;&gt;contact Existential Audio directly&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nvim-telescope/telescope-fzf-native.nvim</title>
    <updated>2022-09-27T01:36:47Z</updated>
    <id>tag:github.com,2022-09-27:/nvim-telescope/telescope-fzf-native.nvim</id>
    <link href="https://github.com/nvim-telescope/telescope-fzf-native.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FZF sorter for telescope written in c&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;telescope-fzf-native.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;fzf-native&lt;/strong&gt; is a &lt;code&gt;c&lt;/code&gt; port of &lt;strong&gt;&lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt;&lt;/strong&gt;. It only covers the algorithm and implements few functions to support calculating the score.&lt;/p&gt; &#xA;&lt;p&gt;This means that the &lt;a href=&#34;https://github.com/junegunn/fzf#search-syntax&#34;&gt;fzf syntax&lt;/a&gt; is supported:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Token&lt;/th&gt; &#xA;   &lt;th&gt;Match type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sbtrkt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fuzzy-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that match &lt;code&gt;sbtrkt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;wild&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;exact-match (quoted)&lt;/td&gt; &#xA;   &lt;td&gt;Items that include &lt;code&gt;wild&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;^music&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;prefix-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that start with &lt;code&gt;music&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.mp3$&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;suffix-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that end with &lt;code&gt;.mp3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;!fire&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;inverse-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that do not include &lt;code&gt;fire&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;!^music&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;inverse-prefix-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that do not start with &lt;code&gt;music&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;!.mp3$&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;inverse-suffix-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that do not end with &lt;code&gt;.mp3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;A single bar character term acts as an OR operator. For example, the following query matches entries that start with &lt;code&gt;core&lt;/code&gt; and end with either &lt;code&gt;go&lt;/code&gt;, &lt;code&gt;rb&lt;/code&gt;, or &lt;code&gt;py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;^core go$ | rb$ | py$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is an advantage over the more simpler &lt;code&gt;fzy&lt;/code&gt; algorithm, which is also available for telescope (as native component or as lua component).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To get &lt;strong&gt;fzf-native&lt;/strong&gt; working, you need to build it with either &lt;code&gt;cmake&lt;/code&gt; or &lt;code&gt;make&lt;/code&gt;. As of now, we do not ship binaries. Both install methods will be supported going forward.&lt;/p&gt; &#xA;&lt;h3&gt;CMake (Windows, Linux, MacOS)&lt;/h3&gt; &#xA;&lt;p&gt;This requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CMake, and the Microsoft C++ Build Tools on Windows&lt;/li&gt; &#xA; &lt;li&gt;CMake, make, and GCC or Clang on Linux and MacOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;vim-plug&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;Plug &#39;nvim-telescope/telescope-fzf-native.nvim&#39;, { &#39;do&#39;: &#39;cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release &amp;amp;&amp;amp; cmake --build build --config Release &amp;amp;&amp;amp; cmake --install build --prefix build&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;packer.nvim&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#39;nvim-telescope/telescope-fzf-native.nvim&#39;, run = &#39;cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release &amp;amp;&amp;amp; cmake --build build --config Release &amp;amp;&amp;amp; cmake --install build --prefix build&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Make (Linux, MacOS, Windows with MinGW)&lt;/h3&gt; &#xA;&lt;p&gt;This requires &lt;code&gt;gcc&lt;/code&gt; or &lt;code&gt;clang&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;vim-plug&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;Plug &#39;nvim-telescope/telescope-fzf-native.nvim&#39;, { &#39;do&#39;: &#39;make&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;packer.nvim&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#39;nvim-telescope/telescope-fzf-native.nvim&#39;, run = &#39;make&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Telescope Setup and Configuration:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- You dont need to set any of these options. These are the default ones. Only&#xA;-- the loading is important&#xA;require(&#39;telescope&#39;).setup {&#xA;  extensions = {&#xA;    fzf = {&#xA;      fuzzy = true,                    -- false will only do exact matching&#xA;      override_generic_sorter = true,  -- override the generic sorter&#xA;      override_file_sorter = true,     -- override the file sorter&#xA;      case_mode = &#34;smart_case&#34;,        -- or &#34;ignore_case&#34; or &#34;respect_case&#34;&#xA;                                       -- the default case_mode is &#34;smart_case&#34;&#xA;    }&#xA;  }&#xA;}&#xA;-- To get fzf loaded and working with telescope, you need to call&#xA;-- load_extension, somewhere after setup function:&#xA;require(&#39;telescope&#39;).load_extension(&#39;fzf&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Developer Interface&lt;/h2&gt; &#xA;&lt;p&gt;This section is only addressed towards developers who plan to use the library (c or lua bindings). This section is not addressed towards users of the telescope extension.&lt;/p&gt; &#xA;&lt;h3&gt;C Interface&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;fzf_slab_t *slab = fzf_make_default_slab();&#xA;/* fzf_case_mode enum : CaseSmart = 0, CaseIgnore, CaseRespect&#xA; * normalize bool     : always set to false because its not implemented yet.&#xA; *                      This is reserved for future use&#xA; * pattern char*      : pattern you want to match. e.g. &#34;src | lua !.c$&#xA; * fuzzy bool         : enable or disable fuzzy matching&#xA; */&#xA;fzf_pattern_t *pattern = fzf_parse_pattern(CaseSmart, false, &#34;src | lua !.c$&#34;, true);&#xA;&#xA;/* you can get the score/position for as many items as you want */&#xA;int score = fzf_get_score(line, pattern, slab);&#xA;fzf_position_t *pos = fzf_get_positions(line, pattern, slab);&#xA;&#xA;fzf_free_positions(pos);&#xA;fzf_free_pattern(pattern);&#xA;fzf_free_slab(slab);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lua Interface&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local fzf = require(&#39;fzf_lib&#39;)&#xA;&#xA;local slab = fzf.allocate_slab()&#xA;-- pattern: string&#xA;-- case_mode: number with 0 = smart_case, 1 = ignore_case, 2 = respect_case&#xA;-- fuzzy: enable or disable fuzzy matching. default true&#xA;local pattern_obj = fzf.parse_pattern(pattern, case_mode, fuzzy)&#xA;&#xA;-- you can get the score/position for as many items as you want&#xA;-- line: string&#xA;-- score: number&#xA;local score = fzf.get_score(line, pattern_obj, slab)&#xA;&#xA;-- table (does not have to be freed)&#xA;local pos = fzf.get_pos(line, pattern_obj, slab)&#xA;&#xA;fzf.free_pattern(pattern_obj)&#xA;fzf.free_slab(slab)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This projects implements &lt;strong&gt;&lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt;&lt;/strong&gt; algorithm in c. So there might be differences in matching. I don&#39;t guarantee completeness.&lt;/p&gt; &#xA;&lt;h3&gt;TODO&lt;/h3&gt; &#xA;&lt;p&gt;Stuff still missing that is present in &lt;strong&gt;&lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; normalize&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; case for unicode (i don&#39;t think this works currently)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Benchmark&lt;/h2&gt; &#xA;&lt;p&gt;Comparison with fzy-native and fzy-lua with a table containing 240201 file strings. It calculated the score and position (if score &amp;gt; 0) for each of these strings with the pattern that is listed below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/nvim-telescope/telescope.nvim/imgs/bench1.png&#34; alt=&#34;benchmark 1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wiki/nvim-telescope/telescope.nvim/imgs/bench2.png&#34; alt=&#34;benchmark 2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;All credit for the algorithm goes to junegunn and his work on &lt;strong&gt;&lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt;&lt;/strong&gt;. This is merely a c fork distributed under MIT for telescope.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nanomsg/nng</title>
    <updated>2022-09-27T01:36:47Z</updated>
    <id>tag:github.com,2022-09-27:/nanomsg/nng</id>
    <link href="https://github.com/nanomsg/nng" rel="alternate"></link>
    <summary type="html">&lt;p&gt;nanomsg-next-generation -- light-weight brokerless messaging&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nng - nanomsg-next-gen&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://stand-with-ukraine.pp.ua&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/badges/StandWithUkraine.svg?sanitize=true&#34; alt=&#34;Stand With Ukraine&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/nanomsg/nng/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/nanomsg/nng/linux/master?logoColor=grey&amp;amp;logo=ubuntu&amp;amp;label=&#34; alt=&#34;Linux Status&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/nanomsg/nng/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/nanomsg/nng/windows/master?logoColor=grey&amp;amp;logo=windows&amp;amp;label=&#34; alt=&#34;Windows Status&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/nanomsg/nng/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/nanomsg/nng/darwin/master?logoColor=grey&amp;amp;logo=apple&amp;amp;label=&#34; alt=&#34;macOS Status&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://codecov.io/gh/nanomsg/nng&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/nanomsg/nng?logo=codecov&amp;amp;logoColor=grey&amp;amp;label=&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://lgtm.com/projects/g/nanomsg/nng/?mode=list&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/cpp/github/nanomsg/nng?logo=lgtm&amp;amp;logoColor=grey&amp;amp;label=&#34; alt=&#34;LGTM&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://discord.gg/Xnac6b9&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/639573728212156478?label=&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://nng.nanomsg.org/man&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=&amp;amp;message=docs&amp;amp;logo=asciidoctor&amp;amp;logoColor=silver&amp;amp;color=blue&#34; alt=&#34;Manual&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/nanomsg/nng/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/nanomsg/nng.svg?logoColor=silver&amp;amp;logo=open-source-initiative&amp;amp;label=&amp;amp;color=blue&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/nanomsg/nng/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/nanomsg/nng.svg?logo=github&amp;amp;label=&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/nanomsg/nng/master/UKRAINE.html&#34;&gt;here&lt;/a&gt; for an important message for the people of Russia.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;admonitionblock note&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Note&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; If you are looking for the legacy version of nanomsg, please see the &lt;a href=&#34;https://github.com/nanomsg/nanomsg&#34;&gt;nanomsg&lt;/a&gt; repository. &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This project is a rewrite of the Scalability Protocols library known as &lt;a href=&#34;https://github.com/nanomsg/nanomsg&#34;&gt;libnanomsg&lt;/a&gt;, and adds significant new capabilities, while retaining compatibility with the original.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;It may help to think of this as &#34;nanomsg-next-generation&#34;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_nng_lightweight_messaging_library&#34;&gt;NNG: Lightweight Messaging Library&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;NNG, like its predecessors &lt;a href=&#34;http://nanomsg.org&#34;&gt;nanomsg&lt;/a&gt; (and to some extent &lt;a href=&#34;http://zeromq.org/&#34;&gt;ZeroMQ&lt;/a&gt;), is a lightweight, broker-less library, offering a simple API to solve common recurring messaging problems, such as publish/subscribe, RPC-style request/reply, or service discovery. The API frees the programmer from worrying about details like connection management, retries, and other common considerations, so that they can focus on the application instead of the plumbing.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;NNG is implemented in C, requiring only C99 and CMake to build. It can be built as a shared or a static library, and is readily embeddable. It is also designed to be easy to port to new platforms if your platform is not already supported.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_license&#34;&gt;License&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;NNG is licensed under a liberal, and commercial friendly, MIT license. The goal to the license is to minimize friction in adoption, use, and contribution.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_enhancements_relative_to_nanomsg&#34;&gt;Enhancements (Relative to nanomsg)&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Here are areas where this project improves on &#34;nanomsg&#34;:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;hdlist&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;hdlist1&#34;&gt; &lt;strong&gt;Reliability&lt;/strong&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;hdlist2&#34;&gt; &lt;p&gt;NNG is designed for production use from the beginning. Every error case is considered, and it is designed to avoid crashing except in cases of gross developer error. (Hopefully we donâ€™t have any of these in our own code.)&lt;/p&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;hdlist1&#34;&gt; &lt;strong&gt;Scalability&lt;/strong&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;hdlist2&#34;&gt; &lt;p&gt;NNG scales out to engage multiple cores using a bespoke asynchronous I/O framework, using thread pools to spread load without exceeding typical system limits.&lt;/p&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;hdlist1&#34;&gt; &lt;strong&gt;Maintainability&lt;/strong&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;hdlist2&#34;&gt; &lt;p&gt;NNGâ€™s architecture is designed to be modular and easily grasped by developers unfamiliar with the code base. The code is also well documented.&lt;/p&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;hdlist1&#34;&gt; &lt;strong&gt;Extensibility&lt;/strong&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;hdlist2&#34;&gt; &lt;p&gt;Because it avoids ties to file descriptors, and avoids confusing interlocking state machines, it is easier to add new protocols and transports to NNG. This was demonstrated by the addition of the TLS and ZeroTier transports.&lt;/p&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;hdlist1&#34;&gt; &lt;strong&gt;Security&lt;/strong&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;hdlist2&#34;&gt; &lt;p&gt;NNG provides TLS 1.2 and ZeroTier transports, offering support for robust and industry standard authentication and encryption. In addition, it is hardened to be resilient against malicious attackers, with special consideration given to use in a hostile Internet.&lt;/p&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;hdlist1&#34;&gt; &lt;strong&gt;Usability&lt;/strong&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;hdlist2&#34;&gt; &lt;p&gt;NNG eschews slavish adherence parts of the more complex and less well understood POSIX APIs, while adopting the semantics that are familiar and useful. New APIs are intuitive, and the optional support for separating protocol context and state from sockets makes creating concurrent applications vastly simpler than previously possible.&lt;/p&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_compatibility&#34;&gt;Compatibility&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This project offers both wire compatibility and API compatibility, so most nanomsg users can begin using NNG right away.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Existing nanomsg and &lt;a href=&#34;https://github.com/nanomsg/mangos&#34;&gt;mangos&lt;/a&gt; applications can inter-operate with NNG applications automatically.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;That said, there are some areas where legacy nanomsg still offers capabilities NNG lacksâ€‰â€”â€‰specifically enhanced observability with statistics, and tunable prioritization of different destinations are missing, but will be added in a future release.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Additionally, some API capabilities that are useful for foreign language bindings are not implemented yet.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Some simple single threaded, synchronous applications may perform better under legacy nanomsg than under NNG. (We believe that these applications are the least commonly deployed, and least interesting from a performance perspective. NNGâ€™s internal design is slightly less efficient in such scenarios, but it greatly benefits when concurrency or when multiple sockets or network peers are involved.)&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_supported_platforms&#34;&gt;Supported Platforms&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;NNG supports Linux, macOS, Windows (Vista or better), illumos, Solaris, FreeBSD, Android, and iOS. Most other POSIX platforms should work out of the box but have not been tested. Very old versions of otherwise supported platforms might not work.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_requirements&#34;&gt;Requirements&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;To build this project, you will need a C99 compatible compiler and &lt;a href=&#34;http://www.cmake.org&#34;&gt;CMake&lt;/a&gt; version 3.13 or newer.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;We recommend using the &lt;a href=&#34;https://ninja-build.org&#34;&gt;Ninja&lt;/a&gt; build system (pass &#34;-G Ninja&#34; to CMake) when you can. (And not just because Ninja sounds like &#34;NNG&#34;â€‰â€”â€‰itâ€™s also blindingly fast and has made our lives as developers measurably better.)&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you want to build with TLS support you will also need &lt;a href=&#34;https://tls.mbed.org&#34;&gt;mbedTLS&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/nanomsg/nng/master/docs/BUILD_TLS.html&#34;&gt;docs/BUILD_TLS.html&lt;/a&gt; for details.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_quick_start&#34;&gt;Quick Start&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;With a Linux or UNIX environment:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  $ mkdir build&#xA;  $ cd build&#xA;  $ cmake -G Ninja ..&#xA;  $ ninja&#xA;  $ ninja test&#xA;  $ ninja install&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_api_documentation&#34;&gt;API Documentation&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The API documentation is provided in Asciidoc format in the &lt;code&gt;docs/man&lt;/code&gt; subdirectory, and also &lt;a href=&#34;https://nanomsg.github.io/nng&#34;&gt;online&lt;/a&gt;. The &lt;a href=&#34;https://raw.githubusercontent.com/nanomsg/nng/master/docs/man/libnng.3.html&#34;&gt;libnng(3)&lt;/a&gt; page is a good starting point.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;You can also purchase a copy of the &lt;a href=&#34;http://staysail.tech/books/nng_reference/index.html&#34;&gt;&lt;em&gt;NNG Reference Manual&lt;/em&gt;&lt;/a&gt;. (It is published in both electronic and printed formats.) Purchases of the book help fund continued development of NNG.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_example_programs&#34;&gt;Example Programs&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Some demonstration programs have been created to help serve as examples. These are located in the &lt;code&gt;demo&lt;/code&gt; directory.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_legacy_compatibility&#34;&gt;Legacy Compatibility&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;A legacy libnanomsg compatible API is available, and while it offers less capability than the modern NNG API, it may serve as a transition aid. Please see &lt;a href=&#34;https://raw.githubusercontent.com/nanomsg/nng/master/docs/man/nng_compat.3compat.html&#34;&gt;nng_compat(3)&lt;/a&gt; for details.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_commercial_support&#34;&gt;Commercial Support&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Commercial support for NNG is available.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Please contact &lt;a href=&#34;mailto:info@staysail.tech?subject=Inc.&#34;&gt;Staysail Systems&lt;/a&gt; to inquire further.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_commercial_sponsors&#34;&gt;Commercial Sponsors&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The development of NNG has been made possible through the generous sponsorship of &lt;a href=&#34;https://www.capitar.com&#34;&gt;Capitar IT Group BV&lt;/a&gt; and &lt;a href=&#34;http://staysail.tech&#34;&gt;Staysail Systems, Inc.&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>