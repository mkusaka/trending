<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-28T01:30:40Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheD1rkMtr/PE-Obfuscator</title>
    <updated>2023-04-28T01:30:40Z</updated>
    <id>tag:github.com,2023-04-28:/TheD1rkMtr/PE-Obfuscator</id>
    <link href="https://github.com/TheD1rkMtr/PE-Obfuscator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PE obfuscator with Evasion in mind&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PE-Obfuscator&lt;/h1&gt; &#xA;&lt;p&gt;PE obfuscator with Evasion in mind , needs &lt;em&gt;&lt;strong&gt;Admin Privilege&lt;/strong&gt;&lt;/em&gt; in order to load RTCore64 driver.&lt;/p&gt; &#xA;&lt;h2&gt;Video:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/123980007/234171901-c1eb735e-ceca-481d-9310-02ba30f6836b.mp4&#34;&gt;https://user-images.githubusercontent.com/123980007/234171901-c1eb735e-ceca-481d-9310-02ba30f6836b.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The Obfuscator :&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;- Gets xored Fileless PE from a remote server&#xA;- Drop the Loader in the disk &#xA;- Add random section to that Loader&#xA;- Add the xored Fileless PE to the new created Loader section&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The Loader :&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;- Unhook ntdll from knowndlls&#xA;- Drop RTCore64 to the disk&#xA;- Load/Install RTCore64&#xA;- Exploit RTCore64 to Remove Kernel Callbacks&#xA;- xor PE&#xA;- Map/Load PE from the added Section&#xA;- Stomped a big module that fit the PE.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits :&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://br-sn.github.io/Removing-Kernel-Callbacks-Using-Signed-Drivers/&#34;&gt;https://br-sn.github.io/Removing-Kernel-Callbacks-Using-Signed-Drivers/&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/br-sn/CheekyBlinder&#34;&gt;https://github.com/br-sn/CheekyBlinder&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/lawiet47/STFUEDR&#34;&gt;https://github.com/lawiet47/STFUEDR&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://papers.vx-underground.org/papers/Windows/Infection/2015-03-06%20-%20PE%20Infection%20-%20Add%20a%20PE%20section%20-%20with%20code.txt&#34;&gt;https://papers.vx-underground.org/papers/Windows/Infection/2015-03-06%20-%20PE%20Infection%20-%20Add%20a%20PE%20section%20-%20with%20code.txt&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BitMaker-hub/NerdMiner_v2</title>
    <updated>2023-04-28T01:30:40Z</updated>
    <id>tag:github.com,2023-04-28:/BitMaker-hub/NerdMiner_v2</id>
    <link href="https://github.com/BitMaker-hub/NerdMiner_v2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Improved version of first ESP32 NerdMiner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NerdSoloMiner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;The NerdSoloMiner v2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a &lt;strong&gt;free and open source project&lt;/strong&gt; that let you try to reach a bitcoin block with a small piece of hardware.&lt;/p&gt; &#xA;&lt;p&gt;The main aim of this project is to let you &lt;strong&gt;learn more about minery&lt;/strong&gt; and to have a beautiful piece of hardware in your desktop.&lt;/p&gt; &#xA;&lt;p&gt;Original project &lt;a href=&#34;https://github.com/valerio-vaccaro/HAN&#34;&gt;https://github.com/valerio-vaccaro/HAN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/master/images/NerdMinerv2.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TTGO T-Display S3&lt;/li&gt; &#xA; &lt;li&gt;3D BOX &lt;a href=&#34;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/master/3d_files/&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Project description&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;ESP32 implementing Stratum protocol&lt;/strong&gt; to mine on solo pool. Pool can be changed but originally works with ckpool.&lt;/p&gt; &#xA;&lt;p&gt;This project is using ESP32-S3, uses WifiManager to modify miner settings and save them to SPIFF.&lt;/p&gt; &#xA;&lt;p&gt;This miner is multicore and multithreads, each thread mine a different block template. After 1,000,000 trials the block in refreshed in order to avoid mining on old template.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Current project is still in developement and more features will be added&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Tutorial&lt;/h2&gt; &#xA;&lt;h3&gt;Hardware requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TTGO T-Display S3 &amp;gt; Buy it on aliexpress or amazon&lt;/li&gt; &#xA; &lt;li&gt;3D BOX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Flash firmware&lt;/h3&gt; &#xA;&lt;p&gt;Create your own miner using the online tool &lt;strong&gt;ESPtool&lt;/strong&gt; and the &lt;strong&gt;binary files&lt;/strong&gt; that you will find in the src/bin folder. If you want you can compile the entire project using Arduino, PlatformIO or Expressif IDF.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get a TTGO T-display S3&lt;/li&gt; &#xA; &lt;li&gt;Download this repository&lt;/li&gt; &#xA; &lt;li&gt;Go to ESPtool online: &lt;a href=&#34;https://espressif.github.io/esptool-js/&#34;&gt;https://espressif.github.io/esptool-js/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Load the firmware with the binaries from the src/bin folder.&lt;/li&gt; &#xA; &lt;li&gt;Plug your board and select each file from src/bin with its address&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Build troubleshooting&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Online ESPtool works with chrome, chromium, brave&lt;/li&gt; &#xA; &lt;li&gt;ESPtool recommendations: use 115200bps&lt;/li&gt; &#xA; &lt;li&gt;Build errors &amp;gt; If during firmware download upload stops, it&#39;s recommended to enter the board in boot mode. Unplug cable, hold right bottom button and then plug cable. Try programming&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;NerdMiner configuration&lt;/h3&gt; &#xA;&lt;p&gt;After programming, you will only need to setup your Wifi and BTC address.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Connect to NerdMinerAP&lt;/li&gt; &#xA; &lt;li&gt;Setup your Wifi Network&lt;/li&gt; &#xA; &lt;li&gt;Add your BTCaddress&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Optional you can select other pool:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Pool URL&lt;/th&gt; &#xA;   &lt;th&gt;Port&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solo.ckpool.org&lt;/td&gt; &#xA;   &lt;td&gt;3333&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://solo.ckpool.org/&#34;&gt;https://solo.ckpool.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;btc.zsolo.bid&lt;/td&gt; &#xA;   &lt;td&gt;6057&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zsolo.bid/en/btc-solo-mining-pool&#34;&gt;https://zsolo.bid/en/btc-solo-mining-pool&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;eu.stratum.slushpool.com&lt;/td&gt; &#xA;   &lt;td&gt;3333&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://braiins.com/pool&#34;&gt;https://braiins.com/pool&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you need to reboot your currentConfig&lt;/strong&gt;, hold right top button during 5 seconds and config will be deleted.&lt;/p&gt; &#xA;&lt;h4&gt;Build video&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/POUT2R_opDs&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/POUT2R_opDs/0.jpg&#34; alt=&#34;Ver video aqu√≠&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;h3&gt;Project guidelines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Current project was addapted to work with PlatformIO&lt;/li&gt; &#xA; &lt;li&gt;Current project works with ESP32-S3 but any ESP32 can be used.&lt;/li&gt; &#xA; &lt;li&gt;Partition squeme should be build as huge app&lt;/li&gt; &#xA; &lt;li&gt;All libraries needed shown on platform.ini&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;On process&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Move project to platformIO&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bug rectangle on screen when 1milion shares&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bug memory leaks&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bug Reboots when received JSON contains some null values&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve hashrate using Blockstream Jade miner code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add blockHeight to screen&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add new screen with global mining stats&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support to control BM1397&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enjoy&lt;/p&gt;</summary>
  </entry>
</feed>