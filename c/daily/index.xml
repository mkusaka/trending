<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-15T01:29:22Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eclipse-mosquitto/mosquitto</title>
    <updated>2024-11-15T01:29:22Z</updated>
    <id>tag:github.com,2024-11-15:/eclipse-mosquitto/mosquitto</id>
    <link href="https://github.com/eclipse-mosquitto/mosquitto" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Eclipse Mosquitto - An open source MQTT broker&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eclipse Mosquitto&lt;/h1&gt; &#xA;&lt;p&gt;Mosquitto is an open source implementation of a server for version 5.0, 3.1.1, and 3.1 of the MQTT protocol. It also includes a C and C++ client library, and the &lt;code&gt;mosquitto_pub&lt;/code&gt; and &lt;code&gt;mosquitto_sub&lt;/code&gt; utilities for publishing and subscribing.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;See the following links for more information on MQTT:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Community page: &lt;a href=&#34;http://mqtt.org/&#34;&gt;http://mqtt.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MQTT v3.1.1 standard: &lt;a href=&#34;https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.html&#34;&gt;https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MQTT v5.0 standard: &lt;a href=&#34;https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html&#34;&gt;https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Mosquitto project information is available at the following locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Main homepage: &lt;a href=&#34;https://mosquitto.org/&#34;&gt;https://mosquitto.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Find existing bugs or submit a new bug: &lt;a href=&#34;https://github.com/eclipse/mosquitto/issues&#34;&gt;https://github.com/eclipse/mosquitto/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source code repository: &lt;a href=&#34;https://github.com/eclipse/mosquitto&#34;&gt;https://github.com/eclipse/mosquitto&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is also a public test server available at &lt;a href=&#34;https://test.mosquitto.org/&#34;&gt;https://test.mosquitto.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://mosquitto.org/download/&#34;&gt;https://mosquitto.org/download/&lt;/a&gt; for details on installing binaries for various platforms.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;If you have installed a binary package the broker should have been started automatically. If not, it can be started with a very basic configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mosquitto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use &lt;code&gt;mosquitto_sub&lt;/code&gt; to subscribe to a topic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mosquitto_sub -t &#39;test/topic&#39; -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to publish a message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mosquitto_pub -t &#39;test/topic&#39; -m &#39;hello world&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that starting the broker like this allows anonymous/unauthenticated access but only from the local computer, so it&#39;s only really useful for initial testing.&lt;/p&gt; &#xA;&lt;p&gt;If you want to have clients from another computer connect, you will need to provide a configuration file. If you have installed from a binary package, you will probably already have a configuration file at somewhere like &lt;code&gt;/etc/mosquitto/mosquitto.conf&lt;/code&gt;. If you&#39;ve compiled from source, you can write your config file then run as &lt;code&gt;mosquitto -c /path/to/mosquitto.conf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To start your config file you define a listener and you will need to think about what authentication you require. It is not advised to run your broker with anonymous access when it is publically available.&lt;/p&gt; &#xA;&lt;p&gt;For details on how to do this, look at the &lt;a href=&#34;https://mosquitto.org/documentation/authentication-methods/&#34;&gt;authentication methods&lt;/a&gt; available and the &lt;a href=&#34;https://mosquitto.org/documentation/dynamic-security/&#34;&gt;dynamic security plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for the broker, clients and client library API can be found in the man pages, which are available online at &lt;a href=&#34;https://mosquitto.org/man/&#34;&gt;https://mosquitto.org/man/&lt;/a&gt;. There are also pages with an introduction to the features of MQTT, the &lt;code&gt;mosquitto_passwd&lt;/code&gt; utility for dealing with username/passwords, and a description of the configuration file options available for the broker.&lt;/p&gt; &#xA;&lt;p&gt;Detailed client library API documentation can be found at &lt;a href=&#34;https://mosquitto.org/api/&#34;&gt;https://mosquitto.org/api/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;To build from source the recommended route for end users is to download the archive from &lt;a href=&#34;https://mosquitto.org/download/&#34;&gt;https://mosquitto.org/download/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On Windows and Mac, use &lt;code&gt;cmake&lt;/code&gt; to build. On other platforms, just run &lt;code&gt;make&lt;/code&gt; to build. For Windows, see also &lt;code&gt;README-windows.md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are building from the git repository then the documentation will not already be built. Use &lt;code&gt;make binary&lt;/code&gt; to skip building the man pages, or install &lt;code&gt;docbook-xsl&lt;/code&gt; on Debian/Ubuntu systems.&lt;/p&gt; &#xA;&lt;h3&gt;Build Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;c-ares (libc-ares-dev on Debian based systems) - only when compiled with &lt;code&gt;make WITH_SRV=yes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;cJSON - for client JSON output support. Disable with &lt;code&gt;make WITH_CJSON=no&lt;/code&gt; Auto detected with CMake.&lt;/li&gt; &#xA; &lt;li&gt;libwebsockets (libwebsockets-dev) - enable with &lt;code&gt;make WITH_WEBSOCKETS=yes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;openssl (libssl-dev on Debian based systems) - disable with &lt;code&gt;make WITH_TLS=no&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;pthreads - for client library thread support. This is required to support the &lt;code&gt;mosquitto_loop_start()&lt;/code&gt; and &lt;code&gt;mosquitto_loop_stop()&lt;/code&gt; functions. If compiled without pthread support, the library isn&#39;t guaranteed to be thread safe.&lt;/li&gt; &#xA; &lt;li&gt;uthash / utlist - bundled versions of these headers are provided, disable their use with &lt;code&gt;make WITH_BUNDLED_DEPS=no&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;xsltproc (xsltproc and docbook-xsl on Debian based systems) - only needed when building from git sources - disable with &lt;code&gt;make WITH_DOCS=no&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Equivalent options for enabling/disabling features are available when using the CMake build.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Mosquitto was written by Roger Light &lt;a href=&#34;mailto:roger@atchoo.org&#34;&gt;roger@atchoo.org&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>