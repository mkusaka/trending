<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-20T01:28:20Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>foobnix/LibreraReader</title>
    <updated>2023-11-20T01:28:20Z</updated>
    <id>tag:github.com,2023-11-20:/foobnix/LibreraReader</id>
    <link href="https://github.com/foobnix/LibreraReader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Book Reader for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/foobnix/LirbiReader/master/logo.jpg&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The development and support of Librera is frozen for an unpredictable time, there is a big war in my country Ukraine.&lt;/strong&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/2022_Russian_invasion_of_Ukraine&#34;&gt;Russian invasion of Ukraine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://u24.gov.ua/&#34;&gt;OFFICIAL FUNDRAISING PLATFORM OF UKRAINE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Librera Reader&lt;/h1&gt; &#xA;&lt;p&gt;Librera Reader is an e-book reader for Android devices; it supports the following formats: PDF, EPUB, EPUB3, MOBI, DjVu, FB2, TXT, RTF, AZW, AZW3, HTML, CBZ, CBR, DOC, DOCX, and OPDS Catalogs&lt;/p&gt; &#xA;&lt;h3&gt;Download application&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.foobnix.pdf.reader&#34;&gt;Librera Reader on Google Play&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.foobnix.pro.pdf.reader&#34;&gt;Librera PRO on Google Play&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.foobnix.pro.pdf.reader/&#34;&gt;Librera F-Droid&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://beta.librera.mobi/&#34;&gt;Beta testing .apk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/foobnix/LirbiReader/tree/master/Builder/fonts&#34;&gt;Application Fonts.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Links&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://librera.mobi/&#34;&gt;web: https://librera.mobi/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://librera.mobi/what-is-new/&#34;&gt;What is new/Changes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://librera.mobi/faq/&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/LibreraReader&#34;&gt;Telegram Info&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/librera_reader_chat&#34;&gt;Telegram Chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/librera&#34;&gt;Support/Donations on Patreon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:librera.reader@gmail.com&#34;&gt;Email: librera.reader@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Required build libs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;mesa-common-dev libxcursor-dev libxrandr-dev libxinerama-dev libglu1-mesa-dev libxi-dev pkg-config libgl-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You also need the Android NDK in version 20+ Please ensure to download it using android studio and add the NDK to your PATH.&lt;/p&gt; &#xA;&lt;h2&gt;Create a keystore&lt;/h2&gt; &#xA;&lt;p&gt;Even if you do not plan to upload a version yourself you need a keystore with a certificate to build. The keystore needs to be in PKCS12 format. You can create a keystore in your actual directory using the following call (replace ALIAS by your alias, it is just a name):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;keytool -genkey -v -storetype PKCS12 -keystore keystore.pkcs12 -alias ALIAS -keyalg RSA -keysize 2048 -validity 10000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now edit or create the file ~/.gradle/gradle.properties and set following values (replacing PASSWD by the password you typed while creating the keystore, ALIAS as before and using the path to your keystore):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RELEASE_STORE_FILE=/PATH/TO/YOUR/keystore.pkcs12&#xA;RELEASE_STORE_PASSWORD=PASSWD&#xA;RELEASE_KEY_PASSWORD=PASSWD&#xA;RELEASE_KEY_ALIAS=ALIAS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Create Firebase Authentication file&lt;/h2&gt; &#xA;&lt;p&gt;To build with firebase support (all version but the ones for Fdroid) you need to get an authentication file for firebase services offered by google. Therefore please follow &lt;a href=&#34;https://firebase.google.com/docs/android/setup&#34;&gt;https://firebase.google.com/docs/android/setup&lt;/a&gt; to create your own project. You need to register for the packages com.foobnix.pdf.info and com.foobnix.pdf.reader.a1. This way you will get a google-services.json file that you have to place in the app folder of the repository.&lt;/p&gt; &#xA;&lt;p&gt;For this project only Analytics is used, so a spakling plan is all you need.&lt;/p&gt; &#xA;&lt;h2&gt;Librera Build on MuPdf&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd Builder&#xA;./link_to_mupdf_x.x.x.sh (Change the paths to mupdf and jniLibs folders)&#xA;cd ..&#xA;./gradlew assembleLibrera&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building for F-Droid for Android&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to build for F-Droid (e.g. not using google services, Internet) you can run the build with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd Builder&#xA;./link_to_mupdf_x.x.x.sh&#xA;cd ..&#xA;./gradlew assembleFdroid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;F-Droid build does also not need a &lt;strong&gt;google-services.json&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Librera depends on:&lt;/h2&gt; &#xA;&lt;p&gt;MuPDF - (AGPL License) &lt;a href=&#34;https://mupdf.com/downloads/archive/&#34;&gt;https://mupdf.com/downloads/archive/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ebookdroid&lt;/li&gt; &#xA; &lt;li&gt;djvulibre&lt;/li&gt; &#xA; &lt;li&gt;hpx&lt;/li&gt; &#xA; &lt;li&gt;junrar&lt;/li&gt; &#xA; &lt;li&gt;glide&lt;/li&gt; &#xA; &lt;li&gt;libmobi&lt;/li&gt; &#xA; &lt;li&gt;commons-compress&lt;/li&gt; &#xA; &lt;li&gt;eventbus&lt;/li&gt; &#xA; &lt;li&gt;greendao&lt;/li&gt; &#xA; &lt;li&gt;jsoup&lt;/li&gt; &#xA; &lt;li&gt;juniversalchardet&lt;/li&gt; &#xA; &lt;li&gt;commons-compress&lt;/li&gt; &#xA; &lt;li&gt;okhttp3&lt;/li&gt; &#xA; &lt;li&gt;okhttp-digest&lt;/li&gt; &#xA; &lt;li&gt;okio&lt;/li&gt; &#xA; &lt;li&gt;rtfparserkit&lt;/li&gt; &#xA; &lt;li&gt;java-mammoth&lt;/li&gt; &#xA; &lt;li&gt;zip4j&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Librera is distributed under the GPL&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/foobnix/LibreraReader/master/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt; file for license rights and limitations (GPL v.3).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ruby/prism</title>
    <updated>2023-11-20T01:28:20Z</updated>
    <id>tag:github.com,2023-11-20:/ruby/prism</id>
    <link href="https://github.com/ruby/prism" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prism Ruby parser&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Prism Ruby parser&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;Prism Ruby parser&#34; height=&#34;256px&#34; src=&#34;https://github.com/ruby/prism/raw/main/doc/images/prism.png?raw=true&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;This is a parser for the Ruby programming language. It is designed to be portable, error tolerant, and maintainable. It is written in C99 and has no dependencies. It is currently being integrated into &lt;a href=&#34;https://github.com/ruby/ruby&#34;&gt;CRuby&lt;/a&gt;, &lt;a href=&#34;https://github.com/jruby/jruby&#34;&gt;JRuby&lt;/a&gt;, &lt;a href=&#34;https://github.com/oracle/truffleruby&#34;&gt;TruffleRuby&lt;/a&gt;, &lt;a href=&#34;https://github.com/sorbet/sorbet&#34;&gt;Sorbet&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ruby-syntax-tree/syntax_tree&#34;&gt;Syntax Tree&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The repository contains the infrastructure for both a shared library (libprism) and a native CRuby extension. The shared library has no bindings to CRuby itself, and so can be used by other projects. The native CRuby extension links against &lt;code&gt;ruby.h&lt;/code&gt;, and so is suitable in the context of CRuby.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── Makefile              configuration to compile the shared library and native tests&#xA;├── Rakefile              configuration to compile the native extension and run the Ruby tests&#xA;├── bin&#xA;│&amp;nbsp;&amp;nbsp; ├── lex               runs the lexer on a file or string, prints the tokens, and compares to ripper&#xA;│&amp;nbsp;&amp;nbsp; └── parse             runs the parser on a file or string and prints the syntax tree&#xA;├── config.yml            specification for tokens and nodes in the tree&#xA;├── docs                  documentation about the project&#xA;├── ext&#xA;│&amp;nbsp;&amp;nbsp; └── prism&#xA;│&amp;nbsp;&amp;nbsp;     ├── extconf.rb    configuration to generate the Makefile for the native extension&#xA;│&amp;nbsp;&amp;nbsp;     └── extension.c   the native extension that interacts with libprism&#xA;├── fuzz                  files related to fuzz testing&#xA;├── include&#xA;│&amp;nbsp;&amp;nbsp; ├── prism             header files for the shared library&#xA;│&amp;nbsp;&amp;nbsp; └── prism.h           main header file for the shared library&#xA;├── java                  Java bindings for the shared library&#xA;├── lib&#xA;│&amp;nbsp;&amp;nbsp; ├── prism             Ruby library files&#xA;│&amp;nbsp;&amp;nbsp; └── prism.rb          main entrypoint for the Ruby library&#xA;├── rakelib               various Rake tasks for the project&#xA;├── rust&#xA;│&amp;nbsp;&amp;nbsp; ├── prism             Rustified crate for the shared library&#xA;│&amp;nbsp;&amp;nbsp; └── prism-sys         FFI binding for Rust&#xA;├── src&#xA;│&amp;nbsp;&amp;nbsp; ├── enc               various encoding files&#xA;│&amp;nbsp;&amp;nbsp; ├── util              various utility files&#xA;│&amp;nbsp;&amp;nbsp; └── prism.c           main entrypoint for the shared library&#xA;├── templates             contains ERB templates generated by templates/template.rb&#xA;│&amp;nbsp;&amp;nbsp; └── template.rb       generates code from the nodes and tokens configured by config.yml&#xA;└── test&#xA;    └── prism&#xA;        ├── fixtures      Ruby code used for testing&#xA;        └── snapshots     snapshots of generated syntax trees corresponding to fixtures&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To compile the shared library, you will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A C99 compiler&lt;/li&gt; &#xA; &lt;li&gt;autotools (autoconf, automake, libtool)&lt;/li&gt; &#xA; &lt;li&gt;make&lt;/li&gt; &#xA; &lt;li&gt;Ruby 3.3.0-preview1 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have these dependencies, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to fetch the Ruby dependencies. Finally, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to compile the shared library. It will be built in the &lt;code&gt;build&lt;/code&gt; directory. To test that everything is working, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/parse -e &#34;1 + 2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to see the syntax tree for the expression &lt;code&gt;1 + 2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file for more information. We additionally have documentation about the overall design of the project as well as various subtopics.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/building.md&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/configuration.md&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/design.md&#34;&gt;Design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/encoding.md&#34;&gt;Encoding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/fuzzing.md&#34;&gt;Fuzzing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/heredocs.md&#34;&gt;Heredocs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/javascript.md&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/mapping.md&#34;&gt;Mapping&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/releasing.md&#34;&gt;Releasing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/ripper.md&#34;&gt;Ripper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/ruby_api.md&#34;&gt;Ruby API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/serialization.md&#34;&gt;Serialization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ruby/prism/main/docs/testing.md&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>