<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-24T01:30:44Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mertdas/PrivKit</title>
    <updated>2023-03-24T01:30:44Z</updated>
    <id>tag:github.com,2023-03-24:/mertdas/PrivKit</id>
    <link href="https://github.com/mertdas/PrivKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PrivKit is a simple beacon object file that detects privilege escalation vulnerabilities caused by misconfigurations on Windows OS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PrivKit&lt;/h1&gt; &#xA;&lt;p&gt;PrivKit is a simple beacon object file that detects privilege escalation vulnerabilities caused by misconfigurations on Windows OS.&lt;/p&gt; &#xA;&lt;h2&gt;PrivKit detects following misconfigurations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt; Checks for Unquoted Service Paths&#xA; Checks for Autologon Registry Keys&#xA; Checks for Always Install Elevated Registry Keys&#xA; Checks for Modifiable Autoruns&#xA; Checks for Hijackable Paths&#xA; Enumerates Credentials From Credential Manager&#xA; Looks for current Token Privileges&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;[03/20 00:51:06] beacon&amp;gt; privcheck&#xA;[03/20 00:51:06] [*] Priv Esc Check Bof by @merterpreter&#xA;[03/20 00:51:06] [*] Checking For Unquoted Service Paths..&#xA;[03/20 00:51:06] [*] Checking For Autologon Registry Keys..&#xA;[03/20 00:51:06] [*] Checking For Always Install Elevated Registry Keys..&#xA;[03/20 00:51:06] [*] Checking For Modifiable Autoruns..&#xA;[03/20 00:51:06] [*] Checking For Hijackable Paths..&#xA;[03/20 00:51:06] [*] Enumerating Credentials From Credential Manager..&#xA;[03/20 00:51:06] [*] Checking For Token Privileges..&#xA;[03/20 00:51:06] [+] host called home, sent: 10485 bytes&#xA;[03/20 00:51:06] [+] received output:&#xA;Unquoted Service Path Check Result: Vulnerable service path found: c:\program files (x86)\grasssoft\macro expert\MacroService.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Simply load the cna file and type &#34;privcheck&#34;&lt;br&gt; If you want to compile by yourself you can use:&lt;br&gt; &lt;code&gt;make all&lt;/code&gt;&lt;br&gt; or &lt;br&gt; &lt;code&gt;x86_64-w64-mingw32-gcc -c cfile.c -o ofile.o&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to look for just one misconf you can use object file with &#34;inline-execute&#34; for example&lt;br&gt; &lt;code&gt; inline-execute /path/tokenprivileges.o&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48562581/226249192-84da03d5-435a-4da0-a6e6-4c451d2403e4.PNG&#34; alt=&#34;privcheck1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48562581/226249135-a2444998-8c4f-4783-9b60-726c887032e4.PNG&#34; alt=&#34;privcheck2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;Mr.Un1K0d3r - Offensive Coding Portal &lt;br&gt; &lt;a href=&#34;https://mr.un1k0d3r.world/portal/&#34;&gt;https://mr.un1k0d3r.world/portal/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Outflank - C2-Tool-Collection&lt;br&gt; &lt;a href=&#34;https://github.com/outflanknl/C2-Tool-Collection&#34;&gt;https://github.com/outflanknl/C2-Tool-Collection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;dtmsecurity - Beacon Object File (BOF) Creation Helper&lt;br&gt; &lt;a href=&#34;https://github.com/dtmsecurity/bof_helper&#34;&gt;https://github.com/dtmsecurity/bof_helper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Microsoft :) &lt;br&gt; &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/&#34;&gt;https://learn.microsoft.com/en-us/windows/win32/api/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;HsTechDocs by HelpSystems(Fortra)&lt;br&gt; &lt;a href=&#34;https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/topics/beacon-object-files_how-to-develop.htm&#34;&gt;https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/topics/beacon-object-files_how-to-develop.htm&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cloudwu/neuralnet</title>
    <updated>2023-03-24T01:30:44Z</updated>
    <id>tag:github.com,2023-03-24:/cloudwu/neuralnet</id>
    <link href="https://github.com/cloudwu/neuralnet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Toy neural network&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Toy neural network&lt;/h1&gt; &#xA;&lt;p&gt;It&#39;s a C/Lua implementation of a feedforward neural network in the book &#34;&lt;a href=&#34;http://neuralnetworksanddeeplearning.com/&#34;&gt;Neural Networks and Deep Learning&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download MNIST data from &lt;a href=&#34;http://yann.lecun.com/exdb/mnist/&#34;&gt;http://yann.lecun.com/exdb/mnist/&lt;/a&gt; , and put them into data/&lt;/li&gt; &#xA; &lt;li&gt;Build lua modules mnist and ann with lua 5.4&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;lua network.lua&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Impalabs/CVE-2023-27326</title>
    <updated>2023-03-24T01:30:44Z</updated>
    <id>tag:github.com,2023-03-24:/Impalabs/CVE-2023-27326</id>
    <link href="https://github.com/Impalabs/CVE-2023-27326" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VM Escape for Parallels Desktop &lt;18.1.1&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Parallels Desktop VM Escape&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains an exploit for a &lt;a href=&#34;https://www.parallels.com/products/desktop/&#34;&gt;Parallels Desktop&lt;/a&gt; vulnerability which has been assigned CVE-2023-27326. This vulnerability allows local attackers to escalate privileges on affected installations of Parallels Desktop.&lt;/p&gt; &#xA;&lt;p&gt;The exploit was tested on Parallels Desktop version 18.0.0 (53049), and the vulnerability was patched in the 18.1.1 (53328) &lt;a href=&#34;https://kb.parallels.com/125013&#34;&gt;security update&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Vulnerability Details&lt;/h2&gt; &#xA;&lt;p&gt;The specific flaw exists within the &lt;em&gt;Toolgate&lt;/em&gt; component. The issue results from the lack of proper validation of a user-supplied path prior to using it in file operations. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of the current user on the host system.&lt;/p&gt; &#xA;&lt;p&gt;The full details of the vulnerability can be found in the accompanying &lt;a href=&#34;https://blog.impalabs.com/2303_advisory_parallels-desktop_toolgate.html&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The vulnerability was discovered and exploited by Alexandre Adamski of &lt;a href=&#34;https://impalabs.com&#34;&gt;Impalabs&lt;/a&gt;. The boiler plate code of the kernel module is taken from &lt;a href=&#34;https://ret2.io/&#34;&gt;RET2 Systems&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/ret2/Pwn2Own-2021-Parallels/&#34;&gt;Pwn2Own 2021 exploit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The contents of this repo are licensed and distributed under the MIT license.&lt;/p&gt;</summary>
  </entry>
</feed>