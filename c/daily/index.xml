<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-17T01:30:42Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Kiriki-liszt/JS_Inflator_to_VST2_VST3</title>
    <updated>2023-03-17T01:30:42Z</updated>
    <id>tag:github.com,2023-03-17:/Kiriki-liszt/JS_Inflator_to_VST2_VST3</id>
    <link href="https://github.com/Kiriki-liszt/JS_Inflator_to_VST2_VST3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JS Inflator, the copy of Sonox Inflator, in vstsdk&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JS_Inflator_to_VST2_VST3&lt;/h1&gt; &#xA;&lt;p&gt;JS Inflator, the copy of Sonox Inflator, in vstsdk&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/Kiriki-liszt/JS_Inflator_to_VST2_VST3/raw/main/screenshot.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;Windows only. No Mac nor Linux compatible.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/Kiriki-liszt/JS_Inflator_to_VST2_VST3/raw/main/VST_Compatible_Logo_Steinberg_with_TM.png&#34; width=&#34;100&#34;&gt; &#xA;&lt;p&gt;VSTSDK 3.7.7 used&lt;br&gt; VSTGUI 4.12 used&lt;/p&gt; &#xA;&lt;p&gt;Built as VST3, but compatible to VST2, too.&lt;/p&gt; &#xA;&lt;p&gt;v1.0.0: intial try.&lt;br&gt; v1.1.0: VuPPM meter change(mono -&amp;gt; stereo, continuous to discrete), but not complete!&lt;br&gt; v1.2.0: VuPPM meter corrected!&lt;br&gt; v1.2.1: Channel configuration corrected. probably a bug fix for crashing sometimes.&lt;br&gt; v1.3.0: Curve knob fixed!!! and 32FP dither by airwindows.&lt;/p&gt; &#xA;&lt;p&gt;This is my first attempt with VSTSDK &amp;amp; VSTGUI.&lt;br&gt; Some codes might be inefficent...&lt;/p&gt; &#xA;&lt;p&gt;For someone like me, wondering how to use volume fader;&lt;br&gt; Use a RangeParameter!&lt;br&gt; param as normalized parameter[0.0, 1.0],&lt;br&gt; dB as Plain value,&lt;br&gt; gain as multiplier of each samples.&lt;br&gt; For normParam to gain, check ~process.cpp&lt;/p&gt; &#xA;&lt;p&gt;ex)&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;param&lt;/th&gt; &#xA;   &lt;th&gt;dB&lt;/th&gt; &#xA;   &lt;th&gt;gain&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.0&lt;/td&gt; &#xA;   &lt;td&gt;-12&lt;/td&gt; &#xA;   &lt;td&gt;0.25&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.5&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0&lt;/td&gt; &#xA;   &lt;td&gt;+12&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;param&lt;/th&gt; &#xA;   &lt;th&gt;dB&lt;/th&gt; &#xA;   &lt;th&gt;gain&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.0&lt;/td&gt; &#xA;   &lt;td&gt;-12&lt;/td&gt; &#xA;   &lt;td&gt;0.25&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.5&lt;/td&gt; &#xA;   &lt;td&gt;-6&lt;/td&gt; &#xA;   &lt;td&gt;0.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Todo&lt;br&gt; done: Input Vu meter correct dB count&lt;br&gt; now: Preset save &amp;amp; import&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>analogdevicesinc/linux</title>
    <updated>2023-03-17T01:30:42Z</updated>
    <id>tag:github.com,2023-03-17:/analogdevicesinc/linux</id>
    <link href="https://github.com/analogdevicesinc/linux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux kernel variant from Analog Devices; see README.md for details&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux kernel - variant from Analog Devices, Inc.&lt;/h1&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/analogdevicesinc/linux/master/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/analogdevicesinc/linux/master/#how-to-build&#34;&gt;How to build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/analogdevicesinc/linux/master/#release-branches&#34;&gt;Release branches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/analogdevicesinc/linux/master/#rebased-branches&#34;&gt;Rebased branches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/analogdevicesinc/linux/master/#raspberry-pi-branches&#34;&gt;Raspberry Pi branches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/analogdevicesinc/linux/master/#intelaltera-branches&#34;&gt;Intel/Altera branches&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;The Linux kernel in this repository is the &lt;a href=&#34;https://github.com/Xilinx/linux-xlnx&#34;&gt;Linux kernel from Xilinx&lt;/a&gt; together with drivers &amp;amp; patches applied from Analog Devices.&lt;/p&gt; &#xA;&lt;p&gt;Details about the drivers that are of interest [and supported] by this repository can be found on the &lt;a href=&#34;https://wiki.analog.com/resources/tools-software/linux-drivers-all&#34;&gt;Analog Devices wiki&lt;/a&gt;. This readme focuses on details specific to how this code is structured/organized, how it was derived, etc.&lt;/p&gt; &#xA;&lt;p&gt;The current master is based on &lt;a href=&#34;https://github.com/Xilinx/linux-xlnx/tree/xilinx-v2021.2&#34;&gt;xilinx v2021.2&lt;/a&gt;. For details about the merge see commit &lt;a href=&#34;https://github.com/analogdevicesinc/linux/commit/8290da63ebff9cb0aa6c221b7f52425455843529&#34;&gt;8290da63ebff&lt;/a&gt; (&#34;Merge tag &#39;xilinx-v2021.2&#39; of &lt;a href=&#34;https://github.com/Xilinx/linux-xlnx.git&#34;&gt;https://github.com/Xilinx/linux-xlnx.git&lt;/a&gt;&#34;). In this Xilinx release, the current version of upstream Linux is &lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tag/?h=v5.10&#34;&gt;Linux 5.10&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For legacy reasons, the &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/xcomm_zynq&#34;&gt;xcomm_zynq&lt;/a&gt; branch is still available and should be in-sync with current master. That branch used to be the old master branch.&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;p&gt;For build instructions &lt;a href=&#34;https://wiki.analog.com/resources/tools-software/linux-drivers-all#building_the_adi_linux_kernel&#34;&gt;check the wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Release branches&lt;/h2&gt; &#xA;&lt;p&gt;All release branches have the [YEAR]_R[NUM] format. There are some special release branches sometimes (like 2014_R2_altera), because it wasn&#39;t always possible to match the Linux repo between Xilinx &amp;amp; Intel/Altera.&lt;/p&gt; &#xA;&lt;p&gt;Each release is matched with a release from the &lt;a href=&#34;https://github.com/analogdevicesinc/hdl&#34;&gt;HDL repo&lt;/a&gt;. The branching name/model for the HDL repo differs a bit from the one in this repo, but the matching should be obvious. Therefore, each kernel in the release branches is be built using the toolchains from a specific version of Vivado &amp;amp; Quartus. A matching of these can be found &lt;a href=&#34;https://wiki.analog.com/resources/fpga/docs/releases&#34;&gt;on the wiki&lt;/a&gt;. Release branches can be built using other GCC toolchains, but in the official SD-card images provided, they will use the toolchains from Vivado/Quartus.&lt;/p&gt; &#xA;&lt;h2&gt;Rebased branches&lt;/h2&gt; &#xA;&lt;p&gt;Starting with branch &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/adi-4.9.0&#34;&gt;adi-4.9.0&lt;/a&gt; there are rebased branches. They&#39;re typically rebased branches from Xilinx with the ADI patches on top so that it&#39;s easier to identify patches that are not yet upstreamed.&lt;/p&gt; &#xA;&lt;p&gt;For &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/adi-4.9.0&#34;&gt;adi-4.9.0&lt;/a&gt; the base was branch &lt;a href=&#34;https://github.com/Xilinx/linux-xlnx/tree/xlnx_rebase_v4.9&#34;&gt;xlnx_rebase_v4.9&lt;/a&gt; at commit &lt;a href=&#34;https://github.com/analogdevicesinc/linux/commit/d45e196f59364e9f5eafe46027a7d2af349083974&#34;&gt;d45e196f59364e9f5eafe46027a7d2af349083974&lt;/a&gt; in the ADI repo and commit &lt;a href=&#34;https://github.com/Xilinx/linux-xlnx/commit/45e196f59364e9f5eafe46027a7d2af349083974&#34;&gt;45e196f59364e9f5eafe46027a7d2af349083974&lt;/a&gt; in the Xilinx repo. All ADI patches &amp;amp; drivers up to a specific point in time were cherry-picked to that branch from master. Note that since the &lt;code&gt;adi-4.9.0&lt;/code&gt; branch is the first rebased branch, it&#39;s not particularly the best rebase that could have been done, but it should provide some patches that are somewhat reasonable to take and apply on top of an upstream 4.9 kernel [after some polishing].&lt;/p&gt; &#xA;&lt;p&gt;The latest rebased branch depends on the current linux version supported in master. At the time of writing it is 5.10 so that &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/adi-5.10.0&#34;&gt;adi-5.10.0&lt;/a&gt; is the latest. Also note that a diff between the latest rebased branch and master (&lt;code&gt;git diff master adi-5.10.0&lt;/code&gt;) must be NULL.&lt;/p&gt; &#xA;&lt;h2&gt;Raspberry Pi branches&lt;/h2&gt; &#xA;&lt;p&gt;These provide a kernel that is good to run on a Raspberry Pi board. All the drivers present in the master branch should be automatically cherry-picked into the latest rpi branch.&lt;/p&gt; &#xA;&lt;p&gt;As in the rebased branches, the latest rpi branch should be in accordance with the current kernel version supported in master. At the time of writing, the kernel version in master is 5.10 so that the correspondent latest rpi branch is &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/rpi-5.10.y&#34;&gt;rpi-5.10.y&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Intel/Altera branches&lt;/h2&gt; &#xA;&lt;p&gt;Because the kernel versions that Intel/Altera were usually not in sync with Xilinx&#39;s, &lt;code&gt;altera-*&lt;/code&gt; branches were created. These are &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/altera_4.0&#34;&gt;altera_4.0&lt;/a&gt;, &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/altera_4.4&#34;&gt;altera_4.4&lt;/a&gt;, &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/altera_4.6&#34;&gt;altera_4.6&lt;/a&gt;, &lt;a href=&#34;https://github.com/analogdevicesinc/linux/tree/altera_4.9&#34;&gt;altera_4.9&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These branches are derived from the &lt;a href=&#34;https://github.com/altera-opensource/linux-socfpga&#34;&gt;Intel/Altera linux kernel repo&lt;/a&gt;, together with some merged versions of old master branches.&lt;/p&gt; &#xA;&lt;p&gt;The hope is that with the upcoming Linux 4.19, these branches would stop existing, since Intel/Altera seems to keep in sync their kernel version with more recent [non-LTS kernels]. Typically the releases/references that are provided for these boards should already be in the mainline kernel, so these branches should no longer be needed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openai/retro</title>
    <updated>2023-03-17T01:30:42Z</updated>
    <id>tag:github.com,2023-03-17:/openai/retro</id>
    <link href="https://github.com/openai/retro" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Retro Games in Gym&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Maintenance (expect bug fixes and minor updates)&lt;/p&gt; &#xA;&lt;h1&gt;Gym Retro&lt;/h1&gt; &#xA;&lt;p&gt;Gym Retro lets you turn classic video games into &lt;a href=&#34;https://gym.openai.com/&#34;&gt;Gym&lt;/a&gt; environments for reinforcement learning and comes with integrations for ~1000 games. It uses various emulators that support the &lt;a href=&#34;https://www.libretro.com/index.php/api/&#34;&gt;Libretro API&lt;/a&gt;, making it fairly easy to add new emulators.&lt;/p&gt; &#xA;&lt;p&gt;Supported platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 7, 8, 10&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.13 (High Sierra), 10.14 (Mojave)&lt;/li&gt; &#xA; &lt;li&gt;Linux (manylinux1)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;CPU with &lt;code&gt;SSSE3&lt;/code&gt; or better&lt;/p&gt; &#xA;&lt;p&gt;Supported Pythons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3.6&lt;/li&gt; &#xA; &lt;li&gt;3.7&lt;/li&gt; &#xA; &lt;li&gt;3.8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each game integration has files listing memory locations for in-game variables, reward functions based on those variables, episode end conditions, savestates at the beginning of levels and a file containing hashes of ROMs that work with these files.&lt;/p&gt; &#xA;&lt;p&gt;Please note that ROMs are not included and you must obtain them yourself. Most ROM hashes are sourced from their respective No-Intro SHA-1 sums.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Documentation is available at &lt;a href=&#34;https://retro.readthedocs.io/en/latest/&#34;&gt;https://retro.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should probably start with the &lt;a href=&#34;https://retro.readthedocs.io/en/latest/getting_started.html&#34;&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openai/retro/raw/master/CONTRIBUTING.md&#34;&gt;See CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Changelog&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openai/retro/raw/master/CHANGES.md&#34;&gt;See CHANGES.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Emulated Systems&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Atari &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Atari2600 (via Stella)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;NEC &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;TurboGrafx-16/PC Engine (via Mednafen/Beetle PCE Fast)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Nintendo &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Game Boy/Game Boy Color (via gambatte)&lt;/li&gt; &#xA;   &lt;li&gt;Game Boy Advance (via mGBA)&lt;/li&gt; &#xA;   &lt;li&gt;Nintendo Entertainment System (via FCEUmm)&lt;/li&gt; &#xA;   &lt;li&gt;Super Nintendo Entertainment System (via Snes9x)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sega &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GameGear (via Genesis Plus GX)&lt;/li&gt; &#xA;   &lt;li&gt;Genesis/Mega Drive (via Genesis Plus GX)&lt;/li&gt; &#xA;   &lt;li&gt;Master System (via Genesis Plus GX)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/openai/retro/raw/master/LICENSES.md&#34;&gt;LICENSES.md&lt;/a&gt; for information on the licenses of the individual cores.&lt;/p&gt; &#xA;&lt;h1&gt;Included ROMs&lt;/h1&gt; &#xA;&lt;p&gt;The following non-commercial ROMs are included with Gym Retro for testing purposes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.pouet.net/prod.php?which=2762&#34;&gt;the 128 sine-dot&lt;/a&gt; by Anthrox&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pdroms.de/files/gamegear/sega-tween&#34;&gt;Sega Tween&lt;/a&gt; by Ben Ryves&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.pouet.net/prod.php?which=52716&#34;&gt;Happy 10!&lt;/a&gt; by Blind IO&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pdroms.de/files/pcengine/512-colour-test-demo&#34;&gt;512-Colour Test Demo&lt;/a&gt; by Chris Covell&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.pouet.net/prod.php?which=67142&#34;&gt;Dekadrive&lt;/a&gt; by Dekadence&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pdroms.de/files/atari2600/automaton-minigame-compo-2003&#34;&gt;Automaton&lt;/a&gt; by Derek Ledbetter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://privat.bahnhof.se/wb800787/gb/demo/64/&#34;&gt;Fire&lt;/a&gt; by dox&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.pouet.net/prod.php?which=53497&#34;&gt;FamiCON intro&lt;/a&gt; by dr88&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pdroms.de/genesis/airstriker-v1-50-genesis-game&#34;&gt;Airstriker&lt;/a&gt; by Electrokinesis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pdroms.de/files/gameboyadvance/lost-marbles&#34;&gt;Lost Marbles&lt;/a&gt; by Vantage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;p&gt;Please cite using the following BibTeX entry:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{nichol2018retro,&#xA;  title={Gotta Learn Fast: A New Benchmark for Generalization in RL},&#xA;  author={Nichol, Alex and Pfau, Vicki and Hesse, Christopher and Klimov, Oleg and Schulman, John},&#xA;  journal={arXiv preprint arXiv:1804.03720},&#xA;  year={2018}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>