<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-03T01:30:04Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dvorka/hstr</title>
    <updated>2022-12-03T01:30:04Z</updated>
    <id>tag:github.com,2022-12-03:/dvorka/hstr</id>
    <link href="https://github.com/dvorka/hstr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;bash and zsh shell history suggest box - easily view, navigate, search and manage your command history.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HSTR&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dvorka/hstr/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/dvorka/hstr.svg?sanitize=true&#34; alt=&#34;Current release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dvorka/hstr/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/dvorka/hstr.svg?maxAge=360&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dvorka/hstr/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/dvorka/hstr/total.svg?sanitize=true&#34; alt=&#34;All releases downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dvorka/hstr/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/dvorka/hstr?color=%23fe0000&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Easily view, navigate and search your &lt;strong&gt;command history&lt;/strong&gt; with shell history suggest box for &lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;bash&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/CONFIGURATION.md#zsh-history-settings&#34;&gt;zsh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=sPF29NyXe2U&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/doc/hstr-v2.gif&#34; alt=&#34;Shell History Suggest Box&#34; title=&#34;Shell History Suggest Box @ YouTube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Are you looking for a command that you used &lt;strong&gt;recently&lt;/strong&gt;? Do you want to avoid the need to write &lt;strong&gt;long commands&lt;/strong&gt; over and over again? Are you looking for a tool that is able to manage your &lt;strong&gt;favorite&lt;/strong&gt; commands?&lt;/p&gt; &#xA;&lt;p&gt;HSTR (&lt;strong&gt;H&lt;/strong&gt;i&lt;strong&gt;ST&lt;/strong&gt;o&lt;strong&gt;R&lt;/strong&gt;y) is a command line utility that brings improved &lt;code&gt;bash&lt;/code&gt;/&lt;code&gt;zsh&lt;/code&gt; command completion from the history. It aims to make completion &lt;strong&gt;easier&lt;/strong&gt; and more &lt;strong&gt;efficient&lt;/strong&gt; than &lt;kbd&gt;Ctrl-r&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;p&gt;HSTR can also &lt;strong&gt;manage&lt;/strong&gt; your command history (for instance you can remove commands that are obsolete or contain a piece of sensitive information) or &lt;strong&gt;bookmark&lt;/strong&gt; your favorite commands.&lt;/p&gt; &#xA;&lt;!-- Check [video](http://www.youtube.com/watch?v=sPF29NyXe2U) tutorial. --&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#ubuntu&#34;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#debianmint&#34;&gt;Debian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#debianmint&#34;&gt;Mint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#fedorarhelcentosscientific&#34;&gt;Fedora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#fedorarhelcentosscientific&#34;&gt;CentOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#fedorarhelcentosscientific&#34;&gt;RHEL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#fedorarhelcentosscientific&#34;&gt;Scientific Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#opensuse&#34;&gt;openSUSE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#gentoo&#34;&gt;Gentoo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#alpine-linux&#34;&gt;Alpine Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#archmanjaro-linux&#34;&gt;Arch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#archmanjaro-linux&#34;&gt;Manjaro Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#freebsd&#34;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#slackware&#34;&gt;Slackware Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#void-linux&#34;&gt;Void Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#milis-linux&#34;&gt;Milis Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#haiku-os&#34;&gt;Haiku OS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#macos&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#nix-package-manager&#34;&gt;nix package manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#guix-package-manager&#34;&gt;Guix package manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#mpr-package-manager&#34;&gt;MPR package manager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Build:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#build-on-any-linux-distro&#34;&gt;build on any Linux distro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#snap&#34;&gt;build snap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#build-on-ubuntu&#34;&gt;build on Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#build-on-debian&#34;&gt;build on Debian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#build-on-fedora&#34;&gt;build on Fedora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#build-on-wsl&#34;&gt;build on Windows Subsystem for Linux (WSL)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#build-on-cygwin&#34;&gt;build on Cygwin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#build-on-macos&#34;&gt;build on macOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Tarball:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/INSTALLATION.md#build-and-install-tarball&#34;&gt;build and install tarball&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check also &lt;a href=&#34;https://pkgs.org/search/?q=hstr&#34;&gt;packages&lt;/a&gt; for Linux and Unix.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Configure HSTR just by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# bash&#xA;hstr --show-configuration &amp;gt;&amp;gt; ~/.bashrc&#xA;&#xA;# zsh&#xA;hstr --show-configuration &amp;gt;&amp;gt; ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For detailed HSTR configuration documentation please refer to &lt;a href=&#34;https://raw.githubusercontent.com/dvorka/hstr/master/CONFIGURATION.md&#34;&gt;Configuration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;In the News&lt;/h2&gt; &#xA;&lt;p&gt;Read about HSTR in &lt;a href=&#34;http://www.linux-magazine.com/Issues/2014/164/Bash-History-on-Steroids&#34;&gt;LinuxMagazine&lt;/a&gt;, &lt;a href=&#34;http://www.ubuntugeek.com/tag/hstr-bash-history&#34;&gt;UbuntuGeek&lt;/a&gt;, &lt;a href=&#34;http://www.debianadmin.com/hstr-easily-view-navigate-search-and-use-your-command-history-with-shell-history.html&#34;&gt;DebianAdmin&lt;/a&gt;, &lt;a href=&#34;http://tuxdiary.com/2015/02/17/hstr/&#34;&gt;Tuxdiary&lt;/a&gt;, &lt;a href=&#34;http://linux.softpedia.com/get/Terminals/BASH-Command-History-Completion-103155.shtml&#34;&gt;Softpedia&lt;/a&gt; and &lt;a href=&#34;https://www.ostechnix.com/hstr-easily-view-navigate-search-manage-commandline-history/&#34;&gt;OSTechNix&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check man page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;man hstr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;User videos: &lt;a href=&#34;https://www.youtube.com/watch?v=Qd75pIeQkH8&#34;&gt;Zack&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=sPF29NyXe2U&#34;&gt;Dvorka&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/watch?v=Qx5n_5B5xUw&#34;&gt;Yu-Jie Lin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Bugs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dvorka/hstr/issues&#34;&gt;https://github.com/dvorka/hstr/issues&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>equipter/mfkey32v2</title>
    <updated>2022-12-03T01:30:04Z</updated>
    <id>tag:github.com,2022-12-03:/equipter/mfkey32v2</id>
    <link href="https://github.com/equipter/mfkey32v2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mifare Classic Key Calculator v2&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mfkey32 Version 2&lt;/h1&gt; &#xA;&lt;p&gt;Mfkey32v2 extracts mifare classic keys from nonces collected during the authentication process. These nonces can be collected by emulating the credential to allow the reader to begin despensing the necessary nonces to begin calculating keys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: Nonce in computer terminology means &#34;Number used once&#34;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rfidresearchgroup/proxmark3&#34;&gt;Mfkey Base Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/equipter/mfkey32v2/raw/main/AUTHORS.md&#34;&gt;RRG Author&#39;s file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/bettse&#34;&gt;Bettse for assisting in development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/equipter&#34;&gt;Github&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/Equip0x80&#34;&gt;Twitter&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.reddit.com/user/equipter&#34;&gt;Reddit&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;equip paypal: &lt;a href=&#34;mailto:equipter@outlook.com&#34;&gt;equipter@outlook.com&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;bettse paypal: &lt;a href=&#34;mailto:bettse@fastmail.fm&#34;&gt;bettse@fastmail.fm&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://discord.gg/e9XzfG5nV5&#34;&gt;Discord&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;No one involved in this project is responsible for how you use it. Always follow local laws and EULAs.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;GCC for compiling C (deb)&lt;/li&gt; &#xA; &lt;li&gt;make for utilising the makefile.&lt;/li&gt; &#xA; &lt;li&gt;git for cloning the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;GCC and Makefile &lt;code&gt;sudo apt install build-essential&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;git - github CLI &lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For compilation and use on windows you will need to use MingW or alternate virtual environment.&lt;/strong&gt; &lt;a href=&#34;https://genome.sph.umich.edu/wiki/Installing_MinGW_%26_MSYS_on_Windows&#34;&gt;link to mingW install instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download code&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/equipter/mfkey32v2&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Navigate into repo directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cd mfkey32v2/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Compile mfkey32v2&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;make mfkey32v2&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compiling On Windows&lt;/h3&gt; &#xA;&lt;p&gt;If &lt;code&gt;mingw32-make&lt;/code&gt; fails with the error &lt;code&gt;make (e=2): The system cannot find the file specified.&lt;/code&gt; try: &lt;code&gt;mingw32-make CC=gcc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Standalone Usage&lt;/h2&gt; &#xA;&lt;p&gt;command syntax for mfkey32v2 is &lt;code&gt;./mfkey32v2 &amp;lt;uid&amp;gt; &amp;lt;nt&amp;gt; &amp;lt;nr_0&amp;gt; &amp;lt;ar_0&amp;gt; &amp;lt;nt1&amp;gt; &amp;lt;nr_1&amp;gt; &amp;lt;ar_1&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FlipperZero Usage/Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Using Detect Reader using a saved card (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;In the latest release, you can use detect reader using a saved card. This method is the recommended one because it won&#39;t use a fixed UID like normal detect reader uses and also it is more discreet than using a computer connected to your Flipper. &lt;img src=&#34;https://user-images.githubusercontent.com/45500329/201108244-7dc02b7a-fd82-4446-85e3-c44e852c69b7.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using Detect Reader&lt;/h3&gt; &#xA;&lt;p&gt;Another example is the usage of the flippers Detect Reader function. Simply activate detect reader and approach the reader you wish to obtain keys from. After a moment a file will be output in the nfc folder with the suffix &lt;code&gt;.mfkey.log&lt;/code&gt;, inside this file there are log lines of which you can use to calculate the keys using mfkey32v2.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Sector 0 key A cuid 2a234f80 nt0 240bd022 nr0 ad2e1687 ar0 57e6f7e4 nt1 18a4bd3e nr1 accc1a23 ar1 6f10e401&#xA;Sector 0 key A cuid 2a234f80 nt0 a5b5d569 nr0 30e2ff62 ar0 5e1b926d nt1 d2760a5c nr1 6157acb0 ar1 cb0fd13d&#xA;Sector 0 key A cuid 2a234f80 nt0 81ee85ad nr0 3290942e ar0 f76b6ec7 nt1 9c95e4ac nr1 d05dc608 ar1 729dcbe9&#xA;Sector 0 key A cuid 2a234f80 nt0 b61bf034 nr0 9c04ca8f ar0 787f79ce nt1 01e9294b nr1 22218ef9 ar1 c4e54292&#xA;Sector 0 key A cuid 2a234f80 nt0 f793ebf3 nr0 b783530a ar0 d1607737 nt1 a7ed17fe nr1 50d0c65b ar1 4b43383c&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the keys one by one as logged in the file. For the first line it will be&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./mfkey32v2 2a234f80 240bd022 ad2e1687 57e6f7e4 18a4bd3e accc1a23 6f10e401&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use cut or awk to generate these statements from the log file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Using cut&#xA;IFS=$&#39;\n&#39;; for line in `cut -d&#39; &#39; -f6,8,10,12,14,16,18 mfkey32.log`; do echo ./mfkey32 $line; done&#xA;&#xA;# Using awk&#xA;IFS=$&#39;\n&#39;; for line in `awk &#39;{print $6 &#34; &#34; $8 &#34; &#34; $10 &#34; &#34; $12 &#34; &#34; $14 &#34; &#34; $16&#34; &#34; $18}&#39; mfkey32.log`; do echo ./mfkey32v2 $line; done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output shows the calculated key&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MfKey32v2 open source Mifare Classic key-recovery tool&#xA;Cracks keys by two 32bit keystream authenticationsRecovering key for:&#xA;    uid: 2a234f80&#xA;   nt_0: 240bd022&#xA; {nr_0}: ad2e1687&#xA; {ar_0}: 57e6f7e4&#xA;   nt_1: 18a4bd3e&#xA; {nr_1}: accc1a23&#xA; {ar_1}: 6f10e401&#xA;&#xA;LFSR successors of the tag challenge:&#xA;  nt&#39;: fdef821e&#xA; nt&#39;&#39;: 066a97e6&#xA;&#xA;Keystream used to generate {ar} and {at}:&#xA;  ks2: aa0975fa&#xA;&#xA;Found Key: [a0a1a2a3a4a5]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and if this method doesnt work you can scrape from the CLI log manually, see below&lt;/p&gt; &#xA;&lt;h3&gt;Using Log&lt;/h3&gt; &#xA;&lt;p&gt;if you&#39;ve come from the flipper mfkey32v2 logging, instructions for your command structuring is below: if you arent comfortable or capable of running mfkey32v2 by yourself. Message your log output to bettse or equip on discord. &lt;img src=&#34;https://i.imgur.com/pYD9qUC.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On your FZ navigate to settings an enable debug.&lt;/li&gt; &#xA; &lt;li&gt;Then on log level, adjust to &lt;code&gt;Debug&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scan your Mifare Classic &lt;strong&gt;(NOTE: you do not need to have found any keys you just need have a base .nfc file from the output)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Save your credential on the flipper and begin the card emulation&lt;/li&gt; &#xA; &lt;li&gt;connect your flipper and open your Flipper CLI &lt;a href=&#34;https://forum.flipperzero.one/t/cli-command-line-interface-examples/1874&#34;&gt;instructions for CLI&lt;/a&gt; link to &lt;a href=&#34;https://my.flipp.dev/&#34;&gt;webcli&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;start &lt;code&gt;log&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;while still emulating the UID, approach your flipperzero to the reader while your device is still connected to the flipper&lt;/li&gt; &#xA; &lt;li&gt;your CLI should output logs see below for an example. find the lines like this&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;70795 [D][MfClassic]: 939be0d5 keyA block 3 nt/nr/ar: 4e70d691 b3a576be 02c1559b&#xA;77521 [D][MfClassic]: 939be0d5 keyA block 3 nt/nr/ar: c6efb126 d24dd966 03fc7386&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;now, on your external device where you have downloaded and compiled mfkey32v2&lt;/p&gt; &#xA;&lt;p&gt;run &lt;code&gt;./mfkey32v2&lt;/code&gt; with parameters like such &lt;code&gt;./mfkey32v2 [uid] [topline log] [bottomline log]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;example: UID 939be0d5&lt;/p&gt; &#xA;&lt;p&gt;your command should look like this: &lt;code&gt;./mfkey32v2 939be0d5 4e70d691 b3a576be 02c1559b c6efb126 d24dd966 03fc7386&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;your key should be output out like so &lt;code&gt;Found Key: [a0a1a2a3a4a5]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;your keyA for Block 3(sector 0) is: &lt;code&gt;a0a1a2a3a4a5&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;automatically scrape log file for keys&lt;/h3&gt; &#xA;&lt;p&gt;if youve used the detect reader method you will be outputted an &lt;code&gt;mfkey.log&lt;/code&gt;, drag that file into the mfkey32v2 folder and run this command to easily produce the keys for you from the file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;for i in $(cat mfkey.log | cut -d&#34; &#34; -f6,8,10,12,14,16,18 | sed &#39;s/ /,/g&#39;); do cuid=$(echo $i | cut -d&#34;,&#34; -f1); v2=$(echo $i | cut -d&#34;,&#34; -f2);v3=$(echo $i | cut -d&#34;,&#34; -f3);v4=$(echo $i | cut -d&#34;,&#34; -f4);v5=$(echo $i | cut -d&#34;,&#34; -f5);v6=$(echo $i | cut -d&#34;,&#34; -f6);v7=$(echo $i | cut -d&#34;,&#34; -f7); ./mfkey32v2 $cuid $v2 $v3 $v4 $v5 $v6 $v7 | fgrep &#39;Found Key&#39; &amp;gt;&amp;gt; keys.txt; done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you can also use the included .sh file, drag your mfkey.log file into the mfkey32v2 folder and run the .sh file to automatically scape keys&lt;/p&gt; &#xA;&lt;h3&gt;Using Flipper website&lt;/h3&gt; &#xA;&lt;p&gt;if you are unable to or don&#39;t know how to compile mfkey32v2, you can also use &lt;a href=&#34;https://lab.flipper.net/nfc-tools&#34;&gt;Flipper&#39;s web tool version of mfkey32v2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;connect your flipper, you have to keep closed qFlipper&lt;/li&gt; &#xA; &lt;li&gt;go to the previous website&lt;/li&gt; &#xA; &lt;li&gt;and press &lt;code&gt;GIVE ME THE KEYS&lt;/code&gt; button&lt;/li&gt; &#xA; &lt;li&gt;it will pull your log file, calculate the keys and add them to your dictionary.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;KEEP IN MIND&lt;/strong&gt;: this method will automatically replace your &lt;code&gt;mf_classic_user_dict.nfc&lt;/code&gt; dictionary with a file containing just these new keys, so make sure you have a backup as this method will remove any keys you currently have stored in &lt;code&gt;mf_classic_user_dict.nfc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Used By&lt;/h2&gt; &#xA;&lt;p&gt;This project is used by the following Repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UberGuidoZ/Flipper&#34;&gt;Credited on @UberGuidoZ &#39;s playground repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flipperdevices/flipperzero-firmware&#34;&gt;FlipperZero Offical firmware&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RogueMaster/flipperzero-firmware-wPlugins&#34;&gt;RogueMaster FlipperZero Firmware&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djsime1/awesome-flipperzero/raw/main/Firmwares.md&#34;&gt;Credited in DJsime Awesome-Flipperzero&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For support, Message Equip on discord Equip#1515 or join The discord server &lt;a href=&#34;https://discord.gg/e9XzfG5nV5&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hepingood/htu21d</title>
    <updated>2022-12-03T01:30:04Z</updated>
    <id>tag:github.com,2022-12-03:/hepingood/htu21d</id>
    <link href="https://github.com/hepingood/htu21d" rel="alternate"></link>
    <summary type="html">&lt;p&gt;htu21d full function driver&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/README_zh-Hans.md&#34;&gt; 简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/README_zh-Hant.md&#34;&gt;繁體中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/README_ja.md&#34;&gt;日本語&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/README_de.md&#34;&gt;Deutsch&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/README_ko.md&#34;&gt;한국어&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/doc/image/logo.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;LibDriver HTU21D&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/misra/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/misra-compliant-brightgreen.svg?sanitize=true&#34; alt=&#34;MISRA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.libdriver.com/docs/htu21d/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/api-reference-blue.svg?sanitize=true&#34; alt=&#34;API&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-brightgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The HTU21D(F) is a new digital humidity sensor with temperature output by MEAS. Setting new standards in terms of size and intelligence, it is embedded in a reflow solderable Dual Flat No leads (DFN) package with a small 3 x 3 x 0.9 mm footprint. This sensor provides calibrated, linearized signals in digital, I²C format. HTU21D(F) digital humidity sensors are dedicated humidity and temperature plug and play transducers for OEM applications where reliable and accurate measurements are needed. Direct interface with a micro-controller is made possible with the module for humidity and temperature digital outputs. These low power sensors are designed for high volume and cost sensitive applications with tight space constraints.Every sensor is individually calibrated and tested. Lot identification is printed on the sensor and an electronic identification code is stored on the chip – which can be read out by command. Low battery can be detected and a checksum improves communication reliability. The resolution of these digital humidity sensors can be changed by command (8/12bit up to 12/14bit for RH/T).It is used in Home appliance, medical, printers, humidifier and so on .&lt;/p&gt; &#xA;&lt;p&gt;LibDriver HTU21D is the full function driver of HTU21D launched by LibDriver.It provides the function of reading temperature and relative humidity. LibDriver is MISRA compliant.&lt;/p&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/#Instruction&#34;&gt;Instruction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/#Install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/#Usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/#example-basic&#34;&gt;example basic&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/#Document&#34;&gt;Document&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/#Contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/#License&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hepingood/htu21d/master/#Contact-Us&#34;&gt;Contact Us&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Instruction&lt;/h3&gt; &#xA;&lt;p&gt;/src includes LibDriver HTU21D source files.&lt;/p&gt; &#xA;&lt;p&gt;/interface includes LibDriver HTU21D IIC platform independent template.&lt;/p&gt; &#xA;&lt;p&gt;/test includes LibDriver HTU21D driver test code and this code can test the chip necessary function simply.&lt;/p&gt; &#xA;&lt;p&gt;/example includes LibDriver HTU21D sample code.&lt;/p&gt; &#xA;&lt;p&gt;/doc includes LibDriver HTU21D offline document.&lt;/p&gt; &#xA;&lt;p&gt;/datasheet includes HTU21D datasheet.&lt;/p&gt; &#xA;&lt;p&gt;/project includes the common Linux and MCU development board sample code. All projects use the shell script to debug the driver and the detail instruction can be found in each project&#39;s README.md.&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Reference /interface IIC platform independent template and finish your platform IIC driver.&lt;/p&gt; &#xA;&lt;p&gt;Add /src, /interface and /example to your project.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;example basic&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;#include &#34;driver_htu21d_basic.h&#34;&#xA;&#xA;uint8_t res;&#xA;uint8_t i;&#xA;float temperature;&#xA;uint8_t humidity;&#xA;&#xA;res = htu21d_basic_init();&#xA;if (res != 0)&#xA;{&#xA;    return 1;&#xA;}&#xA;&#xA;...&#xA;&#xA;for (i = 0; i &amp;lt; 3; i++)&#xA;{&#xA;    htu21d_interface_delay_ms(2000);&#xA;    res = htu21d_basic_read((float *)&amp;amp;temperature, (uint8_t *)&amp;amp;humidity);&#xA;    if (res != 0)&#xA;    {&#xA;        (void)htu21d_basic_deinit();&#xA;&#xA;        return 1;&#xA;    }&#xA;    htu21d_interface_debug_print(&#34;htu21d: temperature is %0.2fC.\n&#34;, temperature);&#xA;    htu21d_interface_debug_print(&#34;htu21d: humidity is %d%%.\n&#34;, humidity); &#xA;    &#xA;    ...&#xA;        &#xA;}&#xA;&#xA;...&#xA;&#xA;(void)htu21d_basic_deinit();&#xA;&#xA;return 0;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Document&lt;/h3&gt; &#xA;&lt;p&gt;Online documents: &lt;a href=&#34;https://www.libdriver.com/docs/htu21d/index.html&#34;&gt;https://www.libdriver.com/docs/htu21d/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Offline documents: /doc/html/index.html&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Please sent an e-mail to &lt;a href=&#34;mailto:lishifenging@outlook.com&#34;&gt;lishifenging@outlook.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Copyright (c) 2015 - present LibDriver All rights reserved&lt;/p&gt; &#xA;&lt;p&gt;The MIT License (MIT)&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy&lt;/p&gt; &#xA;&lt;p&gt;of this software and associated documentation files (the &#34;Software&#34;), to deal&lt;/p&gt; &#xA;&lt;p&gt;in the Software without restriction, including without limitation the rights&lt;/p&gt; &#xA;&lt;p&gt;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&lt;/p&gt; &#xA;&lt;p&gt;copies of the Software, and to permit persons to whom the Software is&lt;/p&gt; &#xA;&lt;p&gt;furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all&lt;/p&gt; &#xA;&lt;p&gt;copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&lt;/p&gt; &#xA;&lt;p&gt;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&lt;/p&gt; &#xA;&lt;p&gt;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&lt;/p&gt; &#xA;&lt;p&gt;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&lt;/p&gt; &#xA;&lt;p&gt;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&lt;/p&gt; &#xA;&lt;p&gt;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&lt;/p&gt; &#xA;&lt;p&gt;SOFTWARE.&lt;/p&gt; &#xA;&lt;h3&gt;Contact Us&lt;/h3&gt; &#xA;&lt;p&gt;Please sent an e-mail to &lt;a href=&#34;mailto:lishifenging@outlook.com&#34;&gt;lishifenging@outlook.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>