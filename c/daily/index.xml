<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-07T01:29:06Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TypesettingTools/Aegisub</title>
    <updated>2025-01-07T01:29:06Z</updated>
    <id>tag:github.com,2025-01-07:/TypesettingTools/Aegisub</id>
    <link href="https://github.com/TypesettingTools/Aegisub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform advanced subtitle editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Aegisub&lt;/h1&gt; &#xA;&lt;p&gt;For binaries and general information &lt;a href=&#34;http://aegisub.org&#34;&gt;see the homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The bug tracker can be found at &lt;a href=&#34;https://github.com/TypesettingTools/Aegisub/issues&#34;&gt;https://github.com/TypesettingTools/Aegisub/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Support is available on &lt;a href=&#34;https://discord.com/invite/AZaVyPr&#34;&gt;Discord&lt;/a&gt; or &lt;a href=&#34;irc://irc.rizon.net/aegisub&#34;&gt;IRC&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building Aegisub&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visual Studio (Community edition of any recent version is fine, needs the Windows SDK included)&lt;/li&gt; &#xA; &lt;li&gt;Python 3&lt;/li&gt; &#xA; &lt;li&gt;Meson&lt;/li&gt; &#xA; &lt;li&gt;CMake&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;There are a few optional dependencies that must be installed and on your PATH:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;msgfmt, to build the translations (installing from &lt;a href=&#34;https://mlocati.github.io/articles/gettext-iconv-windows.html&#34;&gt;https://mlocati.github.io/articles/gettext-iconv-windows.html&lt;/a&gt; seems to be the easiest option)&lt;/li&gt; &#xA; &lt;li&gt;InnoSetup, to build the regular installer (iscc.exe on your PATH)&lt;/li&gt; &#xA; &lt;li&gt;7zip, to build the regular installer (7z.exe on your PATH)&lt;/li&gt; &#xA; &lt;li&gt;Moonscript, to build the regular installer (moonc.exe on your PATH)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;All other dependencies are either stored in the repository or are included as submodules.&lt;/p&gt; &#xA;&lt;p&gt;Building:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone Aegisub&#39;s repository: &lt;code&gt;git clone https://github.com/TypesettingTools/Aegisub.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;From the Visual Studio &#34;x64 Native Tools Command Prompt&#34;, generate the build directory: &lt;code&gt;meson build -Ddefault_library=static&lt;/code&gt; (if building for release, add &lt;code&gt;--buildtype=release&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Build with &lt;code&gt;cd build&lt;/code&gt; and &lt;code&gt;ninja&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You should now have a binary: &lt;code&gt;aegisub.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Installer:&lt;/p&gt; &#xA;&lt;p&gt;You can generate the installer with &lt;code&gt;ninja win-installer&lt;/code&gt; after a successful build. This assumes a working internet connection and installation of the optional dependencies.&lt;/p&gt; &#xA;&lt;p&gt;You can generate the portable zip with &lt;code&gt;ninja win-portable&lt;/code&gt; after a successful build.&lt;/p&gt; &#xA;&lt;h3&gt;OS X&lt;/h3&gt; &#xA;&lt;p&gt;A vaguely recent version of Xcode and the corresponding command-line tools are required.&lt;/p&gt; &#xA;&lt;p&gt;For personal usage, you can use pip and homebrew to install almost all of Aegisub&#39;s dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install meson      # or brew install meson if you installed Python via brew&#xA;brew install cmake ninja pkg-config  libass boost zlib ffms2 fftw hunspell uchardet&#xA;export LDFLAGS=&#34;-L/usr/local/opt/icu4c/lib&#34;&#xA;export CPPFLAGS=&#34;-I/usr/local/opt/icu4c/include&#34;&#xA;export PKG_CONFIG_PATH=&#34;/usr/local/opt/icu4c/lib/pkgconfig&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When compiling on Apple Silicon, replace &lt;code&gt;/usr/local&lt;/code&gt; with &lt;code&gt;/opt/homebrew&lt;/code&gt;. When compiling on macOS 15.0 (Sequoia) or later, you may also want to &lt;code&gt;export MACOS_X_DEPLOYMENT_TARGET=14.0&lt;/code&gt; to make the color picker work.&lt;/p&gt; &#xA;&lt;p&gt;Once the dependencies are installed, build Aegisub with &lt;code&gt;meson build &amp;amp;&amp;amp; meson compile -C build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Build dmg&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;meson build_static -Ddefault_library=static -Dbuildtype=debugoptimized -Dbuild_osx_bundle=true -Dlocal_boost=true&#xA;meson compile -C build_static&#xA;meson test -C build_static --verbose&#xA;meson compile osx-bundle -C build_static&#xA;meson compile osx-build-dmg -C build_static&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Updating Moonscript&lt;/h2&gt; &#xA;&lt;p&gt;From within the Moonscript repository, run &lt;code&gt;bin/moon bin/splat.moon -l moonscript moonscript/ &amp;gt; bin/moonscript.lua&lt;/code&gt;. Open the newly created &lt;code&gt;bin/moonscript.lua&lt;/code&gt;, and within it make the following changes:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Prepend the final line of the file, &lt;code&gt;package.preload[&#34;moonscript&#34;]()&lt;/code&gt;, with a &lt;code&gt;return&lt;/code&gt;, producing &lt;code&gt;return package.preload[&#34;moonscript&#34;]()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Within the function at &lt;code&gt;package.preload[&#39;moonscript.base&#39;]&lt;/code&gt;, remove references to &lt;code&gt;moon_loader&lt;/code&gt;, &lt;code&gt;insert_loader&lt;/code&gt;, and &lt;code&gt;remove_loader&lt;/code&gt;. This means removing their declarations, definitions, and entries in the returned table.&lt;/li&gt; &#xA; &lt;li&gt;Within the function at &lt;code&gt;package.preload[&#39;moonscript&#39;]&lt;/code&gt;, remove the line &lt;code&gt;_with_0.insert_loader()&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The file is now ready for use, to be placed in &lt;code&gt;automation/include&lt;/code&gt; within the Aegisub repo.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All files in this repository are licensed under various GPL-compatible BSD-style licenses; see LICENCE and the individual source files for more information. The official Windows and OS X builds are GPLv2 due to including fftw3.&lt;/p&gt;</summary>
  </entry>
</feed>