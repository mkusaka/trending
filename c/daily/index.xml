<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-12T01:35:14Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yilozt/mutter-rounded</title>
    <updated>2022-06-12T01:35:14Z</updated>
    <id>tag:github.com,2022-06-12:/yilozt/mutter-rounded</id>
    <link href="https://github.com/yilozt/mutter-rounded" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A window manager for GNOME, with rounded corners patch&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Tested in gnome-shell 40.5, should works in gnome 40 and 41.&lt;/p&gt; &#xA;&lt;p&gt;integrate the blur effects with rounded corners.The source code can be found &lt;a href=&#34;https://github.com/yilozt/mutter&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Issues&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It can be buggy with blur effect. see &lt;a href=&#34;https://github.com/aunetx/blur-my-shell&#34;&gt;https://github.com/aunetx/blur-my-shell&lt;/a&gt;. If you are using intel driver in Xorg session, try create &lt;code&gt;.drirc&lt;/code&gt; in your home directory to disable Vertical Synchronization:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;device screen=&#34;0&#34; driver=&#34;dri2&#34;&amp;gt;&#xA;    &amp;lt;application name=&#34;Default&#34;&amp;gt;&#xA;        &amp;lt;option name=&#34;vblank_mode&#34; value=&#34;0&#34;/&amp;gt;&#xA;    &amp;lt;/application&amp;gt;&#xA;&amp;lt;/device&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;For Nvidia and AUR&lt;/h2&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;you need to do makepkg --nocheck -si or it will fail the checks at the end.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The original shadows of rounded windows has been cutted out, now use &lt;code&gt;MetaShadowFactroy&lt;/code&gt; to draw shadows for rounded windows. So the animation effect of shadows in some themes has gone.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;h2&gt;Arch Linux&lt;/h2&gt; &#xA;&lt;p&gt;install &lt;code&gt;mutter-rounded&lt;/code&gt; by AUR helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yay -S mutter-rounded&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ubuntu 21.10 / Ubuntu 22.04&lt;/h2&gt; &#xA;&lt;p&gt;There is a simple script to help you build the packages in ubuntu 21.10. It&#39;s neccesary to check the content of script. Before you build the packages, the &lt;code&gt;Source code&lt;/code&gt; checkbox in &lt;code&gt;Software &amp;amp; Updates&lt;/code&gt; should be enabled:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yilozt/mutter-rounded/main/screenshots/ubuntu_settings.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/yilozt/mutter-rounded&#xA;cd ./mutter-rounded/ubuntu&#xA;./package.sh&#xA;&#xA;# Ubuntu 21.10&#xA;sudo dpkg -i libmutter-8-0*.deb mutter-common*.deb&#xA;&#xA;# Ubuntu 22.04&#xA;sudo dpkg -i libmutter-10-0*.deb mutter-common*.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fedora 35 / Fedora 36&lt;/h2&gt; &#xA;&lt;p&gt;There are pre-build packages which built by &lt;a href=&#34;https://github.com/gregor160300&#34;&gt;@gregor160300&lt;/a&gt;, you can download packages from &lt;a href=&#34;https://gregor160300.stackstorage.com/s/I4YFXu82ay6mNE0C/en_US&#34;&gt;https://gregor160300.stackstorage.com/s/I4YFXu82ay6mNE0C/en_US&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can build packages by yourself with scripts in &lt;code&gt;fedora_35&lt;/code&gt; folder. It&#39;s neccesary to check the contents in scripts before you run it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/yilozt/mutter-rounded&#xA;cd ./mutter-rounded/fedora&#xA;./package.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After scripts finish, the rpm packages will be found in &lt;code&gt;~/rpmbuild/RPMS/x86_64/&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ~/rpmbuild/RPMS/x86_64/&#xA;sudo dnf upgrade mutter&#xA;sudo rpm --reinstall mutter-41.*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Uninstall&lt;/h1&gt; &#xA;&lt;p&gt;When you want to remove this patch from your system, just need to install &lt;code&gt;mutter&lt;/code&gt; package from official repo. The rounded corners will gone when you login into gnome-shell in next time.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arch Linux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -S mutter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Ubuntu 21.10&#xA;sudo apt install libmutter-8-0 mutter-common&#xA;&#xA;# Ubuntu 22.04&#xA;sudo apt install libmutter-10-0 mutter-common&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fedora&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf reinstall mutter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yilozt/mutter-rounded/main/screenshots/screenshots1.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yilozt/mutter-rounded/main/screenshots/screenshots0.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Settings&lt;/h1&gt; &#xA;&lt;p&gt;The settings of mutter have driven by GSettings, so you can set config by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;via &lt;code&gt;gsettings&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ gsettings get org.gnome.mutter round-corners-radius &#xA;14&#xA;$ gsettings set org.gnome.mutter round-corners-radius 8&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;via &lt;code&gt;dconf-editor&lt;/code&gt;, the settings are located in &lt;code&gt;/org/gnome/mutter&lt;/code&gt;: &lt;img src=&#34;https://raw.githubusercontent.com/yilozt/mutter-rounded/main/screenshots/dconf-editor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;via &lt;a href=&#34;https://github.com/yilozt/mutter-rounded-setting&#34;&gt;mutter_setting&lt;/a&gt;, a simple gui written by Gjs. &lt;img src=&#34;https://raw.githubusercontent.com/yilozt/mutter-rounded/main/screenshots/mutter_setting.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>memcached/memcached</title>
    <updated>2022-06-12T01:35:14Z</updated>
    <id>tag:github.com,2022-06-12:/memcached/memcached</id>
    <link href="https://github.com/memcached/memcached" rel="alternate"></link>
    <summary type="html">&lt;p&gt;memcached development tree&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Memcached&lt;/h1&gt; &#xA;&lt;p&gt;Memcached is a high performance multithreaded event-based key/value cache store intended to be used in a distributed system.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://memcached.org/about&#34;&gt;https://memcached.org/about&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A fun story explaining usage: &lt;a href=&#34;https://memcached.org/tutorial&#34;&gt;https://memcached.org/tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re having trouble, try the wiki: &lt;a href=&#34;https://memcached.org/wiki&#34;&gt;https://memcached.org/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re trying to troubleshoot odd behavior or timeouts, see: &lt;a href=&#34;https://memcached.org/timeouts&#34;&gt;https://memcached.org/timeouts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://memcached.org/&#34;&gt;https://memcached.org/&lt;/a&gt; is a good resource in general. Please use the mailing list to ask questions, github issues aren&#39;t seen by everyone!&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libevent - &lt;a href=&#34;https://www.monkey.org/~provos/libevent/&#34;&gt;https://www.monkey.org/~provos/libevent/&lt;/a&gt; (libevent-dev)&lt;/li&gt; &#xA; &lt;li&gt;libseccomp (optional, experimental, linux) - enables process restrictions for better security. Tested only on x86-64 architectures.&lt;/li&gt; &#xA; &lt;li&gt;openssl (optional) - enables TLS support. need relatively up to date version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Environment&lt;/h2&gt; &#xA;&lt;p&gt;Be warned that the -k (mlockall) option to memcached might be dangerous when using a large cache. Just make sure the memcached machines don&#39;t swap. memcached does non-blocking network I/O, but not disk. (it should never go to disk, or you&#39;ve lost the whole point of it)&lt;/p&gt; &#xA;&lt;h2&gt;Build status&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://build.memcached.org/&#34;&gt;https://build.memcached.org/&lt;/a&gt; for multi-platform regression testing status.&lt;/p&gt; &#xA;&lt;h2&gt;Bug reports&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to use the issue tracker on github.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are reporting a security bug&lt;/strong&gt; please contact a maintainer privately. We follow responsible disclosure: we handle reports privately, prepare a patch, allow notifications to vendor lists. Then we push a fix release and your bug can be posted publicly with credit in our release notes and commit history.&lt;/p&gt; &#xA;&lt;h2&gt;Website&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.memcached.org&#34;&gt;https://www.memcached.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SanderMertens/flecs</title>
    <updated>2022-06-12T01:35:14Z</updated>
    <id>tag:github.com,2022-06-12:/SanderMertens/flecs</id>
    <link href="https://github.com/SanderMertens/flecs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast entity component system (ECS) for C &amp; C++&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9919222/104115165-0a4e4700-52c1-11eb-85d6-9bdfa9a0265f.png&#34; alt=&#34;flecs&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SanderMertens/flecs/actions&#34;&gt;&lt;img src=&#34;https://github.com/SanderMertens/flecs/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/SanderMertens/flecs&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/SanderMertens/flecs/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/BEzP5Rgrrp&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/633826290415435777.svg?sanitize=true&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godbolt.org/z/bs11T3&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/try-online-brightgreen&#34; alt=&#34;Try online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://flecs.docsforge.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-docsforge-blue&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flecs is a fast and lightweight Entity Component System that lets you build games and simulations with millions of entities (&lt;a href=&#34;https://discord.gg/BEzP5Rgrrp&#34;&gt;join the Discord!&lt;/a&gt;). Here are some of the framework&#39;s highlights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast zero dependency &lt;a href=&#34;https://flecs.docsforge.com/master/api-c/&#34;&gt;C99 API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Modern type-safe &lt;a href=&#34;https://flecs.docsforge.com/master/api-cpp/&#34;&gt;C++11 API&lt;/a&gt; that doesn&#39;t use STL containers&lt;/li&gt; &#xA; &lt;li&gt;Minimal ECS core with optional &lt;a href=&#34;https://raw.githubusercontent.com/SanderMertens/flecs/master/#addons&#34;&gt;addons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Entire codebase builds in less than 5 seconds.&lt;/li&gt; &#xA; &lt;li&gt;Runs &lt;a href=&#34;https://flecs.dev/city&#34;&gt;in the browser&lt;/a&gt; without modifications with emscripten&lt;/li&gt; &#xA; &lt;li&gt;Cache friendly &lt;a href=&#34;https://ajmmertens.medium.com/building-an-ecs-2-archetypes-and-vectorization-fe21690805f9&#34;&gt;archetype/SoA storage&lt;/a&gt; that can process millions of entities every frame&lt;/li&gt; &#xA; &lt;li&gt;Supports entities with hundreds of components and applications with tens of thousands of archetypes&lt;/li&gt; &#xA; &lt;li&gt;Automatic component registration that works out of the box across shared libraries/DLLs&lt;/li&gt; &#xA; &lt;li&gt;First open source ECS with full support for &lt;a href=&#34;https://ajmmertens.medium.com/building-games-in-ecs-with-entity-relationships-657275ba2c6c&#34;&gt;Entity Relationships&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Write free functions with &lt;a href=&#34;https://github.com/SanderMertens/flecs/tree/master/examples/cpp/queries/basics&#34;&gt;queries&lt;/a&gt; or run code automatically in &lt;a href=&#34;https://github.com/SanderMertens/flecs/tree/master/examples/cpp/systems/pipeline&#34;&gt;systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run games on multiple CPU cores with a fast lockless scheduler&lt;/li&gt; &#xA; &lt;li&gt;Compiles warning-free on 8 compilers on all major platforms, with &lt;a href=&#34;https://github.com/SanderMertens/flecs/actions&#34;&gt;CI&lt;/a&gt; running more than 4000 tests&lt;/li&gt; &#xA; &lt;li&gt;Fast native support for &lt;a href=&#34;https://flecs.docsforge.com/master/relations-manual/#the-childof-relation&#34;&gt;hierarchies&lt;/a&gt; and &lt;a href=&#34;https://flecs.docsforge.com/master/relations-manual/#the-isa-relation&#34;&gt;prefabs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Integrated &lt;a href=&#34;https://flecs.docsforge.com/master/api-meta/&#34;&gt;reflection framework&lt;/a&gt; with &lt;a href=&#34;https://github.com/SanderMertens/flecs/tree/master/examples/cpp/reflection/basics_json&#34;&gt;JSON serializer&lt;/a&gt; and support for &lt;a href=&#34;https://github.com/SanderMertens/flecs/tree/master/examples/cpp/reflection/runtime_component&#34;&gt;runtime components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SanderMertens/flecs/tree/master/examples/cpp/reflection/units&#34;&gt;Unit annotations&lt;/a&gt; for components&lt;/li&gt; &#xA; &lt;li&gt;Powerful &lt;a href=&#34;https://github.com/SanderMertens/flecs/tree/master/examples/cpp/rules&#34;&gt;query language&lt;/a&gt; with support for &lt;a href=&#34;https://github.com/SanderMertens/flecs/tree/master/examples/cpp/rules/setting_variables&#34;&gt;joins&lt;/a&gt; and &lt;a href=&#34;https://github.com/SanderMertens/flecs/tree/master/examples/cpp/rules/component_inheritance&#34;&gt;inheritance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-stats/&#34;&gt;Statistics addon&lt;/a&gt; for profiling ECS performance&lt;/li&gt; &#xA; &lt;li&gt;A web-based dashboard (&lt;a href=&#34;https://flecs.dev/explorer&#34;&gt;demo&lt;/a&gt;, &lt;a href=&#34;https://github.com/flecs-hub/explorer&#34;&gt;code&lt;/a&gt;) for inspecting entities, running ECS queries and monitoring games:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flecs.dev/explorer&#34;&gt;&lt;img width=&#34;1753&#34; alt=&#34;Screen Shot 2022-06-04 at 1 36 44 AM&#34; src=&#34;https://user-images.githubusercontent.com/9919222/171991682-5053ce51-fbb3-40ad-823f-b1957cedde18.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Flecs v3 is the latest, most stable and feature rich version of Flecs, and recommended for new projects.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Last v3 release: &lt;a href=&#34;https://github.com/SanderMertens/flecs/releases/tag/v3.0.1-alpha&#34;&gt;Flecs v3.0.1-alpha&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Last v2 release: &lt;a href=&#34;https://github.com/SanderMertens/flecs/releases/tag/v2.4.8&#34;&gt;Flecs v2.4.8&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is an Entity Component System?&lt;/h2&gt; &#xA;&lt;p&gt;ECS is a new way of organizing code and data that lets you build games that are larger, more complex and are easier to extend.&lt;/p&gt; &#xA;&lt;p&gt;Something is called an ECS when it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Has &lt;em&gt;entities&lt;/em&gt;, that uniquely identify objects in a game&lt;/li&gt; &#xA; &lt;li&gt;Has &lt;em&gt;components&lt;/em&gt;, which are datatypes that can be added to entities&lt;/li&gt; &#xA; &lt;li&gt;Has &lt;em&gt;systems&lt;/em&gt; which are functions that run for all entities matching a component &lt;em&gt;query&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, a game has a &lt;code&gt;Move&lt;/code&gt; &lt;em&gt;system&lt;/em&gt; that has a &lt;em&gt;query&lt;/em&gt; with two &lt;em&gt;components&lt;/em&gt;, &lt;code&gt;Position, Velocity&lt;/code&gt;. When the system is ran it is dynamically matched with all &lt;em&gt;entities&lt;/em&gt; that have at least these two components.&lt;/p&gt; &#xA;&lt;p&gt;For more info on ECS, check the &lt;a href=&#34;https://github.com/SanderMertens/ecs-faq&#34;&gt;ECS FAQ&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SanderMertens/flecs/master/docs/Quickstart.md&#34;&gt;Quickstart&lt;/a&gt; (&lt;a href=&#34;https://flecs.docsforge.com/master/quickstart/&#34;&gt;docsforge&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SanderMertens/flecs/master/docs/FAQ.md&#34;&gt;FAQ&lt;/a&gt; (&lt;a href=&#34;https://flecs.docsforge.com/master/faq/&#34;&gt;docsforge&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SanderMertens/flecs/master/examples/c&#34;&gt;C examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SanderMertens/flecs/master/examples/cpp&#34;&gt;C++ examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SanderMertens/flecs/master/docs/Manual.md&#34;&gt;Manual&lt;/a&gt; (&lt;a href=&#34;https://flecs.docsforge.com/master/manual/&#34;&gt;docsforge&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SanderMertens/flecs/master/docs/Queries.md&#34;&gt;Query Manual&lt;/a&gt; (&lt;a href=&#34;https://flecs.docsforge.com/master/query-manual/&#34;&gt;docsforge&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SanderMertens/flecs/master/docs/Relations.md&#34;&gt;Relations Manual&lt;/a&gt; (&lt;a href=&#34;https://flecs.docsforge.com/master/relations-manual/&#34;&gt;docsforge&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Show me the code!&lt;/h2&gt; &#xA;&lt;p&gt;C99 example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;typedef struct {&#xA;  float x, y;&#xA;} Position, Velocity;&#xA;&#xA;void Move(ecs_iter_t *it) {&#xA;  Position *p = ecs_term(it, Position, 1);&#xA;  Velocity *v = ecs_term(it, Velocity, 2);&#xA;  &#xA;  for (int i = 0; i &amp;lt; it-&amp;gt;count; i ++) {&#xA;    p[i].x += v[i].x;&#xA;    p[i].y += v[i].y;&#xA;  }&#xA;}&#xA;&#xA;int main(int argc, char *argv[]) {&#xA;  ecs_world_t *ecs = ecs_init();&#xA;&#xA;  ECS_COMPONENT(ecs, Position);&#xA;  ECS_COMPONENT(ecs, Velocity);&#xA;&#xA;  ECS_SYSTEM(ecs, Move, EcsOnUpdate, Position, Velocity);&#xA;&#xA;  ecs_entity_t e = ecs_new_id(ecs);&#xA;  ecs_set(ecs, e, Position, {10, 20});&#xA;  ecs_set(ecs, e, Velocity, {1, 2});&#xA;&#xA;  while (ecs_progress(ecs, 0)) { }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Same example in C++11:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;struct Position {&#xA;  float x, y;&#xA;};&#xA;&#xA;struct Velocity {&#xA;  float x, y;&#xA;};&#xA;&#xA;int main(int argc, char *argv[]) {&#xA;  flecs::world ecs;&#xA;&#xA;  ecs.system&amp;lt;Position, const Velocity&amp;gt;()&#xA;    .each([](Position&amp;amp; p, const Velocity&amp;amp; v) {&#xA;      p.x += v.x;&#xA;      p.y += v.y;&#xA;    });&#xA;&#xA;  auto e = ecs.entity()&#xA;    .set([](Position&amp;amp; p, Velocity&amp;amp; v) {&#xA;      p = {10, 20};&#xA;      v = {1, 2};&#xA;    });&#xA;    &#xA;  while (ecs.progress()) { }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community content&lt;/h2&gt; &#xA;&lt;p&gt;Examples and tutorials contributed by the community &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-systems-bgfx/tree/bgfx_imgui&#34;&gt;Bgfx/Imgui module&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/oldmanauz/b4ced44737bf9d248233538fa06a989e&#34;&gt;Tower defense example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jtferson.github.io/blog/flecs_and_unreal/&#34;&gt;Flecs + UE4 is magic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jtferson.github.io/blog/quickstart_with_flecs_in_unreal_part_1/&#34;&gt;Quickstart with Flecs in UE4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jtferson.github.io/blog/automatic_flecs_component_registration_in_unreal/&#34;&gt;Automatic component registration in UE4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ajmmertens/status/1361070033334456320&#34;&gt;Building a space battle with Flecs in UE4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HeatXD/flecs_web_demo&#34;&gt;Flecs + SDL + Web ASM example&lt;/a&gt; (&lt;a href=&#34;https://heatxd.github.io/flecs_web_demo/&#34;&gt;live demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lexxicon/FlecsRaylib&#34;&gt;Flecs + Raylib example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MrFrenik/gs_examples/raw/main/ex_demos/flecs/source/main.c&#34;&gt;Flecs + gunslinger example&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Projects using Flecs&lt;/h2&gt; &#xA;&lt;p&gt;If you have a project you&#39;d like to share, let me know on &lt;a href=&#34;https://discord.gg/BEzP5Rgrrp&#34;&gt;Discord&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;Territory Control&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://store.steampowered.com/app/690290/Territory_Control_2/&#34;&gt;https://store.steampowered.com/app/690290/Territory_Control_2/&lt;/a&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9919222/170771279-4c3517e0-467d-4a8d-af34-8dd546cbf938.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sol Survivor&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nicok.itch.io/sol-survivor-demo&#34;&gt;https://nicok.itch.io/sol-survivor-demo&lt;/a&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9919222/170772047-6dc398f7-cb78-4ffd-9335-a83d034b3849.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The Forge&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ConfettiFX/The-Forge&#34;&gt;https://github.com/ConfettiFX/The-Forge&lt;/a&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9919222/170774256-8d362f82-1213-4eb4-8f5f-3c4521684d11.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gravitas&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://thepunkcollective.itch.io/gravitas&#34;&gt;https://thepunkcollective.itch.io/gravitas&lt;/a&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9919222/170774659-4eef4277-98cc-4653-8410-d7b30383d1ab.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;After Sun&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/foxnne/aftersun&#34;&gt;https://github.com/foxnne/aftersun&lt;/a&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9919222/170783223-acc3ec2a-ac3e-4120-9ded-5d36a925d562.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Addons&lt;/h2&gt; &#xA;&lt;p&gt;Flecs has a modular architecture that makes it easy to only build the features you really need. By default all addons are built. To customize a build, first define &lt;code&gt;FLECS_CUSTOM_BUILD&lt;/code&gt;, then add defines for the addons you need. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#define FLECS_CUSTOM_BUILD  // Don&#39;t build all addons&#xA;#define FLECS_SYSTEM        // Build FLECS_SYSTEM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, you can also specify addons to exclude from a build by adding &lt;code&gt;NO&lt;/code&gt; to the define:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#define FLECS_NO_LOG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following addons can be configured:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Addon&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Define&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-cpp/&#34;&gt;Cpp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C++11 API&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_CPP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-module/&#34;&gt;Module&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Organize game logic into reusable modules&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_MODULE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-systems/&#34;&gt;System&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create &amp;amp; run systems&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_SYSTEM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-pipeline/&#34;&gt;Pipeline&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automatically schedule &amp;amp; multithread systems&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_PIPELINE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-timers/&#34;&gt;Timer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run systems at time intervals or at a rate&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_TIMER&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-meta/&#34;&gt;Meta&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flecs reflection system&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_META&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-units/&#34;&gt;Units&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Builtin unit types&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_UNITS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-meta-c/&#34;&gt;Meta_C&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(C) Utilities for auto-inserting reflection data&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_META_C&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-expr/&#34;&gt;Expr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String format optimized for ECS data&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_EXPR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-json/&#34;&gt;JSON&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JSON format&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_JSON&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-doc/&#34;&gt;Doc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add documentation to components, systems &amp;amp; more&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_DOC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-coredoc/&#34;&gt;Coredoc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Documentation for builtin components &amp;amp; modules&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_COREDOC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-http/&#34;&gt;Http&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tiny HTTP server for processing simple requests&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_HTTP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-rest/&#34;&gt;Rest&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;REST API for showing entities in the browser&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_REST&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-parser/&#34;&gt;Parser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create entities &amp;amp; queries from strings&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_PARSER&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-plecs/&#34;&gt;Plecs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Small utility language for asset/scene loading&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_PLECS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-rules/&#34;&gt;Rules&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Powerful prolog-like query language&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_RULES&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-snapshot/&#34;&gt;Snapshot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Take snapshots of the world &amp;amp; restore them&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_SNAPSHOT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-stats/&#34;&gt;Stats&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See what&#39;s happening in a world with statistics&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_STATS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-monitor/&#34;&gt;Monitor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Periodically collect &amp;amp; store statistics&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_MONITOR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-log/&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Extended tracing and error logging&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_LOG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-app/&#34;&gt;App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flecs application framework&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_APP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flecs.docsforge.com/master/api-os-api-impl/&#34;&gt;OS API Impl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Default OS API implementation for Posix/Win32&lt;/td&gt; &#xA;   &lt;td&gt;FLECS_OS_API_IMPL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Flecs Hub&lt;/h2&gt; &#xA;&lt;p&gt;Flecs Hub is a handy collection of repositories built with Flecs that showcase basic ways of how to build engine features like input handling, transformations and rendering:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-components-cglm&#34;&gt;flecs.components.cglm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Component registration for cglm (math) types&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-components-input&#34;&gt;flecs.components.input&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Components that describe keyboard and mouse input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-components-transform&#34;&gt;flecs.components.transform&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Components that describe position, rotation and scale&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-components-physics&#34;&gt;flecs.components.physics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Components that describe physics and movement&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-components-geometry&#34;&gt;flecs.components.geometry&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Components that describe geometry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-components-graphics&#34;&gt;flecs.components.graphics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Components used for computer graphics&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-components-gui&#34;&gt;flecs.components.gui&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Components used to describe GUI components&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-systems-transform&#34;&gt;flecs.systems.transform&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hierarchical transforms for scene graphs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-systems-physics&#34;&gt;flecs.systems.physics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Systems for moving objects and collision detection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-systems-sdl2&#34;&gt;flecs.systems.sdl2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SDL window creation &amp;amp; input management&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-systems-sokol&#34;&gt;flecs.systems.sokol&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sokol-based renderer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Language bindings&lt;/h2&gt; &#xA;&lt;p&gt;The following language bindings have been developed with Flecs! Note that these are projects built and maintained by helpful community members, and may not always be up to date with the latest commit from master!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flecs-hub/flecs-lua&#34;&gt;Lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/prime31/zig-flecs&#34;&gt;Zig&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bottlenoselabs/flecs-cs&#34;&gt;C#&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/BEzP5Rgrrp&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ajmmertens.medium.com&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SanderMertens/ecs-faq&#34;&gt;ECS FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ajmmertens&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/flecs&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supporting Flecs ♥️&lt;/h2&gt; &#xA;&lt;p&gt;Supporting Flecs goes a long way towards keeping the project going and the community alive! If you like the project, consider:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Giving it a star 🌟&lt;/li&gt; &#xA; &lt;li&gt;Becoming a sponsor: &lt;a href=&#34;https://github.com/sponsors/SanderMertens&#34;&gt;https://github.com/sponsors/SanderMertens&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>