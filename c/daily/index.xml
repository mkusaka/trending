<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-06T01:30:35Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TinyCC/tinycc</title>
    <updated>2025-08-06T01:30:35Z</updated>
    <id>tag:github.com,2025-08-06:/TinyCC/tinycc</id>
    <link href="https://github.com/TinyCC/tinycc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unofficial mirror of mob development branch&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Tiny C Compiler - C Scripting Everywhere - The Smallest ANSI C compiler&lt;/h2&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;SMALL! You can compile and execute C code everywhere, for example on rescue disks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;FAST! tcc generates optimized x86 code. No byte code overhead. Compile, assemble and link about 7 times faster than &#39;gcc -O0&#39;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;UNLIMITED! Any C dynamic library can be used directly. TCC is heading toward full ISOC99 compliance. TCC can of course compile itself.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SAFE! tcc includes an optional memory and bound checker. Bound checked code can be mixed freely with standard code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile and execute C source directly. No linking or assembly necessary. Full C preprocessor included.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;C script supported : just add &#39;#!/usr/local/bin/tcc -run&#39; at the first line of your C source, and execute it directly from the command line.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Installation on a i386/x86_64/arm/aarch64/riscv64 Linux/macOS/FreeBSD/NetBSD/OpenBSD hosts.&lt;/p&gt; &lt;p&gt;./configure make make test make install&lt;/p&gt; &lt;p&gt;Notes: For FreeBSD, NetBSD and OpenBSD, gmake should be used instead of make. For Windows read tcc-win32.txt.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;makeinfo must be installed to compile the doc. By default, tcc is installed in /usr/local/bin. ./configure --help shows configuration options.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Introduction&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We assume here that you know ANSI C. Look at the example ex1.c to know what the programs look like.&lt;/p&gt; &#xA;&lt;p&gt;The include file &amp;lt;tcclib.h&amp;gt; can be used if you want a small basic libc include support (especially useful for floppy disks). Of course, you can also use standard headers, although they are slower to compile.&lt;/p&gt; &#xA;&lt;p&gt;You can begin your C script with &#39;#!/usr/local/bin/tcc -run&#39; on the first line and set its execute bits (chmod a+x your_script). Then, you can launch the C code as a shell or perl script :-) The command line arguments are put in &#39;argc&#39; and &#39;argv&#39; of the main functions, as in ANSI C.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Examples&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;ex1.c: simplest example (hello world). Can also be launched directly as a script: &#39;./ex1.c&#39;.&lt;/p&gt; &#xA;&lt;p&gt;ex2.c: more complicated example: find a number with the four operations given a list of numbers (benchmark).&lt;/p&gt; &#xA;&lt;p&gt;ex3.c: compute fibonacci numbers (benchmark).&lt;/p&gt; &#xA;&lt;p&gt;ex4.c: more complicated: X11 program. Very complicated test in fact because standard headers are being used ! As for ex1.c, can also be launched directly as a script: &#39;./ex4.c&#39;.&lt;/p&gt; &#xA;&lt;p&gt;ex5.c: &#39;hello world&#39; with standard glibc headers.&lt;/p&gt; &#xA;&lt;p&gt;tcc.c: TCC can of course compile itself. Used to check the code generator.&lt;/p&gt; &#xA;&lt;p&gt;tcctest.c: auto test for TCC which tests many subtle possible bugs. Used when doing &#39;make test&#39;.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Full Documentation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please read tcc-doc.html to have all the features of TCC.&lt;/p&gt; &#xA;&lt;p&gt;Additional information is available for the Windows port in tcc-win32.txt.&lt;/p&gt; &#xA;&lt;h2&gt;License:&lt;/h2&gt; &#xA;&lt;p&gt;TCC is distributed under the GNU Lesser General Public License (see COPYING file).&lt;/p&gt; &#xA;&lt;p&gt;Fabrice Bellard.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>utkarshdalal/GameNative</title>
    <updated>2025-08-06T01:30:35Z</updated>
    <id>tag:github.com,2025-08-06:/utkarshdalal/GameNative</id>
    <link href="https://github.com/utkarshdalal/GameNative" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight unofficial Steam client for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GameNative&lt;/h1&gt; &#xA;&lt;p&gt;GameNative allows you to play games you own on Steam directly on Android devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/1870fd14-7de9-4054-ba92-d3a5c73686b5&#34;&gt;Playing Stray on Poco F6&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a fork of &lt;a href=&#34;https://github.com/oxters168/Pluvia&#34;&gt;Pluvia&lt;/a&gt;, a Steam client for Android.&lt;/p&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;p&gt;(Note that GameNative is still in its early stages, and all games may not work, or may require tweaking to get working well)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest release from the &lt;a href=&#34;https://github.com/utkarshdalal/GameNative/releases&#34;&gt;Releases&lt;/a&gt; page&lt;/li&gt; &#xA; &lt;li&gt;Install the APK on your Android device&lt;/li&gt; &#xA; &lt;li&gt;Login to your Steam account&lt;/li&gt; &#xA; &lt;li&gt;Install your game&lt;/li&gt; &#xA; &lt;li&gt;Hit play and enjoy!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;To report issues or receive support, join the &lt;a href=&#34;https://discord.gg/2hKv4VfZfE&#34;&gt;Discord server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;IF YOU JUST WANT TO USE THE APP, PLEASE SEE THE HOW TO USE SECTION ABOVE. THIS IS ONLY NEEDED IF YOU WANT TO CONTRIBUTE FOR DEVELOPMENT.&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;I use a normal build in Android studio. Hit me up if you can&#39;t figure out how to build.&lt;/li&gt; &#xA; &lt;li&gt;You will need to download &lt;a href=&#34;https://drive.google.com/file/d/1IfPTwHKcGbhrRBFd0JLBVvIdeA9bFocE/view?usp=sharing&#34;&gt;imagefs_gamenative&lt;/a&gt; and &lt;a href=&#34;https://drive.google.com/file/d/1RJb204kybzigEcjHegh7y1T8lcXb_6wG/view?usp=drive_link&#34;&gt;imagefs_patches_gamenative&lt;/a&gt; for this to work and place them in the &lt;code&gt;src/main/assets&lt;/code&gt; folder. These files are available on request for legitimate development purposes. Google Drive has blocked access to them as they are compressed archives. Please write to me on Discord and I can share them with you there.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discord.gg/2hKv4VfZfE&#34;&gt;Discord server&lt;/a&gt; for support and updates.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/utkarshdalal/GameNative/raw/master/LICENSE&#34;&gt;GPL 3.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/utkarshdalal/GameNative/raw/master/PrivacyPolicy/README.md&#34;&gt;Privacy Policy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer: This software is intended for playing games that you legally own. Do not use this software for piracy or any other illegal purposes. The maintainer of this fork assumes no responsibility for misuse.&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>