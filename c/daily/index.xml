<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-08T01:34:38Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>themanoftalent/c_languageBanu</title>
    <updated>2022-12-08T01:34:38Z</updated>
    <id>tag:github.com,2022-12-08:/themanoftalent/c_languageBanu</id>
    <link href="https://github.com/themanoftalent/c_languageBanu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Banu_c_language&lt;/p&gt;&lt;hr&gt;&lt;p&gt;READ ME&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;The C Programming Language&lt;/strong&gt; is a very popular book and sometimes people refer to it as &lt;strong&gt;K&amp;amp;R&lt;/strong&gt;. The authors &lt;em&gt;Brian W. Kernighan&lt;/em&gt; and &lt;em&gt;Dennis M. Ritchie&lt;/em&gt; did a very good job of explaining the core concepts of programming. The focus of the book is the C programming language, however, the approach is general, so it can be extrapolated to other programming languages.&lt;/p&gt; &#xA;&lt;h3&gt;Compilers&lt;/h3&gt; &#xA;&lt;p&gt;To be able to write programs in C, a compiler is required. There are many options available for each operating system.&lt;/p&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://clang.llvm.org/get_started.html&#34;&gt;&lt;strong&gt;Clang&lt;/strong&gt;&lt;/a&gt; compiler is a very nice choice when using macOS. It is available with &lt;strong&gt;Xcode Command Line Tools&lt;/strong&gt;, which can be easily installed using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;xcode-select --install&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>antirez/adventofcode2022</title>
    <updated>2022-12-08T01:34:38Z</updated>
    <id>tag:github.com,2022-12-08:/antirez/adventofcode2022</id>
    <link href="https://github.com/antirez/adventofcode2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A few Advent of Code puzzles (2022 edition) in C&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Just a couple of Advent of Code puzzles solved in C. When possible I try to use non obvious ways to solve the puzzle, to make things more creative:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Day 1 makes use of a simple streaming algorithm to retain top-N max entries.&lt;/li&gt; &#xA; &lt;li&gt;Day 2 turns the logic of Rock, Paper, Scissor into a simple equation modulo N.&lt;/li&gt; &#xA; &lt;li&gt;Day 3 makes use of bitmaps.&lt;/li&gt; &#xA; &lt;li&gt;Day 4 shows abstracting with C structures.&lt;/li&gt; &#xA; &lt;li&gt;Day 5 shows linked lists are useful.&lt;/li&gt; &#xA; &lt;li&gt;Day 6 will solve in &lt;code&gt;O(N)&lt;/code&gt; instead of &lt;code&gt;O(N*M)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Day 7 uses recursion and building ad-hoc data structures.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>neutrinolabs/xrdp</title>
    <updated>2022-12-08T01:34:38Z</updated>
    <id>tag:github.com,2022-12-08:/neutrinolabs/xrdp</id>
    <link href="https://github.com/neutrinolabs/xrdp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;xrdp: an open source RDP server&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/neutrinolabs/xrdp/actions&#34;&gt;&lt;img src=&#34;https://github.com/neutrinolabs/xrdp/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/neutrinolabs/xrdp-questions&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;Apache-License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neutrinolabs/xrdp/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/neutrinolabs/xrdp.svg?label=Latest%20Version&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;xrdp - an open source RDP server&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;xrdp&lt;/strong&gt; provides a graphical login to remote machines using Microsoft Remote Desktop Protocol (RDP). xrdp accepts connections from a variety of RDP clients:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FreeRDP&lt;/li&gt; &#xA; &lt;li&gt;rdesktop&lt;/li&gt; &#xA; &lt;li&gt;KRDC&lt;/li&gt; &#xA; &lt;li&gt;NeutrinoRDP&lt;/li&gt; &#xA; &lt;li&gt;Windows MSTSC (Microsoft Terminal Services Client, aka &lt;code&gt;mstsc.exe&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Remote Desktop (found on Microsoft Store, which is distinct from MSTSC)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Many of these work on some or all of Windows, Mac OS, iOS, and/or Android.&lt;/p&gt; &#xA;&lt;p&gt;RDP transport is encrypted using TLS by default.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/neutrinolabs/xrdp/raw/gh-pages/xrdp_demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Remote Desktop Access&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect to a Linux desktop using RDP from anywhere (requires &lt;a href=&#34;https://github.com/neutrinolabs/xorgxrdp&#34;&gt;xorgxrdp&lt;/a&gt; Xorg module)&lt;/li&gt; &#xA; &lt;li&gt;Reconnect to an existing session&lt;/li&gt; &#xA; &lt;li&gt;Session resizing (both on-connect and on-the-fly)&lt;/li&gt; &#xA; &lt;li&gt;RDP/VNC proxy (connect to another RDP/VNC server via xrdp)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Access to Remote Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Two-way clipboard transfer (text, bitmap, file)&lt;/li&gt; &#xA; &lt;li&gt;Audio redirection (&lt;a href=&#34;https://github.com/neutrinolabs/xrdp/wiki/How-to-set-up-audio-redirection&#34;&gt;requires to build additional modules&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Microphone redirection (&lt;a href=&#34;https://github.com/neutrinolabs/xrdp/wiki/How-to-set-up-audio-redirection&#34;&gt;requires to build additional modules&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Drive redirection (mount local client drives on remote machine)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;xrdp&lt;/strong&gt; primarily targets GNU/Linux operating system. x86 (including x86-64) and ARM processors are most mature architecture to run xrdp on. See also &lt;a href=&#34;https://github.com/neutrinolabs/xrdp/wiki/Platform-Support-Tier&#34;&gt;Platform Support Tier&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some components such as xorgxrdp and RemoteFX codec have special optimization for x86 using SIMD instructions. So running xrdp on x86 processors will get fully accelerated experience.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Most Linux distributions should distribute the latest release of xrdp in their repository. You would need xrdp and xorgxrdp packages for the best experience. It is recommended that xrdp depends on xorgxrdp, so it should be sufficient to install xrdp. If xorgxrdp is not provided, use Xvnc server.&lt;/p&gt; &#xA;&lt;p&gt;xrdp listens on 3389/tcp. Make sure your firewall accepts connection to 3389/tcp from where you want to access.&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu / Debian&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt install xrdp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RedHat / CentOS / Fedora&lt;/h3&gt; &#xA;&lt;p&gt;On RedHat and CentOS, make sure to enable EPEL packages first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install epel-release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install xrdp package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install xrdp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;yum&lt;/code&gt; is being replaced with &lt;code&gt;dnf&lt;/code&gt;, so you may need to use &lt;code&gt;dnf&lt;/code&gt; instead of &lt;code&gt;yum&lt;/code&gt; in the above commands.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/neutrinolabs/xrdp/wiki#building-from-sources&#34;&gt;https://github.com/neutrinolabs/xrdp/wiki#building-from-sources&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;To compile xrdp from the packaged sources, you need basic build tools - a compiler (&lt;strong&gt;gcc&lt;/strong&gt; or &lt;strong&gt;clang&lt;/strong&gt;) and the &lt;strong&gt;make&lt;/strong&gt; program. Additionally, you would need &lt;strong&gt;openssl-devel&lt;/strong&gt;, &lt;strong&gt;pam-devel&lt;/strong&gt;, &lt;strong&gt;libX11-devel&lt;/strong&gt;, &lt;strong&gt;libXfixes-devel&lt;/strong&gt;, &lt;strong&gt;libXrandr-devel&lt;/strong&gt;. More additional software would be needed depending on your configuration.&lt;/p&gt; &#xA;&lt;p&gt;To compile xrdp from a checked out git repository, you would additionally need &lt;strong&gt;autoconf&lt;/strong&gt;, &lt;strong&gt;automake&lt;/strong&gt;, &lt;strong&gt;libtool&lt;/strong&gt; and &lt;strong&gt;pkg-config&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Get the source and build it&lt;/h3&gt; &#xA;&lt;p&gt;If compiling from the packaged source, unpack the tarball and change to the resulting directory.&lt;/p&gt; &#xA;&lt;p&gt;If compiling from a checked out repository, please make sure you&#39;ve got the submodules cloned too (use &lt;code&gt;git clone --recursive https://github.com/neutrinolabs/xrdp&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Then run following commands to compile and install xrdp:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bootstrap&#xA;./configure&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use audio redirection, you need to build and install additional pulseaudio modules. The build instructions can be found at wiki.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neutrinolabs/xrdp/wiki/How-to-set-up-audio-redirection&#34;&gt;How to set up audio redirection&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;xrdp&#xA;├── common ······ common code&#xA;├── docs ········ documentation&#xA;├── fontutils ··· font handling utilities&#xA;├── genkeymap ··· keymap generator&#xA;├── instfiles ··· installable data file&#xA;├── keygen ······ xrdp RSA key pair generator&#xA;├── libpainter ·· painter library&#xA;├── librfxcodec · RFX codec library&#xA;├── libxrdp ····· core RDP protocol implementation&#xA;├── m4 ·········· Autoconf macros&#xA;├── mc ·········· media center module&#xA;├── neutrinordp · RDP client module for proxying RDP connections using NeutrinoRDP&#xA;├── pkgconfig ··· pkg-config configuration&#xA;├── scripts ····· build scripts&#xA;├┬─ sesman ······ session manager for xrdp&#xA;|├── chansrv ···· channel server for xrdp&#xA;|├── libscp ····· authorization library&#xA;|└── tools ······ session management tools for sys admins&#xA;├── tests ······· tests for the code&#xA;├┬─ tools ······· tools&#xA;|└┬─ devel ······ development tools&#xA;| ├── gtcp_proxy  GTK app that forwards TCP connections to a remote host&#xA;| └── tcp_proxy · CLI app that forwards TCP connections to a remote host&#xA;├── vnc ········· VNC client module for xrdp&#xA;├── vrplayer ···· QT player redirecting video/audio to clients over xrdpvr channel&#xA;├── xrdp ········ main server code&#xA;├── xrdpapi ····· virtual channel API&#xA;├── xrdpvr ······ API for playing media over RDP&#xA;└── xup ········· X11rdp and xorgxrdp client module&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>