<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T01:31:56Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>paranoidninja/Proxy-DLL-Loads</title>
    <updated>2023-01-29T01:31:56Z</updated>
    <id>tag:github.com,2023-01-29:/paranoidninja/Proxy-DLL-Loads</id>
    <link href="https://github.com/paranoidninja/Proxy-DLL-Loads" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The code is a pingback to the Dark Vortex blog:&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Proxy-DLL-Loads&lt;/h1&gt; &#xA;&lt;p&gt;The code is a pingback to the Dark Vortex blog: &lt;a href=&#34;https://0xdarkvortex.dev/proxying-dll-loads-for-hiding-etwti-stack-tracing/&#34;&gt;https://0xdarkvortex.dev/proxying-dll-loads-for-hiding-etwti-stack-tracing/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Compile with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nasm -f win64 proxyHelper.asm -o proxyHelper.o&#xA;x86_64-w64-mingw32-gcc proxyDllLoads.c proxyHelper.o -o proxyDllLoads.exe&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>miloyip/json-tutorial</title>
    <updated>2023-01-29T01:31:56Z</updated>
    <id>tag:github.com,2023-01-29:/miloyip/json-tutorial</id>
    <link href="https://github.com/miloyip/json-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;从零开始的 JSON 库教程&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;从零开始的 JSON 库教程&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Milo Yip&lt;/li&gt; &#xA; &lt;li&gt;2016/9/15&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;也许有很多同学上过 C/C++ 的课后，可以完成一些简单的编程练习，又能在一些网站刷题，但对于如何开发有实际用途的程序可能感到束手无策。本教程希望能以一个简单的项目开发形式，让同学能逐步理解如何从无到有去开发软件。&lt;/p&gt; &#xA;&lt;p&gt;为什么选择 JSON？因为它足够简单，除基本编程外不需大量技术背景知识。JSON 有标准，可按照标准逐步实现。JSON 也是实际在许多应用上会使用的格式，所以才会有大量的开源库。&lt;/p&gt; &#xA;&lt;p&gt;这是一个免费、开源的教程，如果你喜欢，也可以打赏鼓励。因为工作及家庭因素，不能保证每篇文章的首发时间，请各位见谅。&lt;/p&gt; &#xA;&lt;h2&gt;对象与目标&lt;/h2&gt; &#xA;&lt;p&gt;教程对象：学习过基本 C/C++ 编程的同学。&lt;/p&gt; &#xA;&lt;p&gt;通过这个教程，同学可以了解如何从零开始写一个 JSON 库，其特性如下：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;符合标准的 JSON 解析器和生成器&lt;/li&gt; &#xA; &lt;li&gt;手写的递归下降解析器（recursive descent parser）&lt;/li&gt; &#xA; &lt;li&gt;使用标准 C 语言（C89）&lt;/li&gt; &#xA; &lt;li&gt;跨平台／编译器（如 Windows／Linux／OS X，vc／gcc／clang）&lt;/li&gt; &#xA; &lt;li&gt;仅支持 UTF-8 JSON 文本&lt;/li&gt; &#xA; &lt;li&gt;仅支持以 &lt;code&gt;double&lt;/code&gt; 存储 JSON number 类型&lt;/li&gt; &#xA; &lt;li&gt;解析器和生成器的代码合共少于 500 行&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;除了围绕 JSON 作为例子，希望能在教程中讲述一些课题：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;测试驱动开发（test driven development, TDD）&lt;/li&gt; &#xA; &lt;li&gt;C 语言编程风格&lt;/li&gt; &#xA; &lt;li&gt;数据结构&lt;/li&gt; &#xA; &lt;li&gt;API 设计&lt;/li&gt; &#xA; &lt;li&gt;断言&lt;/li&gt; &#xA; &lt;li&gt;Unicode&lt;/li&gt; &#xA; &lt;li&gt;浮点数&lt;/li&gt; &#xA; &lt;li&gt;Github、CMake、valgrind、Doxygen 等工具&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;教程大纲&lt;/h2&gt; &#xA;&lt;p&gt;本教程预计分为 9 个单元，第 1-8 个单元附带练习和解答。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial01/tutorial01.md&#34;&gt;启程&lt;/a&gt;（2016/9/15 完成）：编译环境、JSON 简介、测试驱动、解析器主要函数及各数据结构。练习 JSON 布尔类型的解析。&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial01_answer/tutorial01_answer.md&#34;&gt;启程解答篇&lt;/a&gt;（2016/9/17 完成）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial02/tutorial02.md&#34;&gt;解析数字&lt;/a&gt;（2016/9/18 完成）：JSON number 的语法。练习 JSON number 类型的校验。&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial02_answer/tutorial02_answer.md&#34;&gt;解析数字解答篇&lt;/a&gt;（2016/9/20 完成）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial03/tutorial03.md&#34;&gt;解析字符串&lt;/a&gt;（2016/9/22 完成）：使用 union 存储 variant、自动扩展的堆栈、JSON string 的语法、valgrind。练习最基本的 JSON string 类型的解析、内存释放。&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial03_answer/tutorial03_answer.md&#34;&gt;解析字符串解答篇&lt;/a&gt;（2016/9/27 完成）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial04/tutorial04.md&#34;&gt;Unicode&lt;/a&gt;（2016/10/2 完成）：Unicode 和 UTF-8 的基本知识、JSON string 的 unicode 处理。练习完成 JSON string 类型的解析。&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial04_answer/tutorial04_answer.md&#34;&gt;Unicode 解答篇&lt;/a&gt;（2016/10/6 完成）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial05/tutorial05.md&#34;&gt;解析数组&lt;/a&gt;（2016/10/7 完成）：JSON array 的语法。练习完成 JSON array 类型的解析、相关内存释放。&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial05_answer/tutorial05_answer.md&#34;&gt;解析数组解答篇&lt;/a&gt;（2016/10/13 完成）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial06/tutorial06.md&#34;&gt;解析对象&lt;/a&gt;（2016/10/29 完成）：JSON object 的语法、重构 string 解析函数。练习完成 JSON object 的解析、相关内存释放。&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial06_answer/tutorial06_answer.md&#34;&gt;解析对象解答篇&lt;/a&gt;（2016/11/15 完成）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial07/tutorial07.md&#34;&gt;生成器&lt;/a&gt;（2016/12/20 完成）：JSON 生成过程、注意事项。练习完成 JSON 生成器。&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial07_answer/tutorial07_answer.md&#34;&gt;生成器解答篇&lt;/a&gt;（2017/1/5 完成）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miloyip/json-tutorial/master/tutorial08/tutorial08.md&#34;&gt;访问与其他功能&lt;/a&gt;（2018/6/2 完成）：JSON array／object 的访问及修改。练习完成相关功能。&lt;/li&gt; &#xA; &lt;li&gt;终点及新开始：加入 nativejson-benchmark 测试，与 RapidJSON 对比及展望。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;关于作者&lt;/h2&gt; &#xA;&lt;p&gt;叶劲峰（Milo Yip）现任腾讯 T4 专家、互动娱乐事业群魔方工作室群游戏客户端技术总监。他获得香港大学认知科学学士（BCogSc）、香港中文大学系统工程及工程管理哲学硕士（MPhil）。他是《游戏引擎架构》译者、《C++ Primer 中文版（第五版）》审校。他曾参与《天涯明月刀》、《斗战神》、《爱丽丝：疯狂回归》、《美食从天降》、《王子传奇》等游戏项目，以及多个游戏引擎及中间件的研发。他是开源项目 &lt;a href=&#34;https://github.com/miloyip/rapidjson&#34;&gt;RapidJSON&lt;/a&gt; 的作者，开发 &lt;a href=&#34;https://github.com/miloyip/nativejson-benchmark&#34;&gt;nativejson-benchmark&lt;/a&gt; 比较 41 个开源原生 JSON 库的标准符合程度及性能。他在 1990 年学习 C 语言，1995 年开始使用 C++ 于各种项目。&lt;/p&gt;</summary>
  </entry>
</feed>