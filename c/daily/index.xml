<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-08T01:32:28Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rockchip-linux/rknpu2</title>
    <updated>2023-07-08T01:32:28Z</updated>
    <id>tag:github.com,2023-07-08:/rockchip-linux/rknpu2</id>
    <link href="https://github.com/rockchip-linux/rknpu2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;RKNPU2&lt;/h2&gt; &#xA;&lt;p&gt;RKNPU2 provides an advanced interface to access Rockchip NPU.&lt;/p&gt; &#xA;&lt;h2&gt;Support Platform&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RK3566/RK3568&lt;/li&gt; &#xA; &lt;li&gt;RK3588/RK3588S&lt;/li&gt; &#xA; &lt;li&gt;RV1103/RV1106&lt;/li&gt; &#xA; &lt;li&gt;RK3562&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: The rknn model must be generated using RKNN Toolkit 2: &lt;a href=&#34;https://github.com/rockchip-linux/rknn-toolkit2&#34;&gt;https://github.com/rockchip-linux/rknn-toolkit2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;​ &lt;strong&gt;For RK1808/RV1109/RV1126/RK3399Pro, please use:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;​ &lt;a href=&#34;https://github.com/rockchip-linux/rknn-toolkit&#34;&gt;https://github.com/rockchip-linux/rknn-toolkit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;​ &lt;a href=&#34;https://github.com/rockchip-linux/rknpu&#34;&gt;https://github.com/rockchip-linux/rknpu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;​ &lt;a href=&#34;https://github.com/airockchip/RK3399Pro_npu&#34;&gt;https://github.com/airockchip/RK3399Pro_npu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ReleaseLog&lt;/h2&gt; &#xA;&lt;h1&gt;1.5.0&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support RK3562&lt;/li&gt; &#xA; &lt;li&gt;Support more NPU operator fuse, such as Conv-Silu/Conv-Swish/Conv-Hardswish/Conv-sigmoid/Conv-HardSwish/Conv-Gelu ..&lt;/li&gt; &#xA; &lt;li&gt;Improve support for NHWC output layout&lt;/li&gt; &#xA; &lt;li&gt;RK3568/RK3588：The maximum input resolution up to 8192&lt;/li&gt; &#xA; &lt;li&gt;Improve support for Swish/DataConvert/Softmax/Lstm/LayerNorm/Gather/Transpose/Mul/Maxpool/Sigmoid/Pad&lt;/li&gt; &#xA; &lt;li&gt;Improve support for CPU operators (Cast, Sin, Cos, RMSNorm, ScalerND, GRU)&lt;/li&gt; &#xA; &lt;li&gt;Limited support for dynamic resolution&lt;/li&gt; &#xA; &lt;li&gt;Provide MATMUL API&lt;/li&gt; &#xA; &lt;li&gt;Add RV1103/RV1106 rknn_server application as proxy between PC and board&lt;/li&gt; &#xA; &lt;li&gt;Add more examples such as rknn_dynamic_shape_input_demo and video demo for yolov5&lt;/li&gt; &#xA; &lt;li&gt;Bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.4.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support more NPU operators, such as Reshape、Transpose、MatMul、 Max、Min、exGelu、exSoftmax13、Resize etc.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;strong&gt;Weight Share&lt;/strong&gt; function, reduce memory usage.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;strong&gt;Weight Compression&lt;/strong&gt; function, reduce memory and bandwidth usage.(RK3588/RV1103/RV1106)&lt;/li&gt; &#xA; &lt;li&gt;RK3588 supports storing weights or feature maps on SRAM, reducing system bandwidth consumption.&lt;/li&gt; &#xA; &lt;li&gt;RK3588 adds the function of running a single model on multiple cores at the same time.&lt;/li&gt; &#xA; &lt;li&gt;Add new output layout NHWC (C has alignment restrictions) .&lt;/li&gt; &#xA; &lt;li&gt;Improve support for non-4D input.&lt;/li&gt; &#xA; &lt;li&gt;Add more examples such as rknn_yolov5_android_apk_demo and rknn_internal_mem_reuse_demo.&lt;/li&gt; &#xA; &lt;li&gt;Bug fix.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.3.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support RV1103/RV1106（Beta SDK）&lt;/li&gt; &#xA; &lt;li&gt;rknn_tensor_attr support w_stride(rename from stride) and h_stride&lt;/li&gt; &#xA; &lt;li&gt;Rename rknn_destroy_mem()&lt;/li&gt; &#xA; &lt;li&gt;Support more NPU operators, such as Where, Resize, Pad, Reshape, Transpose etc.&lt;/li&gt; &#xA; &lt;li&gt;RK3588 support multi-batch multi-core mode&lt;/li&gt; &#xA; &lt;li&gt;When RKNN_LOG_LEVEL=4, it supports to display the MACs utilization and bandwidth occupation of each layer.&lt;/li&gt; &#xA; &lt;li&gt;Bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.2.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support RK3588&lt;/li&gt; &#xA; &lt;li&gt;Support more operators, such as GRU、Swish、LayerNorm etc.&lt;/li&gt; &#xA; &lt;li&gt;Reduce memory usage&lt;/li&gt; &#xA; &lt;li&gt;Improve zero-copy interface implementation&lt;/li&gt; &#xA; &lt;li&gt;Bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support INT8+FP16 mixed quantization to improve model accuracy&lt;/li&gt; &#xA; &lt;li&gt;Support specifying input and output dtype, which can be solidified into the model&lt;/li&gt; &#xA; &lt;li&gt;Support multiple inputs of the model with different channel mean/std&lt;/li&gt; &#xA; &lt;li&gt;Improve the stability of multi-thread + multi-process runtime&lt;/li&gt; &#xA; &lt;li&gt;Support flashing cache for fd pointed to internal tensor memory which are allocated by users&lt;/li&gt; &#xA; &lt;li&gt;Improve dumping internal layer results of the model&lt;/li&gt; &#xA; &lt;li&gt;Add rknn_server application as proxy between PC and board&lt;/li&gt; &#xA; &lt;li&gt;Support more operators, such as HardSigmoid、HardSwish、Gather、ReduceMax、Elu&lt;/li&gt; &#xA; &lt;li&gt;Add LSTM support (structure cifg and peephole are not supported, function: layernormal, clip is not supported)&lt;/li&gt; &#xA; &lt;li&gt;Bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimize the performance of rknn_inputs_set()&lt;/li&gt; &#xA; &lt;li&gt;Add more functions for zero-copy&lt;/li&gt; &#xA; &lt;li&gt;Add new OP support, see OP support list document for details.&lt;/li&gt; &#xA; &lt;li&gt;Add multi-process support&lt;/li&gt; &#xA; &lt;li&gt;Support per-channel quantitative model&lt;/li&gt; &#xA; &lt;li&gt;Bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.7&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimize the performance of rknn_inputs_set(), especially for models whose input width is 8-byte aligned.&lt;/li&gt; &#xA; &lt;li&gt;Add new OP support, see OP support list document for details.&lt;/li&gt; &#xA; &lt;li&gt;Bug fix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.6&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Initial version&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>g0mxxm/Anti-Obfuscation</title>
    <updated>2023-07-08T01:32:28Z</updated>
    <id>tag:github.com,2023-07-08:/g0mxxm/Anti-Obfuscation</id>
    <link href="https://github.com/g0mxxm/Anti-Obfuscation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The tool can be used to eliminate redundant instructions in a basic block.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;The tool can be used to eliminate redundant instructions in a basic block, thus making the reverse analysis work simple and easy to carry out. The core ideas used are stain analysis and active variable analysis! If you want to know more details about this project, you can read this &lt;a href=&#34;https://bbs.kanxue.com/thread-277825.htm&#34;&gt;airtical&lt;/a&gt; is pulished on the &#34;KanXue&#34; forum.&lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;h2&gt;Environment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Language: C++&lt;/li&gt; &#xA; &lt;li&gt;IDE: VS2022&lt;/li&gt; &#xA; &lt;li&gt;External Dependencies: Capstone &amp;amp; Boost&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code&lt;/h2&gt; &#xA;&lt;p&gt;You need clone this repo, the source code in the &#34;clean_basic_block\src&#34;, the lib files in the &#34;clean_basic_block\lib&#34;, the DLL files in the &#34;clean_basic_block\dll&#34;, the header file in the &#34;clean_basic_block\include&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Realse&lt;/h2&gt; &#xA;&lt;p&gt;You also can download the realse file to use this project.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://g0mx-picbed.oss-cn-beijing.aliyuncs.com/blogs/pictures/README-2023-05-21-19-12-28.png&#34; alt=&#34;README-2023-05-21-19-12-28&#34;&gt;&lt;br&gt; This tools have four optinos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;-h&#34; Displays help information.&lt;/li&gt; &#xA; &lt;li&gt;&#34;-f&#34; Set the path of &#34;exe&#34; file you want to clean.&lt;/li&gt; &#xA; &lt;li&gt;&#34;-s&#34; Set the start address(RVA) of basic block.&lt;/li&gt; &#xA; &lt;li&gt;&#34;-e&#34; Set the end address(RVA) of basic block.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;p&gt;This basic block has been obfuscated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-x86asm&#34;&gt;.vmp1:0064D713 56                            push    esi&#xA;.vmp1:0064D714 0F BF F1                      movsx   esi, cx&#xA;.vmp1:0064D717 BE A3 3B 66 6B                mov     esi, 6B663BA3h&#xA;.vmp1:0064D71C 55                            push    ebp&#xA;.vmp1:0064D71D 52                            push    edx&#xA;.vmp1:0064D71E 51                            push    ecx&#xA;.vmp1:0064D71F 9C                            pushf&#xA;.vmp1:0064D720 F5                            cmc&#xA;.vmp1:0064D721 0F BF EF                      movsx   ebp, di&#xA;.vmp1:0064D724 87 D6                         xchg    edx, esi&#xA;.vmp1:0064D726 50                            push    eax&#xA;.vmp1:0064D727 98                            cwde&#xA;.vmp1:0064D728 57                            push    edi&#xA;.vmp1:0064D729 80 E6 1A                      and     dh, 1Ah&#xA;.vmp1:0064D72C 87 FF                         xchg    edi, edi&#xA;.vmp1:0064D72E 53                            push    ebx&#xA;.vmp1:0064D72F 66 F7 C6 9C 51                test    si, 519Ch&#xA;.vmp1:0064D734 66 0F A4 E7 8F                shld    di, sp, 8Fh&#xA;.vmp1:0064D739 BA 00 00 00 00                mov     edx, 0&#xA;.vmp1:0064D73E 85 EE                         test    esi, ebp&#xA;.vmp1:0064D740 66 2B C7                      sub     ax, di&#xA;.vmp1:0064D743 D2 CF                         ror     bh, cl&#xA;.vmp1:0064D745 52                            push    edx&#xA;.vmp1:0064D746 66 98                         cbw&#xA;.vmp1:0064D748 8B 6C 24 28                   mov     ebp, [esp+24h+arg_0]&#xA;.vmp1:0064D74C 81 ED 25 26 6F 1D             sub     ebp, 1D6F2625h&#xA;.vmp1:0064D752 0F CD                         bswap   ebp&#xA;.vmp1:0064D754 0F 47 C5                      cmova   eax, ebp&#xA;.vmp1:0064D757 98                            cwde&#xA;.vmp1:0064D758 F6 C4 F5                      test    ah, 0F5h&#xA;.vmp1:0064D75B F7 DD                         neg     ebp&#xA;.vmp1:0064D75D 66 0F BD F2                   bsr     si, dx&#xA;.vmp1:0064D761 66 0F BA F7 76                btr     di, 76h ; &#39;v&#39;&#xA;.vmp1:0064D766 66 F7 C7 A9 43                test    di, 43A9h&#xA;.vmp1:0064D76B F7 D5                         not     ebp&#xA;.vmp1:0064D76D 66 0F AC C0 D8                shrd    ax, ax, 0D8h&#xA;.vmp1:0064D772 81 ED 7B 53 BE 38             sub     ebp, 38BE537Bh&#xA;.vmp1:0064D778 66 0F BA FF 07                btc     di, 7&#xA;.vmp1:0064D77D 66 98                         cbw&#xA;.vmp1:0064D77F C1 C5 03                      rol     ebp, 3&#xA;.vmp1:0064D782 66 0F A4 F0 AB                shld    ax, si, 0ABh&#xA;.vmp1:0064D787 2B DE                         sub     ebx, esi&#xA;.vmp1:0064D789 8D 6C 15 00                   lea     ebp, [ebp+edx+0]&#xA;.vmp1:0064D78D 8B F4                         mov     esi, esp&#xA;.vmp1:0064D78F 66 0F BA F2 E5                btr     dx, 0E5h&#xA;.vmp1:0064D794 66 0B D8                      or      bx, ax&#xA;.vmp1:0064D797 47                            inc     edi&#xA;.vmp1:0064D798 81 EC C0 00 00 00             sub     esp, 0C0h&#xA;.vmp1:0064D79E 66 3B F8                      cmp     di, ax&#xA;.vmp1:0064D7A1 F9                            stc&#xA;.vmp1:0064D7A2 66 85 EB                      test    bx, bp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The project is used for cleaning the above basic block:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;(base) PS C:\Users\g0mx&amp;gt; D:\Code_Files\Deobfusecate\Release\Clean_BB.exe -f D:\Code_Files\EliminateVmpJunkCode\Project1.vmp\Project1.vmp.exe -s &#34;0x64D713&#34; -e &#34;0x64D7A5&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After cleaning:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-x86asm&#34;&gt;Insn List After Clean:&#xA;0x64d713:       push            esi&#xA;0x64d71c:       push            ebp&#xA;0x64d71d:       push            edx&#xA;0x64d71e:       push            ecx&#xA;0x64d71f:       pushfd&#xA;0x64d726:       push            eax&#xA;0x64d728:       push            edi&#xA;0x64d72c:       xchg            edi, edi&#xA;0x64d72e:       push            ebx&#xA;0x64d734:       shld            di, sp, 0x8f&#xA;0x64d761:       btr             di, 0x76&#xA;0x64d778:       btc             di, 7&#xA;0x64d797:       inc             edi&#xA;clean over!!!&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>