<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-26T01:30:46Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/security-research</title>
    <updated>2023-07-26T01:30:46Z</updated>
    <id>tag:github.com,2023-07-26:/google/security-research</id>
    <link href="https://github.com/google/security-research" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This project hosts security advisories and their accompanying proof-of-concepts related to research conducted at Google which impact non-Google owned code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Security Research&lt;/h1&gt; &#xA;&lt;p&gt;This project hosts security advisories and their accompanying proof-of-concepts related to research conducted at Google which impact non-Google owned code.&lt;/p&gt; &#xA;&lt;p&gt;We believe that vulnerability disclosure is a two-way street. Vendors, as well as researchers, must act responsibly. This is why Google adheres to a 90-day disclosure deadline. We notify vendors of vulnerabilities immediately, with details shared in public with the defensive community after 90 days, or sooner if the vendor releases a fix.&lt;/p&gt; &#xA;&lt;p&gt;You can read up on our full policy at: &lt;a href=&#34;https://www.google.com/about/appsecurity/&#34;&gt;https://www.google.com/about/appsecurity/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advisories&lt;/h2&gt; &#xA;&lt;p&gt;The disclosure of vulnerabilities are all in the form of security advisories, which can be browsed in the &lt;a href=&#34;https://github.com/google/security-research/security/advisories?state=published&#34;&gt;Security Advisories&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Proof of Concepts&lt;/h2&gt; &#xA;&lt;p&gt;Accompanying proof-of-concept code will be used to demonstrate the security vulnerabilities.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Year&lt;/th&gt; &#xA;   &lt;th&gt;Title&lt;/th&gt; &#xA;   &lt;th&gt;Advisories&lt;/th&gt; &#xA;   &lt;th&gt;Links&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2023&lt;/td&gt; &#xA;   &lt;td&gt;Linux: eBPF Path Pruning gone wrong&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-j87x-j6mh-mv8v&#34;&gt;CVE-2023-2163&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/linux/cve-2023-2163&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2023&lt;/td&gt; &#xA;   &lt;td&gt;XGETBV is non-deterministic on Intel CPUs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/cpus/xgetbv&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2023&lt;/td&gt; &#xA;   &lt;td&gt;XSAVES Instruction May Fail to Save XMM Registers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/cpus/errata/amd/1386&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022&lt;/td&gt; &#xA;   &lt;td&gt;RET2ASLR - Leaking ASLR from return instructions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/cpus/ret2aslr/src&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022&lt;/td&gt; &#xA;   &lt;td&gt;Unexpected Speculation Control of RETs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/cpus/top-of-stack&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022&lt;/td&gt; &#xA;   &lt;td&gt;Bleve Library: Traversal Vulnerabilities in Create / Delete IndexHandler&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-gc7p-j7x8-h873&#34;&gt;GHSA-gc7p-j7x8-h873&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/bleve&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft: CBC Padding Oracle in Azure Blob Storage Encryption Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-6m8q-r22q-vfxh&#34;&gt;CVE-2022-30187&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/azure/oracle/net/keymaterial/azure&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022&lt;/td&gt; &#xA;   &lt;td&gt;Apple: Heap-based Buffer Overflow in libresolv&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-6cjw-q72j-mh57&#34;&gt;GHSA-6cjw-q72j-mh57&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/apple/libresolv&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022&lt;/td&gt; &#xA;   &lt;td&gt;Apache: Code execution in log4j2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-ggmf-hg75-88gg&#34;&gt;CVE-2021-45046&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/log4j&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021&lt;/td&gt; &#xA;   &lt;td&gt;Surface Pro 3: BIOS False Health Attestation (TPM Carte Blanche)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-c4qg-jj77-rcc3&#34;&gt;CVE-2021-42299&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://google.github.io/security-research/pocs/bios/tpm-carte-blanche/writeup.html&#34;&gt;Write-up&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/bios/tpm-carte-blanche&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2021-22555: Turning \x00\x00 into 10000$&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-xxx5-8mvq-3528&#34;&gt;CVE-2021-22555&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://google.github.io/security-research/pocs/linux/cve-2021-22555/writeup.html&#34;&gt;Write-up&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/linux/cve-2021-22555&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021&lt;/td&gt; &#xA;   &lt;td&gt;Linux: KVM VM_IO|VM_PFNMAP vma mishandling&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-7wq5-phmq-m584&#34;&gt;CVE-2021-22543&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/linux/kvm_vma&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021&lt;/td&gt; &#xA;   &lt;td&gt;BleedingTooth: Linux Bluetooth Zero-Click Remote Code Execution&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-ccx2-w2r4-x649&#34;&gt;CVE-2020-24490&lt;/a&gt;, &lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-h637-c88j-47wq&#34;&gt;CVE-2020-12351&lt;/a&gt;, &lt;a href=&#34;https://github.com/google/security-research/security/advisories/GHSA-7mh3-gq28-gfrq&#34;&gt;CVE-2020-12352&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://google.github.io/security-research/pocs/linux/bleedingtooth/writeup.html&#34;&gt;Write-up&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/google/security-research/master/pocs/linux/bleedingtooth&#34;&gt;PoC&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Licence &amp;amp; Patents&lt;/h1&gt; &#xA;&lt;p&gt;The advisories and patches posted here are free and open source.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/google/security-research/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for further details.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;The easiest way to contribute to our security research projects is to correct the patches when you see mistakes.&lt;/p&gt; &#xA;&lt;p&gt;Please read up our &lt;a href=&#34;https://github.com/google/security-research/raw/master/CONTRIBUTING.md&#34;&gt;Contribution&lt;/a&gt; policy.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>plv8/pljs</title>
    <updated>2023-07-26T01:30:46Z</updated>
    <id>tag:github.com,2023-07-26:/plv8/pljs</id>
    <link href="https://github.com/plv8/pljs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PLJS - Javascript Language Plugin for PostreSQL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PLJS&lt;/h1&gt; &#xA;&lt;p&gt;PLJS is a Javascript Language Extension for &lt;em&gt;&#34;modern&#34;&lt;/em&gt; PostgreSQL.&lt;/p&gt; &#xA;&lt;p&gt;It is compact, lightweight, and decently fast.&lt;/p&gt; &#xA;&lt;h2&gt;Technology&lt;/h2&gt; &#xA;&lt;p&gt;Javascript: &lt;a href=&#34;https://bellard.org/quickjs/quickjs.html&#34;&gt;QuickJS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PostgreSQL: 14+&lt;/p&gt; &#xA;&lt;h3&gt;Current Status&lt;/h3&gt; &#xA;&lt;p&gt;Very early.&lt;/p&gt; &#xA;&lt;p&gt;It compiles, and is on track to match functionality of &lt;a href=&#34;https://github.com/plv8/plv8&#34;&gt;PLV8&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Missing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Triggers&lt;/li&gt; &#xA; &lt;li&gt;Composite Types&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA; &lt;li&gt;return_next()&lt;/li&gt; &#xA; &lt;li&gt;startup functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also, WASM will likely never be added to this extension.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Q. Is this a replacement for &lt;a href=&#34;https://github.com/plv8/plv8&#34;&gt;PLV8&lt;/a&gt;?&lt;/p&gt; &#xA;&lt;p&gt;A. For general cases, no. PLJS is built to be compact and lightweight, as well as easy to build and maintain. It uses &lt;a href=&#34;https://github.com/bellard/quickjs&#34;&gt;QuickJS&lt;/a&gt; as the Javascript engine instead of using V8. This makes for a very lightweight build with a tradeoff for speed.&lt;/p&gt; &#xA;&lt;p&gt;Q. How fast is it compared to &lt;a href=&#34;https://github.com/plv8/plv8&#34;&gt;PLV8&lt;/a&gt;?&lt;/p&gt; &#xA;&lt;p&gt;A. We shall see, there will be tradeoffs, and before 1.0 release, any tradeoffs will be well documented. Help is always welcome when there is a specific use-case that can be distilled into a simple benchmark.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>snowcra5h/CVE-2023-38408</title>
    <updated>2023-07-26T01:30:46Z</updated>
    <id>tag:github.com,2023-07-26:/snowcra5h/CVE-2023-38408</id>
    <link href="https://github.com/snowcra5h/CVE-2023-38408" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CVE-2023-38408 Remote Code Execution in OpenSSH&#39;s forwarded ssh-agent&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Reference / info&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.qualys.com/2023/07/19/cve-2023-38408/rce-openssh-forwarded-ssh-agent.txt&#34;&gt;https://www.qualys.com/2023/07/19/cve-2023-38408/rce-openssh-forwarded-ssh-agent.txt&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>