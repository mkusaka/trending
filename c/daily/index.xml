<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-21T01:30:57Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Wh04m1001/CVE-2023-29343</title>
    <updated>2023-06-21T01:30:57Z</updated>
    <id>tag:github.com,2023-06-21:/Wh04m1001/CVE-2023-29343</id>
    <link href="https://github.com/Wh04m1001/CVE-2023-29343" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE-2023-29343&lt;/h1&gt; &#xA;&lt;p&gt;This is PoC for arbitrary file write bug in Sysmon version 14.14&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Wh04m1001/CVE-2023-29343/assets/44291883/7793d64b-0382-4e3c-9f20-7adf19cafc9e&#34; alt=&#34;poc&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After last patch Sysmon would check if Archive directory exists and if it exists it would check if archive directory is owned by NT AUTHORITY\SYSTEM and access is only granted to NT AUTHORITY\SYSTEM. If both conditions are true then Sysmon will write/delete files in that directory.&lt;/p&gt; &#xA;&lt;p&gt;As its not possible to change ownership of file/directories as a low privilege user I had to find directory that is owned by SYSTEM but gives low privilege user (or any group low privilege user is a member of) full access or at least WRITE_DAC|DELETE|FILE_WRITE_ATTRIBUTES.&lt;/p&gt; &#xA;&lt;p&gt;I could not find such directory on default installation but was able to create one by abusing Windows service tracing and RasMan service.&lt;/p&gt; &#xA;&lt;p&gt;This PoC will only work on Sysmon version 14.14 and windows clients before April patch due to changes introduced with patch for CVE-2023-28222 which killed trick i used to create directory that is owned by SYSTEM and grant full access to low privilege user. PoC can be modified to work on clients after April patch if you can abuse other windows services to create directory (or find directories created by third party app&#39;s :) )&lt;/p&gt; &#xA;&lt;h1&gt;References&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://itm4n.github.io/cve-2020-0668-windows-service-tracing-eop/&#34;&gt;https://itm4n.github.io/cve-2020-0668-windows-service-tracing-eop/&lt;/a&gt; (@itm4n)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dalathegreat/Nissan-LEAF-Battery-Upgrade</title>
    <updated>2023-06-21T01:30:57Z</updated>
    <id>tag:github.com,2023-06-21:/dalathegreat/Nissan-LEAF-Battery-Upgrade</id>
    <link href="https://github.com/dalathegreat/Nissan-LEAF-Battery-Upgrade" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Software and guides for upgrading LEAFs to bigger and newer batteries&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/dalathegreat/Nissan-LEAF-Battery-Upgrade/raw/main/Software/CANBRIDGE-2port/Banner.jpg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Nissan-LEAF-Battery-Upgrade&lt;/h1&gt; &#xA;&lt;p&gt;So you are looking to upgrade the battery in your LEAF? You&#39;ve come to the right place for information and software/hardware required. Take some time to familiarize with the content.&lt;/p&gt; &#xA;&lt;h2&gt;Read this first&lt;/h2&gt; &#xA;&lt;p&gt;Start by reading all the terminology and info about what a battery upgrade, direct upgrade, paring, CAN-bridges etc. is by following this link to the wiki: &lt;a href=&#34;https://github.com/dalathegreat/Nissan-LEAF-Battery-Upgrade/wiki&#34;&gt;https://github.com/dalathegreat/Nissan-LEAF-Battery-Upgrade/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting the hardware&lt;/h2&gt; &#xA;&lt;p&gt;The BatteryUpgrade software runs on both the Muxsan 3-port CAN-bridge, and on the 2-port Budget CAN-bridge. This guide focuses on the 2-port since it is the easiest to source at the moment. Here are some purchase links&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2-port &lt;a href=&#34;https://www.aliexpress.com/item/1005003112723581.html?&#34;&gt;AliExpress &#34;MB CAN Filter 18 in 1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;3-port &lt;a href=&#34;https://www.tindie.com/products/muxsan/can-mitm-bridge-3-port-rev-25/&#34;&gt;https://www.tindie.com/products/muxsan/can-mitm-bridge-3-port-rev-25/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note, for 2-port it has to be the BLUE PCB, the other varients are not supported.&lt;/p&gt; &#xA;&lt;h2&gt;Software needed to flash&lt;/h2&gt; &#xA;&lt;h3&gt;3-port&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Atmel Studio 7&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2-port&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;STM32 ST-LINK Utility &lt;a href=&#34;https://www.st.com/en/development-tools/stsw-link004.html&#34;&gt;https://www.st.com/en/development-tools/stsw-link004.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardware needed to flash&lt;/h2&gt; &#xA;&lt;h3&gt;3-port&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Atmel AVRisp mkII&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2-port&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ST Link V2 (can be purchased for around 10‚Ç¨ on ebay / amazon / local electronics store)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Flashing instructions&lt;/h2&gt; &#xA;&lt;h3&gt;3-port&lt;/h3&gt; &#xA;&lt;p&gt;See this video: &lt;a href=&#34;https://youtu.be/eLcNSo2Vn6U?t=167&#34;&gt;https://youtu.be/eLcNSo2Vn6U?t=167&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2-port&lt;/h3&gt; &#xA;&lt;p&gt;Flash with BridgeFlasher.exe located in software folder. The compiled .srec files are located in output folder. For ST LINK CLI, point the exe towards the &#34;ST-LINK_CLI.exe&#34; located in the &#34;STM32 ST-LINK Utility&#34; folder that appears after installing it.&lt;/p&gt; &#xA;&lt;p&gt;This is what the BridgeFlasher.exe should look like. Press Start to flash. &lt;img src=&#34;https://github.com/dalathegreat/Nissan-LEAF-Battery-Upgrade/raw/main/software/CANBRIDGE-2port/FlashingTool.jpg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Connect the ST Link V2 to the J1 ports on the PCB. It can be hard to connect dupont wires here, so I recommend getting needle pins.&lt;/p&gt; &#xA;&lt;p&gt;7 3.3V - J1&lt;/p&gt; &#xA;&lt;p&gt;Nothing - J2&lt;/p&gt; &#xA;&lt;p&gt;3 GND - J3&lt;/p&gt; &#xA;&lt;p&gt;2 SWDIO - J4&lt;/p&gt; &#xA;&lt;p&gt;6 SWCLK - J5&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dalathegreat/Nissan-LEAF-Battery-Upgrade/raw/main/Software/CANBRIDGE-2port/FlashingInstr.jpg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Wiring in the hardware&lt;/h2&gt; &#xA;&lt;p&gt;When installing the 2-port into the vehicle, here are the wiring instructions: ¬∑ Red wire #1 -&amp;gt; +12V constant (fuse with 3A) ¬∑ Red wire #2 -&amp;gt; +12V constant (fuse with 3A, join together with other red wire) ¬∑ Purple -&amp;gt; EV-CAN Low, Green wire (battery side) ¬∑ Green -&amp;gt; EV-CAN High, Blue wire (battery side) ¬∑ Yellow -&amp;gt; EV-CAN Low, Green wire (vehicle side) ¬∑ Blue -&amp;gt; EV-CAN High, Blue wire (vehicle side) ¬∑ Black -&amp;gt; Ground ¬∑ Black -&amp;gt; Ground&lt;/p&gt; &#xA;&lt;p&gt;Here is an example on a 2012 LEAF: &lt;img src=&#34;https://github.com/dalathegreat/Nissan-LEAF-Battery-Upgrade/raw/main/Software/CANBRIDGE-2port/Install2012.jpg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Software needed to make changes to code&lt;/h2&gt; &#xA;&lt;p&gt;Incase you want to make changes and actually recompile the code, you will need the following IDE&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keil uVision5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies üìñ&lt;/h2&gt; &#xA;&lt;p&gt;This code was made possible with the help of Muxsan and their excellent 3-port hardware. Also massive thanks to my Patreon Glen for introducing me to the 2-port alternative.&lt;/p&gt; &#xA;&lt;h2&gt;Like this project? üíñ&lt;/h2&gt; &#xA;&lt;p&gt;Leave a ‚≠ê If you think this project is useful. Consider hopping onto my Patreon to encourage more open-source projects!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.patreon.com/dala&#34;&gt; &lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button@2x.png&#34; width=&#34;160&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>darkk/redsocks</title>
    <updated>2023-06-21T01:30:57Z</updated>
    <id>tag:github.com,2023-06-21:/darkk/redsocks</id>
    <link href="https://github.com/darkk/redsocks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;transparent TCP-to-proxy redirector&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;redsocks ‚Äì transparent TCP-to-proxy redirector&lt;/h1&gt; &#xA;&lt;p&gt;This tool allows you to redirect any TCP connection to SOCKS or HTTPS proxy using your firewall, so redirection may be system-wide or network-wide.&lt;/p&gt; &#xA;&lt;p&gt;When is redsocks useful?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;you want to route part of TCP traffic via OpenSSH &lt;code&gt;DynamicForward&lt;/code&gt; Socks5 port using firewall policies. That was original redsocks development goal;&lt;/li&gt; &#xA; &lt;li&gt;you use DVB ISP and this ISP provides internet connectivity with some special daemon that may be also called &#34;Internet accelerator&#34; and the accelerator acts as a proxy and has no &#34;transparent proxy&#34; feature and you need it. &lt;a href=&#34;http://www.globax.biz&#34;&gt;Globax&lt;/a&gt; was an example of alike accelerator, but Globax 5 has transparent proxy feature. That was the second redsocks` development goal;&lt;/li&gt; &#xA; &lt;li&gt;you have to pass traffic through proxy due to corporate network limitation. That was never a goal for redsocks, but users have reported success with some proxy configurations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When is redsocks probably a wrong tool?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;redirecting traffic to &lt;a href=&#34;https://www.torproject.org&#34;&gt;tor&lt;/a&gt;. First, you &lt;strong&gt;have&lt;/strong&gt; to &lt;a href=&#34;https://www.torproject.org/download/download.html.en#warning&#34;&gt;use tor-aware software for anonymity&lt;/a&gt;. Second, &lt;a href=&#34;https://trac.torproject.org/projects/tor/wiki/doc/TransparentProxy&#34;&gt;use &lt;code&gt;TransPort&lt;/code&gt;&lt;/a&gt; if you don&#39;t actually need anonymity. Third, question everything :-)&lt;/li&gt; &#xA; &lt;li&gt;trying to redirect traffic of significant number of connections over single SSH connection. That&#39;s not exactly &lt;a href=&#34;http://sites.inka.de/bigred/devel/tcp-tcp.html&#34;&gt;TCP over TCP&lt;/a&gt;, but &lt;a href=&#34;https://en.wikipedia.org/wiki/Head-of-line_blocking&#34;&gt;head-of-line blocking&lt;/a&gt; will still happen and performance of real-time applications (IM, interactive Web applications) may be degraded during bulk transfers;&lt;/li&gt; &#xA; &lt;li&gt;trying to make non-transparent HTTP-proxy (not HTTPS-proxy) transparent using &lt;code&gt;http-relay&lt;/code&gt; module. First, it will likely be broken as the code is hack. Second, the code is vulnerable to &lt;code&gt;CVE-2009-0801&lt;/code&gt; and will unlikely be ever fixed;&lt;/li&gt; &#xA; &lt;li&gt;making &#34;really&#34; transparent proxy, redsocks acts at TCP level, so three-way handshake is completed and redsocks accepts connection before connection through proxy (and &lt;em&gt;to&lt;/em&gt; proxy) is established;&lt;/li&gt; &#xA; &lt;li&gt;trying to redirect traffic of significant number of connections in resource-constrained environment like SOHO Linux router. Throughput of single connection may be good enough like 40 Mbit/s on &lt;a href=&#34;https://wiki.openwrt.org/toh/tp-link/td-w8980&#34;&gt;TP-Link TD-W8980&lt;/a&gt;, but amount of concurrent connections may be limiting factor as TCP buffers are still consumed;&lt;/li&gt; &#xA; &lt;li&gt;redirecting traffic to proxy on mobile device running Android or iOS as it&#39;ll require &lt;a href=&#34;https://en.wikipedia.org/wiki/Rooting_(Android)&#34;&gt;rooting&lt;/a&gt; to update firewall rules. Probably, the better way is to use on-device VPN daemon to intercept traffic via &lt;a href=&#34;https://developer.android.com/reference/android/net/VpnService.html&#34;&gt;&lt;code&gt;VpnService&lt;/code&gt; API for Android&lt;/a&gt; and &lt;a href=&#34;https://developer.apple.com/documentation/networkextension&#34;&gt;&lt;code&gt;NETunnelProvider&lt;/code&gt; family of APIs for iOS&lt;/a&gt;. That may require some code doing &lt;a href=&#34;https://wiki.wireshark.org/TCP_Reassembly&#34;&gt;TCP Reassembly&lt;/a&gt; like &lt;a href=&#34;https://github.com/ambrop72/badvpn/wiki/Tun2socks&#34;&gt;&lt;code&gt;tun2socks&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Linux/iptables is supported. OpenBSD/pf and FreeBSD/ipfw may work with some hacks. The author has no permanent root access to machines running OpenBSD, FreeBSD and MacOSX to test and develop for these platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://transocks.sourceforge.net/&#34;&gt;Transocks&lt;/a&gt; is alike project but it has noticeable performance penality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://oss.tiggerswelt.net/transocks_ev/&#34;&gt;Transsocks_ev&lt;/a&gt; is alike project too, but it has no HTTPS-proxy support and does not support authentication.&lt;/p&gt; &#xA;&lt;p&gt;Several Android apps also use redsocks under-the-hood: &lt;a href=&#34;https://github.com/madeye/proxydroid&#34;&gt;ProxyDroid&lt;/a&gt; &lt;a href=&#34;https://market.android.com/details?id=org.proxydroid&#34;&gt;&lt;i class=&#34;fa fa-play&#34;&gt;&lt;/i&gt;&lt;/a&gt; and &lt;a href=&#34;https://code.google.com/archive/p/sshtunnel/&#34;&gt;sshtunnel&lt;/a&gt; &lt;a href=&#34;https://market.android.com/details?id=org.sshtunnel&#34;&gt;&lt;i class=&#34;fa fa-play&#34;&gt;&lt;/i&gt;&lt;/a&gt;. And that&#39;s over 1&#39;500&#39;000 downloads! Wow!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Redirect any TCP connection to Socks4, Socks5 or HTTPS (HTTP/CONNECT) proxy server.&lt;/p&gt; &#xA;&lt;p&gt;Login/password authentication is supported for Socks5/HTTPS connections. Socks4 supports only username, password is ignored. for HTTPS, currently only Basic and Digest scheme is supported.&lt;/p&gt; &#xA;&lt;p&gt;Redirect UDP packets via Socks5 proxy server. NB: UDP still goes via UDP, so you can&#39;t relay UDP via OpenSSH.&lt;/p&gt; &#xA;&lt;p&gt;Handle DNS/UDP queries sending &#34;truncated reply&#34; as an answer or making them DNS/TCP queries to some recursive resolver.&lt;/p&gt; &#xA;&lt;p&gt;Redirect any HTTP connection to proxy that does not support transparent proxying (e.g. old SQUID had broken `acl myport&#39; for such connections).&lt;/p&gt; &#xA;&lt;h3&gt;Enforcing DNS over TCP using &lt;code&gt;dnstc&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;DNS is running over UDP and it may be an issue in some environments as proxy servers usually don&#39;t handle UDP as a first-class citizen. Redsocks includes &lt;code&gt;dnstc&lt;/code&gt; that is fake and really dumb DNS server that returns &#34;truncated answer&#34; to every query via UDP. RFC-compliant resolver should repeat same query via TCP in this case - so the request can be redirected using usual redsocks facilities.&lt;/p&gt; &#xA;&lt;p&gt;Known compliant resolvers are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bind9 (server);&lt;/li&gt; &#xA; &lt;li&gt;dig, nslookup (tools based on bind9 code).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Known non-compliant resolvers are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;eglibc resolver fails without any attempt to send request via TCP;&lt;/li&gt; &#xA; &lt;li&gt;powerdns-recursor can&#39;t properly startup without UDP connectivity as it can&#39;t load root hints.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On the other hand, DNS via TCP using bind9 may be painfully slow. If your bind9 setup is really slow, you may want to try &lt;a href=&#34;http://www.phys.uu.nl/~rombouts/pdnsd.html&#34;&gt;pdnsd&lt;/a&gt; caching server that can run in TCP-only mode.&lt;/p&gt; &#xA;&lt;h3&gt;Relaying DNS/UDP to DNS/TCP via &lt;code&gt;dnsu2t&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The code acts as DNS server that multiplexes several UDP queries into single stream of TCP queries over keep-alive connection to upstream DNS server that should be recursive resolver. TCP connection may be handled by &lt;code&gt;redsocks&lt;/code&gt; itself if firewall is configured with corresponding rules.&lt;/p&gt; &#xA;&lt;p&gt;Different resolvers have different timeouts and allow different count of in-flight connections, so you have to tune options yourself for optimal performance (with some black magic, as script testing for optimal DNS/TCP connection parameters is not written yet).&lt;/p&gt; &#xA;&lt;p&gt;There are other programs doing alike job (with, probably, different bugs)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.mulliner.org/collin/ttdnsd.php&#34;&gt;ttdnsd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qiuzi/dns2socks&#34;&gt;dns2socks&lt;/a&gt; for Windows&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jtripper/dns-tcp-socks-proxy&#34;&gt;tcpdnsproxy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Source&lt;/h2&gt; &#xA;&lt;p&gt;Source is available at &lt;a href=&#34;https://github.com/darkk/redsocks&#34;&gt;&lt;i class=&#34;fa fa-github&#34;&gt;&lt;/i&gt; GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Issue tracker is also at GitHub, but keep in mind that the project is not actively maintained, so feature requests will unlikely be implemented within reasonable timeframe. Reproducable bugs having clean desciption will likely be fixed. Destiny of hard-to-reproduce bugs is hard to predict.&lt;/p&gt; &#xA;&lt;p&gt;New network protocols will unlikely be implemented within this source tree, but if you&#39;re seeking for censorship circumvention protocols, you may want to take a look at &lt;a href=&#34;https://github.com/semigodking/redsocks&#34;&gt;redsocks2&lt;/a&gt; by Zhuofei Wang AKA @semigodking who is actively maintaining the fork with GFW in mind.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All source code is licensed under Apache 2.0 license. You can get a copy at &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Archlinux: &lt;a href=&#34;https://aur.archlinux.org/packages/redsocks-git&#34;&gt;https://aur.archlinux.org/packages/redsocks-git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Debian: &lt;a href=&#34;http://packages.debian.org/search?searchon=names&amp;amp;keywords=redsocks&#34;&gt;http://packages.debian.org/search?searchon=names&amp;amp;keywords=redsocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gentoo (zugaina overlay): &lt;a href=&#34;http://gpo.zugaina.org/net-proxy/redsocks&#34;&gt;http://gpo.zugaina.org/net-proxy/redsocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gentoo: &lt;a href=&#34;https://packages.gentoo.org/packages/net-proxy/redsocks&#34;&gt;https://packages.gentoo.org/packages/net-proxy/redsocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu: &lt;a href=&#34;http://packages.ubuntu.com/search?searchon=names&amp;amp;keywords=redsocks&#34;&gt;http://packages.ubuntu.com/search?searchon=names&amp;amp;keywords=redsocks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://libevent.org/&#34;&gt;libevent-2.0.x&lt;/a&gt; is required.&lt;/p&gt; &#xA;&lt;p&gt;gcc and clang are supported right now, other compilers can be used but may require some code changes.&lt;/p&gt; &#xA;&lt;p&gt;Compilation is as easy as running &lt;code&gt;make&lt;/code&gt;, there is no &lt;code&gt;./configure&lt;/code&gt; magic.&lt;/p&gt; &#xA;&lt;p&gt;GNU Make works, other implementations of make were not tested.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Program has following command-line options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-c&lt;/code&gt; sets proper path to config file (&#34;./redsocks.conf&#34; is default one)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-t&lt;/code&gt; tests config file syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-p&lt;/code&gt; set a file to write the getpid() into&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Following signals are understood: SIGUSR1 dumps list of connected clients to log, SIGTERM and SIGINT terminates daemon, all active connections are closed.&lt;/p&gt; &#xA;&lt;p&gt;You can see configuration file example in &lt;a href=&#34;https://github.com/darkk/redsocks/raw/master/redsocks.conf.example&#34;&gt;redsocks.conf.example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;iptables example&lt;/h3&gt; &#xA;&lt;p&gt;You have to build iptables with connection tracking and REDIRECT target.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Create new chain&#xA;root# iptables -t nat -N REDSOCKS&#xA;&#xA;# Ignore LANs and some other reserved addresses.&#xA;# See http://en.wikipedia.org/wiki/Reserved_IP_addresses#Reserved_IPv4_addresses&#xA;# and http://tools.ietf.org/html/rfc5735 for full list of reserved networks.&#xA;root# iptables -t nat -A REDSOCKS -d 0.0.0.0/8 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 10.0.0.0/8 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 100.64.0.0/10 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 127.0.0.0/8 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 169.254.0.0/16 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 172.16.0.0/12 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 192.168.0.0/16 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 198.18.0.0/15 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 224.0.0.0/4 -j RETURN&#xA;root# iptables -t nat -A REDSOCKS -d 240.0.0.0/4 -j RETURN&#xA;&#xA;# Anything else should be redirected to port 12345&#xA;root# iptables -t nat -A REDSOCKS -p tcp -j REDIRECT --to-ports 12345&#xA;&#xA;# Any tcp connection made by `luser&#39; should be redirected.&#xA;root# iptables -t nat -A OUTPUT -p tcp -m owner --uid-owner luser -j REDSOCKS&#xA;&#xA;# You can also control that in more precise way using `gid-owner` from&#xA;# iptables.&#xA;root# groupadd socksified&#xA;root# usermod --append --groups socksified luser&#xA;root# iptables -t nat -A OUTPUT -p tcp -m owner --gid-owner socksified -j REDSOCKS&#xA;&#xA;# Now you can launch your specific application with GID `socksified` and it&#xA;# will be... socksified. See following commands (numbers may vary).&#xA;# Note: you may have to relogin to apply `usermod` changes.&#xA;luser$ id&#xA;uid=1000(luser) gid=1000(luser) groups=1000(luser),1001(socksified)&#xA;luser$ sg socksified -c id&#xA;uid=1000(luser) gid=1001(socksified) groups=1000(luser),1001(socksified)&#xA;luser$ sg socksified -c &#34;firefox&#34;&#xA;&#xA;# If you want to configure socksifying router, you should look at&#xA;# doc/iptables-packet-flow.png, doc/iptables-packet-flow-ng.png and&#xA;# https://en.wikipedia.org/wiki/File:Netfilter-packet-flow.svg&#xA;# Note, you should have proper `local_ip&#39; value to get external packets with&#xA;# redsocks, default 127.0.0.1 will not go. See iptables(8) manpage regarding&#xA;# REDIRECT target for details.&#xA;# Depending on your network configuration iptables conf. may be as easy as:&#xA;root# iptables -t nat -A PREROUTING --in-interface eth_int -p tcp -j REDSOCKS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Note about GID-based redirection&lt;/h3&gt; &#xA;&lt;p&gt;Keep in mind, that changed GID affects filesystem permissions, so if your application creates some files, the files will be created with luser:socksified owner/group. So, if you&#39;re not the only user in the group &lt;code&gt;socksified&lt;/code&gt; and your umask allows to create group-readable files and your directory permissions, and so on, blah-blah, etc. THEN you may expose your files to another user. Ok, you have been warned.&lt;/p&gt; &#xA;&lt;h2&gt;Homepage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://darkk.net.ru/redsocks/&#34;&gt;http://darkk.net.ru/redsocks/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mailing list: &lt;a href=&#34;mailto:redsocks@librelist.com&#34;&gt;redsocks@librelist.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mailing list also has &lt;a href=&#34;http://librelist.com/browser/redsocks/&#34;&gt;archives&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;This program was written by Leonid Evdokimov &lt;a href=&#34;mailto:leon@darkk.net.ru&#34;&gt;leon@darkk.net.ru&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>