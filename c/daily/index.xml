<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-18T01:31:10Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mcmilk/7-Zip-zstd</title>
    <updated>2023-01-18T01:31:10Z</updated>
    <id>tag:github.com,2023-01-18:/mcmilk/7-Zip-zstd</id>
    <link href="https://github.com/mcmilk/7-Zip-zstd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;7-Zip with support for Brotli, Fast-LZMA2, Lizard, LZ4, LZ5 and Zstandard&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;README&lt;/h1&gt; &#xA;&lt;p&gt;This is the Github Page of &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt; ZS with support of additional Codecs. The library used therefore is located here: &lt;a href=&#34;https://github.com/mcmilk/zstdmt&#34;&gt;Multithreading Library&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can install it in two ways:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;complete setup with additions within the GUI and a modified Explorer context menu&lt;/li&gt; &#xA; &lt;li&gt;only the codec plugin that goes to your existing &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt; installation (no GUI changes and no additional Hashers)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Status&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/mcmilk/7-zip-zstd&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/j9cwlxqe1g21c4dj?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mcmilk/7-Zip-zstd/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/mcmilk/7-Zip-zstd.svg?sanitize=true&#34; alt=&#34;Latest stable release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/TinoReichardt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PayPal-me-blue.svg?maxAge=2592000&#34; alt=&#34;PayPal.me&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Codec overview&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/zstd/&#34;&gt;Zstandard&lt;/a&gt; v1.5.2 is a real-time compression algorithm, providing high compression ratios. It offers a very wide range of compression / speed trade-off, while being backed by a very fast decoder.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Levels: 1..22&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/brotli/&#34;&gt;Brotli&lt;/a&gt; v.1.0.9 is a generic-purpose lossless compression algorithm that compresses data using a combination of a modern variant of the LZ77 algorithm, Huffman coding and 2nd order context modeling, with a compression ratio comparable to the best currently available general-purpose compression methods. It is similar in speed with deflate but offers more dense compression.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Levels: 0..11&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lz4/lz4/&#34;&gt;LZ4&lt;/a&gt; v1.9.4 is lossless compression algorithm, providing compression speed at 400 MB/s per core (0.16 Bytes/cycle). It features an extremely fast decoder, with speed in multiple GB/s per core (0.71 Bytes/cycle). A high compression derivative, called LZ4_HC, is available, trading customizable CPU time for compression ratio.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Levels: 1..12&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/inikep/lz5/&#34;&gt;LZ5&lt;/a&gt; v1.5 is a modification of LZ4 which was meant for a better ratio at cost of slower compression and decompression. It&#39;s superseded by &lt;a href=&#34;https://github.com/inikep/lizard/&#34;&gt;Lizard&lt;/a&gt; now.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Levels: 1..15&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/inikep/lizard/&#34;&gt;Lizard&lt;/a&gt; v1.0 is an efficient compressor with fast decompression. It achieves compression ratio that is comparable to zip/zlib and zstd/brotli (at low and medium compression levels) at decompression speed of 1000 MB/s and faster.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Levels 10..19 (fastLZ4) are designed to give about 10% better decompression speed than LZ4&lt;/li&gt; &#xA;   &lt;li&gt;Levels 20..29 (LIZv1) are designed to give better ratio than LZ4 keeping 75% decompression speed&lt;/li&gt; &#xA;   &lt;li&gt;Levels 30..39 (fastLZ4 + Huffman) adds Huffman coding to fastLZ4&lt;/li&gt; &#xA;   &lt;li&gt;Levels 40..49 (LIZv1 + Huffman) give the best ratio, comparable to zlib and low levels of zstd/brotli, but with a faster decompression speed&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/conor42/fast-lzma2&#34;&gt;Fast LZMA2&lt;/a&gt; v1.0.1 is a LZMA2 compression algorithm, 20% to 100% faster than normal LZMA2 at levels 5 and above, but with a slightly lower compression ratio. It uses a parallel buffered radix matchfinder and some optimizations from Zstandard. The codec uses much less additional memory per thread than standard LZMA2.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Levels: 1..9&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;7-Zip Zstandard Edition (full setup, with GUI and Explorer integration)&lt;/h2&gt; &#xA;&lt;h3&gt;Installation (via setup)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;download the setup from here &lt;a href=&#34;https://github.com/mcmilk/7-Zip-zstd/releases&#34;&gt;7-Zip ZS Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;install it, like the default &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;use it ;)&lt;/li&gt; &#xA; &lt;li&gt;you may check, if the &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt; can deal with &lt;a href=&#34;https://github.com/facebook/zstd/&#34;&gt;Zstandard&lt;/a&gt; or other codecs via this command: &lt;code&gt;7z.exe i&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The output should look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;7-Zip 22.01 ZS v1.5.2 R1 (x64) : Copyright (c) 1999-2022 Igor Pavlov, 2016-2022 Tino Reichardt : 2022-08-07&#xA;&#xA;Libs:&#xA; 0  c:\Program Files\7-Zip-Zstandard\7z.dll&#xA; 1  C:\Program Files\7-Zip-Zstandard\Codecs\Iso7z.64.dll&#xA; &#xA;Formats:&#xA;...&#xA; 0 CK            xz       xz txz (.tar) FD 7 z X Z 00&#xA; 0               Z        z taz (.tar)  1F 9D&#xA; 0 CK            zstd     zst tzstd (.tar) 0 x F D 2 F B 5 2 5 . . 0 x F D 2 F B 5 2 8 00&#xA; 0 C   F         7z       7z            7 z BC AF &#39; 1C&#xA; 0     F         Cab      cab           M S C F 00 00 00 00&#xA;...&#xA;&#xA;Codecs:&#xA; 0 4ED  303011B BCJ2&#xA; 0  ED  3030103 BCJ&#xA; 0  ED  3030205 PPC&#xA; 0  ED  3030401 IA64&#xA; 0  ED  3030501 ARM&#xA; 0  ED  3030701 ARMT&#xA; 0  ED  3030805 SPARC&#xA; 0  ED    20302 Swap2&#xA; 0  ED    20304 Swap4&#xA; 0  ED    40202 BZip2&#xA; 0  ED        0 Copy&#xA; 0  ED    40109 Deflate64&#xA; 0  ED    40108 Deflate&#xA; 0  ED        3 Delta&#xA; 0  ED       21 LZMA2&#xA; 0  ED    30101 LZMA&#xA; 0  ED    30401 PPMD&#xA; 0   D    40301 Rar1&#xA; 0   D    40302 Rar2&#xA; 0   D    40303 Rar3&#xA; 0   D    40305 Rar5&#xA; 0  ED  4F71102 BROTLI&#xA; 0  ED  4F71104 LZ4&#xA; 0  ED  4F71106 LIZARD&#xA; 0  ED  4F71105 LZ5&#xA; 0  ED  4F71101 ZSTD&#xA; 0  ED       21 FLZMA2&#xA; 0  ED  6F10701 7zAES&#xA; 0  ED  6F00181 AES256CBC&#xA; 1 3ED  4F712FF RawSplitter&#xA;&#xA;Hashers:&#xA; 0   32      20A BLAKE3&#xA; 0    4        1 CRC32&#xA; 0   16      205 MD2&#xA; 0   16      206 MD4&#xA; 0   16      207 MD5&#xA; 0   20      201 SHA1&#xA; 0   32        A SHA256&#xA; 0   48      208 SHA384&#xA; 0   64      209 SHA512&#xA; 0    4      203 XXH32&#xA; 0    8      204 XXH64&#xA; 0    8        4 CRC64&#xA; 0   32      202 BLAKE2sp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage and features of the full installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;compression and decompression for &lt;a href=&#34;https://github.com/google/brotli/&#34;&gt;Brotli&lt;/a&gt;, &lt;a href=&#34;https://github.com/inikep/lizard/&#34;&gt;Lizard&lt;/a&gt;, &lt;a href=&#34;https://github.com/lz4/lz4/&#34;&gt;LZ4&lt;/a&gt;, &lt;a href=&#34;https://github.com/inikep/lz5/&#34;&gt;LZ5&lt;/a&gt; and &lt;a href=&#34;https://github.com/facebook/zstd/&#34;&gt;Zstandard&lt;/a&gt; within the &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt; container format&lt;/li&gt; &#xA; &lt;li&gt;compression and decompression of &lt;a href=&#34;https://github.com/inikep/lizard/&#34;&gt;Lizard&lt;/a&gt; (&lt;code&gt;.liz&lt;/code&gt;), &lt;a href=&#34;https://github.com/lz4/lz4/&#34;&gt;LZ4&lt;/a&gt; (&lt;code&gt;.lz4&lt;/code&gt;), &lt;a href=&#34;https://github.com/inikep/lz5/&#34;&gt;LZ5&lt;/a&gt; (&lt;code&gt;.lz5&lt;/code&gt;) and &lt;a href=&#34;https://github.com/facebook/zstd/&#34;&gt;Zstandard&lt;/a&gt; (&lt;code&gt;.zst&lt;/code&gt;) files&lt;/li&gt; &#xA; &lt;li&gt;handling of ZIP files with &lt;a href=&#34;https://github.com/facebook/zstd/&#34;&gt;Zstandard&lt;/a&gt; compression&lt;/li&gt; &#xA; &lt;li&gt;included &lt;a href=&#34;https://www.nongnu.org/lzip/&#34;&gt;lzip&lt;/a&gt; decompression support, patch from: &lt;a href=&#34;https://download.savannah.gnu.org/releases/lzip/7zip/&#34;&gt;https://download.savannah.gnu.org/releases/lzip/7zip/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;explorer context menu: &lt;em&gt;&#34;Add to xy.7z&#34;&lt;/em&gt; will use all parameters of the last &#34;Add to Archive&#34; compression dialog (this includes: method, level, dictionary, blocksize, threads and paramters input box)&lt;/li&gt; &#xA; &lt;li&gt;squashfs files with LZ4 or Zstandard compression can be handled&lt;/li&gt; &#xA; &lt;li&gt;several history settings aren&#39;t stored by default, look &lt;a href=&#34;https://sourceforge.net/p/sevenzip/discussion/45797/thread/dc2ac53d/?limit=25&#34;&gt;here&lt;/a&gt; for some info about that, you can restore original 7-Zip behavior via &lt;code&gt;tools-&amp;gt;options-&amp;gt;settings&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;these hashes can be calculated: CRC32, CRC64, MD2, MD4, MD5, SHA1, SHA256, SHA384, SHA512, XXH32, XXH64, BLAKE2sp, BLAKE3 (lowercase or uppercase)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;7z a archiv.7z -m0=zstd -mx0   Zstandard Fastest Mode, without BCJ preprocessor&#xA;7z a archiv.7z -m0=zstd -mx1   Zstandard Fast mode, with BCJ preprocessor on executables&#xA;7z a archiv.7z -m0=zstd -mx..  ...&#xA;7z a archiv.7z -m0=zstd -mx21  Zstandard 2nd Slowest Mode, with BCJ preprocessor on executables&#xA;7z a archiv.7z -m0=zstd -mx22  Zstandard Ultra Mode, with BCJ preprocessor on executables&#xA;&#xA;7z a archiv.7z -m0=lz4 -mx0   LZ4 Fastest Mode, without BCJ preprocessor&#xA;7z a archiv.7z -m0=lz4 -mx1   LZ4 Fast mode, with BCJ preprocessor on executables&#xA;7z a archiv.7z -m0=lz4 -mx..  ...&#xA;7z a archiv.7z -m0=lz4 -mx12  LZ4 Ultra Mode, with BCJ preprocessor on executables&#xA;&#xA;7z a archiv.7z -m0=lz5 -mx0   LZ5 Version 1.5 Fastest Mode, without BCJ preprocessor&#xA;7z a archiv.7z -m0=lz5 -mx1   LZ5 Version 1.5 Fast mode, with BCJ preprocessor on executables&#xA;7z a archiv.7z -m0=lz5 -mx..  ...&#xA;7z a archiv.7z -m0=lz5 -mx16  LZ5 Version 1.5 Ultra Mode, with BCJ preprocessor on executables&#xA;&#xA;7z a archiv.7z -m0=flzma2 -mx1   Fast LZMA2 Fastest mode, with BCJ preprocessor on executables&#xA;7z a archiv.7z -m0=flzma2 -mx..  ...&#xA;7z a archiv.7z -m0=flzma2 -mx9   Fast LZMA2 Ultra Mode, with BCJ preprocessor on executables&#xA;&#xA;7z x -so test.tar.zstd | 7z l -si -ttar&#xA;-&amp;gt; show contents of zstd compressed tar archiv test.tar.zstd&#xA;&#xA;7z x -so test.tar.lz | 7z l -si -ttar&#xA;-&amp;gt; show contents of lzip compressed tar archiv test.tar.lz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/Add-To-Archive.png&#34; alt=&#34;Explorer inegration&#34; title=&#34;Add to Archiv Dialog with ZSTD options&#34;&gt; &lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/Fileman.png&#34; alt=&#34;File Manager&#34; title=&#34;File Manager with the Listing of an Archiv&#34;&gt; &lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/Methods2.png&#34; alt=&#34;Methods&#34; title=&#34;Methods&#34;&gt; &lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/Hashes.png&#34; alt=&#34;Hashes&#34; title=&#34;Hashes&#34;&gt; &lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/Settings.png&#34; alt=&#34;Settings&#34; title=&#34;Settings for storing the history within the registry.&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Zstandard codec Plugin for Mainline 7-Zip&lt;/h2&gt; &#xA;&lt;h3&gt;Installation (via plugin)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;download the &lt;code&gt;Codecs.7z&lt;/code&gt; archiv from here &lt;a href=&#34;https://github.com/mcmilk/7-Zip-zstd/releases&#34;&gt;7-Zip ZS Releases&lt;/a&gt;, this archive holds binaries, which are compatible with the Mainline version of &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;create a new directory named &lt;code&gt;Codecs&lt;/code&gt; and put in there the zstd-x32.dll or the zstd-x64.dll, depending on your &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt; installation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;normally, the x32 should go to: &#34;C:\Program Files (x86)\7-Zip\Codecs&#34;&lt;/li&gt; &#xA;   &lt;li&gt;the x64 version should go in here: &#34;C:\Program Files\7-Zip\Codecs&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;you could also replace the &lt;code&gt;7z.dll&lt;/code&gt; directly within &lt;code&gt;C:\Program Files (x86)\7-Zip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;then you may check if the dll is correctly installed via this command: &lt;code&gt;7z.exe i&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The output should look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;7-Zip 21.03 (x64) : Copyright (c) 1999-2021 Igor Pavlov : 2021-05-06&#xA;&#xA;Libs:&#xA; 0  C:\Program Files\7-Zip\7z.dll&#xA;&#xA;Libs:&#xA; 0  c:\Program Files\7-Zip\7z.dll&#xA; 1  c:\Program Files\7-Zip\Codecs\brotli-x64.dll&#xA; 2  c:\Program Files\7-Zip\Codecs\flzma2-x64.dll&#xA; 3  c:\Program Files\7-Zip\Codecs\lizard-x64.dll&#xA; 4  c:\Program Files\7-Zip\Codecs\lz4-x64.dll&#xA; 5  c:\Program Files\7-Zip\Codecs\lz5-x64.dll&#xA; 6  c:\Program Files\7-Zip\Codecs\zstd-x64.dll&#xA;&#xA;...&#xA;&#xA;Codecs:&#xA; 0 4ED  303011B BCJ2&#xA; 0  ED  3030103 BCJ&#xA; 0  ED  3030205 PPC&#xA; 0  ED  3030401 IA64&#xA; 0  ED  3030501 ARM&#xA; 0  ED  3030701 ARMT&#xA; 0  ED  3030805 SPARC&#xA; 0  ED    20302 Swap2&#xA; 0  ED    20304 Swap4&#xA; 0  ED    40202 BZip2&#xA; 0  ED        0 Copy&#xA; 0  ED    40109 Deflate64&#xA; 0  ED    40108 Deflate&#xA; 0  ED        3 Delta&#xA; 0  ED       21 LZMA2&#xA; 0  ED    30101 LZMA&#xA; 0  ED    30401 PPMD&#xA; 0   D    40301 Rar1&#xA; 0   D    40302 Rar2&#xA; 0   D    40303 Rar3&#xA; 0   D    40305 Rar5&#xA; 0  ED  6F10701 7zAES&#xA; 0  ED  6F00181 AES256CBC&#xA; 1  ED  4F71102 BROTLI&#xA; 2  ED       21 FLZMA2&#xA; 3  ED  4F71106 LIZARD&#xA; 4  ED  4F71104 LZ4&#xA; 5  ED  4F71105 LZ5&#xA; 6  ED  4F71101 ZSTD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage (codec plugin)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;compression and decompression for &lt;a href=&#34;https://github.com/google/brotli/&#34;&gt;Brotli&lt;/a&gt;, &lt;a href=&#34;https://github.com/conor42/fast-lzma2&#34;&gt;Fast LZMA2&lt;/a&gt;, &lt;a href=&#34;https://github.com/inikep/lizard/&#34;&gt;Lizard&lt;/a&gt;, &lt;a href=&#34;https://github.com/lz4/lz4/&#34;&gt;LZ4&lt;/a&gt;, &lt;a href=&#34;https://github.com/inikep/lz5/&#34;&gt;LZ5&lt;/a&gt; and &lt;a href=&#34;https://github.com/facebook/zstd/&#34;&gt;Zstandard&lt;/a&gt; within the 7-Zip container format&lt;/li&gt; &#xA; &lt;li&gt;you can only create &lt;code&gt;.7z&lt;/code&gt; files, the files like &lt;code&gt;.lz4&lt;/code&gt;, &lt;code&gt;.lz5&lt;/code&gt; and &lt;code&gt;.zst&lt;/code&gt; are not covered by the plugins&lt;/li&gt; &#xA; &lt;li&gt;when compressing binaries (*.exe, *.dll), you have to explicitly disable the bcj2 filter via &lt;code&gt;-m0=bcj&lt;/code&gt;, when using only the plugin dll&#39;s&lt;/li&gt; &#xA; &lt;li&gt;so the usage should look like this:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;7z a archiv.7z -m0=bcj -m1=zstd -mx1   Fast mode, with BCJ preprocessor on executables&#xA;7z a archiv.7z -m0=bcj -m1=zstd -mx..  ...&#xA;7z a archiv.7z -m0=bcj -m1=zstd -mx21  2nd Slowest Mode, with BCJ preprocessor on executables&#xA;7z a archiv.7z -m0=bcj -m1=zstd -mx22  Ultra Mode, with BCJ preprocessor on executables&#xA;7z a archiv.7z -m0=bcj -m1=brotli -mxN  ...&#xA;7z a archiv.7z -m0=bcj -m1=lizard -mxN  ...&#xA;7z a archiv.7z -m0=bcj -m1=lz4 -mxN  ...&#xA;7z a archiv.7z -m0=bcj -m1=lz5 -mxN  ...&#xA;7z a archiv.7z -m0=bcj -m1=flzma2 -mxN  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Codec Plugin for Total Commander&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;download &lt;a href=&#34;https://github.com/mcmilk/7-Zip-zstd/releases&#34;&gt;TotalCmd.7z&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;install it, by replacing the files &lt;code&gt;tc7z.dll&lt;/code&gt; and &lt;code&gt;tc7z64.dll&lt;/code&gt; with the new ones&lt;/li&gt; &#xA; &lt;li&gt;you can check the Total Commander Forum for more information about this &lt;a href=&#34;https://ghisler.ch/board/viewtopic.php?p=319216&#34;&gt;DLL Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;decompression for &lt;a href=&#34;https://github.com/google/brotli/&#34;&gt;Brotli&lt;/a&gt;, &lt;a href=&#34;https://github.com/inikep/lizard/&#34;&gt;Lizard&lt;/a&gt;, &lt;a href=&#34;https://github.com/lz4/lz4/&#34;&gt;LZ4&lt;/a&gt;, &lt;a href=&#34;https://github.com/inikep/lz5/&#34;&gt;LZ5&lt;/a&gt; and &lt;a href=&#34;https://github.com/facebook/zstd/&#34;&gt;Zstandard&lt;/a&gt; ot the 7-Zip &lt;code&gt;.7z&lt;/code&gt; format will work out of the box with Total Commander now :-)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Codec Plugin for Far Manager&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;copy the &lt;code&gt;7z.dll&lt;/code&gt; file from &lt;code&gt;C:\Program Files\7-Zip-Zstandard\7z.dll&lt;/code&gt; to &lt;code&gt;C:\Program Files\Far Manager\Plugins\ArcLite\7z.dll&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;then restart the Far manager - and on next start, you will have support for 7-Zip Zstandard archives ;-)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;For the benchmarks I am using Windows 7 64bit on my Laptop which has the following Hardware:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel i7-3632QM, limited to 2,2GHz, 16GB RAM, disabled swap space&lt;/li&gt; &#xA; &lt;li&gt;the compression benchmark is read / written to an 4 GiB &lt;a href=&#34;https://sourceforge.net/projects/imdisk-toolkit/&#34;&gt;ImDisk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the decompression benchmark is also done in RAM via: &lt;code&gt;7z t archiv.7z&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;the tool for measuring the times is &lt;a href=&#34;https://github.com/mcmilk/wtime&#34;&gt;wtime&lt;/a&gt;, together with some &lt;a href=&#34;https://github.com/mcmilk/7-Zip-Benchmarking&#34;&gt;scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the testfile is generated via &lt;a href=&#34;https://github.com/mcmilk/7-Zip-Benchmarking/raw/master/generate-mcorpus&#34;&gt;generate-mcorpus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;please note, that the benchmarks are outdated now (new one will come, but it needs some time)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/dl/compr-v120.png&#34; alt=&#34;Compression Speed vs Ratio&#34; title=&#34;Compression Speed vs Ratio&#34;&gt; &lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/dl/decomp-v120.png&#34; alt=&#34;Decompression Speed&#34; title=&#34;Decompression Speed per Level&#34;&gt; &lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/dl/MemCompr.png&#34; alt=&#34;Memory at Compression&#34; title=&#34;Memory usage at Compression&#34;&gt; &lt;img src=&#34;https://mcmilk.de/projects/7-Zip-zstd/dl/MemDecomp.png&#34; alt=&#34;Memory at Decompression&#34; title=&#34;Memory usage at Decompression&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Themes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FileManager Toolbar Icon Theme: Glyfz 2016 by AlexGal &lt;a href=&#34;https://www.deviantart.com/alexgal23&#34;&gt;homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;File Types Icon Theme: Windows 10 by masamunecyrus &lt;a href=&#34;https://www.deviantart.com/masamunecyrus&#34;&gt;homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Additional icons file types created by Mr4Mike4 &lt;a href=&#34;https://github.com/Mr4Mike4&#34;&gt;homepage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License and Redistribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The same as the Mainline &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt;, which means most of the code is GNU LGPL v2.1-or-later&lt;/li&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/mcmilk/7-Zip-zstd/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more details&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mcmilk.de/projects/7-Zip-zstd/&#34;&gt;7-Zip Zstandard Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sourceforge.net/p/sevenzip/discussion/45797/thread/a7e4f3f3/&#34;&gt;Request for inclusion&lt;/a&gt; into the mainline 7-Zip: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;result, will currently not included :(&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jinfeihan57/p7zip&#34;&gt;p7zip Homepage&lt;/a&gt; - for Linux and MacOS with LZ4 and Zstandard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;You find this project useful, maybe you consider a donation ;-)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.me/TinoReichardt&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Version Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;7-Zip ZS Version 22.01 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/google/brotli/&#34;&gt;Brotli&lt;/a&gt; Version 1.0.9&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/conor42/fast-lzma2&#34;&gt;Fast LZMA2&lt;/a&gt; Version 1.0.1&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/inikep/lizard/&#34;&gt;Lizard&lt;/a&gt; Version 1.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lz4/lz4/&#34;&gt;LZ4&lt;/a&gt; Version 1.9.4&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/inikep/lz5/&#34;&gt;LZ5&lt;/a&gt; Version 1.5&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/zstd/&#34;&gt;Zstandard&lt;/a&gt; Version 1.5.2&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/BLAKE3-team/BLAKE3&#34;&gt;BLAKE3&lt;/a&gt; Version 0.3.7&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;/TR 2023-01-15&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if you want an code signed installer, you need to donate sth.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Wilfred/difftastic</title>
    <updated>2023-01-18T01:31:10Z</updated>
    <id>tag:github.com,2023-01-18:/Wilfred/difftastic</id>
    <link href="https://github.com/Wilfred/difftastic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a structural diff that understands syntax 🟥🟩&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/difftastic/master/#readme&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/difftastic/master/img/logo.png&#34; alt=&#34;it&#39;s difftastic!&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;http://difftastic.wilfred.me.uk/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/manual-en-brightgreen?style=flat-square&#34; alt=&#34;English manual&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://difftastic.wilfred.me.uk/zh-CN/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/manual-zh--CN-brightgreen?style=flat-square&#34; alt=&#34;Chinese manual&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/difftastic&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/difftastic.svg?style=flat-square&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Wilfred/difftastic&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/Wilfred/difftastic?style=flat-square&amp;amp;token=dZzAZtQT2S&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Difftastic is a structural diff tool that compares files based on their syntax.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For installation instructions, see &lt;a href=&#34;https://difftastic.wilfred.me.uk/installation.html&#34;&gt;Installation&lt;/a&gt; in &lt;a href=&#34;http://difftastic.wilfred.me.uk/&#34;&gt;the manual&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Wilfred/difftastic/master/img/js.png&#34; alt=&#34;Screenshot of difftastic and JS&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this JavaScript example, we can see:&lt;/p&gt; &#xA;&lt;p&gt;(1) Difftastic understands nesting. It highlights the matching &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;, but understands that &lt;code&gt;foo()&lt;/code&gt; hasn&#39;t changed despite the leading whitespace.&lt;/p&gt; &#xA;&lt;p&gt;(2) Difftastic understands which lines should be aligned. It&#39;s aligned &lt;code&gt;bar()&lt;/code&gt; on the left with &lt;code&gt;bar(1)&lt;/code&gt; on the right, despite their changes.&lt;/p&gt; &#xA;&lt;p&gt;(3) Difftastic understands that line-wrapping isn&#39;t meaningful. &lt;code&gt;&#34;eric&#34;&lt;/code&gt; is now on a new line, but it hasn&#39;t changed.&lt;/p&gt; &#xA;&lt;h2&gt;One Minute Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/480875&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/480875.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This one minute screencast demonstrates difftastic usage with both standalone files and git.&lt;/p&gt; &#xA;&lt;h2&gt;Languages&lt;/h2&gt; &#xA;&lt;p&gt;Difftastic supports over 30 programming languages, see &lt;a href=&#34;https://difftastic.wilfred.me.uk/&#34;&gt;the manual&lt;/a&gt; for the full list.&lt;/p&gt; &#xA;&lt;p&gt;If a file has an unrecognised extension, difftastic uses a textual diff with word highlighting.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;Performance. Difftastic scales relatively poorly on files with a large number of changes, and can use a lot of memory.&lt;/p&gt; &#xA;&lt;p&gt;Display. Difftastic has a side-by-side display which usually works well, but can be confusing.&lt;/p&gt; &#xA;&lt;p&gt;Robustness. Difftastic regularly has releases that fix crashes.&lt;/p&gt; &#xA;&lt;h2&gt;Non-goals&lt;/h2&gt; &#xA;&lt;p&gt;Patching. Difftastic output is intended for human consumption, and it does not generate patches that you can apply later. Use &lt;code&gt;diff&lt;/code&gt; if you need a patch.&lt;/p&gt; &#xA;&lt;p&gt;(Patch files are also line-oriented, which is too limited for difftastic. Difftastic might find additions and removals on the same line, and it tracks the relationship between line numbers in the old and new file.)&lt;/p&gt; &#xA;&lt;p&gt;Merging. AST merging is a hard problem that difftastic does not address.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Isn&#39;t this basically &lt;code&gt;--word-diff --ignore-all-space&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;Word diffing &lt;a href=&#34;https://twitter.com/_wilfredh/status/1510139929971421191/photo/1&#34;&gt;can&#39;t do this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Difftastic parses your code. It understands when whitespace matters, such as inside string literals or languages like Python. It understands that &lt;code&gt;x-1&lt;/code&gt; is three tokens in JS but one token in Lisp.&lt;/p&gt; &#xA;&lt;h3&gt;Can I use difftastic with git?&lt;/h3&gt; &#xA;&lt;p&gt;You can! The difftastic manual &lt;a href=&#34;https://difftastic.wilfred.me.uk/git.html&#34;&gt;includes instructions for git usage&lt;/a&gt;. You can also use it &lt;a href=&#34;https://difftastic.wilfred.me.uk/mercurial.html&#34;&gt;with mercurial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a magit user, check out &lt;a href=&#34;https://tsdh.org/posts/2022-08-01-difftastic-diffing-with-magit.html&#34;&gt;this blog post&lt;/a&gt; showing one way to use difftastic with magit.&lt;/p&gt; &#xA;&lt;h3&gt;Does difftastic integrate with my favourite tool?&lt;/h3&gt; &#xA;&lt;p&gt;Probably not. Difftastic is young. Consider writing a plugin for your favourite tool, and I will link it in the README!&lt;/p&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wilfred/difftastic/master/translation/zh-CN/README-zh-CN.md&#34;&gt;Chinese&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Difftastic is open source under the MIT license, see LICENSE for more details.&lt;/p&gt; &#xA;&lt;p&gt;This repository also includes tree-sitter parsers by other authors in the &lt;code&gt;vendored_parsers/&lt;/code&gt; directory. These are a mix of the MIT license and the Apache license. See &lt;code&gt;vendored_parsers/*/LICENSE&lt;/code&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Files in &lt;code&gt;sample_files/&lt;/code&gt; are also under the MIT license unless stated otherwise in their header.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jgamblin/Mirai-Source-Code</title>
    <updated>2023-01-18T01:31:10Z</updated>
    <id>tag:github.com,2023-01-18:/jgamblin/Mirai-Source-Code</id>
    <link href="https://github.com/jgamblin/Mirai-Source-Code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Leaked Mirai Source Code for Research/IoC Development Purposes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mirai BotNet&lt;/h1&gt; &#xA;&lt;p&gt;Leaked Linux.Mirai Source Code for Research/IoT Development Purposes&lt;/p&gt; &#xA;&lt;p&gt;Uploaded for research purposes and so we can develop IoT and such.&lt;/p&gt; &#xA;&lt;p&gt;See &#34;ForumPost.txt&#34; or &lt;a href=&#34;https://raw.githubusercontent.com/jgamblin/Mirai-Source-Code/master/ForumPost.md&#34;&gt;ForumPost.md&lt;/a&gt; for the post in which it leaks, if you want to know how it is all set up and the likes.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gcc&lt;/li&gt; &#xA; &lt;li&gt;golang&lt;/li&gt; &#xA; &lt;li&gt;electric-fence&lt;/li&gt; &#xA; &lt;li&gt;mysql-server&lt;/li&gt; &#xA; &lt;li&gt;mysql-client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hackforums.net/showthread.php?tid=5420472&#34;&gt;Anna-senpai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This repository is for academic purposes, the use of this software is your responsibility.&lt;/p&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.virustotal.com/en/file/f10667215040e87dae62dd48a5405b3b1b0fe7dbbfbf790d5300f3cd54893333/analysis/1477822491/&#34;&gt;zip file&lt;/a&gt; for this repo is being identified by some AV programs as malware. Please take caution.&lt;/p&gt;</summary>
  </entry>
</feed>