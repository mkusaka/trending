<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-22T01:28:21Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>M2Team/NanaZip</title>
    <updated>2023-10-22T01:28:21Z</updated>
    <id>tag:github.com,2023-10-22:/M2Team/NanaZip</id>
    <link href="https://github.com/M2Team/NanaZip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The 7-Zip derivative intended for the modern Windows experience&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/Assets/NanaZip.png&#34; alt=&#34;NanaZip&#34;&gt; NanaZip&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/M2Team/NanaZip/actions/workflows/BuildBinaries.yml?query=event%3Apush+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/M2Team/NanaZip/actions/workflows/BuildBinaries.yml/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;GitHub Actions Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/M2Team/NanaZip/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/M2Team/NanaZip/total&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.microsoft.com/store/productId/9N8G7TSCL18R&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmicrosoft-store-badge.fly.dev%2Fapi%2Frating%3FstoreId%3D9N8G7TSCL18R%26market%3DUS&amp;amp;style=flat&amp;amp;color=brightgreen&#34; alt=&#34;Rating&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/store/apps/9N8G7TSCL18R&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Windows%20Store-Release%20Channel-blue&#34; alt=&#34;Windows Store - Release Channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.microsoft.com/store/apps/9NZL0LRP1BNL&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Windows%20Store-Preview%20Channel-blue&#34; alt=&#34;Windows Store - Preview Channel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/M2Team/NanaZip/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/M2Team/NanaZip?display_name=release&amp;amp;sort=date&amp;amp;color=%23a4a61d&#34; alt=&#34;Latest Version - Release Channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/M2Team/NanaZip/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/M2Team/NanaZip?include_prereleases&amp;amp;display_name=release&amp;amp;sort=date&amp;amp;color=%23a4a61d&#34; alt=&#34;Latest Version - Preview Channel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/M2Team/NanaZip/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/M2Team/NanaZip/latest/total&#34; alt=&#34;Latest Release Downloads - Release Channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/M2Team/NanaZip/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads-pre/M2Team/NanaZip/latest/total&#34; alt=&#34;Latest Release Downloads - Preview Channel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sourceforge.net/projects/nanazip/files/latest/download&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SourceForge-Download-orange&#34; alt=&#34;Download NanaZip from SourceForge mirror&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/Documents/ContextMenu.png&#34; alt=&#34;ContextMenu&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/Documents/MainWindow.png&#34; alt=&#34;MainWindow&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;NanaZip is an open source file archiver intended for the modern Windows experience, forked from the source code of well-known open source file archiver 7-Zip.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;All kinds of contributions will be appreciated. All suggestions, pull requests and issues are welcome.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Maybe everyone needs to know I am not a full-time or paid developer for NanaZip. I have my work to do. I need to work for Tencent-related company during the day. I develop individual open-source projects at night.&lt;/p&gt; &#xA;&lt;p&gt;I also need to port the project (I am a leader of a live-streaming project for Windows) which I maintained for the company to Linux in recent days. So, I am really busy. I sleep in midnight every day because I need to do both company project and individual projects. I hope I can have more sponsors and contributors for encouraging me not to give up. (I am afraid I would give up without the @AndromedaMelody&#39;s huge contributions for Mile.Xaml and NanaZip.)&lt;/p&gt; &#xA;&lt;p&gt;If you want to sponsor me, please read &lt;a href=&#34;https://github.com/MouriNaruto/MouriNaruto/raw/main/Sponsor&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I hope I can release at least one preview version of NanaZip 3.x in 2023. So, I am trying my best to implement the related infrastructures like &lt;a href=&#34;https://github.com/ProjectMile/Mile.Xaml&#34;&gt;Mile.Xaml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Kenji Mouri&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Inherit all features from 7-Zip 23.01.&lt;/li&gt; &#xA; &lt;li&gt;Packaging with MSIX for modern deployment experience.&lt;/li&gt; &#xA; &lt;li&gt;Support the context menu in Windows 10/11 File Explorer.&lt;/li&gt; &#xA; &lt;li&gt;Enable NSIS script decompiling support for the NSIS archives. (Merged from &lt;a href=&#34;https://github.com/myfreeer/7z-build-nsis&#34;&gt;7-Zip NSIS branch&lt;/a&gt;.)&lt;/li&gt; &#xA; &lt;li&gt;Provide 7-Zip execution alias for helping users to migrate to NanaZip.&lt;/li&gt; &#xA; &lt;li&gt;Support the Brotli, Fast-LZMA2, Lizard, LZ4, LZ5 and Zstandard codecs. (Merged from &lt;a href=&#34;https://github.com/mcmilk/7-Zip-zstd&#34;&gt;7-Zip ZS branch&lt;/a&gt;.)&lt;/li&gt; &#xA; &lt;li&gt;Support the Per-Monitor DPI-Aware for all GUI components.&lt;/li&gt; &#xA; &lt;li&gt;Support the i18n for GUI edition of Self Extracting Executable.&lt;/li&gt; &#xA; &lt;li&gt;Integrate the following HASH algorithms to NanaZip from RHash (AICH, BLAKE2b, BTIH, ED2K, EDON-R 224, EDON-R 256, EDON-R 384, EDON-R 512, GOST R 34.11-94, GOST R 34.11-94 CryptoPro, GOST R 34.11-2012 256, GOST R 34.11-2012 512, HAS-160, RIPEMD-160, SHA-224, SHA3-224, SHA3-256, SHA3-384, SHA3-512, Snefru-128, Snefru-256, Tiger, Tiger2, TTH, Whirlpool), xxHash (XXH3_64bits, XXH3_128bits) and GmSSL (SM3).&lt;/li&gt; &#xA; &lt;li&gt;Enable Control Flow Guard (CFG) to all target binaries for mitigating ROP attacks.&lt;/li&gt; &#xA; &lt;li&gt;Mark all x86 and x64 target binaries as compatible with Control-flow Enforcement Technology (CET) Shadow Stack.&lt;/li&gt; &#xA; &lt;li&gt;Strict handle checks at runtime to block the use of invalid handles.&lt;/li&gt; &#xA; &lt;li&gt;Disable dynamic code generation in Release builds prevents generating malicious code at runtime.&lt;/li&gt; &#xA; &lt;li&gt;Block loading unexpected libraries from remote sources at runtime.&lt;/li&gt; &#xA; &lt;li&gt;Enable Package Integrity Check.&lt;/li&gt; &#xA; &lt;li&gt;Enable EH Continuation Metadata.&lt;/li&gt; &#xA; &lt;li&gt;Enable Signed Returns.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Differences between NanaZip and NanaZip Classic&lt;/h2&gt; &#xA;&lt;p&gt;NanaZip 3.0 and onwards will have two distribution flavors called NanaZip and NanaZip Classic. Here are the differences between them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;NanaZip&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Only 64-Bit support.&lt;/li&gt; &#xA;   &lt;li&gt;Only MSIX packaged version.&lt;/li&gt; &#xA;   &lt;li&gt;Support new context menu introduced by Windows 11.&lt;/li&gt; &#xA;   &lt;li&gt;Only support Windows 10 Version 2004 (Build 19041) or later.&lt;/li&gt; &#xA;   &lt;li&gt;Have XAML-based GUI and VT-based CLI.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;NanaZip Classic&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Have 32-Bit support.&lt;/li&gt; &#xA;   &lt;li&gt;Only unpackaged version (installer or portable).&lt;/li&gt; &#xA;   &lt;li&gt;Only support legacy context menu.&lt;/li&gt; &#xA;   &lt;li&gt;Support Windows Vista RTM (Build 6000.16386) or later.&lt;/li&gt; &#xA;   &lt;li&gt;Keep Win32 GUI and Win32 CLI.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;NanaZip (XAML-based GUI, VT-based CLI and MSIX package)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supported OS: Windows 10 Version 2004 (Build 19041) or later&lt;/li&gt; &#xA;   &lt;li&gt;Supported Platforms: x86 (64-bit) and ARM (64-bit)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;NanaZip Classic (Win32 GUI and Win32 CLI)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supported OS: Windows Vista RTM (Build 6000.16386) or later&lt;/li&gt; &#xA;   &lt;li&gt;Supported Platforms: x86 (32-bit and 64-bit) and ARM (64-bit)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;NanaZip.Core (Core Library and the Self Extracting Executables)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supported OS: Windows Vista RTM (Build 6000.16386) or later&lt;/li&gt; &#xA;   &lt;li&gt;Supported Platforms: x86 (32-bit and 64-bit) and ARM (64-bit)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download and Installation&lt;/h2&gt; &#xA;&lt;p&gt;Here are some available installation methods for NanaZip.&lt;/p&gt; &#xA;&lt;h3&gt;Microsoft Store&lt;/h3&gt; &#xA;&lt;p&gt;This is the recommended way to install NanaZip.&lt;/p&gt; &#xA;&lt;p&gt;Search and install &lt;code&gt;NanaZip&lt;/code&gt; in Windows Store for stable release, and &lt;code&gt;NanaZip Preview&lt;/code&gt; for preview release.&lt;/p&gt; &#xA;&lt;p&gt;Also, you can also click the Microsoft Store link you needed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/store/apps/9N8G7TSCL18R&#34;&gt;NanaZip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/store/apps/9NZL0LRP1BNL&#34;&gt;NanaZip Preview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MSIX Package&lt;/h3&gt; &#xA;&lt;p&gt;You also can download the MSIX Package in &lt;a href=&#34;https://github.com/M2Team/NanaZip/releases&#34;&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After you have downloaded the MSIX Package, you can double click to install it, or you can execute the following command in the PowerShell which is run as administrator.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PowerShell -NoLogo -NoProfile -NonInteractive -InputFormat None -ExecutionPolicy Bypass Add-AppxPackage -DeferRegistrationWhenPackagesAreInUse -ForceUpdateFromAnyVersion -Path &lt;code&gt;The path of the MSIX package&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;P.S. All needed dependencies are included in the MSIX Package of NanaZip because we known that it&#39;s very difficult for users who do not have access to the store to get our dependency packages, and we want to be robust and deployable everywhere.&lt;/p&gt; &#xA;&lt;p&gt;If you want to install NanaZip for all users, you can execute the following command in the PowerShell which is run as administrator.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PowerShell -NoLogo -NoProfile -NonInteractive -InputFormat None -ExecutionPolicy Bypass Add-AppxProvisionedPackage -Online -PackagePath &lt;code&gt;The path of the MSIX package&lt;/code&gt; -SkipLicense&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You also can execute the following command in the Command Prompt which is run as administrator instead.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;DISM.exe /Online /Add-ProvisionedAppxPackage /PackagePath:&lt;code&gt;The path of the MSIX package&lt;/code&gt; /SkipLicense&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For more information, please read documents for &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/module/dism/add-appxprovisionedpackage?view=windowsserver2022-ps&#34;&gt;PowerShell&lt;/a&gt; and &lt;a href=&#34;https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/dism-app-package--appx-or-appxbundle--servicing-command-line-options?view=windows-11&#34;&gt;DISM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;P.S. Due to the policy from Microsoft Store, you need to run NanaZip with the internet connection at the first time for getting the license if you install NanaZip without the internet connection, otherwise Windows won&#39;t launch NanaZip properly.&lt;/p&gt; &#xA;&lt;p&gt;If you want to uninstall NanaZip you installed for all users, you can execute the following command in the PowerShell which is run as administrator.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Get-AppxPackage -Name &lt;em&gt;40174MouriNaruto.NanaZip&lt;/em&gt; -AllUsers | Remove-AppxPackage -AllUsers -Confirm&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you can&#39;t find NanaZip in the context menu, please restart all File Explorer processes via Task Manager.&lt;/li&gt; &#xA; &lt;li&gt;Due to the design of MSIX, drives&#39; context menu in Explorer only show in Windows 11(22H2)+.&lt;/li&gt; &#xA; &lt;li&gt;Due to the issues in Desktop Bridge file system virtualization, you are unable to use NanaZip in the Safe Mode of Windows.&lt;/li&gt; &#xA; &lt;li&gt;Due to the policy from Microsoft Store, NanaZip is unable to disable Desktop Bridge file system virtualization, so the file operations in &lt;code&gt;%UserProfile%/AppData&lt;/code&gt; will be redirected in Windows 10, and file operations in directories other than &lt;code&gt;Local&lt;/code&gt;, &lt;code&gt;LocalLow&lt;/code&gt; and &lt;code&gt;Roaming&lt;/code&gt; in &lt;code&gt;%UserProfile%/AppData&lt;/code&gt; will still be redirected in Windows 11.&lt;/li&gt; &#xA; &lt;li&gt;Due to the Microsoft Store limitations, NanaZip 1.2 and later won&#39;t support languages not mentioned in &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/publish/supported-languages&#34;&gt;https://docs.microsoft.com/en-us/windows/uwp/publish/supported-languages&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you turn off the Windows Firewall, you may fail to install NanaZip. (&lt;a href=&#34;https://github.com/M2Team/NanaZip/issues/204&#34;&gt;https://github.com/M2Team/NanaZip/issues/204&lt;/a&gt;) (&lt;a href=&#34;https://github.com/microsoft/terminal/issues/12269&#34;&gt;https://github.com/microsoft/terminal/issues/12269&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Due to the System Settings APP limitations, only starting with Windows 11+ (Build 22000.1817+ &amp;amp; 22621.1555+), you can launch directly to the settings page of file association for NanaZip. (&lt;a href=&#34;https://learn.microsoft.com/en-us/windows/uwp/launch-resume/launch-default-apps-settings&#34;&gt;https://learn.microsoft.com/en-us/windows/uwp/launch-resume/launch-default-apps-settings&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.0 (December 8, 2021) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Modernize the build toolchain with MSBuild for using MSIX packaging and parallel compilation support.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use &lt;a href=&#34;https://github.com/Chuyu-Team/VC-LTL5&#34;&gt;VC-LTL 5.x&lt;/a&gt; toolchain to make the binary size even smaller than the official 7-Zip because we can use ucrtbase.dll directly and the optimizations from modern compile toolchain.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add the context menu support in Windows 10/11 File Explorer.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; New icons and minor UI tweaks.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Merge NSIS script decompiling support from &lt;a href=&#34;https://github.com/myfreeer/7z-build-nsis&#34;&gt;7-Zip NSIS branch&lt;/a&gt;. (Suggested by alanfox2000.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Provide 7-Zip execution alias for helping users to migrate to NanaZip. (Suggested by AndromedaMelody.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add support for Brotli, Fast-LZMA2, Lizard, LZ4, LZ5 and Zstandard from &lt;a href=&#34;https://github.com/mcmilk/7-Zip-zstd&#34;&gt;7-Zip ZS branch&lt;/a&gt;. (Suggested by fcharlie.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;1.1 (March 17, 2022) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add assembly implementations from 7-Zip back for improving performance.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Reimplement the about dialog with Task Dialog.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Modernize the message boxes with Task Dialog.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;1.2 (May 11, 2022) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Per-Monitor DPI-Aware support for all UI components.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Modernize the i18n implementation and migrate language files from &lt;code&gt;.txt&lt;/code&gt; to &lt;code&gt;.resw&lt;/code&gt;. (Suggested by Maicol Battistini.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add i18n support for Self Extracting Executables.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2.0 (October 4, 2022) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Provide the new icons.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Start modernizing the core implementation.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add the UI stack based on XAML Islands which is used in NanaZip.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Start modernizing the UI with XAML Islands with the Windows 11 control style, dark and light mode support.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Blue Moon (3.x) Series (Before 2024 Q3) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Continue to modernize the UI with XAML Islands with the Windows 11 control style, dark and light mode support.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Full Accessibility support in all UI components.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Migrate configurations from registry to json. (Suggested by AndromedaMelody.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Continue to modernize the core implementation.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to Windows Runtime component for interoperability.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Provide NanaZip Installer for simplify the deployment.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add option for save file names with UTF-8 in 7z archives.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add batch task support. (Suggested by 刘泪.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to design the new UI layout. (Suggested by wangwenx190.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add option for using Windows Imaging API (WIMGAPI) backend to make better creation and extraction support for wim archives, also add creation and extraction support for esd archives.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add pri archive extracting support.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add smart extraction.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add language encoding switching support for file names in File Manager. (Suggested by 刘泪 and zjkmxy.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add deleting source after archiving support. (Suggested by OrionGrant.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add an option when extracting an archive to open the folder where you extracted the files, like WinRAR. (Suggested by maicol07.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add ISO creation support.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sherlock Holmes (5.x) Series (Before 2025 Q3) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Currently no new feature plans for this series.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Unpredictable Future Series (T.B.D.) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to create a new archive file format optimized for software distribution and image backup and restore. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Keeping metadata provided by file system.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; File referencing support.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Integrity verification support.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Differential support.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Recovery record support.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Provide lightweight SDK for authoring and consuming.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to contribute recovery record support for 7z archives to 7-Zip mainline. (Suggested by SakuraNeko.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to port NanaZip to Linux. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to port MegaUI (an developing lightweight UI framework created by mingkuang, under internal developing at the current stage, will be open source if the work has done) framework to Linux.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to create MinLin (a.k.a. Minimum Linux, a distro intended for helping publish distroless binaries and provide some Windows API functions as static libraries for having a lightweight platform abstraction layer) project because I think NanaZip should support distroless environment for reducing time wasting for compiling for different distros.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; After porting NanaZip to Linux, accept contributions from community folks for other POSIX platforms (e.g. FreeBSD) and macOS support.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to add extension for Windows File Explorer for give user immersive experience like builtin zip file support in Windows. (Suggested by SakuraNeko and shuax.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to create isolated and portable plugin infrastructure based on 64-bit RISC-V Unprivileged ISA Specification. Runtime Project: &lt;a href=&#34;https://github.com/ChaosAIOfficial/RaySoul&#34;&gt;https://github.com/ChaosAIOfficial/RaySoul&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/License.md&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/Documents/People.md&#34;&gt;Relevant People&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/Documents/Privacy.md&#34;&gt;Privacy Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/Documents/ReleaseNotes.md&#34;&gt;NanaZip Release Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/Documents/ReleaseNotesPreview.md&#34;&gt;NanaZip Preview Release Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/M2Team/NanaZip/main/Documents/Versioning.md&#34;&gt;Versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forums.mydigitallife.net/threads/84171&#34;&gt;My Digital Life Forums&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>devbis/z03mmc</title>
    <updated>2023-10-22T01:28:21Z</updated>
    <id>tag:github.com,2023-10-22:/devbis/z03mmc</id>
    <link href="https://github.com/devbis/z03mmc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xiaomi LYWSD03MMC Zigbee Firmware&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zigbee 3.0 Firmware for original LYWSD03MMC Sensor&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the Zigbee firmware for Xiaomi LYWSD03MMC Bluetooth temperature and humidity sensor.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/devbis/z03mmc/master/assets/device.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The LYWSD03MMC is a Bluetooth temperature and humidity sensor that can be integrated into a Zigbee network using this firmware. This repository hosts the code and related resources to flash the device and make it compatible with Zigbee networks.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Full-featured firmware to convert Xiaomi LYWSD03MC device with default ZCL battery, temperature and relative humidity clusters&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Display support for known revisions&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OTA support in firmware and binaries in ZCL format for update&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flashable over-the-air from custom ATC firmware &lt;a href=&#34;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&#34;&gt;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flashable over SWS-UART interface using one of:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://pvvx.github.io/ATC_MiThermometer/USBCOMFlashTx.html&#34;&gt;https://pvvx.github.io/ATC_MiThermometer/USBCOMFlashTx.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pvvx/ATC_MiThermometer/raw/master/TLSR825xComFlasher.py&#34;&gt;https://github.com/pvvx/ATC_MiThermometer/blob/master/TLSR825xComFlasher.py&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pvvx/TLSRPGM&#34;&gt;https://github.com/pvvx/TLSRPGM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zigbee compatible hardware (e.g., Zigbee coordinator or gateway).&lt;/li&gt; &#xA; &lt;li&gt;Necessary tools for flashing firmware to the sensor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building firmware&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone TC32 toolchain according to your host OS:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/devbis/tc32.git -b linux&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/devbis/tc32.git -b macos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/devbis/tc32.git -b windows&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository and SDK:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/devbis/z03mmc.git&#xA;git clone https://github.com/devbis/tl_zigbee_sdk.git -b 3.6.8.5 --depth 1&#xA;&#xA;cd z03mmc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure and build:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake -DSDK_PREFIX=$(pwd)/../tl_zigbee_sdk -DTOOLCHAIN_PREFIX=$(pwd)/../tc32 -B build .&#xA;cmake --build build --target z03mmc.zigbee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Firmware binary is located at &lt;code&gt;build/src/z03mmc.bin&lt;/code&gt; The binary with OTA header is at the same folder, ending with &lt;code&gt;z03mmc.zigbee&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flashing from a custom bluetooth firmware&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Write transitional custom bluetooth firmware &lt;a href=&#34;https://raw.githubusercontent.com/devbis/z03mmc/master/assets/ATC_ota_40000.bin&#34;&gt;ATC_ota_400000&lt;/a&gt; using an awesome tool from ATC_MiThermometer &lt;a href=&#34;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&#34;&gt;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Flash z03mmc.bin firmware over transitional firmware to convert it to zigbee. Use &lt;a href=&#34;https://devbis.github.io/telink-zigbee/&#34;&gt;https://devbis.github.io/telink-zigbee/&lt;/a&gt; page if previous flasher stops because fo the firmware size.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flashing firmware with USB to UART&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;TTL-USB adaptor&lt;/li&gt; &#xA; &lt;li&gt;1k-1.8k Ohm resistor&lt;/li&gt; &#xA; &lt;li&gt;python3 with pyserial module installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To flash a new firmware via an standard USB to UART adapter, simply connect the Thermometer as seen in the picture &lt;a href=&#34;https://raw.githubusercontent.com/devbis/z03mmc/master/assets/Mi_SWS_Connection.jpg&#34;&gt;Mi_SWS_Connection.jpg&lt;/a&gt; to the USB to UART converter and run the TLSR825xComFlasher.py tool.&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;python3 TLSR825xComFlasher.py -p COM3 wf 0 z03mmc.bin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;python3 TLSR825xComFlasher.py -p /dev/ttyUSB0 wf 0 z03mmc.bin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case if the SWS pin is used by the firmware, try this sequence:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Power off the sensor&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python3 TLSR825xComFlasher.py -p &amp;lt;YOUR_COM_PORT&amp;gt; -t5000 wf 0 z03mmc.bin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now you have 5 seconds to power on the sensor&lt;/li&gt; &#xA; &lt;li&gt;In case the chip has not started being flashed, run &lt;code&gt;python3 TLSR825xComFlasher.py -p &amp;lt;YOUR_COM_PORT&amp;gt; wf 0 z03mmc.bin&lt;/code&gt; without the timeout again.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If the flashing fails try to increase timeouts in the script.&lt;/p&gt; &#xA;&lt;p&gt;The UART flasher software uses the tool from &lt;a href=&#34;https://github.com/pvvx/ATC_MiThermometer&#34;&gt;https://github.com/pvvx/ATC_MiThermometer&lt;/a&gt;. Thanks to pvvx for the awesome work on this!&lt;/p&gt; &#xA;&lt;h2&gt;Related Work&lt;/h2&gt; &#xA;&lt;p&gt;z03mmc is based on the original work of @pvvx, and @atc1441, who developed the initial firmware versions for bluetooth-capable device.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pvvx/ATC_MiThermometer&#34;&gt;https://github.com/pvvx/ATC_MiThermometer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atc1441/ATC_MiThermometer&#34;&gt;https://github.com/atc1441/ATC_MiThermometer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Flash the firmware&lt;/li&gt; &#xA; &lt;li&gt;Enable pairing mode on Zigbee coordinator&lt;/li&gt; &#xA; &lt;li&gt;In case it is not joining, close the RESET and GND contacts on the board for 3 seconds to reset Zigbee settings. Replug the battery may require&lt;/li&gt; &#xA; &lt;li&gt;For zigbee2mqtt you need to add custom converter if you use version 1.33.1 or earlier&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the GNU General Public License 3.0 or later - see the &lt;a href=&#34;https://raw.githubusercontent.com/devbis/z03mmc/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>geany/geany</title>
    <updated>2023-10-22T01:28:21Z</updated>
    <id>tag:github.com,2023-10-22:/geany/geany</id>
    <link href="https://github.com/geany/geany" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast and lightweight IDE&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Geany - A fast and lightweight IDE&lt;/h2&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Geany is a small and lightweight integrated development environment. It was developed to provide a small and fast IDE, which has only a few dependencies from other packages. Another goal was to be as independent as possible from a special Desktop Environment like KDE or GNOME. So it is using only the GTK+ toolkit and therefore you need only the GTK+ runtime libraries to run Geany.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The basic features of Geany are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;syntax highlighting&lt;/li&gt; &#xA; &lt;li&gt;code completion&lt;/li&gt; &#xA; &lt;li&gt;auto completion of often used constructs like if, for and while&lt;/li&gt; &#xA; &lt;li&gt;auto completion of XML and HTML tags&lt;/li&gt; &#xA; &lt;li&gt;call tips&lt;/li&gt; &#xA; &lt;li&gt;folding&lt;/li&gt; &#xA; &lt;li&gt;many supported filetypes like C, Java, PHP, HTML, Python, Perl, Pascal&lt;/li&gt; &#xA; &lt;li&gt;symbol lists&lt;/li&gt; &#xA; &lt;li&gt;embedded terminal emulation&lt;/li&gt; &#xA; &lt;li&gt;extensibility through plugins&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation from distribution packages&lt;/h2&gt; &#xA;&lt;p&gt;Using distribution packages on Linux, BSD and similar distributions is the easiest and recommended way. This way you will also benefit from automatic Geany updates by the package manager of the distribution.&lt;/p&gt; &#xA;&lt;p&gt;Packages are available for most distributions including Debian, Fedora, Ubuntu and many more.&lt;/p&gt; &#xA;&lt;h2&gt;Installation on Mac OS and Windows&lt;/h2&gt; &#xA;&lt;p&gt;Prebuilt binary packages for Mac OS and Windows can be found on &lt;a href=&#34;https://www.geany.org&#34;&gt;https://www.geany.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation from sources&lt;/h2&gt; &#xA;&lt;p&gt;Requirements ++++++++++++ For compiling Geany yourself, you will need the GTK3 libraries and header files. You will also need its dependency libraries and header files, such as Pango, Glib and ATK. All these files are available at &lt;a href=&#34;https://www.gtk.org&#34;&gt;https://www.gtk.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore you need, of course, a C compiler and the Make tool; a C++ compiler is also needed for the required Scintilla library included. The GNU versions of these tools are recommended.&lt;/p&gt; &#xA;&lt;p&gt;To build the user manual you need &lt;em&gt;rst2html&lt;/em&gt; from Docutils. A pre-built version of the manual is available in distribution tarballs and will be used as fallback if &lt;em&gt;rst2html&lt;/em&gt; is missing. When building from Git however, that pre-built version is not included and &lt;em&gt;rst2html&lt;/em&gt; is required by default. You can explicitly disable building the user manual using the &lt;code&gt;--disable-html-docs&lt;/code&gt; &lt;em&gt;configure&lt;/em&gt; flag, but this will result in not installing a local version of the user manual, and Geany will then try and open the online version instead when requested.&lt;/p&gt; &#xA;&lt;p&gt;.. note:: Building Geany from source on Mac OS and Windows is more complicated and is out of scope of this document. For more information on building instructions for these platforms, please check the wiki at &lt;a href=&#34;https://wiki.geany.org/howtos/&#34;&gt;https://wiki.geany.org/howtos/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Installing from a Git clone +++++++++++++++++++++++++++&lt;/p&gt; &#xA;&lt;p&gt;Using the Meson build system ++++++++++++++++++++++++++++&lt;/p&gt; &#xA;&lt;p&gt;N.B. Meson support is still incomplete and a work-in-progress.&lt;/p&gt; &#xA;&lt;p&gt;Meson requires to chose a separate build directory. Either create one, or let meson do it:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;meson build&lt;/code&gt; or &lt;code&gt;mkdir build; cd build; meson ..&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Either command will configure the build system. The system is probed in many ways and system-dependant build files are created. This includes location of dependencies and compiler and linker flags required for them.&lt;/p&gt; &#xA;&lt;p&gt;To build Geany, follow with a &lt;code&gt;meson compile -C build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To install Geany, follow the build with a &lt;code&gt;sudo meson install -C build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, meson will install Geany to &lt;code&gt;/usr/local&lt;/code&gt;. A different prefix can be selected at the initial command or via reconfiguration:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;meson --prefix /opt build&lt;/code&gt; or &lt;code&gt;meson configure --prefix /opt build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Geany has some selectable features that may reduce the required build and runtime dependencies. See meson_optionts.txt for a full list.&lt;/p&gt; &#xA;&lt;p&gt;To turn a feature off, use &lt;code&gt;-D&amp;lt;feature&amp;gt;=false&lt;/code&gt; when configuring the build, for example: &lt;code&gt;meson configure -Dvte=false build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using Autotools +++++++++++++++&lt;/p&gt; &#xA;&lt;p&gt;Install Autotools (&lt;em&gt;autopoint&lt;/em&gt;, &lt;em&gt;automake&lt;/em&gt;, &lt;em&gt;autoconf&lt;/em&gt; and &lt;em&gt;libtool&lt;/em&gt;), &lt;em&gt;gettext&lt;/em&gt;, and the GLib development files &lt;strong&gt;before&lt;/strong&gt; running any of the following commands, as well as &lt;em&gt;rst2html&lt;/em&gt; from Docutils (see above for details). Then, run &lt;code&gt;./autogen.sh&lt;/code&gt; and then follow the instructions for &lt;code&gt;installing from a release tarball&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;Installing from a release tarball +++++++++++++++++++++++++++++++++&lt;/p&gt; &#xA;&lt;p&gt;Run the the following three commands::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure&#xA;$ make&#xA;(as root, or using sudo)&#xA;% make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more configuration details run &lt;code&gt;./configure --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If there are any errors during compilation, check your build environment and try to find the error, otherwise contact the mailing list or one of the authors.&lt;/p&gt; &#xA;&lt;p&gt;See the manual for details (geany.txt/geany.html).&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To run Geany just type::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ geany&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on a console or use the applications menu from your desktop environment. For command line options, see the manual page of Geany or run::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ geany --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;for details. Or look into the documentation in the &lt;em&gt;doc/&lt;/em&gt; directory. The most important option probably is &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--config&lt;/code&gt;, where you can specify an alternate configuration directory.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Geany is distributed under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. A copy of this license can be found in the file COPYING included with the source code of this program. The included Scintilla library (found in the subdirectory scintilla/) has its own license, which can be found in the file scintilla/License.txt included with the source code of this program.&lt;/p&gt; &#xA;&lt;h2&gt;Ideas, questions, patches and bug reports&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.geany.org/&#34;&gt;https://www.geany.org/&lt;/a&gt;. If you add something, or fix a bug, please create a pull request at &lt;a href=&#34;https://github.com/geany/geany/&#34;&gt;https://github.com/geany/geany/&lt;/a&gt;. Also see the HACKING file.&lt;/p&gt;</summary>
  </entry>
</feed>