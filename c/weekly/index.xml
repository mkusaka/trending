<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-12T02:03:11Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ValdikSS/GoodbyeDPI</title>
    <updated>2022-06-12T02:03:11Z</updated>
    <id>tag:github.com,2022-06-12:/ValdikSS/GoodbyeDPI</id>
    <link href="https://github.com/ValdikSS/GoodbyeDPI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoodbyeDPI — Deep Packet Inspection circumvention utility (for Windows)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoodbyeDPI — Deep Packet Inspection circumvention utility&lt;/h1&gt; &#xA;&lt;p&gt;This software designed to bypass Deep Packet Inspection systems found in many Internet Service Providers which block access to certain websites.&lt;/p&gt; &#xA;&lt;p&gt;It handles DPI connected using optical splitter or port mirroring (&lt;strong&gt;Passive DPI&lt;/strong&gt;) which do not block any data but just replying faster than requested destination, and &lt;strong&gt;Active DPI&lt;/strong&gt; connected in sequence.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows 7, 8, 8.1, 10 or 11&lt;/strong&gt; with administrator privileges required.&lt;/p&gt; &#xA;&lt;h1&gt;Quick start&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;For Russia&lt;/strong&gt;: Download &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/releases&#34;&gt;latest version from Releases page&lt;/a&gt;, unpack the file and run &lt;strong&gt;1_russia_blacklist_dnsredir.cmd&lt;/strong&gt; script.&lt;/li&gt; &#xA; &lt;li&gt;For other countries: Download &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/releases&#34;&gt;latest version from Releases page&lt;/a&gt;, unpack the file and run &lt;strong&gt;2_any_country_dnsredir.cmd&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These scripts launch GoodbyeDPI in recommended mode with DNS resolver redirection to Yandex DNS on non-standard port (to prevent DNS poisoning).&lt;br&gt; If it works — congratulations! You can use it as-is or configure further.&lt;/p&gt; &#xA;&lt;h1&gt;How to use&lt;/h1&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/releases&#34;&gt;latest version from Releases page&lt;/a&gt; and run.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: goodbyedpi.exe [OPTION...]&#xA; -p          block passive DPI&#xA; -r          replace Host with hoSt&#xA; -s          remove space between host header and its value&#xA; -m          mix Host header case (test.com -&amp;gt; tEsT.cOm)&#xA; -f &amp;lt;value&amp;gt;  set HTTP fragmentation to value&#xA; -k &amp;lt;value&amp;gt;  enable HTTP persistent (keep-alive) fragmentation and set it to value&#xA; -n          do not wait for first segment ACK when -k is enabled&#xA; -e &amp;lt;value&amp;gt;  set HTTPS fragmentation to value&#xA; -a          additional space between Method and Request-URI (enables -s, may break sites)&#xA; -w          try to find and parse HTTP traffic on all processed ports (not only on port 80)&#xA; --port        &amp;lt;value&amp;gt;    additional TCP port to perform fragmentation on (and HTTP tricks with -w)&#xA; --ip-id       &amp;lt;value&amp;gt;    handle additional IP ID (decimal, drop redirects and TCP RSTs with this ID).&#xA;                          This option can be supplied multiple times.&#xA; --dns-addr    &amp;lt;value&amp;gt;    redirect UDP DNS requests to the supplied IP address (experimental)&#xA; --dns-port    &amp;lt;value&amp;gt;    redirect UDP DNS requests to the supplied port (53 by default)&#xA; --dnsv6-addr  &amp;lt;value&amp;gt;    redirect UDPv6 DNS requests to the supplied IPv6 address (experimental)&#xA; --dnsv6-port  &amp;lt;value&amp;gt;    redirect UDPv6 DNS requests to the supplied port (53 by default)&#xA; --dns-verb               print verbose DNS redirection messages&#xA; --blacklist   &amp;lt;txtfile&amp;gt;  perform circumvention tricks only to host names and subdomains from&#xA;                          supplied text file (HTTP Host/TLS SNI).&#xA;                          This option can be supplied multiple times.&#xA; --allow-no-sni           perform circumvention if TLS SNI can&#39;t be detected with --blacklist enabled.&#xA; --set-ttl     &amp;lt;value&amp;gt;    activate Fake Request Mode and send it with supplied TTL value.&#xA;                          DANGEROUS! May break websites in unexpected ways. Use with care (or --blacklist).&#xA; --auto-ttl    [a1-a2-m]  activate Fake Request Mode, automatically detect TTL and decrease&#xA;                          it based on a distance. If the distance is shorter than a2, TTL is decreased&#xA;                          by a2. If it&#39;s longer, (a1; a2) scale is used with the distance as a weight.&#xA;                          If the resulting TTL is more than m(ax), set it to m.&#xA;                          Default (if set): --auto-ttl 1-4-10. Also sets --min-ttl 3.&#xA;                          DANGEROUS! May break websites in unexpected ways. Use with care (or --blacklist).&#xA; --min-ttl     &amp;lt;value&amp;gt;    minimum TTL distance (128/64 - TTL) for which to send Fake Request&#xA;                          in --set-ttl and --auto-ttl modes.&#xA; --wrong-chksum           activate Fake Request Mode and send it with incorrect TCP checksum.&#xA;                          May not work in a VM or with some routers, but is safer than set-ttl.&#xA; --wrong-seq              activate Fake Request Mode and send it with TCP SEQ/ACK in the past.&#xA; --native-frag            fragment (split) the packets by sending them in smaller packets, without&#xA;                          shrinking the Window Size. Works faster (does not slow down the connection)&#xA;                          and better.&#xA; --reverse-frag           fragment (split) the packets just as --native-frag, but send them in the&#xA;                          reversed order. Works with the websites which could not handle segmented&#xA;                          HTTPS TLS ClientHello (because they receive the TCP flow &#34;combined&#34;).&#xA; --max-payload [value]    packets with TCP payload data more than [value] won&#39;t be processed.&#xA;                          Use this option to reduce CPU usage by skipping huge amount of data&#xA;                          (like file transfers) in already established sessions.&#xA;                          May skip some huge HTTP requests from being processed.&#xA;                          Default (if set): --max-payload 1200.&#xA;&#xA;&#xA;LEGACY modesets:&#xA; -1          -p -r -s -f 2 -k 2 -n -e 2 (most compatible mode)&#xA; -2          -p -r -s -f 2 -k 2 -n -e 40 (better speed for HTTPS yet still compatible)&#xA; -3          -p -r -s -e 40 (better speed for HTTP and HTTPS)&#xA; -4          -p -r -s (best speed)&#xA;&#xA;Modern modesets (more stable, more compatible, faster):&#xA; -5          -f 2 -e 2 --auto-ttl --reverse-frag --max-payload (this is the default)&#xA; -6          -f 2 -e 2 --wrong-seq --reverse-frag --max-payload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To check if your ISP&#39;s DPI could be circumvented, first make sure that your provider does not poison DNS answers by enabling &#34;Secure DNS (DNS over HTTPS)&#34; option in your browser.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt;: Settings → &lt;a href=&#34;chrome://settings/security&#34;&gt;Privacy and security&lt;/a&gt; → Use secure DNS → With: NextDNS&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Firefox&lt;/strong&gt;: &lt;a href=&#34;about:preferences&#34;&gt;Settings&lt;/a&gt; → Network Settings → Enable DNS over HTTPS → Use provider: NextDNS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then run the &lt;code&gt;goodbyedpi.exe&lt;/code&gt; executable without any options. If it works — congratulations! You can use it as-is or configure further, for example by using &lt;code&gt;--blacklist&lt;/code&gt; option if the list of blocked websites is known and available for your country.&lt;/p&gt; &#xA;&lt;p&gt;If your provider intercepts DNS requests, you may want to use &lt;code&gt;--dns-addr&lt;/code&gt; option to a public DNS resover running on non-standard port (such as Yandex DNS &lt;code&gt;77.88.8.8:1253&lt;/code&gt;) or configure DNS over HTTPS/TLS using third-party applications.&lt;/p&gt; &#xA;&lt;p&gt;Check the .cmd scripts and modify it according to your preference and network conditions.&lt;/p&gt; &#xA;&lt;h1&gt;How does it work&lt;/h1&gt; &#xA;&lt;h3&gt;Passive DPI&lt;/h3&gt; &#xA;&lt;p&gt;Most Passive DPI send HTTP 302 Redirect if you try to access blocked website over HTTP and TCP Reset in case of HTTPS, faster than destination website. Packets sent by DPI usually have IP Identification field equal to &lt;code&gt;0x0000&lt;/code&gt; or &lt;code&gt;0x0001&lt;/code&gt;, as seen with Russian providers. These packets, if they redirect you to another website (censorship page), are blocked by GoodbyeDPI.&lt;/p&gt; &#xA;&lt;h3&gt;Active DPI&lt;/h3&gt; &#xA;&lt;p&gt;Active DPI is more tricky to fool. Currently the software uses 7 methods to circumvent Active DPI:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TCP-level fragmentation for first data packet&lt;/li&gt; &#xA; &lt;li&gt;TCP-level fragmentation for persistent (keep-alive) HTTP sessions&lt;/li&gt; &#xA; &lt;li&gt;Replacing &lt;code&gt;Host&lt;/code&gt; header with &lt;code&gt;hoSt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Removing space between header name and value in &lt;code&gt;Host&lt;/code&gt; header&lt;/li&gt; &#xA; &lt;li&gt;Adding additional space between HTTP Method (GET, POST etc) and URI&lt;/li&gt; &#xA; &lt;li&gt;Mixing case of Host header value&lt;/li&gt; &#xA; &lt;li&gt;Sending fake HTTP/HTTPS packets with low Time-To-Live value, incorrect checksum or incorrect TCP Sequence/Acknowledgement numbers to fool DPI and prevent delivering them to the destination&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These methods should not break any website as they&#39;re fully compatible with TCP and HTTP standards, yet it&#39;s sufficient to prevent DPI data classification and to circumvent censorship. Additional space may break some websites, although it&#39;s acceptable by HTTP/1.1 specification (see 19.3 Tolerant Applications).&lt;/p&gt; &#xA;&lt;p&gt;The program loads WinDivert driver which uses Windows Filtering Platform to set filters and redirect packets to the userspace. It&#39;s running as long as console window is visible and terminates when you close the window.&lt;/p&gt; &#xA;&lt;h1&gt;How to build from source&lt;/h1&gt; &#xA;&lt;p&gt;This project can be build using &lt;strong&gt;GNU Make&lt;/strong&gt; and &lt;a href=&#34;https://mingw-w64.org&#34;&gt;&lt;strong&gt;mingw&lt;/strong&gt;&lt;/a&gt;. The only dependency is &lt;a href=&#34;https://github.com/basil00/Divert&#34;&gt;WinDivert&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build x86 exe run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make CPREFIX=i686-w64-mingw32- WINDIVERTHEADERS=/path/to/windivert/include WINDIVERTLIBS=/path/to/windivert/x86&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;And for x86_64:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make CPREFIX=x86_64-w64-mingw32- BIT64=1 WINDIVERTHEADERS=/path/to/windivert/include WINDIVERTLIBS=/path/to/windivert/amd64&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to install as Windows Service&lt;/h1&gt; &#xA;&lt;p&gt;Check examples in &lt;code&gt;service_install_russia_blacklist.cmd&lt;/code&gt;, &lt;code&gt;service_install_russia_blacklist_dnsredir.cmd&lt;/code&gt; and &lt;code&gt;service_remove.cmd&lt;/code&gt; scripts.&lt;/p&gt; &#xA;&lt;p&gt;Modify them according to your own needs.&lt;/p&gt; &#xA;&lt;h1&gt;Known issues&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Horribly outdated Windows 7 installations are not able to load WinDivert driver due to missing support for SHA256 digital signatures. Install KB3033929 &lt;a href=&#34;https://www.microsoft.com/en-us/download/details.aspx?id=46078&#34;&gt;x86&lt;/a&gt;/&lt;a href=&#34;https://www.microsoft.com/en-us/download/details.aspx?id=46148&#34;&gt;x64&lt;/a&gt;, or better, update the whole system using Windows Update.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Some SSL/TLS stacks unable to process fragmented ClientHello packets, and HTTPS websites won&#39;t open. Bug: &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/issues/4&#34;&gt;#4&lt;/a&gt;, &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/issues/64&#34;&gt;#64&lt;/a&gt;.&lt;/del&gt; Fragmentation issues are fixed in v0.1.7.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;ESET Antivirus is incompatible with WinDivert driver &lt;a href=&#34;https://github.com/ValdikSS/GoodbyeDPI/issues/91&#34;&gt;#91&lt;/a&gt;. This is most probably antivirus bug, not WinDivert.&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Similar projects&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/bol-van/zapret&#34;&gt;zapret&lt;/a&gt;&lt;/strong&gt; by @bol-van (for Linux).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/SadeghHayeri/GreenTunnel&#34;&gt;Green Tunnel&lt;/a&gt;&lt;/strong&gt; by @SadeghHayeri (for MacOS, Linux and Windows).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/zhenyolka/DPITunnel&#34;&gt;DPITunnel&lt;/a&gt;&lt;/strong&gt; by @zhenyolka (for Android).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/krlvm/PowerTunnel&#34;&gt;PowerTunnel&lt;/a&gt;&lt;/strong&gt; by @krlvm (for Windows, MacOS and Linux).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/krlvm/PowerTunnel-Android&#34;&gt;PowerTunnel for Android&lt;/a&gt;&lt;/strong&gt; by @krlvm (for Android).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/xvzc/SpoofDPI&#34;&gt;SpoofDPI&lt;/a&gt;&lt;/strong&gt; by @xvzc (for macOS and Linux)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Kudos&lt;/h1&gt; &#xA;&lt;p&gt;Thanks @basil00 for &lt;a href=&#34;https://github.com/basil00/Divert&#34;&gt;WinDivert&lt;/a&gt;. That&#39;s the main part of this program.&lt;/p&gt; &#xA;&lt;p&gt;Thanks for every &lt;a href=&#34;https://github.com/ValdikSS/blockcheck&#34;&gt;BlockCheck&lt;/a&gt; contributor. It would be impossible to understand DPI behaviour without this utility.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>torvalds/linux</title>
    <updated>2022-06-12T02:03:11Z</updated>
    <id>tag:github.com,2022-06-12:/torvalds/linux</id>
    <link href="https://github.com/torvalds/linux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux kernel source tree&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux kernel&lt;/h1&gt; &#xA;&lt;p&gt;There are several guides for kernel developers and users. These guides can be rendered in a number of formats, like HTML and PDF. Please read Documentation/admin-guide/README.rst first.&lt;/p&gt; &#xA;&lt;p&gt;In order to build the documentation, use &lt;code&gt;make htmldocs&lt;/code&gt; or &lt;code&gt;make pdfdocs&lt;/code&gt;. The formatted documentation can also be read online at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://www.kernel.org/doc/html/latest/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are various text files in the Documentation/ subdirectory, several of them using the Restructured Text markup notation.&lt;/p&gt; &#xA;&lt;p&gt;Please read the Documentation/process/changes.rst file, as it contains the requirements for building and running the kernel, and information about the problems which may result by upgrading your kernel.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wazuh/wazuh</title>
    <updated>2022-06-12T02:03:11Z</updated>
    <id>tag:github.com,2022-06-12:/wazuh/wazuh</id>
    <link href="https://github.com/wazuh/wazuh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Wazuh - The Open Source Security Platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wazuh&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wazuh.com/community/join-us-on-slack/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-blue.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://groups.google.com/forum/#!forum/wazuh&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/email-join-blue.svg?sanitize=true&#34; alt=&#34;Email&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://documentation.wazuh.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-view-green.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wazuh.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/web-view-green.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/wazuh-wazuh&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/10992/badge.svg?sanitize=true&#34; alt=&#34;Coverity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/wazuh&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/wazuh?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=peTSzcAueEc&#34;&gt;&lt;img src=&#34;https://img.shields.io/youtube/views/peTSzcAueEc?style=social&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh is a free and open source platform used for threat prevention, detection, and response. It is capable of protecting workloads across on-premises, virtualized, containerized, and cloud-based environments.&lt;/p&gt; &#xA;&lt;p&gt;Wazuh solution consists of an endpoint security agent, deployed to the monitored systems, and a management server, which collects and analyzes data gathered by the agents. Besides, Wazuh has been fully integrated with the Elastic Stack, providing a search engine and data visualization tool that allows users to navigate through their security alerts.&lt;/p&gt; &#xA;&lt;h2&gt;Wazuh capabilities&lt;/h2&gt; &#xA;&lt;p&gt;A brief presentation of some of the more common use cases of the Wazuh solution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Intrusion detection&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh agents scan the monitored systems looking for malware, rootkits and suspicious anomalies. They can detect hidden files, cloaked processes or unregistered network listeners, as well as inconsistencies in system call responses.&lt;/p&gt; &#xA;&lt;p&gt;In addition to agent capabilities, the server component uses a signature-based approach to intrusion detection, using its regular expression engine to analyze collected log data and look for indicators of compromise.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Log data analysis&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh agents read operating system and application logs, and securely forward them to a central manager for rule-based analysis and storage. When no agent is deployed, the server can also receive data via syslog from network devices or applications.&lt;/p&gt; &#xA;&lt;p&gt;The Wazuh rules help make you aware of application or system errors, misconfigurations, attempted and/or successful malicious activities, policy violations and a variety of other security and operational issues.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;File integrity monitoring&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh monitors the file system, identifying changes in content, permissions, ownership, and attributes of files that you need to keep an eye on. In addition, it natively identifies users and applications used to create or modify files.&lt;/p&gt; &#xA;&lt;p&gt;File integrity monitoring capabilities can be used in combination with threat intelligence to identify threats or compromised hosts. In addition, several regulatory compliance standards, such as PCI DSS, require it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vulnerability detection&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh agents pull software inventory data and send this information to the server, where it is correlated with continuously updated CVE (Common Vulnerabilities and Exposure) databases, in order to identify well-known vulnerable software.&lt;/p&gt; &#xA;&lt;p&gt;Automated vulnerability assessment helps you find the weak spots in your critical assets and take corrective action before attackers exploit them to sabotage your business or steal confidential data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration assessment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh monitors system and application configuration settings to ensure they are compliant with your security policies, standards and/or hardening guides. Agents perform periodic scans to detect applications that are known to be vulnerable, unpatched, or insecurely configured.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, configuration checks can be customized, tailoring them to properly align with your organization. Alerts include recommendations for better configuration, references and mapping with regulatory compliance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Incident response&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh provides out-of-the-box active responses to perform various countermeasures to address active threats, such as blocking access to a system from the threat source when certain criteria are met.&lt;/p&gt; &#xA;&lt;p&gt;In addition, Wazuh can be used to remotely run commands or system queries, identifying indicators of compromise (IOCs) and helping perform other live forensics or incident response tasks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Regulatory compliance&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh provides some of the necessary security controls to become compliant with industry standards and regulations. These features, combined with its scalability and multi-platform support help organizations meet technical compliance requirements.&lt;/p&gt; &#xA;&lt;p&gt;Wazuh is widely used by payment processing companies and financial institutions to meet PCI DSS (Payment Card Industry Data Security Standard) requirements. Its web user interface provides reports and dashboards that can help with this and other regulations (e.g. GPG13 or GDPR).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cloud security&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh helps monitoring cloud infrastructure at an API level, using integration modules that are able to pull security data from well known cloud providers, such as Amazon AWS, Azure or Google Cloud. In addition, Wazuh provides rules to assess the configuration of your cloud environment, easily spotting weaknesses.&lt;/p&gt; &#xA;&lt;p&gt;In addition, Wazuh light-weight and multi-platform agents are commonly used to monitor cloud environments at the instance level.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Containers security&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wazuh provides security visibility into your Docker hosts and containers, monitoring their behavior and detecting threats, vulnerabilities and anomalies. The Wazuh agent has native integration with the Docker engine allowing users to monitor images, volumes, network settings, and running containers.&lt;/p&gt; &#xA;&lt;p&gt;Wazuh continuously collects and analyzes detailed runtime information. For example, alerting for containers running in privileged mode, vulnerable applications, a shell running in a container, changes to persistent volumes or images, and other possible threats.&lt;/p&gt; &#xA;&lt;h2&gt;WUI&lt;/h2&gt; &#xA;&lt;p&gt;The Wazuh WUI provides a powerful user interface for data visualization and analysis. This interface can also be used to manage Wazuh configuration and to monitor its status.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Modules overview&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wazuh/wazuh-kibana-app/raw/master/screenshots/app.png&#34; alt=&#34;Modules overview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Security events&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wazuh/wazuh-kibana-app/raw/master/screenshots/app2.png&#34; alt=&#34;Module: Security events&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Integrity monitoring&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wazuh/wazuh-kibana-app/raw/master/screenshots/app3.png&#34; alt=&#34;Module: Integrity monitoring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vulnerability detection&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wazuh/wazuh-kibana-app/raw/master/screenshots/app4.png&#34; alt=&#34;Module: Vulnerabilities&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Regulatory compliance&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wazuh/wazuh-kibana-app/raw/master/screenshots/app5.png&#34; alt=&#34;Module: PCI DSS&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Agents overview&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wazuh/wazuh-kibana-app/raw/master/screenshots/app6.png&#34; alt=&#34;Agents overview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Agent summary&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wazuh/wazuh-kibana-app/raw/master/screenshots/app7.png&#34; alt=&#34;Agent summary&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Orchestration&lt;/h2&gt; &#xA;&lt;p&gt;Here you can find all the automation tools maintained by the Wazuh team.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wazuh/wazuh-cloudformation&#34;&gt;Wazuh AWS CloudFormation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wazuh/wazuh-docker&#34;&gt;Docker containers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wazuh/wazuh-ansible&#34;&gt;Wazuh Ansible&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wazuh/wazuh-chef&#34;&gt;Wazuh Chef&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wazuh/wazuh-puppet&#34;&gt;Wazuh Puppet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wazuh/wazuh-kubernetes&#34;&gt;Wazuh Kubernetes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wazuh/wazuh-bosh&#34;&gt;Wazuh Bosh&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wazuh/wazuh-salt&#34;&gt;Wazuh Salt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Branches&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;master&lt;/code&gt; branch contains the latest code, be aware of possible bugs on this branch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt; branch on correspond to the last Wazuh stable version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Software and libraries used&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modified version of Zlib and a embedded part of OpenSSL (SHA1, SHA256, SHA512, AES and Blowfish libraries).&lt;/li&gt; &#xA; &lt;li&gt;OpenSSL Project for use in the OpenSSL Toolkit (&lt;a href=&#34;http://www.openssl.org/&#34;&gt;http://www.openssl.org/&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Cryptographic software written by Eric Young (&lt;a href=&#34;mailto:eay@cryptsoft.com&#34;&gt;eay@cryptsoft.com&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Software developed by the Zlib project (Jean-loup Gailly and Mark Adler).&lt;/li&gt; &#xA; &lt;li&gt;Software developed by the cJSON project (Dave Gamble).&lt;/li&gt; &#xA; &lt;li&gt;Software developed by the MessagePack project (&lt;a href=&#34;https://msgpack.org/&#34;&gt;https://msgpack.org/&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Software developed by the CURL project (&lt;a href=&#34;https://curl.haxx.se/&#34;&gt;https://curl.haxx.se/&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Software developed by the bzip2 project (Julian Seward).&lt;/li&gt; &#xA; &lt;li&gt;Software developed by the libYAML project (Kirill Simonov).&lt;/li&gt; &#xA; &lt;li&gt;The Linux audit userspace project (&lt;a href=&#34;https://github.com/linux-audit/audit-userspace&#34;&gt;https://github.com/linux-audit/audit-userspace&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;A embedded part of the Berkeley DB library (&lt;a href=&#34;https://github.com/berkeleydb/libdb&#34;&gt;https://github.com/berkeleydb/libdb&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;CPython interpreter by Guido van Rossum and the Python Software Foundation (&lt;a href=&#34;https://www.python.org&#34;&gt;https://www.python.org&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;PyPi packages: &lt;a href=&#34;https://github.com/Azure/azure-storage-python&#34;&gt;azure-storage-blob&lt;/a&gt;, &lt;a href=&#34;https://github.com/boto/boto3&#34;&gt;boto3&lt;/a&gt;, &lt;a href=&#34;https://github.com/pyca/cryptography&#34;&gt;cryptography&lt;/a&gt;, &lt;a href=&#34;https://github.com/docker/docker-py&#34;&gt;docker&lt;/a&gt;, &lt;a href=&#34;https://pythonhosted.org/pytz/&#34;&gt;pytz&lt;/a&gt;, &lt;a href=&#34;http://python-requests.org/&#34;&gt;requests&lt;/a&gt; and &lt;a href=&#34;http://github.com/MagicStack/uvloop&#34;&gt;uvloop&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;PCRE2 library by Philip Hazel (&lt;a href=&#34;https://www.pcre.org/&#34;&gt;https://www.pcre.org/&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://documentation.wazuh.com&#34;&gt;Full documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://documentation.wazuh.com/current/installation-guide/index.html&#34;&gt;Wazuh installation guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get involved&lt;/h2&gt; &#xA;&lt;p&gt;Become part of the &lt;a href=&#34;https://wazuh.com/community/&#34;&gt;Wazuh&#39;s community&lt;/a&gt; to learn from other users, participate in discussions, talk to our developers and contribute to the project.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute to our project please don’t hesitate to make pull-requests, submit issues or send commits, we will review all your questions.&lt;/p&gt; &#xA;&lt;p&gt;You can also join our &lt;a href=&#34;https://wazuh.com/community/join-us-on-slack/&#34;&gt;Slack community channel&lt;/a&gt; and &lt;a href=&#34;https://groups.google.com/d/forum/wazuh&#34;&gt;mailing list&lt;/a&gt; by sending an email to &lt;a href=&#34;mailto:wazuh+subscribe@googlegroups.com&#34;&gt;wazuh+subscribe@googlegroups.com&lt;/a&gt;, to ask questions and participate in discussions.&lt;/p&gt; &#xA;&lt;p&gt;Stay up to date on news, releases, engineering articles and more.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://wazuh.com&#34;&gt;Wazuh website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/company/wazuh&#34;&gt;Linkedin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/wazuhsecurity&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/wazuh&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wazuh.com/blog/&#34;&gt;Wazuh blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wazuh.com/community/join-us-on-slack/&#34;&gt;Slack announcements channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;Wazuh Copyright (C) 2015-2022 Wazuh Inc. (License GPLv2)&lt;/p&gt; &#xA;&lt;p&gt;Based on the OSSEC project started by Daniel Cid.&lt;/p&gt;</summary>
  </entry>
</feed>