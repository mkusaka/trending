<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-22T01:36:54Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>istoreos/istoreos</title>
    <updated>2024-09-22T01:36:54Z</updated>
    <id>tag:github.com,2024-09-22:/istoreos/istoreos</id>
    <link href="https://github.com/istoreos/istoreos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;提供一个人人会用的的路由、NAS系统 （目前活跃的分支是 istoreos-22.03）&lt;/p&gt;&lt;hr&gt;&lt;p&gt;iStoreOS 是入门级的路由系统，也是入门级的 NAS 系统， 基于原版 OpenWRT，在 ARS2 上经过长期迭代，最终开放适配到多个硬件平台&lt;/p&gt; &#xA;&lt;p&gt;更多信息请参阅 &lt;a href=&#34;https://github.com/istoreos&#34;&gt;https://github.com/istoreos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;以下是 OpenWRT 原始的 README&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/istoreos/istoreos/istoreos-22.03/include/logo.png&#34; alt=&#34;OpenWrt logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenWrt Project is a Linux operating system targeting embedded devices. Instead of trying to create a single, static firmware, OpenWrt provides a fully writable filesystem with package management. This frees you from the application selection and configuration provided by the vendor and allows you to customize the device through the use of packages to suit any application. For developers, OpenWrt is the framework to build an application without having to build a complete firmware around it; for users this means the ability for full customization, to use the device in ways never envisioned.&lt;/p&gt; &#xA;&lt;p&gt;Sunshine!&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To build your own firmware you need a GNU/Linux, BSD or MacOSX system (case sensitive filesystem required). Cygwin is unsupported because of the lack of a case sensitive file system.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;You need the following tools to compile OpenWrt, the package names vary between distributions. A complete list with distribution specific packages is found in the &lt;a href=&#34;https://openwrt.org/docs/guide-developer/build-system/install-buildsystem&#34;&gt;Build System Setup&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;binutils bzip2 diff find flex gawk gcc-6+ getopt grep install libc-dev libz-dev&#xA;make4.1+ perl python3.6+ rsync subversion unzip which&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quickstart&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds update -a&lt;/code&gt; to obtain all the latest package definitions defined in feeds.conf / feeds.conf.default&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds install -a&lt;/code&gt; to install symlinks for all obtained packages into package/feeds/&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make menuconfig&lt;/code&gt; to select your preferred configuration for the toolchain, target system &amp;amp; firmware packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; to build your firmware. This will download all sources, build the cross-compile toolchain and then cross-compile the GNU/Linux kernel &amp;amp; all chosen applications for your target system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Related Repositories&lt;/h3&gt; &#xA;&lt;p&gt;The main repository uses multiple sub-repositories to manage packages of different categories. All packages are installed via the OpenWrt package manager called &lt;code&gt;opkg&lt;/code&gt;. If you&#39;re looking to develop the web interface or port packages to OpenWrt, please find the fitting repository below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/luci&#34;&gt;LuCI Web Interface&lt;/a&gt;: Modern and modular interface to control the device via a web browser.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/packages&#34;&gt;OpenWrt Packages&lt;/a&gt;: Community repository of ported packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/routing&#34;&gt;OpenWrt Routing&lt;/a&gt;: Packages specifically focused on (mesh) routing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/video&#34;&gt;OpenWrt Video&lt;/a&gt;: Packages specifically focused on display servers and clients (Xorg and Wayland).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support Information&lt;/h2&gt; &#xA;&lt;p&gt;For a list of supported devices see the &lt;a href=&#34;https://openwrt.org/supported_devices&#34;&gt;OpenWrt Hardware Database&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-quick-start/start&#34;&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-user/start&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-developer/start&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/techref/start&#34;&gt;Technical Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Support Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.openwrt.org&#34;&gt;Forum&lt;/a&gt;: For usage, projects, discussions and hardware advise.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.oftc.net/#openwrt&#34;&gt;Support Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developer Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugs.openwrt.org&#34;&gt;Bug Reports&lt;/a&gt;: Report bugs in OpenWrt&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lists.openwrt.org/mailman/listinfo/openwrt-devel&#34;&gt;Dev Mailing List&lt;/a&gt;: Send patches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.oftc.net/#openwrt-devel&#34;&gt;Dev Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt-devel&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;OpenWrt is licensed under GPL-2.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sz3/cfc</title>
    <updated>2024-09-22T01:36:54Z</updated>
    <id>tag:github.com,2024-09-22:/sz3/cfc</id>
    <link href="https://github.com/sz3/cfc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demo/test android app for libcimbar. Copy files over the cell phone camera!&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;a href=&#34;https://github.com/sz3/cimbar&#34;&gt;INTRODUCTION&lt;/a&gt; | &lt;a href=&#34;https://github.com/sz3/cimbar/raw/master/ABOUT.md&#34;&gt;ABOUT&lt;/a&gt; | CFC | &lt;a href=&#34;https://github.com/sz3/libcimbar&#34;&gt;LIBCIMBAR&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;CameraFileCopy&lt;/h2&gt; &#xA;&lt;p&gt;This is an android app for receiving data over the camera as a one-way data channel. It does not use any antennas (wifi, bluetooth, nfc, ...) or other tricks. Notably, this means it works just as well in airplane mode.&lt;/p&gt; &#xA;&lt;p&gt;The app reads animated &lt;a href=&#34;https://github.com/sz3/libcimbar&#34;&gt;cimbar codes&lt;/a&gt;. Nearly all the interesting logic is from libcimbar -- included via a git subtree.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;sender&lt;/em&gt; component of cfc is a cimbar encoder -- such as &lt;a href=&#34;https://cimbar.org&#34;&gt;https://cimbar.org&lt;/a&gt;. Navigate to that website (or use libcimbar&#39;s &lt;code&gt;cimbar_send&lt;/code&gt; to generate barcodes natively), open a file to initialize the cimbar stream, and point the app+camera at the animated barcode.&lt;/p&gt; &#xA;&lt;h2&gt;Release apks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/org.cimbar.camerafilecopy/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.cimbar.camerafilecopy&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Release apks are also available here: &lt;a href=&#34;https://github.com/sz3/cfc/releases/&#34;&gt;https://github.com/sz3/cfc/releases/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Only arm64-v8a is officially supported at the moment, because that is all I can test for.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install android studio&lt;/li&gt; &#xA; &lt;li&gt;Install the android ndk&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/opencv/opencv/releases/download/4.5.0/opencv-4.5.0-android-sdk.zip&#34;&gt;OpenCV for android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a project with this repo at the root&lt;/li&gt; &#xA; &lt;li&gt;update &lt;code&gt;gradle.properties&lt;/code&gt; such that &lt;code&gt;opencvsdk&lt;/code&gt; point to wherever you extracted the OpenCV Android SDK.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;I found this project incredibly useful for getting started:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VlSomers/native-opencv-android-template&#34;&gt;https://github.com/VlSomers/native-opencv-android-template&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;licensing, dependencies, etc&lt;/h2&gt; &#xA;&lt;p&gt;The code in cfc, such as it is, is MIT licensed. It is mostly a blend of various tutorial apps + wrapper code around libcimbar.&lt;/p&gt; &#xA;&lt;p&gt;The libcimbar code is MPL 2.0. libcimbar&#39;s dependencies are a variety of MIT, BSD, zlib, boost, apache, ...&lt;/p&gt;</summary>
  </entry>
</feed>