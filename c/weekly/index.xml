<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T01:51:35Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pasqualerossi/42-School-Exam-Rank-02</title>
    <updated>2023-01-29T01:51:35Z</updated>
    <id>tag:github.com,2023-01-29:/pasqualerossi/42-School-Exam-Rank-02</id>
    <link href="https://github.com/pasqualerossi/42-School-Exam-Rank-02" rel="alternate"></link>
    <summary type="html">&lt;p&gt;First 42 School Exam&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Exam Details&lt;/h1&gt; &#xA;&lt;p&gt;This exam has 4 questions in total. A random question is picked from each level below.&lt;/p&gt; &#xA;&lt;p&gt;If you fail the exam, when you retake the exam next time, you will restart at Level 1 again.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Exam Norminette&lt;/h1&gt; &#xA;&lt;p&gt;There is no Norminette in this exam.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Exam Questions&lt;/h1&gt; &#xA;&lt;h3&gt;Question 1 is from Level 1&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - first_word&#xA;  - fizzbuzz&#xA;  - ft_strcpy&#xA;  - ft_strlen&#xA;  - ft_swap&#xA;  - putstr&#xA;  - repeat_alpha&#xA;  - rev_print&#xA;  - rot_13&#xA;  - rotone&#xA;  - search_and_replace&#xA;  - ulstr &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Question 2 is from Level 2&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - alpha_mirror&#xA;  - camel_to_snake&#xA;  - do_op&#xA;  - ft_atoi&#xA;  - ft_strcmp&#xA;  - ft_strcspn&#xA;  - ft_strdup&#xA;  - ft_strpbrk&#xA;  - ft_strrev&#xA;  - ft_strspn&#xA;  - inter&#xA;  - is_power_of_2&#xA;  - last_word&#xA;  - max&#xA;  - print_bits&#xA;  - reverse_bits&#xA;  - snake_to_camel&#xA;  - swap_bits&#xA;  - union&#xA;  - wdmatch &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Question 3 is from Level 3&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - add_prime_sum&#xA;  - epur_str&#xA;  - expand_str&#xA;  - ft_atoi_base&#xA;  - ft_list_size&#xA;  - ft_range&#xA;  - ft_rrange&#xA;  - hidenp&#xA;  - lcm&#xA;  - paramsum&#xA;  - pgcd&#xA;  - print_hex&#xA;  - rstr_capitalizer&#xA;  - str_capitalizer&#xA;  - tab_mult &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Question 4 is from Level 4&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - flood_fill&#xA;  - fprime&#xA;  - ft_itoa&#xA;  - ft_list_foreach&#xA;  - ft_list_remove_if&#xA;  - ft_split&#xA;  - rev_wstr&#xA;  - rostring&#xA;  - sort_int_tab&#xA;  - sort_list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Exam Login Details&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;login -&amp;gt; exam&#xA;password -&amp;gt; exam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Type examshell in terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;login -&amp;gt; your 42 intra username (eg. prossi)&#xA;pasword -&amp;gt; your password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Allow photo check&lt;/p&gt; &#xA;&lt;p&gt;In the examshell, you have only the following 3 commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;status - check the time and other things&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;grademe - checking pushed exercise (moulinet)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;finish - closing examshell and finish exam&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Open new terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;You can find your exam subject in the directory subject&#xA;Then you can see directory Rendu. It is your repository.&#xA;You must create a folder named by the project and start working.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Exam Submission Details&lt;/h1&gt; &#xA;&lt;p&gt;When you are ready to sumbit your function/program, go into Rendu and push the folder you created by doing the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;git add &#xA;   &lt;folder name&gt;&lt;/folder&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;git status&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;git commit -m &#34;any commit message you like&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;git push&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After you git push, type &lt;code&gt;grademe&lt;/code&gt; in the examshell for your project to be submitted.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Exam Practice&lt;/h1&gt; &#xA;&lt;p&gt;Practice the exam just like you would in the real exam using this tool - &lt;a href=&#34;https://github.com/JCluzet/42_EXAM&#34;&gt;https://github.com/JCluzet/42_EXAM&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Ralim/IronOS</title>
    <updated>2023-01-29T01:51:35Z</updated>
    <id>tag:github.com,2023-01-29:/Ralim/IronOS</id>
    <link href="https://github.com/Ralim/IronOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source Soldering Iron firmware for Miniware and Pinecil&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/Ralim/ts100/workflows/CI%20Build%20all/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/ralim/IronOS/total&#34; alt=&#34;GitHub all&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/ralim/IronOS&#34; alt=&#34;Latest Release&#34;&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/ironos/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/ironos/-/glossary/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;IronOS - Flexible Soldering iron control Firmware&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;This repository was formerly known as TS100, it&#39;s the same great code. Just with more supported devices.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Originally conceived as an alternative firmware for the TS100, this firmware has evolved into a complex soldering iron control firmware.&lt;/p&gt; &#xA;&lt;p&gt;The firmware implements all of the standard features of a &#39;smart&#39; soldering iron, with lots of little extras and tweaks. I highly recommend reading the installation guide fully when installing on your iron. And after install just explore the settings menu.&lt;/p&gt; &#xA;&lt;p&gt;For soldering irons that are designed to be powered by &#39;smart&#39; power sources (PD and QC), the firmware supports settings around the negotiated power and voltage. For soldering irons that are designed to be powered by batteries (TS100 &amp;amp; Pinecil), settings for a cutoff voltage for battery protection are supported.&lt;/p&gt; &#xA;&lt;p&gt;Currently &lt;strong&gt;31&lt;/strong&gt; languages are supported. When downloading the firmware for your soldering iron, take note of the language code in the file name.&lt;/p&gt; &#xA;&lt;p&gt;This project is considered feature complete for use as a soldering iron, &lt;em&gt;so please suggest any feature improvements you would like!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;This firmware does &lt;strong&gt;NOT&lt;/strong&gt; support the USB port while running for changing settings. This is done through the onscreen menu only. Logos are edited on a computer and flashed like firmware.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Device&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;DC&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;QC&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;PD&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;EPR&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;BLE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Battery&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Recommended&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MHP30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Pinecil V1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Pinecil V2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TS80P&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TS100&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TS80&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;*Please note that Miniware started shipping TS100&#39;s using cloned STM32 Chips. While these do work with IronOS, their DFU bootloader works terribly, and it is hard to get it to successfully flash larger firmware images like IronOS without timing out. This is the main reason why the TS100 is &lt;strong&gt;&lt;em&gt;no longer recommended&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with IronOS firmware, please jump to &lt;a href=&#34;https://ralim.github.io/IronOS/GettingStarted/&#34;&gt;Getting Started Guide&lt;/a&gt;. But the &lt;a href=&#34;https://www.merriam-webster.com/dictionary/TL%3BDR&#34;&gt;TL;DR&lt;/a&gt; is to press the button near the front of the iron to heat up. Use the button near the back of the iron to enter the settings menu. Long hold the rear button in soldering mode to exit back to the start screen.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;For notes on installation for your device, please refer to the flashing guide for your device:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ralim.github.io/IronOS/Flashing/MHP30&#34;&gt;MHP30&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ralim.github.io/IronOS/Flashing/Pinecil%20V1/&#34;&gt;Pinecil V1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ralim.github.io/IronOS/Flashing/Pinecil%20V2/&#34;&gt;Pinecil V2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ralim.github.io/IronOS/Flashing/TS80%28P%29/&#34;&gt;TS80 / TS80P&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ralim.github.io/IronOS/Flashing/TS100&#34;&gt;TS100&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PID style iron temperature control&lt;/li&gt; &#xA; &lt;li&gt;Automatic sleep with selectable sensitivity&lt;/li&gt; &#xA; &lt;li&gt;Motion wake support&lt;/li&gt; &#xA; &lt;li&gt;All settings exposed in the intuitive menu&lt;/li&gt; &#xA; &lt;li&gt;(TS100) Set a voltage lower limit for Lithium batteries so you don&#39;t kill your battery pack&lt;/li&gt; &#xA; &lt;li&gt;(TS80) Set 18 W or 24 W settings for your power bank&lt;/li&gt; &#xA; &lt;li&gt;(TS80P) Automatically negotiates appropriate PD and falls back to QC mode like TS80&lt;/li&gt; &#xA; &lt;li&gt;(Pinecil) Supports all 3 power modes (PD, QC, DC In).&lt;/li&gt; &#xA; &lt;li&gt;(Pinecilv2) Supports USB-PD EPR for 28V operation.&lt;/li&gt; &#xA; &lt;li&gt;Improved readability Fonts, supporting multiple languages&lt;/li&gt; &#xA; &lt;li&gt;Use hardware features to improve reliability&lt;/li&gt; &#xA; &lt;li&gt;Can disable movement detection if desired&lt;/li&gt; &#xA; &lt;li&gt;Boost mode lets you temporarily change the temperature when soldering (i.e. raise the temperature for short periods)&lt;/li&gt; &#xA; &lt;li&gt;(TS100/Pinecil) Battery charge level indicator if power source set to a lipo cell count&lt;/li&gt; &#xA; &lt;li&gt;(TS80/TS80P/Pinecil) Power bank operating voltage is displayed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ralim.github.io/IronOS/Logo/&#34;&gt;Custom boot up logo support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatic LCD rotation based on the orientation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Menu System&lt;/h2&gt; &#xA;&lt;p&gt;This new firmware uses a new menu system to allow access to the settings on the device. When on the main screen and having the tip plugged in, the unit shows a pair of prompts for the two most common operations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pressing the button near the tip enters the &lt;em&gt;soldering mode&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pressing the button near the USB end enters the &lt;em&gt;settings menu&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;When not in &lt;em&gt;soldering mode&lt;/em&gt;, holding down the button near the tip will enter &lt;em&gt;soldering temperature adjust mode&lt;/em&gt; (This is the same as the one in the &lt;em&gt;soldering mode&lt;/em&gt;, but allows to adjust the temperature before heating up), in &lt;em&gt;soldering mode&lt;/em&gt; however this will activate &lt;em&gt;boost mode&lt;/em&gt; as long as you hold down the button.&lt;/li&gt; &#xA; &lt;li&gt;Holding down the button near the USB end will show the &lt;em&gt;&lt;a href=&#34;https://ralim.github.io/IronOS/DebugMenu/&#34;&gt;debug menu&lt;/a&gt;.&lt;/em&gt; In &lt;em&gt;soldering mode&lt;/em&gt; this ends the heating.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Operation details are over in the &lt;a href=&#34;https://ralim.github.io/IronOS/Menu/&#34;&gt;Menu information.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;Is your preferred language missing localisation of languages? This project is using Weblate for managing translations in a user friendly way; &lt;a href=&#34;https://hosted.weblate.org/engage/ironos/&#34;&gt;the user interface for this is on their hosted website.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;If you love this firmware and want to continue my caffeine addiction, you can do so &lt;a href=&#34;https://paypal.me/RalimTek&#34;&gt;here&lt;/a&gt; (or email me for other options). I also want to give a shout out to all of the &lt;a href=&#34;https://github.com/Ralim/IronOS/graphs/contributors&#34;&gt;Fantastic Contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Especially to the following users, who have helped in various ways that are massively appreciated:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dhiltonp&#34;&gt;Dhiltonp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Mrkvozrout&#34;&gt;Mrkvozrout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonnieZG&#34;&gt;JonnieZG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/federck&#34;&gt;Federck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jvitkauskas&#34;&gt;Jvitkauskas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doegox&#34;&gt;Doegox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/perillamint&#34;&gt;Perillamint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GeminiServer&#34;&gt;GeminiServer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PixelPirate&#34;&gt;Patrick Horlebein&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Firebie&#34;&gt;Firebie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/agatti&#34;&gt;Agatti&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/discip&#34;&gt;Discip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paulfertser&#34;&gt;Paul Fertser&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Plus the huge number of people who have contributed translations, your effort is massively appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;The code created by the community is GNU GPLv3. Unless noted elsewhere. Other components such as FreeRTOS/USB-PD have their own licence.&lt;/p&gt; &#xA;&lt;h2&gt;Commercial Use&lt;/h2&gt; &#xA;&lt;p&gt;This software is provided as-is, so I cannot provide any commercial support for the firmware. However, you are more than welcome to distribute links to the firmware or provide irons with this software on them. Please do not re-host the files, but rather link to this page, so that there are no old versions of the firmware scattered around.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dunst-project/dunst</title>
    <updated>2023-01-29T01:51:35Z</updated>
    <id>tag:github.com,2023-01-29:/dunst-project/dunst</id>
    <link href="https://github.com/dunst-project/dunst" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight and customizable notification daemon&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dunst-project/dunst/actions?query=workflow%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/dunst-project/dunst/workflows/main/badge.svg?sanitize=true&#34; alt=&#34;main&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/dunst-project/dunst&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/dunst-project/dunst/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Dunst&lt;/h1&gt; &#xA;&lt;p&gt;&lt;i&gt;A highly configurable and lightweight notification daemon.&lt;/i&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/music.png&#34; alt=&#34;music&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#copyright&#34;&gt;Copyright&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;⚙️ Highly customizable&lt;/h2&gt; &#xA;&lt;p&gt;Customize fonts, icons, timeouts, and more. Are you unhappy with the default shortcuts and colors? No worries, you can change these all with a simple configuration file tweak.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;click the images to see the dunstrc&lt;/em&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://gist.github.com/NNBnh/5f6e601a6a82a6ed43b1959698758141&#34;&gt; &lt;img alt=&#34;screenshot1&#34; src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/screenshot1_cut.png&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://gist.github.com/fwSmit/9127d988b07bcec9d869f2c927d0f616&#34;&gt; &lt;img alt=&#34;screenshot2&#34; src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/screenshot2_cut.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;📜 Scripting&lt;/h2&gt; &#xA;&lt;a href=&#34;https://gitlab.manjaro.org/profiles-and-settings/manjaro-theme-settings/-/blob/master/skel/.config/dunst/dunstrc&#34;&gt; &lt;img alt=&#34;screenshot_urgency&#34; src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/screenshot_urgency.png&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Run custom scripts on notifications matching a specified pattern. Have espeak read out your notifications, or play a song when your significant other signs on in pidgin!&lt;/p&gt; &#xA;&lt;h2&gt;📋 Rules&lt;/h2&gt; &#xA;&lt;p&gt;Change the look or behavior of notifications matching a specified pattern. You could use this to change the color of message notifications from your favorite jabber buddies, or to prevent important work email notifications from disappearing until you manually dismiss them.&lt;/p&gt; &#xA;&lt;h2&gt;⏸️ Pause&lt;/h2&gt; &#xA;&lt;p&gt;If you want to take a break and not receive any notifications for a while, just pause dunst. All notifications will be saved for you to catch up later.&lt;/p&gt; &#xA;&lt;h2&gt;🕘 History&lt;/h2&gt; &#xA;&lt;p&gt;Catch an unread notification disappearing from the corner of your eye? Just tap a keyboard shortcut to replay the last notification, or continue tapping to see your notification history.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Most documentation can be found in dunst&#39;s man pages. In &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/docs/dunst.1.pod&#34;&gt;&lt;strong&gt;dunst(1)&lt;/strong&gt;&lt;/a&gt; contains some general instructions on how to run dunst and in &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/docs/dunst.5.pod&#34;&gt;&lt;strong&gt;dunst(5)&lt;/strong&gt;&lt;/a&gt; all of dunst&#39;s configuration options are explained.&lt;/p&gt; &#xA;&lt;p&gt;On the dunst &lt;a href=&#34;https://github.com/dunst-project/dunst/wiki&#34;&gt;wiki&lt;/a&gt; you can find guides and installation instructions and on the dunst &lt;a href=&#34;https://dunst-project.org&#34;&gt;website&lt;/a&gt; there is a &lt;a href=&#34;https://dunst-project.org/faq&#34;&gt;FAQ&lt;/a&gt; with common issues.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Dunst is available in many package repositories. If it&#39;s not available in your distro&#39;s repositories, don&#39;t worry, it&#39;s not hard to build it yourself.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dbus (runtime)&lt;/li&gt; &#xA; &lt;li&gt;libxinerama&lt;/li&gt; &#xA; &lt;li&gt;libxrandr&lt;/li&gt; &#xA; &lt;li&gt;libxss&lt;/li&gt; &#xA; &lt;li&gt;glib&lt;/li&gt; &#xA; &lt;li&gt;pango/cairo&lt;/li&gt; &#xA; &lt;li&gt;libnotify (can build without, for dunstify, see &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#make-parameters&#34;&gt;make parameters&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;wayland-client (can build without, see &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#make-parameters&#34;&gt;make parameters&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;wayland-protocols (optional, for recompiling protocols)&lt;/li&gt; &#xA; &lt;li&gt;xdg-utils (optional, xdg-open is the default &#39;browser&#39; for opening URLs)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The names will be different depending on your &lt;a href=&#34;https://github.com/dunst-project/dunst/wiki/Dependencies&#34;&gt;distribution&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/dunst-project/dunst.git&#xA;cd dunst&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Make parameters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DESTDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the destination directory of the installation. (Default: &lt;code&gt;/&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PREFIX=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the prefix of the installation. (Default: &lt;code&gt;/usr/local&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BINDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the &lt;code&gt;dunst&lt;/code&gt; executable&#39;s path (Default: &lt;code&gt;${PREFIX}/bin&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DATADIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the path for shared files. (Default: &lt;code&gt;${PREFIX}/share&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSCONFDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the base directory for system config files. (Default: &lt;code&gt;${PREFIX}/etc/xdg&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSCONFFILE=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the absolute path to which the default dunstrc shall be installed. (Default: &lt;code&gt;${SYSCONFDIR}/dunst/dunstrc&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSCONF_FORCE_NEW=(0|1)&lt;/code&gt;: Overwrite existing &lt;code&gt;${SYSCONFFILE}&lt;/code&gt;. (Default: 0 (don&#39;t overwrite))&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MANDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the prefix of the manpage. (Default: &lt;code&gt;${DATADIR}/man&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSTEMD=(0|1)&lt;/code&gt;: Disable/Enable the systemd unit. (Default: autodetect systemd)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;WAYLAND=(0|1)&lt;/code&gt;: Disable/Enable wayland support. (Default: 1 (enabled))&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DUNSTIFY=(0|1)&lt;/code&gt;: Disable/Enable the libnotify dunstctl utility. (Default: 1 (enabled))&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SERVICEDIR_SYSTEMD=&amp;lt;PATH&amp;gt;&lt;/code&gt;: The path to put the systemd user service file. Unused, if &lt;code&gt;SYSTEMD=0&lt;/code&gt;. (Default: &lt;code&gt;${PREFIX}/lib/systemd/user&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SERVICEDIR_DBUS=&amp;lt;PATH&amp;gt;&lt;/code&gt;: The path to put the dbus service file. (Default: &lt;code&gt;${DATADIR}/dbus-1/services&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXTRA_CFLAGS=&amp;lt;FLAGS&amp;gt;&lt;/code&gt;: Additional flags for the compiler.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure to run all make calls with the same parameter set. So when building with &lt;code&gt;make PREFIX=/usr&lt;/code&gt;, you have to install it with &lt;code&gt;make PREFIX=/usr install&lt;/code&gt;, too.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes on default of XDG_CONFIG_DIRS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dunst uses a different default (${SYSCONFDIR}) for XDG_CONFIG_DIRS at runtime. This is a slight digression from the recommended value in the XDG Base Directory Specification (/etc/xdg), because the default config file gets installed to ${SYSCONFDIR/dunst/dunstrc} to avoid conflicts with /etc/xdg/dunst/dunstrc which might have been installed from a distribution repository. If you do want dunst to use the spec&#39;s recommended default, set XDG_CONFIG_DIR=/etc/xdg at runtime or SYSCONFDIR=/etc/xdg at compile time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes on SYSCONFFILE&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Changing SYSCONFFILE does not affect the search for config files, meaning it will not take effect if you choose to install dunstrc to a location that cannot be found by the algorithm outlined in the FILES section of dunst(1).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make install&lt;/code&gt; will not overwrite an already existing ${SYSCONFFILE} (i.e. /usr/local/etc/xdg/dunst/dunstrc), see SYSCONF_FORCE_NEW above. This is so you do not lose local changes to said file on upgrade. However, it is recommended to leave that file untouched and use a more important config location to override settings, see the FILES section in dunst(1) for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make uninstall&lt;/code&gt; will not remove ${SYSCONFFILE}, use &lt;code&gt;make uninstall-purge&lt;/code&gt; if you do want it removed as well.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are very welcome. Before contributing, make sure to look at the contribution documentation in &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/HACKING.md&#34;&gt;HACKING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure you test your code and where possible add automated tests. These tests are also checked on memory leaks (with &lt;code&gt;make test-valgrind&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Cannot set settings via command line&lt;/h3&gt; &#xA;&lt;p&gt;This functionality was removed during the refactor. It might be re-added later in some form. See &lt;a href=&#34;https://github.com/dunst-project/dunst/issues/940&#34;&gt;#940&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Bug reports&lt;/h2&gt; &#xA;&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/dunst-project/dunst/issues&#34;&gt;issue tracker&lt;/a&gt; provided by GitHub to send us bug reports or feature requests.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;a href=&#34;https://gist.github.com/MCotocel/2b34486ae59ccda4319fcb93454d212c&#34;&gt; &lt;img alt=&#34;screenshot3&#34; src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/screenshot3_cut.png&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://gitlab.manjaro.org/profiles-and-settings/manjaro-theme-settings/-/blob/master/skel/.config/dunst/dunstrc&#34;&gt; &lt;img alt=&#34;progress&#34; src=&#34;https://user-images.githubusercontent.com/23078054/102542111-98b01e00-40b1-11eb-967e-bc952430bd06.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fwsmit&#34;&gt;Friso Smit&lt;/a&gt; &lt;a href=&#34;mailto:fw.smit01@gmail.com&#34;&gt;fw.smit01@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tsipinakis&#34;&gt;Nikos Tsipinakis&lt;/a&gt; &lt;a href=&#34;mailto:nikos@tsipinakis.com&#34;&gt;nikos@tsipinakis.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bebehei&#34;&gt;Benedikt Heine&lt;/a&gt; &lt;a href=&#34;mailto:bebe@bebehei.de&#34;&gt;bebe@bebehei.de&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Written by Sascha Kruse &lt;a href=&#34;mailto:dunst@knopwob.de&#34;&gt;dunst@knopwob.de&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2013 Sascha Kruse and contributors (see &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for licensing information)&lt;/p&gt;</summary>
  </entry>
</feed>