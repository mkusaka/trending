<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-18T01:49:15Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>confluentinc/librdkafka</title>
    <updated>2023-06-18T01:49:15Z</updated>
    <id>tag:github.com,2023-06-18:/confluentinc/librdkafka</id>
    <link href="https://github.com/confluentinc/librdkafka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Apache Kafka C/C++ library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;librdkafka - the Apache Kafka C/C++ client library&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (c) 2012-2022, &lt;a href=&#34;http://www.edenhill.se/&#34;&gt;Magnus Edenhill&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/edenhill/librdkafka&#34;&gt;https://github.com/edenhill/librdkafka&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;librdkafka&lt;/strong&gt; is a C library implementation of the &lt;a href=&#34;https://kafka.apache.org/&#34;&gt;Apache Kafka&lt;/a&gt; protocol, providing Producer, Consumer and Admin clients. It was designed with message delivery reliability and high performance in mind, current figures exceed 1 million msgs/second for the producer and 3 million msgs/second for the consumer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;librdkafka&lt;/strong&gt; is licensed under the 2-clause BSD license.&lt;/p&gt; &#xA;&lt;p&gt;KAFKA is a registered trademark of The Apache Software Foundation and has been licensed for use by librdkafka. librdkafka has no affiliation with and is not endorsed by The Apache Software Foundation.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full Exactly-Once-Semantics (EOS) support&lt;/li&gt; &#xA; &lt;li&gt;High-level producer, including Idempotent and Transactional producers&lt;/li&gt; &#xA; &lt;li&gt;High-level balanced KafkaConsumer (requires broker &amp;gt;= 0.9)&lt;/li&gt; &#xA; &lt;li&gt;Simple (legacy) consumer&lt;/li&gt; &#xA; &lt;li&gt;Admin client&lt;/li&gt; &#xA; &lt;li&gt;Compression: snappy, gzip, lz4, zstd&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edenhill/librdkafka/wiki/Using-SSL-with-librdkafka&#34;&gt;SSL&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edenhill/librdkafka/wiki/Using-SASL-with-librdkafka&#34;&gt;SASL&lt;/a&gt; (GSSAPI/Kerberos/SSPI, PLAIN, SCRAM, OAUTHBEARER) support&lt;/li&gt; &#xA; &lt;li&gt;Full list of &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/librdkafka/master/INTRODUCTION.md#supported-kips&#34;&gt;supported KIPs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Broker version support: &amp;gt;=0.8 (see &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/librdkafka/master/INTRODUCTION.md#broker-version-compatibility&#34;&gt;Broker version compatibility&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Guaranteed API stability for C &amp;amp; C++ APIs (ABI safety guaranteed for C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/librdkafka/master/STATISTICS.md&#34;&gt;Statistics&lt;/a&gt; metrics&lt;/li&gt; &#xA; &lt;li&gt;Debian package: librdkafka1 and librdkafka-dev in Debian and Ubuntu&lt;/li&gt; &#xA; &lt;li&gt;RPM package: librdkafka and librdkafka-devel&lt;/li&gt; &#xA; &lt;li&gt;Gentoo package: dev-libs/librdkafka&lt;/li&gt; &#xA; &lt;li&gt;Portable: runs on Linux, MacOS X, Windows, Solaris, FreeBSD, AIX, ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Public API in &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/librdkafka/master/src/rdkafka.h&#34;&gt;C header&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/librdkafka/master/src-cpp/rdkafkacpp.h&#34;&gt;C++ header&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Introduction and manual in &lt;a href=&#34;https://github.com/edenhill/librdkafka/raw/master/INTRODUCTION.md&#34;&gt;INTRODUCTION.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Configuration properties in &lt;a href=&#34;https://github.com/edenhill/librdkafka/raw/master/CONFIGURATION.md&#34;&gt;CONFIGURATION.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Statistics metrics in &lt;a href=&#34;https://github.com/edenhill/librdkafka/raw/master/STATISTICS.md&#34;&gt;STATISTICS.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edenhill/librdkafka/wiki&#34;&gt;Frequently asked questions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Step-by-step tutorial &lt;a href=&#34;https://developer.confluent.io/get-started/c/&#34;&gt;Getting Started with Apache Kafka and C/C++&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The &lt;code&gt;master&lt;/code&gt; branch is actively developed, use latest &lt;a href=&#34;https://github.com/edenhill/librdkafka/releases&#34;&gt;release&lt;/a&gt; for production use.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Installing prebuilt packages&lt;/h2&gt; &#xA;&lt;p&gt;On Mac OSX, install librdkafka with homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install librdkafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Debian and Ubuntu, install librdkafka from the Confluent APT repositories, see instructions &lt;a href=&#34;https://docs.confluent.io/current/installation/installing_cp/deb-ubuntu.html#get-the-software&#34;&gt;here&lt;/a&gt; and then install librdkafka:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ apt install librdkafka-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On RedHat, CentOS, Fedora, install librdkafka from the Confluent YUM repositories, instructions &lt;a href=&#34;https://docs.confluent.io/current/installation/installing_cp/rhel-centos.html#get-the-software&#34;&gt;here&lt;/a&gt; and then install librdkafka:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ yum install librdkafka-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows, reference &lt;a href=&#34;https://www.nuget.org/packages/librdkafka.redist/&#34;&gt;librdkafka.redist&lt;/a&gt; NuGet package in your Visual Studio project.&lt;/p&gt; &#xA;&lt;p&gt;For other platforms, follow the source building instructions below.&lt;/p&gt; &#xA;&lt;h2&gt;Installing librdkafka using vcpkg&lt;/h2&gt; &#xA;&lt;p&gt;You can download and install librdkafka using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install vcpkg if not already installed&#xA;$ git clone https://github.com/Microsoft/vcpkg.git&#xA;$ cd vcpkg&#xA;$ ./bootstrap-vcpkg.sh&#xA;$ ./vcpkg integrate install&#xA;&#xA;# Install librdkafka&#xA;$ vcpkg install librdkafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The librdkafka package in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;The GNU toolchain&#xA;GNU make&#xA;pthreads&#xA;zlib-dev (optional, for gzip compression support)&#xA;libssl-dev (optional, for SSL and SASL SCRAM support)&#xA;libsasl2-dev (optional, for SASL GSSAPI support)&#xA;libzstd-dev (optional, for ZStd compression support)&#xA;libcurl-dev (optional, for SASL OAUTHBEARER OIDC support)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Static linking of ZStd (requires zstd &amp;gt;= 1.2.1) in the producer enables encoding the original size in the compression frame header, which will speed up the consumer. Use &lt;code&gt;STATIC_LIB_libzstd=/path/to/libzstd.a ./configure --enable-static&lt;/code&gt; to enable static ZStd linking. MacOSX example: &lt;code&gt;STATIC_LIB_libzstd=$(brew ls -v zstd | grep libzstd.a$) ./configure --enable-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  ./configure&#xA;  # Or, to automatically install dependencies using the system&#39;s package manager:&#xA;  # ./configure --install-deps&#xA;  # Or, build dependencies from source:&#xA;  # ./configure --install-deps --source-deps-only&#xA;&#xA;  make&#xA;  sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: See &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/librdkafka/master/README.win32&#34;&gt;README.win32&lt;/a&gt; for instructions how to build on Windows with Microsoft Visual Studio.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: See &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/librdkafka/master/packaging/cmake/README.md&#34;&gt;CMake instructions&lt;/a&gt; for experimental CMake build (unsupported).&lt;/p&gt; &#xA;&lt;h2&gt;Usage in code&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://developer.confluent.io/get-started/c/&#34;&gt;getting Started with Apache Kafka and C/C++&lt;/a&gt; for a basic tutorial.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/librdkafka/master/examples/&#34;&gt;examples directory&lt;/a&gt; for code using:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Producers: basic producers, idempotent producers, transactional producers.&lt;/li&gt; &#xA;   &lt;li&gt;Consumers: basic consumers, reading batches of messages.&lt;/li&gt; &#xA;   &lt;li&gt;Performance and latency testing tools.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Refer to the &lt;a href=&#34;https://github.com/confluentinc/examples/tree/master/clients/cloud/c&#34;&gt;examples GitHub repo&lt;/a&gt; for code connecting to a cloud streaming data service based on Apache Kafka&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Link your program with &lt;code&gt;-lrdkafka&lt;/code&gt; (C) or &lt;code&gt;-lrdkafka++&lt;/code&gt; (C++).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Commercial support&lt;/h2&gt; &#xA;&lt;p&gt;Commercial support is available from &lt;a href=&#34;https://www.confluent.io/&#34;&gt;Confluent Inc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Only the &lt;a href=&#34;https://github.com/edenhill/librdkafka/releases&#34;&gt;latest official release&lt;/a&gt; is supported for community members.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;File bug reports and feature requests using &lt;a href=&#34;https://github.com/edenhill/librdkafka/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Questions and discussions are welcome on the &lt;a href=&#34;https://github.com/edenhill/librdkafka/discussions&#34;&gt;Discussions&lt;/a&gt; forum, and on the &lt;a href=&#34;https://launchpass.com/confluentcommunity&#34;&gt;Confluent Community slack&lt;/a&gt; #clients channel.&lt;/p&gt; &#xA;&lt;h1&gt;Language bindings&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C#/.NET: &lt;a href=&#34;https://github.com/confluentinc/confluent-kafka-dotnet&#34;&gt;confluent-kafka-dotnet&lt;/a&gt; (based on &lt;a href=&#34;https://github.com/ah-/rdkafka-dotnet&#34;&gt;rdkafka-dotnet&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;C++: &lt;a href=&#34;https://github.com/mfontanini/cppkafka&#34;&gt;cppkafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++: &lt;a href=&#34;https://github.com/Morgan-Stanley/modern-cpp-kafka&#34;&gt;modern-cpp-kafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Common Lisp: &lt;a href=&#34;https://github.com/SahilKang/cl-rdkafka&#34;&gt;cl-rdkafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;D (C-like): &lt;a href=&#34;https://github.com/DlangApache/librdkafka/&#34;&gt;librdkafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;D (C++-like): &lt;a href=&#34;https://github.com/tamediadigital/librdkafka-d&#34;&gt;librdkafkad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Erlang: &lt;a href=&#34;https://github.com/silviucpp/erlkaf&#34;&gt;erlkaf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go: &lt;a href=&#34;https://github.com/confluentinc/confluent-kafka-go&#34;&gt;confluent-kafka-go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Haskell (kafka, conduit, avro, schema registry): &lt;a href=&#34;https://github.com/haskell-works/hw-kafka&#34;&gt;hw-kafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kotlin Native: &lt;a href=&#34;https://github.com/icemachined/kafka-kotlin-native&#34;&gt;Kafka-Kotlin-Native&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lua: &lt;a href=&#34;https://github.com/mistsv/luardkafka&#34;&gt;luardkafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Node.js: &lt;a href=&#34;https://github.com/Blizzard/node-rdkafka&#34;&gt;node-rdkafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OCaml: &lt;a href=&#34;https://github.com/didier-wenzek/ocaml-kafka&#34;&gt;ocaml-kafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Perl: &lt;a href=&#34;https://github.com/bookingcom/perl-Net-Kafka&#34;&gt;Net::Kafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PHP: &lt;a href=&#34;https://github.com/arnaud-lb/php-rdkafka&#34;&gt;php-rdkafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PHP: &lt;a href=&#34;https://github.com/php-kafka/php-simple-kafka-client&#34;&gt;php-simple-kafka-client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Python: &lt;a href=&#34;https://github.com/confluentinc/confluent-kafka-python&#34;&gt;confluent-kafka-python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Python: &lt;a href=&#34;https://github.com/Parsely/pykafka&#34;&gt;PyKafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ruby: &lt;a href=&#34;https://github.com/reiseburo/hermann&#34;&gt;Hermann&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ruby: &lt;a href=&#34;https://github.com/appsignal/rdkafka-ruby&#34;&gt;rdkafka-ruby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rust: &lt;a href=&#34;https://github.com/fede1024/rust-rdkafka&#34;&gt;rust-rdkafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tcl: &lt;a href=&#34;https://github.com/flightaware/kafkatcl&#34;&gt;KafkaTcl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Shell: &lt;a href=&#34;https://github.com/edenhill/kafkacat&#34;&gt;kafkacat&lt;/a&gt; - Apache Kafka command line tool&lt;/li&gt; &#xA; &lt;li&gt;Swift: &lt;a href=&#34;https://github.com/PerfectlySoft/Perfect-Kafka&#34;&gt;Perfect-Kafka&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/edenhill/librdkafka/wiki/Powered-by-librdkafka&#34;&gt;Powered by librdkafka&lt;/a&gt; for an incomplete list of librdkafka users.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>snesrev/smw</title>
    <updated>2023-06-18T01:49:15Z</updated>
    <id>tag:github.com,2023-06-18:/snesrev/smw</id>
    <link href="https://github.com/snesrev/smw" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Smw&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;smw&lt;/h1&gt; &#xA;&lt;p&gt;Our discord server is: &lt;a href=&#34;https://discord.gg/AJJbJAzNNJ&#34;&gt;https://discord.gg/AJJbJAzNNJ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Early version. It has bugs and the code is messy.&lt;/p&gt; &#xA;&lt;p&gt;You must self-build for now. Easy method on Windows (no installs, terminal, or big downloads):&lt;br&gt; (1) Click the green button &#34;Code &amp;gt; Download ZIP&#34; on the github page and extract the ZIP&lt;br&gt; (2) Place the USA rom named smw.sfc in that folder (crc32=b1ed489)&lt;br&gt; (3) Download &lt;a href=&#34;https://github.com/FitzRoyX/tinycc/releases/download/tcc_20230519/tcc_20230519.zip&#34;&gt;TCC&lt;/a&gt; and &lt;a href=&#34;https://github.com/libsdl-org/SDL/releases/download/release-2.26.5/SDL2-devel-2.26.5-VC.zip&#34;&gt;SDL2&lt;/a&gt; and extract each ZIP into the &#34;third-party&#34; subfolder&lt;br&gt; (4) Double-click run_with_tcc.bat in the main dir. This will create smw.exe and run it.&lt;br&gt; (5) Configure with smw.ini&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;For other platforms and compilers, see: &lt;a href=&#34;https://github.com/snesrev/smw/raw/main/BUILDING.md&#34;&gt;https://github.com/snesrev/smw/blob/main/BUILDING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When running, it runs an emulated version in the background and compares the ram state every frame. If it detects a mismatch, it saves a snapshot in saves/ and displays a counter on screen counting down from 300. Please submit these bug snapshots on discord so that they can be fixed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>olikraus/u8g2</title>
    <updated>2023-06-18T01:49:15Z</updated>
    <id>tag:github.com,2023-06-18:/olikraus/u8g2</id>
    <link href="https://github.com/olikraus/u8g2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;U8glib library for monochrome displays, version 2&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/olikraus/u8g2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/olikraus/u8g2/ref/u8g2_logo_transparent_orange.png&#34; alt=&#34;https://raw.githubusercontent.com/wiki/olikraus/u8g2/ref/u8g2_logo_transparent_orange.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;U8g2: Library for monochrome displays, version 2&lt;/p&gt; &#xA;&lt;p&gt;U8g2 is a monochrome graphics library for embedded devices. U8g2 supports monochrome OLEDs and LCDs, which include the following controllers: SSD1305, SSD1306, SSD1309, SSD1312, SSD1316, SSD1318, SSD1320, SSD1322, SSD1325, SSD1327, SSD1329, SSD1606, SSD1607, SH1106, SH1107, SH1108, SH1122, T6963, RA8835, LC7981, PCD8544, PCF8812, HX1230, UC1601, UC1604, UC1608, UC1610, UC1611, UC1617, UC1638, UC1701, ST7511, ST7528, ST7565, ST7567, ST7571, ST7586, ST7588, ST75160, ST75256, ST75320, NT7534, ST7920, IST3020, IST3088, IST7920, LD7032, KS0108, KS0713, HD44102, T7932, SED1520, SBN1661, IL3820, MAX7219, GP1287, GP1247, GU800 (see &lt;a href=&#34;https://github.com/olikraus/u8g2/wiki/u8g2setupcpp&#34;&gt;here&lt;/a&gt; for a full list).&lt;/p&gt; &#xA;&lt;p&gt;The Arduino library U8g2 can be installed from the library manager of the Arduino IDE. U8g2 also includes U8x8 library:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;U8g2 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Includes all graphics procedures (line/box/circle draw).&lt;/li&gt; &#xA;   &lt;li&gt;Supports many fonts. (Almost) no restriction on the font height.&lt;/li&gt; &#xA;   &lt;li&gt;Requires some memory in the microcontroller to render the display.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;U8x8 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Text output only (character) device.&lt;/li&gt; &#xA;   &lt;li&gt;Only fonts allowed with fit into a 8x8 pixel grid.&lt;/li&gt; &#xA;   &lt;li&gt;Writes directly to the display. No buffer in the microcontroller required.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/olikraus/u8g2/wiki&#34;&gt;Setup Guide and Reference Manual&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>