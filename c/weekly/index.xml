<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-28T01:36:51Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>htop-dev/htop</title>
    <updated>2024-04-28T01:36:51Z</updated>
    <id>tag:github.com,2024-04-28:/htop-dev/htop</id>
    <link href="https://github.com/htop-dev/htop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;htop - an interactive process viewer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://htop.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/htop-dev/htop/main/htop.png&#34; alt=&#34;htop logo&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/htop-dev/htop/actions&#34;&gt;&lt;img src=&#34;https://github.com/htop-dev/htop/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/21665&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/21665/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://groups.io/g/htop&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Mailing%20List-htop-blue.svg?sanitize=true&#34; alt=&#34;Mailing List&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://web.libera.chat/#htop&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/IRC-htop-blue.svg?sanitize=true&#34; alt=&#34;IRC #htop&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/htop-dev/htop/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/htop-dev/htop.svg?sanitize=true&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/htop/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/htop.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/htop-dev/htop/main/COPYING?raw=true&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v2+-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v2+&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/htop-dev/htop/main/docs/images/screenshot.png?raw=true&#34; alt=&#34;Screenshot of htop&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;htop&lt;/code&gt; is a cross-platform interactive process viewer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;htop&lt;/code&gt; allows scrolling the list of processes vertically and horizontally to see their full command lines and related information like memory and CPU consumption. Also system wide information, like load average or swap usage, is shown.&lt;/p&gt; &#xA;&lt;p&gt;The information displayed is configurable through a graphical setup and can be sorted and filtered interactively.&lt;/p&gt; &#xA;&lt;p&gt;Tasks related to processes (e.g. killing and renicing) can be done without entering their PIDs.&lt;/p&gt; &#xA;&lt;p&gt;Running &lt;code&gt;htop&lt;/code&gt; requires &lt;code&gt;ncurses&lt;/code&gt; libraries, typically named libncurses(w).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;htop&lt;/code&gt; is written in C.&lt;/p&gt; &#xA;&lt;p&gt;For more information and details visit &lt;a href=&#34;https://htop.dev&#34;&gt;htop.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisite&lt;/h3&gt; &#xA;&lt;p&gt;List of build-time dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;standard GNU autotools-based C toolchain &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;C99 compliant compiler&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;autoconf&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;automake&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;autotools&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ncurses&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note about &lt;code&gt;ncurses&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;htop&lt;/code&gt; requires &lt;code&gt;ncurses&lt;/code&gt; 6.0. Be aware the appropriate package is sometimes still called libncurses5 (on Debian/Ubuntu). Also &lt;code&gt;ncurses&lt;/code&gt; usually comes in two flavours:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;With Unicode support.&lt;/li&gt; &#xA;  &lt;li&gt;Without Unicode support.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;This is also something that is reflected in the package name on Debian/Ubuntu (via the additional &#39;w&#39; - &#39;w&#39;ide character support).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;List of additional build-time dependencies (based on feature flags):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sensors&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hwloc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;libcap&lt;/code&gt; (v2.21 or later)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;libnl-3&lt;/code&gt; and &lt;code&gt;libnl-genl-3&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install these and other required packages for C development from your package manager.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Debian/Ubuntu&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt install libncursesw5-dev autotools-dev autoconf automake build-essential&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fedora/RHEL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo dnf install ncurses-devel automake autoconf gcc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Archlinux/Manjaro&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo pacman -S ncurses automake autoconf gcc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install ncurses automake autoconf gcc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compile from source:&lt;/h3&gt; &#xA;&lt;p&gt;To compile from source, download from the Git repository (&lt;code&gt;git clone&lt;/code&gt; or downloads from &lt;a href=&#34;https://github.com/htop-dev/htop/releases/&#34;&gt;GitHub releases&lt;/a&gt;), then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./autogen.sh &amp;amp;&amp;amp; ./configure &amp;amp;&amp;amp; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;To install on the local system run &lt;code&gt;make install&lt;/code&gt;. By default &lt;code&gt;make install&lt;/code&gt; installs into &lt;code&gt;/usr/local&lt;/code&gt;. To change this path use &lt;code&gt;./configure --prefix=/some/path&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build Options&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;htop&lt;/code&gt; has several build-time options to enable/disable additional features.&lt;/p&gt; &#xA;&lt;h4&gt;Generic&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-unicode&lt;/code&gt;: enable Unicode support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dependency: &lt;em&gt;libncursesw&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;yes&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-affinity&lt;/code&gt;: enable &lt;code&gt;sched_setaffinity(2)&lt;/code&gt; and &lt;code&gt;sched_getaffinity(2)&lt;/code&gt; for affinity support; conflicts with hwloc &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;check&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-hwloc&lt;/code&gt;: enable hwloc support for CPU affinity; disables affinity support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dependency: &lt;em&gt;libhwloc&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;no&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-static&lt;/code&gt;: build a static htop binary; hwloc and delay accounting are not supported &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;no&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-debug&lt;/code&gt;: Enable asserts and internal sanity checks; implies a performance penalty &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;no&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Performance Co-Pilot&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-pcp&lt;/code&gt;: enable Performance Co-Pilot support via a new pcp-htop utility &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dependency: &lt;em&gt;libpcp&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;no&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-sensors&lt;/code&gt;: enable libsensors(3) support for reading temperature data &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dependencies: &lt;em&gt;libsensors-dev&lt;/em&gt;(build-time), at runtime &lt;em&gt;libsensors&lt;/em&gt; is loaded via &lt;code&gt;dlopen(3)&lt;/code&gt; if available&lt;/li&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;check&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-capabilities&lt;/code&gt;: enable Linux capabilities support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dependency: &lt;em&gt;libcap&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;check&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--with-proc&lt;/code&gt;: location of a Linux-compatible proc filesystem &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;/proc&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-openvz&lt;/code&gt;: enable OpenVZ support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;no&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-vserver&lt;/code&gt;: enable VServer support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;no&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-ancient-vserver&lt;/code&gt;: enable ancient VServer support (implies &lt;code&gt;--enable-vserver&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;no&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-delayacct&lt;/code&gt;: enable Linux delay accounting support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dependencies: &lt;em&gt;libnl-3-dev&lt;/em&gt;(build-time) and &lt;em&gt;libnl-genl-3-dev&lt;/em&gt;(build-time), at runtime &lt;em&gt;libnl-3&lt;/em&gt; and &lt;em&gt;libnl-genl-3&lt;/em&gt; are loaded via &lt;code&gt;dlopen(3)&lt;/code&gt; if available and requested&lt;/li&gt; &#xA;   &lt;li&gt;default: &lt;em&gt;check&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Runtime dependencies:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;htop&lt;/code&gt; has a set of fixed minimum runtime dependencies, which is kept as minimal as possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ncurses&lt;/code&gt; libraries for terminal handling (wide character support).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Runtime optional dependencies:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;htop&lt;/code&gt; has a set of fixed optional dependencies, depending on build/configure option used:&lt;/p&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;libdl&lt;/code&gt;, if not building a static binary, is always required when support for optional dependencies (i.e. &lt;code&gt;libsensors&lt;/code&gt;, &lt;code&gt;libsystemd&lt;/code&gt;) is present.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;libcap&lt;/code&gt;, user-space interfaces to POSIX 1003.1e capabilities, is always required when &lt;code&gt;--enable-capabilities&lt;/code&gt; was used to configure &lt;code&gt;htop&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;libsensors&lt;/code&gt;, readout of temperatures and CPU speeds, is optional even when &lt;code&gt;--enable-sensors&lt;/code&gt; was used to configure &lt;code&gt;htop&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;libsystemd&lt;/code&gt; is optional when &lt;code&gt;--enable-static&lt;/code&gt; was not used to configure &lt;code&gt;htop&lt;/code&gt;. If building statically and &lt;code&gt;libsystemd&lt;/code&gt; is not found by &lt;code&gt;configure&lt;/code&gt;, support for the systemd meter is disabled entirely.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;libnl-3&lt;/code&gt; and &lt;code&gt;libnl-genl-3&lt;/code&gt;, if &lt;code&gt;htop&lt;/code&gt; was configured with &lt;code&gt;--enable-delayacct&lt;/code&gt; and delay accounting process fields are active.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;htop&lt;/code&gt; checks for the availability of the actual runtime libraries as &lt;code&gt;htop&lt;/code&gt; runs.&lt;/p&gt; &#xA;&lt;h4&gt;BSD&lt;/h4&gt; &#xA;&lt;p&gt;On most BSD systems &lt;code&gt;kvm&lt;/code&gt; is a requirement to read kernel information.&lt;/p&gt; &#xA;&lt;p&gt;More information on required and optional dependencies can be found in &lt;a href=&#34;https://raw.githubusercontent.com/htop-dev/htop/main/configure.ac&#34;&gt;configure.ac&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See the manual page (&lt;code&gt;man htop&lt;/code&gt;) or the help menu (&lt;strong&gt;F1&lt;/strong&gt; or &lt;strong&gt;h&lt;/strong&gt; inside &lt;code&gt;htop&lt;/code&gt;) for a list of supported key commands.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you have trouble running &lt;code&gt;htop&lt;/code&gt; please consult your operating system / Linux distribution documentation for getting support and filing bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Bugs, development feedback&lt;/h2&gt; &#xA;&lt;p&gt;We have a &lt;a href=&#34;https://htop.dev/mailinglist.html&#34;&gt;development mailing list&lt;/a&gt;. Feel free to subscribe for release announcements or asking questions on the development of &lt;code&gt;htop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also join our IRC channel &lt;a href=&#34;https://web.libera.chat/#htop&#34;&gt;#htop on Libera.Chat&lt;/a&gt; and talk to the developers there.&lt;/p&gt; &#xA;&lt;p&gt;If you have found an issue within the source of &lt;code&gt;htop&lt;/code&gt;, please check whether this has already been reported in our &lt;a href=&#34;https://github.com/htop-dev/htop/issues&#34;&gt;GitHub issue tracker&lt;/a&gt;. If not, please file a new issue describing the problem you have found, the potential location in the source code you are referring to and a possible fix if available.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;htop&lt;/code&gt; was invented, developed and maintained by &lt;a href=&#34;https://hisham.hm/&#34;&gt;Hisham Muhammad&lt;/a&gt; from 2004 to 2019. His &lt;a href=&#34;https://github.com/hishamhm/htop/&#34;&gt;legacy repository&lt;/a&gt; has been archived to preserve the history.&lt;/p&gt; &#xA;&lt;p&gt;In 2020 a &lt;a href=&#34;https://github.com/orgs/htop-dev/people&#34;&gt;team&lt;/a&gt; took over the development amicably and continues to maintain &lt;code&gt;htop&lt;/code&gt; collaboratively.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GNU General Public License, version 2 (GPL-2.0) or, at your option, any later version.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>loopj/short-stack</title>
    <updated>2024-04-28T01:36:51Z</updated>
    <id>tag:github.com,2024-04-28:/loopj/short-stack</id>
    <link href="https://github.com/loopj/short-stack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;World&#39;s Smallest Nintendo Wii, using a trimmed motherboard and custom stacked PCBs&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/logo-black.svg#gh-light-mode-only&#34; alt=&#34;Short Stack&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/logo-white.svg#gh-dark-mode-only&#34; alt=&#34;Short Stack&#34;&gt; &lt;/h1&gt; &#xA; &lt;h4&gt;World&#39;s Smallest Nintendo Wii, using a trimmed motherboard and custom stacked PCBs&lt;/h4&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#features&#34;&gt;Features&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#size--scale&#34;&gt;Size &amp;amp; Scale&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#components&#34;&gt;Components&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#build-guide&#34;&gt;Build Guide&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#special-thanks&#34;&gt;Special Thanks&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/render-blue.jpg&#34; alt=&#34;Short Stack Render&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;World&#39;s smallest &#34;to scale&#34; Wii console&lt;/li&gt; &#xA; &lt;li&gt;Powered by USB-C&lt;/li&gt; &#xA; &lt;li&gt;HDMI for lossless digital audio and video (powered by &lt;a href=&#34;https://github.com/ikorb/gcvideo&#34;&gt;GCVideo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Bluetooth for Wii remotes and accessories&lt;/li&gt; &#xA; &lt;li&gt;MicroSD card stores games and saves, instead of disc drive &amp;amp; memory cards&lt;/li&gt; &#xA; &lt;li&gt;4 GameCube controller ports&lt;/li&gt; &#xA; &lt;li&gt;Power, reset, and sync buttons&lt;/li&gt; &#xA; &lt;li&gt;Power indicator LED and iconic blue glowing disc slot&lt;/li&gt; &#xA; &lt;li&gt;Soft shutdown, power on/off via Wiimote&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Size &amp;amp; Scale&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;strong&gt;1:2.38 scale&lt;/strong&gt; model of an original Nintendo Wii console, but since that is hard to visualize here are some other stats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Same size as a typical deck of playing cards&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;7.4% the volume&lt;/strong&gt; of an original Wii console&lt;/li&gt; &#xA; &lt;li&gt;You could fit &lt;strong&gt;13.5&lt;/strong&gt; of these inside an original Wii&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/deck-of-cards.jpg&#34; width=&#34;48%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/size-comparison.png&#34; width=&#34;48%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m pretty sure this sets the record for the smallest functional scale-model Wii console, but let me know if I&#39;m wrong!&lt;/p&gt; &#xA;&lt;h3&gt;Could we go smaller?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! It is definitely possible to go smaller than this. My &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/trim.png&#34;&gt;version of the Omega trim&lt;/a&gt; keeps all four main mounting holes, which makes it around 7mm wider than a classic Omega trim. Additionally &lt;a href=&#34;https://twitter.com/Weskmods&#34;&gt;Wesk&lt;/a&gt; has managed to get a Wii motherboard down to 52x52mm on his final destination trim, which is a a full 10mm narrower than my trim. I estimate you could reduce the volume by a further 25-30% without losing any functionality, but it would be an incredibly tight fit and tricky to assemble.&lt;/p&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;As the name implies, &lt;em&gt;Short Stack&lt;/em&gt; is built from a stack of custom PCBs, and a custom heatsink, that are all designed to fit together in a compact and modular way.&lt;/p&gt; &#xA;&lt;h3&gt;A modular motherboard&lt;/h3&gt; &#xA;&lt;p&gt;Making a tiny build like this is made possible by trimming the Wii motherboard down to the bare essentials. The result is a board which is just &lt;em&gt;62x62mm&lt;/em&gt;, but still contains the CPU, GPU, RAM and flash memory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/motherboard-front.jpg&#34; width=&#34;48%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/motherboard-back.jpg&#34; width=&#34;48%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since we removed the original power circuitry and trimmed off the USB, Bluetooth, and GameCube connectors, we need to provide power and data to the board another way. I designed a couple of boards which solder directly to the front of a trimmed Wii motherboard to provide power and data, which help avoid a tangled mess of wires.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/loopj/wii-power-strip&#34;&gt;Wii Power Strip&lt;/a&gt; supplies power to the Wii motherboards using a Molex Pico-Lock connector, and additionally has footprints to help relocate of a couple of capacitors which are typically removed when trimming a Wii.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/loopj/periphlex&#34;&gt;Periphlex&lt;/a&gt; is a flex PCB which breaks out the Bluetooth, USB and GameCube controller data lines, as well as the power, shutdown, and reset GPIOs. These are then made available via a 14-pin FFC connector. This approach replaces 11 magnet wires with a single, removable ribbon cable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/periphlex-render.png&#34; alt=&#34;Periphlex&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;On the back of the motherboard, I&#39;m using two open-source boards designed by the very talented &lt;a href=&#34;https://github.com/mackieks&#34;&gt;YveltalGriffin&lt;/a&gt;. &lt;a href=&#34;https://github.com/mackieks/fujiflex&#34;&gt;fujiflex&lt;/a&gt; provides digital A/V output using GCVideo, and &lt;a href=&#34;https://github.com/mackieks/nandFlex&#34;&gt;nandFlex&lt;/a&gt; relocates the Wii&#39;s NAND memory chip, to enable the tight trim.&lt;/p&gt; &#xA;&lt;h3&gt;Custom PCBs&lt;/h3&gt; &#xA;&lt;p&gt;In addition to the modular boards on the motherboard, I designed two PCBs specific to Short Stack which provide the rest of the functionality for the console.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;main board&lt;/em&gt; PCB hosts the power regulators, USB to microSD logic, HDMI connector, GameCube ports, and a microcontroller for power management. A 14-pin ribbon cable connects this board to the Wii motherboard via &lt;em&gt;Periphlex&lt;/em&gt;, and a power cable delivers power to the &lt;em&gt;Power Strip&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/main-board.jpg&#34; alt=&#34;Main Board&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;front panel&lt;/em&gt; PCB hosts the power, reset, and sync buttons, as well as the power LED and disc slot LEDs. This board connects to the main board via a short 8-pin ribbon cable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/front-panel.jpg&#34; alt=&#34;Front Panel Board&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since the GameCube controller connectors on the original Wii wouldn&#39;t fit cleanly on a build of this size, I use TRRS headphone connectors instead. This is the exact same approach used on the amazing &lt;a href=&#34;https://bitbuilt.net/forums/index.php?threads/gc-nano-the-worlds-smallest-gamecube.5697/&#34;&gt;GC Nano&lt;/a&gt; and in fact I made sure the dongles are pinout compatible!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/gamecube-dongle.jpg&#34; alt=&#34;GameCube dongle&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cooling&lt;/h3&gt; &#xA;&lt;p&gt;The final part of the &#34;stack&#34; is a custom heatsink which is designed to be as low profile as possible, while still providing adequate cooling for the Wii&#39;s CPU and GPU. The heatsink is designed to be machined from aluminum or copper, and incorporates mounting holes which align with those on the Wii motherboard.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/heatsink.jpg&#34; alt=&#34;Heatsink&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I managed to find a tiny 5V blower fan (&lt;a href=&#34;https://catalog.pelonistechnologies.com/item/air-g-series-micro-fans-and-micro-blowers/micro-fans-and-micro-blowers/agb208n&#34;&gt;Pelonis AGB208N&lt;/a&gt;) which measures just 20x20x8mm and somehow puts out 0.84 CFM of air. This blows air through the heatsink fins, out the side of the case.&lt;/p&gt; &#xA;&lt;h3&gt;Case&lt;/h3&gt; &#xA;&lt;p&gt;The stack is housed in a custom 3D printed case, secured with four M2.5 screws and spacers. The rest of case is assembled using self-tapping M1.2 screws. The screw locations and fan vents are positioned to match the original Wii case as closely as possible, to minimize visible screws.&lt;/p&gt; &#xA;&lt;p&gt;You can access files on the SD card by connecting the console to a computer via USB, but I also included an access panel on the front of the case where the original Wii SD card slot is found. This panel is held in place by magnets and can be removed to access the SD card without opening the case. Shout out to Wesk for the magnet idea!&lt;/p&gt; &#xA;&lt;p&gt;To keep the clean aesthetic of the original Wii I wanted to hide the GameCube controller ports behind a panel. I always hated the hinged design of the original, and it is quite difficult to replicate at this scale, so I redesigned this panel to be a sliding panel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/gamecube-ports.png&#34; alt=&#34;GameCube Ports&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Wii&#39;s iconic disc slot lights are recreated using a 1.5mm thick custom cut acrylic light diffuser, which is illuminated by two side-mounted addressable LEDs on the front panel board. The power, reset, and sync buttons are all also 3D printed, and the power button hosts a tiny light pipe to allow the power LED to shine through.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/front-assembly.png&#34; alt=&#34;Front assembly&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I FDM printed the case on a Voron 2.4 in ABS using a 0.4mm nozzle at 0.1mm layer height, but it should print fine in PLA or PETG on a well-tuned printer. At this scale, dimensional accuracy is important. In theory it should be possible to print this on an SLA printer, but I haven&#39;t tried it.&lt;/p&gt; &#xA;&lt;h2&gt;Build Guide&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] This is not a beginner project! This build requires performing a challenging motherboard trim, fine pitch soldering, and PCB assembly. If you are not comfortable with these tasks, I would recommend starting with a simpler project and working your way up - check out the &lt;a href=&#34;https://bitbuilt.net&#34;&gt;BitBuilt forums&lt;/a&gt; for some awesome project worklogs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;What you&#39;ll need&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4-layer Wii motherboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mackieks/nandFlex&#34;&gt;nandFlex&lt;/a&gt; board (or &lt;a href=&#34;https://4layertech.com/products/rvl-nand-flex-board-pack-of-2&#34;&gt;4Layer Technologies RVL-NAND&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Assembled &lt;a href=&#34;https://github.com/mackieks/fujiflex&#34;&gt;fujiflex&lt;/a&gt; (or &lt;a href=&#34;https://electron-shepherd.com/products/electronave-kit&#34;&gt;ElectronAVE&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Assembled &lt;a href=&#34;https://github.com/loopj/wii-power-strip/tree/r1&#34;&gt;Wii Power Strip&lt;/a&gt; - &lt;strong&gt;must be revision 1!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Assembled &lt;a href=&#34;https://github.com/loopj/periphlex&#34;&gt;Periphlex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/main-board/KiCad&#34;&gt;Short Stack main board&lt;/a&gt; - 1.2mm thickness, stencil recommended&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/front-panel/KiCad&#34;&gt;Short Stack front panel&lt;/a&gt; - 0.8mm thickness, black soldermask, stencil recommended&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/case/heatsink.step&#34;&gt;Heatsink&lt;/a&gt; - machined from aluminum or copper&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/case/disc-light-diffuser.dxf&#34;&gt;Light diffuser&lt;/a&gt; - cut from 1.5mm thick acrylic&lt;/li&gt; &#xA; &lt;li&gt;The components and hardware from the &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/full-bom.xlsx&#34;&gt;bill of materials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Assembly&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/case-assembly.gif&#34; alt=&#34;Case Exploded&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Assemble main board and front panel PCBs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;I recommend using a solder stencil and a hot plate or reflow oven&lt;/li&gt; &#xA;   &lt;li&gt;If using a hot plate, hand solder the headphone connectors after reflowing the rest of the components&lt;/li&gt; &#xA;   &lt;li&gt;Secure two 3 x 1mm magnets inside the holes on the front panel board using a dab of CA glue&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Flash the &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/main-board/firmware&#34;&gt;main board firmware&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prepare and trim the Wii motherboard &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Relocate the NAND, test it still boots&lt;/li&gt; &#xA;   &lt;li&gt;Perform a wireless U10 relocation, test it still boots - you may wish to wire a magnet wire to the &lt;a href=&#34;https://bitbuilt.net/forums/index.php?threads/soft-shutdown-power-on-via-bluetooth.6239/&#34;&gt;&lt;code&gt;SHUTDOWN&lt;/code&gt; via&lt;/a&gt; first&lt;/li&gt; &#xA;   &lt;li&gt;Install fujiflex, and test digital A/V output works&lt;/li&gt; &#xA;   &lt;li&gt;Trim the motherboard (see &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/trim.png&#34;&gt;trim dimensions&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Assemble and install &lt;em&gt;Power Strip&lt;/em&gt; (&lt;a href=&#34;https://github.com/loopj/wii-power-strip/tree/r1#installation&#34;&gt;see instructions&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Assemble and install &lt;em&gt;Periphlex&lt;/em&gt; (&lt;a href=&#34;https://github.com/loopj/periphlex#installation&#34;&gt;see instructions&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Connect the boards &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Connect the main board to the motherboard via a 14-pin FFC cable to &lt;em&gt;Periphlex&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Connect the main board to the motherboard via a 5-pin Molex Pico-Lock cable to &lt;em&gt;Power Strip&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Connect the front panel board to the main board via an 8-pin FFC cable&lt;/li&gt; &#xA;   &lt;li&gt;Connect the fan to the main board&lt;/li&gt; &#xA;   &lt;li&gt;Apply thermal paste to the CPU and GPU&lt;/li&gt; &#xA;   &lt;li&gt;Stack the components: heatsink, motherboard, M2.5 x 3mm spacers, main board&lt;/li&gt; &#xA;   &lt;li&gt;Install the stack to the case bottom using M2.5 x 12mm wafer head screws&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Secure the top of the case to the bottom using four M1.2 x 4mm screws&lt;/li&gt; &#xA; &lt;li&gt;Secure the front panel PCB to the front of the case using two M1.2 x 3mm screws&lt;/li&gt; &#xA; &lt;li&gt;Secure the front of the case to the bottom of the case using two M1.2 x 4mm screws&lt;/li&gt; &#xA; &lt;li&gt;Press-fit two 3 x 1mm magnets into the holes on the sd card cover, make sure they match polarity with the magnets on the front panel PCB&lt;/li&gt; &#xA; &lt;li&gt;Slide the side panel into the case&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This project would not be possible without the amazing &lt;a href=&#34;https://bitbuilt.net&#34;&gt;BitBuilt community&lt;/a&gt;, I&#39;m truly standing on the shoulders of giants here.&lt;/p&gt; &#xA;&lt;p&gt;In particular, I&#39;d like to thank:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Weskmods&#34;&gt;Wesk&lt;/a&gt; for setting the bar so high with renders, for the suggestion of using magnets in the case assembly, and for the inspirational GC Nano&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/aureliomannara&#34;&gt;Aurelio&lt;/a&gt; for pointing me in the right direction to help figure the soft shutdown and power on via Wiimote.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/YveltalGriffin&#34;&gt;YveltalGriffin&lt;/a&gt; for PCB design feedback, helping me when I was documenting the bluetooth module, and of course for fujiflex and nandFlex&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/crazygadgetmods&#34;&gt;CrazyGadget&lt;/a&gt; for helping me fix my GL823K on the first revision of my boards, and for the inspirational GC Nano&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/y2k_x38&#34;&gt;Y2K&lt;/a&gt; and supertazon for joining the PCB assembly live stream and being super supportive&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Permissively released under the Solderpad Hardware License v2.1&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fgkeepalive/AndroidKeepAlive</title>
    <updated>2024-04-28T01:36:51Z</updated>
    <id>tag:github.com,2024-04-28:/fgkeepalive/AndroidKeepAlive</id>
    <link href="https://github.com/fgkeepalive/AndroidKeepAlive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;2024年最新 Android 高可用黑科技应用保活，实现终极目标，最高适配Android 14 小米 华为 Oppo vivo 等最新机型 拒绝强杀 开机自启动&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&amp;gt;&amp;gt;&amp;gt;持续更新维护中&amp;gt;&amp;gt;&amp;gt; [2024年4月11日 下午7:44:44]&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;2024年03月29日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;新增一些弹出方案，13-14兼容性提升&lt;/li&gt; &#xA; &lt;li&gt;支持关闭退出保活&lt;/li&gt; &#xA; &lt;li&gt;解决安全补丁带来的影响&lt;/li&gt; &#xA; &lt;li&gt;去特征化加强&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2024年01月23日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Android 14 支持,API变更维护,崩溃修复&lt;/li&gt; &#xA; &lt;li&gt;厂商兼容性升级,覆盖率提升&lt;/li&gt; &#xA; &lt;li&gt;优化内存占用,提升低端机器效果&lt;/li&gt; &#xA; &lt;li&gt;误判报毒修复,更换demo包名&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年08月04日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;核心代码全部进入独立加密的自定义java虚拟机中执行，可以完全规避代码审核，完美过google play代码扫描。再也不用担心google代码审查带来的风险。保护核心代码安全。&lt;/li&gt; &#xA; &lt;li&gt;混淆升级，保证每次的打包代码结构都是独一无二的。&lt;/li&gt; &#xA; &lt;li&gt;后台隐藏功能升级，页面图标，后台服务，任务栏，通知栏，均可隐藏。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年07月17日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;防止应用进入深度休眠&lt;/li&gt; &#xA; &lt;li&gt;增加监听其他App启动功能，可以在其他app启动或者切换页面的时候监听到时机。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年6月26日 更新:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;保活再次升级,特别针对小米等机型优化。&lt;/li&gt; &#xA; &lt;li&gt;减小demo体积&lt;/li&gt; &#xA; &lt;li&gt;省电优化&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年5月8日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;新增弹出方案,利用 binder驱动实现直接打开页面,弹出能力大幅度提升.&lt;/li&gt; &#xA; &lt;li&gt;保活能力提升,支持省电模式,节约耗电,demo默认是非省电模式.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年1月22日 更新： 解决由于 google play 新更新的开发者政策导致的下架问题。可稳定上架运行。&lt;/p&gt; &#xA;&lt;p&gt;2022年7月11日更新： 支持小米 miui 12 设备&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Demo 下载 &amp;gt;&amp;gt;&amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/Demo.apk&#34;&gt;点这里&lt;/a&gt; &amp;lt;&amp;lt;&amp;lt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/code.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;2023年了，Android还有可用的保活技术吗？有，最强Android 保活方案分享！&lt;/p&gt; &#xA;&lt;p&gt;区别于常规一像素，后台音乐等方案，本方案即使用户&lt;strong&gt;点击强制停止&lt;/strong&gt;也&lt;strong&gt;无法杀死应用&lt;/strong&gt;，它是基于Linux特性实现的一套&lt;strong&gt;黑科技保活技术&lt;/strong&gt;，直达Android 保活尽头。实现&lt;strong&gt;App永生&lt;/strong&gt;。&lt;strong&gt;耗电低&lt;/strong&gt;，不占用CPU，保活持续时间理论上不卸载&lt;strong&gt;可达永久&lt;/strong&gt;。即使手机关机也无法阻止！！！&lt;/p&gt; &#xA;&lt;p&gt;支持Google play（应用市场）上架。&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;演示录屏&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;三星 S21 Android 13&lt;/th&gt; &#xA;   &lt;th&gt;小米 11 Android 12&lt;/th&gt; &#xA;   &lt;th&gt;Google Pixel 6 Pro Android 12&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/GIF/sanxing.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/GIF/xiaomi.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/GIF/google.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;其他没录屏的机型：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;机型&lt;/th&gt; &#xA;   &lt;th&gt;Android版本&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;华为 p40&lt;/td&gt; &#xA;   &lt;td&gt;鸿蒙 2.0 Android 10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;小米10 Pro&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XIAOMI 红米 7&lt;/td&gt; &#xA;   &lt;td&gt;9（miui 11.0.1）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;vivo VIVO Y3 (V1901A)&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;oppo R11s&lt;/td&gt; &#xA;   &lt;td&gt;8.1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HUAWEI 荣 耀30s (CDY- AN90)&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;p&gt;可以提供以下功能：均不依赖任何安卓权限授权&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;应用保活，拒绝应用强杀，拒绝后台任务栏清理杀死，拒绝清除缓存杀死。&lt;/li&gt; &#xA; &lt;li&gt;自启动 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;首次安装自启动&lt;/li&gt; &#xA;   &lt;li&gt;固定时间间隔自启动&lt;/li&gt; &#xA;   &lt;li&gt;安装卸载其他应用自启动&lt;/li&gt; &#xA;   &lt;li&gt;开关机自启动&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;后台持续保持活跃，对抗系统休眠。省电策略，可自由选择关闭。&lt;/li&gt; &#xA; &lt;li&gt;不依赖权限的后台弹框，弹出页面，activity，dialog，成功率达到 90 %。&lt;/li&gt; &#xA; &lt;li&gt;隐藏后台通知栏。隐藏通知。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;使用要求&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;利用Android系统特性实现，均&lt;strong&gt;不依赖任何 Android 权限&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;支持Android 4 - &lt;strong&gt;Android 14（最新）&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;对各品牌定制化 rom 有&lt;strong&gt;针对性的优化&lt;/strong&gt;，确保达到最好效果。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;一行代码&lt;/strong&gt;即可&lt;strong&gt;接入&lt;/strong&gt;，无需复杂调整，代码侵入低。&lt;/li&gt; &#xA; &lt;li&gt;支持代码&lt;strong&gt;加固&lt;/strong&gt;，混淆。&lt;/li&gt; &#xA; &lt;li&gt;不可用于违法用途。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;DEMO获取&amp;amp;联系&lt;/h2&gt; &#xA;&lt;p&gt;请注明来意，根据以下联系方式获取：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/wx.jpg&#34; alt=&#34;weixin&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;邮箱：&lt;a href=&#34;mailto:fgkeepalive@gmail.com&#34;&gt;fgkeepalive@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;telegram(需要科学上网)：&lt;a href=&#34;https://t.me/androidkeepalive&#34;&gt;https://t.me/androidkeepalive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>