<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-05T01:47:41Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nmap/nmap</title>
    <updated>2023-11-05T01:47:41Z</updated>
    <id>tag:github.com,2023-11-05:/nmap/nmap</id>
    <link href="https://github.com/nmap/nmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nmap - the Network Mapper. Github mirror of official SVN repository.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nmap &lt;a href=&#34;https://travis-ci.org/nmap/nmap&#34;&gt;&lt;img src=&#34;https://travis-ci.org/nmap/nmap.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/nmap/nmap/context:cpp&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/cpp/g/nmap/nmap.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: C/C++&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/nmap/nmap/context:python&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/python/g/nmap/nmap.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/nmap/nmap/alerts/&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/nmap/nmap.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Nmap is released under a custom license, which is based on (but not compatible with) GPLv2. The Nmap license allows free usage by end users, and we also offer a commercial license for companies that wish to redistribute Nmap technology with their products. See &lt;a href=&#34;https://nmap.org/book/man-legal.html&#34;&gt;Nmap Copyright and Licensing&lt;/a&gt; for full details.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of this software as well as binary installers for Windows, macOS, and Linux (RPM) are available from &lt;a href=&#34;https://nmap.org/download.html&#34;&gt;Nmap.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Full documentation is also available &lt;a href=&#34;https://nmap.org/docs.html&#34;&gt;on the Nmap.org website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Questions and suggestions may be sent to &lt;a href=&#34;https://nmap.org/mailman/listinfo/dev&#34;&gt;the Nmap-dev mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Ideally, you should be able to just type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;make&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For far more in-depth compilation, installation, and removal notes, read the &lt;a href=&#34;https://nmap.org/book/install.html&#34;&gt;Nmap Install Guide&lt;/a&gt; on Nmap.org.&lt;/p&gt; &#xA;&lt;h2&gt;Using Nmap&lt;/h2&gt; &#xA;&lt;p&gt;Nmap has a lot of features, but getting started is as easy as running &lt;code&gt;nmap scanme.nmap.org&lt;/code&gt;. Running &lt;code&gt;nmap&lt;/code&gt; without any parameters will give a helpful list of the most common options, which are discussed in depth in &lt;a href=&#34;https://nmap.org/book/man.html&#34;&gt;the man page&lt;/a&gt;. Users who prefer a graphical interface can use the included &lt;a href=&#34;https://nmap.org/zenmap/&#34;&gt;Zenmap front-end&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Information about filing bug reports and contributing to the Nmap project can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/nmap/nmap/master/HACKING&#34;&gt;HACKING&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/nmap/nmap/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; files.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ImageMagick/ImageMagick</title>
    <updated>2023-11-05T01:47:41Z</updated>
    <id>tag:github.com,2023-11-05:/ImageMagick/ImageMagick</id>
    <link href="https://github.com/ImageMagick/ImageMagick" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üßô‚Äç‚ôÇÔ∏è ImageMagick 7&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ImageMagick&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ImageMagick/ImageMagick/actions&#34;&gt;&lt;img src=&#34;https://github.com/ImageMagick/ImageMagick/workflows/main/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:imagemagick&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/imagemagick.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/ImageMagick&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%24-donate-ff00ff.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://imagemagick.org/image/wizard.png&#34; alt=&#34;ImageMagick logo&#34; width=&#34;265&#34; height=&#34;353&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/&#34;&gt;ImageMagick¬Æ&lt;/a&gt; is a free and &lt;a href=&#34;https://imagemagick.org/script/license.php&#34;&gt;open-source&lt;/a&gt; software suite for displaying, converting, and editing raster image and vector image files. It can read and write over 200 image file &lt;a href=&#34;https://imagemagick.org/script/formats.php&#34;&gt;formats&lt;/a&gt;, and can support a wide range of image manipulation operations, such as resizing, cropping, and color correction.&lt;/p&gt; &#xA;&lt;h2&gt;What is ImageMagick?&lt;/h2&gt; &#xA;&lt;p&gt;ImageMagick is written in C and is available for a wide range of operating systems, including Linux, macOS, and Windows. It can be used as a standalone application, or as a library that can be integrated into other software programs.&lt;/p&gt; &#xA;&lt;p&gt;The main website for ImageMagick can be found at &lt;a href=&#34;https://imagemagick.org/&#34;&gt;https://imagemagick.org&lt;/a&gt;. The source code for this software can be accessed through the repository located at &lt;a href=&#34;https://github.com/ImageMagick/ImageMagick&#34;&gt;https://github.com/ImageMagick/ImageMagick&lt;/a&gt;. In addition, a legacy version of ImageMagick, version 6, is also still maintained and can be found at &lt;a href=&#34;https://legacy.imagemagick.org/&#34;&gt;https://legacy.imagemagick.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features and Capabilities&lt;/h2&gt; &#xA;&lt;p&gt;One of the key features of ImageMagick is its support for scripting and automation. This allows users to create complex image manipulation pipelines that can be run automatically, without the need for manual intervention. This can be especially useful for tasks that require the processing of large numbers of images, or for tasks that need to be performed on a regular basis.&lt;/p&gt; &#xA;&lt;p&gt;In addition to its core image manipulation capabilities, ImageMagick also includes a number of other features, such as support for animation, color management, and image rendering. These features make it a versatile tool for a wide range of image-related tasks, including graphic design, scientific visualization, and digital art.&lt;/p&gt; &#xA;&lt;p&gt;Overall, ImageMagick is a powerful and versatile software suite for displaying, converting, and editing image files. Its support for scripting and automation, along with its other features, make it a valuable tool for a wide range of image-related tasks.&lt;/p&gt; &#xA;&lt;p&gt;Here are just a few &lt;a href=&#34;https://imagemagick.org/script/examples.php&#34;&gt;examples&lt;/a&gt; of what ImageMagick can do:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/command-line-options.php#bilateral-blur&#34;&gt;Animation&lt;/a&gt;: non-linear, edge-preserving, and noise-reducing smoothing filter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/command-line-options.php#bilateral-blur&#34;&gt;Bilateral Blur&lt;/a&gt;: non-linear, edge-preserving, and noise-reducing smoothing filter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/color-management.php&#34;&gt;Color management&lt;/a&gt;: accurate color management with color profiles or in lieu of-- built-in gamma compression or expansion as demanded by the colorspace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/color-management.php&#34;&gt;Color thresholding&lt;/a&gt; force all pixels in the color range to white otherwise black.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/command-line-processing.php&#34;&gt;Command-line processing&lt;/a&gt; utilize ImageMagick from the command-line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Complex_text_layout&#34;&gt;Complex text layout&lt;/a&gt; bidirectional text support and shaping.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/composite.php&#34;&gt;Composite&lt;/a&gt;: overlap one image over another.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/connected-components.php&#34;&gt;Connected component labeling&lt;/a&gt;: uniquely label connected regions in an image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/convex-hull.php&#34;&gt;Convex hull&lt;/a&gt; smallest area convex polygon containing the image foreground objects. In addition, the minimum bounding box and unrotate angle are also generated.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/crop/&#34;&gt;Decorate&lt;/a&gt;: add a border or frame to an image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/transform/#vision&#34;&gt;Delineate image features&lt;/a&gt;: Canny edge detection, mean-shift, Hough lines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/fourier/&#34;&gt;Discrete Fourier transform&lt;/a&gt;: implements the forward and inverse &lt;a href=&#34;http://en.wikipedia.org/wiki/Discrete_Fourier_transform&#34;&gt;DFT&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/distribute-pixel-cache.php&#34;&gt;Distributed pixel cache&lt;/a&gt;: offload intermediate pixel storage to one or more remote servers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/draw/&#34;&gt;Draw&lt;/a&gt;: add shapes or text to an image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/cipher.php&#34;&gt;Encipher or decipher an image&lt;/a&gt;: convert ordinary images into unintelligible gibberish and back again.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/convert.php&#34;&gt;Format conversion&lt;/a&gt;: convert an image from one &lt;a href=&#34;https://imagemagick.org/script/formats.php&#34;&gt;format&lt;/a&gt; to another (e.g. PNG to JPEG).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/distorts/&#34;&gt;Generalized pixel distortion&lt;/a&gt;: correct for, or induce image distortions including perspective.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/architecture.php#distributed&#34;&gt;Heterogeneous distributed processing&lt;/a&gt;: certain algorithms are OpenCL-enabled to take advantage of speed-ups offered by executing in concert across heterogeneous platforms consisting of CPUs, GPUs, and other processors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/high-dynamic-range.php&#34;&gt;High dynamic-range images&lt;/a&gt;: accurately represent the wide range of intensity levels found in real scenes ranging from the brightest direct sunlight to the deepest darkest shadows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/clahe.php&#34;&gt;Histogram equalization&lt;/a&gt; use adaptive histogram equalization to improve contrast in images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/magick-cache.php&#34;&gt;Image cache&lt;/a&gt;: secure methods and tools to cache images, image sequences, video, audio or metadata in a local folder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/fx.php&#34;&gt;Image calculator&lt;/a&gt;: apply a mathematical expression to an image or image channels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/gradient.php&#34;&gt;Image gradients&lt;/a&gt;: create a gradual blend of one color whose shape is horizontal, vertical, circular, or elliptical.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/identify.php&#34;&gt;Image identification&lt;/a&gt;: describe the format and attributes of an image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/download.php#iOS&#34;&gt;ImageMagick on the iPhone&lt;/a&gt;: convert, edit, or compose images on your iPhone.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/architecture.php#tera-pixel&#34;&gt;Large image support&lt;/a&gt;: read, process, or write mega-, giga-, or tera-pixel image sizes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/montage.php&#34;&gt;Montage&lt;/a&gt;: juxtapose image thumbnails on an image canvas.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/morphology/&#34;&gt;Morphology of shapes&lt;/a&gt;: extract features, describe shapes and recognize patterns in images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/motion-picture.php&#34;&gt;Motion picture support&lt;/a&gt;: read and write the common image formats used in digital film work.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/multispectral-imagery.php&#34;&gt;Multispectral imagery&lt;/a&gt;: support multispectral imagery up to 64 bands.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/transform/#vision&#34;&gt;Noise and color reduction&lt;/a&gt; Kuwahara Filter, mean-shift.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.fmwconcepts.com/misc_tests/perceptual_hash_test_results_510/index.html&#34;&gt;Perceptual hash&lt;/a&gt;: maps visually identical images to the same or similar hash-- useful in image retrieval, authentication, indexing, or copy detection as well as digital watermarking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/blur/&#34;&gt;Special effects&lt;/a&gt;: blur, sharpen, threshold, or tint an image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/text/&#34;&gt;Text &amp;amp; comments&lt;/a&gt;: insert descriptive or artistic text in an image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/architecture.php#threads&#34;&gt;Threads of execution support&lt;/a&gt;: ImageMagick is thread safe and most internal algorithms are OpenMP-enabled to take advantage of speed-ups offered by multicore processor chips.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/resize/&#34;&gt;Transform&lt;/a&gt;: resize, rotate, deskew, crop, flip or trim an image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/Usage/masking/&#34;&gt;Transparency&lt;/a&gt;: render portions of an image invisible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/script/architecture.php#virtual-pixels&#34;&gt;Virtual pixel support&lt;/a&gt;: convenient access to pixels outside the image region.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/Usage/&#34;&gt;Examples of ImageMagick Usage&lt;/a&gt;, demonstrates how to use the software from the &lt;a href=&#34;https://imagemagick.org/script/command-line-processing.php&#34;&gt;command line&lt;/a&gt; to achieve various effects. There are also several scripts available on the website called &lt;a href=&#34;http://www.fmwconcepts.com/imagemagick/&#34;&gt;Fred&#39;s ImageMagick Scripts&lt;/a&gt;, which can be used to apply geometric transforms, blur and sharpen images, remove noise, and perform other operations. Additionally, there is a tool called &lt;a href=&#34;https://github.com/dlemstra/Magick.NET&#34;&gt;Magick.NET&lt;/a&gt; that allows users to access the functionality of ImageMagick without having to install the software on their own systems. Finally, the website also includes a &lt;a href=&#34;http://im.snibgo.com/&#34;&gt;Cookbook&lt;/a&gt; with tips and examples for using ImageMagick on Windows systems.&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;ImageMagick best practices &lt;strong&gt;strongly&lt;/strong&gt; encourages you to configure a &lt;a href=&#34;https://imagemagick.org/script/security-policy.php&#34;&gt;security policy&lt;/a&gt; that suits your local environment.&lt;/p&gt; &#xA;&lt;p&gt;Now that ImageMagick version 7 is released, we continue to maintain the legacy release of ImageMagick, version 6, at &lt;a href=&#34;https://legacy.imagemagick.org&#34;&gt;https://legacy.imagemagick.org&lt;/a&gt;. Learn how ImageMagick version 7 differs from previous versions with our &lt;a href=&#34;https://imagemagick.org/script/porting.php&#34;&gt;porting guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Want more performance from ImageMagick? Try these options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;add more memory to your system, see the &lt;a href=&#34;https://imagemagick.org/script/architecture.php#cache&#34;&gt;pixel cache&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;add more cores to your system, see &lt;a href=&#34;https://imagemagick.org/script/architecture.php#threads&#34;&gt;threads of execution support&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;reduce lock contention with the &lt;a href=&#34;http://goog-perftools.sourceforge.net/doc/tcmalloc.html&#34;&gt;tcmalloc&lt;/a&gt; memory allocation library;&lt;/li&gt; &#xA; &lt;li&gt;push large images to a solid-state drive, see &lt;a href=&#34;https://imagemagick.org/script/architecture.php#tera-pixel&#34;&gt;large image support&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If these options are prohibitive, you can reduce the quality of the image results. The default build is Q16 HDRI. If you disable &lt;a href=&#34;https://imagemagick.org/script/high-dynamic-range.php&#34;&gt;HDRI&lt;/a&gt;, you use half the memory and instead of predominantly floating point operations, you use the typically more efficient integer operations. The tradeoff is reduced precision and you cannot process out of range pixel values (e.g. negative). If you build the Q8 non-HDRI version of ImageMagick, you again reduce the memory requirements in half-- and once again there is a tradeoff, even less precision and no out of range pixel values. For a Q8 non-HDRI build of ImageMagick, use these configure script options: --with-quantum-depth=8 --disable-hdri.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>devbis/z03mmc</title>
    <updated>2023-11-05T01:47:41Z</updated>
    <id>tag:github.com,2023-11-05:/devbis/z03mmc</id>
    <link href="https://github.com/devbis/z03mmc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xiaomi LYWSD03MMC Zigbee Firmware&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zigbee 3.0 Firmware for original LYWSD03MMC Sensor&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the Zigbee firmware for Xiaomi LYWSD03MMC Bluetooth temperature and humidity sensor.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/devbis/z03mmc/master/assets/device.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The LYWSD03MMC is a Bluetooth temperature and humidity sensor that can be integrated into a Zigbee network using this firmware. This repository hosts the code and related resources to flash the device and make it compatible with Zigbee networks.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Full-featured firmware to convert Xiaomi LYWSD03MC device with default ZCL battery, temperature and relative humidity clusters&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Display support for known revisions&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OTA support in firmware and binaries in ZCL format for update&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flashable over-the-air from custom ATC firmware &lt;a href=&#34;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&#34;&gt;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flashable over SWS-UART interface using one of:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://pvvx.github.io/ATC_MiThermometer/USBCOMFlashTx.html&#34;&gt;https://pvvx.github.io/ATC_MiThermometer/USBCOMFlashTx.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pvvx/ATC_MiThermometer/raw/master/TLSR825xComFlasher.py&#34;&gt;https://github.com/pvvx/ATC_MiThermometer/blob/master/TLSR825xComFlasher.py&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pvvx/TLSRPGM&#34;&gt;https://github.com/pvvx/TLSRPGM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zigbee compatible hardware (e.g., Zigbee coordinator or gateway).&lt;/li&gt; &#xA; &lt;li&gt;Necessary tools for flashing firmware to the sensor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building firmware&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone TC32 toolchain according to your host OS:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/devbis/tc32.git -b linux&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/devbis/tc32.git -b macos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/devbis/tc32.git -b windows&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository and SDK:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/devbis/z03mmc.git&#xA;git clone https://github.com/devbis/tl_zigbee_sdk.git -b 3.6.8.5 --depth 1&#xA;&#xA;cd z03mmc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure and build:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake -DSDK_PREFIX=$(pwd)/../tl_zigbee_sdk -DTOOLCHAIN_PREFIX=$(pwd)/../tc32 -B build .&#xA;cmake --build build --target z03mmc.zigbee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Firmware binary is located at &lt;code&gt;build/src/z03mmc.bin&lt;/code&gt; The binary with OTA header is at the same folder, ending with &lt;code&gt;z03mmc.zigbee&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flashing over the air (easy way)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open an awesome tool from ATC_MiThermometer &lt;a href=&#34;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&#34;&gt;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Connect&#34; button and find device LYWSD03MMC, wait for connection (Connected in logs)&lt;/li&gt; &#xA; &lt;li&gt;On a new device with stock firmware click &#34;Do Activation&#34; and wait some time.&lt;/li&gt; &#xA; &lt;li&gt;Next &#34;Select Firmware&#34;, choose file with the transitional firmware &lt;a href=&#34;https://raw.githubusercontent.com/devbis/z03mmc/master/assets/ATC_ota_40000.bin&#34;&gt;ATC_ota_400000&lt;/a&gt;, click &#34;Start Flashing&#34;. This step is required even if you already installed a custom bluetooth firmware. Not flashing this file will likely cause your device to get bricked and require flashing via USB/UART!&lt;/li&gt; &#xA; &lt;li&gt;You will see in logs &#34;Update done after NN seconds&#34;&lt;/li&gt; &#xA; &lt;li&gt;Connect to the device again (with name ATC_802190 or similar, based on mac-address). If it doesn&#39;t appear, remove and reinsert the battery and refresh the webpage with the flashing tool.&lt;/li&gt; &#xA; &lt;li&gt;Flash the latest &lt;a href=&#34;https://github.com/devbis/z03mmc/releases&#34;&gt;z03mmc.bin&lt;/a&gt; firmware over transitional firmware to convert it to zigbee. Use &lt;a href=&#34;https://devbis.github.io/telink-zigbee/&#34;&gt;https://devbis.github.io/telink-zigbee/&lt;/a&gt; page if previous flasher stops because of the firmware size.&lt;/li&gt; &#xA; &lt;li&gt;The device should now show up in your Zigbee bridge (If joining is enabled, of course). If it doesn&#39;t, reinsert the battery and/or short the RESET and GND contacts on the board for 3 seconds.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flashing firmware with USB to UART&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;TTL-USB adaptor&lt;/li&gt; &#xA; &lt;li&gt;1k-1.8k Ohm resistor&lt;/li&gt; &#xA; &lt;li&gt;python3 with pyserial module installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To flash a new firmware via an standard USB to UART adapter, simply connect the Thermometer as seen in the picture &lt;a href=&#34;https://raw.githubusercontent.com/devbis/z03mmc/master/assets/Mi_SWS_Connection.jpg&#34;&gt;Mi_SWS_Connection.jpg&lt;/a&gt; to the USB to UART converter and run the TLSR825xComFlasher.py tool.&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;python3 TLSR825xComFlasher.py -p COM3 wf 0 z03mmc.bin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;python3 TLSR825xComFlasher.py -p /dev/ttyUSB0 wf 0 z03mmc.bin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case if the SWS pin is used by the firmware, try this sequence:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Power off the sensor&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python3 TLSR825xComFlasher.py -p &amp;lt;YOUR_COM_PORT&amp;gt; -t5000 wf 0 z03mmc.bin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now you have 5 seconds to power on the sensor&lt;/li&gt; &#xA; &lt;li&gt;In case the chip has not started being flashed, run &lt;code&gt;python3 TLSR825xComFlasher.py -p &amp;lt;YOUR_COM_PORT&amp;gt; wf 0 z03mmc.bin&lt;/code&gt; without the timeout again.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If the flashing fails try to increase timeouts in the script.&lt;/p&gt; &#xA;&lt;p&gt;The UART flasher software uses the tool from &lt;a href=&#34;https://github.com/pvvx/ATC_MiThermometer&#34;&gt;https://github.com/pvvx/ATC_MiThermometer&lt;/a&gt;. Thanks to pvvx for the awesome work on this!&lt;/p&gt; &#xA;&lt;h2&gt;Related Work&lt;/h2&gt; &#xA;&lt;p&gt;z03mmc is based on the original work of @pvvx, and @atc1441, who developed the initial firmware versions for bluetooth-capable device.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pvvx/ATC_MiThermometer&#34;&gt;https://github.com/pvvx/ATC_MiThermometer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atc1441/ATC_MiThermometer&#34;&gt;https://github.com/atc1441/ATC_MiThermometer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Flash the firmware&lt;/li&gt; &#xA; &lt;li&gt;Enable pairing mode on Zigbee coordinator&lt;/li&gt; &#xA; &lt;li&gt;In case it is not joining, close the RESET and GND contacts on the board for 3 seconds to reset Zigbee settings. Replug the battery may require&lt;/li&gt; &#xA; &lt;li&gt;For zigbee2mqtt you need to add custom converter if you use version 1.33.1 or earlier&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the GNU General Public License 3.0 or later - see the &lt;a href=&#34;https://raw.githubusercontent.com/devbis/z03mmc/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>