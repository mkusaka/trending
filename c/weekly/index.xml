<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-02T01:43:17Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>haproxy/haproxy</title>
    <updated>2025-03-02T01:43:17Z</updated>
    <id>tag:github.com,2025-03-02:/haproxy/haproxy</id>
    <link href="https://github.com/haproxy/haproxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HAProxy Load Balancer&#39;s development branch (mirror of git.haproxy.org)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HAProxy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/haproxy/haproxy/actions/workflows/musl.yml&#34;&gt;&lt;img src=&#34;https://github.com/haproxy/haproxy/actions/workflows/musl.yml/badge.svg?sanitize=true&#34; alt=&#34;alpine/musl&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/haproxy/haproxy/actions/workflows/aws-lc.yml&#34;&gt;&lt;img src=&#34;https://github.com/haproxy/haproxy/actions/workflows/aws-lc.yml/badge.svg?sanitize=true&#34; alt=&#34;AWS-LC&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/haproxy/haproxy/actions/workflows/openssl-nodeprecated.yml&#34;&gt;&lt;img src=&#34;https://github.com/haproxy/haproxy/actions/workflows/openssl-nodeprecated.yml/badge.svg?sanitize=true&#34; alt=&#34;openssl no-deprecated&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/haproxy/haproxy/actions/workflows/illumos.yml&#34;&gt;&lt;img src=&#34;https://github.com/haproxy/haproxy/actions/workflows/illumos.yml/badge.svg?sanitize=true&#34; alt=&#34;Illumos&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/haproxy/haproxy/actions/workflows/netbsd.yml&#34;&gt;&lt;img src=&#34;https://github.com/haproxy/haproxy/actions/workflows/netbsd.yml/badge.svg?sanitize=true&#34; alt=&#34;NetBSD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/haproxy/haproxy/&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/haproxy/haproxy.svg?task=FreeBSD&#34; alt=&#34;FreeBSD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/haproxy/haproxy/actions/workflows/vtest.yml&#34;&gt;&lt;img src=&#34;https://github.com/haproxy/haproxy/actions/workflows/vtest.yml/badge.svg?sanitize=true&#34; alt=&#34;VTest&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/HAProxyCommunityEdition_60px.png&#34; alt=&#34;HAProxy logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;HAProxy is a free, very fast and reliable reverse-proxy offering high availability, load balancing, and proxying for TCP and HTTP-based applications.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/INSTALL&#34;&gt;INSTALL&lt;/a&gt; file describes how to build HAProxy. A &lt;a href=&#34;https://github.com/haproxy/wiki/wiki/Packages&#34;&gt;list of packages&lt;/a&gt; is also available on the wiki.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://discourse.haproxy.org/&#34;&gt;discourse&lt;/a&gt; and the &lt;a href=&#34;https://www.mail-archive.com/haproxy@formilux.org/&#34;&gt;mailing-list&lt;/a&gt; are available for questions or configuration assistance. You can also use the &lt;a href=&#34;https://slack.haproxy.org/&#34;&gt;slack&lt;/a&gt; or &lt;a href=&#34;irc://irc.libera.chat/%23haproxy&#34;&gt;IRC&lt;/a&gt; channel. Please don&#39;t use the issue tracker for these.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/haproxy/haproxy/issues/&#34;&gt;issue tracker&lt;/a&gt; is only for bug reports or feature requests.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The HAProxy documentation has been split into a number of different files for ease of use. It is available in text format as well as HTML. The wiki is also meant to replace the old architecture guide.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.haproxy.org/&#34;&gt;HTML documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.arpalert.org/haproxy-api.html&#34;&gt;HTML HAProxy LUA API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/haproxy/wiki/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please refer to the following files depending on what you&#39;re looking for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/INSTALL&#34;&gt;INSTALL&lt;/a&gt; for instructions on how to build and install HAProxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/BRANCHES&#34;&gt;BRANCHES&lt;/a&gt; to understand the project&#39;s life cycle and what version to use&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the project&#39;s license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/CONTRIBUTING&#34;&gt;CONTRIBUTING&lt;/a&gt; for the process to follow to submit contributions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The more detailed documentation is located into the doc/ directory:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/intro.txt&#34;&gt; doc/intro.txt &lt;/a&gt; for a quick introduction on HAProxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/configuration.txt&#34;&gt; doc/configuration.txt &lt;/a&gt; for the configuration&#39;s reference manual&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/lua.txt&#34;&gt; doc/lua.txt &lt;/a&gt; for the Lua&#39;s reference manual&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/SPOE.txt&#34;&gt; doc/SPOE.txt &lt;/a&gt; for how to use the SPOE engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/network-namespaces.txt&#34;&gt; doc/network-namespaces.txt &lt;/a&gt; for how to use network namespaces under Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/management.txt&#34;&gt; doc/management.txt &lt;/a&gt; for the management guide&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/regression-testing.txt&#34;&gt; doc/regression-testing.txt &lt;/a&gt; for how to use the regression testing suite&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/peers.txt&#34;&gt; doc/peers.txt &lt;/a&gt; for the peers protocol reference&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/coding-style.txt&#34;&gt; doc/coding-style.txt &lt;/a&gt; for how to adopt HAProxy&#39;s coding style&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/internals&#34;&gt; doc/internals &lt;/a&gt; for developer-specific documentation (not all up to date)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;HAProxy is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/gpl.txt&#34;&gt;GPL 2&lt;/a&gt; or any later version, the headers under &lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/doc/lgpl.txt&#34;&gt;LGPL 2.1&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/haproxy/haproxy/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for a more detailed explanation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>StuckAtPrototype/Racer</title>
    <updated>2025-03-02T01:43:17Z</updated>
    <id>tag:github.com,2025-03-02:/StuckAtPrototype/Racer</id>
    <link href="https://github.com/StuckAtPrototype/Racer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Micro Racer Car - StuckAtPrototype&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;thank you for the overwhelmingly positve support!! such an inspiration to keep making fun open source content!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Youtube Video&lt;/h2&gt; &#xA;&lt;p&gt;A bit of a back-story of how this project came to be.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6jzG-BMannc&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/6jzG-BMannc/0.jpg&#34; alt=&#34;My Kickstarter failed, so I open sourced it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sub if you like what you see.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Some pictures of the project&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/StuckAtPrototype/Racer/master/project_pictures/242A0548.png&#34; alt=&#34;Picture of PCB car&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/StuckAtPrototype/Racer/master/project_pictures/242A1274.png&#34; alt=&#34;Picture of PCB car&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware Remote for this car&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/StuckAtPrototype/Thumbtroller&#34;&gt;https://github.com/StuckAtPrototype/Thumbtroller&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;p&gt;The project consists of&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Firmware&lt;/li&gt; &#xA; &lt;li&gt;Hardware&lt;/li&gt; &#xA; &lt;li&gt;Mechanical&lt;/li&gt; &#xA; &lt;li&gt;Scripts&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;These are structured into their own files. I could have used submodules, but decided against it.&lt;/p&gt; &#xA;&lt;h3&gt;1. Firmware&lt;/h3&gt; &#xA;&lt;p&gt;Code for the little car. This lives on the ESP32&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP32 IDF version 5.3.1&lt;/li&gt; &#xA; &lt;li&gt;USB to Serial dongle&lt;/li&gt; &#xA; &lt;li&gt;Target set to ESP32-H2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Hardware&lt;/h3&gt; &#xA;&lt;h4&gt;Schematic&lt;/h4&gt; &#xA;&lt;p&gt;PDF schematic included for your viewing pleasure.&lt;/p&gt; &#xA;&lt;h4&gt;PCBs&lt;/h4&gt; &#xA;&lt;p&gt;All the gerber files you&#39;d need to send to a fab house.&lt;/p&gt; &#xA;&lt;h4&gt;Kicad&lt;/h4&gt; &#xA;&lt;p&gt;All the files you&#39;d need to expand and work on this further. If you&#39;d like.&lt;/p&gt; &#xA;&lt;h3&gt;3. Mechanical&lt;/h3&gt; &#xA;&lt;h4&gt;Enclosure&lt;/h4&gt; &#xA;&lt;p&gt;All the step files you need to make one of these. Extrusion printer works well for this part.&lt;/p&gt; &#xA;&lt;h4&gt;Wheels&lt;/h4&gt; &#xA;&lt;p&gt;A bit of caution on this one.. you&#39;ll need an SLA printer.&lt;/p&gt; &#xA;&lt;h3&gt;4. Scripts&lt;/h3&gt; &#xA;&lt;p&gt;Did anyone say neural networks?&lt;/p&gt; &#xA;&lt;p&gt;This folder has all the python code you&#39;d need to train up your own neural network for the car. It also consists scripts that let you drive it using a keyboard -- just in case you dont want to make a physical controller.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3&lt;/li&gt; &#xA; &lt;li&gt;You&#39;ll need to install a bunch of pip modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Training the neural network&lt;/h4&gt; &#xA;&lt;p&gt;Training the neural network is as simple as running the training script with the data in the &lt;code&gt;color_data.txt&lt;/code&gt; file. For data format see the sample data in the file. You need to stick to the formatting.&lt;/p&gt; &#xA;&lt;p&gt;To train run &lt;code&gt;python trainer.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Keyboard controller&lt;/h4&gt; &#xA;&lt;p&gt;To run the script &lt;code&gt;python controller.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;w&lt;/code&gt; &lt;code&gt;s&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;d&lt;/code&gt; for control. Modify the script for different speeds, etc&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Protocol for motor control&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;60,1,60,1,5 -- translates to:&lt;/p&gt; &#xA;&lt;p&gt;motor side A: speed 60, direction forward&lt;/p&gt; &#xA;&lt;p&gt;motor side B: speed 60, direction forward&lt;/p&gt; &#xA;&lt;p&gt;500 miliseconds run time&lt;/p&gt; &#xA;&lt;p&gt;See firmware file &lt;code&gt;motor.c&lt;/code&gt; if you need more details&lt;/p&gt; &#xA;&lt;h2&gt;What the project could use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Cleanup, but thats true for almost anything out there&lt;/li&gt; &#xA; &lt;li&gt;Some fun code that makes the little car drive using the color sensor -- think very fancy line follower&lt;/li&gt; &#xA; &lt;li&gt;LLM integration -- ChatGPT driving a physical little robot? anyone? :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;If you take it further&lt;/h2&gt; &#xA;&lt;p&gt;Let me know if you ever make one of these, I&#39;d love to see it. Seriously, that&#39;d be exciting and inspiring to keep making my projects open source!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;h3&gt;Apache 2.0 -- i.e. use as you&#39;d like&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to Michael Angerer for his open sourced &lt;code&gt;esp32_ble_ota&lt;/code&gt; project. I used it to get BLE running in this project. His blog post and github repo are a great resource. Check it out. &lt;a href=&#34;https://github.com/michael-angerer/esp32_ble_ota&#34;&gt;https://github.com/michael-angerer/esp32_ble_ota&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>