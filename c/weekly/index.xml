<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-06T01:41:48Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nesbox/TIC-80</title>
    <updated>2024-10-06T01:41:48Z</updated>
    <id>tag:github.com,2024-10-06:/nesbox/TIC-80</id>
    <link href="https://github.com/nesbox/TIC-80" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TIC-80 is a fantasy computer for making, playing and sharing tiny games.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nesbox/TIC-80/actions?query=workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/nesbox/TIC-80/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tic80.com/img/logo64.png&#34; alt=&#34;TIC-80&#34;&gt; &lt;strong&gt;TIC-80 TINY COMPUTER&lt;/strong&gt; - &lt;a href=&#34;https://tic80.com&#34;&gt;https://tic80.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#about&#34;&gt;About&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#binary-downloads&#34;&gt;Binary Downloads&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#nightly-builds&#34;&gt;Nightly builds&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#unofficial-linuxarm64-nightly-builds&#34;&gt;Unofficial Linux/arm64 nightly builds&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#pro-version&#34;&gt;Pro Version&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#pro-features&#34;&gt;Pro features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#build-instructions&#34;&gt;Build instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#windows&#34;&gt;Windows&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#msvc-microsoft-visual-c&#34;&gt;MSVC (Microsoft Visual C++)&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#windows-xp--windows-7-32-bit-x86&#34;&gt;Windows XP / Windows 7 32-bit (x86)&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#windows-10--11-64-bit-x64&#34;&gt;Windows 10 / 11 64-bit (x64)&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#msys2--mingw&#34;&gt;MSYS2 / MINGW&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#windows-10--11-64-bit-x64-1&#34;&gt;Windows 10 / 11 64-bit (x64)&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#linux&#34;&gt;Linux&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#ubuntu-2204-jammy-jellyfish&#34;&gt;Ubuntu 22.04 (Jammy Jellyfish)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#ubuntu-2404-noble-numbat&#34;&gt;Ubuntu 24.04 (Noble Numbat)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#arch&#34;&gt;Arch&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#fedora-36&#34;&gt;Fedora 36&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#fedora-40&#34;&gt;Fedora 40&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#raspberry-pi-os-64-bit-bookworm&#34;&gt;Raspberry Pi OS (64-Bit) (Bookworm)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#raspberry-pi-retropie&#34;&gt;Raspberry Pi (Retropie)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#mac&#34;&gt;Mac&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#freebsd&#34;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#install-instructions&#34;&gt;Install instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#linux-1&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#ios--tvos&#34;&gt;iOS / tvOS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;TIC-80 is a free and open source fantasy computer for making, playing and sharing tiny games.&lt;/p&gt; &#xA;&lt;p&gt;With TIC-80 you get built-in tools for development: code, sprites, maps, sound editors and the command line, which is enough to create a mini retro game.&lt;/p&gt; &#xA;&lt;p&gt;Games are packaged into a cartridge file, which can be easily distributed. TIC-80 works on all popular platforms. This means your cartridge can be played in any device.&lt;/p&gt; &#xA;&lt;p&gt;To make a retro styled game, the whole process of creation and execution takes place under some technical limitations: 240x136 pixel display, 16 color palette, 256 8x8 color sprites, 4 channel sound, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1101448/92492270-d6bcbc80-f1fb-11ea-9d2d-468ad015ace2.gif&#34; alt=&#34;TIC-80&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multiple programming languages: &lt;a href=&#34;https://www.lua.org&#34;&gt;Lua&lt;/a&gt;, &lt;a href=&#34;https://moonscript.org&#34;&gt;Moonscript&lt;/a&gt;, &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript&#34;&gt;Javascript&lt;/a&gt;, &lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;Ruby&lt;/a&gt;, &lt;a href=&#34;http://wren.io/&#34;&gt;Wren&lt;/a&gt;, &lt;a href=&#34;https://fennel-lang.org&#34;&gt;Fennel&lt;/a&gt;, &lt;a href=&#34;http://www.squirrel-lang.org&#34;&gt;Squirrel&lt;/a&gt;, &lt;a href=&#34;https://janet-lang.org&#34;&gt;Janet&lt;/a&gt;, and &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Games can have mouse and keyboard as input&lt;/li&gt; &#xA; &lt;li&gt;Games can have up to 4 controllers as input (with up to 8 buttons, each)&lt;/li&gt; &#xA; &lt;li&gt;Built-in editors: for code, sprites, world maps, sound effects and music&lt;/li&gt; &#xA; &lt;li&gt;An additional memory bank: load different assets from your cartridge while your game is executing&lt;/li&gt; &#xA; &lt;li&gt;Moderated community&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Binary Downloads&lt;/h1&gt; &#xA;&lt;p&gt;You can download compiled versions for the major operating systems directly from our &lt;a href=&#34;https://github.com/nesbox/TIC-80/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Nightly builds&lt;/h2&gt; &#xA;&lt;p&gt;Can be downloaded from &lt;a href=&#34;https://nightly.link/nesbox/TIC-80/workflows/build/main&#34;&gt;nightly builds&lt;/a&gt; page or from the &lt;a href=&#34;https://github.com/nesbox/TIC-80/actions?query=branch%3Amain&#34;&gt;Github Actions&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Unofficial Linux/arm64 nightly builds&lt;/h2&gt; &#xA;&lt;p&gt;Can be downloaded from &lt;a href=&#34;https://nightly.link/aliceisjustplaying/TIC-80/workflows/build-linux-arm64/main?preview&#34;&gt;this nightly.link&lt;/a&gt; page. Tested on Raspberry Pi OS (64-bit) (Bookworm), Asahi Linux (Fedora Remix), Ubuntu 22.04 and Fedora 40.&lt;/p&gt; &#xA;&lt;h1&gt;Pro Version&lt;/h1&gt; &#xA;&lt;p&gt;To help support TIC-80 development, we have a &lt;a href=&#34;https://nesbox.itch.io/tic80&#34;&gt;PRO Version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This version has a few additional features and binaries can only be downloaded on our Itch.io page.&lt;/p&gt; &#xA;&lt;p&gt;For users who can&#39;t spend the money, we made it easy to build the pro version from the source code: (&lt;code&gt;cmake .. -DBUILD_PRO=On&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Pro features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Save/load cartridges in text format, and create your game in any editor you want, also useful for version control systems.&lt;/li&gt; &#xA; &lt;li&gt;Even more memory banks: instead of having only 1 memory bank you have 8.&lt;/li&gt; &#xA; &lt;li&gt;Export your game without editors, and then publish it to app stores.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;p&gt;You can play and share games, tools and music at &lt;a href=&#34;https://tic80.com/play&#34;&gt;https://tic80.com/play&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The community also hangs out and discusses on &lt;a href=&#34;https://t.me/tic80&#34;&gt;Telegram&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/HwZDw7n4dN&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;You can contribute by reporting a bug or requesting a new feature on our &lt;a href=&#34;https://github.com/nesbox/TIC-80/issues&#34;&gt;issues page&lt;/a&gt;. Keep in mind when engaging on a discussion to follow our &lt;a href=&#34;https://github.com/nesbox/TIC-80/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also contribute by reviewing or improving our &lt;a href=&#34;https://github.com/nesbox/TIC-80/wiki&#34;&gt;wiki&lt;/a&gt;. The wiki holds TIC-80 documentation, code snippets and game development tutorials.&lt;/p&gt; &#xA;&lt;h1&gt;Build instructions&lt;/h1&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;h3&gt;MSVC (Microsoft Visual C++)&lt;/h3&gt; &#xA;&lt;h4&gt;Windows XP / Windows 7 32-bit (x86)&lt;/h4&gt; &#xA;&lt;p&gt;The build process has been tested on Windows 11 64-bit (x64); all this should run on Windows 7 SP1 32-bit (x86) as well. This guide assumes you&#39;re running an elevated Command Prompt.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git&lt;/a&gt;, &lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake&lt;/a&gt;, &lt;a href=&#34;https://winstall.app/apps/Microsoft.VisualStudio.2019.BuildTools&#34;&gt;Visual Studio 2019 Build Tools&lt;/a&gt; and &lt;a href=&#34;https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-2.7.8-1/rubyinstaller-devkit-2.7.8-1-x86.exe&#34;&gt;Ruby+Devkit 2.7.8 x86&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the neccessary dependencies within VS2019:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Launch &#34;Visual Studio Installer&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Modify&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Check &#34;Desktop Development with C++&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Go to &#34;Individual components&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Search for &#34;v141&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Install: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;C++ Windows XP Support for VS 2017 (v141) tools [Deprecated]&lt;/li&gt; &#xA;     &lt;li&gt;MSVC v141 - VS 2017 C++ x64/x86 build tools (v14.16)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Modify&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;ridk install&lt;/code&gt; with options &lt;code&gt;1,3&lt;/code&gt; to set up &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt; and development toolchain&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add MSYS2&#39;s &lt;a href=&#34;https://gcc.gnu.org/&#34;&gt;&lt;code&gt;gcc&lt;/code&gt;&lt;/a&gt; at &lt;code&gt;C:\Ruby27\msys32\mingw32\bin&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt; &lt;a href=&#34;https://www.java.com/en/download/help/path.html#:~:text=your%20java%20code.-,Windows%207,-From%20the%20desktop&#34;&gt;(guide)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a new elevated Command Prompt and run the following commands:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd .\TIC-80\build&#xA;copy /y .\build\janet\janetconf.h .\vendor\janet\src\conf\janetconf.h&#xA;cmake -G &#34;Visual Studio 16 2019&#34; -A Win32 -T v141_xp -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_WITH_ALL=On ..&#xA;cmake --build . --parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll find &lt;code&gt;tic80.exe&lt;/code&gt; in &lt;code&gt;TIC-80\build\bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Windows 10 / 11 64-bit (x64)&lt;/h4&gt; &#xA;&lt;p&gt;This guide assumes you&#39;re running PowerShell with an elevated prompt.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git&lt;/a&gt;, &lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake&lt;/a&gt;, &lt;a href=&#34;https://winstall.app/apps/Microsoft.VisualStudio.2019.BuildTools&#34;&gt;Visual Studio 2019 Build Tools&lt;/a&gt; and &lt;a href=&#34;https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-2.7.8-1/rubyinstaller-devkit-2.7.8-1-x64.exe&#34;&gt;Ruby+Devkit 2.7.8 x64&lt;/a&gt; manually or with &lt;a href=&#34;https://github.com/microsoft/winget-cli&#34;&gt;WinGet&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;winget install Git.Git Kitware.CMake Microsoft.VisualStudio.2019.BuildTools RubyInstallerTeam.RubyWithDevKit.2.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the neccessary dependencies within VS2019: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Launch &#34;Visual Studio Installer&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Modify&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Check &#34;Desktop Development with C++&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Make sure the following components are installed: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Windows 10 SDK (10.0.19041.0)&lt;/li&gt; &#xA;     &lt;li&gt;MSVC v142 - VS 2019 C+ + x64/x86 build tools (Latest)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Modify&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;ridk install&lt;/code&gt; with options &lt;code&gt;1,3&lt;/code&gt; to set up &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt; and development toolchain&lt;/li&gt; &#xA; &lt;li&gt;Add MSYS2&#39;s &lt;a href=&#34;https://gcc.gnu.org/&#34;&gt;&lt;code&gt;gcc&lt;/code&gt;&lt;/a&gt; at &lt;code&gt;C:\Ruby27-x64\msys64\mingw64\bin&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt; &lt;a href=&#34;https://www.java.com/en/download/help/path.html#:~:text=Mac%20OS%20X.-,Windows,-Windows%2010%20and&#34;&gt;manually&lt;/a&gt; or with the following PowerShell command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Environment]::SetEnvironmentVariable(&#39;Path&#39;, $env:Path + &#39;;C:\Ruby27-x64\msys64\mingw64\bin&#39;, [EnvironmentVariableTarget]::Machine)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open a new elevated prompt and run the following commands:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd .\TIC-80\build&#xA;cmake -G &#34;Visual Studio 16 2019&#34; -A x64 -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SDLGPU=On -DBUILD_WITH_ALL=On ..&#xA;cmake --build . --parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll find &lt;code&gt;tic80.exe&lt;/code&gt; in &lt;code&gt;TIC-80\build\bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;MSYS2 / MINGW&lt;/h3&gt; &#xA;&lt;h4&gt;Windows 10 / 11 64-bit (x64)&lt;/h4&gt; &#xA;&lt;p&gt;This guide assumes you&#39;re running PowerShell with an elevated prompt.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git&lt;/a&gt;, &lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake&lt;/a&gt; and &lt;a href=&#34;https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-2.7.8-1/rubyinstaller-devkit-2.7.8-1-x64.exe&#34;&gt;Ruby+Devkit 2.7.8 x64&lt;/a&gt; manually or with &lt;a href=&#34;https://github.com/microsoft/winget-cli&#34;&gt;WinGet&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;winget install Git.Git Kitware.CMake RubyInstallerTeam.RubyWithDevKit.2.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;ridk install&lt;/code&gt; with options &lt;code&gt;1,3&lt;/code&gt; to set up &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt; and development toolchain&lt;/li&gt; &#xA; &lt;li&gt;Add MSYS2&#39;s &lt;a href=&#34;https://gcc.gnu.org/&#34;&gt;&lt;code&gt;gcc&lt;/code&gt;&lt;/a&gt; at &lt;code&gt;C:\Ruby27-x64\msys64\mingw64\bin&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt; &lt;a href=&#34;https://www.java.com/en/download/help/path.html#:~:text=Mac%20OS%20X.-,Windows,-Windows%2010%20and&#34;&gt;manually&lt;/a&gt; or with the following PowerShell command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Environment]::SetEnvironmentVariable(&#39;Path&#39;, $env:Path + &#39;;C:\Ruby27-x64\msys64\mingw64\bin&#39;, [EnvironmentVariableTarget]::Machine)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open a new elevated prompt and run the following commands:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd .\TIC-80\build&#xA;cmake -G &#34;MinGW Makefiles&#34; -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SDLGPU=On -DBUILD_WITH_ALL=On ..&#xA;$numCPUs = [Environment]::ProcessorCount&#xA;mingw32-make &#34;-j$numCPUs&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll find &lt;code&gt;tic80.exe&lt;/code&gt; in &lt;code&gt;TIC-80\build\bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu 22.04 (Jammy Jellyfish)&lt;/h3&gt; &#xA;&lt;p&gt;Run the following commands from a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Install the latest CMake from https://apt.kitware.com/&#xA;test -f /usr/share/doc/kitware-archive-keyring/copyright ||&#xA;wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2&amp;gt;/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg &amp;gt;/dev/null&#xA;echo &#39;deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ jammy main&#39; | sudo tee /etc/apt/sources.list.d/kitware.list &amp;gt;/dev/null&#xA;sudo apt-get update&#xA;test -f /usr/share/doc/kitware-archive-keyring/copyright ||&#xA;sudo rm /usr/share/keyrings/kitware-archive-keyring.gpg&#xA;sudo apt-get install kitware-archive-keyring&#xA;&#xA;sudo apt update &amp;amp;&amp;amp; sudo apt -y install build-essential cmake git libpipewire-0.3-dev libwayland-dev libsdl2-dev ruby-dev libglvnd-dev libglu1-mesa-dev freeglut3-dev libcurl4-openssl-dev&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DBUILD_SDLGPU=On -DBUILD_WITH_ALL=On .. &amp;amp;&amp;amp; cmake --build . --parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install with &lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#install-instructions&#34;&gt;Install instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu 24.04 (Noble Numbat)&lt;/h3&gt; &#xA;&lt;p&gt;Run the following commands from a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt -y install build-essential cmake git libpipewire-0.3-dev libwayland-dev libsdl2-dev ruby-dev libcurl4-openssl-dev libglvnd-dev libglu1-mesa-dev freeglut3-dev&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DBUILD_SDLGPU=On -DBUILD_WITH_ALL=On .. &amp;amp;&amp;amp; cmake --build . --parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install with &lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#install-instructions&#34;&gt;Install instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Arch&lt;/h3&gt; &#xA;&lt;p&gt;run the following commands in the Terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -S cmake ruby mesa libglvnd glu&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DBUILD_WITH_ALL=On ..&#xA;make -j4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fedora 36&lt;/h3&gt; &#xA;&lt;p&gt;run the following commands in the Terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf -y groupinstall &#34;Development Tools&#34; &#34;Development Libraries&#34;&#xA;sudo dnf -y install ruby rubygem-{tk{,-doc},rake,test-unit} cmake libglvnd-devel libglvnd-gles freeglut-devel clang libXext-devel SDL_sound pipewire-devel pipewire-jack-audio-connection-kit-devel pulseaudio-libs-devel&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DCMAKE_CXX_COMPILER=clang++ -DSDL_ALSA=On -DBUILD_WITH_ALL=On ..&#xA;make -j4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install with &lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#install-instructions&#34;&gt;Install instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fedora 40&lt;/h3&gt; &#xA;&lt;p&gt;Run the following commands from a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf -y groupinstall &#34;Development Tools&#34; &#34;Development Libraries&#34;&#xA;sudo dnf -y install ruby-devel rubygem-rake cmake clang pipewire-devel SDL2-devel SDL2_sound-devel SDL2_gfx-devel wayland-devel libXext-devel pipewire-jack-audio-connection-kit-devel pipewire-jack-audio-connection-kit-devel pulseaudio-libs-devel rubygems-devel libdecor-devel libdrm-devel mesa-libgbm-devel esound-devel freeglut-devel&#xA;cmake -DBUILD_SDLGPU=On -DBUILD_WITH_ALL=On ..&#xA;cmake --build . --parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install with &lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#install-instructions&#34;&gt;Install instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Raspberry Pi OS (64-Bit) (Bookworm)&lt;/h3&gt; &#xA;&lt;p&gt;Run the following commands from a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt -y install cmake libpipewire-0.3-dev libwayland-dev libsdl2-dev ruby-dev libcurl4-openssl-dev&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DBUILD_SDLGPU=On -DBUILD_WITH_ALL=On .. &amp;amp;&amp;amp; cmake --build . --parallel 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install with &lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#install-instructions&#34;&gt;Install instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Raspberry Pi (Retropie)&lt;/h3&gt; &#xA;&lt;p&gt;First, add jessie-backports repo to your &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;deb [check-valid-until=no] http://archive.debian.org/debian jessie-backports main&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then run the following commands in the Terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# required public keys&#xA;gpg --keyserver pgpkeys.mit.edu --recv-key  8B48AD6246925553&#xA;gpg -a --export 8B48AD6246925553 | sudo apt-key add -&#xA;gpg --keyserver pgpkeys.mit.edu --recv-key 7638D0442B90D010&#xA;gpg -a --export 7638D0442B90D010 | sudo apt-key add -&#xA;&#xA;# upgrade system&#xA;sudo apt-get update&#xA;sudo apt-get dist-upgrade&#xA;&#xA;# install software&#xA;sudo apt-get install git build-essential ruby-full libsdl2-dev zlib1g-dev&#xA;sudo apt-get install -t jessie-backports liblua5.3-dev&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DBUILD_WITH_ALL=On ..&#xA;make -j4&#xA;&#xA;# install software ubuntu 22.04.3 LTS&#xA;sudo apt-get install git build-essential ruby-full libsdl2-dev zlib1g-dev&#xA;sudo apt-get install liblua5.3-dev&#xA;sudo apt-get install libcurl4-openssl-dev&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DBUILD_WITH_ALL=On ..&#xA;make -j4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install with &lt;a href=&#34;https://raw.githubusercontent.com/nesbox/TIC-80/main/#install-instructions&#34;&gt;Install instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; If you are using a normal Raspberry Pi image (not Retropie) you may not have OpenGL drivers enabled. Run &lt;code&gt;sudo raspi-config&lt;/code&gt;, then select 7 for &#34;Advanced Options&#34;, followed by 6 for &#34;GL Drivers&#34;, and enable &#34;GL (Fake KMS) Desktop Driver&#34;. After changing this setting, reboot.&lt;/p&gt; &#xA;&lt;h2&gt;Mac&lt;/h2&gt; &#xA;&lt;p&gt;install &lt;code&gt;Command Line Tools for Xcode&lt;/code&gt; and &lt;code&gt;brew&lt;/code&gt; package manager&lt;/p&gt; &#xA;&lt;p&gt;run the following commands in the Terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install git cmake&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DBUILD_WITH_ALL=On ..&#xA;make -j4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to create application icon for development version&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p ~/Applications/TIC80dev.app/Contents/{MacOS,Resources}&#xA;cp -f macosx/tic80.plist ~/Applications/TIC80dev.app/Contents/Info.plist&#xA;cp -f macosx/tic80.icns ~/Applications/TIC80dev.app/Contents/Resources&#xA;cat &amp;gt; ~/Applications/TIC80dev.app/Contents/MacOS/tic80 &amp;lt;&amp;lt;EOF&#xA;#!/bin/sh&#xA;exec /Users/nesbox/projects/TIC-80/build/bin/tic80 --skip --scale 2 &amp;gt;/dev/null&#xA;EOF&#xA;chmod +x ~/Applications/TIC80dev.app/Contents/MacOS/TIC80dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure to update the absolute path to the tic80 binary in the script, or update the launch arguments.&lt;/p&gt; &#xA;&lt;h2&gt;FreeBSD&lt;/h2&gt; &#xA;&lt;p&gt;run the following commands in the Terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pkg install gcc git cmake ruby libglvnd libglu freeglut mesa-devel mesa-dri alsa-lib&#xA;git clone --recursive https://github.com/nesbox/TIC-80 &amp;amp;&amp;amp; cd TIC-80/build&#xA;cmake -DBUILD_WITH_ALL=On ..&#xA;make -j4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mesa looks for swrast_dri.so from the wrong path, so also symlink it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo ln -s /usr/local/lib/dri/swrast_dri.so /usr/local/lib/dri-devel/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Install instructions&lt;/h1&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;p&gt;To install run &lt;code&gt;sudo make install -j4&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;TIC-80 can now be run with &lt;code&gt;tic80&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;iOS / tvOS&lt;/h2&gt; &#xA;&lt;p&gt;You can find iOS/tvOS version here&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0.60.3: &lt;a href=&#34;https://github.com/brunophilipe/TIC-80&#34;&gt;https://github.com/brunophilipe/TIC-80&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;0.45.0: &lt;a href=&#34;https://github.com/CliffsDover/TIC-80&#34;&gt;https://github.com/CliffsDover/TIC-80&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Filippo Rivato - &lt;a href=&#34;https://twitter.com/HomineLudens&#34;&gt;Twitter @HomineLudens&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fred Bednarski - &lt;a href=&#34;https://twitter.com/FredBednarski&#34;&gt;Twitter @FredBednarski&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Al Rado - &lt;a href=&#34;https://twitter.com/alrado2&#34;&gt;Twitter @alrado2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Trevor Martin - &lt;a href=&#34;https://twitter.com/trelemar&#34;&gt;Twitter @trelemar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MonstersGoBoom - &lt;a href=&#34;https://twitter.com/MonstersGo&#34;&gt;Twitter @MonstersGoBoom&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matheus Lessa - &lt;a href=&#34;https://twitter.com/matheuslrod&#34;&gt;Twitter @matheuslrod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CliffsDover - &lt;a href=&#34;https://twitter.com/DancingBottle&#34;&gt;Twitter @DancingBottle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Frantisek Jahoda - &lt;a href=&#34;https://github.com/jahodfra&#34;&gt;GitHub @jahodfra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Guilherme Medeiros - &lt;a href=&#34;https://github.com/frenetic&#34;&gt;GitHub @frenetic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrei Rudenko - &lt;a href=&#34;https://github.com/RudenkoArts&#34;&gt;GitHub @RudenkoArts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Phil Hagelberg - &lt;a href=&#34;https://technomancy.us/colophon&#34;&gt;@technomancy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rob Loach - &lt;a href=&#34;https://twitter.com/RobLoach&#34;&gt;Twitter @RobLoach&lt;/a&gt; &lt;a href=&#34;https://github.com/RobLoach&#34;&gt;GitHub @RobLoach&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wade Brainerd - &lt;a href=&#34;https://github.com/wadetb&#34;&gt;GitHub @wadetb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paul Robinson - &lt;a href=&#34;https://github.com/paul59&#34;&gt;GitHub @paul59&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stefan Devai - &lt;a href=&#34;https://github.com/stefandevai&#34;&gt;GitHub @stefandevai&lt;/a&gt; &lt;a href=&#34;https://stefandevai.me&#34;&gt;Blog stefandevai.me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Damien de Lemeny - &lt;a href=&#34;https://github.com/ddelemeny&#34;&gt;GitHub @ddelemeny&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Adrian Siekierka - &lt;a href=&#34;https://github.com/asiekierka&#34;&gt;GitHub @asiekierka&lt;/a&gt; &lt;a href=&#34;https://asie.pl/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jay Em (Sweetie16 palette) - &lt;a href=&#34;https://twitter.com/GrafxKid&#34;&gt;Twitter @GrafxKid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;msx80 - &lt;a href=&#34;https://twitter.com/msx80&#34;&gt;Twitter @msx80&lt;/a&gt; &lt;a href=&#34;https://github.com/msx80&#34;&gt;Github msx80&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Josh Goebel - &lt;a href=&#34;https://twitter.com/dreamer3&#34;&gt;Twitter @dreamer3&lt;/a&gt; &lt;a href=&#34;https://github.com/joshgoebel&#34;&gt;Github joshgoebel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Joshua Minor - &lt;a href=&#34;https://github.com/jminor&#34;&gt;GitHub @jminor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Julia Nelz - &lt;a href=&#34;https://github.com/remi6397&#34;&gt;Github @remi6397&lt;/a&gt; &lt;a href=&#34;https://nelz.pl&#34;&gt;WWW&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thorben Krüger - &lt;a href=&#34;https://chaos.social/@benthor&#34;&gt;Mastodon @benthor@chaos.social&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;David St-Hilaire - &lt;a href=&#34;https://github.com/sthilaid&#34;&gt;GitHub @sthilaid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alec Troemel - &lt;a href=&#34;https://github.com/AlecTroemel&#34;&gt;Github @alectroemel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kolten Pearson - &lt;a href=&#34;https://github.com/koltenpearson&#34;&gt;Github @koltenpearson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cort Stratton - &lt;a href=&#34;https://github.com/cdwfs&#34;&gt;Github @cdwfs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alice - &lt;a href=&#34;https://github.com/aliceisjustplaying&#34;&gt;Github @aliceisjustplaying&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sven Knebel - &lt;a href=&#34;https://github.com/sknebel&#34;&gt;Github @sknebel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Graham Bates - &lt;a href=&#34;https://github.com/grahambates&#34;&gt;Github @grahambates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kii - &lt;a href=&#34;https://github.com/kiikrindar&#34;&gt;Github @kiikrindar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matt Westcott - &lt;a href=&#34;https://github.com/gasman&#34;&gt;Github @gasman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;NuSan - &lt;a href=&#34;https://github.com/thenusan&#34;&gt;Github @TheNuSan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bb-qq/r8152</title>
    <updated>2024-10-06T01:41:48Z</updated>
    <id>tag:github.com,2024-10-06:/bb-qq/r8152</id>
    <link href="https://github.com/bb-qq/r8152" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Synology DSM driver for Realtek RTL8152/RTL8153/RTL8156 based adapters&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DSM driver for realtek RTL8152/RTL8153/RTL8156/RTL8157 based USB Ethernet adapters&lt;/h1&gt; &#xA;&lt;p&gt;This is a Realtek USB ethernet driver package for Synology NASes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RTL8152/RTL8153: 1.0Gbps&lt;/li&gt; &#xA; &lt;li&gt;RTL8156: 2.5Gbps&lt;/li&gt; &#xA; &lt;li&gt;RTL8157: 5Gbps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You may also be interested in my other projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bb-qq/aqc111&#34;&gt;AQC111U(5Gbps ethernet) driver package for Synology NASes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bb-qq/uas&#34;&gt;UASP(USB Attached SCSI Protocol for external storage devices) driver package for Synology NASes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚠️&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;It has been confirmed that this driver has been modified and reprinted on other sites.&lt;/p&gt; &#xA;&lt;p&gt;Since this driver works with root privileges, &lt;strong&gt;DO NOT USE IT OBTAINED FROM OTHER SITES&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported NAS platform&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DSM 7.x and 6.2&lt;/li&gt; &#xA; &lt;li&gt;Almost all models released after 2017 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Older models also work, but you may not have enough performance.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bb-qq/r8152/wiki/Compatibility&#34;&gt;Compatibility reports&lt;/a&gt; by the community will help you.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can download drivers from the &lt;a href=&#34;https://github.com/bb-qq/r8152/releases&#34;&gt;release page&lt;/a&gt; and determine a proper driver for your model from &lt;a href=&#34;https://www.synology.com/en-global/knowledgebase/DSM/tutorial/Compatibility_Peripherals/What_kind_of_CPU_does_my_NAS_have&#34;&gt;knowledge base of Synology&lt;/a&gt;,&lt;/p&gt; &#xA;&lt;p&gt;I would appreciate it if you could let me know whether it works. If you have any problems, the &lt;a href=&#34;https://github.com/bb-qq/r8152/wiki/Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; page may help.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: I recommend connecting devices using front ports because some users have reported stability issues when using rear ports.&lt;/p&gt; &#xA;&lt;h3&gt;Author&#39;s environment&lt;/h3&gt; &#xA;&lt;p&gt;The author uses the following environments daily and it has confirmed that these devices work stably.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Disclaimer&lt;/em&gt;: The following product links are affiliate links. If you purchase them, I might earn a small commission at no extra cost to you.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NAS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;DS918+ (apollolake) with 16GB RAM&lt;/li&gt; &#xA;   &lt;li&gt;DSM 7.2-64570 Update 3&lt;/li&gt; &#xA;   &lt;li&gt;Ethernet dongle &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;USB-LAN2500R2 (RTL8156BG, only in Japan.)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;PC &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ethernet card &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://amzn.to/3RNLg7u&#34;&gt;AQN-107&lt;/a&gt; (discontinued, but almost equivalent to &lt;a href=&#34;https://amzn.to/3fPJUX3&#34;&gt;ASUS XG-C100C&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Windows10 SMB3&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Network switches &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;main: &lt;a href=&#34;https://amzn.to/3Sam3W0&#34;&gt;QNAP QSW-2104-2T&lt;/a&gt; (Broadcom &lt;code&gt;BCM53161&lt;/code&gt;: x3 2.5Gbe / x2 10Gbe)&lt;/li&gt; &#xA;   &lt;li&gt;sub: &lt;a href=&#34;https://amzn.to/41PHpv6&#34;&gt;keepLINK 5 Port 2.5G Switch&lt;/a&gt; (Realtek &lt;code&gt;RTL8372&lt;/code&gt;: x5 2.5Gbe / x1 10G SFP+) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;If you are looking for an affordable 2.5Gbe switch, I recommend products using the RTL837x family, which is a newer generation of chips and consumes less power. Many other products are available from many vendors.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;cable: &lt;a href=&#34;https://amzn.to/3Xyybla&#34;&gt;Ubiquiti Networks UC-PATCH Cat6 Cable&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported devices&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/bb-qq/r8152/wiki/Compatibility&#34;&gt;Compatibility page&lt;/a&gt; for the latest information.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have other products not listed and it does not work, please create an issue with the output of lsusb.&lt;/li&gt; &#xA; &lt;li&gt;If you use a product with a Type-C connector, you will need a connector or cable to convert it to Type-A. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For stable device operation, I recommend using a USB 3.2gen2 10Gbps compatible cable.&lt;/li&gt; &#xA;   &lt;li&gt;A 5Gbps cable is sufficient for this driver to work, but a 10Gbps capable cable can be expected to have higher transmission quality.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RTL8156(2.5Gbps) based devices&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;INFO&lt;/strong&gt;: Products using RTL8156&lt;strong&gt;BG&lt;/strong&gt; have dramatically lower power consumption(up to 64% decrease) and heat generation than those using RTL8156.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/2ZRx1pi&#34;&gt;ASUSTOR AS-U2.5G&lt;/a&gt; (RTL8156/Type-C to A) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NOTE: The included Type A-C conversion adapter is directional. There is a mark on one side of the USB-C connector that must be on the same side as the USB logo on the adapter.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3u5wUH4&#34;&gt;ASUSTOR AS-U2.5G2&lt;/a&gt; (RTL8156B/Type-C to A) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NOTE: Same above.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/2ZPmzKD&#34;&gt;CLUB 3D CAC-1420&lt;/a&gt; (RTL8156/Type-A)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/2PLmR5v&#34;&gt;TRENDnet TUC-ET2G&lt;/a&gt; (RTL8156(V1.0)/RTL8156BG(V2.0)/Type-C) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NOTE: Customer support states that RTL8156BG was adopted in V2.0. However, there is no way to distinguish V1.0 from V2.0. Can we expect the new ones to be v2.0?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/45TS6Nv&#34;&gt;ASUS USB-C2500&lt;/a&gt; (RTL8156B/Type-A)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/39yfZyj&#34;&gt;CableCreation 2.5G Ethernet to USB Adapter&lt;/a&gt; (RTL8156/Type-A)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3fzXmfE&#34;&gt;UGREEN USB C to 2.5G Ethernet Adapter (2019)&lt;/a&gt; (RTL8156/Type-C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3QHSElc&#34;&gt;UGREEN USB C to Ethernet Adapter 2.5G (2023)&lt;/a&gt; (RTL8156BG/Type-C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3QK7qrZ&#34;&gt;Anker USB C to 2.5 Gbps Ethernet Adapter&lt;/a&gt; (RTL8156/Type-C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/46XTsYX&#34;&gt;StarTech.com US2GC30&lt;/a&gt; (RTL8156BG/Type-C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/2ZISyAb&#34;&gt;Plannex USB-LAN2500R&lt;/a&gt; (RTL8156/Type-A, only in Japan.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/47c14GU&#34;&gt;Plannex USB-LAN2500R2&lt;/a&gt; (RTL8156BG/Type-A, only in Japan.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/36kGQf9&#34;&gt;Buffalo LUA-U3-A2G&lt;/a&gt; (RTL8156/Type-A, only in Japan.)&lt;/li&gt; &#xA; &lt;li&gt;biaze KZ13 [ &lt;a href=&#34;https://alexnld.com/product/biaze-kz13-usb-external-2-5g-network-adapter-usb-to-rj45-converter-rj45-network-port-hub-usb-gigabit-wired-network-card-for-macbook-surface-lenovo-asus-computers/&#34;&gt;link1&lt;/a&gt; &lt;a href=&#34;https://digitalzakka.com/product/biaze-kz13-2-5g-usb-external-network-adapter-rj45-converter-hub-gigabit-wired-network-card/&#34;&gt;link2&lt;/a&gt; ] (Type-A, only in China)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3HfEW3G&#34;&gt;ULT-WIIQ USB 2.5G Ethernet Adapter&lt;/a&gt; (RTL8156B/Type-A, only in Europe?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RTL8157(5Gbps) based devices&lt;/h3&gt; &#xA;&lt;p&gt;If you find other products, I would appreciate it if you could let me know.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WisdPi WP-UT5 [ &lt;a href=&#34;https://amzn.to/3TA3RWh&#34;&gt;Amazon&lt;/a&gt; &lt;a href=&#34;https://s.click.aliexpress.com/e/_DDQpNWZ&#34;&gt;AliExpress&lt;/a&gt; ] (RTL8157/Type-A and C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3MVG5QF&#34;&gt;WAVLINK/WiNSTARS WS-NWU340G&lt;/a&gt; (RTL8157/Type-C, report needed)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;h3&gt;Preparation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.synology.com/en-us/knowledgebase/DSM/tutorial/General_Setup/How_to_login_to_DSM_with_root_permission_via_SSH_Telnet&#34;&gt;Enable SSH&lt;/a&gt; and login to your NAS.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &#34;Package Center&#34;&lt;/li&gt; &#xA; &lt;li&gt;Press &#34;Manual Install&#34;&lt;/li&gt; &#xA; &lt;li&gt;Choose a driver package downloaded from the &lt;a href=&#34;https://github.com/bb-qq/r8152/releases&#34;&gt;release page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;[DSM7] The installation will fail the first time. After that, run the following command from the SSH terminal: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;sudo install -m 4755 -o root -D /var/packages/r8152/target/r8152/spk_su /opt/sbin/spk_su&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;sudo chmod a+rx /opt /opt/sbin&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[DSM7] Retry installation. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You don&#39;t need the above DSM7-specific steps at the next time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Reboot your NAS. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This procedure is not usually necessary, but many have reported that a reboot was necessary, so please reboot just in case.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the driver package from the Package Center and start the driver manually.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.synology.com/en-us/knowledgebase/SRM/help/SRM/PkgManApp/install_buy&#34;&gt;https://www.synology.com/en-us/knowledgebase/SRM/help/SRM/PkgManApp/install_buy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Do not use Safari for this operation.&lt;/p&gt; &#xA;&lt;h2&gt;How to configure&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the IP addresses and MTU of the added NICs from the DSM UI in the same way as the built-in NICs.&lt;/p&gt; &#xA;&lt;p&gt;Option: I recommend setting MTU to 9000 and SMB protocol version to v3 for better performance.&lt;/p&gt; &#xA;&lt;h2&gt;Performance test&lt;/h2&gt; &#xA;&lt;h3&gt;Environment&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DS918+ (USB-LAN2500R)&lt;/li&gt; &#xA; &lt;li&gt;DSM 6.2&lt;/li&gt; &#xA; &lt;li&gt;direct connection with PC (AQN-107: discontinued, but almost equivalent to &lt;a href=&#34;https://amzn.to/3fPJUX3&#34;&gt;ASUS XG-C100C&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.jadahl.com/iperf-arp-scan/DSM_6.2/&#34;&gt;native iperf3&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;using docker causes high CPU load&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Result&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Connecting to host 192.168.0.xxx, port 5201&#xA;[  4] local 192.168.0.xxx port 50366 connected to 192.168.0.xxx port 5201&#xA;[ ID] Interval           Transfer     Bandwidth&#xA;[  4]   0.00-1.00   sec   266 MBytes  2.23 Gbits/sec&#xA;[  4]   1.00-2.00   sec   274 MBytes  2.30 Gbits/sec&#xA;[  4]   2.00-3.00   sec   278 MBytes  2.33 Gbits/sec&#xA;[  4]   3.00-4.00   sec   278 MBytes  2.33 Gbits/sec&#xA;[  4]   4.00-5.00   sec   278 MBytes  2.33 Gbits/sec&#xA;[  4]   5.00-6.00   sec   278 MBytes  2.34 Gbits/sec&#xA;[  4]   6.00-7.00   sec   274 MBytes  2.30 Gbits/sec&#xA;[  4]   7.00-8.00   sec   267 MBytes  2.24 Gbits/sec&#xA;[  4]   8.00-9.00   sec   269 MBytes  2.26 Gbits/sec&#xA;[  4]   9.00-10.00  sec   271 MBytes  2.27 Gbits/sec&#xA;- - - - - - - - - - - - - - - - - - - - - - - - -&#xA;[ ID] Interval           Transfer     Bandwidth&#xA;[  4]   0.00-10.00  sec  2.67 GBytes  2.29 Gbits/sec                  sender&#xA;[  4]   0.00-10.00  sec  2.67 GBytes  2.29 Gbits/sec                  receiver&#xA;&#xA;iperf Done.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>openshwprojects/OpenBK7231T_App</title>
    <updated>2024-10-06T01:41:48Z</updated>
    <id>tag:github.com,2024-10-06:/openshwprojects/OpenBK7231T_App</id>
    <link href="https://github.com/openshwprojects/OpenBK7231T_App" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source firmware (Tasmota/Esphome replacement) for BK7231T, BK7231N, BL2028N, T34, XR809, W800/W801, W600/W601, BL602 and LN882H&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;OpenBK7231T/OpenBeken is a Tasmota/Esphome replacement for new Tuya modules featuring MQTT and Home Assistant compatibility. This repository is named &#34;OpenBK7231T_App&#34;, but now it&#39;s a multiplatform app, supporting build for multiple separate chips:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3951016.html&#34;&gt;BK7231T&lt;/a&gt; (&lt;a href=&#34;https://developer.tuya.com/en/docs/iot/wb3s-module-datasheet?id=K9dx20n6hz5n4&#34;&gt;WB3S&lt;/a&gt;, &lt;a href=&#34;https://developer.tuya.com/en/docs/iot/wb2s-module-datasheet?id=K9ghecl7kc479&#34;&gt;WB2S&lt;/a&gt;, WB2L, etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3951016.html&#34;&gt;BK7231N&lt;/a&gt; (&lt;a href=&#34;https://developer.tuya.com/en/docs/iot/cb2s-module-datasheet?id=Kafgfsa2aaypq&#34;&gt;CB2S&lt;/a&gt;, &lt;a href=&#34;https://developer.tuya.com/en/docs/iot/cb2l-module-datasheet?id=Kai2eku1m3pyl&#34;&gt;CB2L&lt;/a&gt;, &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3903356.html&#34;&gt;WB2L_M1&lt;/a&gt;, etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4058227.html&#34;&gt;BK7231M&lt;/a&gt;, this is a non-Tuya version of BK7231N with 00000000 keys, also sometimes in BL2028 flavour&lt;/li&gt; &#xA; &lt;li&gt;T34 (&lt;a href=&#34;https://developer.tuya.com/en/docs/iot/t34-module-datasheet?id=Ka0l4h5zvg6j8&#34;&gt;T34 is based on BK7231N&lt;/a&gt;), see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4036975.html&#34;&gt;flashing trick&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BL2028N (&lt;a href=&#34;https://www.elektroda.com/rtvforum/viewtopic.php?p=20262533#20262533&#34;&gt;BL2028N is a Belon version of BK7231N&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3806769.html&#34;&gt;XR809&lt;/a&gt; (&lt;a href=&#34;https://developer.tuya.com/en/docs/iot/xr3-datasheet?id=K98s9168qi49g&#34;&gt;XR3&lt;/a&gt;, etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3889041.html&#34;&gt;BL602&lt;/a&gt; (&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3945435.html&#34;&gt;SM-028_V1.3 etc&lt;/a&gt;), see also &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4050297.html&#34;&gt;BL602 flash OBK via OTA tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.leapfive.com/wp-content/uploads/2020/09/LF686-Datasheet.pdf&#34;&gt;LF686&lt;/a&gt; (flash it &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4024917.html&#34;&gt;as BL602&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;W800 (W800-C400, WinnerMicro WiFi &amp;amp; Bluetooth), W801&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/viewtopic.php?p=20252619#20252619&#34;&gt;W600&lt;/a&gt; (WinnerMicro chip), W601 (&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3950611.html&#34;&gt;WIS600, ESP-01W&lt;/a&gt;, &lt;a href=&#34;https://www.elektroda.com/rtvforum/viewtopic.php?p=20239610#20239610&#34;&gt;TW-02&lt;/a&gt;, &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3929601.html&#34;&gt;TW-03&lt;/a&gt;, etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4027545.html&#34;&gt;LN882H&lt;/a&gt; by Lightning Semi - &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4027545.html&#34;&gt;datasheet&lt;/a&gt;, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4028087.html&#34;&gt;flashing how-to&lt;/a&gt;, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4032240.html&#34;&gt;sample device teardown and flashing&lt;/a&gt;, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4045532.html&#34;&gt;new flash tool&lt;/a&gt;, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4050274.html&#34;&gt;dev board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows, via &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4046056.html&#34;&gt;simulator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ESP32 (WIP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please use automatically compiled binaries from the Releases tab. To build yourself for a given platform, just checkout first our version of SDK and then checkout this app repository into it, details later.&lt;/p&gt; &#xA;&lt;p&gt;See our guides in Russian: &lt;a href=&#34;https://www.v-elite.ru/t34&#34;&gt;BK7231N/T34&lt;/a&gt;, and &lt;a href=&#34;https://www.v-elite.ru/bl602rgb&#34;&gt;BL602 RGB&lt;/a&gt;, and &lt;a href=&#34;https://www.youtube.com/watch?v=BnmSWZchK-E&#34;&gt;Youtube guide for BK7231/T34&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to get some generic information about BK7231 modules, available datasheets, pinout, peripherals, &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3951016.html&#34;&gt;consult our docs topic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://openbekeniot.github.io/webapp/devicesList.html&#34;&gt;Supported Devices/Templates List&lt;/a&gt; Now with 600+ entries! (Get 🏆&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3950844.html&#34;&gt;free SD Card&lt;/a&gt;🏆 for submitting new one!)&lt;/h1&gt; &#xA;&lt;p&gt;We have our own interactive devices database that is maintained by users. The database is also accessible from inside our firmware (but requires internet connection to fetch). Have a not listed device? HELP US, submit a teardown &lt;a href=&#34;https://www.elektroda.com/rtvforum/posting.php?mode=newtopic&amp;amp;f=51&#34;&gt;here&lt;/a&gt; and 🏆&lt;strong&gt;get free SD card and gadgets set&lt;/strong&gt;🏆 ! Thanks to cooperation with &lt;a href=&#34;https://www.elektroda.com/&#34;&gt;Elektroda.com&lt;/a&gt;, if you submit a detailed teardown/article/review, we can send you &lt;a href=&#34;https://obrazki.elektroda.pl/1470574200_1670833596.jpg&#34;&gt;this set of gadgets&lt;/a&gt; for free (🚚shipping with normal letter🚚). NOTE: Obviously almost any device with supported chip (BK7231, BL602, W600, etc is potentially supported and it&#39;s not possible to list all available devices in the market, so feel free to try even if your device is not listed - &lt;em&gt;we are &lt;a href=&#34;https://www.elektroda.com/rtvforum/forum390.html&#34;&gt;here&lt;/a&gt; to help and guide you step by step&lt;/em&gt;!)&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://www.youtube.com/@elektrodacom&#34;&gt;Our Youtube Channel&lt;/a&gt; (See step by step guides for flashing and setup)&lt;/h1&gt; &#xA;&lt;p&gt;We have our own Youtube channel with OBK-related guides. Please see our playlists:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLzbXEc2ebpH0CZDbczAXT94BuSGrd_GoM&#34;&gt;flashing guides playlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLzbXEc2ebpH0I8m_Cfbqv1MTlQuBKYvlx&#34;&gt;generic setup hints, tricks, tips&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can help us by giving like, a comment and subscribe!&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;OpenBeken features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tasmota-like setup, configuration and experience on all supported platforms (supports &lt;a href=&#34;https://www.youtube.com/watch?v=OhdkEJ-SuTU&#34;&gt;common Tasmota JSON over http&lt;/a&gt; and MQTT, etc)&lt;/li&gt; &#xA; &lt;li&gt;OTA firmware upgrade system (for BK, W*00, BL602, LN); to use OTA, &lt;a href=&#34;https://www.youtube.com/watch?v=OPcppowaxaA&#34;&gt;drag and drop&lt;/a&gt; proper OTA file on OTA field on new Web App Javascript Console&lt;/li&gt; &#xA; &lt;li&gt;Online &lt;a href=&#34;https://github.com/openshwprojects/OpenBK7231T_App/releases&#34;&gt;builds for all platforms&lt;/a&gt; via Github, configurable &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4033833.html&#34;&gt;per-user build system&lt;/a&gt;, also supports &lt;a href=&#34;https://github.com/openshwprojects/OpenBK7231T_App/tree/main/docker&#34;&gt;Docker builds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MQTT compatibility with Home Assistant (with both Yaml generator and &lt;a href=&#34;https://youtu.be/pkcspey25V4&#34;&gt;HA Discovery&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Support for multiple relays, buttons, leds, inputs and PWMs, everything fully scriptable&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openshwprojects/OpenBK7231T_App/raw/main/docs/drivers.md&#34;&gt;Driver system&lt;/a&gt; for custom peripherals, including &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4038151.html&#34;&gt;TuyaMCU&lt;/a&gt; (see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3898502.html&#34;&gt;Dimmer tutorial&lt;/a&gt;), I2C bus and &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3887748.html&#34;&gt;BL0942&lt;/a&gt;, BL0937 power metering chips, Motor Driver Bridge.&lt;/li&gt; &#xA; &lt;li&gt;Hardware and software I2C, supports multiple I2C devices, like TC74 temperature sensor, MCP23017 port expander, PCF8574T LCD 2x16 (or other?), etc&lt;/li&gt; &#xA; &lt;li&gt;Hardware and software SPI, support for SPI BL0942, etc&lt;/li&gt; &#xA; &lt;li&gt;NTP time from network (can be used with &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3942730.html&#34;&gt;TH06&lt;/a&gt; and other TuyaMCU devices), can run any script on selected weekday hour:minute:second&lt;/li&gt; &#xA; &lt;li&gt;Dedicated &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4038151.html&#34;&gt;TuyaMCU support&lt;/a&gt; with extra TuyaMCU analyzer tool for decoding new devices (&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3970199.html&#34;&gt;tutorial here&lt;/a&gt;, code &lt;a href=&#34;https://github.com/openshwprojects/TuyaMCUAnalyzer&#34;&gt;repository here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;support for &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3914412.html&#34;&gt;TuyaMCU Battery Powered devices protocol&lt;/a&gt; (TuyaMCU enables WiFi module only to report the state, eg. for door sensors, water sensors)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YQdR7r6lXRY&#34;&gt;RGBCW LED lighting control&lt;/a&gt; compatible with Home Assistant (including PWM LEDs, and SM2135, BP5758, &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4060227.html&#34;&gt;SM15155&lt;/a&gt; etc )&lt;/li&gt; &#xA; &lt;li&gt;LittleFS integration for scripts and large files (you can &lt;a href=&#34;https://www.youtube.com/watch?v=kXi8S12tmC8&#34;&gt;write scripts there&lt;/a&gt;, you can host a page there with &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3971355.html&#34;&gt;REST interface control&lt;/a&gt; of device)&lt;/li&gt; &#xA; &lt;li&gt;Command line system for starting and configuring drivers, for controlling channels, etc&lt;/li&gt; &#xA; &lt;li&gt;Short startup command (up to 512 characters) storage in flash config, so you can easily init your drivers (eg. BL0942) without LittleFS&lt;/li&gt; &#xA; &lt;li&gt;Advanced scripting and events system (allows you to mirror Tasmota rules, for example catch button click, double click, hold)&lt;/li&gt; &#xA; &lt;li&gt;Easily configurable via commands (see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3947241.html&#34;&gt;tutorial&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Thanks to keeping Tasmota standard, OBK has basic compatibility with &lt;a href=&#34;https://www.youtube.com/watch?v=x4p3JHXbK1E&amp;amp;ab_channel=Elektrodacom&#34;&gt;ioBroker&lt;/a&gt; and similar systems through TELE/STAT/CMND MQTT packets, Tasmota Control app is also supported&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4040325.html&#34;&gt;DDP lighting protocol support&lt;/a&gt; (&#34;startDriver DDP&#34; in autoexec.bat/short startup command), works with xLights,&lt;/li&gt; &#xA; &lt;li&gt;Can be scripted to even &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3972935.html&#34;&gt;work with shutters&lt;/a&gt;, see also &lt;a href=&#34;https://www.elektroda.com/rtvforum/viewtopic.php?p=20910126#20910126&#34;&gt;second shutters script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password-protected Web security &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4021160.html&#34;&gt;see tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Advanced deep sleep with GPIO/timer wakeup and &lt;a href=&#34;https://youtu.be/eupL16eB7BA&#34;&gt;hybrid power save systems&lt;/a&gt;, fully scriptable, can be configured to last longer than Tuya&lt;/li&gt; &#xA; &lt;li&gt;Supports automatic GPIO setup with &lt;a href=&#34;https://www.youtube.com/watch?v=WunlqIMAdgw&#34;&gt;Tuya GPIO extraction&lt;/a&gt;, &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3973669.html&#34;&gt;cloudcutter templates&lt;/a&gt;, can also import/export &lt;a href=&#34;https://openbekeniot.github.io/webapp/devicesList.html&#34;&gt;OpenBeken templates&lt;/a&gt;, you can also use &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3976371.html&#34;&gt;GPIODoctor to find out quickly GPIO roles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Advanced and custom drivers like &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4025665.html&#34;&gt;synchronized PWM groups with configurable dead time&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WS2812B support, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4036716.html&#34;&gt;scripting tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LFS and REST API allows you to create and host a custom HTML+CSS+JS page on device with a custom GUI/display of channels/TuyaMCU dpIDs, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3971355.html&#34;&gt;tutorial&lt;/a&gt; and see &lt;a href=&#34;https://www.elektroda.com/rtvforum/viewtopic.php?p=20932186#20932186&#34;&gt;sample page&lt;/a&gt; , and see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4040354.html&#34;&gt;final version of custom TOMPD-63-WIFI page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;can control &#39;smart lab organiser drawers&#39; with a custom Drawers driver, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4054134.html&#34;&gt;full presentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DHT11 (and family) sensors support, BMP280 support, initial DS18B20 support&lt;/li&gt; &#xA; &lt;li&gt;Can draw customizable charts directly on device, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4075289.html&#34;&gt;tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can run on Windows with device simulator/schematic drawer, see &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4046056.html&#34;&gt;tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;and much more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is also a bit more outdated &lt;a href=&#34;https://github.com/openshwprojects/OpenBK7231T_App/wiki/Wiki-Home&#34;&gt;WIKI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;p&gt;OpenBeken supports &lt;a href=&#34;https://www.elektroda.com/rtvforum/viewtopic.php?p=20946719#20946719&#34;&gt;online builds&lt;/a&gt; for all platforms (BK7231T, BK7231N, XR809, BL602, W800), but if you want to compile it yourself, see &lt;a href=&#34;https://github.com/openshwprojects/OpenBK7231T_App/raw/main/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Developer guides&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;online builds system &lt;a href=&#34;https://www.elektroda.com/rtvforum/viewtopic.php?p=20946719#20946719&#34;&gt;guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;how to &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4056286.html&#34;&gt;create custom obk driver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;how to &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4035491.html&#34;&gt;analyze unknown protocol with Salae logic analyzer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;obk &lt;a href=&#34;https://www.elektroda.com/rtvforum/topic4046056.html&#34;&gt;simulator short presentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Flashing&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/openshwprojects/BK7231GUIFlashTool&#34;&gt;our GUI easy flash tool&lt;/a&gt;, also see &lt;a href=&#34;https://github.com/openshwprojects/OpenBK7231T_App/raw/main/FLASHING.md&#34;&gt;FLASHING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/openshwprojects/OpenBK7231T_App/raw/main/docs&#34;&gt;Docs - MQTT topics, Console Commands, Flags, Constants, Pin Roles, Channel Types, FAQ, autoexec.bat examples&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Further reading&lt;/h1&gt; &#xA;&lt;p&gt;For technical insights and generic SDK information related to Beken, WinnerMicro, Bouffallo Lab and XRadio modules, please refer:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3850712.html&#34;&gt;https://www.elektroda.com/rtvforum/topic3850712.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3866123.html&#34;&gt;https://www.elektroda.com/rtvforum/topic3866123.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elektroda.com/rtvforum/topic3806769.html&#34;&gt;https://www.elektroda.com/rtvforum/topic3806769.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Support project&lt;/h1&gt; &#xA;&lt;p&gt;If you want to support project, please donate at: &lt;a href=&#34;https://www.paypal.com/paypalme/openshwprojects&#34;&gt;https://www.paypal.com/paypalme/openshwprojects&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks for Tasmota/Esphome/etc contributors for making a great reference for implementing Tuya module drivers&lt;/p&gt;</summary>
  </entry>
</feed>