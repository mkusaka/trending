<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-02T01:52:16Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>marella/ctransformers</title>
    <updated>2023-07-02T01:52:16Z</updated>
    <id>tag:github.com,2023-07-02:/marella/ctransformers</id>
    <link href="https://github.com/marella/ctransformers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python bindings for the Transformer models implemented in C/C++ using GGML library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/marella/ctransformers&#34;&gt;C Transformers&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/ctransformers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/ctransformers&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/marella/ctransformers/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/marella/ctransformers/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/marella/ctransformers/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/marella/ctransformers/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Python bindings for the Transformer models implemented in C/C++ using &lt;a href=&#34;https://github.com/ggerganov/ggml&#34;&gt;GGML&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Also see &lt;a href=&#34;https://github.com/marella/chatdocs&#34;&gt;ChatDocs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#supported-models&#34;&gt;Supported Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#hugging-face-hub&#34;&gt;Hugging Face Hub&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#langchain&#34;&gt;LangChain&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#gpu&#34;&gt;GPU&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Models&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Models&lt;/th&gt; &#xA;   &lt;th&gt;Model Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GPT-2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gpt2&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GPT-J, GPT4All-J&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gptj&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GPT-NeoX, StableLM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gpt_neox&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;LLaMA&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;llama&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MPT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mpt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Dolly V2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dolly-v2&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;StarCoder, StarChat&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;starcoder&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Falcon (Experimental)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;falcon&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install ctransformers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For GPU (CUDA) support, set environment variable &lt;code&gt;CT_CUBLAS=1&lt;/code&gt; and install from source using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;CT_CUBLAS=1 pip install ctransformers --no-binary ctransformers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Show commands for Windows&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;On Windows PowerShell run:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$env:CT_CUBLAS=1&#xA;pip install ctransformers --no-binary ctransformers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;On Windows Command Prompt run:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set CT_CUBLAS=1&#xA;pip install ctransformers --no-binary ctransformers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;It provides a unified interface for all models:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from ctransformers import AutoModelForCausalLM&#xA;&#xA;llm = AutoModelForCausalLM.from_pretrained(&#39;/path/to/ggml-gpt-2.bin&#39;, model_type=&#39;gpt2&#39;)&#xA;&#xA;print(llm(&#39;AI is going to&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1GMhYMUAv_TyZkpfvUI1NirM8-9mCXQyL&#34;&gt;Run in Google Colab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are getting &lt;code&gt;illegal instruction&lt;/code&gt; error, try using &lt;code&gt;lib=&#39;avx&#39;&lt;/code&gt; or &lt;code&gt;lib=&#39;basic&#39;&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;llm = AutoModelForCausalLM.from_pretrained(&#39;/path/to/ggml-gpt-2.bin&#39;, model_type=&#39;gpt2&#39;, lib=&#39;avx&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It provides a generator interface for more control:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;tokens = llm.tokenize(&#39;AI is going to&#39;)&#xA;&#xA;for token in llm.generate(tokens):&#xA;    print(llm.detokenize(token))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It can be used with a custom or Hugging Face tokenizer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from transformers import AutoTokenizer&#xA;&#xA;tokenizer = AutoTokenizer.from_pretrained(&#39;gpt2&#39;)&#xA;&#xA;tokens = tokenizer.encode(&#39;AI is going to&#39;)&#xA;&#xA;for token in llm.generate(tokens):&#xA;    print(tokenizer.decode(token))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It also provides access to the low-level C API. See &lt;a href=&#34;https://raw.githubusercontent.com/marella/ctransformers/main/#documentation&#34;&gt;Documentation&lt;/a&gt; section below.&lt;/p&gt; &#xA;&lt;h3&gt;Hugging Face Hub&lt;/h3&gt; &#xA;&lt;p&gt;It can be used with models hosted on the Hub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;llm = AutoModelForCausalLM.from_pretrained(&#39;marella/gpt-2-ggml&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a model repo has multiple model files (&lt;code&gt;.bin&lt;/code&gt; files), specify a model file using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;llm = AutoModelForCausalLM.from_pretrained(&#39;marella/gpt-2-ggml&#39;, model_file=&#39;ggml-model.bin&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It can be used with your own models uploaded on the Hub. For better user experience, upload only one model per repo.&lt;/p&gt; &#xA;&lt;p&gt;To use it with your own model, add &lt;code&gt;config.json&lt;/code&gt; file to your model repo specifying the &lt;code&gt;model_type&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;model_type&#34;: &#34;gpt2&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify additional parameters under &lt;code&gt;task_specific_params.text-generation&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://huggingface.co/marella/gpt-2-ggml/blob/main/config.json&#34;&gt;marella/gpt-2-ggml&lt;/a&gt; for a minimal example and &lt;a href=&#34;https://huggingface.co/marella/gpt-2-ggml-example/blob/main/config.json&#34;&gt;marella/gpt-2-ggml-example&lt;/a&gt; for a full example.&lt;/p&gt; &#xA;&lt;h3&gt;LangChain&lt;/h3&gt; &#xA;&lt;p&gt;It is integrated into LangChain. See &lt;a href=&#34;https://python.langchain.com/docs/ecosystem/integrations/ctransformers&#34;&gt;LangChain docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;GPU&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Currently only LLaMA models have GPU support.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To run some of the model layers on GPU, set the &lt;code&gt;gpu_layers&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;llm = AutoModelForCausalLM.from_pretrained(&#39;/path/to/ggml-llama.bin&#39;, model_type=&#39;llama&#39;, gpu_layers=50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1Ihn7iPCYiqlTotpkqa1tOhUIpJBrJ1Tp&#34;&gt;Run in Google Colab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;!-- API_DOCS --&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;top_k&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The top-k value to use for sampling.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;40&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;top_p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The top-p value to use for sampling.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;0.95&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;temperature&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The temperature to use for sampling.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;0.8&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;repetition_penalty&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The repetition penalty to use for sampling.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;1.1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;last_n_tokens&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The number of last tokens to use for repetition penalty.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;64&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;seed&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The seed value to use for sampling tokens.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;max_new_tokens&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The maximum number of new tokens to generate.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;256&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;List[str]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A list of sequences to stop generation when encountered.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whether to stream the generated text.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whether to reset the model state before generating text.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;batch_size&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The batch size to use for evaluating tokens.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;8&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;threads&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The number of threads to use for evaluating tokens.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;context_length&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The maximum context length to use.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;gpu_layers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The number of layers to run on GPU.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Currently only LLaMA and MPT models support the &lt;code&gt;context_length&lt;/code&gt; parameter and only LLaMA models support the &lt;code&gt;gpu_layers&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;kbd&gt;class&lt;/kbd&gt; &lt;code&gt;AutoModelForCausalLM&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;classmethod&lt;/kbd&gt; &lt;code&gt;AutoModelForCausalLM.from_pretrained&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from_pretrained(&#xA;    model_path_or_repo_id: str,&#xA;    model_type: Optional[str] = None,&#xA;    model_file: Optional[str] = None,&#xA;    config: Optional[ctransformers.hub.AutoConfig] = None,&#xA;    lib: Optional[str] = None,&#xA;    local_files_only: bool = False,&#xA;    **kwargs&#xA;) → LLM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Loads the language model from a local file or remote repo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;model_path_or_repo_id&lt;/code&gt;&lt;/b&gt;: The path to a model file or directory or the name of a Hugging Face Hub model repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;model_type&lt;/code&gt;&lt;/b&gt;: The model type.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;model_file&lt;/code&gt;&lt;/b&gt;: The name of the model file in repo or directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;config&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;AutoConfig&lt;/code&gt; object.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;lib&lt;/code&gt;&lt;/b&gt;: The path to a shared library or one of &lt;code&gt;avx2&lt;/code&gt;, &lt;code&gt;avx&lt;/code&gt;, &lt;code&gt;basic&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;local_files_only&lt;/code&gt;&lt;/b&gt;: Whether or not to only look at local files (i.e., do not try to download the model).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;LLM&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;kbd&gt;class&lt;/kbd&gt; &lt;code&gt;LLM&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.__init__&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;__init__(&#xA;    model_path: str,&#xA;    model_type: str,&#xA;    config: Optional[ctransformers.llm.Config] = None,&#xA;    lib: Optional[str] = None&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Loads the language model from a local file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;model_path&lt;/code&gt;&lt;/b&gt;: The path to a model file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;model_type&lt;/code&gt;&lt;/b&gt;: The model type.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;config&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Config&lt;/code&gt; object.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;lib&lt;/code&gt;&lt;/b&gt;: The path to a shared library or one of &lt;code&gt;avx2&lt;/code&gt;, &lt;code&gt;avx&lt;/code&gt;, &lt;code&gt;basic&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;kbd&gt;property&lt;/kbd&gt; LLM.config&lt;/h5&gt; &#xA;&lt;p&gt;The config object.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;kbd&gt;property&lt;/kbd&gt; LLM.context_length&lt;/h5&gt; &#xA;&lt;p&gt;The context length of model.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;kbd&gt;property&lt;/kbd&gt; LLM.embeddings&lt;/h5&gt; &#xA;&lt;p&gt;The input embeddings.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;kbd&gt;property&lt;/kbd&gt; LLM.eos_token_id&lt;/h5&gt; &#xA;&lt;p&gt;The end-of-sequence token.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;kbd&gt;property&lt;/kbd&gt; LLM.logits&lt;/h5&gt; &#xA;&lt;p&gt;The unnormalized log probabilities.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;kbd&gt;property&lt;/kbd&gt; LLM.model_path&lt;/h5&gt; &#xA;&lt;p&gt;The path to the model file.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;kbd&gt;property&lt;/kbd&gt; LLM.model_type&lt;/h5&gt; &#xA;&lt;p&gt;The model type.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;kbd&gt;property&lt;/kbd&gt; LLM.vocab_size&lt;/h5&gt; &#xA;&lt;p&gt;The number of tokens in vocabulary.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.detokenize&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;detokenize(tokens: Sequence[int], decode: bool = True) → Union[str, bytes]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Converts a list of tokens to text.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;tokens&lt;/code&gt;&lt;/b&gt;: The list of tokens.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/b&gt;: Whether to decode the text as UTF-8 string.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; The combined text of all tokens.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.embed&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;embed(&#xA;    input: Union[str, Sequence[int]],&#xA;    batch_size: Optional[int] = None,&#xA;    threads: Optional[int] = None&#xA;) → List[float]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Computes embeddings for a text or list of tokens.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Currently only LLaMA models support embeddings.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;input&lt;/code&gt;&lt;/b&gt;: The input text or list of tokens to get embeddings for.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;batch_size&lt;/code&gt;&lt;/b&gt;: The batch size to use for evaluating tokens. Default: &lt;code&gt;8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;threads&lt;/code&gt;&lt;/b&gt;: The number of threads to use for evaluating tokens. Default: &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; The input embeddings.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.eval&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;eval(&#xA;    tokens: Sequence[int],&#xA;    batch_size: Optional[int] = None,&#xA;    threads: Optional[int] = None&#xA;) → None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Evaluates a list of tokens.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;tokens&lt;/code&gt;&lt;/b&gt;: The list of tokens to evaluate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;batch_size&lt;/code&gt;&lt;/b&gt;: The batch size to use for evaluating tokens. Default: &lt;code&gt;8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;threads&lt;/code&gt;&lt;/b&gt;: The number of threads to use for evaluating tokens. Default: &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.generate&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;generate(&#xA;    tokens: Sequence[int],&#xA;    top_k: Optional[int] = None,&#xA;    top_p: Optional[float] = None,&#xA;    temperature: Optional[float] = None,&#xA;    repetition_penalty: Optional[float] = None,&#xA;    last_n_tokens: Optional[int] = None,&#xA;    seed: Optional[int] = None,&#xA;    batch_size: Optional[int] = None,&#xA;    threads: Optional[int] = None,&#xA;    reset: Optional[bool] = None&#xA;) → Generator[int, NoneType, NoneType]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generates new tokens from a list of tokens.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;tokens&lt;/code&gt;&lt;/b&gt;: The list of tokens to generate tokens from.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;top_k&lt;/code&gt;&lt;/b&gt;: The top-k value to use for sampling. Default: &lt;code&gt;40&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;top_p&lt;/code&gt;&lt;/b&gt;: The top-p value to use for sampling. Default: &lt;code&gt;0.95&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;temperature&lt;/code&gt;&lt;/b&gt;: The temperature to use for sampling. Default: &lt;code&gt;0.8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;repetition_penalty&lt;/code&gt;&lt;/b&gt;: The repetition penalty to use for sampling. Default: &lt;code&gt;1.1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;last_n_tokens&lt;/code&gt;&lt;/b&gt;: The number of last tokens to use for repetition penalty. Default: &lt;code&gt;64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;seed&lt;/code&gt;&lt;/b&gt;: The seed value to use for sampling tokens. Default: &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;batch_size&lt;/code&gt;&lt;/b&gt;: The batch size to use for evaluating tokens. Default: &lt;code&gt;8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;threads&lt;/code&gt;&lt;/b&gt;: The number of threads to use for evaluating tokens. Default: &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/b&gt;: Whether to reset the model state before generating text. Default: &lt;code&gt;True&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; The generated tokens.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.is_eos_token&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;is_eos_token(token: int) → bool&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Checks if a token is an end-of-sequence token.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;token&lt;/code&gt;&lt;/b&gt;: The token to check.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; &lt;code&gt;True&lt;/code&gt; if the token is an end-of-sequence token else &lt;code&gt;False&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.reset&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;reset() → None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Resets the model state.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.sample&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sample(&#xA;    top_k: Optional[int] = None,&#xA;    top_p: Optional[float] = None,&#xA;    temperature: Optional[float] = None,&#xA;    repetition_penalty: Optional[float] = None,&#xA;    last_n_tokens: Optional[int] = None,&#xA;    seed: Optional[int] = None&#xA;) → int&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Samples a token from the model.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;top_k&lt;/code&gt;&lt;/b&gt;: The top-k value to use for sampling. Default: &lt;code&gt;40&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;top_p&lt;/code&gt;&lt;/b&gt;: The top-p value to use for sampling. Default: &lt;code&gt;0.95&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;temperature&lt;/code&gt;&lt;/b&gt;: The temperature to use for sampling. Default: &lt;code&gt;0.8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;repetition_penalty&lt;/code&gt;&lt;/b&gt;: The repetition penalty to use for sampling. Default: &lt;code&gt;1.1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;last_n_tokens&lt;/code&gt;&lt;/b&gt;: The number of last tokens to use for repetition penalty. Default: &lt;code&gt;64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;seed&lt;/code&gt;&lt;/b&gt;: The seed value to use for sampling tokens. Default: &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; The sampled token.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.tokenize&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;tokenize(text: str) → List[int]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Converts a text into list of tokens.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;text&lt;/code&gt;&lt;/b&gt;: The text to tokenize.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; The list of tokens.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;kbd&gt;method&lt;/kbd&gt; &lt;code&gt;LLM.__call__&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;__call__(&#xA;    prompt: str,&#xA;    max_new_tokens: Optional[int] = None,&#xA;    top_k: Optional[int] = None,&#xA;    top_p: Optional[float] = None,&#xA;    temperature: Optional[float] = None,&#xA;    repetition_penalty: Optional[float] = None,&#xA;    last_n_tokens: Optional[int] = None,&#xA;    seed: Optional[int] = None,&#xA;    batch_size: Optional[int] = None,&#xA;    threads: Optional[int] = None,&#xA;    stop: Optional[Sequence[str]] = None,&#xA;    stream: Optional[bool] = None,&#xA;    reset: Optional[bool] = None&#xA;) → Union[str, Generator[str, NoneType, NoneType]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generates text from a prompt.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Args:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;prompt&lt;/code&gt;&lt;/b&gt;: The prompt to generate text from.&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;max_new_tokens&lt;/code&gt;&lt;/b&gt;: The maximum number of new tokens to generate. Default: &lt;code&gt;256&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;top_k&lt;/code&gt;&lt;/b&gt;: The top-k value to use for sampling. Default: &lt;code&gt;40&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;top_p&lt;/code&gt;&lt;/b&gt;: The top-p value to use for sampling. Default: &lt;code&gt;0.95&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;temperature&lt;/code&gt;&lt;/b&gt;: The temperature to use for sampling. Default: &lt;code&gt;0.8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;repetition_penalty&lt;/code&gt;&lt;/b&gt;: The repetition penalty to use for sampling. Default: &lt;code&gt;1.1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;last_n_tokens&lt;/code&gt;&lt;/b&gt;: The number of last tokens to use for repetition penalty. Default: &lt;code&gt;64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;seed&lt;/code&gt;&lt;/b&gt;: The seed value to use for sampling tokens. Default: &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;batch_size&lt;/code&gt;&lt;/b&gt;: The batch size to use for evaluating tokens. Default: &lt;code&gt;8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;threads&lt;/code&gt;&lt;/b&gt;: The number of threads to use for evaluating tokens. Default: &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/b&gt;: A list of sequences to stop generation when encountered. Default: &lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/b&gt;: Whether to stream the generated text. Default: &lt;code&gt;False&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;b&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/b&gt;: Whether to reset the model state before generating text. Default: &lt;code&gt;True&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; The generated text.&lt;/p&gt; &#xA;&lt;!-- API_DOCS --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marella/ctransformers/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lionsoul2014/ip2region</title>
    <updated>2023-07-02T01:52:16Z</updated>
    <id>tag:github.com,2023-07-02:/lionsoul2014/ip2region</id>
    <link href="https://github.com/lionsoul2014/ip2region" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ip2region (2.0 - xdb) is a offline IP address manager framework and locator, support billions of data segments, ten microsecond searching performance. xdb engine implementation for many programming languages&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ip2region 是什么&lt;/h1&gt; &#xA;&lt;p&gt;ip2region v2.0 - 是一个离线IP地址定位库和IP定位数据管理框架，10微秒级别的查询效率，提供了众多主流编程语言的 &lt;code&gt;xdb&lt;/code&gt; 数据生成和查询客户端实现。v1.0 旧版本: &lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/v1.0&#34;&gt;v1.0版本入口&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ip2region 特性&lt;/h1&gt; &#xA;&lt;h3&gt;1、标准化的数据格式&lt;/h3&gt; &#xA;&lt;p&gt;每个 ip 数据段的 region 信息都固定了格式：&lt;code&gt;国家|区域|省份|城市|ISP&lt;/code&gt;，只有中国的数据绝大部分精确到了城市，其他国家部分数据只能定位到国家，后前的选项全部是0。&lt;/p&gt; &#xA;&lt;h3&gt;2、数据去重和压缩&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xdb&lt;/code&gt; 格式生成程序会自动去重和压缩部分数据，默认的全部 IP 数据，生成的 ip2region.xdb 数据库是 11MiB，随着数据的详细度增加数据库的大小也慢慢增大。&lt;/p&gt; &#xA;&lt;h3&gt;3、极速查询响应&lt;/h3&gt; &#xA;&lt;p&gt;即使是完全基于 &lt;code&gt;xdb&lt;/code&gt; 文件的查询，单次查询响应时间在十微秒级别，可通过如下两种方式开启内存加速查询：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;vIndex&lt;/code&gt; 索引缓存 ：使用固定的 &lt;code&gt;512KiB&lt;/code&gt; 的内存空间缓存 vector index 数据，减少一次 IO 磁盘操作，保持平均查询效率稳定在10-20微秒之间。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xdb&lt;/code&gt; 整个文件缓存：将整个 &lt;code&gt;xdb&lt;/code&gt; 文件全部加载到内存，内存占用等同于 &lt;code&gt;xdb&lt;/code&gt; 文件大小，无磁盘 IO 操作，保持微秒级别的查询效率。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;4、IP 数据管理框架&lt;/h3&gt; &#xA;&lt;p&gt;v2.0 格式的 &lt;code&gt;xdb&lt;/code&gt; 支持亿级别的 IP 数据段行数，region 信息也可以完全自定义，例如：你可以在 region 中追加特定业务需求的数据，例如：GPS信息/国际统一地域信息编码/邮编等。也就是你完全可以使用 ip2region 来管理你自己的 IP 定位数据。&lt;/p&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据查询&lt;/h1&gt; &#xA;&lt;p&gt;API 介绍，使用文档和测试程序请参考对应 &lt;code&gt;searcher&lt;/code&gt; 查询客户端下的 ReadMe 介绍，全部查询 binding 实现情况如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php&#34;&gt;php&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua&#34;&gt;lua&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;纯 lua xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ANSC c xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua_c&#34;&gt;lua_c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;lua c 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/rust&#34;&gt;rust&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rust xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/gongzhengyang&#34;&gt;gongzhengyang&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;python xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/luckydog6132&#34;&gt;厉害的花花&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nodejs&#34;&gt;nodejs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nodejs xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/wujjpp&#34;&gt;Wu Jian Ping&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;csharp xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/malus2077&#34;&gt;Alen Lee&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/erlang&#34;&gt;erlang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;erlang xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/leihua996&#34;&gt;leihua996&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php7_ext&#34;&gt;php_ext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php c 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nginx&#34;&gt;nginx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nginx 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/wujjpp&#34;&gt;Wu Jian Ping&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;以下工具链实现由社区开发者通过第三方仓库贡献：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/jicheng1014/ruby-ip2region&#34;&gt;ruby-ip2region&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ruby xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/jicheng1014&#34;&gt;jicheng1014&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/orestonce/Ip2regionTool&#34;&gt;Ip2regionTool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ip2region数据转换工具&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/orestonce&#34;&gt;orestonce&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据生成&lt;/h1&gt; &#xA;&lt;p&gt;API 介绍，使用文档和测试程序请参考如下 &lt;code&gt;maker&lt;/code&gt; 生成程序下的 ReadMe 文档：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ANSC c xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;python xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/leolin49&#34;&gt;leolin49&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;csharp xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/malus2077&#34;&gt;Alan Lee&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据更新&lt;/h1&gt; &#xA;&lt;p&gt;ip2region 重点在于 &lt;b&gt;研究 IP 数据的存储和快速查询的实现&lt;/b&gt;，并没有原始 IP 数据的支撑，本项目不保证及时的数据更新，暂时也不会有商用版本，你可以使用如下几种方式来更新数据：&lt;/p&gt; &#xA;&lt;h3&gt;手动编辑更新&lt;/h3&gt; &#xA;&lt;p&gt;你可以基于 ip2region 自带的 &lt;code&gt;./data/ip.merge.txt&lt;/code&gt; 原始 IP 数据用 ip2region 提供的编辑工具来自己修改，目前数据源有如下几种方式：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ip2region 社区群提供的数据（请参考地底部的备注信息加入 ip2region 微信群）&lt;/li&gt; &#xA; &lt;li&gt;ip2region Github/Gitee 中带有 &lt;code&gt;[数据源补充]&lt;/code&gt; 标签的 Issue&lt;/li&gt; &#xA; &lt;li&gt;其他自定义数据：例如客户提供的数据，或者通过 GPS 和 WIFI 定位得到的数据，或者你信任的他平台的纠正数据&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;原始 IP 数据编辑工具使用方法请参考如下的 &lt;code&gt;maker&lt;/code&gt; 生成程序下的 ReadMe 文档：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/golang#xdb-%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang 原始 IP 数据编辑器&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/java#xdb-%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java 原始 IP 数据编辑器&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;爬虫自动更新&lt;/h3&gt; &#xA;&lt;p&gt;如果你想通过你的 API 来更新数据，你可以参考以下视频分享的 &lt;code&gt;基于检测算法&lt;/code&gt; 的更新算法来自己编写一个更新程序：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1934y1E7Q5/&#34;&gt;数据更新实现视频分享 - part1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1pF411j7Aw/&#34;&gt;数据更新实现视频分享 - part2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;相关备注&lt;/h1&gt; &#xA;&lt;h3&gt;1、并发查询必读&lt;/h3&gt; &#xA;&lt;p&gt;全部查询客户端的 search 接口都 &lt;b&gt;不是&lt;/b&gt; 并发安全的实现，不同进程/线程/协程需要通过创建不同的查询对象来安全使用，并发量很大的情况下，基于文件查询的方式可能会导致打开文件数过多的错误，请修改内核的最大允许打开文件数(fs.file-max=一个更高的值)，或者将整个xdb加载到内存进行安全并发使用。&lt;/p&gt; &#xA;&lt;h3&gt;2、技术交流社区&lt;/h3&gt; &#xA;&lt;p&gt;ip2region 微信交流群，请先加微信：lionsoul2014 (请备注 ip2region)&lt;/p&gt; &#xA;&lt;h3&gt;3、技术资源分享&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;xdb 数据结构分析：&lt;a href=&#34;https://mp.weixin.qq.com/s/ndjzu0BgaeBmDOCw5aqHUg&#34;&gt;“ip2region xdb 数据结构和查询过程详解“&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xdb 查询过程分析：&lt;a href=&#34;https://mp.weixin.qq.com/s/ndjzu0BgaeBmDOCw5aqHUg&#34;&gt;“ip2region xdb 数据结构和查询过程详解”&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xdb 生成过程分析：&lt;a href=&#34;https://mp.weixin.qq.com/s/HEAc7WKzAjH5oTwgxojPUg&#34;&gt;“ip2region xdb 二进制数据生成过程详解”&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xdb 数据更新方法：&lt;a href=&#34;https://mp.weixin.qq.com/s/cZH5qIn4E5rQFy6N32RCzA&#34;&gt;“ip2region 数据更新和 xdb 数据编辑器的使用”&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>netdata/netdata</title>
    <updated>2023-07-02T01:52:16Z</updated>
    <id>tag:github.com,2023-07-02:/netdata/netdata</id>
    <link href="https://github.com/netdata/netdata" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Real-time performance monitoring, done right! https://www.netdata.cloud&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://netdata.cloud&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1153921/95268672-a3665100-07ec-11eb-8078-db619486d6ad.png&#34; alt=&#34;Netdata&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Netdata is high-fidelity infrastructure monitoring and troubleshooting.&lt;br&gt;Open-source, free, preconfigured, opinionated, and always real-time.&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/netdata/netdata/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/netdata/netdata?style=social&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://app.netdata.cloud/spaces/netdata-demo?utm_campaign=github_readme_demo_badge&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Live Demo-green&#34; alt=&#34;Live Demo&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/netdata/netdata/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/netdata/netdata.svg?sanitize=true&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/netdata/netdata-nightlies/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/netdata/netdata-nightlies.svg?sanitize=true&#34; alt=&#34;Latest nightly build&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/2231&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/2231/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/netdata/netdata&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/netdata/netdata/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v3%2B-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3+&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/1153921/95269366-1b814680-07ee-11eb-8ff4-c1b0b8758499.png&#34; alt=&#34;---&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;p&gt;Netdata is a distributed, real-time, performance and health monitoring platform for systems, hardware, containers and applications, collecting thousands of useful metrics with zero configuration needed. It runs permanently on all your physical/virtual servers, containers, cloud deployments, and edge/IoT devices, and is perfectly safe to install on your systems mid-incident without any preparation.&lt;/p&gt; &#xA;&lt;p&gt;The Netdata &lt;a href=&#34;https://github.com/netdata/netdata&#34;&gt;Agent&lt;/a&gt; is an enormously powerful, &lt;strong&gt;Open-Sourced&lt;/strong&gt;, &lt;strong&gt;Single Node&lt;/strong&gt; health monitoring and performance troubleshooting tool. It gives you the ability to automatically identify processes, collect and store metrics locally and even more - visualize all metrics without any configuration (of course you can tweak it later on if you need).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.netdata.cloud&#34;&gt;Netdata Cloud&lt;/a&gt; is a hosted web interface that gives you &lt;strong&gt;Free&lt;/strong&gt;, real-time visibility into your &lt;strong&gt;Entire Infrastructure&lt;/strong&gt; with secure access to your Netdata Agents. It provides an ability to automatically route your requests to the most relevant agents to display your metrics, based on the stored metadata (Agents topology, what metrics are collected on specific Agents as well as the retention information for each metric).&lt;/p&gt; &#xA;&lt;p&gt;It gives you some extra features, like &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/cloud/insights/metric-correlations.md&#34;&gt;Metric Correlations&lt;/a&gt;, &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/cloud/insights/anomaly-advisor.md&#34;&gt;Anomaly Advisor&lt;/a&gt;, &lt;a href=&#34;https://blog.netdata.cloud/anomaly-rate-in-every-chart/&#34;&gt;anomaly rates on every chart&lt;/a&gt; and much more.&lt;/p&gt; &#xA;&lt;p&gt;Try it for yourself right now by checking out the Netdata Cloud &lt;a href=&#34;https://app.netdata.cloud/spaces/netdata-demo/rooms/all-nodes/overview&#34;&gt;demo space&lt;/a&gt; (No sign up or login needed).&lt;/p&gt; &#xA;&lt;p&gt;Netdata&#39;s mission is to help more people troubleshoot ever more complex IT infrastructures, this is why our &lt;strong&gt;free&lt;/strong&gt; &lt;a href=&#34;https://www.netdata.cloud/pricing&#34;&gt;community plan&lt;/a&gt; gives you ability to monitor unlimited number of Nodes, Containers and Metrics (custom or built-in).&lt;/p&gt; &#xA;&lt;p&gt;Due to the distributed nature of Netdata, and to ensure high-availability of your monitoring system, please check our &lt;a href=&#34;https://www.netdata.cloud/blog/why-is-data-replication-important&#34;&gt;Data Replication&lt;/a&gt; recommendations to increase the data availability.&lt;/p&gt; &#xA;&lt;p&gt;You can install Netdata on most Linux distributions (Ubuntu, Debian, CentOS, and more), container platforms (Kubernetes clusters, Docker), and many other operating systems (FreeBSD, macOS). No &lt;code&gt;sudo&lt;/code&gt; required.&lt;/p&gt; &#xA;&lt;p&gt;Netdata is designed by system administrators, DevOps engineers, and developers to collect everything, help you visualize metrics, troubleshoot complex performance problems, and make data interoperable with the rest of your monitoring stack.&lt;/p&gt; &#xA;&lt;p&gt;People get addicted to Netdata. Once you use it on your systems, there&#39;s no going back! &lt;em&gt;You&#39;ve been warned...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1153921/96495792-2e881380-11fd-11eb-85a3-53d3a84dcb29.png&#34; alt=&#34;Users who are addicted to Netdata&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Menu&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#get-netdata&#34;&gt;Get Netdata&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#infrastructure-view&#34;&gt;Infrastructure view&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#single-node-view&#34;&gt;Single node view&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#other-operating-systems&#34;&gt;Other operating systems&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#post-installation&#34;&gt;Post-installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#netdata-cloud&#34;&gt;Netdata Cloud&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#how-it-works&#34;&gt;How it works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#infographic&#34;&gt;Infographic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/netdata/netdata/master/#is-it-any-good&#34;&gt;Is it any good?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1153921/113440964-449c2180-93a2-11eb-9664-663afa1257a8.gif&#34; alt=&#34;Netdata in action&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s what you can expect from Netdata:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;1s granularity&lt;/strong&gt;: The highest possible resolution for all metrics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unlimited metrics&lt;/strong&gt;: Netdata collects all the available metrics—the more, the better.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;1% CPU utilization of a single core&lt;/strong&gt;: It&#39;s unbelievably optimized.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A few MB of RAM&lt;/strong&gt;: The highly-efficient database engine stores per-second metrics in RAM and then &#34;spills&#34; historical metrics to disk long-term storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimal disk I/O&lt;/strong&gt;: While running, Netdata only writes historical metrics and reads &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;access&lt;/code&gt; logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero configuration&lt;/strong&gt;: Netdata auto-detects everything, and can collect up to 10,000 metrics per server out of the box.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero maintenance&lt;/strong&gt;: You just run it. Netdata does the rest.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stunningly fast, interactive visualizations&lt;/strong&gt;: The dashboard responds to queries in less than 1ms per metric to synchronize charts as you pan through time, zoom in on anomalies, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visual anomaly detection&lt;/strong&gt;: Our UI/UX emphasizes the relationships between charts to help you detect the root cause of anomalies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Machine learning (ML) features out of the box&lt;/strong&gt;: Unsupervised ML-based &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/cloud/insights/anomaly-advisor.md&#34;&gt;anomaly detection&lt;/a&gt;, every second, every metric, zero-config! &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/cloud/insights/metric-correlations.md&#34;&gt;Metric correlations&lt;/a&gt; to help with short-term change detection. And other &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/guides/monitor/anomaly-detection.md&#34;&gt;additional&lt;/a&gt; ML-based features to help make your life easier.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scales to infinity&lt;/strong&gt;: You can install it on all your servers, containers, VMs, and IoT devices. Metrics are not centralized by default, so there is no limit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Several operating modes&lt;/strong&gt;: Autonomous host monitoring (the default), headless data collector, forwarding proxy, store and forward proxy, central multi-host monitoring, in all possible configurations. Use different metrics retention policies per node and run with or without health monitoring.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Netdata works with tons of applications, notifications platforms, and other time-series databases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;300+ system, container, and application endpoints&lt;/strong&gt;: Collectors autodetect metrics from default endpoints and immediately visualize them into meaningful charts designed for troubleshooting. See &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/collectors/COLLECTORS.md&#34;&gt;everything we support&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20+ notification platforms&lt;/strong&gt;: Netdata&#39;s health watchdog sends warning and critical alarms to your &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/monitor/enable-notifications.md&#34;&gt;favorite platform&lt;/a&gt; to inform you of anomalies just seconds after they affect your node.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;30+ external time-series databases&lt;/strong&gt;: Export resampled metrics as they&#39;re collected to other &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/export/external-databases.md&#34;&gt;local- and Cloud-based databases&lt;/a&gt; for best-in-class interoperability.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡 &lt;strong&gt;Want to leverage the monitoring power of Netdata across entire infrastructure&lt;/strong&gt;? View metrics from any number of distributed nodes in a single interface and unlock even more &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/overview/why-netdata.md&#34;&gt;features&lt;/a&gt; with &lt;a href=&#34;https://learn.netdata.cloud/docs/overview/what-is-netdata#netdata-cloud&#34;&gt;Netdata Cloud&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Get Netdata&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://registry.my-netdata.io/#menu_netdata_submenu_registry&#34;&gt;&lt;img src=&#34;https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=persons&amp;amp;label=user%20base&amp;amp;units=M&amp;amp;value_color=blue&amp;amp;precision=2&amp;amp;divide=1000000&amp;amp;options=unaligned&amp;amp;v44&#34; alt=&#34;User base&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://registry.my-netdata.io/#menu_netdata_submenu_registry&#34;&gt;&lt;img src=&#34;https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=machines&amp;amp;label=servers%20monitored&amp;amp;units=k&amp;amp;divide=1000&amp;amp;value_color=orange&amp;amp;precision=2&amp;amp;options=unaligned&amp;amp;v44&#34; alt=&#34;Servers monitored&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://registry.my-netdata.io/#menu_netdata_submenu_registry&#34;&gt;&lt;img src=&#34;https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_sessions&amp;amp;label=sessions%20served&amp;amp;units=M&amp;amp;value_color=yellowgreen&amp;amp;precision=2&amp;amp;divide=1000000&amp;amp;options=unaligned&amp;amp;v44&#34; alt=&#34;Sessions served&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/netdata/netdata&#34;&gt;&lt;img src=&#34;https://registry.my-netdata.io/api/v1/badge.svg?chart=dockerhub.pulls_sum&amp;amp;divide=1000000&amp;amp;precision=1&amp;amp;units=M&amp;amp;label=docker+hub+pulls&amp;amp;options=unaligned&amp;amp;v44&#34; alt=&#34;Docker Hub pulls&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://registry.my-netdata.io/#menu_netdata_submenu_registry&#34;&gt;&lt;img src=&#34;https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=persons&amp;amp;after=-86400&amp;amp;options=unaligned&amp;amp;group=incremental-sum&amp;amp;label=new%20users%20today&amp;amp;units=null&amp;amp;value_color=blue&amp;amp;precision=0&amp;amp;options=unaligned&amp;amp;v44&#34; alt=&#34;New users today&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://registry.my-netdata.io/#menu_netdata_submenu_registry&#34;&gt;&lt;img src=&#34;https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=machines&amp;amp;group=incremental-sum&amp;amp;after=-86400&amp;amp;options=unaligned&amp;amp;label=servers%20added%20today&amp;amp;units=null&amp;amp;value_color=orange&amp;amp;precision=0&amp;amp;v44&#34; alt=&#34;New machines today&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://registry.my-netdata.io/#menu_netdata_submenu_registry&#34;&gt;&lt;img src=&#34;https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_sessions&amp;amp;after=-86400&amp;amp;group=incremental-sum&amp;amp;options=unaligned&amp;amp;label=sessions%20served%20today&amp;amp;units=null&amp;amp;value_color=yellowgreen&amp;amp;precision=0&amp;amp;v44&#34; alt=&#34;Sessions today&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/netdata/netdata&#34;&gt;&lt;img src=&#34;https://registry.my-netdata.io/api/v1/badge.svg?chart=dockerhub.pulls_sum&amp;amp;divide=1000&amp;amp;precision=1&amp;amp;units=k&amp;amp;label=docker+hub+pulls&amp;amp;after=-86400&amp;amp;group=incremental-sum&amp;amp;label=docker%20hub%20pulls%20today&amp;amp;options=unaligned&amp;amp;v44&#34; alt=&#34;Docker Hub pulls today&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Infrastructure view&lt;/h3&gt; &#xA;&lt;p&gt;Due to the distributed nature of the Netdata ecosystem, it is recommended to setup not only one Netdata Agent on your production system, but also an additional Netdata Agent acting as a &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/streaming/README.md&#34;&gt;Parent&lt;/a&gt;. A local Netdata Agent (child), without any database or alarms, collects metrics and sends them to another Netdata Agent (parent). The same parent can collect data for any number of child nodes and serves as a centralized health check engine for each child by triggering alerts on their behalf.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/423236/205926887-43024984-6d38-46ad-96cb-d0c388117c6d.png&#34; alt=&#34;Netdata Cloud&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get started by &lt;a href=&#34;https://app.netdata.cloud/?utm_source=website&amp;amp;utm_content=top_navigation_sign_up&#34;&gt;signing in&lt;/a&gt; to Netdata.cloud and follow the setup guide.&lt;/p&gt; &#xA;&lt;p&gt;Community version is free to use forever. No restriction on number of nodes, clusters or metrics. Unlimited alerts.&lt;/p&gt; &#xA;&lt;h4&gt;Claiming existing Agents&lt;/h4&gt; &#xA;&lt;p&gt;You can easily &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/claim/README.md&#34;&gt;connect (claim)&lt;/a&gt; your existing Agents to the Cloud to unlock features for free and to find weaknesses before they turn into outages.&lt;/p&gt; &#xA;&lt;h3&gt;Single Node view&lt;/h3&gt; &#xA;&lt;p&gt;In case you do not need the infrastructure view of you system you can install standalone Agent and enjoy the local dashboard.&lt;/p&gt; &#xA;&lt;p&gt;To install Netdata from source on most Linux systems (physical, virtual, container, IoT, edge), run our &lt;a href=&#34;https://learn.netdata.cloud/docs/agent/packaging/installer/methods/packages&#34;&gt;one-line installation script&lt;/a&gt;. This script downloads and builds all dependencies, including those required to connect to &lt;a href=&#34;https://netdata.cloud/cloud&#34;&gt;Netdata Cloud&lt;/a&gt; if you choose, and enables &lt;a href=&#34;https://learn.netdata.cloud/docs/agent/packaging/installer#nightly-vs-stable-releases&#34;&gt;automatic nightly updates&lt;/a&gt; and &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/anonymous-statistics.md&#34;&gt;anonymous statistics&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- candidate for reuse --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O /tmp/netdata-kickstart.sh https://my-netdata.io/kickstart.sh &amp;amp;&amp;amp; sh /tmp/netdata-kickstart.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view the Netdata dashboard, navigate to &lt;code&gt;http://localhost:19999&lt;/code&gt;, or &lt;code&gt;http://NODE:19999&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;You can also try out Netdata&#39;s capabilities in a &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/packaging/docker/README.md&#34;&gt;Docker container&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name=netdata \&#xA;  -p 19999:19999 \&#xA;  -v netdataconfig:/etc/netdata \&#xA;  -v netdatalib:/var/lib/netdata \&#xA;  -v netdatacache:/var/cache/netdata \&#xA;  -v /etc/passwd:/host/etc/passwd:ro \&#xA;  -v /etc/group:/host/etc/group:ro \&#xA;  -v /proc:/host/proc:ro \&#xA;  -v /sys:/host/sys:ro \&#xA;  -v /etc/os-release:/host/etc/os-release:ro \&#xA;  --restart unless-stopped \&#xA;  --cap-add SYS_PTRACE \&#xA;  --security-opt apparmor=unconfined \&#xA;  netdata/netdata&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view the Netdata dashboard, navigate to &lt;code&gt;http://localhost:19999&lt;/code&gt;, or &lt;code&gt;http://NODE:19999&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other operating systems&lt;/h3&gt; &#xA;&lt;p&gt;See our documentation for &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/packaging/installer/README.md#have-a-different-operating-system-or-want-to-try-another-method&#34;&gt;additional operating systems&lt;/a&gt;, including &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/packaging/installer/methods/kubernetes.md&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/packaging/installer/methods/kickstart.md#native-packages&#34;&gt;&lt;code&gt;.deb&lt;/code&gt;/&lt;code&gt;.rpm&lt;/code&gt; packages&lt;/a&gt;, and more.&lt;/p&gt; &#xA;&lt;h3&gt;Post-installation&lt;/h3&gt; &#xA;&lt;p&gt;When you&#39;re finished with installation, check out our &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/quickstart/single-node.md&#34;&gt;single-node&lt;/a&gt; or &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/quickstart/infrastructure.md&#34;&gt;infrastructure&lt;/a&gt; monitoring quickstart guides based on your use case.&lt;/p&gt; &#xA;&lt;p&gt;Or, skip straight to &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/docs/configure/nodes.md&#34;&gt;configuring the Netdata Agent&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Read through Netdata&#39;s &lt;a href=&#34;https://learn.netdata.cloud/docs&#34;&gt;documentation&lt;/a&gt;, which is structured based on actions and solutions, to enable features like health monitoring, alarm notifications, long-term metrics storage, exporting to external databases, and more.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Netdata is a highly efficient, highly modular, metrics management engine. Its lockless design makes it ideal for concurrent operations on the metrics.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1153921/95367248-5f755980-0889-11eb-827f-9b7aa02a556e.png&#34; alt=&#34;Diagram of Netdata&#39;s core functionality&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The result is a highly efficient, low-latency system, supporting multiple readers and one writer on each metric.&lt;/p&gt; &#xA;&lt;h2&gt;Infographic&lt;/h2&gt; &#xA;&lt;p&gt;This is a high-level overview of Netdata features and architecture. Click on it to view an interactive version, which has links to our documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://my-netdata.io/infographic.html&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43294513/212722097-fdd85dee-2fc8-47f5-90dc-d3149428cdfa.png&#34; alt=&#34;An infographic of how Netdata works&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Netdata&#39;s documentation is available at &lt;a href=&#34;https://learn.netdata.cloud&#34;&gt;&lt;strong&gt;Netdata Learn&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This site also hosts a number of &lt;a href=&#34;https://learn.netdata.cloud/guides&#34;&gt;guides&lt;/a&gt; to help newer users better understand how to collect metrics, troubleshoot via charts, export to external databases, and more.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Netdata is an inclusive open-source project and community. Please read our &lt;a href=&#34;https://github.com/netdata/.github/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find most of the Netdata team in our &lt;a href=&#34;https://community.netdata.cloud&#34;&gt;community forums&lt;/a&gt;. It&#39;s the best place to ask questions, find resources, and engage with passionate professionals. The team is also available and active in our &lt;a href=&#34;https://discord.com/invite/mPZ6WZKKG2&#34;&gt;Discord&lt;/a&gt; too.&lt;/p&gt; &#xA;&lt;p&gt;You can also find Netdata on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/linuxnetdata&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/Netdata&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/netdata/&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/company/netdata-cloud/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackshare.io/netdata&#34;&gt;StackShare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.producthunt.com/posts/netdata-monitoring-agent/&#34;&gt;Product Hunt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repology.org/metapackage/netdata/versions&#34;&gt;Repology&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/linuxnetdata/&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are the lifeblood of open-source projects. While we continue to invest in and improve Netdata, we need help to democratize monitoring!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read our &lt;a href=&#34;https://github.com/netdata/.github/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;, which contains all the information you need to contribute to Netdata, such as improving our documentation, engaging in the community, and developing new features. We&#39;ve made it as frictionless as possible, but if you need help, just ping us on our community forums!&lt;/li&gt; &#xA; &lt;li&gt;We have a whole category dedicated to contributing and extending Netdata on our &lt;a href=&#34;https://community.netdata.cloud/c/agent-development/9&#34;&gt;community forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Found a bug? Open a &lt;a href=&#34;https://github.com/netdata/netdata/issues/new?assignees=&amp;amp;labels=bug%2Cneeds+triage&amp;amp;template=BUG_REPORT.yml&amp;amp;title=%5BBug%5D%3A+&#34;&gt;GitHub issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;View our &lt;a href=&#34;https://github.com/netdata/netdata/security/policy&#34;&gt;Security Policy&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Package maintainers should read the guide on &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/packaging/installer/methods/source.md&#34;&gt;building Netdata from source&lt;/a&gt; for instructions on building each Netdata component from source and preparing a package.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Netdata Agent is &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/LICENSE&#34;&gt;GPLv3+&lt;/a&gt;. Netdata re-distributes other open-source tools and libraries. Please check the &lt;a href=&#34;https://github.com/netdata/netdata/raw/master/REDISTRIBUTED.md&#34;&gt;third party licenses&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Is it any good?&lt;/h2&gt; &#xA;&lt;p&gt;Yes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;When people first hear about a new product, they frequently ask if it is any good. A Hacker News user &lt;a href=&#34;https://news.ycombinator.com/item?id=3067434&#34;&gt;remarked&lt;/a&gt;:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note to self: Starting immediately, all raganwald projects will have a “Is it any good?” section in the readme, and the answer shall be “yes.&#34;.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>