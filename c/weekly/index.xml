<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-04T01:36:05Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lz4/lz4</title>
    <updated>2024-08-04T01:36:05Z</updated>
    <id>tag:github.com,2024-08-04:/lz4/lz4</id>
    <link href="https://github.com/lz4/lz4" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extremely Fast Compression algorithm&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LZ4 - Extremely fast compression&lt;/h1&gt; &#xA;&lt;p&gt;LZ4 is lossless compression algorithm, providing compression speed &amp;gt; 500 MB/s per core, scalable with multi-cores CPU. It features an extremely fast decoder, with speed in multiple GB/s per core, typically reaching RAM speed limits on multi-core systems.&lt;/p&gt; &#xA;&lt;p&gt;Speed can be tuned dynamically, selecting an &#34;acceleration&#34; factor which trades compression ratio for faster speed. On the other end, a high compression derivative, LZ4_HC, is also provided, trading CPU time for improved compression ratio. All versions feature the same decompression speed.&lt;/p&gt; &#xA;&lt;p&gt;LZ4 is also compatible with &lt;a href=&#34;https://github.com/facebook/zstd#the-case-for-small-data-compression&#34;&gt;dictionary compression&lt;/a&gt;, both at &lt;a href=&#34;https://github.com/lz4/lz4/raw/v1.8.3/lib/lz4frame.h#L481&#34;&gt;API&lt;/a&gt; and &lt;a href=&#34;https://github.com/lz4/lz4/raw/v1.8.3/programs/lz4.1.md#operation-modifiers&#34;&gt;CLI&lt;/a&gt; levels. It can ingest any input file as dictionary, though only the final 64KB are used. This capability can be combined with the &lt;a href=&#34;https://github.com/facebook/zstd/raw/v1.3.5/programs/zstd.1.md#dictionary-builder&#34;&gt;Zstandard Dictionary Builder&lt;/a&gt;, in order to drastically improve compression performance on small files.&lt;/p&gt; &#xA;&lt;p&gt;LZ4 library is provided as open-source software using BSD 2-Clause license.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dev&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/YannCollet/lz4-1lndh&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/lz4/lz4?branch=dev&amp;amp;svg=true&#34; alt=&#34;Build status&#34; title=&#34;Windows test suite&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;The benchmark uses &lt;a href=&#34;https://github.com/inikep/lzbench&#34;&gt;lzbench&lt;/a&gt;, from @inikep compiled with GCC v8.2.0 on Linux 64-bits (Ubuntu 4.18.0-17). The reference system uses a Core i7-9700K CPU @ 4.9GHz (w/ turbo boost). Benchmark evaluates the compression of reference &lt;a href=&#34;http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia&#34;&gt;Silesia Corpus&lt;/a&gt; in single-thread mode.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Compressor&lt;/th&gt; &#xA;   &lt;th&gt;Ratio&lt;/th&gt; &#xA;   &lt;th&gt;Compression&lt;/th&gt; &#xA;   &lt;th&gt;Decompression&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;memcpy&lt;/td&gt; &#xA;   &lt;td&gt;1.000&lt;/td&gt; &#xA;   &lt;td&gt;13700 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;13700 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LZ4 default (v1.9.0)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;2.101&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;780 MB/s&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;4970 MB/s&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LZO 2.09&lt;/td&gt; &#xA;   &lt;td&gt;2.108&lt;/td&gt; &#xA;   &lt;td&gt;670 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;860 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QuickLZ 1.5.0&lt;/td&gt; &#xA;   &lt;td&gt;2.238&lt;/td&gt; &#xA;   &lt;td&gt;575 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;780 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Snappy 1.1.4&lt;/td&gt; &#xA;   &lt;td&gt;2.091&lt;/td&gt; &#xA;   &lt;td&gt;565 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;1950 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.zstd.net/&#34;&gt;Zstandard&lt;/a&gt; 1.4.0 -1&lt;/td&gt; &#xA;   &lt;td&gt;2.883&lt;/td&gt; &#xA;   &lt;td&gt;515 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;1380 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LZF v3.6&lt;/td&gt; &#xA;   &lt;td&gt;2.073&lt;/td&gt; &#xA;   &lt;td&gt;415 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;910 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.zlib.net/&#34;&gt;zlib&lt;/a&gt; deflate 1.2.11 -1&lt;/td&gt; &#xA;   &lt;td&gt;2.730&lt;/td&gt; &#xA;   &lt;td&gt;100 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;415 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LZ4 HC -9 (v1.9.0)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;2.721&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;41 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;4900 MB/s&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.zlib.net/&#34;&gt;zlib&lt;/a&gt; deflate 1.2.11 -6&lt;/td&gt; &#xA;   &lt;td&gt;3.099&lt;/td&gt; &#xA;   &lt;td&gt;36 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;445 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;LZ4 is also compatible and optimized for x32 mode (&lt;code&gt;-mx32&lt;/code&gt;), for which it provides additional speed performance.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;make&#xA;make install     # this command may require root permissions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LZ4&#39;s &lt;code&gt;Makefile&lt;/code&gt; supports standard &lt;a href=&#34;https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html&#34;&gt;Makefile conventions&lt;/a&gt;, including &lt;a href=&#34;https://www.gnu.org/prep/standards/html_node/DESTDIR.html&#34;&gt;staged installs&lt;/a&gt;, &lt;a href=&#34;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&#34;&gt;redirection&lt;/a&gt;, or &lt;a href=&#34;https://www.gnu.org/prep/standards/html_node/Utilities-in-Makefiles.html&#34;&gt;command redefinition&lt;/a&gt;. It is compatible with parallel builds (&lt;code&gt;-j#&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Building LZ4 - Using vcpkg&lt;/h3&gt; &#xA;&lt;p&gt;You can download and install LZ4 using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git&#xA;cd vcpkg&#xA;./bootstrap-vcpkg.sh&#xA;./vcpkg integrate install&#xA;./vcpkg.exe install lz4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The LZ4 port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The raw LZ4 block compression format is detailed within &lt;a href=&#34;https://raw.githubusercontent.com/lz4/lz4/dev/doc/lz4_Block_format.md&#34;&gt;lz4_Block_format&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Arbitrarily long files or data streams are compressed using multiple blocks, for streaming requirements. These blocks are organized into a frame, defined into &lt;a href=&#34;https://raw.githubusercontent.com/lz4/lz4/dev/doc/lz4_Frame_format.md&#34;&gt;lz4_Frame_format&lt;/a&gt;. Interoperable versions of LZ4 must also respect the frame format.&lt;/p&gt; &#xA;&lt;h2&gt;Other source versions&lt;/h2&gt; &#xA;&lt;p&gt;Beyond the C reference source, many contributors have created versions of lz4 in multiple languages (Java, C#, Python, Perl, Ruby, etc.). A list of known source ports is maintained on the &lt;a href=&#34;http://www.lz4.org&#34;&gt;LZ4 Homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Packaging status&lt;/h3&gt; &#xA;&lt;p&gt;Most distributions are bundled with a package manager which allows easy installation of both the &lt;code&gt;liblz4&lt;/code&gt; library and the &lt;code&gt;lz4&lt;/code&gt; command line interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/lz4/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/lz4.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Takayuki Matsuoka, aka @t-mat, for exceptional first-class support throughout the lifetime of this project&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>asg017/sqlite-vec</title>
    <updated>2024-08-04T01:36:05Z</updated>
    <id>tag:github.com,2024-08-04:/asg017/sqlite-vec</id>
    <link href="https://github.com/asg017/sqlite-vec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Work-in-progress vector search SQLite extension that runs anywhere.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;sqlite-vec&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/Ve7WeCJFXk&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/VCtQ8cGhUs&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An extremely small, &#34;fast enough&#34; vector search SQLite extension that runs anywhere! A successor to &lt;a href=&#34;https://github.com/asg017/sqlite-vss&#34;&gt;&lt;code&gt;sqlite-vss&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- deno-fmt-ignore-start --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;em&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; is a pre-v1, so expect breaking changes!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- deno-fmt-ignore-end --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Store and query float, int8, and binary vectors in &lt;code&gt;vec0&lt;/code&gt; virtual tables&lt;/li&gt; &#xA; &lt;li&gt;Written in pure C, no dependencies, runs anywhere SQLite runs (Linux/MacOS/Windows, in the browser with WASM, Raspberry Pis, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Pre-filter vectors with &lt;code&gt;rowid IN (...)&lt;/code&gt; subqueries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://hacks.mozilla.org/2024/06/sponsoring-sqlite-vec-to-enable-more-powerful-local-ai-applications/&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./.github/logos/mozilla.dark.svg&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;./.github/logos/mozilla.svg&#34;&gt; &#xA;   &lt;img alt=&#34;Mozilla Builders logo&#34; width=&#34;400&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt; &lt;code&gt;sqlite-vec&lt;/code&gt; is a &lt;a href=&#34;https://hacks.mozilla.org/2024/06/sponsoring-sqlite-vec-to-enable-more-powerful-local-ai-applications/&#34;&gt;Mozilla Builders project&lt;/a&gt;, with additional sponsorship from &lt;a href=&#34;https://fly.io/&#34;&gt;&lt;img width=&#34;14px&#34; src=&#34;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/flyio.small.ico&#34;&gt; Fly.io &lt;/a&gt;, &lt;a href=&#34;https://turso.tech/&#34;&gt;&lt;img width=&#34;14px&#34; src=&#34;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/turso.small.ico&#34;&gt; Turso&lt;/a&gt;, and &lt;a href=&#34;https://sqlitecloud.io/&#34;&gt;&lt;img width=&#34;14px&#34; src=&#34;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/sqlitecloud.small.svg?sanitize=true&#34;&gt; SQLite Cloud&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/asg017/sqlite-vec/main/#sponsors&#34;&gt;the Sponsors section&lt;/a&gt; for more details. &lt;/i&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://alexgarcia.xyz/sqlite-vec/installing.html&#34;&gt;Installing &lt;code&gt;sqlite-vec&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Install&lt;/th&gt; &#xA;   &lt;th&gt;More Info&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pip install sqlite-vec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://alexgarcia.xyz/sqlite-vec/python.html&#34;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/sqlite-vec/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/sqlite-vec.svg?color=blue&amp;amp;logo=python&amp;amp;logoColor=white&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm install sqlite-vec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://alexgarcia.xyz/sqlite-vec/nodejs.html&#34;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Node.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/sqlite-vec&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/sqlite-vec.svg?color=green&amp;amp;logo=nodedotjs&amp;amp;logoColor=white&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ruby&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gem install sqlite-vec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://alexgarcia.xyz/sqlite-vec/ruby.html&#34;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Ruby&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/gem/v/sqlite-vec?color=red&amp;amp;logo=rubygems&amp;amp;logoColor=white&#34; alt=&#34;Gem&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;go get -u github.com/asg017/sqlite-vec/bindings/go&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://alexgarcia.xyz/sqlite-vec/go.html&#34;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Go&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/asg017/asg017/sqlite-vec-go-bindings/cgo&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/asg017/sqlite-vec-go-bindings/cgo.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cargo add sqlite-vec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://alexgarcia.xyz/sqlite-vec/rust.html&#34;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Rust&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://crates.io/crates/sqlite-vec&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/sqlite-vec?logo=rust&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Datasette&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;datasette install datasette-sqlite-vec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://alexgarcia.xyz/sqlite-vec/datasette.html&#34;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with Datasette&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://datasette.io/plugins/datasette-sqlite-vec&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/datasette-sqlite-vec.svg?color=B6B6D9&amp;amp;label=Datasette+plugin&amp;amp;logoColor=white&amp;amp;logo=python&#34; alt=&#34;Datasette&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sqlite-utils&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sqlite-utils install sqlite-utils-sqlite-vec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://alexgarcia.xyz/sqlite-vec/sqlite-utils.html&#34;&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; with sqlite-utils&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://datasette.io/plugins/datasette-sqlite-vec&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/sqlite-utils-sqlite-vec.svg?color=B6B6D9&amp;amp;label=sqlite-utils+plugin&amp;amp;logoColor=white&amp;amp;logo=python&#34; alt=&#34;sqlite-utils&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Github Release&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/asg017/sqlite-vec?color=lightgrey&amp;amp;include_prereleases&amp;amp;label=Github+release&amp;amp;logo=github&#34; alt=&#34;GitHub tag (latest SemVer pre-release)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Sample usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;.load ./vec0&#xA;&#xA;create virtual table vec_examples using vec0(&#xA;  sample_embedding float[8]&#xA;);&#xA;&#xA;-- vectors can be provided as JSON or in a compact binary format&#xA;insert into vec_examples(rowid, sample_embedding)&#xA;  values&#xA;    (1, &#39;[-0.200, 0.250, 0.341, -0.211, 0.645, 0.935, -0.316, -0.924]&#39;),&#xA;    (2, &#39;[0.443, -0.501, 0.355, -0.771, 0.707, -0.708, -0.185, 0.362]&#39;),&#xA;    (3, &#39;[0.716, -0.927, 0.134, 0.052, -0.669, 0.793, -0.634, -0.162]&#39;),&#xA;    (4, &#39;[-0.710, 0.330, 0.656, 0.041, -0.990, 0.726, 0.385, -0.958]&#39;);&#xA;&#xA;&#xA;-- KNN style query&#xA;select&#xA;  rowid,&#xA;  distance&#xA;from vec_examples&#xA;where sample_embedding match &#39;[0.890, 0.544, 0.825, 0.961, 0.358, 0.0196, 0.521, 0.175]&#39;&#xA;order by distance&#xA;limit 2;&#xA;/*&#xA;┌───────┬──────────────────┐&#xA;│ rowid │     distance     │&#xA;├───────┼──────────────────┤&#xA;│ 2     │ 2.38687372207642 │&#xA;│ 1     │ 2.38978505134583 │&#xA;└───────┴──────────────────┘&#xA;*/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Development of &lt;code&gt;sqlite-vec&lt;/code&gt; is supported by multiple generous sponsors! Mozilla is the main sponsor through the new Builders project.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://hacks.mozilla.org/2024/06/sponsoring-sqlite-vec-to-enable-more-powerful-local-ai-applications/&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./.github/logos/mozilla.dark.svg&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;./.github/logos/mozilla.svg&#34;&gt; &#xA;   &lt;img alt=&#34;Mozilla Builders logo&#34; width=&#34;400&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; is also sponsored by the following companies:&lt;/p&gt; &#xA;&lt;a href=&#34;https://fly.io/&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./.github/logos/flyio.dark.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;./.github/logos/flyio.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Fly.io logo&#34; src=&#34;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/flyio.svg?sanitize=true&#34; width=&#34;32%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://turso.tech/&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./.github/logos/turso.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;./.github/logos/turso.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Turso logo&#34; src=&#34;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/turso.svg?sanitize=true&#34; width=&#34;32%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://sqlitecloud.io/&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./.github/logos/sqlitecloud.dark.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;./.github/logos/sqlitecloud.svg&#34;&gt; &#xA;  &lt;img alt=&#34;SQLite Cloud logo&#34; src=&#34;https://raw.githubusercontent.com/asg017/sqlite-vec/main/.github/logos/flyio.svg?sanitize=true&#34; width=&#34;32%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;p&gt;As well as multiple individual supporters on &lt;a href=&#34;https://github.com/sponsors/asg017/&#34;&gt;Github sponsors&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;If your company interested in sponsoring &lt;code&gt;sqlite-vec&lt;/code&gt; development, send me an email to get more info: &lt;a href=&#34;https://alexgarcia.xyz&#34;&gt;https://alexgarcia.xyz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;See Also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/asg017/sqlite-ecosystem&#34;&gt;&lt;strong&gt;&lt;code&gt;sqlite-ecosystem&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, Maybe more 3rd party SQLite extensions I&#39;ve developed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/asg017/sqlite-rembed&#34;&gt;&lt;strong&gt;&lt;code&gt;sqlite-rembed&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, Generate text embeddings from remote APIs like OpenAI/Nomic/Ollama, meant for testing and SQL scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/asg017/sqlite-lembed&#34;&gt;&lt;strong&gt;&lt;code&gt;sqlite-lembed&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, Generate text embeddings locally from embedding models in the &lt;code&gt;.gguf&lt;/code&gt; format&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pocoproject/poco</title>
    <updated>2024-08-04T01:36:05Z</updated>
    <id>tag:github.com,2024-08-04:/pocoproject/poco</id>
    <link href="https://github.com/pocoproject/poco" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The POCO C++ Libraries are powerful cross-platform C++ libraries for building network- and internet-based applications that run on desktop, server, mobile, IoT, and embedded systems.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pocoproject/poco/main/doc/images/logo.png&#34; alt=&#34;alt text&#34; title=&#34;Poco Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pocoproject/poco/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/pocoproject/poco/actions/workflows/ci.yml/badge.svg?branch=master&#34; alt=&#34;poco-ci&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/370&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/370/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;POCO (Portable Components) C++ Libraries are:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A collection of C++ class libraries, conceptually similar to the Java Class Library or the .NET Framework.&lt;/li&gt; &#xA; &lt;li&gt;Focused on solutions to frequently-encountered practical problems.&lt;/li&gt; &#xA; &lt;li&gt;Focused on &#34;internet-age&#34; network-centric applications.&lt;/li&gt; &#xA; &lt;li&gt;Written in efficient, modern, 100% ANSI/ISO Standard C++.&lt;/li&gt; &#xA; &lt;li&gt;Based on and complementing the C++ Standard Library/STL.&lt;/li&gt; &#xA; &lt;li&gt;Highly portable and available on many different platforms, from embedded to server.&lt;/li&gt; &#xA; &lt;li&gt;Open Source, licensed under the &lt;a href=&#34;https://spdx.org/licenses/BSL-1.0&#34;&gt;Boost Software License&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pocoproject/poco/main/doc/images/overview.png&#34; alt=&#34;alt text&#34; title=&#34;Poco Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To start using POCO, see the &lt;a href=&#34;https://pocoproject.org/docs/00100-GuidedTour.html&#34;&gt;Guided Tour&lt;/a&gt; and &lt;a href=&#34;https://pocoproject.org/docs/00200-GettingStarted.html&#34;&gt;Getting Started&lt;/a&gt; documents.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start (with CMake)&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CMake 3.5 or newer&lt;/li&gt; &#xA; &lt;li&gt;A C++17 compiler (Visual C++ 2017, GCC 8.0, Clang 5, or newer)&lt;/li&gt; &#xA; &lt;li&gt;OpenSSL headers and libraries (optional, but recommended)&lt;/li&gt; &#xA; &lt;li&gt;MySQL, PostgreSQL and ODBC client libraries (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most Unix/Linux systems already have OpenSSL preinstalled. If your system does not have OpenSSL, please get it from &lt;a href=&#34;https://www.openssl.org&#34;&gt;https://www.openssl.org&lt;/a&gt; or another source. You do not have to build OpenSSL yourself - a binary distribution is fine. For example, via Debian APT:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ apt-get install openssl libssl-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS, the easiest way to install OpenSSL is via &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install openssl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The easiest way to install OpenSSL on Windows is to use a binary (prebuild) release, for example the one from Shining Light Productions that comes with a &lt;a href=&#34;https://www.slproweb.com/products/Win32OpenSSL.html&#34;&gt;Windows installer&lt;/a&gt;. OpenSSL can also be installed via the &lt;code&gt;vcpkg&lt;/code&gt; package manager.&lt;/p&gt; &#xA;&lt;p&gt;On Windows, POCO can also use the native Windows TLS APIs (SChannel).&lt;/p&gt; &#xA;&lt;h3&gt;Installing All Dependencies (Linux and macOS)&lt;/h3&gt; &#xA;&lt;p&gt;All dependencies can be installed with the following commands:&lt;/p&gt; &#xA;&lt;h4&gt;Debian Linux (including Ubuntu and Raspbian)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get -y update &amp;amp;&amp;amp; sudo apt-get -y install git g++ make cmake libssl-dev libmysqlclient-dev libpq-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;RedHat Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo yum install -y git gcc-c++ make cmake3 openssl-devel mysql-devel postgresql-devel &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;macOS (with Homebrew)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install cmake openssl mysql-client libpq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building with CMake (Linux, macOS, Windows)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cmake.org&#34;&gt;CMake&lt;/a&gt; (version 3.5 or newer) is the recommended build system for building the POCO C++ Libraries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone -b main https://github.com/pocoproject/poco.git&#xA;$ cd poco&#xA;$ mkdir cmake-build&#xA;$ cd cmake-build&#xA;$ cmake ..&#xA;$ cmake --build . --config Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS, it&#39;s necessary to tell CMake where to find the OpenSSL headers and libraries by setting the &lt;code&gt;OPENSSL_ROOT_DIR&lt;/code&gt; CMake variable. For example, if OpenSSL has been installed with Homebrew, the &lt;code&gt;cmake&lt;/code&gt; invocation becomes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake .. -DOPENSSL_ROOT_DIR=/opt/homebrew/opt/openssl@3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Similarly, the locations of other external libraries can be specified:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake .. -DOPENSSL_ROOT_DIR=/opt/homebrew/opt/openssl@3 -DMYSQL_ROOT_DIR=/opt/homebrew/opt/mysql-client -DPostgreSQL_ROOT_DIR=/opt/homebrew/opt/libpq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other common ways of building with CMake (e.g., &lt;code&gt;cmake-gui&lt;/code&gt;) will also work.&lt;/p&gt; &#xA;&lt;p&gt;There are also a number of project-specific CMake variables that can be changed.&lt;/p&gt; &#xA;&lt;h4&gt;Cross-Compiling&lt;/h4&gt; &#xA;&lt;p&gt;With a proper CMake toolchain file (specified via the &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; CMake variable), the POCO C++ Libraries can be cross-compiled for embedded Linux systems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake .. -DCMAKE_TOOLCHAIN_FILE=/path/to/mytoolchain.cmake -DCMAKE_INSTALL_PREFIX=/path/to/target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing&lt;/h4&gt; &#xA;&lt;p&gt;The POCO C++ Libraries headers and libraries can be optionally be installed by building the &lt;code&gt;install&lt;/code&gt; target.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo cmake --build . --target install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default install location is &lt;code&gt;/usr/local/&lt;/code&gt; on Linux and macOS and &lt;code&gt;C:\Program Files (x64)\&lt;/code&gt; on Windows and can be overridden by setting the &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; CMake variable.&lt;/p&gt; &#xA;&lt;h4&gt;Building and Installing - Using vcpkg&lt;/h4&gt; &#xA;&lt;p&gt;You can download and install poco using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/Microsoft/vcpkg.git&#xA;$ cd vcpkg&#xA;$ ./bootstrap-vcpkg.sh&#xA;$ ./vcpkg integrate install&#xA;$ ./vcpkg install poco&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The poco port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h4&gt;Building and Installing - Using Conan&lt;/h4&gt; &#xA;&lt;p&gt;You can download and install poco using the Conan(&lt;a href=&#34;https://github.com/conan-io/conan&#34;&gt;https://github.com/conan-io/conan&lt;/a&gt;) package manager. It needed to be installed first(&lt;a href=&#34;https://conan.io/downloads.html&#34;&gt;https://conan.io/downloads.html&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;You can install Poco libraries from Conan Center(&lt;a href=&#34;https://conan.io/center.html&#34;&gt;https://conan.io/center.html&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ conan install -r conancenter poco/1.12.0@&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can download Poco recipe and build locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ conan install -r conancenter poco/1.12.0@ --build=poco&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Poco recipe and packages in Conan Center are kept up to date by Conan team members and community contributors. If the version is out of date, or you detect any wrong behavior, please create an issue or pull request(&lt;a href=&#34;https://github.com/conan-io/conan-center-index&#34;&gt;https://github.com/conan-io/conan-center-index&lt;/a&gt;) on the Conan Center Index repository.&lt;/p&gt; &#xA;&lt;h3&gt;Building Without CMake&lt;/h3&gt; &#xA;&lt;p&gt;If you do not want to or cannot use CMake, POCO can also be built with Visual Studio (project and solution files included) or GNU Make (Linux, macOS and other supported Unix platforms).&lt;/p&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://pocoproject.org/docs&#34;&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Getting POCO via a Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;POCO can also be obtained via different &lt;a href=&#34;https://pocoproject.org/download.html&#34;&gt;package managers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community and Contributing&lt;/h2&gt; &#xA;&lt;p&gt;POCO has an active user and contributing community, please visit our &lt;a href=&#34;https://pocoproject.org&#34;&gt;website&lt;/a&gt; and &lt;a href=&#34;https://pocoproject.org/blog&#34;&gt;blog&lt;/a&gt;. Answers to POCO-related questions can also be found on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/poco-libraries&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/pocoproject/poco/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for submitting contributions, bugs reports, feature requests or security issues.&lt;/p&gt; &#xA;&lt;h3&gt;POCO vs. Boost&lt;/h3&gt; &#xA;&lt;p&gt;In regards to Boost, in spite of some functional overlapping, POCO is best thought of as a Boost complement (rather than replacement). Side-by-side use of Boost and POCO is a very common occurrence.&lt;/p&gt;</summary>
  </entry>
</feed>