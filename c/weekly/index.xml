<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-17T02:00:49Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TEN-framework/ten-vad</title>
    <updated>2025-08-17T02:00:49Z</updated>
    <id>tag:github.com,2025-08-17:/TEN-framework/ten-vad</id>
    <link href="https://github.com/TEN-framework/ten-vad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Voice Activity Detector(VAD) from TEN: low-latency, high-performance and lightweight&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/d45870e4-9453-4047-8163-08737f82863f&#34; alt=&#34;TEN VAD banner&#34; /&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/TEN-framework/ten-vad/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ten-framework/ten-vad?color=369eff&amp;amp;labelColor=gray&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;TEN Releases&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TEN-framework/ten-vad/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/ten-framework/ten-vad?labelColor=gray&amp;amp;style=flat-square&#34; alt=&#34;Release Date&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TEN-framework/ten-vad/discussions/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/TEN-framework/ten-vad?labelColor=gray&amp;amp;color=%20%23f79009&#34; alt=&#34;Discussion posts&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TEN-framework/ten-vad/graphs/commit-activity&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/TEN-framework/ten-vad?labelColor=gray&amp;amp;color=pink&#34; alt=&#34;Commits&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TEN-framework/ten-vad/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-search?query=repo%3ATEN-framework%2Ften-vad%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=gray&amp;amp;color=green&#34; alt=&#34;Issues closed&#34; /&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/ten-framework/ten-vad?color=c4f042&amp;amp;labelColor=gray&amp;amp;style=flat-square&#34; alt=&#34;&#34; /&gt; &lt;a href=&#34;https://github.com/TEN-framework/ten-vad/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome!-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/TEN-framework/ten-vad&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Hugging%20Face-TEN%20VAD-yellow?style=flat&amp;amp;logo=huggingface&#34; alt=&#34;HuggingFace TEN VAD&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TEN-framework/ten-vad/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0_with_certain_conditions-blue.svg?labelColor=%20%23155EEF&amp;amp;color=%20%23528bff&#34; alt=&#34;GitHub license&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://deepwiki.com/TEN-framework/TEN-vad&#34;&gt;&lt;img src=&#34;https://deepwiki.com/badge.svg?sanitize=true&#34; alt=&#34;Ask DeepWiki&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- [![ReadmeX](https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg)](https://readmex.com/TEN-framework/ten-vad) --&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/14548&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/14548&#34; alt=&#34;TEN-framework%2Ften-vad | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://GitHub.com/TEN-framework/ten-vad/watchers/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/TEN-framework/ten-vad?style=social&amp;amp;label=Watch&#34; alt=&#34;GitHub watchers&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/TEN-framework/ten-vad/network/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/TEN-framework/ten-vad?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/TEN-framework/ten-vad/stargazers/?WT.mc_id=academic-105485-koreyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/TEN-framework/ten-vad?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;Latest News 🔥&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[2025/07] 🎉 Exciting news! &lt;strong&gt;TEN VAD&lt;/strong&gt; is now &lt;strong&gt;integrated&lt;/strong&gt; into &lt;a href=&#34;https://github.com/k2-fsa/sherpa-onnx&#34;&gt;&lt;strong&gt;k2-fsa/sherpa-onnx&lt;/strong&gt;&lt;/a&gt;, thanks to the fantastic work by &lt;a href=&#34;https://github.com/csukuangfj&#34;&gt;Fangjun Kuang&lt;/a&gt;! You can now achieve more precise speech segment extraction and enjoy an enhanced ASR experience! Refer to the &lt;a href=&#34;https://k2-fsa.github.io/sherpa/onnx/vad/ten-vad.html#&#34;&gt;documentation&lt;/a&gt; and give it a try!&lt;/li&gt; &#xA; &lt;li&gt;[2025/07] We supported &lt;strong&gt;Python inference&lt;/strong&gt; on &lt;strong&gt;macOS&lt;/strong&gt; and &lt;strong&gt;Windows&lt;/strong&gt; with usage of the prebuilt-lib!&lt;/li&gt; &#xA; &lt;li&gt;[2025/06] We &lt;strong&gt;finally&lt;/strong&gt; released and &lt;strong&gt;open-sourced&lt;/strong&gt; the &lt;strong&gt;ONNX&lt;/strong&gt; model and the corresponding &lt;strong&gt;preprocessing code&lt;/strong&gt;! Now you can deploy &lt;strong&gt;TEN VAD&lt;/strong&gt; on &lt;strong&gt;any platform&lt;/strong&gt; and &lt;strong&gt;any hardware architecture&lt;/strong&gt;!&lt;/li&gt; &#xA; &lt;li&gt;[2025/06] We are excited to announce the release of &lt;strong&gt;WASM+JS&lt;/strong&gt; for Web WASM Support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#welcome-to-ten&#34;&gt;Welcome to TEN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#ten-hugging-face-space&#34;&gt;TEN Hugging Face Space&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#key-features&#34;&gt;Key Features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#1-high-performance&#34;&gt;High-Performance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#2-agent-friendly&#34;&gt;Agent-Friendly&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#3-lightweight&#34;&gt;Lightweight&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#4-multiple-programming-languages-and-platforms&#34;&gt;Multiple Programming Languages and Platforms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#5-supproted-sampling-rate-and-hop-size&#34;&gt;Supported Sampling Rate and Hop Size&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#python-usage&#34;&gt;Python Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#1-linux&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#js-usage&#34;&gt;JS Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#1-web&#34;&gt;Web&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#c-usage&#34;&gt;C Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#1-linux-1&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#2-windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#3-macos&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#4-android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#5-ios&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#ten-ecosystem&#34;&gt;TEN Ecosystem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#ask-questions&#34;&gt;Ask Questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#citations&#34;&gt;Citations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;Welcome to TEN&lt;/h2&gt; &#xA;&lt;p&gt;TEN is a comprehensive open-source ecosystem for creating, customizing, and deploying real-time conversational AI agents with multimodal capabilities including voice, vision, and avatar interactions.&lt;/p&gt; &#xA;&lt;p&gt;TEN includes &lt;a href=&#34;https://github.com/ten-framework/ten-framework&#34;&gt;TEN Framework&lt;/a&gt;, &lt;a href=&#34;https://github.com/ten-framework/ten-turn-detection&#34;&gt;TEN Turn Detection&lt;/a&gt;, &lt;a href=&#34;https://github.com/ten-framework/ten-vad&#34;&gt;TEN VAD&lt;/a&gt;, &lt;a href=&#34;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents/demo&#34;&gt;TEN Agent&lt;/a&gt;, &lt;a href=&#34;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&#34;&gt;TMAN Designer&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ten-framework/portal&#34;&gt;TEN Portal&lt;/a&gt;. Check out &lt;a href=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#ten-ecosystem&#34;&gt;TEN Ecosystem&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Community Channel&lt;/th&gt; &#xA;   &lt;th&gt;Purpose&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=TenFramework&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/TenFramework?logo=X&amp;amp;color=%20%23f5f5f5&#34; alt=&#34;Follow on X&#34; /&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Follow TEN Framework on X for updates and announcements&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.linkedin.com/company/ten-framework&#34;&gt;&lt;img src=&#34;https://custom-icon-badges.demolab.com/badge/LinkedIn-TEN_Framework-0A66C2?logo=linkedin-white&amp;amp;logoColor=fff&#34; alt=&#34;Follow on LinkedIn&#34; /&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Follow TEN Framework on LinkedIn for updates and announcements&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://discord.gg/VnPftUzAMJ&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/VnPftUzAMJ?&amp;amp;style=flat&amp;amp;theme=light&amp;amp;color=lightgray&#34; alt=&#34;Discord TEN Community&#34; /&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Join our Discord community to connect with developers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/TEN-framework&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Hugging%20Face-TEN%20Framework-yellow?style=flat&amp;amp;logo=huggingface&#34; alt=&#34;Hugging Face Space&#34; /&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Join our Hugging Face community to explore our spaces and models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/TEN-framework/ten-agent/discussions/170&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TEN_Framework-WeChat_Group-%2307C160?logo=wechat&amp;amp;labelColor=darkgreen&amp;amp;color=gray&#34; alt=&#34;WeChat&#34; /&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Join our WeChat group for Chinese community discussions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br /&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Star TEN Repositories&lt;/strong&gt; ⭐️&lt;/p&gt; &#xA; &lt;p&gt;Get instant notifications for new releases and updates. Your support helps us grow and improve TEN!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br /&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/eeebe996-8c14-4bf7-82ae-f1a1f7e30705&#34; alt=&#34;TEN star us gif&#34; /&gt;&lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;TEN Hugging Face Space&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/725a8318-d679-4b17-b9e4-e3dce999b298&#34;&gt;https://github.com/user-attachments/assets/725a8318-d679-4b17-b9e4-e3dce999b298&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You are more than welcome to &lt;a href=&#34;https://huggingface.co/spaces/TEN-framework/ten-agent-demo&#34;&gt;Visit TEN Hugging Face Space&lt;/a&gt; to try VAD and Turn Detection together.&lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;TEN VAD&lt;/strong&gt; is a real-time voice activity detection system designed for enterprise use, providing accurate frame-level speech activity detection. It shows superior precision compared to both WebRTC VAD and Silero VAD, which are commonly used in the industry. Additionally, TEN VAD offers lower computational complexity and reduced memory usage compared to Silero VAD. Meanwhile, the architecture&#39;s temporal efficiency enables rapid voice activity detection, significantly reducing end-to-end response and turn detection latency in conversational AI systems.&lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;1. High-Performance:&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The precision-recall curves comparing the performance of WebRTC VAD (pitch-based), Silero VAD, and TEN VAD are shown below. The evaluation is conducted on the precisely manually annotated testset. The audio files are from librispeech, gigaspeech, DNS Challenge etc. As demonstrated, TEN VAD achieves the best performance. Additionally, cross-validation experiments conducted on large internal real-world datasets demonstrate the reproducibility of these findings. The &lt;strong&gt;testset with annotated labels&lt;/strong&gt; is released in directory &#34;testset&#34; of this repository.&lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;div style=&#34;text-align:&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/examples/images/PR_Curves_testset.png&#34; width=&#34;800&#34; /&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Note that the default threshold of 0.5 is used to generate binary speech indicators (0 for non-speech signal, 1 for speech signal). This threshold needs to be tuned according to your domain-specific task. The precision-recall curve can be obtained by executing the following script on Linux x64. The output figure will be saved in the same directory as the script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ./examples&#xA;python plot_pr_curves.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;&lt;strong&gt;2. Agent-Friendly:&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;As illustrated in the figure below, TEN VAD rapidly detects speech-to-non-speech transitions, whereas Silero VAD suffers from a delay of several hundred milliseconds, resulting in increased end-to-end latency in human-agent interaction systems. In addition, as demonstrated in the 6.5s-7.0s audio segment, Silero VAD fails to identify short silent durations between adjacent speech segments.&lt;/p&gt; &#xA;&lt;div style=&#34;text-align:&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/examples/images/Agent-Friendly-image.png&#34; width=&#34;800&#34; /&gt; &#xA;&lt;/div&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;&lt;strong&gt;3. Lightweight:&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We evaluated the RTF (Real-Time Factor) across five distinct platforms, each equipped with varying CPUs. TEN VAD demonstrates much lower computational complexity and smaller library size than Silero VAD.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; rowspan=&#34;2&#34; valign=&#34;middle&#34;&gt; Platform &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; rowspan=&#34;2&#34; valign=&#34;middle&#34;&gt; CPU &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; colspan=&#34;2&#34;&gt; RTF &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; colspan=&#34;2&#34;&gt; Lib Size &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;white-space: nowrap;&#34;&gt; TEN VAD &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;white-space: nowrap;&#34;&gt; Silero VAD &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; TEN VAD &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Silero VAD &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; rowspan=&#34;3&#34;&gt; Linux &lt;/th&gt; &#xA;   &lt;td style=&#34;white-space: nowrap;&#34;&gt; AMD Ryzen 9 5900X 12-Core &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0150 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; rowspan=&#34;2&#34; valign=&#34;middle&#34;&gt; / &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; rowspan=&#34;3&#34; valign=&#34;middle&#34;&gt; 306KB &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; rowspan=&#34;10&#34; style=&#34;white-space: nowrap;&#34; valign=&#34;middle&#34;&gt; 2.16MB(JIT) / 2.22MB(ONNX) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;white-space: nowrap;&#34;&gt; Intel(R) Xeon(R) Platinum 8253 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0136 &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;white-space: nowrap;&#34;&gt; Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0086 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0127 &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Windows &lt;/th&gt; &#xA;   &lt;td&gt; Intel i7-10710U &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0150 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; rowspan=&#34;7&#34; valign=&#34;middle&#34;&gt; / &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;white-space: nowrap;&#34;&gt; 464KB(x86) / 508KB(x64) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; macOS &lt;/th&gt; &#xA;   &lt;td&gt; M1 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0160 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 731KB &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Web &lt;/th&gt; &#xA;   &lt;td&gt; macOS(M1) &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.010 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 277KB &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; rowspan=&#34;2&#34;&gt; Android &lt;/th&gt; &#xA;   &lt;td&gt; Galaxy J6+ (32bit, 425) &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0570 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; rowspan=&#34;2&#34; style=&#34;white-space: nowrap;&#34;&gt; 373KB(v7a) / 532KB(v8a)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; Oppo A3s (450) &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0490 &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; rowspan=&#34;2&#34;&gt; iOS &lt;/th&gt; &#xA;   &lt;td&gt; iPhone6 (A8) &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0210 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; rowspan=&#34;2&#34;&gt; 320KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; iPhone8 (A11) &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; 0.0050 &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;&lt;strong&gt;4. Multiple programming languages and platforms:&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;TEN VAD provides cross-platform C compatibility across five operating systems (Linux x64, Windows, macOS, Android, iOS), with Python bindings optimized for Linux x64, with wasm for Web. &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;5. Supproted sampling rate and hop size:&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;TEN VAD operates on 16kHz audio input with configurable hop sizes (optimized frame configurations: 160/256 samples=10/16ms). Other sampling rates must be resampled to 16kHz. &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/TEN-framework/ten-vad.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The project supports five major platforms with dynamic library linking.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Platform &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Dynamic Lib &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Supported Arch &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Interface Language &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Header &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Comment  &lt;/th&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Linux &lt;/th&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; libten_vad.so &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; x64 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; Python, C &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;6&#34;&gt;ten_vad.h &lt;br /&gt; ten_vad.py &lt;br /&gt; ten_vad.js&lt;/td&gt; &#xA;   &lt;td&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Windows &lt;/th&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; ten_vad.dll &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; x64, x86 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; C &lt;/td&gt; &#xA;   &lt;td&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; macOS &lt;/th&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; ten_vad.framework &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; arm64, x86_64 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; C &lt;/td&gt; &#xA;   &lt;td&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Web &lt;/th&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; ten_vad.wasm &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; / &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; JS &lt;/td&gt; &#xA;   &lt;td&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; Android &lt;/th&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; libten_vad.so &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; arm64-v8a, armeabi-v7a &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; C &lt;/td&gt; &#xA;   &lt;td&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt; iOS &lt;/th&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; ten_vad.framework &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; arm64 &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; C &lt;/td&gt; &#xA;   &lt;td&gt; 1. not simulator &lt;br /&gt; 2. not iPad &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Python Usage&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;1. Linux / macOS / Windows&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;numpy (Version 1.17.4/1.26.4 verified)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;scipy (Version &amp;gt;= 1.5.0)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;scikit-learn (Version 1.2.2/1.5.0 verified, for plotting PR curves)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;matplotlib (Version 3.1.3/3.10.0 verified, for plotting PR curves)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;torchaudio (Version 2.2.2 verified, for plotting PR curves)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Python version 3.8.19/3.10.14 verified&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: You could use other versions of above packages, but we didn&#39;t test other versions.&lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;p&gt;The &lt;strong&gt;lib&lt;/strong&gt; only depend on numpy, you have to install the dependency via requirements.txt:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For &lt;strong&gt;running demo or plotting PR curves&lt;/strong&gt;, you have to install the dependencies:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install -r ./examples/requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that if you did not install &lt;strong&gt;libc++1&lt;/strong&gt; (Linux), you have to run the code below to install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update&#xA;sudo apt install libc++1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Note: For usage in python, you can either use it by &lt;strong&gt;git clone&lt;/strong&gt; or &lt;strong&gt;pip&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;strong&gt;By using git clone:&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/TEN-framework/ten-vad.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Enter examples directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ./examples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Test&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python test.py s0724-s0730.wav out.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h5&gt;&lt;strong&gt;By using pip:&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install via pip&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -U --force-reinstall -v git+https://github.com/TEN-framework/ten-vad.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Write your own use cases and import the class, the attributes of class TenVAD you can refer to ten_vad.py&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;from ten_vad import TenVad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;&lt;strong&gt;JS Usage&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;1. Web&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js (macOS v14.18.2, Linux v16.20.2 verified)&lt;/li&gt; &#xA; &lt;li&gt;Terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;1) cd ./examples&#xA;2) node test_node.js s0724-s0730.wav out.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h3&gt;&lt;strong&gt;C Usage&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Build Scripts&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Located in examples/ directory or examples_onnx/ (for &lt;strong&gt;ONNX&lt;/strong&gt; usage on Linux):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux: build-and-deploy-linux.sh&lt;/li&gt; &#xA; &lt;li&gt;Windows: build-and-deploy-windows.bat&lt;/li&gt; &#xA; &lt;li&gt;macOS: build-and-deploy-mac.sh&lt;/li&gt; &#xA; &lt;li&gt;Android: build-and-deploy-android.sh&lt;/li&gt; &#xA; &lt;li&gt;iOS: build-and-deploy-ios.sh&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Dynamic Library Configuration&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Runtime library path configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux/Android: LD_LIBRARY_PATH&lt;/li&gt; &#xA; &lt;li&gt;macOS: DYLD_FRAMEWORK_PATH&lt;/li&gt; &#xA; &lt;li&gt;Windows: DLL in executable directory or system PATH&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Customization&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modify platform-specific build scripts&lt;/li&gt; &#xA; &lt;li&gt;Adjust CMakeLists.txt&lt;/li&gt; &#xA; &lt;li&gt;Configure toolchain and architecture settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Overview of Usage&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Navigate to examples/ or examples_onnx/ (for &lt;strong&gt;ONNX&lt;/strong&gt; usage on Linux)&lt;/li&gt; &#xA; &lt;li&gt;Execute platform-specific build script&lt;/li&gt; &#xA; &lt;li&gt;Configure dynamic library path&lt;/li&gt; &#xA; &lt;li&gt;Run demo with sample audio s0724-s0730.wav&lt;/li&gt; &#xA; &lt;li&gt;Processed results saved to out.txt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br /&gt; &#xA;&lt;p&gt;The detailed usage methods of each platform are as follows &lt;br /&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;1. Linux&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clang (e.g. 6.0.0-1ubuntu2 verified)&lt;/li&gt; &#xA; &lt;li&gt;CMake&lt;/li&gt; &#xA; &lt;li&gt;Terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that if you did not install &lt;strong&gt;libc++1&lt;/strong&gt;, you have to run the code below to install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update&#xA;sudo apt install libc++1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Usage (prebuilt-lib)&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;1) cd ./examples&#xA;2) ./build-and-deploy-linux.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Usage (ONNX)&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;p&gt;You have to download the &lt;strong&gt;onnxruntime&lt;/strong&gt; packages from the &lt;a href=&#34;https://github.com/microsoft/onnxruntime&#34;&gt;microsoft official onnxruntime github website&lt;/a&gt;. Note that the version of onnxruntime must be higher than or equal to 1.17.1 (e.g. onnxruntime-linux-x64-1.17.1.tgz). &lt;br /&gt; &lt;br /&gt; You can check the official &lt;strong&gt;ONNX Runtime releases&lt;/strong&gt; from &lt;a href=&#34;https://github.com/microsoft/onnxruntime/tags&#34;&gt;this website&lt;/a&gt;. And for example, to download version 1.17.1 (Linux x64), use &lt;a href=&#34;https://github.com/microsoft/onnxruntime/releases/download/v1.17.1/onnxruntime-linux-x64-1.17.1.tgz&#34;&gt;this link&lt;/a&gt;. After extracting the compressed file, you&#39;ll find two important directories:&lt;code&gt;include/&lt;/code&gt; - header files, &lt;code&gt;lib/&lt;/code&gt; - library files&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1) cd examples_onnx/&#xA;2) ./build-and-deploy-linux.sh --ort-path /absolute/path/to/your/onnxruntime/root/dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: If executing the onnx demo from a different directory than the one used when running build-and-deploy-linux.sh, ensure to create a symbolic link to src/onnx_model/ to prevent ONNX model file loading failures. &lt;br /&gt; &lt;strong&gt;Note 2&lt;/strong&gt;: The &lt;strong&gt;ONNX model&lt;/strong&gt; locates in &lt;code&gt;src/onnx_model&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;br /&gt; &#xA;&lt;h4&gt;&lt;strong&gt;2. Windows&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio (2017, 2019, 2022 verified)&lt;/li&gt; &#xA; &lt;li&gt;CMake (3.26.0-rc6 verified)&lt;/li&gt; &#xA; &lt;li&gt;Terminal (MINGW64 or powershell)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;1) cd ./examples&#xA;2) Configure &#34;build-and-deploy-windows.bat&#34; with your preferred:&#xA;    - Architecture (default: x64)&#xA;    - Visual Studio version (default: 2019)&#xA;3) ./build-and-deploy-windows.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h4&gt;&lt;strong&gt;3. macOS&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode (15.2 verified)&lt;/li&gt; &#xA; &lt;li&gt;CMake (3.19.2 verified)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;1) cd ./examples&#xA;2) Configure &#34;build-and-deploy-mac.sh&#34; with your target architecture:&#xA;  - Default: arm64 (Apple Silicon)&#xA;  - Alternative: x86_64 (Intel)&#xA;3) ./build-and-deploy-mac.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h4&gt;&lt;strong&gt;4. Android&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NDK (r25b, macOS verified)&lt;/li&gt; &#xA; &lt;li&gt;CMake (3.19.2, macOS verified)&lt;/li&gt; &#xA; &lt;li&gt;adb (1.0.41, macOS verified)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;1) cd ./examples&#xA;2) export ANDROID_NDK=/path/to/android-ndk  # Replace it with your NDK installation path&#xA;3) Configure &#34;build-and-deploy-android.sh&#34; with your build settings:&#xA;  - Architecture: arm64-v8a (default) or armeabi-v7a&#xA;  - Toolchain: aarch64-linux-android-clang (default) or custom NDK toolchain&#xA;4) ./build-and-deploy-android.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h4&gt;&lt;strong&gt;5. iOS&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Xcode (15.2, macOS verified) CMake (3.19.2, macOS verified)&lt;/p&gt; &#xA;&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enter examples directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ./examples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Creates Xcode project files for iOS build&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build-and-deploy-ios.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the steps below to build and test on iOS device:&lt;/p&gt; &lt;p&gt;3.1. Use Xcode to open .xcodeproj files: a) cd ./build-ios, b) open ./ten_vad_demo.xcodeproj&lt;/p&gt; &lt;p&gt;3.2. In Xcode IDE, select ten_vad_demo target (should check: Edit Scheme → Run → Release), then select your iOS Device (not simulator).&lt;/p&gt; &#xA;  &lt;div style=&#34;text-align:&#34;&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/examples/images/ios_image_1.jpg&#34; width=&#34;800&#34; /&gt; &#xA;  &lt;/div&gt; &lt;p&gt;3.3. Drag ten_vad/lib/iOS/ten_vad.framework to &#34;Frameworks, Libraries, and Embedded Content&#34;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;(in TARGETS → ten_vad_demo → ten_vad_demo → General, should set Embed to &#34;Embed &amp;amp; Sign&#34;).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;or add it directly in this way: &#34;Frameworks, Libraries, and Embedded Content&#34; → &#34;+&#34; → Add Other... → Add Files →...&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Note: If this step is not completed, you may encounter the following runtime error: &#34;dyld: Library not loaded: @rpath/ten_vad.framework/ten_vad&#34;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;div style=&#34;text-align:&#34;&amp;gt;&#xA;  &amp;lt;img src=&#34;./examples/images/ios_image_2.png&#34; width=&#34;800&#34;&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;3.4. Configure iOS device Signature&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;in TARGETS → ten_vad_demo → Signing &amp;amp; Capabilities → Signing&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Modify Bundle Identifier: modify &#34;com.yourcompany&#34; to yours;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Specify Provisioning Profile&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;In TARGETS → ten_vad_demo → Build Settings → Signing → Code Signing Identity:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Specify your Certification&lt;/p&gt; &lt;p&gt;3.5. Build in Xcode and run demo on your device.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;TEN Ecosystem&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Preview&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ten-framework/ten_framework&#34;&gt;&lt;strong&gt;🏚️ TEN Framework&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is an open-source framework for real-time, multimodal conversational AI.&lt;br /&gt;&lt;br /&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ten-framework/ten_framework?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/7c8f72d7-3993-4d01-8504-b71578a22944&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ten-framework/ten-turn-detection&#34;&gt;&lt;strong&gt;️🔂 TEN Turn Detection&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is for full-duplex dialogue communication.&lt;br /&gt;&lt;br /&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ten-framework/ten-turn-detection?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/8d0ec716-5d0e-43e4-ad9a-d97b17305658&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ten-framework/ten-vad&#34;&gt;&lt;strong&gt;🔉 TEN VAD&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN VAD is a low-latency, lightweight and high-performance streaming voice activity detector (VAD).&lt;br /&gt;&lt;br /&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ten-framework/ten-vad?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/d45870e4-9453-4047-8163-08737f82863f&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents&#34;&gt;&lt;strong&gt;🎙️ TEN Agent&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN Agent is a showcase of TEN Framewrok.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/38de2207-939b-4702-a0aa-04491f5b5275&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&#34;&gt;&lt;strong&gt;🎨 TMAN Designer&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TMAN Designer is low/no code option to make a voice agent with easy to use workflow UI.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/804c3543-0a47-42b7-b40b-ef32b742fb8f&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ten-framework/portal&#34;&gt;&lt;strong&gt;📒 TEN Portal&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;The official site of TEN framework, it has documentation and blog.&lt;br /&gt;&lt;br /&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ten-framework/portal?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/e17d8aaa-5928-45dd-ac71-814928e26a89&#34; alt=&#34;&#34; /&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;Ask Questions&lt;/h2&gt; &#xA;&lt;p&gt;TEN VAD is available on these AI-powered Q&amp;amp;A platforms. They can help you find answers quickly and accurately in multiple languages, covering everything from basic setup to advanced implementation details.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DeepWiki&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://deepwiki.com/TEN-framework/TEN-vad&#34;&gt;&lt;img src=&#34;https://deepwiki.com/badge.svg?sanitize=true&#34; alt=&#34;Ask DeepWiki&#34; /&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReadmeX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://readmex.com/TEN-framework/ten-vad&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true&#34; alt=&#34;ReadmeX&#34; /&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Citations&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{TEN VAD,&#xA;  author = {TEN Team},&#xA;  title = {TEN VAD: A Low-Latency, Lightweight and High-Performance Streaming Voice Activity Detector (VAD)},&#xA;  year = {2025},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {https://github.com/TEN-framework/ten-vad.git},&#xA;  email = {developer@ten.ai}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under Apache 2.0 with certain conditions. Refer to the &#34;LICENSE&#34; file in the root directory for detailed information. Note that &lt;code&gt;pitch_est.cc&lt;/code&gt; contains modified code derived from &lt;a href=&#34;https://github.com/xiph/LPCNet&#34;&gt;LPCNet&lt;/a&gt;, which is &lt;a href=&#34;https://spdx.org/licenses/BSD-2-Clause.html&#34;&gt;BSD-2-Clause&lt;/a&gt; and &lt;a href=&#34;https://spdx.org/licenses/BSD-3-Clause.html&#34;&gt;BSD-3-Clause&lt;/a&gt; licensed, refer to the NOTICES file in the root directory for detailed information.&lt;/p&gt; &#xA;&lt;br /&gt;</summary>
  </entry>
  <entry>
    <title>dev-Ali2008/xanite</title>
    <updated>2025-08-17T02:00:49Z</updated>
    <id>tag:github.com,2025-08-17:/dev-Ali2008/xanite</id>
    <link href="https://github.com/dev-Ali2008/xanite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xanite&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/dev-Ali2008/xanite-android/raw/a94647d4a56a7abc37f302a7fcec753c3ef8c1db/Xanite.png&#34;&gt; &lt;img height=&#34;150px&#34; src=&#34;https://github.com/dev-Ali2008/xanite-android/raw/a94647d4a56a7abc37f302a7fcec753c3ef8c1db/Xanite.png&#34; /&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Xanite - Xbox OG/360 emulator &lt;/h1&gt; &#xA;&lt;p&gt;Xanite is a &#34;proof of concept&#34; emulator.&lt;/p&gt; &#xA;&lt;p&gt;This project emulates both the original Xbox and Xbox 360 consoles on Android, supporting game ROMs in various formats.&lt;/p&gt; &#xA;&lt;h2&gt;Game Compatibility&lt;/h2&gt; &#xA;&lt;h3&gt;Xbox Original&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported formats: xiso, xbe&lt;/li&gt; &#xA; &lt;li&gt;BIOS required (must be obtained from your own Xbox)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Xbox 360&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported formats: iso, xex, god&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;the games you can play depends on your device&#39;s performance and storage capacity.&lt;/p&gt; &#xA;&lt;h2&gt;Platform Support&lt;/h2&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://img.shields.io/badge/Android A64 build-none-aaaaaa.svg&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img height=&#34;200px&#34; src=&#34;https://github.com/dev-Ali2008/xanite/raw/e718259484b8afd71a774a7cae3a15f5caacf5e5/test.png&#34; /&gt;  -- Key Features &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Hardware Detection:&lt;br /&gt; Automatically identifies your device&#39;s hardware (GPU, RAM) and optimizes settings for peak performance&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dual Console Support:&lt;br /&gt; Play both Xbox and Xbox 360 games in one emulator&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Performance Scaling:&lt;br /&gt; you can manually adjust the resolution and performance in settings for experiment or low end devices&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;For Xbox Original&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Processors:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Snapdragon 855 or better&lt;/li&gt; &#xA;   &lt;li&gt;Exynos 990 or better&lt;/li&gt; &#xA;   &lt;li&gt;Dimensity 1000 or better&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;RAM:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;4 GB minimum&lt;/li&gt; &#xA;   &lt;li&gt;8+ GB recommended&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For Xbox 360 (higher requirements)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Processors:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Snapdragon 888 or better&lt;/li&gt; &#xA;   &lt;li&gt;Exynos 2200 or better&lt;/li&gt; &#xA;   &lt;li&gt;Dimensity 8300 or better&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;RAM:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;8 GB minimum&lt;/li&gt; &#xA;   &lt;li&gt;12+ GB recommended&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Graphics:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3.2 opengl&lt;/li&gt; &#xA; &lt;li&gt;(vulkan coming soon)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;OS Requirements:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android 10+ (no root)&lt;/li&gt; &#xA; &lt;li&gt;Android 9 and below not supported&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;For Xbox Original:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install BIOS from your own Xbox&lt;/li&gt; &#xA;   &lt;li&gt;Obtain games in iso/xiso format from your personal game copies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Xbox 360:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Requires Xbox 360 system files from your console&lt;/li&gt; &#xA;   &lt;li&gt;Games in iso/xex/god format from your personal collection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute as a developer, please contact us in discord&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Developed by @FreePalestine1970,@Yebot32 and other developers on Telegram and discord.&lt;br /&gt; Special thanks to all Xanite supporters.&lt;/p&gt; &#xA;&lt;h2&gt;DISCLAIMER !&lt;/h2&gt; &#xA;&lt;p&gt;Xanite is an open-source project not affiliated with Microsoft, Xemu, or Xenia. It is intended for educational&lt;/p&gt; &#xA;&lt;p&gt;We do not condone piracy. BIOS files and game ROMs should be legally owned. While the emulator itself is legal, possessing illegal copies of games or BIOS files is not. Be cautious online.&lt;/p&gt; &#xA;&lt;h2&gt;xanite website&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev-ali2008.github.io/Xanite.io/#social&#34;&gt;https://dev-ali2008.github.io/Xanite.io/#social&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nanomq/nanomq</title>
    <updated>2025-08-17T02:00:49Z</updated>
    <id>tag:github.com,2025-08-17:/nanomq/nanomq</id>
    <link href="https://github.com/nanomq/nanomq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An ultra-lightweight and blazing-fast Messaging Broker/Bus for IoT Edge &amp; SDV&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LF Edge NanoMQ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/emqx/nanomq/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/emqx/nanomq?color=brightgreen&amp;amp;label=Release&#34; alt=&#34;GitHub Release&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/emqx/nanomq/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/emqx/nanomq/build_packages.yaml?branch=master&amp;amp;label=Build&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/emqx/nanomq&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/emqx/nanomq?label=Docker%20Pulls&#34; alt=&#34;Docker Pulls&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/xYGf3fQnES&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/931086341838622751?label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/EMQTech&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Follow-EMQ-1DA1F2?logo=twitter&#34; alt=&#34;Twitter&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/channel/UC5FjR77ErAxvZENEWzQaO5Q&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Subscribe-EMQ-FF0000?logo=youtube&#34; alt=&#34;YouTube&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/emqx/nanomq/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Community-NanoMQ-yellow?logo=github&#34; alt=&#34;Community&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/emqx/nanomq&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/emqx/nanomq/branch/master/graph/badge.svg?token=24E9Q3C0M0&#34; alt=&#34;codecov&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/emqx/nanomq/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/emqx/nanomq.svg?logoColor=silver&amp;amp;logo=open-source-initiative&amp;amp;label=&amp;amp;color=blue&#34; alt=&#34;License&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NanoMQ MQTT Broker (NanoMQ) is an all-around Edge Messaging Platform that includes a blazing-fast MQTT Broker for the IoT/IIoT and a lightweight Messaging Bus for SDV.&lt;/p&gt; &#xA;&lt;p&gt;NanoMQ&#39;s embedded Actor architecture extends NNG&#39;s internal asynchronous I/O, plus an enhanced message passing and scheduling system to maximize the overall capacity. Fine-tuned towards the embedded environment and mission-critical scenarios.&lt;/p&gt; &#xA;&lt;p&gt;NanoMQ fully supports MQTT V3.1.1/3.1 and MQTT V5.0.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please visit &lt;a href=&#34;https://nanomq.io/&#34;&gt;NanoMQ homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cost-effective on an embedded platform;&lt;/li&gt; &#xA; &lt;li&gt;Fully based on native POSIX. High Compatibility;&lt;/li&gt; &#xA; &lt;li&gt;Pure C implementation. High portability;&lt;/li&gt; &#xA; &lt;li&gt;Fully asynchronous I/O and multi-threading;&lt;/li&gt; &#xA; &lt;li&gt;Good support for SMP;&lt;/li&gt; &#xA; &lt;li&gt;Low latency &amp;amp; High handling capacity;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/64823539/182988350-f6e2520f-6e6f-46db-b469-685bec977270.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;h3&gt;Run NanoMQ using Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name nanomq -p 1883:1883 -p 8083:8083 -p 8883:8883 emqx/nanomq:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More installation options&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to install and manage NanoMQ yourself, you can download the latest version from &lt;a href=&#34;https://nanomq.io/downloads&#34;&gt;nanomq.io/downloads&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Run NanoMQ:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nanomq start&#xA;## or run nanomq with a specified configuration file&#xA;nanomq start --conf &amp;lt;config_file&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build From Source&lt;/h2&gt; &#xA;&lt;p&gt;NanoMQ is dedicated to delivering a simple but powerful Messaging Hub on various edge platforms.&lt;/p&gt; &#xA;&lt;p&gt;With this being said, NanoMQ can run on different architectures such like x86_64 and ARM with minor migration efforts.&lt;/p&gt; &#xA;&lt;p&gt;Building NanoMQ requires a C99-compatible compiler and &lt;a href=&#34;http://www.cmake.org/&#34;&gt;CMake&lt;/a&gt; (version 3.13 or newer).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended to compile with &lt;code&gt;Ninja&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/emqx/nanomq.git&#xA;cd nanomq&#xA;git submodule update --init --recursive&#xA;mkdir build &amp;amp;&amp;amp; cd build&#xA;cmake -G Ninja ..&#xA;ninja&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or compile with &lt;code&gt;make&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/emqx/nanomq.git &#xA;cd nanomq&#xA;git submodule update --init --recursive&#xA;mkdir build &amp;amp;&amp;amp; cd build&#xA;cmake .. &#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build option&lt;/h3&gt; &#xA;&lt;p&gt;There are some configuration options specified using CMake defines in addition to the standard options like &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-DNNG_ENABLE_QUIC=ON&lt;/code&gt;: to build NanoMQ with QUIC bridging feature&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DNNG_ENABLE_TLS=ON&lt;/code&gt;: to build with TLS support. (Need to install &lt;a href=&#34;https://tls.mbed.org&#34;&gt;mbedTLS&lt;/a&gt; in advance)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DBUILD_CLIENT=OFF&lt;/code&gt;: to disable nanomq tools client suite (including pub / sub / conn )&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DBUILD_ZMQ_GATEWAY=ON&lt;/code&gt;: to build &lt;code&gt;nanomq_cli&lt;/code&gt; with zeromq gateway tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DBUILD_NFTP=ON&lt;/code&gt;: to build &lt;code&gt;nanomq_cli&lt;/code&gt; with nftp client&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DBUILD_DDS_PROXY=ON&lt;/code&gt;: to build &lt;code&gt;nanomq_cli&lt;/code&gt; with dds client ( proxy / sub / pub )&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DBUILD_BENCH=ON&lt;/code&gt;: to build &lt;code&gt;nanomq_cli&lt;/code&gt; mqtt bench&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DENABLE_JWT=ON&lt;/code&gt;: to build JWT dependency for http server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DNNG_ENABLE_SQLITE=ON&lt;/code&gt;: to build nanomq with sqlite support&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DBUILD_STATIC_LIB=ON&lt;/code&gt;: to build nanomq as a static library&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DBUILD_SHARED_LIBS=ON&lt;/code&gt;: to build nanomq as a shared library&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DDEBUG=ON&lt;/code&gt;: to enable debug flag&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DASAN=ON&lt;/code&gt;: to enable sanitizer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-DDEBUG_TRACE=ON&lt;/code&gt;: to enable ptrace (ptrace is a mechanism that allows one process to “trace” the execution of another process. The tracer is able to pause execution, and inspect and modify memory and registers in the tracee process)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;NanoMQ&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.emqx.com/en/blog/category/nanomq&#34;&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nanomq.io/&#34;&gt;Official website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MQTT Specifications&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html&#34;&gt;MQTT Version 3.1.1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.oasis-open.org/mqtt/mqtt/v5.0/cs02/mqtt-v5.0-cs02.html&#34;&gt;MQTT Version 5.0&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://mqtt.org/new/wp-content/uploads/2009/06/MQTT-SN_spec_v1.2.pdf&#34;&gt;MQTT SN&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Unsupported features of MQTT 5.0&lt;/em&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Auth &lt;a href=&#34;https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901217&#34;&gt;https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901217&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Server Redirection &lt;a href=&#34;https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901255&#34;&gt;https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901255&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MQTT Client Examples&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/emqx/MQTT-Client-Examples&#34;&gt;MQTT-Client-Examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MQTT Client SDK&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nanomq/NanoSDK&#34;&gt;NanoSDK&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Internet of Vehicles&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.emqx.com/en/blog/category/internet-of-vehicles&#34;&gt;Internet of Vehicles&lt;/a&gt;. Build a reliable, efficient, and industry-specific IoV platform based on EMQ&#39;s practical experience, from theoretical knowledge such as protocol selection to practical operations like platform architecture design.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DDS&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://cyclonedds.io/&#34;&gt;CycloneDDS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nanomq/nanomq/master/nanomq_cli/dds2mqtt/README.md&#34;&gt;DDS proxy on NanoMQ_CLI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Involved&lt;/h2&gt; &#xA;&lt;h3&gt;Our Website&lt;/h3&gt; &#xA;&lt;p&gt;Visit our &lt;a href=&#34;https://nanomq.io/&#34;&gt;official website&lt;/a&gt; to have a good grasp on NanoMQ MQTT broker and see how it can be applied in current industries.&lt;/p&gt; &#xA;&lt;h3&gt;Test Report&lt;/h3&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://nanomq.io/docs/latest/test-report.html#about-nanomq&#34;&gt;test report&lt;/a&gt; shows how extraordinary and competitive the NanoMQ is in Edge Computing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Currently the benchmark is for 0.2.5, the updated one with ver 0.3.5 is coming soon&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Questions&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/emqx/nanomq/discussions&#34;&gt;Github Discussions&lt;/a&gt; provides a place for you to ask questions and share your ideas with users around the world.&lt;/p&gt; &#xA;&lt;h3&gt;Slack&lt;/h3&gt; &#xA;&lt;p&gt;You could join us on &lt;a href=&#34;https://slack-invite.emqx.io/&#34;&gt;Slack&lt;/a&gt;. We now share a workspace with the entire EMQ X team. After joining, find your channel!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;#nanomq&lt;/code&gt;: is a channel for general usage, where for asking questions or sharing using experience;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;#nanomq-dev&lt;/code&gt;: is a channel for MQTT lovers and developers, your great thoughts are what we love to hear;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;#nanomq-nng&lt;/code&gt;: is a channel for guys who are interested in NNG, one of our fabulous dependencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Some quotes from NNG&#39;s maintainer --- Garrett: I’m very excited about the synergy between the NanoMQ and NNG projects, and grateful for sponsorship that NNG has received from the NanoMQ team. The NanoMQ team has been able to push NNG&#39;s envelope, and the collaboration has already yielded substantial improvements for both projects. Further, the cooperation between these two project will make MQTT and SP (nanomsg) protocols easy to use within a single project as well as other capabilities (such as websockets, HTTPS clients and servers), greatly expanding the toolset within easy reach of the IoT developer. Further this comes without the usual licensing or portability/embeddability challenges that face other projects. Additional planned collaborative work will further expand on these capabilities to the benefit of our shared communities.&lt;/p&gt; &#xA;&lt;h3&gt;Open Source&lt;/h3&gt; &#xA;&lt;p&gt;NanoMQ is fully open-sourced!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nanomq/nanomq/master/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;The EMQ Edge Computing team.&lt;/p&gt;</summary>
  </entry>
</feed>