<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-13T01:42:02Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pr3y/Bruce</title>
    <updated>2024-10-13T01:42:02Z</updated>
    <id>tag:github.com,2024-10-13:/pr3y/Bruce</id>
    <link href="https://github.com/pr3y/Bruce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Predatory ESP32 Firmware&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/bruce_banner.jpg&#34; alt=&#34;Bruce Main Menu&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;span&gt;ü¶à&lt;/span&gt; Bruce&lt;/h1&gt; &#xA;&lt;p&gt;Bruce is meant to be a versatile ESP32 firmware that supports a ton of offensive features focusing on facilitating Red Team operations. It also supports m5stack products and works great with Cardputer, Sticks and M5Cores.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üèó&lt;/span&gt; How to install&lt;/h2&gt; &#xA;&lt;h3&gt;The easiest way to install Bruce is using our official Web Flasher!&lt;/h3&gt; &#xA;&lt;h3&gt;Check out: &lt;a href=&#34;https://bruce.computer/flasher&#34;&gt;https://bruce.computer/flasher&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, you can download the latest binary from releases or actions and flash locally using esptool.py&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;esptool.py --port /dev/ttyACM0 write_flash 0x00000 Bruce-&amp;lt;device&amp;gt;.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;For m5stack devices&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you already use M5Launcher to manage your m5stack device, you can install it with OTA&lt;/p&gt; &#xA;&lt;p&gt;Or you can burn it directly from the &lt;a href=&#34;https://docs.m5stack.com/en/download&#34;&gt;m5burner tool&lt;/a&gt;, just search for &#39;Bruce&#39; (My official builds will be uploaded by &#34;owner&#34; and have photos.) on the device category you want to and click on burn&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚å®&lt;/span&gt; Discord Server&lt;/h2&gt; &#xA;&lt;p&gt;Contact us in our &lt;a href=&#34;https://discord.gg/WJ9XF9czVT&#34;&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìë&lt;/span&gt; Wiki&lt;/h2&gt; &#xA;&lt;p&gt;For more information on each function supported by Bruce, &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki&#34;&gt;read our wiki here&lt;/a&gt;. Also, &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FAQ&#34;&gt;read our FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üíª&lt;/span&gt; List of Features&lt;/h2&gt; &#xA;&lt;h3&gt;WiFi&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Connect to WiFi&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WiFi AP&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Disconnect WiFi&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#wifi-atks&#34;&gt;WiFi Atks&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#beacon-spam&#34;&gt;Beacon Spam&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#target-atk&#34;&gt;Target Atk&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Information&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Target Deauth&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; EvilPortal + Deauth&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Deauth Flood (More than one target)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Wardriving&#34;&gt;Wardriving&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#telnet&#34;&gt;TelNet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#ssh&#34;&gt;SSH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#raw-sniffer&#34;&gt;RAW Sniffer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#dpwo-esp32&#34;&gt;DPWO-ESP32&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#evil-portal&#34;&gt;Evil Portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#evil-portal&#34;&gt;Scan Hosts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/WiFi#wireguard-tunneling&#34;&gt;Wireguard Tunneling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pwnagotchi &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pwnagotchi friend&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pwngrid spam faces &amp;amp; names &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; [Optional] DoScreen a very long name and face&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; [Optional] Flood uniq peer identifiers&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Mousejack&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;BLE&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/BLE#ble-scan&#34;&gt;BLE Scan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bad BLE - Run Ducky scripts, similar t&lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#badusb&#34;&gt;BadUsb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BLE Keyboard - Cardputer Only (for now)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/BLE#nrf24-jammer&#34;&gt;NRF24 Jammer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; iOS Spam&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Windows Spam&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Samsung Spam&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Android Spam&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Spam All&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RF&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Scan/Copy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/RF#replay-payloads-like-flipper&#34;&gt;Custom SubGhz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Spectrum&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Jammer Full (sends a full squared wave into output)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Jammer Intermittent (sends PWM signal into output)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Config &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF TX Pin&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF RX Pin&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF Module &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF433 T/R M5Stack&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/CC1101&#34;&gt;CC1101 (Sub-Ghz)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RF Frequency&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Replay&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RFID&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Read tag&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Read 125kHz&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Clone tag&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Write NDEF records&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chameleon&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Write data&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Erase data&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Save file&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Load file&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Config &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/RFID#supported-modules&#34;&gt;RFID Module&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; PN532&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Emulate tag&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IR&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; TV-B-Gone&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; IR Receiver&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/IR#replay-payloads-like-flipper&#34;&gt;Custom IR (NEC, NEC42, NECExt, SIRC, SIRC15, SIRC20, Samsung32, RC5, RC5X, RC6)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Config &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ir TX Pin&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ir RX Pin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;FM&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#play_or_pause_button-broadcast-standard&#34;&gt;Broadcast standard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#no_entry_sign-broadcast-rerserved&#34;&gt;Broadcast reserved&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#stop_button-broadcast-stop&#34;&gt;Broadcast stop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#ocean-fm-spectrum&#34;&gt;FM Spectrum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#car-hijack-ta&#34;&gt;Hijack Traffic Announcements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/FM#bookmark_tabs-config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NRF24&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NRF24 Jammer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2.4G Spectrum&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Scripts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Interpreter&#34;&gt;JavaScript Interpreter&lt;/a&gt; &lt;a href=&#34;https://github.com/justinknight93/Doolittle&#34;&gt;Credits to justinknight93&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Others&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mic Spectrum&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; QRCodes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; PIX (Brazil bank transfer system)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#sd-card-mngr&#34;&gt;SD Card Mngr&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; View image (jpg)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File Info&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Wardriving#how-to-upload&#34;&gt;Wigle Upload&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Play Audio&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; View File&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#spiffs-mngr&#34;&gt;SPIFFS Mngr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#webui&#34;&gt;WebUI&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Server Structure&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Html&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SDCard Mngr&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Spiffs Mngr&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Megalodon&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#badusb&#34;&gt;BADUsb (New features, SPIFFS and SDCard)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; USB Keyboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#openhaystack&#34;&gt;Openhaystack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#led-control&#34;&gt;LED Control&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Clock&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RTC Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NTP time adjust&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Manual adjust&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Connect (ESPNOW)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Send File&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Receive File&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Brightness&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dim Time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Orientation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; UI Color&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Clock&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Sleep&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Restart&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Specific functions per Device, the ones not mentioned here are available to all.&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Device&lt;/th&gt; &#xA;   &lt;th&gt;CC1101&lt;/th&gt; &#xA;   &lt;th&gt;NRF24&lt;/th&gt; &#xA;   &lt;th&gt;Interpreter&lt;/th&gt; &#xA;   &lt;th&gt;FMRadio&lt;/th&gt; &#xA;   &lt;th&gt;PN532&lt;/th&gt; &#xA;   &lt;th&gt;Mic_SPM1423&lt;/th&gt; &#xA;   &lt;th&gt;BadUSB&lt;/th&gt; &#xA;   &lt;th&gt;RGB Led&lt;/th&gt; &#xA;   &lt;th&gt;Speaker&lt;/th&gt; &#xA;   &lt;th&gt;LITE_MODE&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cardputer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NS4168&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StickCPlus2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#badusb&#34;&gt;here&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StickCPlus 1.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;a href=&#34;https://github.com/pr3y/Bruce/wiki/Others#badusb&#34;&gt;here&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Core&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Core2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CoreSe/SE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CYD-2432S028&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üÜó&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;LITE_MODE&lt;/em&gt;: TelNet, SSH, DPWO, WireGuard, BLEBacon, BLEScan and OpenHaystack are NOT available for M5Launcher Compatibility&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ú®&lt;/span&gt; Why and how does it look?&lt;/h2&gt; &#xA;&lt;p&gt;Bruce stems from a keen observation within the community focused on devices like Flipper Zero. While these devices offered a glimpse into the world of offensive security, there was a palpable sense that something more could be achieved without being that overpriced, particularly with the robust and modular hardware ecosystem provided by m5stack products.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/pic1.png&#34; alt=&#34;Bruce Main Menu&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/core.png&#34; alt=&#34;Bruce on M5Core&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/stick.png&#34; alt=&#34;Bruce on Stick&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/cyd.png&#34; alt=&#34;Bruce on CYD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Other media can be &lt;a href=&#34;https://raw.githubusercontent.com/pr3y/Bruce/main/media/&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üëè&lt;/span&gt; Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bmorcelli&#34;&gt;@bmorcelli&lt;/a&gt; for new core and a bunch of new features, also porting to many devices!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IncursioHack&#34;&gt;@IncursioHack&lt;/a&gt; for adding RF and RFID modules features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Luidiblu&#34;&gt;@Luidiblu&lt;/a&gt; for logo and UI design assistance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eadmaster&#34;&gt;@eadmaster&lt;/a&gt; for adding a lot of features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rennancockles&#34;&gt;@rennancockles&lt;/a&gt; for a lot of RFID code, refactoring and others features.&lt;/li&gt; &#xA; &lt;li&gt;Everyone who contributed in some way to the project, thanks &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöß&lt;/span&gt; Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Bruce is a tool for cyber offensive and red team operations, distributed under the terms of the Affero General Public License (AGPL). It is intended for legal and authorized security testing purposes only. Use of this software for any malicious or unauthorized activities is strictly prohibited. By downloading, installing, or using Bruce, you agree to comply with all applicable laws and regulations. This software is provided free of charge, and we do not accept payments for copies or modifications. The developers of Bruce assume no liability for any misuse of the software. Use at your own risk.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>remzi-arpacidusseau/ostep-projects</title>
    <updated>2024-10-13T01:42:02Z</updated>
    <id>tag:github.com,2024-10-13:/remzi-arpacidusseau/ostep-projects</id>
    <link href="https://github.com/remzi-arpacidusseau/ostep-projects" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Projects for an undergraduate OS course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Projects for an Operating Systems Class&lt;/h1&gt; &#xA;&lt;p&gt;This repository holds a number of projects that can be used in an operating systems class aimed at upper-level undergraduates and (in some cases) beginning graduate students. They are based on years of teaching such a course at the University of Wisconsin-Madison.&lt;/p&gt; &#xA;&lt;p&gt;Also (increasingly) available are some tests to see if your code works; eventually every project will have a set of tests available. The testing framework that is currently available is found &lt;a href=&#34;https://github.com/remzi-arpacidusseau/ostep-projects/tree/master/tester&#34;&gt;here&lt;/a&gt;. A specific testing script, found in each project directory, can be used to run the tests against your code.&lt;/p&gt; &#xA;&lt;p&gt;For example, in the initial utilities project, the relatively simple &lt;code&gt;wcat&lt;/code&gt; program that you create can be tested by running the &lt;code&gt;test-wcat.sh&lt;/code&gt; script. This could be accomplished by the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;prompt&amp;gt; git clone https://github.com/remzi-arpacidusseau/ostep-projects&#xA;prompt&amp;gt; cd ostep-projects/initial-utilities/wcat&#xA;prompt&amp;gt; emacs -nw wcat.c &#xA;prompt&amp;gt; gcc -o wcat wcat.c -Wall &#xA;prompt&amp;gt; ./test-wcat.sh&#xA;test 1: passed&#xA;test 2: passed&#xA;test 3: passed&#xA;test 4: passed&#xA;test 5: passed&#xA;test 6: passed&#xA;test 7: passed&#xA;prompt&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, this sequence assumes (a) you use &lt;code&gt;emacs&lt;/code&gt; (you should!), (b) your code is written in one shot (impressive!), and (c) that it works perfectly (well done!). Even for simple assignments, it is likely that the compile/run/debug cycle might take a few iterations.&lt;/p&gt; &#xA;&lt;h2&gt;C/Linux Projects&lt;/h2&gt; &#xA;&lt;h3&gt;Initial Projects&lt;/h3&gt; &#xA;&lt;p&gt;These projects are meant to get you warmed up with programming in the C/UNIX environment. None are meant to be particularly hard, but should be enough so that you can get more comfortable programming.&lt;/p&gt; &#xA;&lt;p&gt;Realize the best thing you can do to learn to program in any environment is to program &lt;strong&gt;a lot&lt;/strong&gt;. These small projects are only the beginning of that journey; you&#39;ll have to do more on your own to truly become proficient.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/initial-utilities&#34;&gt;Unix Utilities&lt;/a&gt; (cat, grep, zip/unzip)&lt;/li&gt; &#xA; &lt;li&gt;Sort (text-based)&lt;/li&gt; &#xA; &lt;li&gt;Sort (binary)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/initial-reverse&#34;&gt;Reverse&lt;/a&gt; (very simple reverse program)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Processes and Scheduling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/processes-shell&#34;&gt;Shell&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Virtual Memory&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Memory Allocator&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Concurrency&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/concurrency-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/concurrency-pzip&#34;&gt;Parallel Zip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/concurrency-mapreduce&#34;&gt;MapReduce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Web Crawler&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;File Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/filesystems-checker&#34;&gt;File System Checker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Distributed Systems&lt;/h3&gt; &#xA;&lt;h2&gt;Kernel Hacking Projects (xv6)&lt;/h2&gt; &#xA;&lt;p&gt;These projects all are to be done inside the &lt;a href=&#34;https://pdos.csail.mit.edu/6.828/2017/xv6.html&#34;&gt;xv6&lt;/a&gt; kernel based on an early version of Unix and developed at MIT. Unlike the C/Linux projects, these give you direct experience inside a real, working operating system (albeit a simple one).&lt;/p&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/INSTALL-xv6.md&#34;&gt;install notes&lt;/a&gt; to see how to download the latest xv6 and install the tools you&#39;ll need.&lt;/p&gt; &#xA;&lt;h3&gt;Initial Projects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/initial-xv6&#34;&gt;Intro To xv6&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Processes and Scheduling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/scheduling-xv6-lottery&#34;&gt;Scheduling (Lottery)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Virtual Memory&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/vm-xv6-intro&#34;&gt;Virtual Memory (Null Pointer and Read-Only Regions)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Concurrency&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-projects/master/concurrency-xv6-threads&#34;&gt;Kernel Threads (Basic Implementation)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;File Systems&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>fwupd/fwupd</title>
    <updated>2024-10-13T01:42:02Z</updated>
    <id>tag:github.com,2024-10-13:/fwupd/fwupd</id>
    <link href="https://github.com/fwupd/fwupd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A system daemon to allow session software to update firmware&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fwupd&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fwupd/fwupd/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/fwupd/fwupd/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fwupd/fwupd/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/fwupd/fwupd/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/10744&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/10744/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:fwupd&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/fwupd.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/fwupd/fwupd/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/fwupd/fwupd/tree/main.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/fwupd/fwupd&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/fwupd/fwupd/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://securityscorecards.dev/viewer/?uri=github.com/fwupd/fwupd&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/fwupd/fwupd/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bestpractices.dev/projects/8751&#34;&gt;&lt;img src=&#34;https://www.bestpractices.dev/projects/8751/badge&#34; alt=&#34;OpenSSF Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project aims to make updating firmware on Linux automatic, safe, and reliable.&lt;/p&gt; &#xA;&lt;p&gt;Additional information is available &lt;a href=&#34;https://fwupd.org/&#34;&gt;at the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Where to get help?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub issues &amp;amp; discussions in &lt;a href=&#34;https://github.com/fwupd/fwupd&#34;&gt;this repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Libera IRC channel &lt;code&gt;#fwupd&lt;/code&gt;. You can join through Libera&#39;s &lt;a href=&#34;https://libera.chat/&#34;&gt;IRC&lt;/a&gt; or via the IRC bridge on &lt;a href=&#34;https://matrix.to/#/%23fwupd:libera.chat&#34;&gt;Matrix&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/fwupd/fwupd/main/docs/building.md&#34;&gt;Building and Debugging&lt;/a&gt; for how to build the fwupd development environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In most cases, end users should not compile fwupd from scratch; it&#39;s a complicated project with dozens of dependencies (and as many configuration options) and there&#39;s just too many things that can go wrong.&lt;/p&gt; &#xA;&lt;p&gt;Users should just have fwupd installed and updated by their distro, managed and tested by the package maintainer. The distribution will have also done some testing with how fwupd interacts with other software on your system, for instance using GNOME Software.&lt;/p&gt; &#xA;&lt;p&gt;Installing fwupd using &lt;a href=&#34;https://github.com/fwupd/fwupd/wiki/fwupd-snap&#34;&gt;Snap&lt;/a&gt; or using &lt;a href=&#34;https://github.com/fwupd/fwupd/wiki/fwupd-flatpak&#34;&gt;Flatpak&lt;/a&gt; might be useful to update a specific device on the command line that needs a bleeding edge fwupd version, but it should not be considered as a replacement to the distro-provided system version.&lt;/p&gt; &#xA;&lt;h3&gt;Using Tartan&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/tartan/tartan/-/wikis/home&#34;&gt;Tartan&lt;/a&gt; is a LLVM static analysis plugin built to analyze GLib code. It can be installed and then run using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build-tartan&#xA;CC=clang-17 meson ../&#xA;SCANBUILD=../contrib/tartan.sh ninja scan-build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;LVFS&lt;/h2&gt; &#xA;&lt;p&gt;This project is configured by default to download firmware from the &lt;a href=&#34;https://fwupd.org/&#34;&gt;Linux Vendor Firmware Service (LVFS)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This service is available to all OEMs and firmware creators who would like to make their firmware available to Linux users.&lt;/p&gt; &#xA;&lt;p&gt;You can find more information about the technical details of creating a firmware capsule in the hardware vendors section of the &lt;a href=&#34;https://fwupd.org&#34;&gt;fwupd website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Basic usage flow (command line)&lt;/h2&gt; &#xA;&lt;p&gt;If you have a device with firmware supported by fwupd, this is how you can check for updates and apply them using fwupd&#39;s command line tools.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;# fwupdmgr get-devices&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will display all devices detected by fwupd.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;# fwupdmgr refresh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will download the latest metadata from LVFS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;# fwupdmgr get-updates&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If updates are available for any devices on the system, they&#39;ll be displayed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;# fwupdmgr update&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will download and apply all updates for your system.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Updates that can be applied live will be done immediately.&lt;/li&gt; &#xA; &lt;li&gt;Updates that run at bootup will be staged for the next reboot.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find more information about the update workflow in the end users section of the &lt;a href=&#34;https://fwupd.org&#34;&gt;fwupd website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Passim&lt;/h2&gt; &#xA;&lt;p&gt;If the &lt;a href=&#34;https://github.com/hughsie/passim/raw/main/README.md&#34;&gt;Passim&lt;/a&gt; project is also installed and enabled, fwupd will re-publish the downloaded metadata file to be served on &lt;code&gt;0.0.0.0:27500&lt;/code&gt; by default.&lt;/p&gt; &#xA;&lt;p&gt;Other clients on the same network can make use of this via mDNS/LLMNR to reduce network bandwidth to configured remotes.&lt;/p&gt; &#xA;&lt;p&gt;To disable this functionality either set &lt;code&gt;P2pPolicy=none&lt;/code&gt; in &lt;code&gt;/etc/fwupd/daemon.conf&lt;/code&gt;, uninstall the passim package or use &lt;code&gt;systemctl mask passim.service&lt;/code&gt; on the terminal.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting status&lt;/h2&gt; &#xA;&lt;p&gt;fwupd will encourage users to report both successful and failed updates back to LVFS. This is an optional feature, but encouraged as it provides valuable feedback to LVFS administrators and OEM developers regarding firmware update process efficacy.&lt;/p&gt; &#xA;&lt;p&gt;The privacy policy regarding this data can be viewed on the &lt;a href=&#34;https://lvfs.readthedocs.io/en/latest/privacy.html&#34;&gt;lvfs readthedocs site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To report the status of an update, run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;# fwupdmgr report-history&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Only updates that were distributed from the LVFS will be reported to the LVFS.&lt;/p&gt; &#xA;&lt;h2&gt;Enterprise use&lt;/h2&gt; &#xA;&lt;p&gt;The flow of updates can be controlled in the enterprise using the &#34;approved updates&#34; feature. This allows the domain administrator to filter the possible updates from a central server (e.g. the LVFS, or a mirror) to only firmware that have been tested specifically in your organization.&lt;/p&gt; &#xA;&lt;p&gt;The list of approved updates can be enabled by adding &lt;code&gt;ApprovalRequired=true&lt;/code&gt; to the remote configuration file, e.g. &lt;code&gt;lvfs.conf&lt;/code&gt;. Once enabled, the list of approved updates can be set in &lt;code&gt;fwupd.conf&lt;/code&gt; using a comma-delimited list.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ApprovedFirmware=foo,bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where &lt;code&gt;foo,bar&lt;/code&gt; refers to the container checksums that would correspond to two updates in the metadata file.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, the list of approved firmware can be supplemented using &lt;code&gt;fwupdmgr set-approved-firmware baz&lt;/code&gt; or using the D-Bus interface.&lt;/p&gt; &#xA;&lt;h2&gt;Other frontends&lt;/h2&gt; &#xA;&lt;p&gt;fwupdmgr is a command line client, but various additional graphical frontends are enumerated in the &lt;a href=&#34;https://fwupd.github.io/libfwupdplugin/fwupdmgr.html#description&#34;&gt;fwupdmgr man page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;SAST Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scan.coverity.com/&#34;&gt;Coverity&lt;/a&gt; - static analyzer for Java, C/C++, C#, JavaScript, Ruby, and Python code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pvs-studio.com/en/pvs-studio/?utm_source=website&amp;amp;utm_medium=github&amp;amp;utm_campaign=open_source&#34;&gt;PVS-Studio&lt;/a&gt; - static analyzer for C, C++, C#, and Java code.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>