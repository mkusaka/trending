<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-23T01:35:00Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PabloMK7/ArticBaseServer</title>
    <updated>2024-05-23T01:35:00Z</updated>
    <id>tag:github.com,2024-05-23:/PabloMK7/ArticBaseServer</id>
    <link href="https://github.com/PabloMK7/ArticBaseServer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;3DS Game Broadcaster&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Artic Base Server&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;180&#34; height=&#34;180&#34; src=&#34;https://github.com/PabloMK7/ArticBaseServer/raw/main/images/logo.png?raw=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: Artic Base Server was released very recently and may have unexpected bugs. Please back up the save file of the game you want to broadcast just in case!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Artic Base is a tool for broadcasting games from your 3DS to a compatible emulator. This allows playing your physical or digital games on an emulator without having to dump them. You can find a demo &lt;a href=&#34;https://www.youtube.com/watch?v=noDz-FnOd2M&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Artic Base Server is a Luma3DS 3GX plugin that allows using the Artic Base protocol to broadcast your games to a compaible emulator (for example: &lt;a href=&#34;https://github.com/PabloMK7/citra&#34;&gt;PabloMK7/citra&lt;/a&gt;). This works by forwarding the filesystem requests from the emulator to the console.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play games from your console without having to dump them.&lt;/li&gt; &#xA; &lt;li&gt;Sync the savedata/extdata of the broadcasted game during the play session.&lt;/li&gt; &#xA; &lt;li&gt;Load shared ext data and NCCH archives from your console.&lt;/li&gt; &#xA; &lt;li&gt;Remove the need to dump AES keys, as the decryption is done by the console&#39;s OS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advantages over playing on real console&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play your games at higher resolutions.&lt;/li&gt; &#xA; &lt;li&gt;Use external controllers that may better fit your playstyle.&lt;/li&gt; &#xA; &lt;li&gt;Switch between playing on your PC at home and your console on the go.&lt;/li&gt; &#xA; &lt;li&gt;Reduce e-waste by reusing partially broken consoles to broadcast your games to your PC.&lt;/li&gt; &#xA; &lt;li&gt;Allow museums or non-profit game preservation organizations to have a centralised database of preserved games, while using an Artic Base Server + a compatible emulator to do research as needed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantages over game dumps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slower loading times, ranging from 2x to 5x depending on how much data is needed by the game. Thanks to the use of a cache in memory, loading times get better if game resources that were already loaded are requested again.&lt;/li&gt; &#xA; &lt;li&gt;Constant and stable connection is needed with the console running the server so that it&#39;s able to provide the game resources on demand.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the &lt;code&gt;.cia&lt;/code&gt; or &lt;code&gt;.3dsx&lt;/code&gt; file from the &lt;a href=&#34;https://github.com/PabloMK7/ArticBaseServer/releases&#34;&gt;releases page&lt;/a&gt; and install it.&lt;/li&gt; &#xA; &lt;li&gt;Run the Artic Base Server application. Press A to confirm you want to start Artic Base.&lt;/li&gt; &#xA; &lt;li&gt;Select the application you want to broadcast from the Home Menu.&lt;/li&gt; &#xA; &lt;li&gt;On a compatible emulator, select the Artic Base option and enter the IP address displayed on your console.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE: A recent version of Luma3DS (v13.1.1 or newer) is requires to use Artic Base Server. You can get it &lt;a href=&#34;https://github.com/LumaTeam/Luma3DS/releases/latest&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Future Plans&lt;/h2&gt; &#xA;&lt;p&gt;This section lists features that Artic Base Server cannot currently provide. Some of these features may be added in the future.&lt;/p&gt; &#xA;&lt;h3&gt;Things that might be implemented&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play owned DLCs.&lt;/li&gt; &#xA; &lt;li&gt;Use the console as a controller itself.&lt;/li&gt; &#xA; &lt;li&gt;Broadcasting homebrew applications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Things that will never be implemented&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dump games, and any of its assets to persistent storage. This includes caching data between play sessions.&lt;/li&gt; &#xA; &lt;li&gt;Dump any kind of system data, such as keys, archives or console unique files. This includes caching data between play sessions.&lt;/li&gt; &#xA; &lt;li&gt;Using the Home Menu of the console that is running Artic Base Server and switching between games.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2024 PabloMK7&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Artic Base uses icons from &lt;a href=&#34;https://www.flaticon.com&#34;&gt;flaticon&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.flaticon.com/free-icons/igloo&#34; title=&#34;igloo icons&#34;&gt;Igloo icons created by smashingstocks - Flaticon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.flaticon.com/free-icons/parabolic-dishes&#34; title=&#34;parabolic dishes icons&#34;&gt;Parabolic dishes icons created by Souayang - Flaticon&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Artic Base uses text renders from &lt;a href=&#34;https://cooltext.com/&#34;&gt;cooltext&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ithewei/libhv</title>
    <updated>2024-05-23T01:35:00Z</updated>
    <id>tag:github.com,2024-05-23:/ithewei/libhv</id>
    <link href="https://github.com/ithewei/libhv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 比libevent/libuv/asio更易用的网络库。A c/c++ network library for developing TCP/UDP/SSL/HTTP/WebSocket/MQTT client/server.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/README-CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;libhv&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ithewei/libhv/actions/workflows/CI.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/Linux/success/green?icon=github&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/actions/workflows/CI.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/Windows/success/green?icon=github&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/actions/workflows/CI.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/macOS/success/green?icon=github&#34; alt=&#34;macOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/actions/workflows/CI.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/Android/success/green?icon=github&#34; alt=&#34;Android&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/actions/workflows/CI.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/iOS/success/green?icon=github&#34; alt=&#34;iOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/actions/workflows/benchmark.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/ithewei/libhv/workflows/benchmark/badge.svg?branch=master&#34; alt=&#34;benchmark&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/releases&#34;&gt;&lt;img src=&#34;https://badgen.net/github/release/ithewei/libhv?icon=github&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/stargazers&#34;&gt;&lt;img src=&#34;https://badgen.net/github/stars/ithewei/libhv?icon=github&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/forks&#34;&gt;&lt;img src=&#34;https://badgen.net/github/forks/ithewei/libhv?icon=github&#34; alt=&#34;forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/issues&#34;&gt;&lt;img src=&#34;https://badgen.net/github/issues/ithewei/libhv?icon=github&#34; alt=&#34;issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/pulls&#34;&gt;&lt;img src=&#34;https://badgen.net/github/prs/ithewei/libhv?icon=github&#34; alt=&#34;PRs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ithewei/libhv/contributors&#34;&gt;&lt;img src=&#34;https://badgen.net/github/contributors/ithewei/libhv?icon=github&#34; alt=&#34;contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/LICENSE&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/ithewei/libhv?icon=github&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://gitee.com/libhv/libhv&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/mirror/gitee/red&#34; alt=&#34;gitee&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oz123/awesome-c&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/awesome-c/pink?icon=awesome&amp;amp;label&amp;amp;color&#34; alt=&#34;awesome-c&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fffaraz/awesome-cpp&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/awesome-cpp/pink?icon=awesome&amp;amp;label&amp;amp;color&#34; alt=&#34;awesome-cpp&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Like &lt;code&gt;libevent, libev, and libuv&lt;/code&gt;, &lt;code&gt;libhv&lt;/code&gt; provides event-loop with non-blocking IO and timer, but simpler api and richer protocols.&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cross-platform (Linux, Windows, macOS, Android, iOS, BSD, Solaris)&lt;/li&gt; &#xA; &lt;li&gt;High-performance EventLoop (IO, timer, idle, custom, signal)&lt;/li&gt; &#xA; &lt;li&gt;TCP/UDP client/server/proxy&lt;/li&gt; &#xA; &lt;li&gt;TCP supports heartbeat, reconnect, upstream, MultiThread-safe write and close, etc.&lt;/li&gt; &#xA; &lt;li&gt;Built-in common unpacking modes (FixedLength, Delimiter, LengthField)&lt;/li&gt; &#xA; &lt;li&gt;RUDP support: WITH_KCP&lt;/li&gt; &#xA; &lt;li&gt;SSL/TLS support: (via WITH_OPENSSL or WITH_GNUTLS or WITH_MBEDTLS)&lt;/li&gt; &#xA; &lt;li&gt;HTTP client/server (support https http1/x http2 grpc)&lt;/li&gt; &#xA; &lt;li&gt;HTTP supports static service, indexof service, forward/reverse proxy service, sync/async API handler&lt;/li&gt; &#xA; &lt;li&gt;HTTP supports RESTful, router, middleware, keep-alive, chunked, SSE, etc.&lt;/li&gt; &#xA; &lt;li&gt;WebSocket client/server&lt;/li&gt; &#xA; &lt;li&gt;MQTT client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⌛️ Build&lt;/h2&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Makefile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./configure&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or cmake:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir build&#xA;cd build&#xA;cmake ..&#xA;cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or bazel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bazel build libhv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or vcpkg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vcpkg install libhv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or xmake:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;xrepo install libhv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚡️ Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;run &lt;code&gt;./getting_started.sh&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/ithewei/libhv.git&#xA;cd libhv&#xA;./configure&#xA;make&#xA;&#xA;bin/httpd -h&#xA;bin/httpd -d&#xA;#bin/httpd -c etc/httpd.conf -s restart -d&#xA;ps aux | grep httpd&#xA;&#xA;# http file service&#xA;bin/curl -v localhost:8080&#xA;&#xA;# http indexof service&#xA;bin/curl -v localhost:8080/downloads/&#xA;&#xA;# http api service&#xA;bin/curl -v localhost:8080/ping&#xA;bin/curl -v localhost:8080/echo -d &#34;hello,world!&#34;&#xA;bin/curl -v localhost:8080/query?page_no=1\&amp;amp;page_size=10&#xA;bin/curl -v localhost:8080/kv   -H &#34;Content-Type:application/x-www-form-urlencoded&#34; -d &#39;user=admin&amp;amp;pswd=123456&#39;&#xA;bin/curl -v localhost:8080/json -H &#34;Content-Type:application/json&#34; -d &#39;{&#34;user&#34;:&#34;admin&#34;,&#34;pswd&#34;:&#34;123456&#34;}&#39;&#xA;bin/curl -v localhost:8080/form -F &#39;user=admin&#39; -F &#39;pswd=123456&#39;&#xA;bin/curl -v localhost:8080/upload -d &#34;@LICENSE&#34;&#xA;bin/curl -v localhost:8080/upload -F &#34;file=@LICENSE&#34;&#xA;&#xA;bin/curl -v localhost:8080/test -H &#34;Content-Type:application/x-www-form-urlencoded&#34; -d &#39;bool=1&amp;amp;int=123&amp;amp;float=3.14&amp;amp;string=hello&#39;&#xA;bin/curl -v localhost:8080/test -H &#34;Content-Type:application/json&#34; -d &#39;{&#34;bool&#34;:true,&#34;int&#34;:123,&#34;float&#34;:3.14,&#34;string&#34;:&#34;hello&#34;}&#39;&#xA;bin/curl -v localhost:8080/test -F &#39;bool=1&#39; -F &#39;int=123&#39; -F &#39;float=3.14&#39; -F &#39;string=hello&#39;&#xA;# RESTful API: /group/:group_name/user/:user_id&#xA;bin/curl -v -X DELETE localhost:8080/group/test/user/123&#xA;&#xA;# benchmark&#xA;bin/wrk -c 1000 -d 10 -t 4 http://127.0.0.1:8080/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TCP&lt;/h3&gt; &#xA;&lt;h4&gt;tcp server&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;c version&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/tcp_echo_server.c&#34;&gt;examples/tcp_echo_server.c&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;c++ version&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/TcpServer_test.cpp&#34;&gt;evpp/TcpServer_test.cpp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;TcpServer.h&#34;&#xA;using namespace hv;&#xA;&#xA;int main() {&#xA;    int port = 1234;&#xA;    TcpServer srv;&#xA;    int listenfd = srv.createsocket(port);&#xA;    if (listenfd &amp;lt; 0) {&#xA;        return -1;&#xA;    }&#xA;    printf(&#34;server listen on port %d, listenfd=%d ...\n&#34;, port, listenfd);&#xA;    srv.onConnection = [](const SocketChannelPtr&amp;amp; channel) {&#xA;        std::string peeraddr = channel-&amp;gt;peeraddr();&#xA;        if (channel-&amp;gt;isConnected()) {&#xA;            printf(&#34;%s connected! connfd=%d\n&#34;, peeraddr.c_str(), channel-&amp;gt;fd());&#xA;        } else {&#xA;            printf(&#34;%s disconnected! connfd=%d\n&#34;, peeraddr.c_str(), channel-&amp;gt;fd());&#xA;        }&#xA;    };&#xA;    srv.onMessage = [](const SocketChannelPtr&amp;amp; channel, Buffer* buf) {&#xA;        // echo&#xA;        channel-&amp;gt;write(buf);&#xA;    };&#xA;    srv.setThreadNum(4);&#xA;    srv.start();&#xA;&#xA;    // press Enter to stop&#xA;    while (getchar() != &#39;\n&#39;);&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;tcp client&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;c version&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/tcp_client_test.c&#34;&gt;examples/tcp_client_test.c&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;c++ version&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/TcpClient_test.cpp&#34;&gt;evpp/TcpClient_test.cpp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;iostream&amp;gt;&#xA;#include &#34;TcpClient.h&#34;&#xA;using namespace hv;&#xA;&#xA;int main() {&#xA;    int port = 1234;&#xA;    TcpClient cli;&#xA;    int connfd = cli.createsocket(port);&#xA;    if (connfd &amp;lt; 0) {&#xA;        return -1;&#xA;    }&#xA;    cli.onConnection = [](const SocketChannelPtr&amp;amp; channel) {&#xA;        std::string peeraddr = channel-&amp;gt;peeraddr();&#xA;        if (channel-&amp;gt;isConnected()) {&#xA;            printf(&#34;connected to %s! connfd=%d\n&#34;, peeraddr.c_str(), channel-&amp;gt;fd());&#xA;        } else {&#xA;            printf(&#34;disconnected to %s! connfd=%d\n&#34;, peeraddr.c_str(), channel-&amp;gt;fd());&#xA;        }&#xA;    };&#xA;    cli.onMessage = [](const SocketChannelPtr&amp;amp; channel, Buffer* buf) {&#xA;        printf(&#34;&amp;lt; %.*s\n&#34;, (int)buf-&amp;gt;size(), (char*)buf-&amp;gt;data());&#xA;    };&#xA;    cli.start();&#xA;&#xA;    std::string str;&#xA;    while (std::getline(std::cin, str)) {&#xA;        if (str == &#34;close&#34;) {&#xA;            cli.closesocket();&#xA;        } else if (str == &#34;start&#34;) {&#xA;            cli.start();&#xA;        } else if (str == &#34;stop&#34;) {&#xA;            cli.stop();&#xA;            break;&#xA;        } else {&#xA;            if (!cli.isConnected()) break;&#xA;            cli.send(str);&#xA;        }&#xA;    }&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;HTTP&lt;/h3&gt; &#xA;&lt;h4&gt;http server&lt;/h4&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/http_server_test.cpp&#34;&gt;examples/http_server_test.cpp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;golang gin style&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;HttpServer.h&#34;&#xA;using namespace hv;&#xA;&#xA;int main() {&#xA;    HttpService router;&#xA;    router.GET(&#34;/ping&#34;, [](HttpRequest* req, HttpResponse* resp) {&#xA;        return resp-&amp;gt;String(&#34;pong&#34;);&#xA;    });&#xA;&#xA;    router.GET(&#34;/data&#34;, [](HttpRequest* req, HttpResponse* resp) {&#xA;        static char data[] = &#34;0123456789&#34;;&#xA;        return resp-&amp;gt;Data(data, 10);&#xA;    });&#xA;&#xA;    router.GET(&#34;/paths&#34;, [&amp;amp;router](HttpRequest* req, HttpResponse* resp) {&#xA;        return resp-&amp;gt;Json(router.Paths());&#xA;    });&#xA;&#xA;    router.GET(&#34;/get&#34;, [](HttpRequest* req, HttpResponse* resp) {&#xA;        resp-&amp;gt;json[&#34;origin&#34;] = req-&amp;gt;client_addr.ip;&#xA;        resp-&amp;gt;json[&#34;url&#34;] = req-&amp;gt;url;&#xA;        resp-&amp;gt;json[&#34;args&#34;] = req-&amp;gt;query_params;&#xA;        resp-&amp;gt;json[&#34;headers&#34;] = req-&amp;gt;headers;&#xA;        return 200;&#xA;    });&#xA;&#xA;    router.POST(&#34;/echo&#34;, [](const HttpContextPtr&amp;amp; ctx) {&#xA;        return ctx-&amp;gt;send(ctx-&amp;gt;body(), ctx-&amp;gt;type());&#xA;    });&#xA;&#xA;    HttpServer server(&amp;amp;router);&#xA;    server.setPort(8080);&#xA;    server.setThreadNum(4);&#xA;    server.run();&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;http client&lt;/h4&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/http_client_test.cpp&#34;&gt;examples/http_client_test.cpp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;python requests style&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;requests.h&#34;&#xA;&#xA;int main() {&#xA;    auto resp = requests::get(&#34;http://www.example.com&#34;);&#xA;    if (resp == NULL) {&#xA;        printf(&#34;request failed!\n&#34;);&#xA;    } else {&#xA;        printf(&#34;%s\n&#34;, resp-&amp;gt;body.c_str());&#xA;    }&#xA;&#xA;    resp = requests::post(&#34;127.0.0.1:8080/echo&#34;, &#34;hello,world!&#34;);&#xA;    if (resp == NULL) {&#xA;        printf(&#34;request failed!\n&#34;);&#xA;    } else {&#xA;        printf(&#34;%s\n&#34;, resp-&amp;gt;body.c_str());&#xA;    }&#xA;&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;WebSocket&lt;/h3&gt; &#xA;&lt;h4&gt;WebSocket server&lt;/h4&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/websocket_server_test.cpp&#34;&gt;examples/websocket_server_test.cpp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;WebSocketServer.h&#34;&#xA;using namespace hv;&#xA;&#xA;int main(int argc, char** argv) {&#xA;    WebSocketService ws;&#xA;    ws.onopen = [](const WebSocketChannelPtr&amp;amp; channel, const HttpRequestPtr&amp;amp; req) {&#xA;        printf(&#34;onopen: GET %s\n&#34;, req-&amp;gt;Path().c_str());&#xA;    };&#xA;    ws.onmessage = [](const WebSocketChannelPtr&amp;amp; channel, const std::string&amp;amp; msg) {&#xA;        printf(&#34;onmessage: %.*s\n&#34;, (int)msg.size(), msg.data());&#xA;    };&#xA;    ws.onclose = [](const WebSocketChannelPtr&amp;amp; channel) {&#xA;        printf(&#34;onclose\n&#34;);&#xA;    };&#xA;&#xA;    WebSocketServer server(&amp;amp;ws);&#xA;    server.setPort(9999);&#xA;    server.setThreadNum(4);&#xA;    server.run();&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;WebSocket client&lt;/h4&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/websocket_client_test.cpp&#34;&gt;examples/websocket_client_test.cpp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;WebSocketClient.h&#34;&#xA;using namespace hv;&#xA;&#xA;int main(int argc, char** argv) {&#xA;    WebSocketClient ws;&#xA;    ws.onopen = []() {&#xA;        printf(&#34;onopen\n&#34;);&#xA;    };&#xA;    ws.onmessage = [](const std::string&amp;amp; msg) {&#xA;        printf(&#34;onmessage: %.*s\n&#34;, (int)msg.size(), msg.data());&#xA;    };&#xA;    ws.onclose = []() {&#xA;        printf(&#34;onclose\n&#34;);&#xA;    };&#xA;&#xA;    // reconnect: 1,2,4,8,10,10,10...&#xA;    reconn_setting_t reconn;&#xA;    reconn_setting_init(&amp;amp;reconn);&#xA;    reconn.min_delay = 1000;&#xA;    reconn.max_delay = 10000;&#xA;    reconn.delay_policy = 2;&#xA;    ws.setReconnect(&amp;amp;reconn);&#xA;&#xA;    ws.open(&#34;ws://127.0.0.1:9999/test&#34;);&#xA;&#xA;    std::string str;&#xA;    while (std::getline(std::cin, str)) {&#xA;        if (!ws.isConnected()) break;&#xA;        if (str == &#34;quit&#34;) {&#xA;            ws.close();&#xA;            break;&#xA;        }&#xA;        ws.send(str);&#xA;    }&#xA;&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🍭 More examples&lt;/h2&gt; &#xA;&lt;h3&gt;c version&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/hloop_test.c&#34;&gt;examples/hloop_test.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/htimer_test.c&#34;&gt;examples/htimer_test.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/pipe_test.c&#34;&gt;examples/pipe_test.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/tcp_echo_server.c&#34;&gt;examples/tcp_echo_server.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/tcp_chat_server.c&#34;&gt;examples/tcp_chat_server.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/tcp_proxy_server.c&#34;&gt;examples/tcp_proxy_server.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/udp_echo_server.c&#34;&gt;examples/udp_echo_server.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/udp_proxy_server.c&#34;&gt;examples/udp_proxy_server.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/socks5_proxy_server.c&#34;&gt;examples/socks5_proxy_server.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/tinyhttpd.c&#34;&gt;examples/tinyhttpd.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/tinyproxyd.c&#34;&gt;examples/tinyproxyd.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/jsonrpc&#34;&gt;examples/jsonrpc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/mqtt&#34;&gt;examples/mqtt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/multi-thread/multi-acceptor-processes.c&#34;&gt;examples/multi-thread/multi-acceptor-processes.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/multi-thread/multi-acceptor-threads.c&#34;&gt;examples/multi-thread/multi-acceptor-threads.c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/multi-thread/one-acceptor-multi-workers.c&#34;&gt;examples/multi-thread/one-acceptor-multi-workers.c&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;c++ version&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/EventLoop_test.cpp&#34;&gt;evpp/EventLoop_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/EventLoopThread_test.cpp&#34;&gt;evpp/EventLoopThread_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/EventLoopThreadPool_test.cpp&#34;&gt;evpp/EventLoopThreadPool_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/TimerThread_test.cpp&#34;&gt;evpp/TimerThread_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/TcpServer_test.cpp&#34;&gt;evpp/TcpServer_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/TcpClient_test.cpp&#34;&gt;evpp/TcpClient_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/UdpServer_test.cpp&#34;&gt;evpp/UdpServer_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/evpp/UdpClient_test.cpp&#34;&gt;evpp/UdpClient_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/http_server_test.cpp&#34;&gt;examples/http_server_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/http_client_test.cpp&#34;&gt;examples/http_client_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/websocket_server_test.cpp&#34;&gt;examples/websocket_server_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/websocket_client_test.cpp&#34;&gt;examples/websocket_client_test.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/protorpc&#34;&gt;examples/protorpc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hv-projects/QtDemo&#34;&gt;hv-projects/QtDemo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;simulate well-known command line tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/nc.c&#34;&gt;examples/nc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/nmap&#34;&gt;examples/nmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/httpd&#34;&gt;examples/httpd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/wrk.cpp&#34;&gt;examples/wrk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/curl.cpp&#34;&gt;examples/curl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/wget.cpp&#34;&gt;examples/wget&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/consul&#34;&gt;examples/consul&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/examples/kcptun&#34;&gt;examples/kcptun&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🥇 Benchmark&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;pingpong echo-servers&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd echo-servers&#xA;./build.sh&#xA;./benchmark.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;throughput&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;libevent running on port 2001&#xA;libev running on port 2002&#xA;libuv running on port 2003&#xA;libhv running on port 2004&#xA;asio running on port 2005&#xA;poco running on port 2006&#xA;&#xA;==============2001=====================================&#xA;[127.0.0.1:2001] 4 threads 1000 connections run 10s&#xA;total readcount=1616761 readbytes=1655563264&#xA;throughput = 157 MB/s&#xA;&#xA;==============2002=====================================&#xA;[127.0.0.1:2002] 4 threads 1000 connections run 10s&#xA;total readcount=2153171 readbytes=2204847104&#xA;throughput = 210 MB/s&#xA;&#xA;==============2003=====================================&#xA;[127.0.0.1:2003] 4 threads 1000 connections run 10s&#xA;total readcount=1599727 readbytes=1638120448&#xA;throughput = 156 MB/s&#xA;&#xA;==============2004=====================================&#xA;[127.0.0.1:2004] 4 threads 1000 connections run 10s&#xA;total readcount=2202271 readbytes=2255125504&#xA;throughput = 215 MB/s&#xA;&#xA;==============2005=====================================&#xA;[127.0.0.1:2005] 4 threads 1000 connections run 10s&#xA;total readcount=1354230 readbytes=1386731520&#xA;throughput = 132 MB/s&#xA;&#xA;==============2006=====================================&#xA;[127.0.0.1:2006] 4 threads 1000 connections run 10s&#xA;total readcount=1699652 readbytes=1740443648&#xA;throughput = 165 MB/s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;iperf tcp_proxy_server&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# sudo apt install iperf&#xA;iperf -s -p 5001 &amp;gt; /dev/null &amp;amp;&#xA;bin/tcp_proxy_server 1212 127.0.0.1:5001 &amp;amp;&#xA;iperf -c 127.0.0.1 -p 5001 -l 8K&#xA;iperf -c 127.0.0.1 -p 1212 -l 8K&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bandwidth&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;------------------------------------------------------------&#xA;[  3] local 127.0.0.1 port 52560 connected with 127.0.0.1 port 5001&#xA;[ ID] Interval       Transfer     Bandwidth&#xA;[  3]  0.0-10.0 sec  20.8 GBytes  17.9 Gbits/sec&#xA;&#xA;------------------------------------------------------------&#xA;[  3] local 127.0.0.1 port 48142 connected with 127.0.0.1 port 1212&#xA;[ ID] Interval       Transfer     Bandwidth&#xA;[  3]  0.0-10.0 sec  11.9 GBytes  10.2 Gbits/sec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;webbench&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# sudo apt install wrk&#xA;wrk -c 100 -t 4 -d 10s http://127.0.0.1:8080/&#xA;&#xA;# sudo apt install apache2-utils&#xA;ab -c 100 -n 100000 http://127.0.0.1:8080/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;libhv(port:8080) vs nginx(port:80)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ithewei/libhv/master/html/downloads/libhv-vs-nginx.png&#34; alt=&#34;libhv-vs-nginx.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Above test results can be found on &lt;a href=&#34;https://github.com/ithewei/libhv/actions/workflows/benchmark.yml&#34;&gt;Github Actions&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zeldaret/mm</title>
    <updated>2024-05-23T01:35:00Z</updated>
    <id>tag:github.com,2024-05-23:/zeldaret/mm</id>
    <link href="https://github.com/zeldaret/mm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Decompilation of The Legend of Zelda: Majora&#39;s Mask&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Legend of Zelda: Majora&#39;s Mask (US) 1.0&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jenkins.deco.mp/job/MM/job/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?jobUrl=https%3A%2F%2Fjenkins.deco.mp%2Fjob%2FMM%2Fjob%2Fmain&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://zelda64.dev/games/mm&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://zelda64.dev/assets/csv/progress-mm-shield.json&#34; alt=&#34;Decompilation Progress&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zeldaret/mm/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/zeldaret/mm&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.zelda64.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/688807550715560050?color=%237289DA&amp;amp;logo=discord&amp;amp;logoColor=%23FFFFFF&#34; alt=&#34;Discord Channel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;- WARNING! -&#xA;&#xA;This repository is a work in progress, and while it can be used to make certain changes, it&#39;s &#xA;still constantly evolving. If you wish to use it for modding purposes in its current state,&#xA;please be aware that the codebase could drastically change at any time. Also note that some&#xA;parts of the ROM may not be &#39;shiftable&#39; yet, so modifying them could currently be difficult.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is a WIP &lt;strong&gt;decompilation&lt;/strong&gt; of &lt;em&gt;&lt;strong&gt;The Legend of Zelda: Majora&#39;s Mask&lt;/strong&gt;&lt;/em&gt;. The purpose of the project is to recreate a source code base for the game from scratch, using information found inside the game along with static and/or dynamic analysis. &lt;strong&gt;It is not, and will not, produce a PC port.&lt;/strong&gt; For frequently asked questions, you can visit &lt;a href=&#34;https://zelda64.dev/games/mm&#34;&gt;our website&lt;/a&gt;, and for more information you can get in touch with the team on our &lt;a href=&#34;https://discord.zelda64.dev&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The only version currently supported is N64 US, but we intend to eventually support every retail version of the original game (i.e. not versions of MM3D, which is a totally different game).&lt;/p&gt; &#xA;&lt;p&gt;It currently builds the following ROM and compressed ROM:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mm-n64-us.z64 &lt;code&gt;md5: f46493eaa0628827dbd6ad3ecd8d65d6&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;mm-n64-us-compressed.z64 &lt;code&gt;md5: 2a0a8acb61538235bc1094d297fb6556&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;This repo does not include any assets or assembly code necessary for compiling the ROM. A prior copy of the game is required to extract the required assets.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please refer to the following for more information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zelda64.dev/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.zelda64.dev/&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zeldaret/mm/main/docs/CONTRIBUTING.md&#34;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;For Windows 10, install WSL and a distribution by following this &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;Windows Subsystem for Linux Installation Guide&lt;/a&gt;. We recommend using Debian or Ubuntu 20.04 Linux distributions.&lt;/p&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;Preparation is covered in a &lt;a href=&#34;https://raw.githubusercontent.com/zeldaret/mm/main/docs/BUILDING_MACOS.md&#34;&gt;separate document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Preparation is covered in &lt;a href=&#34;https://raw.githubusercontent.com/zeldaret/mm/main/docs/BUILDING_DOCKER.md&#34;&gt;Building Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Linux (Native or under WSL / VM)&lt;/h3&gt; &#xA;&lt;h4&gt;1. Install build dependencies&lt;/h4&gt; &#xA;&lt;p&gt;The build process has the following package requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;make&lt;/li&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;build-essential&lt;/li&gt; &#xA; &lt;li&gt;binutils-mips-linux-gnu&lt;/li&gt; &#xA; &lt;li&gt;python3&lt;/li&gt; &#xA; &lt;li&gt;python3-pip&lt;/li&gt; &#xA; &lt;li&gt;python3-venv&lt;/li&gt; &#xA; &lt;li&gt;libpng-dev&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Under Debian / Ubuntu (which we recommend using), you can install them with the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt install make git build-essential binutils-mips-linux-gnu python3 python3-pip python3-venv libpng-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Clone the repository&lt;/h4&gt; &#xA;&lt;p&gt;Create your own fork of the repository at &lt;code&gt;https://github.com/zeldaret/mm&lt;/code&gt;. Then clone your fork where you wish to have the project, with the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/&amp;lt;YOUR_USERNAME&amp;gt;/mm.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will copy the GitHub repository contents into a new folder in the current directory called &lt;code&gt;mm&lt;/code&gt;. Change into this directory before doing anything else:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd mm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Prepare a base ROM&lt;/h4&gt; &#xA;&lt;p&gt;Place a copy of the US ROM inside the &lt;code&gt;baseroms/n64-us/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Rename the file to &lt;code&gt;baserom.z64&lt;/code&gt;, &lt;code&gt;baserom.n64&lt;/code&gt; or &lt;code&gt;baserom.v64&lt;/code&gt;, depending on the original extension.&lt;/p&gt; &#xA;&lt;h4&gt;4. Make and Build the ROM&lt;/h4&gt; &#xA;&lt;p&gt;To start the extraction/build process, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The extraction/build process:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Prepares build environment: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Creates a Python virtual environment&lt;/li&gt; &#xA;   &lt;li&gt;Downloads necessary tools from pip&lt;/li&gt; &#xA;   &lt;li&gt;Compiles tools for the build process&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Extracts ROM contents: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Decompresses the ROM&lt;/li&gt; &#xA;   &lt;li&gt;Extracts individual files&lt;/li&gt; &#xA;   &lt;li&gt;Extracts archive files&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Extracts assets: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Extracts assets based on the XML files found in &lt;code&gt;assets/xml&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Disassembles code: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Disassembles code-containing files&lt;/li&gt; &#xA;   &lt;li&gt;Disassembles data (data, rodata, and bss)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Builds the ROM: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compiles the code and assets into a new ROM&lt;/li&gt; &#xA;   &lt;li&gt;Generates a compressed version of the ROM&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If all goes well, the new ROM should be built at &lt;code&gt;build/n64-us/mm-n64-us.z64&lt;/code&gt;, a compressed version generated at &lt;code&gt;build/n64-us/mm-n64-us-compressed.z64&lt;/code&gt;, and the following text printed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;build/n64-us/mm-n64-us.z64: OK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;build/n64-us/mm-n64-us-compressed.z64: OK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you instead see the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;build/n64-us/mm-n64-us.z64: FAILED&#xA;md5sum: WARNING: 1 computed checksum did NOT match&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;build/n64-us/mm-n64-us-compressed.z64: FAILED&#xA;md5sum: WARNING: 1 computed checksum did NOT match&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This means that something is wrong with the ROM&#39;s contents. Either the baserom files are incorrect due to a bad ROM, or some of the code is not matching.&lt;/p&gt; &#xA;&lt;p&gt;Running &lt;code&gt;make init&lt;/code&gt; will also make the &lt;code&gt;./expected&lt;/code&gt; directory and copy all of the files there, which will be useful when running the diff script. The diff script is useful in decompiling functions and can be run with this command: &lt;code&gt;./tools/asm-differ/diff.py -wmo3 &amp;lt;insert_function_here&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: to speed up the build, you can pass &lt;code&gt;-jN&lt;/code&gt; to &lt;code&gt;make setup&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt;, where N is the number of threads to use in the build, e.g. &lt;code&gt;make -j4&lt;/code&gt;. The generally-accepted wisdom is to use the number of virtual cores your computer has, which is the output of &lt;code&gt;nproc&lt;/code&gt; (which should be installed as part of &lt;code&gt;coreutils&lt;/code&gt;). The disadvantage that the ordering of the terminal output is scrambled, so for debugging it is best to stick to one thread (i.e. not pass &lt;code&gt;-jN&lt;/code&gt;). (&lt;code&gt;-j&lt;/code&gt; also exists, which uses unlimited jobs, but is generally slower.)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome. This is a group effort, and even small contributions can make a difference. Some work also doesn&#39;t require much knowledge to get started.&lt;/p&gt; &#xA;&lt;p&gt;Please note that is is our strict policy that &lt;em&gt;Anyone who wishes to contribute to the OOT or MM projects &lt;strong&gt;must not have accessed leaked source code at any point in time&lt;/strong&gt; for Nintendo 64 SDK, iQue player SDK, libultra, Ocarina of Time, Majora&#39;s Mask, Animal Crossing/Animal Forest, or any other game that shares the same game engine or significant portions of code to a Zelda 64 game or any other console similar to the Nintendo 64.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Most discussions happen on our &lt;a href=&#34;https://discord.zelda64.dev&#34;&gt;Discord Server&lt;/a&gt;, where you are welcome to ask if you need help getting started, or if you have any questions regarding this project or ZeldaRET&#39;s other decompilation projects.&lt;/p&gt; &#xA;&lt;p&gt;For more information on getting started, see our &lt;a href=&#34;https://raw.githubusercontent.com/zeldaret/mm/main/docs/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/zeldaret/mm/main/docs/STYLE.md&#34;&gt;Style Guide&lt;/a&gt; and our &lt;a href=&#34;https://raw.githubusercontent.com/zeldaret/mm/main/docs/REVIEWING.md&#34;&gt;Code Review Guidelines&lt;/a&gt; to see what code quality guidelines we follow.&lt;/p&gt;</summary>
  </entry>
</feed>