<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-06T01:40:14Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GEIGEIGEIST/TOTEM</title>
    <updated>2025-07-06T01:40:14Z</updated>
    <id>tag:github.com,2025-07-06:/GEIGEIGEIST/TOTEM</id>
    <link href="https://github.com/GEIGEIGEIST/TOTEM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TOTEM is a 38 keys column-staggered split keyboard. It meant to be used with a SEEED XIAO BLE or RP2040&lt;/p&gt;&lt;hr&gt;&lt;picture align=&#34;center&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;/docs/images/TOTEM_logo_dark.svg&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;/docs/images/TOTEM_logo_bright.svg&#34;&gt; &#xA; &lt;img alt=&#34;TOTEM logo&#34; src=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/docs/images/TOTEM_logo_dark.svg?sanitize=true&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;T O T E M&lt;/h1&gt; &#xA;&lt;p&gt;TOTEM is a 38 key column-staggered choc split keyboard. It is meant to be used with a &lt;a href=&#34;https://www.seeedstudio.com/Seeed-XIAO-BLE-nRF52840-p-5201.html&#34;&gt;Seeed Studio XIAO nRF52840 BLE&lt;/a&gt; or &lt;a href=&#34;https://www.seeedstudio.com/XIAO-RP2040-v1-0-p-5026.html&#34;&gt;XIAO RP2040&lt;/a&gt;. It was created for the SEEED XIAO keyboard contest.&lt;br&gt; &lt;a href=&#34;https://www.hackster.io/geist/totem-a-tiny-splitkeyboard-with-splay-cb2e43&#34;&gt;Here&lt;/a&gt; you can read about the process of making it.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;LAYOUT&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/docs/images/TOTEM_layout.svg?sanitize=true&#34; alt=&#34;TOTEM layout&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;PCB&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/PCB/&#34;&gt;Here&lt;/a&gt; you can find the KiCad files and Gerbers for the TOTEM.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;CASE&lt;/h2&gt; &#xA;&lt;p&gt;You can use the TOTEM without a case, but &lt;a href=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/case/&#34;&gt;here&lt;/a&gt; you can find one I made for it.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;BUILD GUIDE&lt;/h2&gt; &#xA;&lt;p&gt;The build guide for the TOTEM can be found &lt;a href=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/docs/buildguide.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FIRMWARE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/firmware/QMK/&#34;&gt;QMK (VIAL) precompiled&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/firmware/QMK/VIAL_source/&#34;&gt;QMK (VIAL) source&lt;/a&gt; for the TOTEM (wired using the XIAO RP2040)&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/firmware/ZMK/&#34;&gt;ZMK precompiled&lt;/a&gt; or &lt;a href=&#34;https://github.com/GEIGEIGEIST/zmk-config-totem&#34;&gt;ZMK source (outdated)&lt;/a&gt; for the TOTEM (wireless using the XIAO BLE)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;BUY&lt;/h2&gt; &#xA;&lt;p&gt;You can buy TOTEM kits and finished builds on &lt;a href=&#34;https://keeb.supply/products/geist-totem&#34;&gt;keeb.supply&lt;/a&gt; (based in Germany)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;PHOTOS&lt;/h2&gt; &#xA;&lt;p&gt;This is the TOTEM in a black resin case&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/docs/images/TOTEM_black_perspective.jpg&#34; alt=&#34;TOTEM black resin&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/docs/images/TOTEM_black_top.jpg&#34; alt=&#34;TOTEM black resin&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/docs/images/TOTEM_black_bottom.jpg&#34; alt=&#34;TOTEM black resin&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the TOTEM with a black resin tenting bottom plate&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GEIGEIGEIST/TOTEM/main/docs/images/TOTEM_black_tenting_example.jpg&#34; alt=&#34;TOTEM black resin tenting&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://youtu.be/rvM2BthjEI4?si=mTJVdPeZstshnDyo&#34;&gt;Video by &lt;em&gt;Wolfgang&#39;s Channel&lt;/em&gt; showing the tenting system in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;CREDITS&lt;/h2&gt; &#xA;&lt;h3&gt;INSPIRATION&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;ve added the additional pinky key to make the TOTEM compatible with the layout boards like the &lt;a href=&#34;https://github.com/brow/balbuzard&#34;&gt;Balbuzard&lt;/a&gt; by &lt;a href=&#34;https://github.com/brow&#34;&gt;Tom Brow&lt;/a&gt; and the &lt;a href=&#34;https://github.com/smores56/osprette&#34;&gt;Osprette&lt;/a&gt; by &lt;a href=&#34;https://github.com/smores56&#34;&gt;Sam Mohr&lt;/a&gt; use, where you put the keybinding of the top left and right keys on an outer pinky key.&lt;/p&gt; &#xA;&lt;h3&gt;HELP FIXING THINGS&lt;/h3&gt; &#xA;&lt;p&gt;People who helped me create this board and fix stuff&lt;/p&gt; &#xA;&lt;h4&gt;PCB&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GroooveBob&#34;&gt;Marco &#34;Bob&#34;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;CASE&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/freya-irl&#34;&gt;Freya&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bubbleology&#34;&gt;Bubbleology&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;FIRMWARE&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/caksoylar&#34;&gt;Cem Aksoylar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/regicidalplutophage&#34;&gt;Grinnie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AlaaSaadAbdo&#34;&gt;Alaa Saad Mansour&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pekudzu&#34;&gt;pekudzu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you build a TOTEM I would be pretty happy to see some pictures. And if you want to leave me a tip you can do this &lt;a href=&#34;https://ko-fi.com/geigeigeist&#34;&gt;here&lt;/a&gt; (but please don&#39;t feel pressured)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/sanitizers</title>
    <updated>2025-07-06T01:40:14Z</updated>
    <id>tag:github.com,2025-07-06:/google/sanitizers</id>
    <link href="https://github.com/google/sanitizers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AddressSanitizer, ThreadSanitizer, MemorySanitizer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sanitizers (Archived)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;This project has been archived and is no longer actively maintained.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Sanitizers project, which includes AddressSanitizer, MemorySanitizer, ThreadSanitizer, LeakSanitizer, and more, is now archived. The core code for these sanitizers resides within the &lt;a href=&#34;http://llvm.org&#34;&gt;LLVM&lt;/a&gt; repository. This repository will be retained for archival purposes, providing access to historical documentation, bugfixes, and helper code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Please do not file new bug reports in this repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Where to Report Bugs:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;LLVM:&lt;/strong&gt; For bugs related to the sanitizer runtimes and instrumentation, please report them to the &lt;a href=&#34;https://github.com/llvm/llvm-project/issues/&#34;&gt;LLVM Bug Tracker&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GCC:&lt;/strong&gt; For bugs related to the GCC port of the sanitizers, please report them to the &lt;a href=&#34;https://gcc.gnu.org/bugzilla/&#34;&gt;GCC Bugzilla&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux Kernel:&lt;/strong&gt; For bugs related to Kernel AddressSanitizer (KASAN), Kernel MemorySanitizer (KMSAN), or Kernel ConcurrencySanitizer (KCSAN), please report them through the appropriate Linux kernel bug reporting channels, such as the &lt;a href=&#34;https://vger.kernel.org/vger-lists.html#linux-kernel&#34;&gt;Linux kernel mailing list&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux Distributions:&lt;/strong&gt; For bugs related to compiler issues in specific Linux distributions that are not reproducible in trunk compilers, please report them to the respective distribution&#39;s bug tracker (e.g., Debian Bug Tracking System, Red Hat Bugzilla).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Apple and Microsoft:&lt;/strong&gt; For bugs related to the compilers provided by Apple (Xcode) or Microsoft (Visual Studio), please report them through the respective vendor&#39;s bug reporting channels.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation (Archived):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/wiki/AddressSanitizer&#34;&gt;AddressSanitizer&lt;/a&gt; (detects addressability issues) and &lt;a href=&#34;https://raw.githubusercontent.com/google/wiki/AddressSanitizerLeakSanitizer&#34;&gt;LeakSanitizer&lt;/a&gt; (detects memory leaks)&lt;/li&gt; &#xA; &lt;li&gt;ThreadSanitizer (detects data races and deadlocks) for &lt;a href=&#34;https://raw.githubusercontent.com/google/wiki/ThreadSanitizerCppManual&#34;&gt;C++&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/google/wiki/ThreadSanitizerGoManual&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/wiki/MemorySanitizer&#34;&gt;MemorySanitizer&lt;/a&gt; (detects use of uninitialized memory)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/docs/HardwareAssistedAddressSanitizerDesign.html&#34;&gt;HWASAN&lt;/a&gt;, or Hardware-assisted AddressSanitizer, a newer variant of AddressSanitizer that consumes much less memory&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html&#34;&gt;UBSan&lt;/a&gt;, or UndefinedBehaviorSanitizer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kernel Sanitizers (Archived Documentation):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kernel.org/doc/html/v4.12/dev-tools/kasan.html&#34;&gt;KASAN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/kmsan&#34;&gt;KMSAN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/kernel-sanitizers/raw/master/KCSAN.md&#34;&gt;KCSAN&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thank you for your understanding.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rxi/microui</title>
    <updated>2025-07-06T01:40:14Z</updated>
    <id>tag:github.com,2025-07-06:/rxi/microui</id>
    <link href="https://github.com/rxi/microui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tiny immediate-mode UI library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3920290/75171571-be83c500-5723-11ea-8a50-504cc2ae1109.png&#34; alt=&#34;microui&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;em&gt;tiny&lt;/em&gt;, portable, immediate-mode UI library written in ANSI C&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tiny: around &lt;code&gt;1100 sloc&lt;/code&gt; of ANSI C&lt;/li&gt; &#xA; &lt;li&gt;Works within a fixed-sized memory region: no additional memory is allocated&lt;/li&gt; &#xA; &lt;li&gt;Built-in controls: window, scrollable panel, button, slider, textbox, label, checkbox, wordwrapped text&lt;/li&gt; &#xA; &lt;li&gt;Works with any rendering system that can draw rectangles and text&lt;/li&gt; &#xA; &lt;li&gt;Designed to allow the user to easily add custom controls&lt;/li&gt; &#xA; &lt;li&gt;Simple layout system&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3920290/75187058-2b598800-5741-11ea-9358-38caf59f8791.png&#34; alt=&#34;example&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;if (mu_begin_window(ctx, &#34;My Window&#34;, mu_rect(10, 10, 140, 86))) {&#xA;  mu_layout_row(ctx, 2, (int[]) { 60, -1 }, 0);&#xA;&#xA;  mu_label(ctx, &#34;First:&#34;);&#xA;  if (mu_button(ctx, &#34;Button1&#34;)) {&#xA;    printf(&#34;Button1 pressed\n&#34;);&#xA;  }&#xA;&#xA;  mu_label(ctx, &#34;Second:&#34;);&#xA;  if (mu_button(ctx, &#34;Button2&#34;)) {&#xA;    mu_open_popup(ctx, &#34;My Popup&#34;);&#xA;  }&#xA;&#xA;  if (mu_begin_popup(ctx, &#34;My Popup&#34;)) {&#xA;    mu_label(ctx, &#34;Hello world!&#34;);&#xA;    mu_end_popup(ctx);&#xA;  }&#xA;&#xA;  mu_end_window(ctx);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3920290/75188642-63ae9580-5744-11ea-9eee-d753ff5c0aa7.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://floooh.github.io/sokol-html5/sgl-microui-sapp.html&#34;&gt;&lt;strong&gt;Browser Demo&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rxi/microui/master/doc/usage.md&#34;&gt;&lt;code&gt;doc/usage.md&lt;/code&gt;&lt;/a&gt; for usage instructions&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/rxi/microui/master/demo&#34;&gt;&lt;code&gt;demo&lt;/code&gt;&lt;/a&gt; directory for a usage example&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;The library expects the user to provide input and handle the resultant drawing commands, it does not do any drawing itself.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The library is designed to be lightweight, providing a foundation to which you can easily add custom controls and UI elements; pull requests adding additional features will likely not be merged. Bug reports are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the terms of the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/rxi/microui/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>