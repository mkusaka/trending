<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-04T02:06:35Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>greenplum-db/gpdb</title>
    <updated>2022-06-04T02:06:35Z</updated>
    <id>tag:github.com,2022-06-04:/greenplum-db/gpdb</id>
    <link href="https://github.com/greenplum-db/gpdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Greenplum Database - Massively Parallel PostgreSQL for Analytics. An open-source massively parallel data platform for analytics, machine learning and AI.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Concourse Pipeline&lt;/strong&gt; &lt;a href=&#34;https://prod.ci.gpdb.pivotal.io/teams/main/pipelines/gpdb_master&#34;&gt;&lt;img src=&#34;https://prod.ci.gpdb.pivotal.io/api/v1/teams/main/pipelines/gpdb_master/badge&#34; alt=&#34;Concourse Build Status&#34;&gt;&lt;/a&gt; | &lt;strong&gt;Travis Build&lt;/strong&gt; &lt;a href=&#34;https://travis-ci.org/greenplum-db/gpdb&#34;&gt;&lt;img src=&#34;https://travis-ci.org/greenplum-db/gpdb.svg?branch=master&#34; alt=&#34;Travis Build Status&#34;&gt;&lt;/a&gt; | &lt;strong&gt;Zuul Regression Test On Arm&lt;/strong&gt; &lt;a href=&#34;https://status.openlabtesting.org/builds/builds?project=greenplum-db%2Fgpdb&amp;amp;job_name=gpdb-installcheck-world-tests-on-arm64&#34;&gt;&lt;img src=&#34;http://openlabtesting.org:15000/badge?project=greenplum-db%2Fgpdb&#34; alt=&#34;Zuul Regression Test Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/greenplum-db/gpdb/master/logo-greenplum.png&#34; alt=&#34;Greenplum&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Greenplum Database (GPDB) is an advanced, fully featured, open source data warehouse, based on PostgreSQL. It provides powerful and rapid analytics on petabyte scale data volumes. Uniquely geared toward big data analytics, Greenplum Database is powered by the world’s most advanced cost-based query optimizer delivering high analytical query performance on large data volumes.&lt;/p&gt; &#xA;&lt;p&gt;The Greenplum project is released under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache 2 license&lt;/a&gt;. We want to thank all our past and present community contributors and are really interested in all new potential contributions. For the Greenplum Database community no contribution is too small, we encourage all types of contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;A Greenplum cluster consists of a &lt;strong&gt;coordinator&lt;/strong&gt; server, and multiple &lt;strong&gt;segment&lt;/strong&gt; servers. All user data resides in the segments, the coordinator contains only metadata. The coordinator server, and all the segments, share the same schema.&lt;/p&gt; &#xA;&lt;p&gt;Users always connect to the coordinator server, which divides up the query into fragments that are executed in the segments, and collects the results.&lt;/p&gt; &#xA;&lt;p&gt;More information can be found on the &lt;a href=&#34;https://greenplum.org/&#34;&gt;project website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building Greenplum Database with GPORCA&lt;/h2&gt; &#xA;&lt;p&gt;GPORCA is a cost-based optimizer which is used by Greenplum Database in conjunction with the PostgreSQL planner. It is also known as just ORCA, and Pivotal Optimizer. The code for GPORCA resides src/backend/gporca. It is built automatically by default.&lt;/p&gt; &#xA;&lt;h3&gt;Installing dependencies (for macOS developers)&lt;/h3&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://raw.githubusercontent.com/greenplum-db/gpdb/master/README.macOS.md&#34;&gt;these macOS steps&lt;/a&gt; for getting your system ready for GPDB&lt;/p&gt; &#xA;&lt;h3&gt;Installing dependencies (for Linux developers)&lt;/h3&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://raw.githubusercontent.com/greenplum-db/gpdb/master/README.Linux.md&#34;&gt;appropriate linux steps&lt;/a&gt; for getting your system ready for GPDB&lt;/p&gt; &#xA;&lt;h3&gt;Build the database&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Configure build environment to install at /usr/local/gpdb&#xA;./configure --with-perl --with-python --with-libxml --with-gssapi --prefix=/usr/local/gpdb&#xA;&#xA;# Compile and install&#xA;make -j8&#xA;make -j8 install&#xA;&#xA;# Bring in greenplum environment into your running shell&#xA;source /usr/local/gpdb/greenplum_path.sh&#xA;&#xA;# Start demo cluster&#xA;make create-demo-cluster&#xA;# (gpdemo-env.sh contains __PGPORT__ and __MASTER_DATA_DIRECTORY__ values)&#xA;source gpAux/gpdemo/gpdemo-env.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The directory and the TCP ports for the demo cluster can be changed on the fly. Instead of &lt;code&gt;make cluster&lt;/code&gt;, consider:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DATADIRS=/tmp/gpdb-cluster PORT_BASE=5555 make cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The TCP port for the regression test can be changed on the fly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PGPORT=5555 make installcheck-world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To turn GPORCA off and use Postgres planner for query optimization:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;set optimizer=off;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to clean all generated files&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make distclean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running tests&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The default regression tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;make installcheck-world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The top-level target &lt;strong&gt;installcheck-world&lt;/strong&gt; will run all regression tests in GPDB against the running cluster. For testing individual parts, the respective targets can be run separately.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The PostgreSQL &lt;strong&gt;check&lt;/strong&gt; target does not work. Setting up a Greenplum cluster is more complicated than a single-node PostgreSQL installation, and no-one&#39;s done the work to have &lt;strong&gt;make check&lt;/strong&gt; create a cluster. Create a cluster manually or use gpAux/gpdemo/ (example below) and run the toplevel &lt;strong&gt;make installcheck-world&lt;/strong&gt; against that. Patches are welcome!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The PostgreSQL &lt;strong&gt;installcheck&lt;/strong&gt; target does not work either, because some tests are known to fail with Greenplum. The &lt;strong&gt;installcheck-good&lt;/strong&gt; schedule in &lt;strong&gt;src/test/regress&lt;/strong&gt; excludes those tests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When adding a new test, please add it to one of the GPDB-specific tests, in greenplum_schedule, rather than the PostgreSQL tests inherited from the upstream. We try to keep the upstream tests identical to the upstream versions, to make merging with newer PostgreSQL releases easier.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternative Configurations&lt;/h2&gt; &#xA;&lt;h3&gt;Building GPDB without GPORCA&lt;/h3&gt; &#xA;&lt;p&gt;Currently, GPDB is built with GPORCA by default. If you want to build GPDB without GPORCA, configure requires &lt;code&gt;--disable-orca&lt;/code&gt; flag to be set.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Clean environment&#xA;make distclean&#xA;&#xA;# Configure build environment to install at /usr/local/gpdb&#xA;./configure --disable-orca --with-perl --with-python --with-libxml --prefix=/usr/local/gpdb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building GPDB with PXF&lt;/h3&gt; &#xA;&lt;p&gt;PXF is an extension framework for GPDB to enable fast access to external hadoop datasets. Refer to &lt;a href=&#34;https://raw.githubusercontent.com/greenplum-db/gpdb/master/gpcontrib/pxf/README.md&#34;&gt;PXF extension&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Currently, GPDB is built with PXF by default (--enable-pxf is on). In order to build GPDB without pxf, simply invoke &lt;code&gt;./configure&lt;/code&gt; with additional option &lt;code&gt;--disable-pxf&lt;/code&gt;. PXF requires curl, so &lt;code&gt;--enable-pxf&lt;/code&gt; is not compatible with the &lt;code&gt;--without-libcurl&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h3&gt;Building GPDB with Python3 enabled&lt;/h3&gt; &#xA;&lt;p&gt;GPDB supports Python3 with plpython3u UDF&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/greenplum-db/gpdb/master/src/pl/plpython/README.md&#34;&gt;how to enable Python3&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Building GPDB client tools on Windows&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/greenplum-db/gpdb/master/README.Windows.md&#34;&gt;Building GPDB client tools on Windows&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Development with Vagrant&lt;/h2&gt; &#xA;&lt;p&gt;There is a Vagrant-based &lt;a href=&#34;https://raw.githubusercontent.com/greenplum-db/gpdb/master/src/tools/vagrant/README.md&#34;&gt;quickstart guide for developers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code layout&lt;/h2&gt; &#xA;&lt;p&gt;The directory layout of the repository follows the same general layout as upstream PostgreSQL. There are changes compared to PostgreSQL throughout the codebase, but a few larger additions worth noting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;gpMgmt/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Contains Greenplum-specific command-line tools for managing the cluster. Scripts like gpinit, gpstart, gpstop live here. They are mostly written in Python.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;gpAux/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Contains Greenplum-specific release management scripts, and vendored dependencies. Some additional directories are submodules and will be made available over time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;gpcontrib/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Much like the PostgreSQL contrib/ directory, this directory contains extensions such as gpfdist, PXF and gpmapreduce which are Greenplum-specific.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;doc/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In PostgreSQL, the user manual lives here. In Greenplum, the user manual is maintained separately and only the reference pages used to build man pages are here.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;gpdb-doc/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Contains the Greenplum documentation in DITA XML format. Refer to &lt;code&gt;gpdb-doc/README.md&lt;/code&gt; for information on how to build, and work with the documentation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ci/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Contains configuration files for the GPDB continuous integration system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;src/backend/cdb/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Contains larger Greenplum-specific backend modules. For example, communication between segments, turning plans into parallelizable plans, mirroring, distributed transaction and snapshot management, etc. &lt;strong&gt;cdb&lt;/strong&gt; stands for &lt;strong&gt;Cluster Database&lt;/strong&gt; - it was a workname used in the early days. That name is no longer used, but the &lt;strong&gt;cdb&lt;/strong&gt; prefix remains.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;src/backend/gpopt/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Contains the so-called &lt;strong&gt;translator&lt;/strong&gt; library, for using the GPORCA optimizer with Greenplum. The translator library is written in C++ code, and contains glue code for translating plans and queries between the DXL format used by GPORCA, and the PostgreSQL internal representation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;src/backend/gporca/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Contains the GPORCA optimizer code and tests. This is written in C++. See &lt;a href=&#34;https://raw.githubusercontent.com/greenplum-db/gpdb/master/src/backend/gporca/README.md&#34;&gt;README.md&lt;/a&gt; for more information and how to unit-test GPORCA.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;src/backend/fts/&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;FTS is a process that runs in the coordinator node, and periodically polls the segments to maintain the status of each segment.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Greenplum is maintained by a core team of developers with commit rights to the &lt;a href=&#34;https://github.com/greenplum-db/gpdb&#34;&gt;main gpdb repository&lt;/a&gt; on GitHub. At the same time, we are very eager to receive contributions from anybody in the wider Greenplum community. This section covers all you need to know if you want to see your code or documentation changes be added to Greenplum and appear in the future releases.&lt;/p&gt; &#xA;&lt;h3&gt;Getting started&lt;/h3&gt; &#xA;&lt;p&gt;Greenplum is developed on GitHub, and anybody wishing to contribute to it will have to &lt;a href=&#34;https://github.com/signup/free&#34;&gt;have a GitHub account&lt;/a&gt; and be familiar with &lt;a href=&#34;https://wiki.postgresql.org/wiki/Working_with_Git&#34;&gt;Git tools and workflow&lt;/a&gt;. It is also recommend that you follow the &lt;a href=&#34;https://greenplum.org/community/&#34;&gt;developer&#39;s mailing list&lt;/a&gt; since some of the contributions may generate more detailed discussions there.&lt;/p&gt; &#xA;&lt;p&gt;Once you have your GitHub account, &lt;a href=&#34;https://github.com/greenplum-db/gpdb/fork&#34;&gt;fork&lt;/a&gt; this repository so that you can have your private copy to start hacking on and to use as source of pull requests.&lt;/p&gt; &#xA;&lt;p&gt;Anybody contributing to Greenplum has to be covered by either the Corporate or the Individual Contributor License Agreement. If you have not previously done so, please fill out and submit the &lt;a href=&#34;https://cla.pivotal.io/sign/greenplum&#34;&gt;Contributor License Agreement&lt;/a&gt;. Note that we do allow for really trivial changes to be contributed without a CLA if they fall under the rubric of &lt;a href=&#34;https://cla.pivotal.io/about#obvious-fixes&#34;&gt;obvious fixes&lt;/a&gt;. However, since our GitHub workflow checks for CLA by default you may find it easier to submit one instead of claiming an &#34;obvious fix&#34; exception.&lt;/p&gt; &#xA;&lt;h3&gt;Licensing of Greenplum contributions&lt;/h3&gt; &#xA;&lt;p&gt;If the contribution you&#39;re submitting is original work, you can assume that Pivotal will release it as part of an overall Greenplum release available to the downstream consumers under the Apache License, Version 2.0. However, in addition to that, Pivotal may also decide to release it under a different license (such as &lt;a href=&#34;https://www.postgresql.org/about/licence/&#34;&gt;PostgreSQL License&lt;/a&gt; to the upstream consumers that require it. A typical example here would be Pivotal upstreaming your contribution back to PostgreSQL community (which can be done either verbatim or your contribution being upstreamed as part of the larger changeset).&lt;/p&gt; &#xA;&lt;p&gt;If the contribution you&#39;re submitting is NOT original work you have to indicate the name of the license and also make sure that it is similar in terms to the Apache License 2.0. Apache Software Foundation maintains a list of these licenses under &lt;a href=&#34;https://www.apache.org/legal/resolved.html#category-a&#34;&gt;Category A&lt;/a&gt;. In addition to that, you may be required to make proper attribution in the &lt;a href=&#34;https://github.com/greenplum-db/gpdb/raw/master/NOTICE&#34;&gt;NOTICE file&lt;/a&gt; similar to &lt;a href=&#34;https://github.com/greenplum-db/gpdb/raw/master/NOTICE#L278&#34;&gt;these examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, keep in mind that it is NEVER a good idea to remove licensing headers from the work that is not your original one. Even if you are using parts of the file that originally had a licensing header at the top you should err on the side of preserving it. As always, if you are not quite sure about the licensing implications of your contributions, feel free to reach out to us on the developer mailing list.&lt;/p&gt; &#xA;&lt;h3&gt;Coding guidelines&lt;/h3&gt; &#xA;&lt;p&gt;Your chances of getting feedback and seeing your code merged into the project greatly depend on how granular your changes are. If you happen to have a bigger change in mind, we highly recommend engaging on the developer&#39;s mailing list first and sharing your proposal with us before you spend a lot of time writing code. Even when your proposal gets validated by the community, we still recommend doing the actual work as a series of small, self-contained commits. This makes the reviewer&#39;s job much easier and increases the timeliness of feedback.&lt;/p&gt; &#xA;&lt;p&gt;When it comes to C and C++ parts of Greenplum, we try to follow &lt;a href=&#34;https://www.postgresql.org/docs/devel/source.html&#34;&gt;PostgreSQL Coding Conventions&lt;/a&gt;. In addition to that we require that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All Python code passes &lt;a href=&#34;https://www.pylint.org/&#34;&gt;Pylint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;All Go code is formatted according to &lt;a href=&#34;https://golang.org/cmd/gofmt/&#34;&gt;gofmt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We recommend using &lt;code&gt;git diff --color&lt;/code&gt; when reviewing your changes so that you don&#39;t have any spurious whitespace issues in the code that you submit.&lt;/p&gt; &#xA;&lt;p&gt;All new functionality that is contributed to Greenplum should be covered by regression tests that are contributed alongside it. If you are uncertain on how to test or document your work, please raise the question on the gpdb-dev mailing list and the developer community will do its best to help you.&lt;/p&gt; &#xA;&lt;p&gt;At the very minimum you should always be running &lt;code&gt;make installcheck-world&lt;/code&gt; to make sure that you&#39;re not breaking anything.&lt;/p&gt; &#xA;&lt;h3&gt;Changes applicable to upstream PostgreSQL&lt;/h3&gt; &#xA;&lt;p&gt;If the change you&#39;re working on touches functionality that is common between PostgreSQL and Greenplum, you may be asked to forward-port it to PostgreSQL. This is not only so that we keep reducing the delta between the two projects, but also so that any change that is relevant to PostgreSQL can benefit from a much broader review of the upstream PostgreSQL community. In general, it is a good idea to keep both code bases handy so you can be sure whether your changes may need to be forward-ported.&lt;/p&gt; &#xA;&lt;h3&gt;Submission timing&lt;/h3&gt; &#xA;&lt;p&gt;To improve the odds of the right discussion of your patch or idea happening, pay attention to what the community work cycle is. For example, if you send in a brand new idea in the beta phase of a release, we may defer review or target its inclusion for a later version. Feel free to ask on the mailing list to learn more about the Greenplum release policy and timing.&lt;/p&gt; &#xA;&lt;h3&gt;Patch submission&lt;/h3&gt; &#xA;&lt;p&gt;Once you are ready to share your work with the Greenplum core team and the rest of the Greenplum community, you should push all the commits to a branch in your own repository forked from the official Greenplum and &lt;a href=&#34;https://help.github.com/articles/about-pull-requests/&#34;&gt;send us a pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We welcome submissions which are work in-progress in order to get feedback early in the development process. When opening the pull request, select &#34;Draft&#34; in the dropdown menu when creating the PR to clearly mark the intent of the pull request. Prefixing the title with &#34;WIP:&#34; is also good practice.&lt;/p&gt; &#xA;&lt;p&gt;All new features should be submitted against the main master branch. Bugfixes should too be submitted against master unless they only exist in a supported back-branch. If the bug exists in both master and back-branches, explain this in the PR description.&lt;/p&gt; &#xA;&lt;h3&gt;Validation checks and CI&lt;/h3&gt; &#xA;&lt;p&gt;Once you submit your pull request, you will immediately see a number of validation checks performed by our automated CI pipelines. There also will be a CLA check telling you whether your CLA was recognized. If any of these checks fails, you will need to update your pull request to take care of the issue. Pull requests with failed validation checks are very unlikely to receive any further peer review from the community members.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that the most common reason for a failed CLA check is a mismatch between an email on file and an email recorded in the commits submitted as part of the pull request.&lt;/p&gt; &#xA;&lt;p&gt;If you cannot figure out why a certain validation check failed, feel free to ask on the developer&#39;s mailing list, but make sure to include a direct link to a pull request in your email.&lt;/p&gt; &#xA;&lt;h3&gt;Patch review&lt;/h3&gt; &#xA;&lt;p&gt;A submitted pull request with passing validation checks is assumed to be available for peer review. Peer review is the process that ensures that contributions to Greenplum are of high quality and align well with the road map and community expectations. Every member of the Greenplum community is encouraged to review pull requests and provide feedback. Since you don&#39;t have to be a core team member to be able to do that, we recommend following a stream of pull reviews to anybody who&#39;s interested in becoming a long-term contributor to Greenplum. As &lt;a href=&#34;https://en.wikipedia.org/wiki/Linus&#39;s_Law&#34;&gt;Linus would say&lt;/a&gt; &#34;given enough eyeballs, all bugs are shallow&#34;.&lt;/p&gt; &#xA;&lt;p&gt;One outcome of the peer review could be a consensus that you need to modify your pull request in certain ways. GitHub allows you to push additional commits into a branch from which a pull request was sent. Those additional commits will be then visible to all of the reviewers.&lt;/p&gt; &#xA;&lt;p&gt;A peer review converges when it receives at least one +1 and no -1s votes from the participants. At that point you should expect one of the core team members to pull your changes into the project.&lt;/p&gt; &#xA;&lt;p&gt;Greenplum prides itself on being a collaborative, consensus-driven environment. We do not believe in vetoes and any -1 vote casted as part of the peer review has to have a detailed technical explanation of what&#39;s wrong with the change. Should a strong disagreement arise it may be advisable to take the matter onto the mailing list since it allows for a more natural flow of the conversation.&lt;/p&gt; &#xA;&lt;p&gt;At any time during the patch review, you may experience delays based on the availability of reviewers and core team members. Please be patient. That being said, don&#39;t get discouraged either. If you&#39;re not getting expected feedback for a few days add a comment asking for updates on the pull request itself or send an email to the mailing list.&lt;/p&gt; &#xA;&lt;h3&gt;Direct commits to the repository&lt;/h3&gt; &#xA;&lt;p&gt;On occasion you will see core team members committing directly to the repository without going through the pull request workflow. This is reserved for small changes only and the rule of thumb we use is this: if the change touches any functionality that may result in a test failure, then it has to go through a pull request workflow. If, on the other hand, the change is in the non-functional part of the code base (such as fixing a typo inside of a comment block) core team members can decide to just commit to the repository directly.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For Greenplum Database documentation, please check the &lt;a href=&#34;http://docs.greenplum.org/&#34;&gt;online documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For further information beyond the scope of this README, please see &lt;a href=&#34;https://github.com/greenplum-db/gpdb/wiki&#34;&gt;our wiki&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RfidResearchGroup/proxmark3</title>
    <updated>2022-06-04T02:06:35Z</updated>
    <id>tag:github.com,2022-06-04:/RfidResearchGroup/proxmark3</id>
    <link href="https://github.com/RfidResearchGroup/proxmark3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Iceman fork of Proxmark3 / RFID / NFC reader, writer, sniffer and emulator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Iceman Fork - Proxmark3 a RFID / NFC project.&lt;/h1&gt; &#xA;&lt;p&gt;The Proxmark3 is the swiss-army tool of RFID, allowing for interactions with the vast majority of RFID tags on a global scale. Originally built by Jonathan Westhues, the device is now the goto tool for RFID Analysis for the enthusiast. Iceman repository is considered to be the pinnacle of features and functionality, enabling a huge range of extremely useful and convenient commands and LUA scripts to automate chip identification, penetration testing, and programming&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Latest Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Coverity&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Contributors&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/rfidresearchgroup/proxmark3&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://scan.coverity.com/projects/proxmark3-rrg-iceman-repo&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/19334/badge.svg?sanitize=true&#34; alt=&#34;Coverity Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/rfidresearchgroup/proxmark3&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Actions OSX CI&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Actions Ubuntu CI&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Actions Windows CI&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/RfidResearchGroup/proxmark3/workflows/MacOS%20Build%20and%20Test/badge.svg?branch=master&#34; alt=&#34;MacOS Build and Test&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/RfidResearchGroup/proxmark3/workflows/Ubuntu%20Build%20and%20Test/badge.svg?branch=master&#34; alt=&#34;Ubuntu Build and Test&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/actions/workflows/windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/RfidResearchGroup/proxmark3/actions/workflows/windows.yml/badge.svg?branch=master&#34; alt=&#34;Windows Build and Test&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#proxmark3-installation-and-overview&#34;&gt;PROXMARK3 INSTALLATION AND OVERVIEW&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#notes--helpful-documents&#34;&gt;Notes / helpful documents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#how-to-build&#34;&gt;How to build?&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#proxmark3-rdv4&#34;&gt;Proxmark3 RDV4&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#generic-proxmark3-platforms&#34;&gt;Generic Proxmark3 platforms&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#what-has-changed&#34;&gt;What has changed?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#development&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#supported-operative-systems&#34;&gt;Supported operative systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#precompiled-binaries&#34;&gt;Precompiled binaries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#proxmark3-gui&#34;&gt;Proxmark3 GUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#official-channels&#34;&gt;Official channels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#citation&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#copyright-and-licensing-terms&#34;&gt;Copyright and licensing terms&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;PROXMARK3 INSTALLATION AND OVERVIEW&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Installation&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Use of the Proxmark3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Linux-Installation-Instructions.md&#34;&gt;Linux - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/0_Compilation-Instructions.md&#34;&gt;Compilation Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/ModemManager-Must-Be-Discarded.md&#34;&gt;Linux - Important notes on ModemManager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/1_Validation.md&#34;&gt;Validating Proxmark3 Client Functionality&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Mac-OS-X-Homebrew-Installation-Instructions.md&#34;&gt;Mac OS X - Homebrew &amp;amp; Upgrading HomeBrew Tap Formula&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/2_Configuration-and-Verification.md&#34;&gt;First Use and Verification&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Mac-OS-X-MacPorts-Installation-Instructions.md&#34;&gt;Mac OS X - MacPorts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/3_Commands-and-Features.md&#34;&gt;Commands &amp;amp; Features&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Mac-OS-X-Compile-From-Source-Instructions.md&#34;&gt;Mac OS X - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Windows-Installation-Instructions.md&#34;&gt;Windows - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/termux_notes.md&#34;&gt;Termux / Android - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/bt_manual_v10.md&#34;&gt;Blue Shark Manual&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/cheatsheet.md&#34;&gt;Command Cheat Sheet&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md&#34;&gt;Advanced Compilation Parameters&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/wiki/More-cheat-sheets&#34;&gt;More Cheat Sheets&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/commands.md&#34;&gt;Complete Client Command Set&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/jtag_notes.md&#34;&gt;JTAG&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/T5577_Guide.md&#34;&gt;T5577 Introduction Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Notes / helpful documents&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/uart_notes.md&#34;&gt;Notes on UART&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/termux_notes.md&#34;&gt;Notes on Termux / Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/path_notes.md&#34;&gt;Notes on paths&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/new_frame_format.md&#34;&gt;Notes on frame format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/trace_notes.md&#34;&gt;Notes on tracelog / wireshark&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/emv_notes.md&#34;&gt;Notes on EMV&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/ext_flash_notes.md&#34;&gt;Notes on external flash&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/loclass_notes.md&#34;&gt;Notes on loclass&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Development/Coverity-Scan-Config-and-Run.md&#34;&gt;Notes on Coverity Scan Config &amp;amp; Run&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/extensions_notes.md&#34;&gt;Notes on file formats used with Proxmark3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/mfu_binary_format_notes.md&#34;&gt;Notes on MFU binary format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/fpga_arm_notes.md&#34;&gt;Notes on FPGA &amp;amp; ARM&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/armsrc/Standalone/readme.md&#34;&gt;Developing standalone mode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/wiki/Standalone-mode&#34;&gt;Wiki about standalone mode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/magic_cards_notes.md&#34;&gt;Notes on Magic UID cards&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/colors_notes.md&#34;&gt;Notes on Color usage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Development/Makefile-vs-CMake.md&#34;&gt;Makefile vs CMake&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/cloner_notes.md&#34;&gt;Notes on Cloner guns&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/cliparser.md&#34;&gt;Notes on cliparser usage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/clocks.md&#34;&gt;Notes on clocks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/desfire.md&#34;&gt;Notes on MIFARE DESFire&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/cipurse.md&#34;&gt;Notes on CIPURSE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/ndef_type4a.md&#34;&gt;Notes on NDEF type4a&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;How to build?&lt;/h1&gt; &#xA;&lt;h2&gt;Proxmark3 RDV4&lt;/h2&gt; &#xA;&lt;p&gt;See the instruction links in the tables above to build, flash and run for your Proxmark3 RDV4 device.&lt;/p&gt; &#xA;&lt;h2&gt;Generic Proxmark3 platforms&lt;/h2&gt; &#xA;&lt;p&gt;In order to build this repo for generic Proxmark3 platforms we urge you to read &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md&#34;&gt;Advanced compilation parameters&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We define generic Proxmark3 platforms as following devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RDV1, RDV2, RDV3 easy&lt;/li&gt; &#xA; &lt;li&gt;Ryscorp green PCB version&lt;/li&gt; &#xA; &lt;li&gt;Radiowar black PCB version&lt;/li&gt; &#xA; &lt;li&gt;numerous Chinese adapted versions of the RDV3 easy (kkmoon, PiSwords etc)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Not supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠ Proxmark Evolution (EVO) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: unknown pin assignments.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚠ Ryscorp Proxmark3 Pro &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: device has different fpga and unknown pin assignments.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: Company have dissappared, leaving their customers in the dark.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚠ iCopy-X &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: experimental support, currently incompatible with iCopy-X GUI as Proxmark client commands are now using cliparser.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: see also &lt;a href=&#34;https://github.com/iCopy-X-Community/&#34;&gt;icopyx-community repos&lt;/a&gt; for upstream sources, reversed hw etc.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: Uses DRM to lock down tags, ignores the open source licences. Use on your own risk.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unknown support status&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠ VX &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: unknown device hw&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚠ Proxmark3 X &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: unknown device hw.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;256kb flash memory size of generic Proxmark3 platforms&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠ &lt;strong&gt;Note&lt;/strong&gt;: You need to keep a eye on how large your ARM chip built-in flash memory is. With 512kb you are fine but if its 256kb you need to compile this repo with even less functionality. When running the &lt;code&gt;./pm3-flash-all&lt;/code&gt; you can see which size your device have if you have the bootloader from this repo installed. Otherwise you will find the size reported in the start message when running the Proxmark3 client &lt;code&gt;./pm3&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md#256kb-versions&#34;&gt;OBS! Read the 256kb flash memory advisory&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;What has changed?&lt;/h1&gt; &#xA;&lt;p&gt;Proxmark3 RDV4 hardware modifications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;added flash memory 256kb&lt;/li&gt; &#xA; &lt;li&gt;added smart card module&lt;/li&gt; &#xA; &lt;li&gt;added FPC connector for peripherals such as Bluetooth+battery addon&lt;/li&gt; &#xA; &lt;li&gt;improved antennas &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;swappable&lt;/li&gt; &#xA;   &lt;li&gt;LF Q factor switch&lt;/li&gt; &#xA;   &lt;li&gt;LF 125/134 frequency switch&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;tiny PCB form factor&lt;/li&gt; &#xA; &lt;li&gt;ABS case&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This repo vs official Proxmark3 repo:&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/CHANGELOG.md&#34;&gt;Changelog file&lt;/a&gt; which we try to keep updated.&lt;/p&gt; &#xA;&lt;p&gt;In short this repo gives you a completely different user experience when it comes to Proxmark3.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports command tab complete&lt;/li&gt; &#xA; &lt;li&gt;Richer CLI with use of colors / emojis&lt;/li&gt; &#xA; &lt;li&gt;Help text system implemented everywhere&lt;/li&gt; &#xA; &lt;li&gt;Hints system&lt;/li&gt; &#xA; &lt;li&gt;User preference settings&lt;/li&gt; &#xA; &lt;li&gt;Extensive testing with continuous integration build systems on Linux, OSX and Windows, and regular usage of static analysis tools like &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://scan.coverity.com/projects/proxmark3-rrg-iceman-repo/&#34;&gt;Coverity Scan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Cppcheck (v2.6)&lt;/li&gt; &#xA;   &lt;li&gt;GCC and Clang aggressive enforcement of diagnostic flags&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Auto detection of serial ports and seamless integration with Bluetooth addon&lt;/li&gt; &#xA; &lt;li&gt;Reconnect to device from inside client&lt;/li&gt; &#xA; &lt;li&gt;Supports tearoff attacks&lt;/li&gt; &#xA; &lt;li&gt;Supports NFC NDEF type1, type2, type4a, type4b, mifare, barcode&lt;/li&gt; &#xA; &lt;li&gt;Supports pm3 client scripts, lua scripts, python scripts&lt;/li&gt; &#xA; &lt;li&gt;Most comprehensive collection of scripts available&lt;/li&gt; &#xA; &lt;li&gt;Wiegand encoding, decoding.&lt;/li&gt; &#xA; &lt;li&gt;Supports EMV&lt;/li&gt; &#xA; &lt;li&gt;Supports CIPURSE&lt;/li&gt; &#xA; &lt;li&gt;Most standalone modes available with easy compilation&lt;/li&gt; &#xA; &lt;li&gt;Extensive test script for client and external tools&lt;/li&gt; &#xA; &lt;li&gt;Most comprehensive compiled known keys dictionaries&lt;/li&gt; &#xA; &lt;li&gt;Slimed down usb communications with NG-frames&lt;/li&gt; &#xA; &lt;li&gt;The most compiled public known key recovery software&lt;/li&gt; &#xA; &lt;li&gt;The fastest implementations of said software&lt;/li&gt; &#xA; &lt;li&gt;Support multiple fileformats for dump files (BIN/EML/JSON)&lt;/li&gt; &#xA; &lt;li&gt;Interoperability of said fileformats with libnfc, MFC tool app etc&lt;/li&gt; &#xA; &lt;li&gt;Supports more RFID based protocols than ever&lt;/li&gt; &#xA; &lt;li&gt;Easy install for package maintainers, distro maintainers&lt;/li&gt; &#xA; &lt;li&gt;Supports cmake, make&lt;/li&gt; &#xA; &lt;li&gt;Builds without errors or warnings on more OS/platforms than ever&lt;/li&gt; &#xA; &lt;li&gt;Available as package on known distros like Gentoo, Kali, Termux, Macports, Homebrew&lt;/li&gt; &#xA; &lt;li&gt;Much more documentation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠ &lt;strong&gt;Note&lt;/strong&gt;: This is a bleeding edge repository. The maintainers actively is working out of this repository and will be periodically re-structuring the code to make it easier to comprehend, navigate, build, test, and contribute to, so &lt;strong&gt;DO expect significant changes to code layout on a regular basis&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;👉 &lt;strong&gt;Remember!&lt;/strong&gt; If you intend to contribute to the code, please read the &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/CONTRIBUTING.md&#34;&gt;coding style notes&lt;/a&gt; first. We usually merge your contributions fast since we do like the idea of getting a functionality in the Proxmark3 and weed out the bugs afterwards.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/wiki/Public-Roadmap&#34;&gt;public roadmap&lt;/a&gt; is an excellent start to read if you are interesting in contributing.&lt;/p&gt; &#xA;&lt;h2&gt;Supported operative systems&lt;/h2&gt; &#xA;&lt;p&gt;This repo compiles nicely on&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WSL1 on Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Proxspace environment &lt;a href=&#34;https://github.com/Gator96100/ProxSpace/releases&#34;&gt;release v3.10&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows/MinGW environment&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu, ParrotOS, Gentoo, Pentoo, Kali, NetHunter, Arch Linux, Fedora, Debian, Raspbian&lt;/li&gt; &#xA; &lt;li&gt;Android / Termux&lt;/li&gt; &#xA; &lt;li&gt;Mac OS X / Homebrew (or MacPorts, experimental) / Apple Silicon M1&lt;/li&gt; &#xA; &lt;li&gt;Docker container &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/secopsconsult/proxmark3&#34;&gt; Iceman repo based ubuntu 18.04 container &lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/iceman1001/proxmark3/&#34;&gt; Iceman fork based container v1.7 &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Precompiled binaries&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.proxmarkbuilds.org/&#34;&gt;Proxmark3 precompiled builds&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Proxmark3 GUI&lt;/h2&gt; &#xA;&lt;p&gt;The official PM3-GUI from Gaucho will not work. Not to mention is quite old and not maintained any longer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/burma69/PM3UniversalGUI&#34;&gt;Proxmark3 Universal GUI&lt;/a&gt; will work more or less.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wh201906/Proxmark3GUI/&#34;&gt;Proxmark3 GUI cross-compiled&lt;/a&gt; which is recently updated and claims to support latest source of this repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Phreak87/Proxmark3_GUI&#34;&gt;Proxmark3_GUI&lt;/a&gt; simple gui in vb.net&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Official channels&lt;/h2&gt; &#xA;&lt;p&gt;Where do you find the community?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/iceman&#34;&gt;RFID Hacking community discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.libera.chat/?channels=#proxmark3&#34;&gt;Proxmark3 IRC channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/proxmark3/&#34;&gt;Proxmark3 sub reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.proxmark.org/forum/index.php&#34;&gt;Proxmark3 forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;To all distro, package maintainers, we tried to make your life easier.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make install&lt;/code&gt; is now available and if you want to know more.&lt;/p&gt; &#xA;&lt;p&gt;This document will be helpful for you&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Development/Maintainers.md&#34;&gt;Notes for maintainers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;Use this bibtex to cite this repository globally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{proxmark3,&#xA;  author = {C. {Herrmann} and P. {Teuwen} and O. {Moiseenko} and M. {Walker} and others},&#xA;  title = {{Proxmark3 -- Iceman repo}},&#xA;  howpublished = {\url{https://github.com/RfidResearchGroup/proxmark3}},&#xA;  keywords = {rfid nfc iceman proxmark3 125khz 134khz 13.56mhz},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to refer to a specific state of the repository, use a commit number or a date of access, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  note = {Accessed: commit 12327f71a27da23831901847886aaf20e8ad3ca0}&#xA;  note = {Accessed: 2021-01-01}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copyright and licensing terms&lt;/h2&gt; &#xA;&lt;p&gt;Each contribution is under the copyright of its author. See &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/AUTHORS.md&#34;&gt;AUTHORS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Proxmark3 source code is covered by the following licensing terms, usually referred as &lt;strong&gt;GPLv3 or later&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A copy of the GPLv3 is available in &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some dependencies may be under other free licensing terms compatible with the Proxmark3 licensing terms, see their respective description.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>taosdata/TDengine</title>
    <updated>2022-06-04T02:06:35Z</updated>
    <id>tag:github.com,2022-06-04:/taosdata/TDengine</id>
    <link href="https://github.com/taosdata/TDengine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source time-series database with high-performance, scalability and SQL support. It can be widely used in IoT, Connected Vehicles, DevOps, Energy, Finance and other fields.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://cloud.drone.io/taosdata/TDengine&#34;&gt;&lt;img src=&#34;https://cloud.drone.io/api/badges/taosdata/TDengine/status.svg?ref=refs/heads/master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/sangshuduo/tdengine-2n8ge/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/kf3pwh2or5afsgl9/branch/master?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/taosdata/TDengine?branch=develop&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/taosdata/TDengine/badge.svg?branch=develop&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/4201&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/4201/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snapcraft.io/tdengine&#34;&gt;&lt;img src=&#34;https://snapcraft.io//tdengine/badge.svg?sanitize=true&#34; alt=&#34;tdengine&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.taosdata.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/taosdata/TDengine/develop/TDenginelogo.png&#34; alt=&#34;TDengine&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/taosdata/TDengine/develop/README-CN.md&#34;&gt;简体中文&lt;/a&gt; We are hiring, check &lt;a href=&#34;https://www.taosdata.com/en/careers/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is TDengine？&lt;/h1&gt; &#xA;&lt;p&gt;TDengine is a high-performance, scalable time-series database with SQL support. Its code including cluster feature is open source under &lt;a href=&#34;http://www.gnu.org/licenses/agpl-3.0.html&#34;&gt;GNU AGPL v3.0&lt;/a&gt;. Besides the database, it provides caching, stream processing, data subscription and other functionalities to reduce the complexity and cost of development and operation. TDengine differentiates itself from other TSDBs with the following advantages.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;High Performance&lt;/strong&gt;: TDengine outperforms other time series databases in data ingestion and querying while significantly reducing storage cost and compute costs, with an innovatively designed and purpose-built storage engine.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: TDengine provides out-of-box scalability and high-availability through its native distributed design. Nodes can be added through simple configuration to achieve greater data processing power. In addition, this feature is open source.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;SQL Support&lt;/strong&gt;: TDengine uses SQL as the query language, thereby reducing learning and migration costs, while adding SQL extensions to handle time-series data better, and supporting convenient and flexible schemaless data ingestion.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;All in One&lt;/strong&gt;: TDengine has built-in caching, stream processing and data subscription functions, it is no longer necessary to integrate Kafka/Redis/HBase/Spark or other software in some scenarios. It makes the system architecture much simpler and easy to maintain.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Seamless Integration&lt;/strong&gt;: Without a single line of code, TDengine provide seamless integration with third-party tools such as Telegraf, Grafana, EMQX, Prometheus, StatsD, collectd, etc. More will be integrated.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Zero Management&lt;/strong&gt;: Installation and cluster setup can be done in seconds. Data partitioning and sharding are executed automatically. TDengine’s running status can be monitored via Grafana or other DevOps tools.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Zero Learning Cost&lt;/strong&gt;: With SQL as the query language, support for ubiquitous tools like Python, Java, C/C++, Go, Rust, Node.js connectors, there is zero learning cost.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interactive Console&lt;/strong&gt;: TDengine provides convenient console access to the database to run ad hoc queries, maintain the database, or manage the cluster without any programming.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;TDengine can be widely applied to Internet of Things (IoT), Connected Vehicles, Industrial IoT, DevOps, energy, finance and many other scenarios.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;For user manual, system design and architecture, engineering blogs, refer to &lt;a href=&#34;https://www.taosdata.com/en/documentation/&#34;&gt;TDengine Documentation&lt;/a&gt;(中文版请点击&lt;a href=&#34;https://www.taosdata.com/cn/documentation20/&#34;&gt;这里&lt;/a&gt;) for details. The documentation from our website can also be downloaded locally from &lt;em&gt;documentation/tdenginedocs-en&lt;/em&gt; or &lt;em&gt;documentation/tdenginedocs-cn&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;p&gt;At the moment, TDengine server only supports running on Linux systems. You can choose to &lt;a href=&#34;https://www.taosdata.com/en/getting-started/#Install-from-Package&#34;&gt;install from packages&lt;/a&gt; or build it from the source code. This quick guide is for installation from the source only.&lt;/p&gt; &#xA;&lt;p&gt;To build TDengine, use &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; 3.0.2 or higher versions in the project directory.&lt;/p&gt; &#xA;&lt;h2&gt;Install build dependencies&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu 16.04 and above or Debian&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y gcc cmake build-essential git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 14.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y gcc cmake3 build-essential git binutils-2.26&#xA;export PATH=/usr/lib/binutils-2.26/bin:$PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To compile and package the JDBC driver source code, you should have a Java jdk-8 or higher and Apache Maven 2.7 or higher installed.&lt;/p&gt; &#xA;&lt;p&gt;To install openjdk-8:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y openjdk-8-jdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install Apache Maven:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y maven&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install build dependencies for taosTools&lt;/h4&gt; &#xA;&lt;p&gt;We provide a few useful tools such as taosBenchmark (was named taosdemo) and taosdump. They were part of TDengine. From TDengine 2.4.0.0, taosBenchmark and taosdump were not released together with TDengine. By default, TDengine compiling does not include taosTools. You can use &#39;cmake .. -DBUILD_TOOLS=true&#39; to make them be compiled with TDengine.&lt;/p&gt; &#xA;&lt;p&gt;To build the &lt;a href=&#34;https://github.com/taosdata/taos-tools&#34;&gt;taosTools&lt;/a&gt; on Ubuntu/Debian, the following packages need to be installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install build-essential libjansson-dev libsnappy-dev liblzma-dev libz-dev pkg-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install epel-release&#xA;sudo yum update&#xA;sudo yum install -y gcc gcc-c++ make cmake3 git&#xA;sudo ln -sf /usr/bin/cmake3 /usr/bin/cmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install openjdk-8:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install -y java-1.8.0-openjdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install Apache Maven:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install -y maven&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 8 &amp;amp; Fedora&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install -y gcc gcc-c++ make cmake epel-release git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install openjdk-8:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install -y java-1.8.0-openjdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install Apache Maven:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install -y maven&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install build dependencies for taosTools on CentOS&lt;/h4&gt; &#xA;&lt;p&gt;To build the &lt;a href=&#34;https://github.com/taosdata/taos-tools&#34;&gt;taosTools&lt;/a&gt; on CentOS, the following packages need to be installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install zlib-devel xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libstdc++-static&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Since snappy lacks pkg-config support (refer to &lt;a href=&#34;https://github.com/google/snappy/pull/86&#34;&gt;link&lt;/a&gt;), it lead a cmake prompt libsnappy not found. But snappy will works well.&lt;/p&gt; &#xA;&lt;h3&gt;Setup golang environment&lt;/h3&gt; &#xA;&lt;p&gt;TDengine includes few components developed by Go language. Please refer to golang.org official documentation for golang environment setup.&lt;/p&gt; &#xA;&lt;p&gt;Please use version 1.14+. For the user in China, we recommend using a proxy to accelerate package downloading.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go env -w GO111MODULE=on&#xA;go env -w GOPROXY=https://goproxy.cn,direct&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get the source codes&lt;/h2&gt; &#xA;&lt;p&gt;First of all, you may clone the source codes from github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/taosdata/TDengine.git&#xA;cd TDengine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The connectors for go &amp;amp; Grafana and some tools have been moved to separated repositories, so you should run this command in the TDengine directory to install them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can modify the file ~/.gitconfig to use ssh protocol instead of https for better download speed. You need to upload ssh public key to GitHub first. Please refer to GitHub official documentation for detail.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[url &#34;git@github.com:&#34;]&#xA;    insteadOf = https://github.com/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build TDengine&lt;/h2&gt; &#xA;&lt;h3&gt;On Linux platform&lt;/h3&gt; &#xA;&lt;p&gt;You can run the bash script &lt;code&gt;build.sh&lt;/code&gt; to build both TDengine and taosTools including taosBenchmark and taosdump as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It equals to execute following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive&#xA;mkdir debug&#xA;cd debug&#xA;cmake .. -DBUILD_TOOLS=true&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note TDengine 2.3.x.0 and later use a component named &#39;taosAdapter&#39; to play http daemon role by default instead of the http daemon embedded in the early version of TDengine. The taosAdapter is programmed by go language. If you pull TDengine source code to the latest from an existing codebase, please execute &#39;git submodule update --init --recursive&#39; to pull taosAdapter source code. Please install go language version 1.14 or above for compiling taosAdapter. If you meet difficulties regarding &#39;go mod&#39;, especially you are from China, you can use a proxy to solve the problem.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go env -w GO111MODULE=on&#xA;go env -w GOPROXY=https://goproxy.cn,direct&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The embedded http daemon still be built from TDengine source code by default. Or you can use the following command to choose to build taosAdapter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake .. -DBUILD_HTTP=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use Jemalloc as memory allocator instead of glibc:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install autoconf&#xA;cmake .. -DJEMALLOC_ENABLED=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;TDengine build script can detect the host machine&#39;s architecture on X86-64, X86, arm64, arm32 and mips64 platform. You can also specify CPUTYPE option like aarch64 or aarch32 too if the detection result is not correct:&lt;/p&gt; &#xA;&lt;p&gt;aarch64:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake .. -DCPUTYPE=aarch64 &amp;amp;&amp;amp; cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;aarch32:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake .. -DCPUTYPE=aarch32 &amp;amp;&amp;amp; cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;mips64:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake .. -DCPUTYPE=mips64 &amp;amp;&amp;amp; cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;On Windows platform&lt;/h3&gt; &#xA;&lt;p&gt;If you use the Visual Studio 2013, please open a command window by executing &#34;cmd.exe&#34;. Please specify &#34;amd64&#34; for 64 bits Windows or specify &#34;x86&#34; is for 32 bits Windows when you execute vcvarsall.bat.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;mkdir debug &amp;amp;&amp;amp; cd debug&#xA;&#34;C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat&#34; &amp;lt; amd64 | x86 &amp;gt;&#xA;cmake .. -G &#34;NMake Makefiles&#34;&#xA;nmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use the Visual Studio 2019 or 2017:&lt;/p&gt; &#xA;&lt;p&gt;please open a command window by executing &#34;cmd.exe&#34;. Please specify &#34;x64&#34; for 64 bits Windows or specify &#34;x86&#34; is for 32 bits Windows when you execute vcvarsall.bat.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;mkdir debug &amp;amp;&amp;amp; cd debug&#xA;&#34;c:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat&#34; &amp;lt; x64 | x86 &amp;gt;&#xA;cmake .. -G &#34;NMake Makefiles&#34;&#xA;nmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can simply open a command window by clicking Windows Start -&amp;gt; &#34;Visual Studio &amp;lt; 2019 | 2017 &amp;gt;&#34; folder -&amp;gt; &#34;x64 Native Tools Command Prompt for VS &amp;lt; 2019 | 2017 &amp;gt;&#34; or &#34;x86 Native Tools Command Prompt for VS &amp;lt; 2019 | 2017 &amp;gt;&#34; depends what architecture your Windows is, then execute commands as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;mkdir debug &amp;amp;&amp;amp; cd debug&#xA;cmake .. -G &#34;NMake Makefiles&#34;&#xA;nmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;On macOS platform&lt;/h3&gt; &#xA;&lt;p&gt;Please install XCode command line tools and cmake. Verified with XCode 11.4+ on Catalina and Big Sur.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir debug &amp;amp;&amp;amp; cd debug&#xA;cmake .. &amp;amp;&amp;amp; cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;h2&gt;On Linux platform&lt;/h2&gt; &#xA;&lt;p&gt;After building successfully, TDengine can be installed by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Users can find more information about directories installed on the system in the &lt;a href=&#34;https://www.taosdata.com/en/documentation/administrator/#Directory-and-Files&#34;&gt;directory and files&lt;/a&gt; section. Since version 2.0, installing from source code will also configure service management for TDengine. Users can also choose to &lt;a href=&#34;https://www.taosdata.com/en/getting-started/#Install-from-Package&#34;&gt;install from packages&lt;/a&gt; for it.&lt;/p&gt; &#xA;&lt;p&gt;To start the service after installation, in a terminal, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl start taosd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then users can use the &lt;a href=&#34;https://www.taosdata.com/en/getting-started/#TDengine-Shell&#34;&gt;TDengine shell&lt;/a&gt; to connect the TDengine server. In a terminal, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;taos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If TDengine shell connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown.&lt;/p&gt; &#xA;&lt;h3&gt;Install TDengine by apt-get&lt;/h3&gt; &#xA;&lt;p&gt;If you use Debian or Ubuntu system, you can use &#39;apt-get&#39; command to install TDengine from official repository. Please use following commands to setup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -qO - http://repos.taosdata.com/tdengine.key | sudo apt-key add -&#xA;echo &#34;deb [arch=amd64] http://repos.taosdata.com/tdengine-stable stable main&#34; | sudo tee /etc/apt/sources.list.d/tdengine-stable.list&#xA;[Optional] echo &#34;deb [arch=amd64] http://repos.taosdata.com/tdengine-beta beta main&#34; | sudo tee /etc/apt/sources.list.d/tdengine-beta.list&#xA;sudo apt-get update&#xA;apt-cache policy tdengine&#xA;sudo apt-get install tdengine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;On Windows platform&lt;/h2&gt; &#xA;&lt;p&gt;After building successfully, TDengine can be installed by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;nmake install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;On macOS platform&lt;/h2&gt; &#xA;&lt;p&gt;After building successfully, TDengine can be installed by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start the service after installation, config &lt;code&gt;.plist&lt;/code&gt; file first, in a terminal, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cp ../packaging/macOS/com.taosdata.tdengine.plist /Library/LaunchDaemons&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start the service, in a terminal, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo launchctl load /Library/LaunchDaemons/com.taosdata.tdengine.plist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To stop the service, in a terminal, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo launchctl unload /Library/LaunchDaemons/com.taosdata.tdengine.plist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Run&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t want to run TDengine as a service, you can run it in current shell. For example, to quickly start a TDengine server after building, run the command below in terminal: (We take Linux as an example, command on Windows will be &lt;code&gt;taosd.exe&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./build/bin/taosd -c test/cfg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In another terminal, use the TDengine shell to connect the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./build/bin/taos -c test/cfg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;option &#34;-c test/cfg&#34; specifies the system configuration file directory.&lt;/p&gt; &#xA;&lt;h1&gt;Try TDengine&lt;/h1&gt; &#xA;&lt;p&gt;It is easy to run SQL commands from TDengine shell which is the same as other SQL databases.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE DATABASE demo;&#xA;USE demo;&#xA;CREATE TABLE t (ts TIMESTAMP, speed INT);&#xA;INSERT INTO t VALUES(&#39;2019-07-15 00:00:00&#39;, 10);&#xA;INSERT INTO t VALUES(&#39;2019-07-15 01:00:00&#39;, 20);&#xA;SELECT * FROM t;&#xA;          ts          |   speed   |&#xA;===================================&#xA; 19-07-15 00:00:00.000|         10|&#xA; 19-07-15 01:00:00.000|         20|&#xA;Query OK, 2 row(s) in set (0.001700s)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Developing with TDengine&lt;/h1&gt; &#xA;&lt;h2&gt;Official Connectors&lt;/h2&gt; &#xA;&lt;p&gt;TDengine provides abundant developing tools for users to develop on TDengine. Follow the links below to find your desired connectors and relevant documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taosdata.com/en/documentation/connector/java&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taosdata.com/en/documentation/connector#c-cpp&#34;&gt;C/C++&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taosdata.com/en/documentation/connector#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taosdata.com/en/documentation/connector#go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taosdata.com/en/documentation/connector#restful&#34;&gt;RESTful API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taosdata.com/en/documentation/connector#nodejs&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.taosdata.com/en/documentation/connector/rust&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Third Party Connectors&lt;/h2&gt; &#xA;&lt;p&gt;The TDengine community has also kindly built some of their own connectors! Follow the links below to find the source code for them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/songtianyi/tdengine-rust-bindings/tree/master/examples&#34;&gt;Rust Bindings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maikebing/Maikebing.EntityFrameworkCore.Taos&#34;&gt;.Net Core Connector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taosdata/TDengine/tree/develop/tests/examples/lua&#34;&gt;Lua Connector&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to run the test cases and how to add a new test case&lt;/h1&gt; &#xA;&lt;p&gt;TDengine&#39;s test framework and all test cases are fully open source. Please refer to &lt;a href=&#34;https://github.com/taosdata/TDengine/raw/develop/tests/How-To-Run-Test-And-How-To-Add-New-Test-Case.md&#34;&gt;this document&lt;/a&gt; for how to run test and develop new test case.&lt;/p&gt; &#xA;&lt;h1&gt;TDengine Roadmap&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support event-driven stream computing&lt;/li&gt; &#xA; &lt;li&gt;Support user defined functions&lt;/li&gt; &#xA; &lt;li&gt;Support MQTT connection&lt;/li&gt; &#xA; &lt;li&gt;Support OPC connection&lt;/li&gt; &#xA; &lt;li&gt;Support Hadoop, Spark connections&lt;/li&gt; &#xA; &lt;li&gt;Support Tableau and other BI tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contribute to TDengine&lt;/h1&gt; &#xA;&lt;p&gt;Please follow the &lt;a href=&#34;https://raw.githubusercontent.com/taosdata/TDengine/develop/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; to contribute to the project.&lt;/p&gt; &#xA;&lt;h1&gt;Join TDengine WeChat Group&lt;/h1&gt; &#xA;&lt;p&gt;Add WeChat “tdengine” to join the group，you can communicate with other users.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/taosdata/TDengine/issues/2432&#34;&gt;User List&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;If you are using TDengine and feel it helps or you&#39;d like to do some contributions, please add your company to &lt;a href=&#34;https://github.com/taosdata/TDengine/issues/2432&#34;&gt;user list&lt;/a&gt; and let us know your needs.&lt;/p&gt;</summary>
  </entry>
</feed>