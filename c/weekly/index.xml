<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-05T01:48:30Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lmarzen/esp32-weather-epd</title>
    <updated>2023-03-05T01:48:30Z</updated>
    <id>tag:github.com,2023-03-05:/lmarzen/esp32-weather-epd</id>
    <link href="https://github.com/lmarzen/esp32-weather-epd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A low-power E-Paper weather display powered by an ESP32 microcontroller. Utilizes the OpenWeatherMap API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESP32 E-Paper Weather Display&lt;/h1&gt; &#xA;&lt;p&gt;This is a weather display powered by a wifi-enabled ESP32 microcontroller and a 7.5in E-Paper (aka E-ink) display. Current and forecasted weather data is obtained from the OpenWeatherMap API. A sensor provides the display with accurate indoor temperature and humidity.&lt;/p&gt; &#xA;&lt;p&gt;The project draws ~14μA when sleeping and an estimated average of ~83mA during its ~10s wake period. The display can be configured to update as frequently as desired. When the refresh interval is set to 30 minutes, the device will run for &amp;gt;6 months on a single 5000mAh battery. The project displays accurate battery life percentage and can be recharged via a USB-C cable connected to a wall adapter or computer.&lt;/p&gt; &#xA;&lt;p&gt;There are configuration options for everything from location, time/date formats, units, and language to air quality index scale and hourly outlook graph bounds.&lt;/p&gt; &#xA;&lt;p&gt;The hourly outlook graph (bottom right) shows a line indicating temperature and shaded bars indicating probability of precipitation.&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-raleigh-front.jpg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-raleigh-side.jpg&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-raleigh-back.jpg&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-bottom-cover.jpg&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/assembled-demo-bottom-cover-removed.jpg&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;I made a small stand by hollowing out a piece of wood from the bottom. On the back, I used a short USB extension cable so that I can charge the battery without needing to remove the components from the stand. I also wired a small reset button to refresh the display manually. Additionally, I 3d printed a cover for the bottom, which is held on by magnets. The E-paper screen is very thin, so I used a thin piece of acrylic to support it.&lt;/p&gt; &#xA;&lt;p&gt;Here are two examples utilizing various configuration options:&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-new-york.jpg&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-london.jpg&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Setup Guide&lt;/h2&gt; &#xA;&lt;h3&gt;Hardware&lt;/h3&gt; &#xA;&lt;p&gt;7.5inch (800×480) E-Ink Display w/ HAT for Raspberry Pi, SPI interface&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Advantages of E-Paper&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ultra Low Power Consumption - E-Paper (or E-Ink) displays are ideal for low-power applications that do not require frequent display refreshes. E-Paper displays only draw power when refreshing the display and do not have a backlight. Images will remain on the screen even when power is removed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Limitations of E-Paper:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Colors - E-Paper has traditionally been limited to just black and white, but in recent years 3-color E-Paper screens have started showing up.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Refresh Times and Ghosting - E-Paper displays are highly susceptible to ghosting effects if refreshed too quickly. To avoid this, E-Paper displays often take a few seconds to refresh(4s for the unit used in this project) and will alternate between black and white a few times, which can be distracting.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.waveshare.com/product/7.5inch-e-paper-hat.htm&#34;&gt;https://www.waveshare.com/product/7.5inch-e-paper-hat.htm&lt;/a&gt; (800x480, 7.5inch E-Ink display, Black/White)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note that this project also now supports this 3-color panel as well, though the program will only draw black/white to the screen. &lt;a href=&#34;https://www.waveshare.com/product/7.5inch-e-paper-hat-b.htm&#34;&gt;https://www.waveshare.com/product/7.5inch-e-paper-hat-b.htm&lt;/a&gt; (800x480, 7.5inch E-Ink display, Red/Black/White)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;FireBeetle 2 ESP32-E Microcontroller&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Why the ESP32?&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Onboard WiFi.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;520kB of RAM and 4MB of FLASH, enough to store lots of icons and fonts.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Low power consumption.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Small size, many small development boards available.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Why the FireBeetle 2 ESP32-E&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Drobot&#39;s FireBeetle ESP32 models are optimized for low-power consumption (&lt;a href=&#34;https://diyi0t.com/reduce-the-esp32-power-consumption/&#34;&gt;https://diyi0t.com/reduce-the-esp32-power-consumption/&lt;/a&gt;). The Drobot&#39;s FireBeetle 2 ESP32-E variant offers USB-C, but older versions of the board with Mirco-USB would work fine too.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Firebeelte ESP32 models include onboard charging circuitry for a 3.7v lithium-ion(LiPo) battery.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;FireBeetle ESP32 models include onboard circuitry to monitor battery voltage of a battery connected to its JST-PH2.0 connector.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.dfrobot.com/product-2195.html&#34;&gt;https://www.dfrobot.com/product-2195.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;BME280 - Pressure, Temperature, and Humidity Sensor&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Provides accurate indoor temperature and humidity.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Much faster than the DHT22, which requires a 2-second wait before reading temperature and humidity samples.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;3.7V Lipo Battery w/ 2 Pin JST Connector&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Size is up to you. I used a 10000mah battery so that the device can operate on a single charge for &amp;gt;1 year.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The battery can be charged by plugging the FireBeetle ESP32 into the wall via the USB-C connector while the battery is plugged into the ESP32&#39;s JST connector.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; The polarity of JST-PH2.0 connectors is not standardized! You may need to swap the order of the wires in the connector.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Wiring&lt;/h3&gt; &#xA;&lt;p&gt;Pin connections are defined in config.cpp.&lt;/p&gt; &#xA;&lt;p&gt;If you are using the FireBeetle 2 ESP32-E, you can use the connections I used or change them how you would like.&lt;/p&gt; &#xA;&lt;p&gt;IMPORTANT: The E-Paper Driver Hat has two physical switches that MUST be set correctly for the display to work.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Display Config: Set switch to position B.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Interface Config: Set switch to position 0.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cut the low power pad for even longer battery life.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;From &lt;a href=&#34;https://wiki.dfrobot.com/FireBeetle_Board_ESP32_E_SKU_DFR0654&#34;&gt;https://wiki.dfrobot.com/FireBeetle_Board_ESP32_E_SKU_DFR0654&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Low Power Pad: This pad is specially designed for low power consumption. It is connected by default. You can cut off the thin wire in the middle with a knife to disconnect it. After disconnection, the static power consumption can be reduced by 500 μA. The power consumption can be reduced to 13 μA after controlling the maincontroller enter the sleep mode through the program. Note: when the pad is disconnected, you can only drive RGB LED light via the USB Power supply.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/wiring_diagram.png&#34; alt=&#34;Wiring Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-tucson.jpg&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Configuration, Compilation, and Upload&lt;/h3&gt; &#xA;&lt;p&gt;PlatformIO for VSCode is used for managing dependencies, code compilation, and uploading to ESP32.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository or download and extract the .zip.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install VSCode.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow these instructions to install the PlatformIO extension for VSCode: &lt;a href=&#34;https://platformio.org/install/ide?install=vscode&#34;&gt;https://platformio.org/install/ide?install=vscode&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the project in VSCode.&lt;/p&gt; &lt;p&gt;a. File &amp;gt; Open Folder...&lt;/p&gt; &lt;p&gt;b. Navigate to this project and select the folder called &#34;platformio&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure Options.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Most configuration options are located in config.cpp, with a few in config.h. Locale/language options can also be found in locales/locale_**.cpp.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Important settings to configure in config.cpp:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;WiFi credentials (ssid, password).&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Open Weather Map API key (it&#39;s free, see next section for important notes about obtaining an API key).&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Latitude and longitude.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Time and date formats.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Sleep duration.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Pin connections for E-Paper (SPI), BME280 (I2C), and battery voltage (ADC).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Important settings to configure in config.h:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Units (Metric or Imperial).&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Comments explain each option in detail.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and Upload Code.&lt;/p&gt; &lt;p&gt;a. Connect ESP32 to your computer via USB.&lt;/p&gt; &lt;p&gt;b. Click the upload arrow along the bottom of the VSCode window. (Should say &#34;PlatformIO: Upload&#34; if you hover over it.)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;PlatformIO will automatically download the required third-party libraries, compile, and upload the code. :)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;You will only see this if you have the PlatformIO extension installed.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If you are getting errors during the upload process, you may need to install drivers to allow you to upload code to the ESP32.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;OpenWeatherMap API Key&lt;/h3&gt; &#xA;&lt;p&gt;Sign up here to get an API key; it&#39;s free. &lt;a href=&#34;https://openweathermap.org/api&#34;&gt;https://openweathermap.org/api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project will make calls to 2 different APIs (&#34;One Call&#34; and &#34;Air Pollution&#34;).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; OpenWeatherMap One Call 2.5 API has been deprecated for all new free users (accounts created after Summer 2022). Fortunately, you can make 1,000 calls/day to the One Call 3.0 API for free by following the steps below.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have an account created before Summer 2022, you can simply use the One Call 2.5 API by changing &lt;code&gt;OWM_ONECALL_VERSION = &#34;2.5&#34;;&lt;/code&gt; in config.cpp.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Otherwise, the One Call API 3.0 is only included in the &#34;One Call by Call&#34; subscription. This separate subscription includes 1,000 calls/day for free and allows you to pay only for the number of API calls made to this product.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s how to subscribe and avoid any credit card changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://home.openweathermap.org/subscriptions/billing_info/onecall_30/base?key=base&amp;amp;service=onecall_30&#34;&gt;https://home.openweathermap.org/subscriptions/billing_info/onecall_30/base?key=base&amp;amp;service=onecall_30&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the instructions to complete the subscription.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://home.openweathermap.org/subscriptions&#34;&gt;https://home.openweathermap.org/subscriptions&lt;/a&gt; and set the &#34;Calls per day (no more than)&#34; to 1,000. This ensures you will never overrun the free calls.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Error Messages and Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Low Battery&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-error-low-battery.jpg&#34; align=&#34;left&#34; width=&#34;25%&#34;&gt; This error screen appears once the battery voltage has fallen below LOW_BATTERY_VOLTAGE (default = 3.20v). The display will not refresh again until it detects battery voltage above LOW_BATTERY_VOLTAGE. When battery voltage is between LOW_BATTERY_VOLTAGE and VERY_LOW_BATTERY_VOLTAGE (default = 3.10v) the esp32 will deep-sleep for periods of LOW_BATTERY_SLEEP_INTERVAL (default = 30min) before checking battery voltage again. If the battery voltage falls below CRIT_LOW_BATTERY_VOLTAGE then the display will deep-sleep for periods VERY_LOW_BATTERY_SLEEP_INTERVAL (default = 120min). If battery voltage falls to CRIT_LOW_BATTERY_VOLTAGE (default = 3.00v) then the esp32 will enter hibernate mode and will require a manual push of the reset (RST) button to begin updating again. &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h3&gt;WiFi Connection&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-error-wifi.jpg&#34; align=&#34;left&#34; width=&#34;25%&#34;&gt; This error screen appears when the ESP32 fails to connect to WiFi. If the message reads &#34;WiFi Connection Failed&#34; this might indicate an incorrect password. If the message reads &#34;SSID Not Available&#34; this might indicate that you mistyped the SSID or that the esp32 is out of the range of the access point. The esp32 will retry once every SLEEP_DURATION (default = 30min). &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h3&gt;API Error&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-error-api.jpg&#34; align=&#34;left&#34; width=&#34;25%&#34;&gt; This error screen appears if an error (client or server) occurs when making an API request to OpenWeatherMap. The second line will give the error code followed by a descriptor phrase. Positive error codes correspond to HTTP response status codes, while error codes &amp;lt;= 0 indicate a client(esp32) error. The esp32 will retry once every SLEEP_DURATION (default = 30min). &#xA;&lt;br&gt;&#xA;&lt;br&gt; In the example shown to the left, &#34;401: Unauthorized&#34; may be the result of an incorrect API key or that you are attempting to use the One Call v3 API without the proper account setup. &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h3&gt;Time Server Error&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/showcase/demo-error-time.jpg&#34; align=&#34;left&#34; width=&#34;25%&#34;&gt; This error screen appears when the esp32 fails to fetch the time from NTP_SERVER_1/NTP_SERVER_2. This error sometimes occurs immediately after uploading to the esp32; in this case, just hit the reset button or wait for SLEEP_DURATION (default = 30min) and the esp32 to automatically retry. &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;My work is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt; with tools, fonts, and icons whose licenses are as follows:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;License&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gnu.org/software/freefont/&#34;&gt;GNU FreeFont: FreeSans&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gnu.org/software/freefont/license.html&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenType Font (.otf)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit-GFX-Library/tree/master/fontconvert&#34;&gt;Adafruit-GFX-Library: fontconvert&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/fonts/fontconvert/license.txt&#34;&gt;BSD License&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CLI tool for preprocessing fonts to be used with the Adafruit_GFX Arduino library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lmarzen/pollutant-concentration-to-aqi&#34;&gt;pollutant-concentration-to-aqi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/platformio/lib/pollutant-concentration-to-aqi/LICENSE&#34;&gt;GNU Lesser General Public License v2.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C library that converts pollutant concentrations to Air Quality Index(AQI).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/erikflowers/weather-icons&#34;&gt;Weather Icons&lt;/a&gt; (&#39;wi-**.svg&#39;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL OFL 1.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The vast majority of the icons used in this project.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Other Icons (.svg)&lt;/td&gt; &#xA;   &lt;td&gt;Varies, please see &lt;a href=&#34;https://raw.githubusercontent.com/lmarzen/esp32-weather-epd/main/icons/README&#34;&gt;icons/README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Other icons were collected from many different sources (too many to list here)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>pymumu/smartdns</title>
    <updated>2023-03-05T01:48:30Z</updated>
    <id>tag:github.com,2023-03-05:/pymumu/smartdns</id>
    <link href="https://github.com/pymumu/smartdns" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A local DNS server to obtain the fastest website IP for the best Internet experience, support DoT, DoH. 一个本地DNS服务器，获取最快的网站IP，获得最佳上网体验，支持DoH，DoT。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SmartDNS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/ReadMe_en.md&#34;&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/smartdns-banner.png&#34; alt=&#34;SmartDNS&#34;&gt; SmartDNS 是一个运行在本地的 DNS 服务器，它接受来自本地客户端的 DNS 查询请求，然后从多个上游 DNS 服务器获取 DNS 查询结果，并将访问速度最快的结果返回给客户端，以此提高网络访问速度。 SmartDNS 同时支持指定特定域名 IP 地址，并高性匹配，可达到过滤广告的效果; 支持DOT(DNS over TLS)和DOH(DNS over HTTPS)，更好的保护隐私。 与 DNSmasq 的 all-servers 不同，SmartDNS 返回的是访问速度最快的解析结果。详细差异请看&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;常见问题&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;支持树莓派、OpenWrt、华硕路由器原生固件和 Windows 系统等。&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#smartdns&#34;&gt;SmartDNS&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E7%9B%AE%E5%BD%95&#34;&gt;目录&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E8%BD%AF%E4%BB%B6%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA&#34;&gt;软件效果展示&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E7%89%B9%E6%80%A7&#34;&gt;特性&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E6%9E%B6%E6%9E%84&#34;&gt;架构&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E4%B8%8B%E8%BD%BD&#34;&gt;下载&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E4%BD%BF%E7%94%A8%E5%AE%98%E6%96%B9%E5%AE%89%E8%A3%85%E6%BA%90&#34;&gt;使用官方安装源&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E6%89%8B%E5%B7%A5%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85&#34;&gt;手工下载安装&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8&#34;&gt;安装和使用&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E6%A0%87%E5%87%86-linux-%E7%B3%BB%E7%BB%9F--%E6%A0%91%E8%8E%93%E6%B4%BE&#34;&gt;标准 Linux 系统 / 树莓派&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#openwrt&#34;&gt;OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8E%9F%E7%94%9F%E5%9B%BA%E4%BB%B6--%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6&#34;&gt;华硕路由器原生固件 / 梅林固件&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#optware--entware&#34;&gt;Optware / Entware&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#wsl&#34;&gt;WSL&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E&#34;&gt;配置文件说明&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;常见问题&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E7%BC%96%E8%AF%91&#34;&gt;编译&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E6%8D%90%E8%B5%A0&#34;&gt;捐赠&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#paypal-%E8%B4%9D%E5%AE%9D&#34;&gt;PayPal 贝宝&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#alipay-%E6%94%AF%E4%BB%98%E5%AE%9D&#34;&gt;AliPay 支付宝&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#wechat-pay-%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98&#34;&gt;WeChat Pay 微信支付&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%BC%80%E6%BA%90%E5%A3%B0%E6%98%8E&#34;&gt;开源声明&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;软件效果展示&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;阿里 DNS&lt;/strong&gt;&lt;br&gt; 使用阿里 DNS 查询百度IP，并检测结果。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup www.baidu.com 223.5.5.5&#xA;Server:         223.5.5.5&#xA;Address:        223.5.5.5#53&#xA;&#xA;Non-authoritative answer:&#xA;www.baidu.com   canonical name = www.a.shifen.com.&#xA;Name:   www.a.shifen.com&#xA;Address: 180.97.33.108&#xA;Name:   www.a.shifen.com&#xA;Address: 180.97.33.107&#xA;&#xA;$ ping 180.97.33.107 -c 2&#xA;PING 180.97.33.107 (180.97.33.107) 56(84) bytes of data.&#xA;64 bytes from 180.97.33.107: icmp_seq=1 ttl=55 time=24.3 ms&#xA;64 bytes from 180.97.33.107: icmp_seq=2 ttl=55 time=24.2 ms&#xA;&#xA;--- 180.97.33.107 ping statistics ---&#xA;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&#xA;rtt min/avg/max/mdev = 24.275/24.327/24.380/0.164 ms&#xA;pi@raspberrypi:~/code/smartdns_build $ ping 180.97.33.108 -c 2&#xA;PING 180.97.33.108 (180.97.33.108) 56(84) bytes of data.&#xA;64 bytes from 180.97.33.108: icmp_seq=1 ttl=55 time=31.1 ms&#xA;64 bytes from 180.97.33.108: icmp_seq=2 ttl=55 time=31.0 ms&#xA;&#xA;--- 180.97.33.108 ping statistics ---&#xA;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&#xA;rtt min/avg/max/mdev = 31.014/31.094/31.175/0.193 ms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;SmartDNS&lt;/strong&gt;&lt;br&gt; 使用 SmartDNS 查询百度 IP，并检测结果。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup www.baidu.com&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;www.baidu.com   canonical name = www.a.shifen.com.&#xA;Name:   www.a.shifen.com&#xA;Address: 14.215.177.39&#xA;&#xA;$ ping 14.215.177.39 -c 2&#xA;PING 14.215.177.39 (14.215.177.39) 56(84) bytes of data.&#xA;64 bytes from 14.215.177.39: icmp_seq=1 ttl=56 time=6.31 ms&#xA;64 bytes from 14.215.177.39: icmp_seq=2 ttl=56 time=5.95 ms&#xA;&#xA;--- 14.215.177.39 ping statistics ---&#xA;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&#xA;rtt min/avg/max/mdev = 5.954/6.133/6.313/0.195 ms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;从对比看出，SmartDNS 找到了访问 &lt;a href=&#34;http://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt; 最快的 IP 地址，比阿里 DNS 速度快了 5 倍。&lt;/p&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;多 DNS 上游服务器&lt;/strong&gt;&lt;br&gt; 支持配置多个上游 DNS 服务器，并同时进行查询，即使其中有 DNS 服务器异常，也不会影响查询。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;返回最快 IP 地址&lt;/strong&gt;&lt;br&gt; 支持从域名所属 IP 地址列表中查找到访问速度最快的 IP 地址，并返回给客户端，提高网络访问速度。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持多种查询协议&lt;/strong&gt;&lt;br&gt; 支持 UDP、TCP、DOT 和 DOH 查询，以及非 53 端口查询；支持通过socks5，HTTP代理查询。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;特定域名 IP 地址指定&lt;/strong&gt;&lt;br&gt; 支持指定域名的 IP 地址，达到广告过滤效果、避免恶意网站的效果。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;域名高性能后缀匹配&lt;/strong&gt;&lt;br&gt; 支持域名后缀匹配模式，简化过滤配置，过滤 20 万条记录时间 &amp;lt; 1ms。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;域名分流&lt;/strong&gt;&lt;br&gt; 支持域名分流，不同类型的域名向不同的 DNS 服务器查询，支持iptable和nftable更好的分流；支持测速失败的情况下设置域名结果到对应ipset和nftset集合。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows / Linux 多平台支持&lt;/strong&gt;&lt;br&gt; 支持标准 Linux 系统（树莓派）、OpenWrt 系统各种固件和华硕路由器原生固件。同时还支持 WSL（Windows Subsystem for Linux，适用于 Linux 的 Windows 子系统）。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持 IPv4、IPv6 双栈&lt;/strong&gt;&lt;br&gt; 支持 IPv4 和 IPV 6网络，支持查询 A 和 AAAA 记录，支持双栈 IP 速度优化，并支持完全禁用 IPv6 AAAA 解析。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持DNS64&lt;/strong&gt;&lt;br&gt; 支持DNS64转换。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;高性能、占用资源少&lt;/strong&gt;&lt;br&gt; 多线程异步 IO 模式，cache 缓存查询结果。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;主流系统官方支持&lt;/strong&gt;&lt;br&gt; 主流路由系统官方软件源安装smartdns。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;架构&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pymumu/test/releases/download/blob/architecture.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;SmartDNS 接收本地网络设备的DNS 查询请求，如 PC、手机的查询请求；&lt;/li&gt; &#xA; &lt;li&gt;然后将查询请求发送到多个上游 DNS 服务器，可支持 UDP 标准端口或非标准端口查询，以及 TCP 查询；&lt;/li&gt; &#xA; &lt;li&gt;上游 DNS 服务器返回域名对应的服务器 IP 地址列表，SmartDNS 则会检测从本地网络访问速度最快的服务器 IP；&lt;/li&gt; &#xA; &lt;li&gt;最后将访问速度最快的服务器 IP 返回给本地客户端。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;h3&gt;使用官方安装源&lt;/h3&gt; &#xA;&lt;p&gt;smartdns已经合入主流系统的软件仓库，可以直接使用系统安装命令直接安装。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;系统&lt;/th&gt; &#xA;   &lt;th&gt;安装方式&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openwrt&lt;/td&gt; &#xA;   &lt;td&gt;opkg update&lt;br&gt;opkg install luci-app-smartdns&lt;br&gt;opkg install smartdns&lt;/td&gt; &#xA;   &lt;td&gt;22.03之后的系统。软件源路径：&lt;a href=&#34;https://downloads.openwrt.org/releases/&#34;&gt;https://downloads.openwrt.org/releases/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ddwrt&lt;/td&gt; &#xA;   &lt;td&gt;官方最新固件service页面-&amp;gt;SmartDNS Resolver-&amp;gt;启用。&lt;/td&gt; &#xA;   &lt;td&gt;选择界面参考：&lt;a href=&#34;https://forum.dd-wrt.com/demo/Services.html&#34;&gt;https://forum.dd-wrt.com/demo/Services.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;debian&lt;/td&gt; &#xA;   &lt;td&gt;apt-get install smartdns&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;entware&lt;/td&gt; &#xA;   &lt;td&gt;ipkg update&lt;br&gt;ipkg install smartdns&lt;/td&gt; &#xA;   &lt;td&gt;软件源路径：&lt;a href=&#34;https://bin.entware.net/&#34;&gt;https://bin.entware.net/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;手工下载安装&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;下载对应系统或固件版本的 SmartDNS 安装包，对应关系如下。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;支持系统（架构）&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;安装包&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;支持说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 Linux 系统（ARM）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.arm-debian-all.deb&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARM 的树莓派 Raspbian Stretch 和 Debian 9 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 Linux 系统（ARM64）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.aarch64-debian-all.deb&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARM64 的 Debian Stretch 和 Debian 9 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 Linux 系统（x86_64）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.x86_64-linux-all.tar.gz&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;64 位 Linux 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 Linux 系统（x86）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.x86-linux-all.tar.gz&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;32 位 Linux 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;WSL&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.x86_64-linux-all.tar.gz&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;WSL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Optware&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.mips-optware-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MIPS 大端架构的 Optware 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Optware（MIPS Little Endian）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.mipsel-optware-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MIPS 小端架构的 Optware 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Optware（ARM）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.arm-optware-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARM 小端架构的 Optware 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt（MIPS）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.mips-openwrt-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MIPS 大端架构的 OpenWrt 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt（MIPS Little Endian）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.mipsel-openwrt-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MIPS 小端架构的 OpenWrt 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt（ARM）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.arm-openwrt-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARM 小端架构的 OpenWrt 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt LuCI&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;luci-app-smartdns.1.yyyy.MM.dd-REL.all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt 管理界面&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt LuCI&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;luci-app-smartdns.1.yyyy.MM.dd-REL.all-luci-compat-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt 管理界面、OpenWrt 18.xx 及之前版本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns-rs &lt;a href=&#34;https://github.com/mokeyish/smartdns-rs&#34;&gt;https://github.com/mokeyish/smartdns-rs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rust版本SmartDNS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MacOS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns-rs &lt;a href=&#34;https://github.com/mokeyish/smartdns-rs&#34;&gt;https://github.com/mokeyish/smartdns-rs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rust版本SmartDNS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pymumu/smartdns/releases&#34;&gt;前往 Release 页面下载&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;请注意：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Release 释出的软件包采取静态编译，无外部依赖，但体积大。若需要小体积软件包，请自行编译或从 OpenWrt / Entware 仓库获取。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;静态编译的软件包未强制判断 CPU 架构，安装不正确的软件包将会导致服务无法启动，请确保正确安装对应的版本。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装和使用&lt;/h2&gt; &#xA;&lt;h3&gt;标准 Linux 系统 / 树莓派&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;安装&lt;/p&gt; &lt;p&gt;下载配套安装包，并上传到 Linux 系统中。&lt;/p&gt; &lt;p&gt;标准 Linux 系统（X86 / X86_64）请执行如下命令安装：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tar zxf smartdns.1.yyyy.MM.dd-REL.x86_64-linux-all.tar.gz&#xA;cd smartdns&#xA;chmod +x ./install&#xA;./install -i&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;树莓派或其他 Debian 系系统（ARM / ARM64）请执行如下命令安装：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dpkg -i smartdns.1.yyyy.MM.dd-REL.arm-debian-all.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;对于Ubuntu系统：&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;systemd-resolved&lt;/code&gt;会占用TCP53和UDP53端口。你需要手动解决端口占用问题或者修改smartdns监听端口&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;日志文件在&lt;code&gt;/var/log/smartdns/smartdns.log&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置&lt;/p&gt; &lt;p&gt;安装完成后，可配置 SmartDNS 的上游服务器信息。&lt;/p&gt; &lt;p&gt;一般情况下，只需要增加 &lt;code&gt;server&lt;/code&gt;[&lt;code&gt;IP&lt;/code&gt;]&lt;code&gt;:port&lt;/code&gt; 和 &lt;code&gt;server-tcp&lt;/code&gt;[&lt;code&gt;IP&lt;/code&gt;]&lt;code&gt;:port&lt;/code&gt; 配置项。&lt;/p&gt; &lt;p&gt;请尽可能配置多个上游 DNS 服务器，包括国内外的服务器。&lt;/p&gt; &lt;p&gt;具体配置参数请参考&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E&#34;&gt;配置文件说明&lt;/a&gt;。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vi /etc/smartdns/smartdns.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;/etc/smartdns/smartdns.conf&lt;/code&gt;配置包含如下基本内容：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 指定监听的端口号&#xA;bind []:53 &#xA;# 指定上游服务器&#xA;server 1.1.1.1&#xA;server-tls 8.8.8.8&#xA;# 指定域名规则&#xA;address /example.com/1.2.3.4&#xA;domain-rule /example.com/ -address 1.2.3.4&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动服务&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;systemctl enable smartdns&#xA;systemctl start smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;将 DNS 请求转发到 SmartDNS 解析&lt;/p&gt; &lt;p&gt;修改本地路由器的 DNS 服务器，将 DNS 服务器配置为 SmartDNS。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;登录到本地网络的路由器中，配置树莓派，分配其静态 IP 地址。&lt;/li&gt; &#xA;   &lt;li&gt;修改 WAN 口或者 DHCP DNS 为树莓派 IP 地址。 &lt;strong&gt;注意：&lt;/strong&gt; I. 每款路由器配置方法不尽相同，请在网络上搜索对应配置方法。 II. 华为等路由器可能不支持配置 DNS 为本地 IP，可修改电脑端或手机端的 DNS 服务器为树莓派 IP。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;检测服务是否配置成功&lt;/p&gt; &lt;p&gt;执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;OpenWrt&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;安装&lt;/p&gt; &lt;p&gt;将软件包（使用 WinSCP 等）上传到路由器的 &lt;code&gt;/root&lt;/code&gt; 目录，执行如下命令安装&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;opkg install smartdns.1.yyyy.MM.dd-REL.xxxx.ipk&#xA;opkg install luci-app-smartdns.1.yyyy.MM.dd-REL.all.ipk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;注意：&lt;/strong&gt; 19.07 之前的版本，请务必安装 &lt;code&gt;luci-app-smartdns.1.yyyy.MM.dd-REL.all-luci-compat-all.ipk&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置&lt;/p&gt; &lt;p&gt;登录 OpenWrt 管理页面，打开 &lt;code&gt;Services&lt;/code&gt; -&amp;gt; &lt;code&gt;SmartDNS&lt;/code&gt; 进行配置。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;在 &lt;code&gt;Upstream Servers&lt;/code&gt; 增加上游 DNS 服务器配置，建议配置多个国内外 DNS 服务器。&lt;/li&gt; &#xA;   &lt;li&gt;在 &lt;code&gt;Domain Address&lt;/code&gt; 指定特定域名的 IP 地址，可用于广告屏蔽。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启用服务&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;替换默认Dnsmasq为主DNS。&lt;/p&gt; &lt;p&gt;登录 OpenWrt 管理界面，点击 &lt;code&gt;Services&lt;/code&gt; -&amp;gt; &lt;code&gt;SmartDNS&lt;/code&gt; -&amp;gt; &lt;code&gt;port&lt;/code&gt;，设置端口号为&lt;code&gt;53&lt;/code&gt;，smartdns会自动接管主DNS服务器。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;检测转发服务是否配置成功&lt;/p&gt; &lt;p&gt;执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;   &#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动服务&lt;/p&gt; &lt;p&gt;勾选配置页面中的 &lt;code&gt;Enable（启用）&lt;/code&gt;来启动 SmartDNS。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;如已经安装 ChinaDNS，建议将 ChinaDNS 的上游配置为 SmartDNS。&lt;/li&gt; &#xA;   &lt;li&gt;当smartdns的端口为53时，将自动接管dnsmasq为主dns。配置其他端口时，会重新启用dnsmasq为主dns。&lt;/li&gt; &#xA;   &lt;li&gt;若在此过程中发生异常，可使用如下命令还原dnsmasq为主DNS&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;uci delete dhcp.@dnsmasq[0].port&#xA;uci commit dhcp&#xA;/etc/init.d/dnsmasq restart&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;华硕路由器原生固件 / 梅林固件&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt; 梅林固件派生自华硕固件，理论上可以直接使用华硕配套的安装包使用。但目前未经验证，如有问题，请提交 Issue。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;准备&lt;/p&gt; &lt;p&gt;在使用此软件时，需要确认路由器是否支持 U 盘，并准备好 U 盘一个。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启用 SSH 登录&lt;/p&gt; &lt;p&gt;登录管理界面，点击 &lt;code&gt;系统管理&lt;/code&gt; -&amp;gt; &lt;code&gt;系统设置&lt;/code&gt;，配置 &lt;code&gt;Enable SSH&lt;/code&gt; 为 &lt;code&gt;Lan Only&lt;/code&gt;。&lt;br&gt; SSH 登录用户名密码与管理界面相同。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载 &lt;code&gt;Download Master&lt;/code&gt;&lt;/p&gt; &lt;p&gt;在管理界面点击 &lt;code&gt;USB 相关应用&lt;/code&gt; -&amp;gt; &lt;code&gt;Download Master&lt;/code&gt; 下载。&lt;br&gt; 下载完成后，启用 &lt;code&gt;Download Master&lt;/code&gt;，如果不需要下载功能，此时可以卸载 &lt;code&gt;Download Master&lt;/code&gt;，但要保证卸载前 &lt;code&gt;Download Master&lt;/code&gt; 是启用的。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 SmartDNS&lt;/p&gt; &lt;p&gt;将软件包（使用 WinSCP 等）上传到路由器的 &lt;code&gt;/tmp/mnt/sda1&lt;/code&gt; 目录（或网上邻居复制到 sda1 共享目录），执行如下命令安装&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ipkg install smartdns.1.yyyy.MM.dd-REL.mipsbig.ipk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重启路由器使服务生效&lt;/p&gt; &lt;p&gt;待路由器启动后， 执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;额外说明&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;上述过程，SmartDNS 将安装到 U 盘根目录，采用 Optware 的模式运行。 其目录结构如下（此处仅列出 SmartDNS 相关文件）：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;U 盘&#xA;└── asusware.mipsbig&#xA;        ├── bin&#xA;        ├── etc&#xA;        |    ├── smartdns&#xA;        |    |     └── smartdns.conf&#xA;        |    └── init.d&#xA;        |          └── S50smartdns&#xA;        ├── lib&#xA;        ├── sbin&#xA;        ├── usr&#xA;        |    └── sbin&#xA;        |          └── smartdns&#xA;        ....&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;如要修改配置，可以 SSH 登录路由器，使用 vi 命令修改&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vi /opt/etc/smartdns/smartdns.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;/opt/etc/smartdns/smartdns.conf&lt;/code&gt;配置包含如下基本内容：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 指定监听的端口号&#xA;bind []:53 &#xA;# 指定上游服务器&#xA;server 1.1.1.1&#xA;server-tls 8.8.8.8&#xA;# 指定域名规则&#xA;address /example.com/1.2.3.4&#xA;domain-rule /example.com/ -address 1.2.3.4&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;也可以通过网上邻居修改，网上邻居共享目录 &lt;code&gt;sda1&lt;/code&gt; 看不到 &lt;code&gt;asusware.mipsbig&lt;/code&gt; 目录，但可以直接在&lt;code&gt;文件管理器&lt;/code&gt;中输入 &lt;code&gt;asusware.mipsbig\etc\init.d&lt;/code&gt; 访问&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;\\192.168.1.1\sda1\asusware.mipsbig\etc\init.d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Optware / Entware&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;准备&lt;/p&gt; &lt;p&gt;在使用此软件时，需要确认路由器是否支持 U 盘，并准备好 U 盘一个。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 SmartDNS&lt;/p&gt; &lt;p&gt;将软件（使用 WinSCP 等）上传到路由器的 &lt;code&gt;/tmp&lt;/code&gt; 目录，执行如下命令安装&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ipkg install smartdns.1.yyyy.MM.dd-REL.mipsbig.ipk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改 SmartDNS 配置&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vi /opt/etc/smartdns/smartdns.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;/opt/etc/smartdns/smartdns.conf&lt;/code&gt;配置包含如下基本内容：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 指定监听的端口号&#xA;bind []:53 &#xA;# 指定上游服务器&#xA;server 1.1.1.1&#xA;server-tls 8.8.8.8&#xA;# 指定域名规则&#xA;address /example.com/1.2.3.4&#xA;domain-rule /example.com/ -address 1.2.3.4&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;另外，如需支持 IPv6，可设置工作模式为 &lt;code&gt;2&lt;/code&gt;，将 DNSmasq 的 DNS 服务禁用，设置 SmartDNS 为主用 DNS 服务器。将文件 &lt;code&gt;/opt/etc/smartdns/smartdns-opt.conf&lt;/code&gt; 中的 &lt;code&gt;SMARTDNS_WORKMODE&lt;/code&gt; 的值修改为 &lt;code&gt;2&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;SMARTDNS_WORKMODE=&#34;2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重启路由器使服务生效&lt;/p&gt; &lt;p&gt;待路由器启动后， 执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 若服务没有自动启动，则需要设置 Optware / Entware 自动启动，具体方法请参考 Optware/Entware 的文档。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;WSL&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 WSL&lt;/p&gt; &lt;p&gt;安装 WSL 运行环境，发行版本选择 Ubuntu 系统为例。安装步骤请参考 &lt;a href=&#34;https://docs.microsoft.com/zh-CN/windows/wsl/install&#34;&gt;WSL 安装说明&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 SmartDNS&lt;/p&gt; &lt;p&gt;下载适用于 WSL 的安装包，并解压到如 D 盘根目录。解压后目录如下：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;D:\SMARTDNS&#xA;├─etc&#xA;│  ├─default&#xA;│  ├─init.d&#xA;│  └─smartdns&#xA;├─package&#xA;│  └─windows&#xA;├─src&#xA;└─systemd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;双击 &lt;code&gt;D:\smartdns\package\windows&lt;/code&gt; 目录下的 &lt;code&gt;install.bat&lt;/code&gt; 进行安装。要求输入密码时，请输入 &lt;code&gt;WLS ubuntu&lt;/code&gt; 的密码。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置&lt;/p&gt; &lt;p&gt;用记事本等打开 &lt;code&gt;D:\smartdns\etc\smartdns&lt;/code&gt; 目录中的 &lt;code&gt;smartdns.conf&lt;/code&gt; 配置文件配置 SmartDNS。&lt;/p&gt; &lt;p&gt;一般情况下，只需要增加 &lt;code&gt;server [IP]:port&lt;/code&gt; 和 &lt;code&gt;server-tcp [IP]:port&lt;/code&gt; 配置项， 尽可能配置多个上游DNS服务器，包括国内外的服务器。&lt;/p&gt; &lt;p&gt;具体配置请参考&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E&#34;&gt;配置文件说明&lt;/a&gt;。 &lt;code&gt;smartdns.conf&lt;/code&gt; 配置包含如下基本内容：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 指定监听的端口号&#xA;bind []:53 &#xA;# 指定上游服务器&#xA;server 1.1.1.1&#xA;server-tls 8.8.8.8&#xA;# 指定域名规则&#xA;address /example.com/1.2.3.4&#xA;domain-rule /example.com/ -address 1.2.3.4&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重新加载配置&lt;/p&gt; &lt;p&gt;双击 &lt;code&gt;D:\smartdns\package\windows&lt;/code&gt; 目录下的 &lt;code&gt;reload.bat&lt;/code&gt; 进行重新加载。要求输入密码时，请输入 &lt;code&gt;WLS ubuntu&lt;/code&gt; 的密码。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;将 DNS 请求转发到 SmartDNS 解析&lt;/p&gt; &lt;p&gt;将 Windows 的默认 DNS 服务器修改为 &lt;code&gt;127.0.0.1&lt;/code&gt;，具体步骤参考 Windows &lt;a href=&#34;https://support.microsoft.com/zh-cn/help/15089/windows-change-tcp-ip-settings&#34;&gt;更改 TCP/IP 设置&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;检测服务是否配置成功&lt;/p&gt; &lt;p&gt;执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;配置文件说明&lt;/h2&gt; &#xA;&lt;p&gt;配置建议：&lt;strong&gt;smartdns默认已设置为最优模式，适合大部分场景的DNS查询体验改善，一般情况只需要增加上游服务器地址即可，无需做其他配置修改；如有其他配置修改，请务必了解其用途，避免修改后起到反作用。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;键名&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;功能说明&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;可用值/要求&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;举例&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-name&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS 服务器名称&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;操作系统主机名 / smartdns&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;符合主机名规格的字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-name smartdns&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bind&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS 监听端口号&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[::]:53&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可绑定多个端口。&lt;br&gt;IP:PORT@DEVICE: 服务器 IP:端口号@设备名&lt;br&gt;[-group]: 请求时使用的 DNS 服务器组&lt;br&gt;[-no-rule-addr]：跳过 address 规则&lt;br&gt;[-no-rule-nameserver]：跳过 Nameserver 规则&lt;br&gt;[-no-rule-ipset]：跳过 ipset 和 nftset 规则&lt;br&gt;[-no-rule-soa]：跳过 SOA(#) 规则&lt;br&gt;[-no-dualstack-selection]：停用双栈测速&lt;br&gt;[-no-speed-check]：停用测速&lt;br&gt;[-no-cache]：停止缓存&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bind :53@eth0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bind-tcp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS TCP 监听端口号&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[::]:53&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可绑定多个端口。&lt;br&gt;IP:PORT@DEVICE: 服务器 IP:端口号@设备名&lt;br&gt;[-group]: 请求时使用的 DNS 服务器组&lt;br&gt;[-no-rule-addr]：跳过 address 规则&lt;br&gt;[-no-rule-nameserver]：跳过 nameserver 规则&lt;br&gt;[-no-rule-ipset]：跳过 ipset 和 nftset 规则。&lt;br&gt;[-no-rule-soa]：跳过 SOA(#) 规则&lt;br&gt;[-no-dualstack-selection]：停用双栈测速&lt;br&gt;[-no-speed-check]：停用测速&lt;br&gt;[-no-cache]：停止缓存&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bind-tcp :53&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名结果缓存个数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;512&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于等于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-size 512&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-persist&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是否持久化缓存&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;自动。&lt;br&gt;当 cache-file 所在的位置有超过 128 MB 的可用空间时启用，否则禁用。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-persist yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;缓存持久化文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/tmp/&lt;br&gt;smartdns.cache&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-file /tmp/smartdns.cache&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tcp-idle-time&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TCP 链接空闲超时时间&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;120&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于等于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tcp-idle-time 120&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名结果 TTL&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;远程查询结果&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl 600&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-min&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;允许的最小 TTL 值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;远程查询结果&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-min 60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-max&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;允许的最大 TTL 值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;远程查询结果&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-max 600&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-reply-max&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;允许返回给客户端的最大 TTL 值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;远程查询结果&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-reply-max 60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;local-ttl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;本地HOST，address的TTL值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-min&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;local-ttl 60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;max-reply-ip-num&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;允许返回给客户的最大IP数量&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;IP数量&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;max-reply-ip-num 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-level&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置日志级别&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;error&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;fatal、error、warn、notice、info 或 debug&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-level error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;日志文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/var/log/&lt;br&gt;smartdns/&lt;br&gt;smartdns.log&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-file /var/log/smartdns/smartdns.log&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;日志大小&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;128K&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;数字 + K、M 或 G&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-size 128K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-num&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;日志归档个数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;openwrt为2， 其他系统为8&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于等于 0 的数字，0表示禁用日志&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-num 2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-file-mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;日志归档文件权限&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;0640&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;文件权限&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-file-mode 644&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-enable&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置审计启用&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-enable yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;审计文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/var/log/&lt;br&gt;smartdns/&lt;br&gt;smartdns-audit.log&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-file /var/log/smartdns/smartdns-audit.log&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;审计大小&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;128K&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;数字 + K、M 或 G&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-size 128K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-num&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;审计归档个数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于等于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-num 2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-file-mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;审计归档文件权限&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;0640&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;文件权限&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-file-mode 644&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;conf-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;附加配置文件&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;conf-file /etc/smartdns/smartdns.more.conf&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;上游 UDP DNS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;[ip][:port]|URL：服务器 IP:端口（可选）或 URL &lt;br&gt;[-blacklist-ip]：配置 IP 过滤结果。&lt;br&gt;[-whitelist-ip]：指定仅接受参数中配置的 IP 范围&lt;br&gt;[-group [group] ...]：DNS 服务器所属组，比如 office 和 foreign，和 nameserver 配套使用&lt;br&gt;[-exclude-default-group]：将 DNS 服务器从默认组中排除。&lt;br&gt;[-set-mark mark]：设置数据包标记so-mark。&lt;br&gt;[-proxy name]：设置代理服务器。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server 8.8.8.8:53 -blacklist-ip -group g1 -proxy proxy&lt;br&gt; server tls://8.8.8.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-tcp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;上游 TCP DNS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;[ip][:port]：服务器 IP:端口（可选）&lt;br&gt;[-blacklist-ip]：配置 IP 过滤结果&lt;br&gt;[-whitelist-ip]：指定仅接受参数中配置的 IP 范围。&lt;br&gt;[-group [group] ...]：DNS 服务器所属组，比如 office 和 foreign，和 nameserver 配套使用&lt;br&gt;[-exclude-default-group]：将 DNS 服务器从默认组中排除。&lt;br&gt;[-set-mark mark]：设置数据包标记so-mark。&lt;br&gt;[-proxy name]：设置代理服务器。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-tcp 8.8.8.8:53&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-tls&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;上游 TLS DNS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;[ip][:port]：服务器 IP:端口（可选)&lt;br&gt;[-spki-pin [sha256-pin]]：TLS 合法性校验 SPKI 值，base64 编码的 sha256 SPKI pin 值&lt;br&gt;[-host-name]：TLS SNI 名称, 名称设置为-，表示停用SNI名称&lt;br&gt;[-tls-host-verify]：TLS 证书主机名校验&lt;br&gt; [-no-check-certificate]：跳过证书校验&lt;br&gt;[-blacklist-ip]：配置 IP 过滤结果&lt;br&gt;[-whitelist-ip]：仅接受参数中配置的 IP 范围&lt;br&gt;[-group [group] ...]：DNS 服务器所属组，比如 office 和 foreign，和 nameserver 配套使用&lt;br&gt;[-exclude-default-group]：将 DNS 服务器从默认组中排除。&lt;br&gt;[-set-mark mark]：设置数据包标记so-mark。&lt;br&gt;[-proxy name]：设置代理服务器。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-tls 8.8.8.8:853&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-https&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;上游 HTTPS DNS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;&lt;a href=&#34;https://%5Bhost&#34;&gt;https://[host&lt;/a&gt;][:port]/path：服务器 IP:端口（可选）&lt;br&gt;[-spki-pin [sha256-pin]]：TLS 合法性校验 SPKI 值，base64 编码的 sha256 SPKI pin 值&lt;br&gt;[-host-name]：TLS SNI 名称&lt;br&gt;[-http-host]：http 协议头主机名&lt;br&gt;[-tls-host-verify]：TLS 证书主机名校验&lt;br&gt; [-no-check-certificate]：跳过证书校验&lt;br&gt;[-blacklist-ip]：配置 IP 过滤结果&lt;br&gt;[-whitelist-ip]：仅接受参数中配置的 IP 范围。&lt;br&gt;[-group [group] ...]：DNS 服务器所属组，比如 office 和 foreign，和 nameserver 配套使用&lt;br&gt;[-exclude-default-group]：将 DNS 服务器从默认组中排除。&lt;br&gt;[-set-mark]：设置数据包标记so-mark。&lt;br&gt;[-proxy name]：设置代理服务器。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-https &lt;a href=&#34;https://cloudflare-dns.com/dns-query&#34;&gt;https://cloudflare-dns.com/dns-query&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;proxy-server&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;代理服务器&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;proxy-server URL &lt;br&gt;[URL]: [socks5|http]://[username:password@]host:port&lt;br&gt;[-name]: 代理服务器名称。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;proxy-server socks5://user:pass@1.2.3.4:1080 -name proxy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;speed-check-mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;测速模式选择&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ping|tcp:[80]|none]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;speed-check-mode ping,tcp:80,tcp:443&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;response-mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;首次查询响应模式&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;first-ping&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;模式：[first-ping|fastest-ip|fastest-response]&lt;br&gt; [first-ping]: 最快ping响应地址模式，DNS上游最快查询时延+ping时延最短，查询等待与链接体验最佳;&lt;br&gt;[fastest-ip]: 最快IP地址模式，查询到的所有IP地址中ping最短的IP。需等待IP测速; &lt;br&gt;[fastest-response]: 最快响应的DNS结果，DNS查询等待时间最短，返回的IP地址可能不是最快。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;response-mode first-ping&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;address&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;指定域名 IP 地址&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;address /domain/[ip|-|-4|-6|#|#4|#6] &lt;br&gt;- 表示忽略 &lt;br&gt;# 表示返回 SOA &lt;br&gt;4 表示 IPv4 &lt;br&gt;6 表示 IPv6&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;address /www.example.com/1.2.3.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cname&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;指定域名别名&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cname /domain/target &lt;br&gt;- 表示忽略 &lt;br&gt;指定对应域名的cname&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cname /www.example.com/cdn.example.com&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dns64&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS64转换&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dns64 ip-prefix/mask &lt;br&gt; ipv6前缀和掩码&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dns64 64:ff9b::/96&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nameserver&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;指定域名使用 server 组解析&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nameserver /domain/[group|-], group 为组名，- 表示忽略此规则，配套 server 中的 -group 参数使用&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nameserver /www.example.com/office&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名 ipset&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset /domain/[ipset|-|#[4|6]:[ipset|-][,#[4|6]:[ipset|-]]]，-表示忽略&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset /www.example.com/#4:dns4,#6:- &lt;br&gt;ipset /www.example.com/dns&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset-timeout&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置 ipset 超时功能启用&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset-timeout yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset-no-speed&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;当测速失败时，将域名结果设置到ipset集合中&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset | #[4|6]:ipset&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset-no-speed #4:ipset4,#6:ipset6 &lt;br&gt; ipset-no-speed ipset&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名 nftset&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset /domain/[#4|#6|-]:[family#nftable#nftset|-][,#[4|6]:[family#nftable#nftset|-]]]，&lt;br&gt;-表示忽略；&lt;br&gt;ipv4 地址的 family 只支持 inet 和 ip；&lt;br&gt;ipv6 地址的 family 只支持 inet 和 ip6；&lt;br&gt;由于 nft 限制，两种地址只能分开存放于两个 set 中。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset /www.example.com/#4:inet#tab#dns4,#6:-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset-timeout&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置 nftset 超时功能启用&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset-timeout yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset-no-speed&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;当测速失败时，将域名结果设置到nftset集合中&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset-no-speed [#4|#6]:[family#nftable#nftset][,#[4|6]:[family#nftable#nftset]]] &lt;br&gt;ipv4 地址的 family 只支持 inet 和 ip &lt;br&gt;ipv6 地址的 family 只支持 inet 和 ip6 &lt;br&gt;由于 nft 限制，两种地址只能分开存放于两个 set 中。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset-no-speed #4:inet#tab#set4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset-debug&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置 nftset 调试功能启用&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nftset-debug yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-rules&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置域名规则&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-rules /domain/ [-rules...]&lt;br&gt;[-c|-speed-check-mode]：测速模式，参考 speed-check-mode 配置&lt;br&gt;[-a|-address]：参考 address 配置&lt;br&gt;[-n|-nameserver]：参考 nameserver 配置&lt;br&gt;[-p|-ipset]：参考ipset配置&lt;br&gt;[-t|-nftset]：参考nftset配置&lt;br&gt;[-d|-dualstack-ip-selection]：参考 dualstack-ip-selection&lt;br&gt; [-no-serve-expired]：禁用过期缓存&lt;br&gt;[-rr-ttl|-rr-ttl-min|-rr-ttl-max]: 参考配置rr-ttl, rr-ttl-min, rr-ttl-max&lt;br&gt;[-delete]：删除对应的规则&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-rules /www.example.com/ -speed-check-mode none&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-set&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置域名集合&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-set [options...]&lt;br&gt;[-n|-name]：域名集合名称 &lt;br&gt;[-t|-type]：域名集合类型，当前仅支持list，格式为域名列表，一行一个域名。&lt;br&gt;[-f|-file]：域名集合文件路径。&lt;br&gt; 选项需要配合address, nameserver, ipset, nftset等需要指定域名的地方使用，使用方式为 /domain-set:[name]/&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-set -name set -type list -file /path/to/list &lt;br&gt; address /domain-set:set/1.2.4.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bogus-nxdomain&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;假冒 IP 地址过滤&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ip/subnet]，可重复&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bogus-nxdomain 1.2.3.4/16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ignore-ip&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;忽略 IP 地址&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ip/subnet]，可重复&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ignore-ip 1.2.3.4/16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;whitelist-ip&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;白名单 IP 地址&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ip/subnet]，可重复&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;whitelist-ip 1.2.3.4/16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;blacklist-ip&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;黑名单 IP 地址&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ip/subnet]，可重复&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;blacklist-ip 1.2.3.4/16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force-AAAA-SOA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;强制 AAAA 地址返回 SOA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force-AAAA-SOA yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force-qtype-SOA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;强制指定 qtype 返回 SOA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;qtype id&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[qtypeid|...]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force-qtype-SOA 65 28&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prefetch-domain&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名预先获取功能&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prefetch-domain yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dnsmasq-lease-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;支持读取dnsmasq dhcp文件解析本地主机名功能&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dnsmasq dhcp lease文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dnsmasq-lease-file /var/lib/misc/dnsmasq.leases&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;过期缓存服务功能&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]，开启此功能后，如果有请求时尝试回应 TTL 为 0 的过期记录，并发查询记录，以避免查询等待&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-ttl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;过期缓存服务最长超时时间&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;秒，0 表示停用超时，大于 0 表示指定的超时的秒数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-ttl 0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-reply-ttl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;回应的过期缓存 TTL&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;秒，0 表示停用超时，大于 0 表示指定的超时的秒数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-reply-ttl 30&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-prefetch-time&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;过期缓存预查询时间&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;28800&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;秒，到达对应超时时间后预查询时间&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-prefetch-time 86400&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dualstack-ip-selection&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;双栈 IP 优选&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dualstack-ip-selection yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dualstack-ip-selection-threshold&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;双栈 IP 优选阈值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10ms&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;单位为毫秒（ms）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dualstack-ip-selection-threshold [0-1000]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;进程运行用户&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;root&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user [username]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user nobody&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ca-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;证书文件&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/etc/ssl/&lt;br&gt;certs/ca-certificates.crt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ca-file /etc/ssl/certs/ca-certificates.crt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ca-path&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;证书文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/etc/ssl/certs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ca-path /etc/ssl/certs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;SmartDNS 和 DNSmasq 有什么区别？&lt;/p&gt; &lt;p&gt;SmartDNS 在设计上并不是 DNSmasq 的替代品，它的主要功能集中在 DNS 解析增强上，增强部分有：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;多上游服务器并发请求，对结果进行测速后，返回最佳结果；&lt;/li&gt; &#xA;   &lt;li&gt;address、ipset 域名匹配采用高效算法，查询匹配更加快速，即使是路由器设备也依然高效；&lt;/li&gt; &#xA;   &lt;li&gt;域名匹配支持忽略特定域名，可单独匹配 IPv4 和 IPv6，支持多样化定制；&lt;/li&gt; &#xA;   &lt;li&gt;针对广告屏蔽功能做增强，返回 SOA，屏蔽广告效果更佳；&lt;/li&gt; &#xA;   &lt;li&gt;IPv4、IPv6 双栈 IP 优选机制，在双网情况下，选择最快的网络通讯；&lt;/li&gt; &#xA;   &lt;li&gt;支持最新的 TLS 和 HTTPS 协议，提供安全的 DNS 查询能力；&lt;/li&gt; &#xA;   &lt;li&gt;ECS 支持，使查询结果更佳准确；&lt;/li&gt; &#xA;   &lt;li&gt;IP 黑名单和忽略 IP 机制，使域名查询更佳准确；&lt;/li&gt; &#xA;   &lt;li&gt;域名预查询，访问常用网站更加快速；&lt;/li&gt; &#xA;   &lt;li&gt;域名 TTL 可指定，使访问更快速；&lt;/li&gt; &#xA;   &lt;li&gt;高速缓存机制，使访问更快速；&lt;/li&gt; &#xA;   &lt;li&gt;异步日志，审计机制，在记录信息的同时不影响 DNS 查询性能；&lt;/li&gt; &#xA;   &lt;li&gt;域名组（group）机制，特定域名使用特定上游服务器组查询，避免隐私泄漏；&lt;/li&gt; &#xA;   &lt;li&gt;第二 DNS 支持自定义更多行为。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何配置上游服务器最佳？&lt;/p&gt; &lt;p&gt;SmartDNS 有测速机制，在配置上游服务器时，建议配置多个上游 DNS 服务器，包含多个不同区域的服务器，但总数建议在 10 个左右。推荐搭配&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;运营商 DNS。&lt;/li&gt; &#xA;   &lt;li&gt;国内公共 DNS，如 &lt;code&gt;119.29.29.29&lt;/code&gt;, &lt;code&gt;223.5.5.5&lt;/code&gt;。&lt;/li&gt; &#xA;   &lt;li&gt;国外公共 DNS，如 &lt;code&gt;8.8.8.8&lt;/code&gt;, &lt;code&gt;8.8.4.4&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何启用审计日志？&lt;/p&gt; &lt;p&gt;审计日志记录客户端请求的域名，记录信息包括，请求时间，请求 IP，请求域名，请求类型，如果要启用审计日志，在配置界面配置 &lt;code&gt;audit-enable yes&lt;/code&gt; 启用，&lt;code&gt;audit-size&lt;/code&gt;、 &lt;code&gt;audit-file&lt;/code&gt;、&lt;code&gt;audit-num&lt;/code&gt; 分别配置审计日志文件大小，审计日志文件路径，和审计日志文件个数。审计日志文件将会压缩存储以节省空间。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何避免隐私泄漏？&lt;/p&gt; &lt;p&gt;默认情况下，SmartDNS 会将请求发送到所有配置的DNS服务器，若上游 DNS 服务器使用DNS，或记录日志，将会导致隐私泄漏。为避免隐私泄漏，请尽量：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;配置使用可信的DNS服务器。&lt;/li&gt; &#xA;   &lt;li&gt;优先使用 TLS 查询。&lt;/li&gt; &#xA;   &lt;li&gt;设置上游 DNS 服务器组。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何屏蔽广告？&lt;/p&gt; &lt;p&gt;SmartDNS 具备高性能域名匹配算法，通过域名方式过滤广告非常高效，如要屏蔽广告，只需要配置类似如下记录即可，如，屏蔽 &lt;code&gt;*.ad.com&lt;/code&gt;，则配置：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;address /ad.com/#&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;域名的使后缀模式，过滤 &lt;code&gt;*.ad.com&lt;/code&gt;，&lt;code&gt;#&lt;/code&gt; 表示返回 SOA，使屏蔽广告更加高效，如果要单独屏蔽 IPv4 或 IPv6， 在 &lt;code&gt;#&lt;/code&gt; 后面增加数字，如 &lt;code&gt;#4&lt;/code&gt; 表示对 IPv4 生效。若想忽略特定子域名的屏蔽，如忽略 &lt;code&gt;pass.ad.com&lt;/code&gt;，可配置如下：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;address /pass.ad.com/-&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何使用 DNS 查询分流？&lt;/p&gt; &lt;p&gt;某些情况下，需要将有些域名使用特定的 DNS 服务器来查询来做到 DNS 分流。比如&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.home -&amp;gt; 192.168.1.1 # .home 结尾的域名发送到 192.168.1.1 解析&#xA;.office -&amp;gt; 10.0.0.1  # .office 结尾的域名发送到 10.0.0.1 解析&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;其他域名采用默认的模式解析。 这种情况的分流配置如下：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 配置上游，用 -group 指定组名，用 -exclude-default-group 将服务器从默认组中排除。&#xA;server 192.168.1.1 -group home -exclude-default-group&#xA;server 10.0.0.1 -group office -exclude-default-group&#xA;server 8.8.8.8&#xA;&#xA;# 配置解析的域名&#xA;nameserver /.home/home&#xA;nameserver /.office/office&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;通过上述配置即可实现 DNS 解析分流，如果需要实现按请求端端口分流，可以配置第二 DNS 服务器，&lt;code&gt;bind&lt;/code&gt; 配置增加 &lt;code&gt;--group&lt;/code&gt; 参数指定分流名称。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bind :7053 -group office&#xA;bind :8053 -group home&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;IPv4、IPv6 双栈 IP 优选功能如何使用？&lt;/p&gt; &lt;p&gt;目前 IPv6 已经开始普及，但 IPv6 网络在速度上，某些情况下还不如 IPv4。为在双栈网络下获得较好的体验，SmartDNS 提供来双栈IP优选机制，同一个域名，若 IPv4 的速度远快与 IPv6，那么 SmartDNS 就会阻止IPv6的解析、使用 IPv4 访问。可在配置文件中通过设置 &lt;code&gt;dualstack-ip-selection yes&lt;/code&gt; 启用此功能，通过 &lt;code&gt;dualstack-ip-selection-threshold [time]&lt;/code&gt; 来修改阈值。如果要完全禁止 IPv6 AAAA记录解析，可设置 &lt;code&gt;force-AAAA-SOA yes&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何提高缓存效率，加快访问速度？&lt;/p&gt; &lt;p&gt;SmartDNS 提供了域名缓存机制，对查询的域名，进行缓存，缓存时间符合 DNS TTL 规范。为提高缓存命中率，可采用如下措施：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;适当增大缓存的记录数&lt;/p&gt; &lt;p&gt;通过 &lt;code&gt;cache-size&lt;/code&gt; 来设置缓存记录数。&lt;/p&gt; &lt;p&gt;查询压力大的环境下，并且有内存大的机器的情况下，可适当调大。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;适当设置最小 TTL 值&lt;/p&gt; &lt;p&gt;通过 &lt;code&gt;rr-ttl-min&lt;/code&gt; 将最低 DNS TTL 时间设置为一个合理值，延长缓存时间。&lt;/p&gt; &lt;p&gt;建议是超时时间设置在 10～30 分钟，避免服务器域名变化时，查询到失效域名。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;开启域名预获取功能&lt;/p&gt; &lt;p&gt;通过 &lt;code&gt;prefetch-domain yes&lt;/code&gt; 来启用域名预先获取功能，提高查询命中率。&lt;/p&gt; &lt;p&gt;配合上述 TTL 超时时间，SmartDNS 将在域名 TTL 即将超时时，再次发送查询请求，并缓存查询结果供后续使用。频繁访问的域名将会持续缓存。此功能将在空闲时消耗更多的 CPU。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;过期缓存服务功能&lt;/p&gt; &lt;p&gt;通过 &lt;code&gt;serve-expired&lt;/code&gt; 来启用过期缓存服务功能，可提高缓存命中率的同时，降低CPU占用。&lt;/p&gt; &lt;p&gt;此功能会在TTL超时后，将返回 TTL=0 给客户端，并且同时再次发送查询请求，并缓存新的结果给后续使用。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;第二 DNS 如何自定义更多行为？&lt;/p&gt; &lt;p&gt;第二 DNS 可以作为其他 DNS 服务器的上游，提供更多的查询行为，通过 bind 配置支持可以绑定多个端口，不同端口可设置不同的标志，实现不同的功能，如&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 绑定 6053 端口，6053 端口的请求将采用配置 office 组的上游查询，且不对结果进行测速，忽略 address 的配置地址&#xA;bind [::]:6053 -no-speed-check -group office -no-rule-addr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DoT 的 SPKI 如何获取？ SPKI 可以通过 DNS 服务商发布的页面获取，如果没有发布，可以通过如下命令获取，其中将对应IP地址更换为要获取 SPKI 的 IP 地址。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo | openssl s_client -connect &#39;1.0.0.1:853&#39; 2&amp;gt;/dev/null | openssl x509 -pubkey -noout | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | openssl enc -base64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;iOS系统解析缓慢问题怎么解决？&lt;br&gt; IOS14开始，苹果支持了DNS HTTPS(TYPE65)记录的解析，此功能用于快速DNS查询和解决HTTPS链接相关的问题，但当前还是草案，另外会导致广告屏蔽等功能失效，建议通过如下配置关闭TYPE65记录查询。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;force-qtype-SOA 65&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何解析本地主机名称？&lt;br&gt; smartdns可以配合DNSMASQ的dhcp lease文件支持本地主机名-&amp;gt;IP地址的解析，可以配置smartdns读取dnsmasq的lease文件，并支持解析。具体配置参数如下，（注意，DNSMASQ lease文件每个系统可能不一样，需要按实际情况配置）&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dnsmasq-lease-file /var/lib/misc/dnsmasq.leases&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;配置完成后，可以直接使用主机名连接对应的机器。但需要注意：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows系统默认使用mDNS解析地址，如需要在windows下用使用smartdns解析，则需要在主机名后面增加&lt;code&gt;.&lt;/code&gt;，表示使用DNS解析。如&lt;code&gt;ping smartdns.&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;域名集合如何使用？&lt;br&gt; 为方便按集合配置域名，对于有/domain/的配置，可以指定域名集合，方便维护。具体方法为：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;使用&lt;code&gt;domain-set&lt;/code&gt;配置集合文件，如&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;domain-set -name ad -file /etc/smartdns/ad-list.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;ad-list.conf的格式为一个域名一行，如&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ad.com&#xA;site.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;在有/domain/配置的选项使用域名集合，只需要将&lt;code&gt;/domain/&lt;/code&gt;配置为&lt;code&gt;/domain-set:[集合名称]/&lt;/code&gt;即可，如：&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;address /domain-set:ad/#&#xA;domain-rules /domain-set:ad/ -a #&#xA;nameserver /domain-set:ad/server&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何使用ipset和nftset&lt;br&gt; 和Dnsmasq类似，smartdns支持ipset和nftset，可以将特定的域名通过TPROXY进行透明转发，透明转发涉工具模式对比如下：&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;工具：iptable，nftable&lt;/p&gt; &lt;p&gt;iptable：成熟的路由规则配置工具。&lt;br&gt; nftable：更加强大的规则配置工具，正在成为主流。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;模式：TPROXY，REDIRECT&lt;/p&gt; &lt;p&gt;TPROXY：支持UDP，TCP的转发，配置稍复杂。&lt;br&gt; REDIRECT：仅支持TCP，配置简单。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;配置REDIRECT或TPROXY转发规则&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;在smartdns.conf中设置需要透明转发的域名列表，比如要将&lt;code&gt;example.com&lt;/code&gt;进行透明转发。则使用ipset选项，设置&lt;code&gt;example.com&lt;/code&gt;的ipset规则为&lt;code&gt;proxy&lt;/code&gt;。&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 设置规则&#xA;# -ipset proxy: 匹配的域名设置到ipset:tproxy中。&#xA;# -c none: 停用测速&#xA;# -address #6: 停用IPV6解析。&#xA;domain-rules /example.com/ -ipset proxy -c none -address #6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt; &lt;p&gt;方式一: TCP REDIRECT转发&lt;/p&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;此方式配置简单，仅支持TCP的转发。&lt;br&gt; 执行shell命令，设置iptable规则，如果仅转发TCP则可以直接使用REDIRECT的规则，如果需要同时转发UDP和TCP，可以使用TPROXY的转发规则。如下规则按实际需求选择。具体配置如下：&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 创建ipset集合&#xA;ipset create proxy hash:net&#xA;# 设置转发规则，将匹配的请求转发到本机的1081端口&#xA;iptables -t nat -I PREROUTING -p tcp -m set --match-set proxy dst -j REDIRECT --to-ports 1081&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;在本机1081端口开启REDIRECT模式的转发程序。&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;方式二：TCP/UDP TPROXY转发&lt;/p&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;此方式可同时转发TCP和UDP。&lt;br&gt; 执行shell命令，设置iptable规则，将匹配的域名TCP/UDP请求进行TPROXY方式透明转发，规则参考如下：&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 设置路由规则&#xA;ip rule add fwmark 1104 lookup 1104&#xA;ip route add local 0.0.0.0/0 dev lo table 1104&#xA;&#xA;# 创建ipset集合&#xA;ipset create proxy hash:net&#xA;&#xA;# 设置转发规则，UDP，TCP方式的TPROXY转发&#xA;iptables -t mangle -N SMARTDNS&#xA;iptables -t mangle -A SMARTDNS -p tcp -m set --match-set proxy dst -j TPROXY --on-ip 127.0.0.1 --on-port 1081 --tproxy-mark 1104&#xA;iptables -t mangle -A SMARTDNS -p udp -m set --match-set proxy dst -j TPROXY --on-ip 127.0.0.1 --on-port 1081 --tproxy-mark 1104&#xA;iptables -t mangle -A SMARTDNS -j ACCEPT&#xA;iptables -t mangle -A PREROUTING -j SMARTDNS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;在本机的1081端口启动IP透明转发程序。&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;额外说明&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;为保证DNS查询结果的位置亲和性，可以使用smartdns的&lt;code&gt;server&lt;/code&gt;代理参数，将对应域名的查询请求，通过代理查询，使结果位置更好。如：&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 增加DNS上游，并设置通过名称为proxy的代理查询，查询组为pass&#xA;server 1.2.3.4 -proxy proxy -group pass -exclude-default-group&#xA;# 设置代理服务器信息，代理的名称为proxy&#xA;proxy-server socks5://user:name@1.2.3.4 -name proxy&#xA;# 设置域名规则，对匹配的域名使用代理查询结果，并将结果设置到ipset中。&#xA;domain-rules /example.com/ -ipset proxy -c none -address #6 -nameserver pass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;如需要配合测速自动完成ipset的设置，可增加如下配置参数&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ipset-no-speed proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;如果使用openwrt的luci界面，可以直接在界面配置相关的域名分流规则。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;更多问题&lt;br&gt; 如有更多问题，请查阅或提交issue: &lt;a href=&#34;https://github.com/pymumu/smartdns/issues&#34;&gt;https://github.com/pymumu/smartdns/issues&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;编译&lt;/h2&gt; &#xA;&lt;p&gt;SmartDNS 提供了编译软件包的脚本（&lt;code&gt;package/build-pkg.sh&lt;/code&gt;），支持编译 LuCI、Debian、OpenWrt 和 Optware 安装包。&lt;/p&gt; &#xA;&lt;h2&gt;捐赠&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得此项目对你有帮助，请捐助我们，使项目能持续发展和更加完善。&lt;/p&gt; &#xA;&lt;h3&gt;PayPal 贝宝&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/PengNick/&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg?sanitize=true&#34; alt=&#34;Support via PayPal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AliPay 支付宝&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/alipay_donate.jpg&#34; alt=&#34;alipay&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;WeChat Pay 微信支付&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/wechat_donate.jpg&#34; alt=&#34;wechat&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开源声明&lt;/h2&gt; &#xA;&lt;p&gt;SmartDNS 基于 GPL V3 协议开源。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sultim-t/xash-rt</title>
    <updated>2023-03-05T01:48:30Z</updated>
    <id>tag:github.com,2023-03-05:/sultim-t/xash-rt</id>
    <link href="https://github.com/sultim-t/xash-rt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fork of the Xash3D FWGS with a real-time path tracing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Xash3D: Ray Traced&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FWGS/xash3d-fwgs/actions/workflows/c-cpp.yml&#34;&gt;&lt;img src=&#34;https://github.com/FWGS/xash3d-fwgs/actions/workflows/c-cpp.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Xash3D: Ray Traced is a fork of the &lt;a href=&#34;https://github.com/FWGS/xash3d-fwgs&#34;&gt;Xash3D FWGS&lt;/a&gt; engine with the added &lt;a href=&#34;https://github.com/sultim-t/RayTracedGL1&#34;&gt;custom path-traced renderer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Latest compiled build for Half-Life 1 can be found at &lt;a href=&#34;https://github.com/sultim-t/xash-rt/releases&#34;&gt;https://github.com/sultim-t/xash-rt/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;h3&gt;Windows (Visual Studio)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this git repository&lt;/li&gt; &#xA; &lt;li&gt;Setup dependencies &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sultim-t/RayTracedGL1/releases/download/hl1-dev&#34;&gt;RayTracedGL1&lt;/a&gt; (&lt;code&gt;RTGL1_SDK_PATH&lt;/code&gt; environment variable should point to it)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://libsdl.org/release/SDL2-devel-2.0.14-VC.zip&#34;&gt;SDL2 2.0.14&lt;/a&gt; (should be put into the &lt;code&gt;SDL2_VC&lt;/code&gt; folder)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sultim-t/hlsdk-xash3d/releases&#34;&gt;Half-Life 1 SDK for Xash&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;for more info, look Github Actions scripts (&lt;a href=&#34;https://github.com/sultim-t/xash-rt/raw/ref_rt/.github/workflows/c-cpp.yml&#34;&gt;c-cpp.yml&lt;/a&gt;, &lt;a href=&#34;https://github.com/sultim-t/xash-rt/raw/ref_rt/scripts/gha/deps_win32.sh&#34;&gt;deps_win32.sh&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open Visual Studio solution &lt;code&gt;xash3d-fwgs.sln&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build solution&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>