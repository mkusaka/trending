<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-19T01:37:37Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BasedHardware/Friend</title>
    <updated>2024-05-19T01:37:37Z</updated>
    <id>tag:github.com,2024-05-19:/BasedHardware/Friend</id>
    <link href="https://github.com/BasedHardware/Friend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI wearable with 24h+ battery&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;strong&gt;Friend&lt;/strong&gt;&lt;/h1&gt; &#xA; &lt;p&gt;Open Source AI Wearable device that records everything you say, gives you proactive feedback and advice. 24h+ on single charge.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/BasedHardware/Friend/assets/43514161/1d504d29-1988-4482-8254-665b0bf8a264&#34; alt=&#34;Friend Image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/ZutWMTJnwA&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/ZutWMTJnwA?style=flat&#34; alt=&#34;Discord Follow&#34;&gt;&lt;/a&gt;     &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;    &lt;a href=&#34;https://github.com/BasedHardware/Friend&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/BasedHardware/Friend&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt; &lt;p&gt;&lt;a href=&#34;https://basedhardware.com/&#34;&gt;Homepage&lt;/a&gt; | &lt;a href=&#34;https://basedhardware.github.io/Friend/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://www.kickstarter.com/projects/kodjima333/friend-open-source-ai-wearable-recording-device?ref=7wc2iz&#34;&gt;Buy Assembled Device&lt;/a&gt;&lt;/p&gt; &lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-Time AI Audio Processing&lt;/strong&gt;: Leverage powerful on-device AI capabilities for real-time audio analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Low-powered Bluetooth&lt;/strong&gt;: Capture audio for 24h+ on a small button battery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open-Source Software&lt;/strong&gt;: Access and contribute to the pin&#39;s software stack, designed with openness and community collaboration in mind.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wearable Design&lt;/strong&gt;: Experience unparalleled convenience with ergonomic and lightweight design, perfect for everyday wear.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started with our Documentation:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/get_started/Setup/&#34;&gt;App setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/assembly/Buying_Guide/&#34;&gt;Buying Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/assembly/Build_the_device/&#34;&gt;Build the device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/assembly/Install_firmware/&#34;&gt;Install firmware&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD;&#xA;   A[Device] -- Streams Audio --&amp;gt; B[Phone App];&#xA;   B -- Transmits --&amp;gt; C[Deepgram];&#xA;   C -- Returns Transcript --&amp;gt; D[Phone App];&#xA;   D -- Saves Transcript --&amp;gt; E[Phone Storage];&#xA;&#xA;classDef lightMode fill:#FFFFFF, stroke:#333333, color:#333333;&#xA;classDef darkMode fill:#333333, stroke:#FFFFFF, color:#FFFFFF;&#xA;&#xA;classDef lightModeLinks stroke:#333333;&#xA;classDef darkModeLinks stroke:#FFFFFF;&#xA;&#xA;class A,B,C,D,E lightMode&#xA;class A,B,C,D,E darkMode&#xA;&#xA;linkStyle 0 stroke:#FF4136, stroke-width:2px&#xA;linkStyle 1 stroke:#1ABC9C, stroke-width:2px&#xA;linkStyle 2 stroke:#FFCC00, stroke-width:2px&#xA;linkStyle 3 stroke:#2ECC40, stroke-width:2px&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Structure&lt;/h2&gt; &#xA;&lt;p&gt;There are 3 different apps in these repositories located in different branches and folders. Our goal is to merge them into one big project.&lt;/p&gt; &#xA;&lt;p&gt;Folder &#34;AppStandalone&#34;: Standalone version of the app that doesn&#39;t require any hardware to use it.&lt;/p&gt; &#xA;&lt;p&gt;Folder &#34;AppWithWearable&#34;: Wearable-connected version of the app that requires the &#34;Friend necklace&#34; to use it.&lt;/p&gt; &#xA;&lt;p&gt;Folder &#34;AppWithWearableReactNative&#34;: Wearable-connected version of the app that is built in React native&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/get_started/Setup/&#34;&gt;Next Step: Read Getting Started →&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;Follow these steps to get started with your Friend.&lt;/p&gt; &#xA;&lt;h3&gt;Install the app&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo &lt;code&gt;git clone https://github.com/BasedHardware/friend.git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose which version of the app you want to install (see Structure).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Don&#39;t have the device? run &lt;code&gt;cd apps/AppStandalone&lt;/code&gt; in terminal&lt;/li&gt; &#xA;   &lt;li&gt;Have the device/NRF Board? run &lt;code&gt;cd apps/AppWithWearable&lt;/code&gt; in terminal&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://docs.flutter.dev/get-started/install/macos/mobile-ios?tab=download&#34;&gt;Flutter&lt;/a&gt; and &lt;a href=&#34;https://guides.cocoapods.org/using/getting-started.html&#34;&gt;CocoaPods&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install your environment variables&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For AppStandalone, update variables in in .env.template file&lt;/li&gt; &#xA;   &lt;li&gt;For AppWithWearable, you can set the api keys needed on the mobile App from the settings page itself&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;iOS: &lt;a href=&#34;https://apps.apple.com/us/app/xcode/id497799835?mt=12&#34;&gt;Install XCode&lt;/a&gt; then navigate to the iOS folder. You might need to launch Xcode to select a team and specify a bundle identifier. Android: Download/install &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;android Studio &lt;/a&gt; then navigate to the Android folder Don&#39;t run in web/simulator: Bluetooth will not work&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;flutter clean &lt;/code&gt; then &lt;code&gt;flutter pub get&lt;/code&gt; then &lt;code&gt;pod install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When everything is installed, run &lt;code&gt;flutter run &lt;/code&gt;, this should run your app on a selected device&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/assembly/Buying_Guide/&#34;&gt;Next Step: Buying Guide →&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;More links:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/info/Contribution/&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://basedhardware.github.io/Friend/info/Support/&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Made by the Community, with -❤️-:&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/BasedHardware/Friend/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=BasedHardware/Friend&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Friend is available under MIT License&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FreeRTOS/FreeRTOS-Kernel</title>
    <updated>2024-05-19T01:37:37Z</updated>
    <id>tag:github.com,2024-05-19:/FreeRTOS/FreeRTOS-Kernel</id>
    <link href="https://github.com/FreeRTOS/FreeRTOS-Kernel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FreeRTOS kernel files only, submoduled into https://github.com/FreeRTOS/FreeRTOS and various other repos.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/FreeRTOS/FreeRTOS-Kernel/actions/workflows/unit-tests.yml?query=branch%3Amain+event%3Apush+workflow%3A%22CMock+Unit+Tests%22++&#34;&gt;&lt;img src=&#34;https://github.com/FreeRTOS/FreeRTOS-Kernel/actions/workflows/unit-tests.yml/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;CMock Unit Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/FreeRTOS/FreeRTOS-Kernel&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/FreeRTOS/FreeRTOS-Kernel/badge.svg?branch=main&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains FreeRTOS kernel source/header files and kernel ports only. This repository is referenced as a submodule in &lt;a href=&#34;https://github.com/FreeRTOS/FreeRTOS&#34;&gt;FreeRTOS/FreeRTOS&lt;/a&gt; repository, which contains pre-configured demo application projects under &lt;code&gt;FreeRTOS/Demo&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to use FreeRTOS is to start with one of the pre-configured demo application projects. That way you will have the correct FreeRTOS source files included, and the correct include paths configured. Once a demo application is building and executing you can remove the demo application files, and start to add in your own application source files. See the &lt;a href=&#34;https://www.FreeRTOS.org/FreeRTOS-quick-start-guide.html&#34;&gt;FreeRTOS Kernel Quick Start Guide&lt;/a&gt; for detailed instructions and other useful links.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, for FreeRTOS kernel feature information refer to the &lt;a href=&#34;https://www.FreeRTOS.org/features.html&#34;&gt;Developer Documentation&lt;/a&gt;, and &lt;a href=&#34;https://www.FreeRTOS.org/a00106.html&#34;&gt;API Reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also for contributing and creating a Pull Request please refer to &lt;a href=&#34;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/.github/CONTRIBUTING.md#contributing-via-pull-request&#34;&gt;the instructions here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Getting help&lt;/h3&gt; &#xA;&lt;p&gt;If you have any questions or need assistance troubleshooting your FreeRTOS project, we have an active community that can help on the &lt;a href=&#34;https://forums.freertos.org&#34;&gt;FreeRTOS Community Support Forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;To consume FreeRTOS-Kernel&lt;/h2&gt; &#xA;&lt;h3&gt;Consume with CMake&lt;/h3&gt; &#xA;&lt;p&gt;If using CMake, it is recommended to use this repository using FetchContent. Add the following into your project&#39;s main or a subdirectory&#39;s &lt;code&gt;CMakeLists.txt&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Define the source and version/tag you want to use:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;FetchContent_Declare( freertos_kernel&#xA;  GIT_REPOSITORY https://github.com/FreeRTOS/FreeRTOS-Kernel.git&#xA;  GIT_TAG        main #Note: Best practice to use specific git-hash or tagged version&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case you prefer to add it as a git submodule, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule add https://github.com/FreeRTOS/FreeRTOS-Kernel.git &amp;lt;path of the submodule&amp;gt;&#xA;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a freertos_config library (typically an INTERFACE library) The following assumes the directory structure: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;include/FreeRTOSConfig.h&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;add_library(freertos_config INTERFACE)&#xA;&#xA;target_include_directories(freertos_config SYSTEM&#xA;INTERFACE&#xA;    include&#xA;)&#xA;&#xA;target_compile_definitions(freertos_config&#xA;  INTERFACE&#xA;    projCOVERAGE_TEST=0&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case you installed FreeRTOS-Kernel as a submodule, you will have to add it as a subdirectory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;add_subdirectory(${FREERTOS_PATH})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configure the FreeRTOS-Kernel and make it available &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;this particular example supports a native and cross-compiled build option.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;set( FREERTOS_HEAP &#34;4&#34; CACHE STRING &#34;&#34; FORCE)&#xA;# Select the native compile PORT&#xA;set( FREERTOS_PORT &#34;GCC_POSIX&#34; CACHE STRING &#34;&#34; FORCE)&#xA;# Select the cross-compile PORT&#xA;if (CMAKE_CROSSCOMPILING)&#xA;  set(FREERTOS_PORT &#34;GCC_ARM_CA9&#34; CACHE STRING &#34;&#34; FORCE)&#xA;endif()&#xA;&#xA;FetchContent_MakeAvailable(freertos_kernel)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In case of cross compilation, you should also add the following to &lt;code&gt;freertos_config&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;target_compile_definitions(freertos_config INTERFACE ${definitions})&#xA;target_compile_options(freertos_config INTERFACE ${options})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Consuming stand-alone - Cloning this repository&lt;/h3&gt; &#xA;&lt;p&gt;To clone using HTTPS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/FreeRTOS/FreeRTOS-Kernel.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using SSH:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:FreeRTOS/FreeRTOS-Kernel.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Repository structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The root of this repository contains the three files that are common to every port - list.c, queue.c and tasks.c. The kernel is contained within these three files. croutine.c implements the optional co-routine functionality - which is normally only used on very memory limited systems.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;./portable&lt;/code&gt; directory contains the files that are specific to a particular microcontroller and/or compiler. See the readme file in the &lt;code&gt;./portable&lt;/code&gt; directory for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;./include&lt;/code&gt; directory contains the real time kernel header files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;./template_configuration&lt;/code&gt; directory contains a sample &lt;code&gt;FreeRTOSConfig.h&lt;/code&gt; to help jumpstart a new project. See the &lt;a href=&#34;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/examples/template_configuration/FreeRTOSConfig.h&#34;&gt;FreeRTOSConfig.h&lt;/a&gt; file for instructions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code Formatting&lt;/h3&gt; &#xA;&lt;p&gt;FreeRTOS files are formatted using the &#34;&lt;a href=&#34;https://github.com/uncrustify/uncrustify&#34;&gt;uncrustify&lt;/a&gt;&#34; tool. The configuration file used by uncrustify can be found in the &lt;a href=&#34;https://github.com/FreeRTOS/CI-CD-Github-Actions&#34;&gt;FreeRTOS/CI-CD-GitHub-Actions&#39;s&lt;/a&gt; &lt;a href=&#34;https://github.com/FreeRTOS/CI-CD-Github-Actions/tree/main/formatting&#34;&gt;uncrustify.cfg&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Line Endings&lt;/h3&gt; &#xA;&lt;p&gt;File checked into the FreeRTOS-Kernel repository use unix-style LF line endings for the best compatibility with git.&lt;/p&gt; &#xA;&lt;p&gt;For optimal compatibility with Microsoft Windows tools, it is best to enable the git autocrlf feature. You can enable this setting for the current repository using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git config core.autocrlf true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Git History Optimizations&lt;/h3&gt; &#xA;&lt;p&gt;Some commits in this repository perform large refactors which touch many lines and lead to unwanted behavior when using the &lt;code&gt;git blame&lt;/code&gt; command. You can configure git to ignore the list of large refactor commits in this repository with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git config blame.ignoreRevsFile .git-blame-ignore-revs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Spelling and Formatting&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using &lt;a href=&#34;https://code.visualstudio.com&#34;&gt;Visual Studio Code&lt;/a&gt;, commonly referred to as VSCode, when working on the FreeRTOS-Kernel. The FreeRTOS-Kernel also uses &lt;a href=&#34;https://cspell.org/&#34;&gt;cSpell&lt;/a&gt; as part of its spelling check. The config file for which can be found at &lt;a href=&#34;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/cspell.config.yaml&#34;&gt;cspell.config.yaml&lt;/a&gt; There is additionally a &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker&#34;&gt;cSpell plugin for VSCode&lt;/a&gt; that can be used as well. &lt;em&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/.github/.cSpellWords.txt&#34;&gt;.cSpellWords.txt&lt;/a&gt;&lt;/em&gt; contains words that are not traditionally found in an English dictionary. It is used by the spellchecker to verify the various jargon, variable names, and other odd words used in the FreeRTOS code base are correct. If your pull request fails to pass the spelling and you believe this is a mistake, then add the word to &lt;em&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/.github/.cSpellWords.txt&#34;&gt;.cSpellWords.txt&lt;/a&gt;&lt;/em&gt;. When adding a word please then sort the list, which can be done by running the bash command: &lt;code&gt;sort -u .cSpellWords.txt -o .cSpellWords.txt&lt;/code&gt; Note that only the FreeRTOS-Kernel Source Files, &lt;a href=&#34;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/include&#34;&gt;include&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/portable/MemMang&#34;&gt;portable/MemMang&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/portable/Common&#34;&gt;portable/Common&lt;/a&gt; files are checked for proper spelling, and formatting at this time.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>winsiderss/systeminformer</title>
    <updated>2024-05-19T01:37:37Z</updated>
    <id>tag:github.com,2024-05-19:/winsiderss/systeminformer</id>
    <link href="https://github.com/winsiderss/systeminformer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware. Brought to you by Winsider Seminars &amp; Solutions, Inc. @ http://www.windows-internals.com&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/winsiderss/systeminformer/actions/workflows/msbuild.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/winsiderss/systeminformer/msbuild.yml?branch=master&amp;amp;style=for-the-badge&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/winsiderss/systeminformer/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/winsiderss/systeminformer.svg?style=for-the-badge&amp;amp;color=blue&#34; alt=&#34;Build contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?style=for-the-badge&amp;amp;color=blue&#34; alt=&#34;Licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://somsubhra.github.io/github-release-stats/?username=winsiderss&amp;amp;repository=systeminformer&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/winsiderss/systeminformer/total.svg?style=for-the-badge&amp;amp;color=red&#34; alt=&#34;Github stats&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourceforge.net/projects/processhacker/files/stats/timeline?period=monthly&#34;&gt;&lt;img src=&#34;https://img.shields.io/sourceforge/dt/processhacker.svg?style=for-the-badge&amp;amp;color=red&#34; alt=&#34;SourceForge stats&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; src=&#34;https://github.com/winsiderss/systeminformer/raw/master/SystemInformer/resources/systeminformer-128x128.png&#34; width=&#34;128&#34; height=&#34;128&#34; style=&#34;max-width: 100%;padding-right: 20px;&#34;&gt; &#xA;&lt;h2&gt;System Informer&lt;/h2&gt; &#xA;&lt;p&gt;A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware. Brought to you by Winsider Seminars &amp;amp; Solutions, Inc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://systeminformer.sourceforge.io/&#34;&gt;Project Website&lt;/a&gt; - &lt;a href=&#34;https://systeminformer.sourceforge.io/downloads.php&#34;&gt;Project Downloads&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System requirements&lt;/h2&gt; &#xA;&lt;p&gt;Windows 10 or higher, 32-bit or 64-bit.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A detailed overview of system activity with highlighting.&lt;/li&gt; &#xA; &lt;li&gt;Graphs and statistics allow you quickly to track down resource hogs and runaway processes.&lt;/li&gt; &#xA; &lt;li&gt;Can&#39;t edit or delete a file? Discover which processes are using that file.&lt;/li&gt; &#xA; &lt;li&gt;See what programs have active network connections, and close them if necessary.&lt;/li&gt; &#xA; &lt;li&gt;Get real-time information on disk access.&lt;/li&gt; &#xA; &lt;li&gt;View detailed stack traces with kernel-mode, WOW64 and .NET support.&lt;/li&gt; &#xA; &lt;li&gt;Go beyond services.msc: create, edit and control services.&lt;/li&gt; &#xA; &lt;li&gt;Small, portable and no installation required.&lt;/li&gt; &#xA; &lt;li&gt;100% &lt;a href=&#34;https://www.gnu.org/philosophy/free-sw.en.html&#34;&gt;Free Software&lt;/a&gt; (&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building the project&lt;/h2&gt; &#xA;&lt;p&gt;Requires Visual Studio (2022 or later).&lt;/p&gt; &#xA;&lt;p&gt;Execute &lt;code&gt;build_release.cmd&lt;/code&gt; located in the &lt;code&gt;build&lt;/code&gt; directory to compile the project or load the &lt;code&gt;SystemInformer.sln&lt;/code&gt; and &lt;code&gt;Plugins.sln&lt;/code&gt; solutions if you prefer building the project using Visual Studio.&lt;/p&gt; &#xA;&lt;p&gt;You can download the free &lt;a href=&#34;https://www.visualstudio.com/vs/community/&#34;&gt;Visual Studio Community Edition&lt;/a&gt; to build the System Informer source code.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/winsiderss/systeminformer/master/build/README.md&#34;&gt;build readme&lt;/a&gt; for more information or if you&#39;re having trouble building.&lt;/p&gt; &#xA;&lt;h2&gt;Enhancements/Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/winsiderss/systeminformer/issues&#34;&gt;GitHub issue tracker&lt;/a&gt; for reporting problems or suggesting new features.&lt;/p&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;p&gt;If you are running System Informer from a USB drive, you may want to save System Informer&#39;s settings there as well. To do this, create a blank file named &#34;SystemInformer.exe.settings.xml&#34; in the same directory as SystemInformer.exe. You can do this using Windows Explorer:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure &#34;Hide extensions for known file types&#34; is unticked in Tools &amp;gt; Folder options &amp;gt; View.&lt;/li&gt; &#xA; &lt;li&gt;Right-click in the folder and choose New &amp;gt; Text Document.&lt;/li&gt; &#xA; &lt;li&gt;Rename the file to SystemInformer.exe.settings.xml (delete the &#34;.txt&#34; extension).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Plugins can be configured from Options &amp;gt; Plugins.&lt;/p&gt; &#xA;&lt;p&gt;If you experience any crashes involving plugins, make sure they are up to date.&lt;/p&gt; &#xA;&lt;p&gt;Disk and Network information provided by the ExtendedTools plugin is only available when running System Informer with administrative rights.&lt;/p&gt;</summary>
  </entry>
</feed>