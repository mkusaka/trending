<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-27T01:43:02Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lvgl/lvgl</title>
    <updated>2022-11-27T01:43:02Z</updated>
    <id>tag:github.com,2022-11-27:/lvgl/lvgl</id>
    <link href="https://github.com/lvgl/lvgl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Embedded graphics library to create beautiful UIs for any MCU, MPU and display type. It&#39;s boosted by a professional yet affordable drag and drop UI editor, called SquareLine Studio.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE&lt;/strong&gt; The next major version (v9.0.0) is developed in the master branch. The last stable version is available in the &lt;a href=&#34;https://github.com/lvgl/lvgl/tree/release/v8.3&#34;&gt;release/v8.3&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/lvgl&#34; target=&#34;_blank&#34;&gt;&lt;img align=&#34;left&#34; src=&#34;https://lvgl.io/assets/images/sponsor.png&#34; height=&#34;32px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt; &lt;b&gt;English&lt;/b&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_zh.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_pt_BR.md&#34;&gt;Portugu√™s do Brasil&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_jp.md&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://lvgl.io/assets/images/logo_lvgl.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Light and Versatile Graphics Library&lt;/h1&gt; &amp;nbsp; &#xA;&lt;br&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/smartwatch_demo.gif&#34;&gt; &amp;nbsp; &amp;nbsp; &#xA; &lt;img border=&#34;1px&#34; src=&#34;https://lvgl.io/assets/images/lvgl_widgets_demo.gif&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://lvgl.io&#34; title=&#34;Homepage of LVGL&#34;&gt;Website &lt;/a&gt; | &lt;a href=&#34;https://docs.lvgl.io/&#34; title=&#34;Detailed documentation with 100+ examples&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://forum.lvgl.io&#34; title=&#34;Get help and help others&#34;&gt;Forum&lt;/a&gt; | &lt;a href=&#34;https://lvgl.io/demos&#34; title=&#34;Demos running in your browser&#34;&gt;Demos&lt;/a&gt; | &lt;a href=&#34;https://lvgl.io/services&#34; title=&#34;Graphics design, UI implementation and consulting&#34;&gt;Services&lt;/a&gt; | &lt;a href=&#34;https://squareline.io/&#34; title=&#34;UI Editor for LVGL&#34;&gt;SquareLine Studio&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìí&lt;/span&gt; Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mature and Well-known&lt;/strong&gt;&lt;br&gt; LVGL is the most popular free and open source embedded graphics library to create beautiful UIs for any MCU, MPU and display type. It&#39;s supported by industry leading vendors and projects like &amp;nbsp;Arm, STM32, NXP, Espressif, Nuvoton, Arduino, RT-Thread, Zephyr, NuttX, Adafruit and many more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Feature Rich&lt;/strong&gt;&lt;br&gt; It has all the features to create modern and beautiful GUIs: 30+ built-in widgets, a powerful style system, web inspired layout managers, and a typography system supporting many languages. To integrate LVGL into your platform, all you need is at least 32kB RAM and 128 kB Flash, a C compiler, a frame buffer, and at least an 1/10 screen sized buffer for rendering.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;UI Editor&lt;/strong&gt;&lt;br&gt; SquareLine Studio is a professional yet affordable drag and drop UI editor for LVGL. It runs on Windows, Linux and MacOS too and you can try it out even without registering to the website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;&lt;br&gt; Our team is ready to help you with graphics design, UI implementation and consulting services. Contact us if you need some support during the development of your next GUI project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöÄ&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Free and Portable&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A fully portable C (C++ compatible) library with no external dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Can be compiled to any MCU or MPU, with any (RT)OS.&lt;/li&gt; &#xA; &lt;li&gt;Supports monochrome, ePaper, OLED or TFT displays, or even monitors. &lt;a href=&#34;https://docs.lvgl.io/master/porting/project.html&#34;&gt;Porting Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Distributed under the MIT licence, so you can easily use it in commercial projects too.&lt;/li&gt; &#xA; &lt;li&gt;Needs only 32kB RAM and 128 kB Flash, a frame buffer, and at least an 1/10 screen sized buffer for rendering.&lt;/li&gt; &#xA; &lt;li&gt;OS, External memory and GPU are supported but not required.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Widgets, Styles, Layouts and more&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;30+ built-in &lt;a href=&#34;https://docs.lvgl.io/master/widgets/index.html&#34;&gt;Widgets&lt;/a&gt;: &amp;nbsp;Button, Label, Slider, Chart, Keyboard, Meter, Arc, Table and many more.&lt;/li&gt; &#xA; &lt;li&gt;Flexible &lt;a href=&#34;https://docs.lvgl.io/master/overview/style.html&#34;&gt;Style system&lt;/a&gt; with &amp;nbsp;~100 style properties to customize any part of the widgets in any state.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/layouts/flex.html&#34;&gt;Flexbox&lt;/a&gt; and &lt;a href=&#34;https://docs.lvgl.io/master/layouts/grid.html&#34;&gt;Grid&lt;/a&gt;-like layouts engines to automatically size and position the widgets in a responsive way.&lt;/li&gt; &#xA; &lt;li&gt;Texts are rendered with UTF-8 encoding supporting CJK, Thai, Hindi, Arabic, Persian writing systems.&lt;/li&gt; &#xA; &lt;li&gt;Word wrapping, kerning, text scrolling, sub-pixel rendering, Pinyin-IME Chinese input, Emojis in texts.&lt;/li&gt; &#xA; &lt;li&gt;Rendering engine supporting animations, anti-aliasing, opacity, smooth scrolling, shadows, image transformation, etc &amp;nbsp;&lt;/li&gt; &#xA; &lt;li&gt;Supports Mouse, Touchpad, Keypad, Keyboard, External buttons, Encoder &lt;a href=&#34;https://docs.lvgl.io/master/porting/indev.html&#34;&gt;Input devices&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/overview/display.html&#34;&gt;Multiple display&lt;/a&gt; support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Binding and Build Support&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.lvgl.io/2019-02-20/micropython-bindings&#34;&gt;Micropython Binding&lt;/a&gt; exposes LVGL API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.lvgl.io/2022-08-24/pikascript-and-lvgl&#34;&gt;PikaScript Binding&lt;/a&gt; python on MCU lighter and easier.&lt;/li&gt; &#xA; &lt;li&gt;No custom build system is used. You can build LVGL as you build the other files of your project.&lt;/li&gt; &#xA; &lt;li&gt;Support for Make and &lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/cmake.html&#34;&gt;CMake&lt;/a&gt; is included out of the box.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/pc-simulator.html&#34;&gt;Develop on PC&lt;/a&gt; and use the same UI code on embedded hardware.&lt;/li&gt; &#xA; &lt;li&gt;Convert the C UI code to HTML file with our &lt;a href=&#34;https://github.com/lvgl/lv_web_emscripten&#34;&gt;Emscripten port&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docs, Tools, and Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Detailed &lt;a href=&#34;https://docs.lvgl.io/&#34;&gt;Documentation&lt;/a&gt; with &lt;a href=&#34;https://docs.lvgl.io/master/index.html&#34;&gt;100+ simple examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://squareline.io/&#34;&gt;SquareLine Studio&lt;/a&gt; - A professional and easy-to-use UI editor software to speed up and simplify the UI development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lvgl.io/services&#34;&gt;Services&lt;/a&gt; such as User interface design, Implementation and Consulting to make UI development simpler and faster.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ù§Ô∏è&lt;/span&gt; Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;If LVGL saved you a lot of time and money or you just had fun using it, consider &lt;a href=&#34;https://opencollective.com/lvgl&#34;&gt;Supporting its Development&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How do we spend the donations?&lt;/strong&gt;&lt;br&gt; Our goal is to provide financial compensation for people who do the most for LVGL. It means not only the maintainers but anyone who implements a great feature should get a payment from the accumulated money. We use the donations to cover our operational costs like servers and related services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to donate?&lt;/strong&gt;&lt;br&gt; We use &lt;a href=&#34;https://opencollective.com/lvgl&#34;&gt;Open Collective&lt;/a&gt; where you can easily send one time or recurring donations. You can also see all of our expenses in a transparent way.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to get paid for your contribution?&lt;/strong&gt;&lt;br&gt; If someone implements or fixes an issue labeled as &lt;a href=&#34;https://github.com/lvgl/lvgl/labels/Sponsored&#34;&gt;Sponsored&lt;/a&gt; he or she will get a payment for that work. We estimate the required time, complexity and importance of the issue and set a price accordingly. To jump in just comment on a &lt;a href=&#34;https://github.com/lvgl/lvgl/labels/Sponsored&#34;&gt;Sponsored&lt;/a&gt; issue saying &#34;Hi, I&#39;d like to deal with it. This is how I&#39;m planning to fix/implement it...&#34;. A work is considered ready when it&#39;s approved and merged by a maintainer. After that you can submit and expense at &lt;a href=&#34;https://opencollective.com/lvgl&#34;&gt;opencollective.com&lt;/a&gt; and you will receive teh payment in a few days.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Organizations supporting LVGL&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://opencollective.com/lvgl&#34;&gt;&lt;img src=&#34;https://opencollective.com/lvgl/organizations.svg?width=600&#34; alt=&#34;Sponsors of LVGL&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Individuals supporting LVGL&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://opencollective.com/lvgl&#34;&gt;&lt;img src=&#34;https://opencollective.com/lvgl/individuals.svg?width=600&#34; alt=&#34;Backers of LVGL&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üì¶&lt;/span&gt; Packages&lt;/h2&gt; &#xA;&lt;p&gt;LVGL is available as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/arduino.html&#34;&gt;Arduino library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.platformio.org/libraries/lvgl/lvgl&#34;&gt;PlatformIO package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.zephyrproject.org/latest/reference/kconfig/CONFIG_LVGL.html&#34;&gt;Zephyr library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/espressif.html&#34;&gt;ESP32 component&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nxp.com/design/software/embedded-software/lvgl-open-source-graphics-library:LITTLEVGL-OPEN-SOURCE-GRAPHICS-LIBRARY&#34;&gt;NXP MCUXpresso component&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/os/nuttx.html&#34;&gt;NuttX library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/os/rt-thread.html&#34;&gt;RT-Thread RTOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CMSIS-Pack&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doc.riot-os.org/group__pkg__lvgl.html#details&#34;&gt;RIOT OS package&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;ü§ñ&lt;/span&gt; Examples&lt;/h2&gt; &#xA;&lt;p&gt;See some examples of creating widgets, using layouts and applying styles. You will find C and MicroPython code, and links to try out or edit the examples in an online MicroPython editor.&lt;/p&gt; &#xA;&lt;p&gt;For more examples check out the &lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;Examples&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Hello world label&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_1.png&#34; alt=&#34;Simple Hello world label example in LVGL&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;/*Change the active screen&#39;s background color*/&#xA;lv_obj_set_style_bg_color(lv_scr_act(), lv_color_hex(0x003a57), LV_PART_MAIN);&#xA;&#xA;/*Create a white label, set its text and align it to the center*/&#xA;lv_obj_t * label = lv_label_create(lv_scr_act());&#xA;lv_label_set_text(label, &#34;Hello world&#34;);&#xA;lv_obj_set_style_text_color(lv_scr_act(), lv_color_hex(0xffffff), LV_PART_MAIN);&#xA;lv_obj_align(label, LV_ALIGN_CENTER, 0, 0);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_direct=4ab7c40c35b0dc349aa2f0c3b00938d7d8e8ac9f&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Change the active screen&#39;s background color&#xA;scr = lv.scr_act()&#xA;scr.set_style_bg_color(lv.color_hex(0x003a57), lv.PART.MAIN)&#xA;&#xA;# Create a white label, set its text and align it to the center&#xA;label = lv.label(lv.scr_act()) &#xA;label.set_text(&#34;Hello world&#34;)&#xA;label.set_style_text_color(lv.color_hex(0xffffff), lv.PART.MAIN)&#xA;label.align(lv.ALIGN.CENTER, 0, 0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Button with Click Event&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_2.gif&#34; alt=&#34;LVGL button with label example&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;lv_obj_t * btn = lv_btn_create(lv_scr_act()); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Add a button to the current screen*/&#xA;lv_obj_center(btn); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;         /*Set its position*/&#xA;lv_obj_set_size(btn, 100, 50); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*Set its size*/&#xA;lv_obj_add_event_cb(btn, btn_event_cb, LV_EVENT_CLICKED, NULL); /*Assign a callback to the button*/&#xA;&#xA;lv_obj_t * label = lv_label_create(btn); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*Add a label to the button*/&#xA;lv_label_set_text(label, &#34;Button&#34;); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Set the labels text*/&#xA;lv_obj_center(label); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Align the label to the center*/&#xA;...&#xA;&#xA;void btn_event_cb(lv_event_t * e)&#xA;{&#xA;&amp;nbsp; printf(&#34;Clicked\n&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=926bde43ec7af0146c486de470c53f11f167491e&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def btn_event_cb(e):&#xA;&amp;nbsp; print(&#34;Clicked&#34;)&#xA;&#xA;# Create a Button and a Label&#xA;btn = lv.btn(lv.scr_act())&#xA;btn.center()&#xA;btn.set_size(100, 50)&#xA;btn.add_event_cb(btn_event_cb, lv.EVENT.CLICKED, None)&#xA;&#xA;label = lv.label(btn)&#xA;label.set_text(&#34;Button&#34;)&#xA;label.center()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Checkboxes with Layout&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_3.gif&#34; alt=&#34;Checkboxes with layout in LVGL&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;&#xA;lv_obj_set_flex_flow(lv_scr_act(), LV_FLEX_FLOW_COLUMN);&#xA;lv_obj_set_flex_align(lv_scr_act(), LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER);&#xA;&#xA;lv_obj_t * cb;&#xA;cb = lv_checkbox_create(lv_scr_act());&#xA;lv_checkbox_set_text(cb, &#34;Apple&#34;);&#xA;lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);&#xA;&#xA;cb = lv_checkbox_create(lv_scr_act());&#xA;lv_checkbox_set_text(cb, &#34;Banana&#34;);&#xA;lv_obj_add_state(cb, LV_STATE_CHECKED);&#xA;lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);&#xA;&#xA;cb = lv_checkbox_create(lv_scr_act());&#xA;lv_checkbox_set_text(cb, &#34;Lemon&#34;);&#xA;lv_obj_add_state(cb, LV_STATE_DISABLED);&#xA;lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);&#xA;&#xA;cb = lv_checkbox_create(lv_scr_act());&#xA;lv_obj_add_state(cb, LV_STATE_CHECKED | LV_STATE_DISABLED);&#xA;lv_checkbox_set_text(cb, &#34;Melon\nand a new line&#34;);&#xA;lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=311d37e5f70daf1cb0d2cad24c7f72751b5f1792&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def event_handler(e):&#xA;    code = e.get_code()&#xA;    obj = e.get_target()&#xA;    if code == lv.EVENT.VALUE_CHANGED:&#xA;        txt = obj.get_text()&#xA;        if obj.get_state() &amp;amp; lv.STATE.CHECKED:&#xA;            state = &#34;Checked&#34;&#xA;        else:&#xA;            state = &#34;Unchecked&#34;&#xA;        print(txt + &#34;:&#34; + state)&#xA;&#xA;&#xA;lv.scr_act().set_flex_flow(lv.FLEX_FLOW.COLUMN)&#xA;lv.scr_act().set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER)&#xA;&#xA;cb = lv.checkbox(lv.scr_act())&#xA;cb.set_text(&#34;Apple&#34;)&#xA;cb.add_event_cb(event_handler, lv.EVENT.ALL, None)&#xA;&#xA;cb = lv.checkbox(lv.scr_act())&#xA;cb.set_text(&#34;Banana&#34;)&#xA;cb.add_state(lv.STATE.CHECKED)&#xA;cb.add_event_cb(event_handler, lv.EVENT.ALL, None)&#xA;&#xA;cb = lv.checkbox(lv.scr_act())&#xA;cb.set_text(&#34;Lemon&#34;)&#xA;cb.add_state(lv.STATE.DISABLED)&#xA;cb.add_event_cb(event_handler, lv.EVENT.ALL, None)&#xA;&#xA;cb = lv.checkbox(lv.scr_act())&#xA;cb.add_state(lv.STATE.CHECKED | lv.STATE.DISABLED)&#xA;cb.set_text(&#34;Melon&#34;)&#xA;cb.add_event_cb(event_handler, lv.EVENT.ALL, None)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Styling a Slider&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_4.gif&#34; alt=&#34;Styling a slider with LVGL&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;lv_obj_t * slider = lv_slider_create(lv_scr_act());&#xA;lv_slider_set_value(slider, 70, LV_ANIM_OFF);&#xA;lv_obj_set_size(slider, 300, 20);&#xA;lv_obj_center(slider);&#xA;&#xA;/*Add local styles to MAIN part (background rectangle)*/&#xA;lv_obj_set_style_bg_color(slider, lv_color_hex(0x0F1215), LV_PART_MAIN);&#xA;lv_obj_set_style_bg_opa(slider, 255, LV_PART_MAIN);&#xA;lv_obj_set_style_border_color(slider, lv_color_hex(0x333943), LV_PART_MAIN);&#xA;lv_obj_set_style_border_width(slider, 5, LV_PART_MAIN);&#xA;lv_obj_set_style_pad_all(slider, 5, LV_PART_MAIN);&#xA;&#xA;/*Create a reusable style sheet for the INDICATOR part*/&#xA;static lv_style_t style_indicator;&#xA;lv_style_init(&amp;amp;style_indicator);&#xA;lv_style_set_bg_color(&amp;amp;style_indicator, lv_color_hex(0x37B9F5));&#xA;lv_style_set_bg_grad_color(&amp;amp;style_indicator, lv_color_hex(0x1464F0));&#xA;lv_style_set_bg_grad_dir(&amp;amp;style_indicator, LV_GRAD_DIR_HOR);&#xA;lv_style_set_shadow_color(&amp;amp;style_indicator, lv_color_hex(0x37B9F5));&#xA;lv_style_set_shadow_width(&amp;amp;style_indicator, 15);&#xA;lv_style_set_shadow_spread(&amp;amp;style_indicator, 5);&#xA;4&#xA;/*Add the style sheet to the slider&#39;s INDICATOR part*/&#xA;lv_obj_add_style(slider, &amp;amp;style_indicator, LV_PART_INDICATOR);&#xA;&#xA;/*Add the same style to the KNOB part too and locally overwrite some properties*/&#xA;lv_obj_add_style(slider, &amp;amp;style_indicator, LV_PART_KNOB);&#xA;&#xA;lv_obj_set_style_outline_color(slider, lv_color_hex(0x0096FF), LV_PART_KNOB);&#xA;lv_obj_set_style_outline_width(slider, 3, LV_PART_KNOB);&#xA;lv_obj_set_style_outline_pad(slider, -5, LV_PART_KNOB);&#xA;lv_obj_set_style_shadow_spread(slider, 2, LV_PART_KNOB);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=c431c7b4dfd2cc0dd9c392b74365d5af6ea986f0&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a slider and add the style&#xA;slider = lv.slider(lv.scr_act())&#xA;slider.set_value(70, lv.ANIM.OFF)&#xA;slider.set_size(300, 20)&#xA;slider.center()&#xA;&#xA;# Add local styles to MAIN part (background rectangle)&#xA;slider.set_style_bg_color(lv.color_hex(0x0F1215), lv.PART.MAIN)&#xA;slider.set_style_bg_opa(255, lv.PART.MAIN)&#xA;slider.set_style_border_color(lv.color_hex(0x333943), lv.PART.MAIN)&#xA;slider.set_style_border_width(5, lv.PART.MAIN)&#xA;slider.set_style_pad_all(5, lv.PART.MAIN)&#xA;&#xA;# Create a reusable style sheet for the INDICATOR part&#xA;style_indicator = lv.style_t()&#xA;style_indicator.init()&#xA;style_indicator.set_bg_color(lv.color_hex(0x37B9F5))&#xA;style_indicator.set_bg_grad_color(lv.color_hex(0x1464F0))&#xA;style_indicator.set_bg_grad_dir(lv.GRAD_DIR.HOR)&#xA;style_indicator.set_shadow_color(lv.color_hex(0x37B9F5))&#xA;style_indicator.set_shadow_width(15)&#xA;style_indicator.set_shadow_spread(5)&#xA;&#xA;# Add the style sheet to the slider&#39;s INDICATOR part&#xA;slider.add_style(style_indicator, lv.PART.INDICATOR)&#xA;slider.add_style(style_indicator, lv.PART.KNOB)&#xA;&#xA;# Add the same style to the KNOB part too and locally overwrite some properties&#xA;slider.set_style_outline_color(lv.color_hex(0x0096FF), lv.PART.KNOB)&#xA;slider.set_style_outline_width(3, lv.PART.KNOB)&#xA;slider.set_style_outline_pad(-5, lv.PART.KNOB)&#xA;slider.set_style_shadow_spread(2, lv.PART.KNOB)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;English, Hebrew (mixed LTR-RTL) and Chinese texts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kisvegabor/test/raw/master/readme_example_5.png&#34; alt=&#34;English, Hebrew and Chinese texts with LVGL&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;C code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;lv_obj_t * ltr_label = lv_label_create(lv_scr_act());&#xA;lv_label_set_text(ltr_label, &#34;In modern terminology, a microcontroller is similar to a system on a chip (SoC).&#34;);&#xA;lv_obj_set_style_text_font(ltr_label, &amp;amp;lv_font_montserrat_16, 0);&#xA;lv_obj_set_width(ltr_label, 310);&#xA;lv_obj_align(ltr_label, LV_ALIGN_TOP_LEFT, 5, 5);&#xA;&#xA;lv_obj_t * rtl_label = lv_label_create(lv_scr_act());&#xA;lv_label_set_text(rtl_label,&#34;◊û◊¢◊ë◊ì, ◊ê◊ï ◊ë◊©◊û◊ï ◊î◊û◊ú◊ê ◊ô◊ó◊ô◊ì◊™ ◊¢◊ô◊ë◊ï◊ì ◊û◊®◊õ◊ñ◊ô◊™ (◊ë◊ê◊†◊í◊ú◊ô◊™: CPU - Central Processing Unit).&#34;);&#xA;lv_obj_set_style_base_dir(rtl_label, LV_BASE_DIR_RTL, 0);&#xA;lv_obj_set_style_text_font(rtl_label, &amp;amp;lv_font_dejavu_16_persian_hebrew, 0);&#xA;lv_obj_set_width(rtl_label, 310);&#xA;lv_obj_align(rtl_label, LV_ALIGN_LEFT_MID, 5, 0);&#xA;&#xA;lv_obj_t * cz_label = lv_label_create(lv_scr_act());&#xA;lv_label_set_text(cz_label,&#xA;                  &#34;ÂµåÂÖ•ÂºèÁ≥ªÁªüÔºàEmbedded SystemÔºâÔºå\nÊòØ‰∏ÄÁßçÂµåÂÖ•Êú∫Ê¢∞ÊàñÁîµÊ∞îÁ≥ªÁªüÂÜÖÈÉ®„ÄÅÂÖ∑Êúâ‰∏ì‰∏ÄÂäüËÉΩÂíåÂÆûÊó∂ËÆ°ÁÆóÊÄßËÉΩÁöÑËÆ°ÁÆóÊú∫Á≥ªÁªü„ÄÇ&#34;);&#xA;lv_obj_set_style_text_font(cz_label, &amp;amp;lv_font_simsun_16_cjk, 0);&#xA;lv_obj_set_width(cz_label, 310);&#xA;lv_obj_align(cz_label, LV_ALIGN_BOTTOM_LEFT, 5, -5);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;MicroPython code | &lt;a href=&#34;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=18bb38200a64e10ead1aa17a65c977fc18131842&#34; target=&#34;_blank&#34;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ltr_label = lv.label(lv.scr_act())&#xA;ltr_label.set_text(&#34;In modern terminology, a microcontroller is similar to a system on a chip (SoC).&#34;)&#xA;ltr_label.set_style_text_font(lv.font_montserrat_16, 0);&#xA;&#xA;ltr_label.set_width(310)&#xA;ltr_label.align(lv.ALIGN.TOP_LEFT, 5, 5)&#xA;&#xA;rtl_label = lv.label(lv.scr_act())&#xA;rtl_label.set_text(&#34;◊û◊¢◊ë◊ì, ◊ê◊ï ◊ë◊©◊û◊ï ◊î◊û◊ú◊ê ◊ô◊ó◊ô◊ì◊™ ◊¢◊ô◊ë◊ï◊ì ◊û◊®◊õ◊ñ◊ô◊™ (◊ë◊ê◊†◊í◊ú◊ô◊™: CPU - Central Processing Unit).&#34;)&#xA;rtl_label.set_style_base_dir(lv.BASE_DIR.RTL, 0)&#xA;rtl_label.set_style_text_font(lv.font_dejavu_16_persian_hebrew, 0)&#xA;rtl_label.set_width(310)&#xA;rtl_label.align(lv.ALIGN.LEFT_MID, 5, 0)&#xA;&#xA;font_simsun_16_cjk = lv.font_load(&#34;S:../../assets/font/lv_font_simsun_16_cjk.fnt&#34;)&#xA;&#xA;cz_label = lv.label(lv.scr_act())&#xA;cz_label.set_style_text_font(font_simsun_16_cjk, 0)&#xA;cz_label.set_text(&#34;ÂµåÂÖ•ÂºèÁ≥ªÁªüÔºàEmbedded SystemÔºâÔºå\nÊòØ‰∏ÄÁßçÂµåÂÖ•Êú∫Ê¢∞ÊàñÁîµÊ∞îÁ≥ªÁªüÂÜÖÈÉ®„ÄÅÂÖ∑Êúâ‰∏ì‰∏ÄÂäüËÉΩÂíåÂÆûÊó∂ËÆ°ÁÆóÊÄßËÉΩÁöÑËÆ°ÁÆóÊú∫Á≥ªÁªü„ÄÇ&#34;)&#xA;cz_label.set_width(310)&#xA;cz_label.align(lv.ALIGN.BOTTOM_LEFT, 5, -5)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ñ∂&lt;/span&gt; Get started&lt;/h2&gt; &#xA;&lt;p&gt;This list will guide you to get started with LVGL step-by-step.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get Familiar with LVGL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://lvgl.io/demos&#34;&gt;Online demos&lt;/a&gt; to see LVGL in action (3 minutes)&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/intro/index.html&#34;&gt;Introduction&lt;/a&gt; page of the documentation (5 minutes)&lt;/li&gt; &#xA; &lt;li&gt;Get familiar with the basics on the &lt;a href=&#34;https://docs.lvgl.io/master/get-started/quick-overview.html&#34;&gt;Quick overview&lt;/a&gt; page (15 minutes)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Start to Use LVGL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Set up a &lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/pc-simulator.html&#34;&gt;Simulator&lt;/a&gt; (10 minutes)&lt;/li&gt; &#xA; &lt;li&gt;Try out some &lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Port LVGL to a board. See the &lt;a href=&#34;https://docs.lvgl.io/master/porting/index.html&#34;&gt;Porting&lt;/a&gt; guide or check the ready to use &lt;a href=&#34;https://github.com/lvgl?q=lv_port_&#34;&gt;Projects&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Become a Pro&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/overview/index.html&#34;&gt;Overview&lt;/a&gt; page to get a better understanding of the library (2-3 hours)&lt;/li&gt; &#xA; &lt;li&gt;Check the documentation of the &lt;a href=&#34;https://docs.lvgl.io/master/widgets/index.html&#34;&gt;Widgets&lt;/a&gt; to see their features and usage&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get Help and Help Others&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;If you have questions go to the &lt;a href=&#34;http://forum.lvgl.io/&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/CONTRIBUTING.html&#34;&gt;Contributing&lt;/a&gt; guide to see how you can help to improve LVGL (15 minutes)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Go for More&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;11&#34;&gt; &#xA; &lt;li&gt;Download and try out &lt;a href=&#34;https://squareline.io/&#34;&gt;SquareLine Studio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Contact us for &lt;a href=&#34;https://lvgl.io/services&#34;&gt;Services&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;ü§ù&lt;/span&gt; Services&lt;/h2&gt; &#xA;&lt;p&gt;LVGL LLC was established to provide a solid background for LVGL library and to offer several type of services to help you in UI development. With 15+ years of experience in the user interface and graphics industry we can help you the bring your UI to the next level.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Graphics design&lt;/strong&gt; Our in-house graphics designers are experts in creating beautiful modern designs which fit to your product and the resources of your hardware.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI implementation&lt;/strong&gt; We can also implement your UI based on the design you or we have created. You can be sure that we will make the most out of your hardware and LVGL. If a feature or widget is missing from LVGL, don&#39;t worry, we will implement it for you.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consulting and Support&lt;/strong&gt; We can support you with consulting as well to avoid pricey and time consuming mistakes during the UI development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Board certification&lt;/strong&gt; For companies who are offering development boards, or production ready kits we do board certification which shows how board can run LVGL.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://lvgl.io/demos&#34;&gt;Demos&lt;/a&gt; as reference. For more information take look at the &lt;a href=&#34;https://lvgl.io/services&#34;&gt;Services page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lvgl.io/#contact&#34;&gt;Contact us&lt;/a&gt; and tell how we can help.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üåü&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;LVGL is an open project and contribution is very welcome. There are many ways to contribute from simply speaking about your project, through writing examples, improving the documentation, fixing bugs or even hosting your own project under the LVGL organization.&lt;/p&gt; &#xA;&lt;p&gt;For a detailed description of contribution opportunities visit the &lt;a href=&#34;https://docs.lvgl.io/master/CONTRIBUTING.html&#34;&gt;Contributing&lt;/a&gt; section of the documentation.&lt;/p&gt; &#xA;&lt;p&gt;More than 300 people already left their fingerprint in LVGL. Be one them! See your here! &lt;span&gt;üôÇ&lt;/span&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/lvgl/lvgl/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=lvgl/lvgl&amp;amp;max=48&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;... and many other.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DarkFlippers/unleashed-firmware</title>
    <updated>2022-11-27T01:43:02Z</updated>
    <id>tag:github.com,2022-11-27:/DarkFlippers/unleashed-firmware</id>
    <link href="https://github.com/DarkFlippers/unleashed-firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flipper Zero Unleashed Firmware&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/10697207/186202043-26947e28-b1cc-459a-8f20-ffcc7fc0c71c.png&#34; align=&#34;center&#34; alt=&#34;fzCUSTOM&#34; border=&#34;0&#34;&gt; &lt;/a&gt; &lt;/h3&gt; &#xA;&lt;h3&gt;Welcome to Flipper Zero Unleashed Firmware repo!&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;This firmware is a fork from&lt;/strong&gt; &lt;a href=&#34;https://github.com/flipperdevices/flipperzero-firmware&#34;&gt;flipperdevices/flipperzero-firmware&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Our goal is to make any features possible in this device without any limitations!&lt;/p&gt; &#xA;&lt;p&gt;Please help us implement emulation for all subghz dynamic (rolling code) protocols!&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;This software is for experimental purposes only and is not meant for any illegal activity/purposes. &lt;br&gt; We do not condone illegal activity and strongly encourage keeping transmissions to legal/valid uses allowed by law. &lt;br&gt; Also this software is made without any support from Flipper Devices and in no way related to official devs.&lt;/h3&gt; &#xA;&lt;br&gt; Our Discord Community: &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://discord.unleashedflip.com&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/937479784148115456/widget.png?style=banner4&#34; alt=&#34;Unofficial Discord Community&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;What&#39;s changed&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SubGHz regional TX restrictions removed&lt;/li&gt; &#xA; &lt;li&gt;SubGHz frequency range can be extended in settings file (Warning: It can damage flipper&#39;s hardware)&lt;/li&gt; &#xA; &lt;li&gt;Many rolling code protocols now have the ability to save &amp;amp; send captured signals&lt;/li&gt; &#xA; &lt;li&gt;FAAC SLH (Spa) &amp;amp; BFT Mitto (secure with seed) manual creation&lt;/li&gt; &#xA; &lt;li&gt;Sub-GHz static code brute-force plugin&lt;/li&gt; &#xA; &lt;li&gt;LFRFID Fuzzer plugin&lt;/li&gt; &#xA; &lt;li&gt;Custom community plugins and games added&lt;/li&gt; &#xA; &lt;li&gt;Extra SubGHz frequencies + extra Mifare Classic keys&lt;/li&gt; &#xA; &lt;li&gt;Picopass/iClass plugin included in releases&lt;/li&gt; &#xA; &lt;li&gt;Recompiled IR TV Universal Remote for ALL buttons&lt;/li&gt; &#xA; &lt;li&gt;Universal remote for Projectors, Fans, A/Cs and Audio(soundbars, etc.)&lt;/li&gt; &#xA; &lt;li&gt;BadUSB keyboard layouts&lt;/li&gt; &#xA; &lt;li&gt;Customizable Flipper name&lt;/li&gt; &#xA; &lt;li&gt;SubGHz -&amp;gt; Press OK in frequency analyzer to use detected frequency in Read modes&lt;/li&gt; &#xA; &lt;li&gt;SubGHz -&amp;gt; Long press OK button in SubGHz Frequency analyzer to switch to Read menu&lt;/li&gt; &#xA; &lt;li&gt;Other small fixes and changes throughout&lt;/li&gt; &#xA; &lt;li&gt;See other changes in changelog and in readme below&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also check changelog in releases for latest updates!&lt;/p&gt; &#xA;&lt;h3&gt;Current modified and new SubGHz protocols list:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keeloq [Not ALL systems supported for decode or emulation yet!] - &lt;a href=&#34;https://0bin.net/paste/VwR2lNJY#WH9vnPgvcp7w6zVKucFCuNREKAcOij8KsJ6vqLfMn3b&#34;&gt;Supported manufacturers list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: HCS101&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: AN-Motors&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: JCM Tech&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: MHouse&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: Nice Smilo&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: DTM Neo&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: FAAC RC,XT&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: Mutancode&lt;/li&gt; &#xA; &lt;li&gt;Keeloq: Normstahl&lt;/li&gt; &#xA; &lt;li&gt;CAME Atomo&lt;/li&gt; &#xA; &lt;li&gt;Nice Flor S&lt;/li&gt; &#xA; &lt;li&gt;FAAC SLH (Spa) [External seed calculation required (For info contact me in Discord: Nano#8998)]&lt;/li&gt; &#xA; &lt;li&gt;BFT Mitto [External seed calculation required (For info contact me in Discord: Nano#8998)]&lt;/li&gt; &#xA; &lt;li&gt;Security+ v1 &amp;amp; v2&lt;/li&gt; &#xA; &lt;li&gt;Star Line&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Please support development of the project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Boosty: &lt;a href=&#34;https://boosty.to/mmxdev&#34;&gt;https://boosty.to/mmxdev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;destream (100 EUR min): &lt;a href=&#34;https://destream.net/live/MMX/donate&#34;&gt;https://destream.net/live/MMX/donate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;USDT(TRC20): &lt;code&gt;TSXcitMSnWXUFqiUfEXrTVpVewXy2cYhrs&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;BCH: &lt;code&gt;qquxfyzntuqufy2dx0hrfr4sndp0tucvky4sw8qyu3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ETH/BSC/ERC20-Tokens: &lt;code&gt;darkflippers.eth&lt;/code&gt; (or &lt;code&gt;0xFebF1bBc8229418FF2408C07AF6Afa49152fEc6a&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;BTC: &lt;code&gt;bc1q0np836jk9jwr4dd7p6qv66d04vamtqkxrecck9&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;DOGE: &lt;code&gt;D6R6gYgBn5LwTNmPyvAQR6bZ9EtGgFCpvv&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;LTC: &lt;code&gt;ltc1q3ex4ejkl0xpx3znwrmth4lyuadr5qgv8tmq8z9&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community apps included:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RFID Fuzzer plugin &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/54&#34;&gt;(by Ganapati &amp;amp; @xMasterX)&lt;/a&gt; &amp;amp; New protocols by @mvanzanten&lt;/li&gt; &#xA; &lt;li&gt;Sub-GHz bruteforce plugin &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/57&#34;&gt;(by @derskythe &amp;amp; xMasterX)&lt;/a&gt; (original by Ganapati)&lt;/li&gt; &#xA; &lt;li&gt;Sub-GHz playlist plugin &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/62&#34;&gt;(by darmiel)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ESP8266 Deauther plugin &lt;a href=&#34;https://github.com/SequoiaSan/FlipperZero-Wifi-ESP8266-Deauther-Module&#34;&gt;(by SequoiaSan)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WiFi Scanner plugin &lt;a href=&#34;https://github.com/SequoiaSan/FlipperZero-WiFi-Scanner_Module&#34;&gt;(by SequoiaSan)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MultiConverter plugin &lt;a href=&#34;https://github.com/theisolinearchip/flipperzero_stuff&#34;&gt;(by theisolinearchip)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;USB Keyboard plugin &lt;a href=&#34;https://github.com/huuck/FlipperZeroUSBKeyboard&#34;&gt;(by huuck)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WAV player plugin (fixed) &lt;a href=&#34;https://github.com/flipperdevices/flipperzero-firmware/tree/zlo/wav-player&#34;&gt;(OFW: DrZlo13)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Barcode generator plugin &lt;a href=&#34;https://github.com/McAzzaMan/flipperzero-firmware/tree/UPC-A_Barcode_Generator/applications/barcode_generator&#34;&gt;(original by McAzzaMan)&lt;/a&gt; - &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/154&#34;&gt;EAN-8 and refactoring&lt;/a&gt; by @msvsergey&lt;/li&gt; &#xA; &lt;li&gt;GPIO: Sentry Safe plugin &lt;a href=&#34;https://github.com/H4ckd4ddy/flipperzero-sentry-safe-plugin&#34;&gt;(by H4ckd4ddy)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ESP32: WiFi Marauder companion plugin &lt;a href=&#34;https://github.com/0xchocolate/flipperzero-firmware-with-wifi-marauder-companion&#34;&gt;(by 0xchocolate)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;NRF24: Sniffer &amp;amp; MouseJacker (with changes) &lt;a href=&#34;https://github.com/mothball187/flipperzero-nrf24/tree/main/mousejacker&#34;&gt;(by mothball187)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Simple Clock (timer by GMMan / settings by kowalski7cc) &lt;a href=&#34;https://gist.github.com/CompaqDisc/4e329c501bd03c1e801849b81f48ea61&#34;&gt;(original by CompaqDisc)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;UniversalRF Remix / Sub-GHz Remote &lt;a href=&#34;https://github.com/darmiel/flipper-playlist/tree/feat/unirf-protocols&#34;&gt;(by @darmiel &amp;amp; @xMasterX)&lt;/a&gt; (original by @ESurge)&lt;/li&gt; &#xA; &lt;li&gt;Spectrum Analyzer (with changes) &lt;a href=&#34;https://github.com/jolcese/flipperzero-firmware/tree/spectrum/applications/spectrum_analyzer&#34;&gt;(by jolcese)&lt;/a&gt; - &lt;a href=&#34;https://github.com/theY4Kman/flipperzero-firmware/commits?author=theY4Kman&#34;&gt;Ultra Narrow mode &amp;amp; scan channels non-consecutively&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Metronome &lt;a href=&#34;https://github.com/panki27/Metronome&#34;&gt;(by panki27)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DTMF Dolphin &lt;a href=&#34;https://github.com/litui/dtmf_dolphin&#34;&gt;(by litui)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TOTP (Authenticator)&lt;/strong&gt; &lt;a href=&#34;https://github.com/akopachov/flipper-zero_authenticator&#34;&gt;(by akopachov)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GPS &lt;a href=&#34;https://github.com/ezod/flipperzero-gps&#34;&gt;(by ezod)&lt;/a&gt; works with module &lt;code&gt;NMEA 0183&lt;/code&gt; via UART (13TX, 14RX, GND pins on Flipper)&lt;/li&gt; &#xA; &lt;li&gt;i2c Tools &lt;a href=&#34;https://github.com/NaejEL/flipperzero-i2ctools&#34;&gt;(by NaejEL)&lt;/a&gt; - C0 -&amp;gt; SCL / C1 -&amp;gt; SDA / GND -&amp;gt; GND | 3v3 logic levels only!&lt;/li&gt; &#xA; &lt;li&gt;Temperature Sensor Plugin - HTU21D / SI7021 &lt;a href=&#34;https://github.com/Mywk/FlipperTemperatureSensor&#34;&gt;(by Mywk)&lt;/a&gt; - &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/applications/plugins/htu21d_temp_sensor/Readme.md&#34;&gt;How to Connect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HC-SR04 Distance sensor - Ported and modified by @xMasterX &lt;a href=&#34;https://github.com/Sanqui/flipperzero-firmware/tree/hc_sr04&#34;&gt;(original by Sanqui)&lt;/a&gt; - How to connect -&amp;gt; (5V -&amp;gt; VCC) / (GND -&amp;gt; GND) / (13|TX -&amp;gt; Trig) / (14|RX -&amp;gt; Echo)&lt;/li&gt; &#xA; &lt;li&gt;Morse Code &lt;a href=&#34;https://github.com/wh00hw/MorseCodeFAP&#34;&gt;(by wh00hw)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AM2320/AM2321 Temp. Sensor plugin &lt;a href=&#34;https://github.com/xMasterX/AM2320_Flipper_Plugin&#34;&gt;(by xMasterX)&lt;/a&gt; - &lt;a href=&#34;https://github.com/xMasterX/AM2320_Flipper_Plugin&#34;&gt;How to Connect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DHT11/22 Temp. Sensor Monitor &lt;a href=&#34;https://github.com/quen0n/FipperZero-DHT-Monitor&#34;&gt;(by quen0n)&lt;/a&gt; - How to connect -&amp;gt; (5V -&amp;gt; VCC) / (GND -&amp;gt; GND) / (Selected Pin -&amp;gt; out)&lt;/li&gt; &#xA; &lt;li&gt;BH1750 - Lightmeter &lt;a href=&#34;https://github.com/oleksiikutuzov/flipperzero-lightmeter&#34;&gt;(by oleksiikutuzov)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;iButton Fuzzer &lt;a href=&#34;https://github.com/xMasterX/ibutton-fuzzer&#34;&gt;(by xMasterX)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HEX Viewer &lt;a href=&#34;https://github.com/QtRoS/flipperzero-firmware&#34;&gt;(by QtRoS)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Games:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DOOM (fixed) &lt;a href=&#34;https://github.com/p4nic4ttack/doom-flipper-zero/&#34;&gt;(by p4nic4ttack)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zombiez &lt;a href=&#34;https://github.com/RogueMaster/flipperzero-firmware-wPlugins/pull/240&#34;&gt;(Reworked By DevMilanIan)&lt;/a&gt; &lt;a href=&#34;https://github.com/Dooskington/flipperzero-zombiez&#34;&gt;(Original By Dooskington)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Flappy Bird &lt;a href=&#34;https://github.com/DroomOne/flipperzero-firmware/tree/dev/applications/flappy_bird&#34;&gt;(by DroomOne)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arkanoid (refactored by xMasterX) &lt;a href=&#34;https://github.com/gotnull/flipperzero-firmware-wPlugins&#34;&gt;(by gotnull)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tic Tac Toe (refactored by xMasterX) &lt;a href=&#34;https://github.com/gotnull/flipperzero-firmware-wPlugins&#34;&gt;(by gotnull)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tetris (with fixes) &lt;a href=&#34;https://github.com/jeffplang/flipperzero-firmware/tree/tetris_game/applications/tetris_game&#34;&gt;(by jeffplang)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Minesweeper &lt;a href=&#34;https://github.com/panki27/minesweeper&#34;&gt;(by panki27)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Heap Defence (aka Stack Attack) - Ported to latest firmware by @xMasterX - &lt;a href=&#34;https://github.com/Vedmein/flipperzero-firmware/tree/hd/svisto-perdelki&#34;&gt;(original by wquinoa &amp;amp; Vedmein)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Game15 &lt;a href=&#34;https://github.com/x27/flipperzero-game15&#34;&gt;(by x27)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Solitaire &lt;a href=&#34;https://github.com/teeebor/flipper_games&#34;&gt;(by teeebor)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BlackJack &lt;a href=&#34;https://github.com/teeebor/flipper_games&#34;&gt;(by teeebor)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other changes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BadUSB -&amp;gt; Keyboard layouts &lt;a href=&#34;https://github.com/dummy-decoy/flipperzero-firmware/tree/dummy_decoy/bad_usb_keyboard_layout&#34;&gt;(by rien &amp;gt; dummy-decoy)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SubGHz -&amp;gt; New frequency analyzer - &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/43&#34;&gt;(by ClusterM)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SubGHz -&amp;gt; Detect RAW feature - &lt;a href=&#34;https://github.com/RogueMaster/flipperzero-firmware-wPlugins/pull/152&#34;&gt;(by perspecdev)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SubGHz -&amp;gt; Save last used frequency and modulation &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/77&#34;&gt;(by derskythe)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SubGHz -&amp;gt; Press OK in frequency analyzer to use detected frequency in Read modes &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/77&#34;&gt;(by derskythe)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SubGHz -&amp;gt; Long press OK button in SubGHz Frequency analyzer to switch to Read menu &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/79&#34;&gt;(by derskythe)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lock device with pin(or regular lock if pin not set) by holding UP button on main screen &lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/pull/107&#34;&gt;(by an4tur0r)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Instructions&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/HowToInstall.md&#34;&gt;- How to install firmware&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/HowToBuild.md&#34;&gt;- How to build firmware&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/dummy-decoy/flipperzero_badusb_kl&#34;&gt;- BadUSB: how to add new keyboard layouts&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/CustomFlipperName.md&#34;&gt;- How to change Flipper name&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Plugins&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/xMasterX/unleashed-extra-pack&#34;&gt;- üé≤ Download Extra plugins for Unleashed&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/SubGHzRemotePlugin.md&#34;&gt;- Configure Sub-GHz Remote App&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/akopachov/flipper-zero_authenticator/raw/master/docs/conf-file_description.md&#34;&gt;- TOTP (Authenticator) config description&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/BarcodeGenerator.md&#34;&gt;- Barcode Generator&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/MultiConverter.md&#34;&gt;- Multi Converter&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/UberGuidoZ/Flipper/tree/main/Wav_Player#readme&#34;&gt;- WAV Player sample files &amp;amp; how to convert&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/darmiel/flipper-scripts/raw/main/playlist/playlist_creator_by_chunk.py&#34;&gt;- SubGHz playlist generator script&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Plugins that works with external hardware&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/applications/plugins/htu21d_temp_sensor/Readme.md&#34;&gt;- How to use: Temperature Sensor Plugin - HTU21D / SI7021&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/quen0n/FipperZero-DHT-Monitor#readme&#34;&gt;- How to use: DHT11/22 Temp. Sensor Monitor&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/xMasterX/AM2320_Flipper_Plugin&#34;&gt;- How to use: AM2320/AM2321 Temp. Sensor plugin&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/applications/plugins/gps_nmea_uart/README.md&#34;&gt;- How to use: [NMEA] GPS&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/applications/plugins/flipper_i2ctools/README.md&#34;&gt;- How to use: i2c Tools&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/NRF24.md&#34;&gt;- How to use: [NRF24] plugins&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SequoiaSan/FlipperZero-WiFi-Scanner_Module#readme&#34;&gt;- How to use: [WiFi] Scanner&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SequoiaSan/FlipperZero-Wifi-ESP8266-Deauther-Module#readme&#34;&gt;- How to use: [ESP8266] Deauther&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/UberGuidoZ/Flipper/tree/main/Wifi_DevBoard&#34;&gt;- How to use: [ESP32] WiFi Marauder&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://sequoiasan.github.io/FlipperZero-WiFi-Scanner_Module/&#34;&gt;- [WiFi] Scanner - Web Flasher for module firmware&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://sequoiasan.github.io/FlipperZero-Wifi-ESP8266-Deauther-Module/&#34;&gt;- [ESP8266] Deauther - Web Flasher for module firmware&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SequoiaSan/Guide-How-To-Upload-bin-to-ESP8266-ESP32&#34;&gt;- Windows: How to Upload .bin to ESP32/ESP8266&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/SentrySafe.md&#34;&gt;- How to use: [GPIO] SentrySafe plugin&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;SubGHz&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/DangerousSettings.md&#34;&gt;- Transmission is blocked? - How to extend SubGHz frequency range&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DarkFlippers/unleashed-firmware/raw/dev/documentation/SubGHzSettings.md&#34;&gt;- How to add extra SubGHz frequencies&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Where I can find IR, SubGhz, ... files, DBs, and other stuff?&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/UberGuidoZ/Flipper&#34;&gt;UberGuidoZ Playground - Large collection of files - Github&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/djsime1/awesome-flipperzero&#34;&gt;Awesome Flipper Zero - Github&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/tobiabocchi/flipperzero-bruteforce&#34;&gt;CAME-12bit, NICE-12bit, Linear-10bit, PT-2240 - SubGHz fixed code bruteforce&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/Hong5489/flipperzero-gate-bruteforce&#34;&gt;SMC5326, UNILARM - SubGHz fixed code bruteforce&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Unofficial Discord: &lt;a href=&#34;https://discord.unleashedflip.com&#34;&gt;discord.unleashedflip.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Docs by atmanos / How to write your own app (outdated API): &lt;a href=&#34;https://flipper.atmanos.com/docs/overview/intro&#34;&gt;https://flipper.atmanos.com/docs/overview/intro&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Official Docs: &lt;a href=&#34;http://docs.flipperzero.one&#34;&gt;http://docs.flipperzero.one&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Official Forum: &lt;a href=&#34;https://forum.flipperzero.one/&#34;&gt;forum.flipperzero.one&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Project structure&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;applications&lt;/code&gt; - Applications and services used in firmware&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;assets&lt;/code&gt; - Assets used by applications and services&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;furi&lt;/code&gt; - Furi Core: os level primitives and helpers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debug&lt;/code&gt; - Debug tool: GDB-plugins, SVD-file and etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;documentation&lt;/code&gt; - Documentation generation system configs and input files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firmware&lt;/code&gt; - Firmware source code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lib&lt;/code&gt; - Our and 3rd party libraries, drivers and etc...&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;site_scons&lt;/code&gt; - Build helpers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scripts&lt;/code&gt; - Supplementary scripts and python libraries home&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also pay attention to &lt;code&gt;ReadMe.md&lt;/code&gt; files inside those directories.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>memcached/memcached</title>
    <updated>2022-11-27T01:43:02Z</updated>
    <id>tag:github.com,2022-11-27:/memcached/memcached</id>
    <link href="https://github.com/memcached/memcached" rel="alternate"></link>
    <summary type="html">&lt;p&gt;memcached development tree&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Memcached&lt;/h1&gt; &#xA;&lt;p&gt;Memcached is a high performance multithreaded event-based key/value cache store intended to be used in a distributed system.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://memcached.org/about&#34;&gt;https://memcached.org/about&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A fun story explaining usage: &lt;a href=&#34;https://memcached.org/tutorial&#34;&gt;https://memcached.org/tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re having trouble, try the wiki: &lt;a href=&#34;https://memcached.org/wiki&#34;&gt;https://memcached.org/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re trying to troubleshoot odd behavior or timeouts, see: &lt;a href=&#34;https://memcached.org/timeouts&#34;&gt;https://memcached.org/timeouts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://memcached.org/&#34;&gt;https://memcached.org/&lt;/a&gt; is a good resource in general. Please use the mailing list to ask questions, github issues aren&#39;t seen by everyone!&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libevent - &lt;a href=&#34;https://www.monkey.org/~provos/libevent/&#34;&gt;https://www.monkey.org/~provos/libevent/&lt;/a&gt; (libevent-dev)&lt;/li&gt; &#xA; &lt;li&gt;libseccomp (optional, experimental, linux) - enables process restrictions for better security. Tested only on x86-64 architectures.&lt;/li&gt; &#xA; &lt;li&gt;openssl (optional) - enables TLS support. need relatively up to date version. pkg-config is needed to find openssl dependencies (such as -lz).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Environment&lt;/h2&gt; &#xA;&lt;p&gt;Be warned that the -k (mlockall) option to memcached might be dangerous when using a large cache. Just make sure the memcached machines don&#39;t swap. memcached does non-blocking network I/O, but not disk. (it should never go to disk, or you&#39;ve lost the whole point of it)&lt;/p&gt; &#xA;&lt;h2&gt;Build status&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://build.memcached.org/&#34;&gt;https://build.memcached.org/&lt;/a&gt; for multi-platform regression testing status.&lt;/p&gt; &#xA;&lt;h2&gt;Bug reports&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to use the issue tracker on github.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are reporting a security bug&lt;/strong&gt; please contact a maintainer privately. We follow responsible disclosure: we handle reports privately, prepare a patch, allow notifications to vendor lists. Then we push a fix release and your bug can be posted publicly with credit in our release notes and commit history.&lt;/p&gt; &#xA;&lt;h2&gt;Website&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.memcached.org&#34;&gt;https://www.memcached.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/memcached/memcached/wiki/DevelopmentRepos&#34;&gt;https://github.com/memcached/memcached/wiki/DevelopmentRepos&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>