<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T02:05:28Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>qmk/qmk_firmware</title>
    <updated>2022-07-17T02:05:28Z</updated>
    <id>tag:github.com,2022-07-17:/qmk/qmk_firmware</id>
    <link href="https://github.com/qmk/qmk_firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source keyboard firmware for Atmel AVR and Arm USB families&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quantum Mechanical Keyboard Firmware&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qmk/qmk_firmware/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/qmk/qmk_firmware.svg?sanitize=true&#34; alt=&#34;Current Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Uq7gcHh&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/440868230475677696.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.qmk.fm&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-ready-orange.svg?sanitize=true&#34; alt=&#34;Docs Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qmk/qmk_firmware/pulse/monthly&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/qmk/qmk_firmware.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qmk/qmk_firmware/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/qmk/qmk_firmware.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a keyboard firmware based on the &lt;a href=&#34;https://github.com/tmk/tmk_keyboard&#34;&gt;tmk_keyboard firmware&lt;/a&gt; with some useful features for Atmel AVR and ARM controllers, and more specifically, the &lt;a href=&#34;https://olkb.com&#34;&gt;OLKB product line&lt;/a&gt;, the &lt;a href=&#34;https://ergodox-ez.com&#34;&gt;ErgoDox EZ&lt;/a&gt; keyboard, and the &lt;a href=&#34;https://clueboard.co&#34;&gt;Clueboard product line&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.qmk.fm&#34;&gt;See the official documentation on docs.qmk.fm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The docs are powered by &lt;a href=&#34;https://docsify.js.org/&#34;&gt;Docsify&lt;/a&gt; and hosted on &lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/docs/&#34;&gt;GitHub&lt;/a&gt;. They are also viewable offline; see &lt;a href=&#34;https://docs.qmk.fm/#/contributing?id=previewing-the-documentation&#34;&gt;Previewing the Documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;You can request changes by making a fork and opening a &lt;a href=&#34;https://github.com/qmk/qmk_firmware/pulls&#34;&gt;pull request&lt;/a&gt;, or by clicking the &#34;Edit this page&#34; link at the bottom of any page.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Keyboards&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/planck/&#34;&gt;Planck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/preonic/&#34;&gt;Preonic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/ergodox_ez/&#34;&gt;ErgoDox EZ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/clueboard/&#34;&gt;Clueboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/clueboard/17/&#34;&gt;Cluepad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/atreus/&#34;&gt;Atreus&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The project also includes community support for &lt;a href=&#34;https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/&#34;&gt;lots of other keyboards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;QMK is developed and maintained by Jack Humbert of OLKB with contributions from the community, and of course, &lt;a href=&#34;https://github.com/tmk&#34;&gt;Hasu&lt;/a&gt;. The OLKB product firmwares are maintained by &lt;a href=&#34;https://github.com/jackhumbert&#34;&gt;Jack Humbert&lt;/a&gt;, the Ergodox EZ by &lt;a href=&#34;https://github.com/zsa&#34;&gt;ZSA Technology Labs&lt;/a&gt;, the Clueboard by &lt;a href=&#34;https://github.com/skullydazed&#34;&gt;Zach White&lt;/a&gt;, and the Atreus by &lt;a href=&#34;https://github.com/technomancy&#34;&gt;Phil Hagelberg&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Official Website&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qmk.fm&#34;&gt;qmk.fm&lt;/a&gt; is the official website of QMK, where you can find links to this page, the documentation, and the keyboards supported by QMK.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jarun/nnn</title>
    <updated>2022-07-17T02:05:28Z</updated>
    <id>tag:github.com,2022-07-17:/jarun/nnn</id>
    <link href="https://github.com/jarun/nnn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;n³ The unorthodox terminal file manager&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jarun/nnn/master/misc/logo/logo-128x128.png&#34; alt=&#34;nnn&#34;&gt;&lt;br&gt;nnn - &lt;i&gt;Supercharge your productivity!&lt;/i&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jarun/nnn/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/jarun/nnn.svg?maxAge=600&amp;amp;label=rel&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/nnn/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/nnn.svg?header=repos&#34; alt=&#34;Availability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/jarun/workflows/nnn&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/jarun/nnn.svg?label=circle%20ci&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jarun/nnn/actions&#34;&gt;&lt;img src=&#34;https://github.com/jarun/nnn/workflows/ci/badge.svg?branch=master&#34; alt=&#34;GitHub CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Privacy-invasive_software&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/privacy-✓-crimson?maxAge=2592000&#34; alt=&#34;Privacy Awareness&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jarun/nnn/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/©-BSD%202--Clause-important.svg?maxAge=2592000&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;http://i.imgur.com/kOld6HT.gif&#34;&gt;&lt;img src=&#34;https://i.imgur.com/NUsSA2u.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;[&lt;a href=&#34;https://github.com/jarun/nnn#features&#34;&gt;Features&lt;/a&gt;] [&lt;a href=&#34;https://github.com/jarun/nnn#quickstart&#34;&gt;Quickstart&lt;/a&gt;] [&lt;a href=&#34;https://github.com/jarun/nnn/tree/master/plugins#nnn-plugins&#34;&gt;Plugins&lt;/a&gt;] [&lt;a href=&#34;https://github.com/jarun/nnn/wiki&#34;&gt;Wiki&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; (&lt;em&gt;n³&lt;/em&gt;) is a full-featured terminal file manager. It&#39;s tiny, nearly 0-config and &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Performance&#34;&gt;incredibly fast&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is designed to be unobtrusive with smart workflows to match the trains of thought.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; can analyze disk usage, batch rename, launch apps and pick files. The plugin repository has tons of plugins to extend the capabilities further e.g. &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Live-previews&#34;&gt;live previews&lt;/a&gt;, (un)mount disks, find &amp;amp; list, file/dir diff, upload files. A &lt;a href=&#34;https://github.com/jarun/nnn/tree/master/patches&#34;&gt;patch framework&lt;/a&gt; hosts sizable user-submitted patches which are subjective in nature.&lt;/p&gt; &#xA;&lt;p&gt;Independent (neo)vim plugins - &lt;a href=&#34;https://github.com/mcchrish/nnn.vim&#34;&gt;nnn.vim&lt;/a&gt;, &lt;a href=&#34;https://github.com/voldikss/vim-floaterm#nnn&#34;&gt;vim-floaterm nnn wrapper&lt;/a&gt; and &lt;a href=&#34;https://github.com/luukvbaal/nnn.nvim&#34;&gt;nnn.nvim&lt;/a&gt; (neovim exclusive).&lt;/p&gt; &#xA;&lt;p&gt;Runs on the Pi, &lt;a href=&#34;https://www.youtube.com/embed/AbaauM7gUJw&#34;&gt;Termux&lt;/a&gt; (Android), Linux, macOS, BSD, Haiku, Cygwin, WSL, across DEs or a strictly CLI env.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jarun/nnn/wiki/Basic-use-cases#the_nnn-magic&#34;&gt;&lt;em&gt;(there&#39;s more)&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Quality &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Privacy-aware (no unconfirmed user data collection)&lt;/li&gt; &#xA;   &lt;li&gt;POSIX-compliant, follows Linux kernel coding style&lt;/li&gt; &#xA;   &lt;li&gt;Highly optimized, static analysis integrated code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Frugal &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Typically needs less than 3.5MB resident memory&lt;/li&gt; &#xA;   &lt;li&gt;Works with 8 colors (and xterm 256 colors)&lt;/li&gt; &#xA;   &lt;li&gt;Disk-IO sensitive (few disk reads and writes)&lt;/li&gt; &#xA;   &lt;li&gt;No FPU usage (all integer maths, even for file size)&lt;/li&gt; &#xA;   &lt;li&gt;Minimizes screen refresh with fast line redraws&lt;/li&gt; &#xA;   &lt;li&gt;Tiny binary (typically around 100KB)&lt;/li&gt; &#xA;   &lt;li&gt;1-column mode for smaller terminals and form factors&lt;/li&gt; &#xA;   &lt;li&gt;Hackable - compile in/out features and dependencies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Portable &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Language-agnostic plugins&lt;/li&gt; &#xA;   &lt;li&gt;Static binary available (no need to install)&lt;/li&gt; &#xA;   &lt;li&gt;Minimal library deps, easy to compile&lt;/li&gt; &#xA;   &lt;li&gt;No config file, minimal config with sensible defaults&lt;/li&gt; &#xA;   &lt;li&gt;Plugin to backup configuration&lt;/li&gt; &#xA;   &lt;li&gt;Widely available on many packagers&lt;/li&gt; &#xA;   &lt;li&gt;Touch enabled, handheld-friendly shortcuts&lt;/li&gt; &#xA;   &lt;li&gt;Unicode support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Modes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Light (default), detail&lt;/li&gt; &#xA;   &lt;li&gt;Disk usage analyzer (block/apparent)&lt;/li&gt; &#xA;   &lt;li&gt;File picker, (neo)vim plugin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Navigation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Filter with automatic dir entry on unique match&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Type-to-nav&lt;/em&gt; (turbo navigation/always filter) mode&lt;/li&gt; &#xA;   &lt;li&gt;Contexts (&lt;em&gt;aka&lt;/em&gt; tabs/workspaces) with custom colors&lt;/li&gt; &#xA;   &lt;li&gt;Sessions, bookmarks, mark and visit a dir&lt;/li&gt; &#xA;   &lt;li&gt;Remote mounts (needs &lt;code&gt;sshfs&lt;/code&gt;, &lt;code&gt;rclone&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Familiar shortcuts (arrows, &lt;kbd&gt;~&lt;/kbd&gt;, &lt;kbd&gt;-&lt;/kbd&gt;, &lt;kbd&gt;@&lt;/kbd&gt;), quick look-up&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; on quit (&lt;em&gt;easy&lt;/em&gt; shell integration)&lt;/li&gt; &#xA;   &lt;li&gt;Proceed to next file on file open and selection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Search &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Instant filtering with &lt;em&gt;search-as-you-type&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Regex (POSIX/PCRE) and string (default) filters&lt;/li&gt; &#xA;   &lt;li&gt;Subtree search plugin to open or edit files&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sort &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ordered pure numeric names by default (visit &lt;code&gt;/proc&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Case-insensitive version (&lt;em&gt;aka&lt;/em&gt; natural) sort&lt;/li&gt; &#xA;   &lt;li&gt;By name, access/change/mod (default) time, size, extn&lt;/li&gt; &#xA;   &lt;li&gt;Reverse sort&lt;/li&gt; &#xA;   &lt;li&gt;Directory-specific ordering&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mimes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Preview hovered files in FIFO-based previewer&lt;/li&gt; &#xA;   &lt;li&gt;Open with desktop opener or specify a custom opener&lt;/li&gt; &#xA;   &lt;li&gt;File-specific colors (or minimal &lt;em&gt;dirs in context color&lt;/em&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Icons or Emojis support (customize and compile-in)&lt;/li&gt; &#xA;   &lt;li&gt;Plugin for image, video and audio thumbnails&lt;/li&gt; &#xA;   &lt;li&gt;Create, list, extract (to), mount (FUSE based) archives&lt;/li&gt; &#xA;   &lt;li&gt;Option to open all text files in &lt;code&gt;$EDITOR&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Convenience &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Detailed file stats and mime information&lt;/li&gt; &#xA;   &lt;li&gt;Run plugins and custom commands with hotkeys&lt;/li&gt; &#xA;   &lt;li&gt;FreeDesktop compliant trash utility integration&lt;/li&gt; &#xA;   &lt;li&gt;Cross-dir file/all/range selection&lt;/li&gt; &#xA;   &lt;li&gt;Create (with parents), rename, duplicate files and dirs&lt;/li&gt; &#xA;   &lt;li&gt;Batch renamer for selection or dir&lt;/li&gt; &#xA;   &lt;li&gt;List input stream of file paths from stdin or plugin&lt;/li&gt; &#xA;   &lt;li&gt;Copy (as), move (as), delete, archive, link selection&lt;/li&gt; &#xA;   &lt;li&gt;Dir updates, notification on &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt; completion&lt;/li&gt; &#xA;   &lt;li&gt;Copy file paths to system clipboard on select&lt;/li&gt; &#xA;   &lt;li&gt;Launch apps, run commands, spawn a shell, toggle exe&lt;/li&gt; &#xA;   &lt;li&gt;Access context paths/files at prompt or spawned shell&lt;/li&gt; &#xA;   &lt;li&gt;Lock terminal after configurable idle timeout&lt;/li&gt; &#xA;   &lt;li&gt;Capture and show output of a program in help screen&lt;/li&gt; &#xA;   &lt;li&gt;Basic support for screen readers and braille displays&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarun/nnn/wiki/Usage&#34;&gt;Install&lt;/a&gt; &lt;code&gt;nnn&lt;/code&gt; and the deps you need.&lt;/li&gt; &#xA; &lt;li&gt;The desktop opener is default. Use &lt;code&gt;-e&lt;/code&gt; to open text files in the terminal. Optionally &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Basic-use-cases#detached-text&#34;&gt;open detached&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Configure &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Basic-use-cases#configure-cd-on-quit&#34;&gt;&lt;code&gt;cd&lt;/code&gt; on quit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarun/nnn/wiki/Basic-use-cases#sync-subshell-pwd&#34;&gt;Sync subshell &lt;code&gt;$PWD&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;nnn&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarun/nnn/tree/master/plugins#installation&#34;&gt;Install plugins&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;-x&lt;/code&gt; to sync selection to clipboard, show notis on &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt; and set xterm title.&lt;/li&gt; &#xA; &lt;li&gt;For a CLI-only environment, set &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Usage#configuration&#34;&gt;&lt;code&gt;NNN_OPENER&lt;/code&gt;&lt;/a&gt; to &lt;a href=&#34;https://github.com/jarun/nnn/raw/master/plugins/nuke&#34;&gt;&lt;code&gt;nuke&lt;/code&gt;&lt;/a&gt;. Use option &lt;code&gt;-c&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bid &lt;code&gt;ls&lt;/code&gt; goodbye! &lt;code&gt;alias ls=&#39;nnn -de&#39;&lt;/code&gt; &lt;span&gt;😎&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Live-previews&#34;&gt;Live previews&lt;/a&gt; and &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; Wiki pages.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Don&#39;t memorize! Arrows, &lt;kbd&gt;/&lt;/kbd&gt;, &lt;kbd&gt;q&lt;/kbd&gt; suffice. &lt;kbd&gt;Tab&lt;/kbd&gt; creates and/or cycles contexts. &lt;kbd&gt;?&lt;/kbd&gt; lists shortcuts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/embed/-knZwdd1ScU&#34;&gt;&lt;img src=&#34;https://i.imgur.com/TN3xYQz.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jarun/nnn/wiki&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/RTFM-nnn%20Wiki-important?maxAge=2592000&#34; alt=&#34;Wiki&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/AbaauM7gUJw&#34;&gt;nnn file manager on Termux (Android)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/1QXU4XSqXNo&#34;&gt;NNN File Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5W9ja0DQjSY&amp;amp;t=2059s&#34;&gt;This Week in Linux 114 - TuxDigital&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/il2Fm-KJJfM&#34;&gt;nnn file manager basics - Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/U2n5aGqou9E&#34;&gt;I&#39;M GOING TO USE THE NNN FILE BROWSER! 😮&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/KuJHo-aO_FA&#34;&gt;NNN: Is This Terminal File Manager As Good As People Say?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/cnzuzcCPYsk&#34;&gt;nnn - A File Manager (By Uoou, again.)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Elsewhere&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.addictivetips.com/ubuntu-linux-tips/navigate-linux-filesystem/&#34;&gt;AddictiveTips&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Nnn&#34;&gt;ArchWiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fossmint.com/nnn-linux-terminal-file-browser/&#34;&gt;FOSSMint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ghacks.net/2019/11/01/nnn-is-an-excellent-command-line-based-file-manager-for-linux-macos-and-bsds/&#34;&gt;gHacks Tech News&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hacker News [&lt;a href=&#34;https://news.ycombinator.com/item?id=18520898&#34;&gt;1&lt;/a&gt;] [&lt;a href=&#34;https://news.ycombinator.com/item?id=19850656&#34;&gt;2&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itsfoss.com/nnn-file-browser-linux/&#34;&gt;It&#39;s FOSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://linuxformat.com/archives?issue=265&#34;&gt;Linux Format Issue 265; Manage files with nnn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LinuxLinks [&lt;a href=&#34;https://www.linuxlinks.com/nnn-fast-and-flexible-file-manager/&#34;&gt;1&lt;/a&gt;] [&lt;a href=&#34;https://www.linuxlinks.com/bestconsolefilemanagers/&#34;&gt;2&lt;/a&gt;] [&lt;a href=&#34;https://www.linuxlinks.com/excellent-system-tools-nnn-portable-terminal-file-manager/&#34;&gt;3&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linux-magazine.com/Issues/2017/205/FOSSPicks/(offset)/15&#34;&gt;Linux Magazine; FOSSPicks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.maketecheasier.com/nnn-file-manager-terminal/&#34;&gt;Make Tech Easier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.opensourceforu.com/2019/12/nnn-this-feature-rich-terminal-file-manager-will-enhance-your-productivity/&#34;&gt;Open Source For You&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pclosmag.com/html/Issues/202106/page08.html&#34;&gt;PCLinuxOS Magazine Issue June 2021&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://suckless.org/rocks/&#34;&gt;Suckless Rocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fullcirclemagazine.org/issue-135/&#34;&gt;Ubuntu Full Circle Magazine Issue 135; Review: nnn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://books.google.com/books?id=MqjDDwAAQBAJ&amp;amp;pg=PA32&#34;&gt;Using and Administering Linux: Volume 2: Zero to SysAdmin: Advanced Topics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Nnn_(file_manager)&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarun&#34;&gt;Arun Prakash Jana&lt;/a&gt; (Copyright © 2016-2022)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0xACE&#34;&gt;0xACE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/annagrram&#34;&gt;Anna Arad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KlzXS&#34;&gt;KlzXS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leovilok&#34;&gt;Léo Villeveygoux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/luukvbaal&#34;&gt;Luuk van Baal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/NRK&#34;&gt;NRK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sjmulder&#34;&gt;Sijmen J. Mulder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;and other contributors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://github.com/jarun/nnn/issues/1416&#34;&gt;ToDo list&lt;/a&gt; to contribute or see the features in progress.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cfenollosa/os-tutorial</title>
    <updated>2022-07-17T02:05:28Z</updated>
    <id>tag:github.com,2022-07-17:/cfenollosa/os-tutorial</id>
    <link href="https://github.com/cfenollosa/os-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;How to create an OS from scratch&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;os-tutorial&lt;/h1&gt; &#xA;&lt;p&gt;How to create an OS from scratch!&lt;/p&gt; &#xA;&lt;p&gt;I have always wanted to learn how to make an OS from scratch. In college I was taught how to implement advanced features (pagination, semaphores, memory management, etc) but:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I never got to start from my own boot sector&lt;/li&gt; &#xA; &lt;li&gt;College is hard so I don&#39;t remember most of it.&lt;/li&gt; &#xA; &lt;li&gt;I&#39;m fed up with people who think that reading an already existing kernel, even if small, is a good idea to learn operating systems.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Inspired by &lt;a href=&#34;http://www.cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf&#34;&gt;this document&lt;/a&gt; and the &lt;a href=&#34;http://wiki.osdev.org/&#34;&gt;OSDev wiki&lt;/a&gt;, I&#39;ll try to make short step-by-step READMEs and code samples for anybody to follow. Honestly, this tutorial is basically the first document but split into smaller pieces and without the theory.&lt;/p&gt; &#xA;&lt;p&gt;Updated: more sources: &lt;a href=&#34;https://littleosbook.github.io&#34;&gt;the little book about OS development&lt;/a&gt;, &lt;a href=&#34;https://web.archive.org/web/20160412174753/http://www.jamesmolloy.co.uk/tutorial_html/index.html&#34;&gt;JamesM&#39;s kernel development tutorials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This course is a code tutorial aimed at people who are comfortable with low level computing. For example, programmers who have curiosity on how an OS works but don&#39;t have the time or willpower to start reading the Linux kernel top to bottom.&lt;/li&gt; &#xA; &lt;li&gt;There is little theory. Yes, this is a feature. Google is your theory lecturer. Once you pass college, excessive theory is worse than no theory because it makes things seem more difficult than they really are.&lt;/li&gt; &#xA; &lt;li&gt;The lessons are tiny and may take 5-15 minutes to complete. Trust me and trust yourself. You can do it!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use this tutorial&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Start with the first folder and go down in order. They build on previous code, so if you jump right to folder 05 and don&#39;t know why there is a &lt;code&gt;mov ah, 0x0e&lt;/code&gt;, it&#39;s because you missed lecture 02. Really, just go in order. You can always skip stuff you already know.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the README and read the first line, which details the concepts you should be familiar with before reading the code. Google concepts you are not familiar with. The second line states the goals for each lesson. Read them, because they explain why we do what we do. The &#34;why&#34; is as important as the &#34;how&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Read the rest of the README. It is &lt;strong&gt;very concise&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) Try to write the code files by yourself after reading the README.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Look at the code examples. They are extremely well commented.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) Experiment with them and try to break things. The only way to make sure you understood something is trying to break it or replicate it with different commands.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;TL;DR: First read the README on each folder, then the code files. If you&#39;re brave, try to code them yourself.&lt;/p&gt; &#xA;&lt;h2&gt;Strategy&lt;/h2&gt; &#xA;&lt;p&gt;We will want to do many things with our OS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Boot from scratch, without GRUB - DONE!&lt;/li&gt; &#xA; &lt;li&gt;Enter 32-bit mode - DONE&lt;/li&gt; &#xA; &lt;li&gt;Jump from Assembly to C - DONE!&lt;/li&gt; &#xA; &lt;li&gt;Interrupt handling - DONE!&lt;/li&gt; &#xA; &lt;li&gt;Screen output and keyboard input - DONE!&lt;/li&gt; &#xA; &lt;li&gt;A tiny, basic &lt;code&gt;libc&lt;/code&gt; which grows to suit our needs - DONE!&lt;/li&gt; &#xA; &lt;li&gt;Memory management&lt;/li&gt; &#xA; &lt;li&gt;Write a filesystem to store files&lt;/li&gt; &#xA; &lt;li&gt;Create a very simple shell&lt;/li&gt; &#xA; &lt;li&gt;User mode&lt;/li&gt; &#xA; &lt;li&gt;Maybe we will write a simple text editor&lt;/li&gt; &#xA; &lt;li&gt;Multiple processes and scheduling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Probably we will go through them in that order, however it&#39;s soon to tell.&lt;/p&gt; &#xA;&lt;p&gt;If we feel brave enough:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A BASIC interpreter, like in the 70s!&lt;/li&gt; &#xA; &lt;li&gt;A GUI&lt;/li&gt; &#xA; &lt;li&gt;Networking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This is a personal learning project, and even though it hasn&#39;t been updated for a long time, I still have hopes to get into it at some point.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m thankful to all those who have pointed out bugs and submitted pull requests. I will need some time to review everything and I cannot guarantee that at this moment.&lt;/p&gt; &#xA;&lt;p&gt;Please feel free to fork this repo. If many of you are interested in continuing the project, let me know and I&#39;ll link the &#34;main fork&#34; from here.&lt;/p&gt;</summary>
  </entry>
</feed>