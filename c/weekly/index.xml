<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-14T01:36:29Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>open62541/open62541</title>
    <updated>2024-07-14T01:36:29Z</updated>
    <id>tag:github.com,2024-07-14:/open62541/open62541</id>
    <link href="https://github.com/open62541/open62541" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source implementation of OPC UA (OPC Unified Architecture) aka IEC 62541 licensed under Mozilla Public License v2.0&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;open62541&lt;/h1&gt; &#xA;&lt;p&gt;open62541 (&lt;a href=&#34;http://open62541.org&#34;&gt;http://open62541.org&lt;/a&gt;) is an open source implementation of OPC UA (OPC Unified Architecture / IEC 62541) written in the C language. The library is usable with all major compilers and provides the necessary tools to implement dedicated OPC UA clients and servers, or to integrate OPC UA-based communication into existing applications. The open62541 library is platform independent: All platform-specific functionality is implemented via exchangeable plugins for easy porting to different (embedded) targets.&lt;/p&gt; &#xA;&lt;p&gt;open62541 is licensed under the Mozilla Public License v2.0 (MPLv2). This allows the open62541 library to be combined and distributed with any proprietary software. Only changes to the open62541 library itself need to be licensed under the MPLv2 when copied and distributed. The plugins, as well as the server and client examples are in the public domain (CC0 license). They can be reused under any license and changes do not have to be published.&lt;/p&gt; &#xA;&lt;p&gt;The library is &lt;a href=&#34;https://github.com/open62541/open62541/releases&#34;&gt;available&lt;/a&gt; in standard source and binary form. In addition, the single-file source distribution merges the entire library into a single .c and .h file that can be easily added to existing projects. Example server and client implementations can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/open62541/open62541/master/examples/&#34;&gt;/examples&lt;/a&gt; directory or further down on this page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.openhub.net/p/open62541/&#34;&gt;&lt;img src=&#34;https://www.openhub.net/p/open62541/widgets/project_thin_badge.gif&#34; alt=&#34;Open Hub Project Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/open62541/open62541/_build/latest?definitionId=1&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/open62541/open62541/_apis/build/status/open62541.open62541?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/open62541/open62541/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/open62541/open62541?branch=master&amp;amp;svg=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open62541/open62541/actions/workflows/codeql.yml&#34;&gt;&lt;img src=&#34;https://github.com/open62541/open62541/actions/workflows/codeql.yml/badge.svg?sanitize=true&#34; alt=&#34;Code Scanning&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:open62541&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/open62541.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/open62541/open62541&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/open62541/open62541/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;open62541 implements an OPC UA SDK with support for servers, clients and PubSub (publish-subscribe) communication. See the &lt;a href=&#34;https://raw.githubusercontent.com/open62541/open62541/master/FEATURES.md&#34;&gt;features overview&lt;/a&gt; for full details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Core Stack &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OPC UA binary and JSON encoding&lt;/li&gt; &#xA;   &lt;li&gt;TCP-based OPC UA SecureChannel&lt;/li&gt; &#xA;   &lt;li&gt;Custom data types (generated from XML definitions)&lt;/li&gt; &#xA;   &lt;li&gt;Portable C99 -- architecture-specific code is encapsulated behind standard interfaces&lt;/li&gt; &#xA;   &lt;li&gt;Highly configurable with default plugins for encryption (OpenSSL, mbedTLS), access control, historizing, logging, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Server &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support for all OPC UA services (except the Query service -- not implemented by any SDK)&lt;/li&gt; &#xA;   &lt;li&gt;Support for generating information models from standard XML definitions (Nodeset Compiler)&lt;/li&gt; &#xA;   &lt;li&gt;Support for adding and removing nodes and references at runtime&lt;/li&gt; &#xA;   &lt;li&gt;Support for subscriptions (data-change and event notifications)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Client &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support for all OPC UA services&lt;/li&gt; &#xA;   &lt;li&gt;Support for asynchronous service requests&lt;/li&gt; &#xA;   &lt;li&gt;Background handling of subscriptions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;PubSub &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PubSub message encoding (binary and JSON)&lt;/li&gt; &#xA;   &lt;li&gt;Transport over UDP-multicast, Ethernet, MQTT&lt;/li&gt; &#xA;   &lt;li&gt;Runtime configuration via the information model&lt;/li&gt; &#xA;   &lt;li&gt;Configurable realtime fast-path&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Commercial Use and Official Support&lt;/h2&gt; &#xA;&lt;p&gt;open62541 is licensed under the MPLv2. That is, changes to files under MPLv2 fall under the same open-source license. But the library can be combined with private development from separate files, also if a static binary is produced, without the license affecting the private files. See the full &lt;a href=&#34;https://raw.githubusercontent.com/open62541/open62541/master/LICENSE&#34;&gt;license document&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fraunhofer IOSB&lt;/strong&gt; maintains open62541 and provides &lt;strong&gt;&lt;a href=&#34;https://www.iosb.fraunhofer.de/en/projects-and-products/open62541.html&#34;&gt;official commercial support&lt;/a&gt;&lt;/strong&gt;. Additional service providers are listed on &lt;a href=&#34;https://www.open62541.org/&#34;&gt;open62541.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Official Certification&lt;/h2&gt; &#xA;&lt;p&gt;The sample server (server_ctt) built using open62541 v1.0 is in conformance with the &#39;Micro Embedded Device Server&#39; Profile of OPC Foundation supporting OPC UA client/server communication, subscriptions, method calls and security (encryption) with the security policies &#39;Basic128Rsa15&#39;, &#39;Basic256&#39; and &#39;Basic256Sha256&#39; and the facets &#39;method server&#39; and &#39;node management&#39;. See &lt;a href=&#34;https://open62541.org/certified-sdk&#34;&gt;https://open62541.org/certified-sdk&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;PubSub (UADP) is implemented in open62541. But the feature cannot be certified at this point in time (Sep-2019) due to the lack of official test cases and testing tools.&lt;/p&gt; &#xA;&lt;p&gt;During development, the Conformance Testing Tools (CTT) of the OPC Foundation are regularly applied. The CTT configuration and results are tracked at &lt;a href=&#34;https://github.com/open62541/open62541-ctt&#34;&gt;https://github.com/open62541/open62541-ctt&lt;/a&gt;. The OPC UA profiles under regular test in the CTT are currently:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Micro Embedded Device Server&lt;/li&gt; &#xA; &lt;li&gt;Method Server Facet&lt;/li&gt; &#xA; &lt;li&gt;Node Management Facet&lt;/li&gt; &#xA; &lt;li&gt;Security Policies &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Basic128Rsa15&lt;/li&gt; &#xA;   &lt;li&gt;Basic256&lt;/li&gt; &#xA;   &lt;li&gt;Basic256Sha256&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;User Tokens &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Anonymous Facet&lt;/li&gt; &#xA;   &lt;li&gt;User Name Password Server Facet&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the page on &lt;a href=&#34;https://raw.githubusercontent.com/open62541/open62541/master/FEATURES.md&#34;&gt;open62541 Features&lt;/a&gt; for an in-depth look at the support for the conformance units that make up the OPC UA profiles.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Support&lt;/h2&gt; &#xA;&lt;p&gt;A general introduction to OPC UA and the open62541 documentation can be found at &lt;a href=&#34;http://open62541.org&#34;&gt;http://open62541.org&lt;/a&gt;. Past releases of the library can be downloaded at &lt;a href=&#34;https://github.com/open62541/open62541/releases&#34;&gt;https://github.com/open62541/open62541/releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The overall open62541 community handles public support requests on Github and the mailing list. For individual discussion and support, use the following channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/d/forum/open62541&#34;&gt;Mailing List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open62541/open62541/issues&#34;&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open62541/open62541/pulls&#34;&gt;Pull Requests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We want to foster an open and welcoming community. Please take our &lt;a href=&#34;https://raw.githubusercontent.com/open62541/open62541/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; into regard.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;As an open source project, new contributors are encouraged to help improve open62541. The file &lt;a href=&#34;https://raw.githubusercontent.com/open62541/open62541/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; aggregates good practices that we expect for code contributions. The following are good starting points for new contributors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open62541/open62541/issues&#34;&gt;Report bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Improve the &lt;a href=&#34;http://open62541.org/doc/current&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Work on issues marked as &#34;&lt;a href=&#34;https://github.com/open62541/open62541/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;good first issue&lt;/a&gt;&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For custom development that shall eventually become part of the open62541 library, please keep one of the core maintainers in the loop.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;On most systems, open62541 requires the C standard library only. For dependencies during the build process, see the following list and the &lt;a href=&#34;https://www.open62541.org/doc/master/building.html&#34;&gt;build documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Core Library: The core library has no dependencies besides the C99 standard headers.&lt;/li&gt; &#xA; &lt;li&gt;Default Plugins: The default plugins use the POSIX interfaces for networking and accessing the system clock. Ports to different (embedded) architectures are achieved by customizing the plugins.&lt;/li&gt; &#xA; &lt;li&gt;Building and Code Generation: The build environment is generated via CMake. Some code is auto-generated from XML definitions that are part of the OPC UA standard. The code generation scripts run with both Python 2 and 3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some (optional) features are dependent on third-party libraries. These are all listed under the &lt;code&gt;deps/&lt;/code&gt; folder. Depending on the selected feature set, some of these libraries will be included in the resulting library. More information on the third-party libraries can be found in the corresponding &lt;a href=&#34;https://raw.githubusercontent.com/open62541/open62541/master/deps/README.md&#34;&gt;deps/README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Code Quality&lt;/h3&gt; &#xA;&lt;p&gt;We emphasize code quality. The following quality metrics are continuously checked and are ensured to hold before an official release is made:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zero errors indicated by the Compliance Testing Tool (CTT) of the OPC Foundation for the supported features&lt;/li&gt; &#xA; &lt;li&gt;Zero compiler warnings from GCC/Clang/MSVC with very strict compilation flags&lt;/li&gt; &#xA; &lt;li&gt;Zero issues indicated by unit tests (more than 80% coverage)&lt;/li&gt; &#xA; &lt;li&gt;Zero issues indicated by clang-analyzer, clang-tidy, cpp-check and the Codacy static code analysis tools&lt;/li&gt; &#xA; &lt;li&gt;Zero unresolved issues from fuzzing the library in Google&#39;s oss-fuzz infrastructure&lt;/li&gt; &#xA; &lt;li&gt;Zero issues indicated by Valgrind (Linux), DrMemory (Windows) and Clang AddressSanitizer / MemorySanitizer for the CTT tests, unit tests and fuzzing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and code usage&lt;/h2&gt; &#xA;&lt;p&gt;For every release, we provide some pre-packed release packages which you can directly use in your compile infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;Have a look at the &lt;a href=&#34;https://github.com/open62541/open62541/releases&#34;&gt;release page&lt;/a&gt; and the corresponding attached assets.&lt;/p&gt; &#xA;&lt;p&gt;A more detailed explanation on how to install the open62541 SDK is given in our &lt;a href=&#34;https://www.open62541.org/doc/master/building.html#building-the-library&#34;&gt;documentation&lt;/a&gt;. In essence, clone the repository and initialize all the submodules using &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;. Then use CMake to configure your build.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore we provide &#34;pack branches&#34; that are up-to-date with the corresponding base branches, and in addition have the git submodules in-place for a zip download. Here are some direct download links for the current pack branches:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open62541/open62541/archive/pack/master.zip&#34;&gt;pack/master.zip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open62541/open62541/archive/pack/1.0.zip&#34;&gt;pack/1.0.zip&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;A complete list of examples can be found in the &lt;a href=&#34;https://github.com/open62541/open62541/tree/master/examples&#34;&gt;examples directory&lt;/a&gt;. To build the examples, we recommend to install open62541 as mentioned in the previous section. Using the GCC compiler, just run &lt;code&gt;gcc -std=c99 &amp;lt;server.c&amp;gt; -lopen62541 -o server&lt;/code&gt; (under Windows you may need to add additionally link against the &lt;code&gt;ws2_32&lt;/code&gt; socket library).&lt;/p&gt; &#xA;&lt;h3&gt;Example Server Implementation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;open62541/server.h&amp;gt;&#xA;&#xA;int main(int argc, char** argv)&#xA;{&#xA;    /* Create a server listening on port 4840 (default) */&#xA;    UA_Server *server = UA_Server_new();&#xA;&#xA;    /* Add a variable node to the server */&#xA;&#xA;    /* 1) Define the variable attributes */&#xA;    UA_VariableAttributes attr = UA_VariableAttributes_default;&#xA;    attr.displayName = UA_LOCALIZEDTEXT(&#34;en-US&#34;, &#34;the answer&#34;);&#xA;    UA_Int32 myInteger = 42;&#xA;    UA_Variant_setScalar(&amp;amp;attr.value, &amp;amp;myInteger, &amp;amp;UA_TYPES[UA_TYPES_INT32]);&#xA;&#xA;    /* 2) Define where the node shall be added with which browsename */&#xA;    UA_NodeId newNodeId = UA_NODEID_STRING(1, &#34;the.answer&#34;);&#xA;    UA_NodeId parentNodeId = UA_NODEID_NUMERIC(0, UA_NS0ID_OBJECTSFOLDER);&#xA;    UA_NodeId parentReferenceNodeId = UA_NODEID_NUMERIC(0, UA_NS0ID_ORGANIZES);&#xA;    UA_NodeId variableType = UA_NODEID_NULL; /* take the default variable type */&#xA;    UA_QualifiedName browseName = UA_QUALIFIEDNAME(1, &#34;the answer&#34;);&#xA;&#xA;    /* 3) Add the node */&#xA;    UA_Server_addVariableNode(server, newNodeId, parentNodeId,&#xA;                              parentReferenceNodeId, browseName,&#xA;                              variableType, attr, NULL, NULL);&#xA;&#xA;    /* Run the server (until ctrl-c interrupt) */&#xA;    UA_StatusCode status = UA_Server_runUntilInterrupt(server);&#xA;&#xA;    /* Clean up */&#xA;    UA_Server_delete(server);&#xA;    return status == UA_STATUSCODE_GOOD ? EXIT_SUCCESS : EXIT_FAILURE;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example Client Implementation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&#xA;#include &amp;lt;open62541/client.h&amp;gt;&#xA;#include &amp;lt;open62541/client_highlevel.h&amp;gt;&#xA;&#xA;int main(int argc, char *argv[])&#xA;{&#xA;    /* Create a client and connect */&#xA;    UA_Client *client = UA_Client_new();&#xA;    UA_ClientConfig_setDefault(UA_Client_getConfig(client));&#xA;    UA_StatusCode status = UA_Client_connect(client, &#34;opc.tcp://localhost:4840&#34;);&#xA;    if(status != UA_STATUSCODE_GOOD) {&#xA;        UA_Client_delete(client);&#xA;        return status;&#xA;    }&#xA;&#xA;    /* Read the value attribute of the node. UA_Client_readValueAttribute is a&#xA;     * wrapper for the raw read service available as UA_Client_Service_read. */&#xA;    UA_Variant value; /* Variants can hold scalar values and arrays of any type */&#xA;    UA_Variant_init(&amp;amp;value);&#xA;    status = UA_Client_readValueAttribute(client, UA_NODEID_STRING(1, &#34;the.answer&#34;), &amp;amp;value);&#xA;    if(status == UA_STATUSCODE_GOOD &amp;amp;&amp;amp;&#xA;       UA_Variant_hasScalarType(&amp;amp;value, &amp;amp;UA_TYPES[UA_TYPES_INT32])) {&#xA;        printf(&#34;the value is: %i\n&#34;, *(UA_Int32*)value.data);&#xA;    }&#xA;&#xA;    /* Clean up */&#xA;    UA_Variant_clear(&amp;amp;value);&#xA;    UA_Client_delete(client); /* Disconnects the client internally */&#xA;    return status == UA_STATUSCODE_GOOD ? EXIT_SUCCESS : EXIT_FAILURE;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>ptitSeb/box64</title>
    <updated>2024-07-14T01:36:29Z</updated>
    <id>tag:github.com,2024-07-14:/ptitSeb/box64</id>
    <link href="https://github.com/ptitSeb/box64" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Box64 - Linux Userspace x86_64 Emulator with a twist, targeted at ARM64 Linux devices&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ptitSeb/box64/main/docs/img/Box64Logo.png&#34; alt=&#34;Official logo&#34; title=&#34;Official Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux Userspace x86_64 Emulator with a twist&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ptitSeb/box64/raw/main/docs/CHANGELOG.md&#34;&gt;View changelog&lt;/a&gt; | &lt;a href=&#34;https://github.com/ptitSeb/box64/raw/main/README_CN.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://github.com/ptitSeb/box64/raw/main/README_UK.md&#34;&gt;Українська&lt;/a&gt; | &lt;a href=&#34;https://github.com/ptitSeb/box64/issues/new&#34;&gt;Report an error&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://app.travis-ci.com/ptitSeb/box64.svg?branch=main&#34; alt=&#34;build&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/ptitSeb/box64&#34; alt=&#34;stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/ptitSeb/box64&#34; alt=&#34;forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/ptitSeb/box64&#34; alt=&#34;contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/ptitSeb/box64&#34; alt=&#34;prs&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/ptitSeb/box64&#34; alt=&#34;issues&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Box64 lets you run x86_64 Linux programs (such as games) on non-x86_64 Linux systems, like ARM (host system needs to be 64-bit little-endian).&lt;/p&gt; &#xA;&lt;p&gt;You can find many Box64 videos on the &lt;a href=&#34;https://www.youtube.com/channel/UCwFQAEj1lp3out4n7BeBatQ&#34;&gt;MicroLinux&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/channel/UCgfQjdc5RceRlTGfuthBs7g&#34;&gt;Pi Labs&lt;/a&gt; or &lt;a href=&#34;https://www.youtube.com/channel/UCEr8lpIJ3B5Ctc5BvcOHSnA&#34;&gt;The Byteman&lt;/a&gt; YouTube channels.&lt;/p&gt; &#xA;&lt;p&gt;Since Box64 uses the native versions of some &#34;system&#34; libraries, like libc, libm, SDL, and OpenGL, it&#39;s easy to integrate and use with most applications, and performance can be surprisingly high in many cases. Take a look at thoses bench analysis for an example &lt;a href=&#34;https://box86.org/index.php/2021/06/game-performances/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Box64 integrates with DynaRec (dynamic recompiler) for the ARM64 and RV64 platform, providing a speed boost between 5 to 10 times faster than using only the interpreter. Some high level information on how DynaRec works can be found &lt;a href=&#34;https://box86.org/2021/07/inner-workings-a-high%e2%80%91level-view-of-box86-and-a-low%e2%80%91level-view-of-the-dynarec/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some x64 internal opcodes use parts of &#34;Realmode X86 Emulator Library&#34;, see &lt;a href=&#34;https://raw.githubusercontent.com/ptitSeb/box64/main/src/emu/x64primop.c&#34;&gt;x64primop.c&lt;/a&gt; for copyright details&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ptitSeb/box64/main/docs/img/Box64Icon.png&#34; width=&#34;96&#34; height=&#34;96&#34;&gt; &#xA;&lt;p&gt;Logo and Icon made by @grayduck, thanks!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;There are a few environment variables to control the behaviour of Box64.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ptitSeb/box64/main/docs/USAGE.md&#34;&gt;here&lt;/a&gt; for all the environment variables and what they do.&lt;/p&gt; &#xA;&lt;p&gt;Note: Box64&#39;s Dynarec uses a mechanism with Memory Protection and a SegFault signal handler to handle JIT code. In simpler terms, if you want to use GDB to debug a running program that use JIT&#39;d code (like mono/Unity3D), you will still have many &#34;normal&#34; segfaults triggering. It is suggested to use something like &lt;code&gt;handle SIGSEGV nostop&lt;/code&gt; in GDB to not stop at each segfault, and maybe put a breakpoint inside &lt;code&gt;my_memprotectionhandler&lt;/code&gt; in &lt;code&gt;signals.c&lt;/code&gt; if you want to trap SegFaults.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Compiling/Installation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Compilation instructions can be found &lt;a href=&#34;https://github.com/ptitSeb/box64/raw/main/docs/COMPILE.md&#34;&gt;here&lt;/a&gt; &lt;br&gt; Instructions for installing Wine for Box64 can be found &lt;a href=&#34;https://github.com/ptitSeb/box64/raw/main/docs/X64WINE.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Version history/Change log&lt;/h2&gt; &#xA;&lt;p&gt;The change log is available &lt;a href=&#34;https://raw.githubusercontent.com/ptitSeb/box64/main/docs/CHANGELOG.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Notes about 32-bit platforms&lt;/h2&gt; &#xA;&lt;p&gt;Because Box64 works by directly translating function calls from x86_64 to host system, the host system (the one Box64 is running on) needs to have 64-bit libraries. Box64 doesn&#39;t include any 64-bit &amp;lt;-&amp;gt; 32-bit translation.&lt;/p&gt; &#xA;&lt;p&gt;So understand that box64 will only run 64-bit linux binaries. For 32-bit binaries, you need box86 (with all the multiarch or proot trickery it implies on a 64-bit OS). Note that many installer (mojo setup based) will fall back to &#34;x86&#34; when detecting ARM64 OS, and so will try to use box86 for the setup, even if an x86_64 version exist. You can hack your way around with a fake &#34;uname&#34; that return &#34;x86_64&#34; when the argument is &#34;-m&#34;&lt;/p&gt; &#xA;&lt;p&gt;An alternative solution is to use Wine with new WoW64, but you will be limited to 32bits windows apps and games.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Notes about Box64 configuration&lt;/h2&gt; &#xA;&lt;p&gt;Box64 now have configurations files. There are 2 files loaded. &lt;code&gt;/etc/box64.box64rc&lt;/code&gt; and &lt;code&gt;~/.box64rc&lt;/code&gt;. Both files have the same syntax, and is basicaly an ini files. Section in square brakets define the process name, and the rest is the env. var. to set. Looke at &lt;a href=&#34;https://github.com/ptitSeb/box64/raw/main/docs/USAGE.md&#34;&gt;Usage&lt;/a&gt; for detail on what parameters can be put. Box64 comes with a default file that should be installed for better stability. The file in in &lt;code&gt;system/box64.box64rc&lt;/code&gt; and should be installed to &lt;code&gt;/etc/box64.box64rc&lt;/code&gt; If, for some reason, you don&#39;t want to install that file here, at least copy it to &lt;code&gt;~/.box64rc&lt;/code&gt; or some game may not function correctly. Note that the priority is: &lt;code&gt;~/.box64rc&lt;/code&gt; &amp;gt; &lt;code&gt;/etc/box64.box64rc&lt;/code&gt; &amp;gt; command line So, your settings in &lt;code&gt;~/.box64rc&lt;/code&gt; may override the setting from your command line...&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Notes about Unity game emulation&lt;/h2&gt; &#xA;&lt;p&gt;Running Unity games should just work, but you should also note that many Unity3D games require OpenGL 3+ which can be tricky to provide on ARM SBC (single-board computers). Also many newer Unity3D (like KSP) games use the BC7 compressed textures, which is not supported on many ARM integrated GPU. Hint: on Pi4 and Pi5 use &lt;code&gt;MESA_GL_VERSION_OVERRIDE=3.2&lt;/code&gt;, with &lt;code&gt;BOX64_DYNAREC_STRONGMEM=1&lt;/code&gt; to prevent freezes and enable strong memory mode, and use Panfrost &lt;code&gt;PAN_MESA_DEBUG=gl3&lt;/code&gt; to use higher profile if the game starts then quits before showing anything.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Notes about GTK programs&lt;/h2&gt; &#xA;&lt;p&gt;GTK libraries are now wrapped on box64, both gtk2 and gtk3.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Notes about Steam&lt;/h2&gt; &#xA;&lt;p&gt;Note that Steam is a hybrid 32-bit / 64-bit. You NEED box86 to run Steam, as the client app is a 32-bit binary. It also uses a 64-bit local server binaries, and that steamwebhelper process is now mandatory, even on the &#34;small mode&#34;. And that process will eat lots of memory. So machine with less the 6Gb of RAM will need a swapfile to use Steam.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Notes about Wine&lt;/h2&gt; &#xA;&lt;p&gt;Wine64 is supported on box64. Proton too. Be aware that 64-bit Wine also includes 32-bit components, to be able to run 32-bit Windows programs. The 32-bit apps will need box86 and will not run without it. On a system where both box64 and box86 are present and working, a wine 64-bit setup can run both 32-bit and 64-bit Windows programs (just use &lt;code&gt;wine&lt;/code&gt; and &lt;code&gt;wine64&lt;/code&gt; respectively). Note that the new 32-bit PE in 64-bit processes that the Wine team is currently implementing in Wine 7.+ is now supported. It&#39;s called &#34;new WoW64&#34; and it&#39;s working fine on box64, allowing the use of 32bits windows program on 64bits only system.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Notes about Vulkan&lt;/h2&gt; &#xA;&lt;p&gt;Box64 wraps Vulkan libraries, but note that it as mostly been tested with an AMD RX550 card and on the Freedreno driver, so some extensions may be missing depending on your graphics card.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Final word&lt;/h2&gt; &#xA;&lt;p&gt;I want to thank everyone who has contributed to box64 development. There are many ways to contribute: code contribution, financial, hardware and advertisement! So, in no particular order, I want to thank:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For their major code contribution: rajdakin, mogery, ksco, xctan&lt;/li&gt; &#xA; &lt;li&gt;For their major financial contribution: &lt;a href=&#34;https://playtron.one&#34;&gt;Playtron&lt;/a&gt;, FlyingFathead, stormchaser3000, dennis1248, sll00, &lt;a href=&#34;https://libre.computer/&#34;&gt;libre-computer-project&lt;/a&gt;, &lt;a href=&#34;http://cubecoders.com/&#34;&gt;CubeCoders Limited&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For hardware contribution and LoongArch migration: &lt;a href=&#34;https://www.linuxgame.cn/&#34;&gt;xiaoji&lt;/a&gt;, Deepin Beijing Develop Team&lt;/li&gt; &#xA; &lt;li&gt;For their hardware contribution: &lt;a href=&#34;https://www.adlinktech.com/Products/Computer_on_Modules/COM-HPC-Server-Carrier-and-Starter-Kit/Ampere_Altra_Developer_Platform?lang=en&#34;&gt;ADLINK&lt;/a&gt; with &lt;a href=&#34;https://amperecomputing.com/home/edge&#34;&gt;Ampere&lt;/a&gt;, &lt;a href=&#34;https://www.sophon.ai/&#34;&gt;SOPHGO&lt;/a&gt;, &lt;a href=&#34;https://rockpi.org/&#34;&gt;Radxa&lt;/a&gt;, &lt;a href=&#34;https://rvspace.org/&#34;&gt;StarFive&lt;/a&gt;, &lt;a href=&#34;https://www.pine64.org/&#34;&gt;Pine64&lt;/a&gt;, &lt;a href=&#34;https://www.ayntec.com/&#34;&gt;AYN&lt;/a&gt;, &lt;a href=&#34;https://ayaneo.com/&#34;&gt;AYANEO&lt;/a&gt;, &lt;a href=&#34;https://github.com/jiangcuo&#34;&gt;jiangcuo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For their continuous advertisements for the box64 project: salva (&lt;a href=&#34;https://www.youtube.com/channel/UCwFQAEj1lp3out4n7BeBatQ&#34;&gt;microLinux&lt;/a&gt;), &lt;a href=&#34;https://www.youtube.com/channel/UCgfQjdc5RceRlTGfuthBs7g&#34;&gt;PILab&lt;/a&gt;/&lt;a href=&#34;https://twisteros.com/&#34;&gt;TwisterOS&lt;/a&gt; team, &lt;a href=&#34;https://www.youtube.com/channel/UCEr8lpIJ3B5Ctc5BvcOHSnA&#34;&gt;The Byteman&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/channel/UCpv7NFr0-9AB5xoklh3Snhg&#34;&gt;NicoD&lt;/a&gt;, ekianjo (&lt;a href=&#34;https://boilingsteam.com/&#34;&gt;Boilingsteam&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And I also thank the many other people who participated even once in this project.&lt;/p&gt; &#xA;&lt;p&gt;(If you use Box64 in your project, please don&#39;t forget to mention it!)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ahrm/sioyek</title>
    <updated>2024-07-14T01:36:29Z</updated>
    <id>tag:github.com,2024-07-14:/ahrm/sioyek</id>
    <link href="https://github.com/ahrm/sioyek" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sioyek is a PDF viewer with a focus on textbooks and research papers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sioyek&lt;/h1&gt; &#xA;&lt;p&gt;Sioyek is a PDF viewer with a focus on textbooks and research papers.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#install&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#feature-video-overview&#34;&gt;Video Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#build-instructions&#34;&gt;Build Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#donation&#34;&gt;Buy Me a Coffee (or a Book!)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Official packages&lt;/h3&gt; &#xA;&lt;p&gt;There are installers for Windows, macOS and Linux. See &lt;a href=&#34;https://github.com/ahrm/sioyek/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Homebew Cask&lt;/h3&gt; &#xA;&lt;p&gt;There is a homebrew cask available here: &lt;a href=&#34;https://formulae.brew.sh/cask/sioyek&#34;&gt;https://formulae.brew.sh/cask/sioyek&lt;/a&gt;. Install by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install --cask sioyek&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Third-party packages for Linux&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to install sioyek with a package manager, you can look at this list. Please note that they are provided by third party packagers. USE AT YOUR OWN RISK! If you&#39;re reporting a bug for a third-party package, please mention which package you&#39;re using.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Distro&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;   &lt;th&gt;Maintainer&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flathub&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flathub.org/apps/details/com.github.ahrm.sioyek&#34;&gt;sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flathub.org/apps/details/com.github.ahrm.sioyek&#34;&gt;@nbenitez&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alpine&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkgs.alpinelinux.org/packages?name=sioyek&#34;&gt;sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jirutka&#34;&gt;@jirutka&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/sioyek&#34;&gt;AUR sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/goggle&#34;&gt;@goggle&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/sioyek-git/&#34;&gt;AUR sioyek-git&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hrdl-github&#34;&gt;@hrdl-github&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/sioyek-appimage/&#34;&gt;AUR sioyek-appimage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DhruvaSambrani&#34;&gt;@DhruvaSambrani&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://packages.debian.org/sioyek&#34;&gt;sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/viccie30&#34;&gt;@viccie30&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NixOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.nixos.org/packages?channel=unstable&amp;amp;show=sioyek&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=sioyek&#34;&gt;sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/podocarp&#34;&gt;@podocarp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openSUSE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://build.opensuse.org/package/show/Publishing/sioyek&#34;&gt;Publishing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/uncomfyhalomacro&#34;&gt;@uncomfyhalomacro&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openSUSE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://build.opensuse.org/package/show/openSUSE:Factory/sioyek&#34;&gt;Factory&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/uncomfyhalomacro&#34;&gt;@uncomfyhalomacro&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://packages.ubuntu.com/sioyek&#34;&gt;sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/viccie30&#34;&gt;@viccie30&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can view the official documentation &lt;a href=&#34;https://sioyek-documentation.readthedocs.io/en/latest/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Video Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yTmCI0Xp5vI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/yTmCI0Xp5vI/0.jpg&#34; alt=&#34;Sioyek feature overview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For a more in-depth tutorial, see this video:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RaHRvnb0dY8&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/RaHRvnb0dY8/0.jpg&#34; alt=&#34;Sioyek Tutorial&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Quick Open&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125321111-9b29dc00-e351-11eb-873e-94ea30016a05.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125321111-9b29dc00-e351-11eb-873e-94ea30016a05.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can quickly search and open any file you have previously interacted with using sioyek.&lt;/p&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125321313-cf050180-e351-11eb-9275-c2759c684af5.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125321313-cf050180-e351-11eb-9275-c2759c684af5.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can search and jump to table of contents entries.&lt;/p&gt; &#xA;&lt;h3&gt;Smart Jump&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125321419-e5ab5880-e351-11eb-9688-95374a22774f.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125321419-e5ab5880-e351-11eb-9688-95374a22774f.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can jump to any referenced figure or bibliography item &lt;em&gt;even if the PDF file doesn&#39;t provide links&lt;/em&gt;. You can also search the names of bibliography items in google scholar/libgen by middle clicking/shift+middle clicking on their name.&lt;/p&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/154683015-0bae4f92-78e2-4141-8446-49dd7c2bd7c9.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/154683015-0bae4f92-78e2-4141-8446-49dd7c2bd7c9.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can open a quick overview of figures/references/tables/etc. by right clicking on them (Like Smart Jump, this feature works even if the document doesn&#39;t provide links).&lt;/p&gt; &#xA;&lt;h3&gt;Mark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125321811-505c9400-e352-11eb-85e0-ffc3ae5f8cb8.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125321811-505c9400-e352-11eb-85e0-ffc3ae5f8cb8.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sometimes when reading a document you need to go back a few pages (perhaps to view a definition or something) and quickly jump back to where you were. You can achieve this by using marks. Marks are named locations within a PDF file (each mark has a single character name for example &#39;a&#39; or &#39;m&#39;) which you can quickly jump to using their name. In the aforementioned example, before going back to the definition you mark your location and later jump back to the mark by invoking its name. Lower case marks are local to the document and upper case marks are global (this should be very familiar to you if you have used vim).&lt;/p&gt; &#xA;&lt;h3&gt;Bookmarks&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125322503-1a6bdf80-e353-11eb-8018-5e8fc43b8d05.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125322503-1a6bdf80-e353-11eb-8018-5e8fc43b8d05.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bookmarks are similar to marks except they are named by a text string and they are all global.&lt;/p&gt; &#xA;&lt;h3&gt;Highlights&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/130956728-7e0a87fa-4ada-4108-a8fc-9d9d04180f56.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/130956728-7e0a87fa-4ada-4108-a8fc-9d9d04180f56.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Highlight text using different kinds of highlights. You can search among all the highlights.&lt;/p&gt; &#xA;&lt;h3&gt;Portals (this feature is most useful for users with multiple monitors)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125322657-41c2ac80-e353-11eb-985e-8f3ce9808f67.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125322657-41c2ac80-e353-11eb-985e-8f3ce9808f67.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Suppose you are reading a paragraph which references a figure which is not very close to the current location. Jumping back and forth between the current paragraph and the figure can be very annoying. Using portals, you can link the paragraph&#39;s location to the figure&#39;s location. Sioyek shows the closest portal destination in a separate window (which is usually placed on a second monitor). This window is automatically updated to show the closest portal destination as the user navigates the document.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125337160-e4832700-e363-11eb-8801-0bee58121c2d.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125337160-e4832700-e363-11eb-8801-0bee58121c2d.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can customize all key bindings and some UI elements by editing &lt;code&gt;keys_user.config&lt;/code&gt; and &lt;code&gt;prefs_user.config&lt;/code&gt;. The default configurations are in &lt;code&gt;keys.config&lt;/code&gt; and &lt;code&gt;prefs.config&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;h4&gt;Fedora&lt;/h4&gt; &#xA;&lt;p&gt;Run the following commands to install dependencies, clone the repository and compile sioyek on Fedora (tested on Fedora Workstation 36).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install qt5-qtbase-devel qt5-qtbase-static qt5-qt3d-devel harfbuzz-devel mesa-libGL-devel glfw-devel&#xA;git clone --recursive https://github.com/ahrm/sioyek&#xA;cd sioyek&#xA;./build_linux.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Generic distribution&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Qt 5 and make sure &lt;code&gt;qmake&lt;/code&gt; is in &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;qmake --version&lt;/code&gt; to make sure the &lt;code&gt;qmake&lt;/code&gt; in path is using Qt 5.x.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;code&gt;libharfbuzz&lt;/code&gt;:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install libharfbuzz-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Clone the repository and build:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/ahrm/sioyek&#xA;cd sioyek&#xA;./build_linux.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Visual Studio (tested on 2019, other relatively recent versions should work too)&lt;/li&gt; &#xA; &lt;li&gt;Install Qt 5 and make sure qmake is in &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository and build using 64 bit Visual Studio Developer Command Prompt:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/ahrm/sioyek&#xA;cd sioyek&#xA;build_windows.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mac&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Xcode.&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository and build: (The code below is in Zsh, which is the default shell on macOS.)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;(&#xA;setopt PIPE_FAIL PRINT_EXIT_VALUE ERR_RETURN SOURCE_TRACE XTRACE&#xA;&#xA;git clone --recursive https://github.com/ahrm/sioyek&#xA;cd sioyek&#xA;chmod +x build_mac.sh&#xA;&#xA;brew install &#39;qt@5&#39; freeglut mesa harfbuzz&#xA;&#xA;export PATH=&#34;/opt/homebrew/opt/qt@5/bin:$PATH&#34;&#xA;#: The above is needed to make =qmake= from =qt= be found.&#xA;#: Find the path using =brew info &#39;qt@5&#39;=.&#xA;&#xA;MAKE_PARALLEL=8 ./build_mac.sh&#xA;&#xA;mv build/sioyek.app /Applications/&#xA;sudo codesign --force --sign - --deep /Applications/sioyek.app&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoy sioyek, please consider donating to support its development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/ahrm&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>