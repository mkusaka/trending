<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-14T01:51:54Z</updated>
  <subtitle>Weekly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Z4ee/StarRail-ACE-B</title>
    <updated>2023-05-14T01:51:54Z</updated>
    <id>tag:github.com,2023-05-14:/Z4ee/StarRail-ACE-B</id>
    <link href="https://github.com/Z4ee/StarRail-ACE-B" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository provides code for bypassing the anti-cheat system in Honkai Star Rail game, allowing players to open Cheat Engine. For informational purposes only. Use at your own risk.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Honkai Star Rail | ACE (AntiCheatExpert) bypass&lt;/h1&gt; &#xA;&lt;p&gt;This repository provides code for bypassing the anti-cheat system in Honkai Star Rail game, allowing players to open Cheat Engine. For informational purposes only. Use at your own risk.&lt;/p&gt; &#xA;&lt;h1&gt;Instruction&lt;/h1&gt; &#xA;&lt;p&gt;What you need to compile:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;minhook&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After compilation, you will receive a dll that you need to inject into the game immediately after opening&lt;/p&gt; &#xA;&lt;p&gt;You can use Extreme Injector (auto inject) to inject the dll into the game at startup&lt;/p&gt; &#xA;&lt;p&gt;Now you can open the cheat engine&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/113752393/235124161-429d62ce-481f-46ae-a36a-63d51a05aae4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BitMaker-hub/NerdMiner_v2</title>
    <updated>2023-05-14T01:51:54Z</updated>
    <id>tag:github.com,2023-05-14:/BitMaker-hub/NerdMiner_v2</id>
    <link href="https://github.com/BitMaker-hub/NerdMiner_v2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Improved version of first ESP32 NerdMiner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NerdSoloMiner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;The NerdSoloMiner v2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a &lt;strong&gt;free and open source project&lt;/strong&gt; that let you try to reach a bitcoin block with a small piece of hardware.&lt;/p&gt; &#xA;&lt;p&gt;The main aim of this project is to let you &lt;strong&gt;learn more about minery&lt;/strong&gt; and to have a beautiful piece of hardware in your desktop.&lt;/p&gt; &#xA;&lt;p&gt;Original project &lt;a href=&#34;https://github.com/valerio-vaccaro/HAN&#34;&gt;https://github.com/valerio-vaccaro/HAN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/master/images/NerdMinerv2.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TTGO T-Display S3&lt;/li&gt; &#xA; &lt;li&gt;3D BOX &lt;a href=&#34;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/master/3d_files/&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Project description&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;ESP32 implementing Stratum protocol&lt;/strong&gt; to mine on solo pool. Pool can be changed but originally works with ckpool.&lt;/p&gt; &#xA;&lt;p&gt;This project is using ESP32-S3, uses WifiManager to modify miner settings and save them to SPIFF.&lt;/p&gt; &#xA;&lt;p&gt;This miner is multicore and multithreads, each thread mine a different block template. After 1,000,000 trials the block in refreshed in order to avoid mining on old template.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Current project is still in developement and more features will be added&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Tutorial&lt;/h2&gt; &#xA;&lt;h3&gt;Hardware requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TTGO T-Display S3 &amp;gt; Buy it on aliexpress or amazon&lt;/li&gt; &#xA; &lt;li&gt;3D BOX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Flash firmware&lt;/h3&gt; &#xA;&lt;p&gt;Create your own miner using the online tool &lt;strong&gt;ESPtool&lt;/strong&gt; and the &lt;strong&gt;binary files&lt;/strong&gt; that you will find in the src/bin folder. If you want you can compile the entire project using Arduino, PlatformIO or Expressif IDF.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get a TTGO T-display S3&lt;/li&gt; &#xA; &lt;li&gt;Download this repository&lt;/li&gt; &#xA; &lt;li&gt;Go to ESPtool online: &lt;a href=&#34;https://espressif.github.io/esptool-js/&#34;&gt;https://espressif.github.io/esptool-js/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Load the firmware with the binaries from the src/bin folder.&lt;/li&gt; &#xA; &lt;li&gt;Plug your board and select each file from src/bin with its address&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Build troubleshooting&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Online ESPtool works with chrome, chromium, brave&lt;/li&gt; &#xA; &lt;li&gt;ESPtool recommendations: use 115200bps&lt;/li&gt; &#xA; &lt;li&gt;Build errors &amp;gt; If during firmware download upload stops, it&#39;s recommended to enter the board in boot mode. Unplug cable, hold right bottom button and then plug cable. Try programming&lt;/li&gt; &#xA; &lt;li&gt;In extreme case you can &#34;Erase all flash&#34; on ESPtool to clean all current configuration before uploading firmware. There has been cases that experimented Wifi failures until this was made.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;NerdMiner configuration&lt;/h3&gt; &#xA;&lt;p&gt;After programming, you will only need to setup your Wifi and BTC address.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Connect to NerdMinerAP &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AP: NerdMinerAP&lt;/li&gt; &#xA;   &lt;li&gt;PASS: MineYourCoins&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Setup your Wifi Network&lt;/li&gt; &#xA; &lt;li&gt;Add your BTCaddress&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Optional you can select other pool:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Pool URL&lt;/th&gt; &#xA;   &lt;th&gt;Port&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solo.ckpool.org&lt;/td&gt; &#xA;   &lt;td&gt;3333&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://solo.ckpool.org/&#34;&gt;https://solo.ckpool.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;btc.zsolo.bid&lt;/td&gt; &#xA;   &lt;td&gt;6057&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zsolo.bid/en/btc-solo-mining-pool&#34;&gt;https://zsolo.bid/en/btc-solo-mining-pool&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;eu.stratum.slushpool.com&lt;/td&gt; &#xA;   &lt;td&gt;3333&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://braiins.com/pool&#34;&gt;https://braiins.com/pool&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you need to reboot your currentConfig&lt;/strong&gt;, hold right top button during 5 seconds and config will be deleted.&lt;/p&gt; &#xA;&lt;h4&gt;Build video&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/POUT2R_opDs&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/POUT2R_opDs/0.jpg&#34; alt=&#34;Ver video aquí&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;h3&gt;Project guidelines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Current project was addapted to work with PlatformIO&lt;/li&gt; &#xA; &lt;li&gt;Current project works with ESP32-S3 but any ESP32 can be used.&lt;/li&gt; &#xA; &lt;li&gt;Partition squeme should be build as huge app&lt;/li&gt; &#xA; &lt;li&gt;All libraries needed shown on platform.ini&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;On process&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Move project to platformIO&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bug rectangle on screen when 1milion shares&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bug memory leaks&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bug Reboots when received JSON contains some null values&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Implement midstate sha256&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bug Wificlient DNS unresolved on Wifi.h&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Code refactoring&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add blockHeight to screen&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add clock to show current time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add new screen with global mining stats&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support to control BM1397&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Donations/Project contributions&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to contribute and help dev team with this project you can send a donation to the following LN address ⚡&lt;a href=&#34;mailto:teamnerdminer@getalby.com&#34;&gt;teamnerdminer@getalby.com&lt;/a&gt;⚡&lt;/p&gt; &#xA;&lt;p&gt;Enjoy&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>koekeishiya/yabai</title>
    <updated>2023-05-14T01:51:54Z</updated>
    <id>tag:github.com,2023-05-14:/koekeishiya/yabai</id>
    <link href="https://github.com/koekeishiya/yabai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tiling window manager for macOS based on binary space partitioning&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;75%&#34; src=&#34;https://raw.githubusercontent.com/koekeishiya/yabai/master/assets/banner/banner.svg?sanitize=true&#34; alt=&#34;Banner&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Tiling window management for the Mac.&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/koekeishiya/yabai/raw/master/LICENSE.txt&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/koekeishiya/yabai.svg?color=green&#34; alt=&#34;License Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/koekeishiya/yabai/raw/master/CHANGELOG.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/view-changelog-green.svg?sanitize=true&#34; alt=&#34;Changelog Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/koekeishiya/yabai/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commits-since/koekeishiya/yabai/latest.svg?color=green&#34; alt=&#34;Version Badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;40%&#34; src=&#34;https://raw.githubusercontent.com/koekeishiya/yabai/master/assets/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt; &#xA;&lt;p&gt;yabai is a window management utility that is designed to work as an extension to the built-in window manager of macOS. yabai allows you to control your windows, spaces and displays freely using an intuitive command line interface and optionally set user-defined keyboard shortcuts using &lt;a href=&#34;https://github.com/koekeishiya/skhd&#34;&gt;↗&amp;nbsp;skhd&lt;/a&gt; and other third-party software.&lt;/p&gt; &#xA;&lt;p&gt;The primary function of yabai is tiling window management; automatically modifying your window layout using a binary space partitioning algorithm to allow you to focus on the content of your windows without distractions. Additional features of yabai include focus-follows-mouse, disabling animations for switching spaces, creating spaces past the limit of 16 spaces, and much more.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Configuration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/koekeishiya/yabai/wiki&#34;&gt;↗&amp;nbsp;yabai&amp;nbsp;wiki&lt;/a&gt; has both brief and detailed installation instructions for multiple installation methods, and also explains how to uninstall yabai completely.&lt;/li&gt; &#xA; &lt;li&gt;Sample configuration files can be found in the &lt;a href=&#34;https://github.com/koekeishiya/yabai/tree/master/examples&#34;&gt;↗&amp;nbsp;examples&lt;/a&gt; directory. Refer to the &lt;a href=&#34;https://github.com/koekeishiya/yabai/raw/master/doc/yabai.asciidoc&#34;&gt;↗&amp;nbsp;documentation&lt;/a&gt; or the wiki for further information.&lt;/li&gt; &#xA; &lt;li&gt;Keyboard shortcuts can be defined with &lt;a href=&#34;https://github.com/koekeishiya/skhd&#34;&gt;↗&amp;nbsp;skhd&lt;/a&gt; or any other suitable software you may prefer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements and Caveats&lt;/h2&gt; &#xA;&lt;p&gt;Please read the below requirements carefully. Make sure you fulfil all of them before filing an issue.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Requirement&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Operating&amp;nbsp;System&amp;nbsp;Intel x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Big Sur 11.0.1+ and Monterey 12.0.0+ is supported.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Operating&amp;nbsp;System&amp;nbsp;Apple Silicon&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Monterey 12.0.0+ is supported.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Accessibility&amp;nbsp;API&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yabai must be given permission to utilize the Accessibility API and will request access upon launch. The application must be restarted after access has been granted.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Screen Recording&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yabai must be given Screen Recording permission if and only if you want to enable window animations, and will request access when necessary. The application must be restarted after access has been granted.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Mission&amp;nbsp;Control&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;In the Mission Control preferences pane in System Preferences, the setting &#34;Displays have separate Spaces&#34; must be enabled.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Please also take note of the following caveats.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Caveat&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;System&amp;nbsp;Integrity&amp;nbsp;Protection&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;System Integrity Protection needs to be (partially) disabled for yabai to inject a scripting addition into Dock.app for controlling windows with functions that require elevated privileges. This enables control of the window server, which is the sole owner of all window connections, and enables additional features of yabai.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Code&amp;nbsp;Signing&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;When building from source (or installing from HEAD), it is recommended to codesign the binary so it retains its accessibility and automation privileges when updated or rebuilt.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Mission&amp;nbsp;Control&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;In the Mission Control preferences pane in System Preferences, the setting &#34;Automatically rearrange Spaces based on most recent use&#34; should be disabled for commands that rely on the ordering of spaces to work reliably.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License and Attribution&lt;/h2&gt; &#xA;&lt;p&gt;yabai is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/koekeishiya/yabai/master/LICENSE.txt&#34;&gt;↗&amp;nbsp;MIT&amp;nbsp;License&lt;/a&gt;, a short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/fools-mate&#34;&gt;@fools-mate&lt;/a&gt; for creating a logo and banner for this project and making them available for free.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/dominiklohmann&#34;&gt;@dominiklohmann&lt;/a&gt; for contributing great documentation, support, and more, for free.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Use at your own discretion. I take no responsibility if anything should happen to your machine while trying to install, test or otherwise use this software in any form. You acknowledge that you understand the potential risk that may come from disabling &lt;a href=&#34;https://support.apple.com/en-us/HT204899&#34;&gt;↗&amp;nbsp;System&amp;nbsp;Integrity&amp;nbsp;Protection&lt;/a&gt; on your system, and I make no recommendation as to whether you should or should not disable System Integrity Protection.&lt;/p&gt; &#xA;&lt;!-- Project internal links --&gt; &#xA;&lt;!-- Links to other GitHub projects/users --&gt; &#xA;&lt;!-- External links --&gt;</summary>
  </entry>
</feed>