<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-26T02:03:39Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>37iOS/iChatGPT</title>
    <updated>2023-03-26T02:03:39Z</updated>
    <id>tag:github.com,2023-03-26:/37iOS/iChatGPT</id>
    <link href="https://github.com/37iOS/iChatGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenAI ChatGPT SwiftUI app for iOS, iPadOS, macOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iChatGPT&lt;/h1&gt; &#xA;&lt;p&gt;OpenAI ChatGPT app for iOS, iPadOS, macoS&lt;/p&gt; &#xA;&lt;h3&gt;一、App 介绍&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/37iOS/iChatGPT/main/screenshot/01.jpeg&#34; width=&#34;800&#34; height:auto alt=&#34;iChatGPT app&#34;&gt; &#xA;&lt;p&gt;使用和原理介绍：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7175051294808211512&#34;&gt;用 SwiftUI 实现 AI 聊天对话 app - iChatGPT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;更新说明&lt;/h4&gt; &#xA;&lt;p&gt;最新版本 v2.2:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Increased request timeout from 30 seconds to 60 seconds.（请求超时从 30 秒增加到 60 秒。）&lt;/li&gt; &#xA; &lt;li&gt;When sending dialog context, only send the first three Q&amp;amp;A rounds, and submit only the first 100 characters of the answer.（发送对话上下文时，只发送提问的前三轮问答，且答案只提交前100个字。）&lt;/li&gt; &#xA; &lt;li&gt;Fixed Chinese Pinyin input method typing interruption problem (thanks to @ypwhs/@coder-free/@0xfeedface1993).(修复中文拼音输入法打字中断的问题（感谢 @ypwhs、@coder-free、@0xfeedface1993）)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v2.1:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;support GPT-4 Model（支持 GPT-4 模型）&lt;/li&gt; &#xA; &lt;li&gt;support English language（支持英文语言）&lt;/li&gt; &#xA; &lt;li&gt;display configured API Key（显示已配置的 API Key）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v2.0:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;support OpenAI API key&lt;/li&gt; &#xA; &lt;li&gt;base GPT3.5 Turbo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注意：需要填写自己的 OpenAI API key，app 不提供 key！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;支持功能&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;实现 ChatGPT 基本聊天功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以直接与 ChatGPT 对话，并且保留上下文；&lt;/li&gt; &#xA; &lt;li&gt;可以复制问题和回答内容；&lt;/li&gt; &#xA; &lt;li&gt;可以快捷重复提问;&lt;/li&gt; &#xA; &lt;li&gt;iPadOS 和 macOS 可以同时打开多个独立的聊天对话&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;支持系统：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 14.0+&lt;/li&gt; &#xA; &lt;li&gt;iPadOS 14.0+&lt;/li&gt; &#xA; &lt;li&gt;macOS 11.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;显示个人头像&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;请求失败重试等&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;支持多语言，如英文&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;保存对话&lt;/li&gt; &#xA; &lt;li&gt;代码没有高亮&lt;/li&gt; &#xA; &lt;li&gt;悬浮窗模式&lt;/li&gt; &#xA; &lt;li&gt;保存 pdf 文件&lt;/li&gt; &#xA; &lt;li&gt;自由的选择和复制文本&lt;/li&gt; &#xA; &lt;li&gt;更多功能，欢迎提 PR ~&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;二、安装说明&lt;/h3&gt; &#xA;&lt;h4&gt;2.1 iOS / iPadOS / Mac Apple Silicon&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 14.0+&lt;/li&gt; &#xA; &lt;li&gt;iPadOS 14.0+&lt;/li&gt; &#xA; &lt;li&gt;macOS 11.0+（Mac Apple Silicon M1/M2+）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;TestFlight 下载地址：&lt;a href=&#34;https://testflight.apple.com/join/GR4BOt2M&#34;&gt;https://testflight.apple.com/join/GR4BOt2M&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注：&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;TestFlight 名额有限，先下先得！&lt;/li&gt; &#xA;  &lt;li&gt;如无名额，iOS 和 iPadOS 需要自行编译安装。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;2.2 macSO 安装包下载&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;macOS 11.0+&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac Apple Silicon M1/M2+&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac Intel x86_64&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac 下载：&lt;a href=&#34;https://github.com/37iOS/iChatGPT/releases&#34;&gt;Releases&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.3 Xcode 构建&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;构建依赖：Xcode14&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;下载项目后，双击 &lt;code&gt;iChatGPT.xcodeproj&lt;/code&gt; 打开项目构建。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注：依赖其它共享组件，需要保证能访问 GitHub 服务。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;三、FAQ&lt;/h3&gt; &#xA;&lt;h4&gt;3.1 登陆&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;目前支持使用openai key来进行认证，无需其他方式&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/37iOS/iChatGPT/main/screenshot/03.png&#34; width=&#34;800&#34; height:auto alt=&#34;screenshot/03.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;欢迎大家提 PR ! 或者有解决方案欢迎大家提供~&lt;/p&gt; &#xA;&lt;h4&gt;3.2 启动 macOS app&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;问题：首次打开提示：“无法打开iChatGPT.app”，因为 Apple 无法检查其是否包含恶意软件。”&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;解决方法：选中 app 后，点击右键 -&amp;gt; ”打开“，即可正常打开 iChatGPT。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;3.3 More Questions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/37iOS/iChatGPT/issues/new/choose&#34;&gt;New Issue&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;四、Contributors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iHTCboy&#34;&gt;@iHTCboy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AlphaGogoo&#34;&gt;@AlphaGogoo (BWQ)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RbBtSn0w&#34;&gt;@RbBtSn0w (Snow Wu)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0xfeedface1993&#34;&gt;@0xfeedface1993 (John Corner)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;五、效果示例&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/37iOS/iChatGPT/main/screenshot/02.jpeg&#34; width=&#34;800&#34; height:auto alt=&#34;screenshot/02.jpeg&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/37iOS/iChatGPT/main/screenshot/03.jpeg&#34; width=&#34;800&#34; height:auto alt=&#34;screenshot/03.jpeg&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/37iOS/iChatGPT/main/screenshot/05.jpeg&#34; width=&#34;800&#34; height:auto alt=&#34;screenshot/05.jpeg&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/37iOS/iChatGPT/main/screenshot/06.jpeg&#34; width=&#34;800&#34; height:auto alt=&#34;screenshot/06.jpeg&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/37iOS/iChatGPT/main/screenshot/07.jpeg&#34; width=&#34;800&#34; height:auto alt=&#34;screenshot/07.jpeg&#34;&gt; &#xA;&lt;h3&gt;六、特别鸣谢&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://platform.openai.com/docs/guides/chat&#34;&gt;Chat completion - OpenAI API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://platform.openai.com/docs/models/moderation&#34;&gt;Models - OpenAI API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chat.openai.com/&#34;&gt;OpenAI ChatGPT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openai.com/blog/&#34;&gt;OpenAI Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/A-kirami/nonebot-plugin-chatgpt&#34;&gt;A-kirami/nonebot-plugin-chatgpt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shaps80/MarkdownText&#34;&gt;shaps80/MarkdownText&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MacPaw/OpenAI&#34;&gt;MacPaw/OpenAI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SwiftUIX/SwiftUIX&#34;&gt;SwiftUIX/SwiftUIX&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>altstoreio/AltStore</title>
    <updated>2023-03-26T02:03:39Z</updated>
    <id>tag:github.com,2023-03-26:/altstoreio/AltStore</id>
    <link href="https://github.com/altstoreio/AltStore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AltStore is an alternative app store for non-jailbroken iOS devices.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AltStore&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;AltStore is an alternative app store for non-jailbroken iOS devices.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swift.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/swift-5.0-orange.svg?sanitize=true&#34; alt=&#34;Swift Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-AGPL%20v3-blue.svg?sanitize=true&#34; alt=&#34;License: AGPL v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AltStore is an iOS application that allows you to sideload other apps (.ipa files) onto your iOS device with just your Apple ID. AltStore resigns apps with your personal development certificate and sends them to a desktop app, AltServer, which installs the resigned apps back to your device using iTunes WiFi sync. To prevent apps from expiring, AltStore will also periodically refresh your apps in the background when on the same WiFi as AltServer.&lt;/p&gt; &#xA;&lt;p&gt;For the initial release, I focused on building a solid foundation for distributing my own apps — primarily Delta, &lt;a href=&#34;https://github.com/rileytestut/Delta&#34;&gt;my all-in-one emulator for iOS&lt;/a&gt;. Now that Delta has been released, however, I&#39;m beginning work on adding support for &lt;em&gt;anyone&lt;/em&gt; to list and distribute their apps through AltStore (contributions welcome! 🙂).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installs apps over WiFi using AltServer&lt;/li&gt; &#xA; &lt;li&gt;Resigns and installs any app with your Apple ID&lt;/li&gt; &#xA; &lt;li&gt;Refreshes apps periodically in the background to prevent them from expiring (when on same WiFi as AltServer)&lt;/li&gt; &#xA; &lt;li&gt;Handles app updates directly through AltStore&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 11&lt;/li&gt; &#xA; &lt;li&gt;iOS 12.2+ (AltStore)&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.14.4+ (AltServer)&lt;/li&gt; &#xA; &lt;li&gt;Swift 5+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Why iOS 12.2+ and macOS 10.14.4+? Doing so allows me to distribute all AltStore apps without embedding Swift libraries inside them. This helps me afford bandwidth costs by reducing download sizes by roughly 30%, but also noticeably improves how long it takes to install/refresh apps with AltStore. If you&#39;re compiling AltStore and/or AltServer yourself, however, you should be able to lower their deployment targets to iOS 12.0 and macOS 10.14.0, respectively, without any issues.&lt;/p&gt; &#xA;&lt;h2&gt;Project Overview&lt;/h2&gt; &#xA;&lt;h3&gt;AltStore&lt;/h3&gt; &#xA;&lt;p&gt;AltStore is a just regular, sandboxed iOS application. The AltStore app target contains the vast majority of AltStore&#39;s functionality, including all the logic for downloading and updating apps through AltStore. AltStore makes heavy use of standard iOS frameworks and technologies most iOS developers are familiar with, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Core Data&lt;/li&gt; &#xA; &lt;li&gt;Storyboards/Nibs&lt;/li&gt; &#xA; &lt;li&gt;Auto Layout&lt;/li&gt; &#xA; &lt;li&gt;Background App Refresh&lt;/li&gt; &#xA; &lt;li&gt;Network.framework (new in iOS 12)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AltServer&lt;/h3&gt; &#xA;&lt;p&gt;AltServer is also just a regular, sandboxed macOS application. AltServer is significantly less complex than AltStore though, and for that reason consists of only a handful of files.&lt;/p&gt; &#xA;&lt;h3&gt;AltKit&lt;/h3&gt; &#xA;&lt;p&gt;AltKit is a shared framework that includes common code between AltStore and AltServer.&lt;/p&gt; &#xA;&lt;h3&gt;AltSign&lt;/h3&gt; &#xA;&lt;p&gt;AltSign is my internal framework used by both AltStore and AltServer to communicate with Apple&#39;s servers and resign apps. For more info, check the &lt;a href=&#34;https://github.com/rileytestut/altsign&#34;&gt;AltSign repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Roxas&lt;/h3&gt; &#xA;&lt;p&gt;Roxas is my internal framework used across all my iOS projects, developed to simplify a variety of common tasks used in iOS development. For more info, check the &lt;a href=&#34;https://github.com/rileytestut/roxas&#34;&gt;Roxas repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation Instructions&lt;/h2&gt; &#xA;&lt;p&gt;AltStore and AltServer are both fairly straightforward to compile and run if you&#39;re already an iOS or macOS developer. To compile AltStore and/or AltServer:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository &lt;pre&gt;&lt;code&gt;git clone https://github.com/rileytestut/AltStore.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Update submodules: &lt;pre&gt;&lt;code&gt;cd AltStore &#xA;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;AltStore.xcworkspace&lt;/code&gt; and select the AltStore project in the project navigator. On the &lt;code&gt;Signing &amp;amp; Capabilities&lt;/code&gt; tab, change the team from &lt;code&gt;Yvette Testut&lt;/code&gt; to your own account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;(AltStore only)&lt;/strong&gt; Change the value for &lt;code&gt;ALTDeviceID&lt;/code&gt; in the Info.plist to your device&#39;s UDID. Normally, AltServer embeds the device&#39;s UDID in AltStore&#39;s Info.plist during installation. When running through Xcode you&#39;ll need to set the value yourself or else AltStore won&#39;t resign (or even install) apps for the proper device.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;(AltStore only)&lt;/strong&gt; Change the value for &lt;code&gt;ALTServerID&lt;/code&gt; in the Info.plist to your AltServer&#39;s serverID. This is embedded by AltServer during installation to help AltStore distinguish between multiple AltServers on the same network, and you can find this by using a Bonjour browsing application and noting the serverID advertised by AltServer. This isn&#39;t strictly necessary, because if AltStore can&#39;t find the AltServer with the embedded serverID it still falls back to trying another AltServer. However, this will help in cases where there are multiple AltServers running (plus the error messages are more helpful).&lt;/li&gt; &#xA; &lt;li&gt;Build + run app! 🎉&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Due to the licensing of some dependencies used by AltStore, I have no choice but to distribute AltStore under the &lt;strong&gt;AGPLv3 license&lt;/strong&gt;. That being said, my goal for AltStore is for it to be an open source project &lt;em&gt;anyone&lt;/em&gt; can use without restrictions, so I explicitly give permission for anyone to use, modify, and distribute all &lt;em&gt;my&lt;/em&gt; original code for this project in any form, with or without attribution, without fear of legal consequences (dependencies remain under their original licenses, however).&lt;/p&gt; &#xA;&lt;h2&gt;Contact Me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email: &lt;a href=&#34;mailto:riley@altstore.io&#34;&gt;riley@altstore.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mastodon (Preferred): &lt;a href=&#34;https://mastodon.social/@rileytestut&#34;&gt;@rileytestut@mastodon.social&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter (Less active nowadays): &lt;a href=&#34;https://twitter.com/rileytestut&#34;&gt;@rileytestut&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Questions about AltStore in general? Make sure to read the FAQ at &lt;a href=&#34;https://altstore.io/faq/&#34;&gt;https://altstore.io/faq/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LoopKit/Loop</title>
    <updated>2023-03-26T02:03:39Z</updated>
    <id>tag:github.com,2023-03-26:/LoopKit/Loop</id>
    <link href="https://github.com/LoopKit/Loop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An automated insulin delivery app template for iOS, built on LoopKit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Loop for iOS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Loop/DerivedAssetsBase.xcassets/AppIcon.appiconset/Icon-Small-40%402x.png?raw=true&#34; alt=&#34;App Icon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/LoopKit/Loop&#34;&gt;&lt;img src=&#34;https://travis-ci.org/LoopKit/Loop.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://loop.zulipchat.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?sanitize=true&#34; alt=&#34;Join the chat at https://loop.zulipchat.com&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Loop is an app template for building an automated insulin delivery system. It is a stone resting on the boulders of work done by many others.&lt;/p&gt; &#xA;&lt;p&gt;Loop is built on top of &lt;a href=&#34;https://github.com/LoopKit/LoopKit&#34;&gt;LoopKit&lt;/a&gt;. LoopKit is a set of frameworks that provide data storage, retrieval, and calculation, as well as boilerplate view controllers used in Loop.&lt;/p&gt; &#xA;&lt;p&gt;Please understand that this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is highly experimental&lt;/li&gt; &#xA; &lt;li&gt;Is not approved for therapy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Graphs.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Graphs.png?raw=true&#34; alt=&#34;Screenshot of status screen&#34; width=&#34;170&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Bolus.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Bolus.png?raw=true&#34; alt=&#34;Screenshot of bolus screen&#34; width=&#34;170&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Notification%20Battery.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Notification%20Battery.png?raw=true&#34; alt=&#34;Screenshot of battery change notification&#34; width=&#34;170&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Notification%20Loop%20Failure.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Notification%20Loop%20Failure.png?raw=true&#34; alt=&#34;Screenshot of loop failure notification&#34; width=&#34;170&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Notification%20Bolus%20Failure.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Phone%20Notification%20Bolus%20Failure.png?raw=true&#34; alt=&#34;Screenshot of bolus failure notification&#34; width=&#34;170&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Complication.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Complication.png?raw=true&#34; alt=&#34;Screenshot of glucose complication on Apple Watch&#34; width=&#34;141&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Carb%20Entry.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Carb%20Entry.png?raw=true&#34; alt=&#34;Screenshot of carb entry on Apple Watch&#34; width=&#34;141&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Bolus.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Bolus.png?raw=true&#34; alt=&#34;Screenshot of bolus entry on Apple Watch&#34; width=&#34;141&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Menu.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Menu.png?raw=true&#34; alt=&#34;Screenshot of the app menu on Apple Watch&#34; width=&#34;141&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Notification%20Reservoir.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Notification%20Reservoir.png?raw=true&#34; alt=&#34;Screenshot of bolus failure notification on Apple Watch&#34; width=&#34;141&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Notification%20Bolus%20Failure.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/Documentation/Screenshots/Watch%20Notification%20Bolus%20Failure.png?raw=true&#34; alt=&#34;Screenshot of bolus failure notification on Apple Watch&#34; width=&#34;141&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Please visit the &lt;a href=&#34;https://loopkit.github.io/loopdocs/&#34;&gt;Loop Docs&lt;/a&gt; for installation, algorithm, and other details.&lt;/p&gt; &#xA;&lt;p&gt;For FAQs and other tips, refer to the &lt;a href=&#34;https://github.com/LoopKit/Loop/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Note: there is also a tab for the Wiki at the top of this page)&lt;/p&gt; &#xA;&lt;h1&gt;License and Code of Conduct&lt;/h1&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/LoopKit/Loop/dev/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>