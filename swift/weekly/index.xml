<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-06T02:02:36Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>satoshi0212/visionOS_30Days</title>
    <updated>2023-08-06T02:02:36Z</updated>
    <id>tag:github.com,2023-08-06:/satoshi0212/visionOS_30Days</id>
    <link href="https://github.com/satoshi0212/visionOS_30Days" rel="alternate"></link>
    <summary type="html">&lt;p&gt;visionOS 30 days challenge.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;visionOS_30Days&lt;/h1&gt; &#xA;&lt;p&gt;visionOS 30 days challenge.&lt;/p&gt; &#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/hashtag/30_days_visionOS&#34;&gt;#30_days_visionOS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Day&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Title&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Summary&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hello visionOS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/bb525528-a33d-4755-a7df-a55b90057ce3&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Show teapot&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/1e6cf607-5507-4b13-aa98-adc4b066e244&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Play HLS video&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/037d962b-e604-4e00-999d-e3c0110f840c&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Place box&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/e0bd40b3-8393-420f-a74b-656600ff4116&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Textured box&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/918a6fbf-5dff-4a3d-bf25-c02b85b636f8&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Handle drag and tap&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/85962e7f-69b1-4c3b-b791-f3e39c7ab6d7&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;7&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Post to Slack&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/3bd24016-2b92-453d-9a52-40cb309f198f&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Attachment and animation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/c2801c72-74ac-4462-ada4-2ec17d10df5b&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Portal&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/af3df936-7430-4a97-a43f-6793f926d283&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ImageBoard&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/4792702d-608d-40cb-a7b6-735a97ecd9a1&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Title animation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/d7165c1e-f6f8-4602-9b9b-bce9e8f40393&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2D Map&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/3a11780f-c780-4299-8463-483ac41d8a0c&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Place axis&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/f1312f0e-0907-464d-9b39-ef24d72c37bd&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Progressive and Full view&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/e622df6d-9dfe-4ede-bf8e-791b18c8ec63&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TabView&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/33171b51-9768-4398-a88a-0c256e37e01e&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARKitSession Placement&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/73cb93e0-3d25-4a86-add2-98379eb5b2c8&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ornament&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/71951b7e-7367-449e-8649-d50a8a57b157&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;18&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3D Text&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/37325e66-ce6e-498c-856a-5eab6e313687&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Speech Recognition&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/61fd7c05-ab67-4391-83a7-2c03e50e9a57&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Slack just fetch&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/23dab4b7-2661-4786-a0c3-13936bddca83&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Immersive look around&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/db0c6e64-6fa1-433a-9bf0-d1661a233531&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Immersive look around refined&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img width=&#34;600&#34; alt=&#34;&#34; src=&#34;https://github.com/satoshi0212/visionOS_30Days/assets/5768361/13b558d6-55eb-4aaf-b16d-963aaabc18c5&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>Mortennn/Dozer</title>
    <updated>2023-08-06T02:02:36Z</updated>
    <id>tag:github.com,2023-08-06:/Mortennn/Dozer</id>
    <link href="https://github.com/Mortennn/Dozer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hide menu bar icons on macOS&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200&#34; height=&#34;200&#34; margin-right=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/Mortennn/Dozer/master/Stuff/AppIcon.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Hide menu bar icons to give your Mac a cleaner look.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Mortennn/Dozer/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/download-latest-brightgreen.svg?sanitize=true&#34; alt=&#34;download&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://img.shields.io/badge/platform-macOS-lightgrey.svg&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-macOS-lightgrey.svg?sanitize=true&#34; alt=&#34;platform&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://img.shields.io/badge/requirements-macOS High Sierra+-ff69b4.svg&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/requirements-macOS High Sierra+-lightgrey.svg&#34; alt=&#34;systemrequirements&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/sindresorhus/swiftlint-sindre&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/SwiftLint-Sindre-hotpink.svg?sanitize=true&#34; alt=&#34;swiftlint&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MPL-2.0&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MPL%202.0-orange.svg?sanitize=true&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;100&#34; min-width=&#34;100&#34; src=&#34;https://github.com/Mortennn/Dozer/raw/master/Stuff/demo.gif&#34; alt=&#34;demo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.buymeacoffee.com/mortennn&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt; &#xA;&lt;h2&gt;⚙️ Install&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://formulae.brew.sh/cask/dozer&#34;&gt;Homebrew Cask&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install --cask dozer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Manual:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Mortennn/Dozer/releases/latest&#34;&gt;Download&lt;/a&gt;, open and drag the app to the Applications folder.&lt;/p&gt; &#xA;&lt;h2&gt;⚫️ Dozer Icons&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 or 3, numbered from right to left:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;this can be positioned anywhere you prefer, it is only a point of interaction&lt;/li&gt; &#xA; &lt;li&gt;this and everything to its left will be hidden/shown by clicking any Dozer icon&lt;/li&gt; &#xA; &lt;li&gt;(Optional) the &#34;remove&#34; icon and everything to its left will be hidden/shown by option-clicking any Dozer icon&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;👨‍💻 Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Move the icons you want to hide until clicked to the left of the second Dozer icon&lt;/li&gt; &#xA; &lt;li&gt;Move the icons you want to hide until option-clicked to the left of the third Dozer icon&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;N.B. hold command (&lt;code&gt;⌘&lt;/code&gt;) then drag to move the menu bar icons.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;👇 Interactions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Left-click one of the Dozer icons to hide/show the first group of menu bar icons&lt;/li&gt; &#xA; &lt;li&gt;Option-Left-click one of the Dozer icons to show the second group of menu bar icons (optional)&lt;/li&gt; &#xA; &lt;li&gt;Right-click one of the Dozer icons to open the settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- GIF is commented out until it is redone --&gt; &#xA;&lt;!-- **Checkout [this GIF](https://raw.githubusercontent.com/Mortennn/Dozer/master/Stuff/demo.gif) to watch Dozer in action.** --&gt; &#xA;&lt;h2&gt;📄 Requirements&lt;/h2&gt; &#xA;&lt;p&gt;macOS 10.13+&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>krzysztofzablocki/Sourcery</title>
    <updated>2023-08-06T02:02:36Z</updated>
    <id>tag:github.com,2023-08-06:/krzysztofzablocki/Sourcery</id>
    <link href="https://github.com/krzysztofzablocki/Sourcery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Meta-programming for Swift, stop writing boilerplate code.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/krzysztofzablocki/Sourcery&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/krzysztofzablocki/Sourcery.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![codecov](https://codecov.io/gh/krzysztofzablocki/Sourcery/branch/master/graph/badge.svg)](https://codecov.io/gh/krzysztofzablocki/Sourcery) --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/index.html&#34;&gt;&lt;img src=&#34;https://krzysztofzablocki.github.io/Sourcery/badge.svg?sanitize=true&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/Sourcery&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Sourcery.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/Sourcery&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/Sourcery.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/Sourcery&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/Sourcery.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;There is now a new powerful way to both write and integrate Sourcery functionality: Sourcery Pro provides a powerful Stencil editor and extends Xcode with the ability to handle live AST templates: &lt;a href=&#34;https://apps.apple.com/us/app/sourcery-pro/id1561780836?mt=12&#34;&gt;available on Mac App Store&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/1468993/114271090-f6c19200-9a0f-11eb-9bd8-d7bb15129eb2.mp4&#34;&gt;https://user-images.githubusercontent.com/1468993/114271090-f6c19200-9a0f-11eb-9bd8-d7bb15129eb2.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://merowing.info/sourcery-pro/&#34;&gt;Learn more about Sourcery Pro&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Sourcery/master/Resources/icon-128.png&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sourcery&lt;/strong&gt; is a code generator for Swift language, built on top of Apple&#39;s own SwiftSyntax. It extends the language abstractions to allow you to generate boilerplate code automatically.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s used in over 40,000 projects on both iOS and macOS and it powers some of the most popular and critically-acclaimed apps you have used (including Airbnb, Bumble, New York Times). Its massive community adoption was one of the factors that pushed Apple to implement derived Equality and automatic Codable conformance. Sourcery is maintained by a growing community of &lt;a href=&#34;https://github.com/krzysztofzablocki/Sourcery/graphs/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Try &lt;strong&gt;Sourcery&lt;/strong&gt; for your next project or add it to an existing one -- you&#39;ll save a lot of time and be happy you did!&lt;/p&gt; &#xA;&lt;h2&gt;TL;DR&lt;/h2&gt; &#xA;&lt;p&gt;Sourcery allows you to get rid of repetitive code and create better architecture and developer workflows. An example might be implementing &lt;code&gt;Mocks&lt;/code&gt; for all your protocols, without Sourcery you will need to write &lt;strong&gt;hundreds lines of code per each protocol&lt;/strong&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class MyProtocolMock: MyProtocol {&#xA;&#xA;    //MARK: - sayHelloWith&#xA;    var sayHelloWithNameCallsCount = 0&#xA;    var sayHelloWithNameCalled: Bool {&#xA;        return sayHelloWithNameCallsCount &amp;gt; 0&#xA;    }&#xA;    var sayHelloWithNameReceivedName: String?&#xA;    var sayHelloWithNameReceivedInvocations: [String] = []&#xA;    var sayHelloWithNameClosure: ((String) -&amp;gt; Void)?&#xA;&#xA;    func sayHelloWith(name: String) {&#xA;        sayHelloWithNameCallsCount += 1&#xA;        sayHelloWithNameReceivedName = name&#xA;        sayHelloWithNameReceivedInvocations.append(name)&#xA;        sayHelloWithNameClosure?(name)&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and with Sourcery ?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;extension MyProtocol: AutoMockable {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sourcery removes the need to write any of the mocks code, how many protocols do you have in your project? Imagine how much time you&#39;ll save, using Sourcery will also make every single mock consistent and if you refactor or add properties, the mock code will be automatically updated for you, eliminating possible human errors.&lt;/p&gt; &#xA;&lt;p&gt;Sourcery can be applied to arbitrary problems across your codebase, if you can describe an algorithm to another human, you can automate it using Sourcery.&lt;/p&gt; &#xA;&lt;p&gt;Most common uses are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/equatable.html&#34;&gt;Equality&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/hashable.html&#34;&gt;Hashing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/enum-cases.html&#34;&gt;Enum cases &amp;amp; Counts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/lenses.html&#34;&gt;Lenses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/mocks.html&#34;&gt;Mocks &amp;amp; Stubs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/linuxmain.html&#34;&gt;LinuxMain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/decorator.html&#34;&gt;Decorators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/codable.html&#34;&gt;Persistence and advanced Codable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/diffable.html&#34;&gt;Property level diffing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;But how about more specific use-cases, like automatically generating all the UI for your app &lt;code&gt;BetaSetting&lt;/code&gt;? &lt;a href=&#34;https://github.com/krzysztofzablocki/AutomaticSettings&#34;&gt;you can use Sourcery for that too&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you start writing your own template and learn the power of Sourcery you won&#39;t be able to live without it.&lt;/p&gt; &#xA;&lt;h2&gt;How To Get Started&lt;/h2&gt; &#xA;&lt;p&gt;There are plenty of tutorials for different uses of Sourcery, and you can always ask for help in our &lt;a href=&#34;https://forums.swift.org/c/related-projects/sourcery&#34;&gt;Swift Forum Category&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.caseyliss.com/2017/3/31/the-magic-of-sourcery&#34;&gt;The Magic of Sourcery&lt;/a&gt; is a great starting tutorial&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.raywenderlich.com/158803/sourcery-tutorial-generating-swift-code-ios&#34;&gt;Generating Swift Code for iOS&lt;/a&gt; deals with JSON handling code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://atomicrobot.io/blog/sourcery/&#34;&gt;How To Automate Swift Boilerplate with Sourcery&lt;/a&gt; generates conversions to dictionaries&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://littlebitesofcocoa.com/318-codable-enums&#34;&gt;Codable Enums&lt;/a&gt; implements Codable support for Enumerations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/krzysztofzablocki/SourceryWorkshops&#34;&gt;Sourcery Workshops&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Mocking Intro &amp;amp; Getting Started Video&lt;/h3&gt; &#xA;&lt;p&gt;You can also watch this quick getting started and intro to mocking video by Inside iOS Dev: &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/-ZbBNuttlt4?t=214&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Sourcery/master/Resources/Inside-iOS-Dev-Sourcery-Intro-To-Mocking-Video-Thumbnail.png&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Binary form&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Download the latest release with the prebuilt binary from &lt;a href=&#34;https://github.com/krzysztofzablocki/Sourcery/releases/latest&#34;&gt;release tab&lt;/a&gt;. Unzip the archive into the desired destination and run &lt;code&gt;bin/sourcery&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;brew install sourcery&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Add &lt;code&gt;pod &#39;Sourcery&#39;&lt;/code&gt; to your &lt;code&gt;Podfile&lt;/code&gt; and run &lt;code&gt;pod update Sourcery&lt;/code&gt;. This will download the latest release binary and will put it in your project&#39;s CocoaPods path so you will run it with &lt;code&gt;$PODS_ROOT/Sourcery/bin/sourcery&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If you only want to install the &lt;code&gt;sourcery&lt;/code&gt; binary, you may want to use the &lt;code&gt;CLI-Only&lt;/code&gt; subspec: &lt;code&gt;pod &#39;Sourcery&#39;, :subspecs =&amp;gt; [&#39;CLI-Only&#39;]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/yonaskolb/Mint&#34;&gt;Mint&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;mint run krzysztofzablocki/Sourcery&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Building from Source&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Download the latest release source code from &lt;a href=&#34;https://github.com/krzysztofzablocki/Sourcery/releases/latest&#34;&gt;the release tab&lt;/a&gt; or clone the repository and build Sourcery manually.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Building with Swift Package Manager&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;swift build -c release&lt;/code&gt; in the root folder and then copy &lt;code&gt;.build/release/sourcery&lt;/code&gt; to your desired destination.&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;Note: JS templates are not supported when building with SPM yet.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Building with Xcode&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;xcodebuild -scheme sourcery -destination generic/platform=macOS -archivePath sourcery.xcarchive archive&lt;/code&gt; and export the binary from the archive.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;SPM (for plugin use only)&lt;/em&gt; Add the package dependency to your &lt;code&gt;Package.swift&lt;/code&gt; manifest from version &lt;code&gt;1.8.3&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;.package(url: &#34;https://github.com/krzysztofzablocki/Sourcery.git&#34;, from: &#34;1.8.3&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://pre-commit.com/&#34;&gt;pre-commit&lt;/a&gt;&lt;/em&gt; Add the dependency to &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;- repo: https://github.com/krzysztofzablocki/Sourcery&#xA;  rev: 1.9.1&#xA;  hooks:&#xA;  - id: sourcery&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Full documentation for the latest release is available &lt;a href=&#34;http://merowing.info/Sourcery/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Running the executable&lt;/h3&gt; &#xA;&lt;p&gt;Sourcery is a command line tool; you can either run it manually or in a custom build phase using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./bin/sourcery --sources &amp;lt;sources path&amp;gt; --templates &amp;lt;templates path&amp;gt; --output &amp;lt;output path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: this command differs depending on how you installed Sourcery (see &lt;a href=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Sourcery/master/#installation&#34;&gt;Installation&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Swift Package command&lt;/h3&gt; &#xA;&lt;p&gt;Sourcery can now be used as a Swift package command plugin. In order to do this, the package must be added as a dependency to your Swift package or Xcode project (see &lt;a href=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Sourcery/master/#installation&#34;&gt;Installation&lt;/a&gt; above).&lt;/p&gt; &#xA;&lt;p&gt;To provide a configuration for the plugin to use, place a &lt;code&gt;.sourcery.yml&lt;/code&gt; file at the root of the target&#39;s directory (in the sources folder rather than the root of the package).&lt;/p&gt; &#xA;&lt;h4&gt;Running from the command line&lt;/h4&gt; &#xA;&lt;p&gt;To verify the plugin can be found by SwiftPM, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ swift package plugin --list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the code generator, you need to allow changes to the project with the &lt;code&gt;--allow-writing-to-package-directory&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ swift package --allow-writing-to-package-directory sourcery-command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running in Xcode&lt;/h4&gt; &#xA;&lt;p&gt;Inside a project/package that uses this command plugin, right-click the project and select &#34;SourceryCommand&#34; from the &#34;SourceryPlugins&#34; menu group.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ Note that this is only available from Xcode 14 onwards.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Command line options&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--sources&lt;/code&gt; - Path to a source swift files or directories. You can provide multiple paths using multiple &lt;code&gt;--sources&lt;/code&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--templates&lt;/code&gt; - Path to templates. File or Directory. You can provide multiple paths using multiple &lt;code&gt;--templates&lt;/code&gt; options.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--force-parse&lt;/code&gt; - File extensions of Sourcery generated file you want to parse. You can provide multiple extension using multiple &lt;code&gt;--force-parse&lt;/code&gt; options. (i.e. &lt;code&gt;file.toparse.swift&lt;/code&gt; will be parsed even if generated by Sourcery if &lt;code&gt;--force-parse toparse&lt;/code&gt;). Useful when trying to implement a multiple phases generation. &lt;code&gt;--force-parse&lt;/code&gt; can also be used to process within a sourcery annotation. For example to process code within &lt;code&gt;sourcery:inline:auto:Type.AutoCodable&lt;/code&gt; annotation you can use &lt;code&gt;--force-parse AutoCodable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--output&lt;/code&gt; [default: current path] - Path to output. File or Directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--config&lt;/code&gt; [default: current path] - Path to config file. File or Directory. See &lt;a href=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Sourcery/master/#configuration-file&#34;&gt;Configuration file&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--args&lt;/code&gt; - Additional arguments to pass to templates. Each argument can have an explicit value or will have implicit &lt;code&gt;true&lt;/code&gt; value. Arguments should be separated with &lt;code&gt;,&lt;/code&gt; without spaces (i.e. &lt;code&gt;--args arg1=value,arg2&lt;/code&gt;). Arguments are accessible in templates via &lt;code&gt;argument.name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--watch&lt;/code&gt; [default: false] - Watch both code and template folders for changes and regenerate automatically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--verbose&lt;/code&gt; [default: false] - Turn on verbose logging&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--quiet&lt;/code&gt; [default: false] - Turn off any logging, only emit errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--disableCache&lt;/code&gt; [default: false] - Turn off caching of parsed data&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--prune&lt;/code&gt; [default: false] - Prune empty generated files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--version&lt;/code&gt; - Display the current version of Sourcery&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--help&lt;/code&gt; - Display help information&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--cacheBasePath&lt;/code&gt; - Base path to the cache directory. Can be overriden by the config file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--buildPath&lt;/code&gt; - Path to directory used when building from .swifttemplate files. This defaults to system temp directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configuration file&lt;/h3&gt; &#xA;&lt;p&gt;Instead of CLI arguments, you can use a &lt;code&gt;.sourcery.yml&lt;/code&gt; configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sources:&#xA;  - &amp;lt;sources path&amp;gt;&#xA;  - &amp;lt;sources path&amp;gt;&#xA;templates:&#xA;  - &amp;lt;templates path&amp;gt;&#xA;  - &amp;lt;templates path&amp;gt;&#xA;forceParse:&#xA;  - &amp;lt;string value&amp;gt;&#xA;  - &amp;lt;string value&amp;gt;&#xA;output:&#xA;  &amp;lt;output path&amp;gt;&#xA;args:&#xA;  &amp;lt;name&amp;gt;: &amp;lt;value&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read more about this configuration file &lt;a href=&#34;https://krzysztofzablocki.github.io/Sourcery/usage.html#configuration-file&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you get an unverified developer warning when using binary zip distribution try: &lt;code&gt;xattr -dr com.apple.quarantine Sourcery-1.1.1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to Sourcery are welcomed and encouraged!&lt;/p&gt; &#xA;&lt;p&gt;It is easy to get involved. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Sourcery/master/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/krzysztofzablocki/Sourcery/graphs/contributors&#34;&gt;A list of contributors is available through GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To clarify what is expected of our community, Sourcery has adopted the code of conduct defined by the Contributor Covenant. This document is used across many open source communities, and articulates my values well. For more, see the &lt;a href=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Sourcery/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsoring&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to support Sourcery development you can do so through &lt;a href=&#34;https://github.com/sponsors/krzysztofzablocki&#34;&gt;GitHub Sponsors&lt;/a&gt; or &lt;a href=&#34;https://opencollective.com/sourcery&#34;&gt;Open Collective&lt;/a&gt;, it&#39;s highly appreciated 🙇‍&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Sourcery is available under the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Sourcery/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Attributions&lt;/h2&gt; &#xA;&lt;p&gt;This tool is powered by&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kylef/Stencil&#34;&gt;Stencil&lt;/a&gt; and few other libs by &lt;a href=&#34;https://github.com/kylef&#34;&gt;Kyle Fuller&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thank you! to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://twitter.com/faktory&#34;&gt;Mariusz Ostrowski&lt;/a&gt; for creating the logo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/artsy/eidolon&#34;&gt;Artsy Eidolon&lt;/a&gt; team, because we use their codebase as a stub data for performance testing the parser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AliSoftware&#34;&gt;Olivier Halligon&lt;/a&gt; for showing me his setup scripts for CLI tools which are powering our rakefile.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jpsim&#34;&gt;JP Simard&lt;/a&gt; for creating &lt;a href=&#34;https://github.com/jpsim/SourceKitten&#34;&gt;SourceKitten&lt;/a&gt; that originally powered Sourcery and was instrumental in making this project happen.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Libraries / Tools&lt;/h2&gt; &#xA;&lt;p&gt;If you want to generate code for asset related data like .xib, .storyboards etc. use &lt;a href=&#34;https://github.com/AliSoftware/SwiftGen&#34;&gt;SwiftGen&lt;/a&gt;. SwiftGen and Sourcery are complementary tools.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to check my other libraries and tools, especially:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/krzysztofzablocki/KZPlayground&#34;&gt;KZPlayground&lt;/a&gt; - Powerful playgrounds for Swift and Objective-C&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/krzysztofzablocki/KZFileWatchers&#34;&gt;KZFileWatchers&lt;/a&gt; - Daemon for observing local and remote file changes, used for building other developer tools (Sourcery uses it)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;http://twitter.com/merowing_&#34;&gt;follow me on Twitter&lt;/a&gt; for news/updates about other projects I am creating.&lt;/p&gt;</summary>
  </entry>
</feed>