<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-22T02:03:23Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pointfreeco/swiftui-navigation</title>
    <updated>2023-01-22T02:03:23Z</updated>
    <id>tag:github.com,2023-01-22:/pointfreeco/swiftui-navigation</id>
    <link href="https://github.com/pointfreeco/swiftui-navigation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tools for making SwiftUI navigation simpler, more ergonomic and more precise.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SwiftUI Navigation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pointfreeco/swiftui-navigation/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/pointfreeco/swiftui-navigation/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swiftui-navigation&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswiftui-navigation%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swiftui-navigation&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswiftui-navigation%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tools for making SwiftUI navigation simpler, more ergonomic and more precise.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/#learn-more&#34;&gt;Learn more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;SwiftUI comes with many forms of navigation (tabs, alerts, dialogs, modal sheets, popovers, navigation links, and more), and each comes with a few ways to construct them. These ways roughly fall in two categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&#34;Fire-and-forget&#34;: These are initializers and methods that do not take binding arguments, which means SwiftUI fully manages navigation state internally. This makes it easy to get something on the screen quickly, but you also have no programmatic control over the navigation. Examples of this are the initializers on &lt;a href=&#34;https://developer.apple.com/documentation/swiftui/tabview/init(content:)&#34;&gt;&lt;code&gt;TabView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://developer.apple.com/documentation/swiftui/navigationlink/init(destination&lt;span&gt;üè∑&lt;/span&gt;)-27n7s&#34;&gt;&lt;code&gt;NavigationLink&lt;/code&gt;&lt;/a&gt; that do not take a binding.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&#34;State-driven&#34;: Most other initializers and methods do take a binding, which means you can mutate state in your domain to tell SwiftUI when it should activate or deactivate navigation. Using these APIs is more complicated than the &#34;fire-and-forget&#34; style, but doing so instantly gives you the ability to deep-link into any state of your application by just constructing a piece of data, handing it to a SwiftUI view, and letting SwiftUI handle the rest.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Navigation that is &#34;state-driven&#34; is the more powerful form of navigation, albeit slightly more complicated, but unfortunately SwiftUI does not ship with all the tools necessary to model our domains as concisely as possible and use these navigation APIs.&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately, SwiftUI does not ship with all of the tools necessary to model our domains with enums and make use of navigation APIs. This library bridges that gap by providing APIs that allow you to model your navigation destinations as an enum, and then drive navigation by a binding to that enum.&lt;/p&gt; &#xA;&lt;p&gt;Explore all of the tools this library comes with by checking out the &lt;a href=&#34;https://pointfreeco.github.io/swiftui-navigation/main/documentation/swiftuinavigation/&#34;&gt;documentation&lt;/a&gt;, and reading these articles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swiftui-navigation/main/documentation/swiftuinavigation/whatisnavigation&#34;&gt;What is navigation?&lt;/a&gt;&lt;/strong&gt;: Learn how one can think of navigation as a domain modeling problem, and how that leads to the creation of concise and testable APIs for navigation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swiftui-navigation/main/documentation/swiftuinavigation/navigation&#34;&gt;Navigation links and destinations&lt;/a&gt;&lt;/strong&gt;: Learn how to drive navigation in NavigationView and NavigationStack in a concise and testable manner.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swiftui-navigation/main/documentation/swiftuinavigation/sheetspopoverscovers&#34;&gt;Sheets, popovers, and covers&lt;/a&gt;&lt;/strong&gt;: Learn how to present sheets, popovers and covers in a concise and testable manner.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swiftui-navigation/main/documentation/swiftuinavigation/alertsdialogs&#34;&gt;Alerts and dialogs&lt;/a&gt;&lt;/strong&gt;: Learn how to present alerts and confirmation dialogs in a concise and testable manner.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swiftui-navigation/main/documentation/swiftuinavigation/bindings&#34;&gt;Bindings&lt;/a&gt;&lt;/strong&gt;: Learn how to manage certain view state, such as &lt;code&gt;@FocusState&lt;/code&gt; directly in your observable object.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;This repo comes with lots of examples to demonstrate how to solve common and complex navigation problems with the library. Check out &lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/Examples&#34;&gt;this&lt;/a&gt; directory to see them all, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/Examples/CaseStudies&#34;&gt;Case Studies&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Alerts &amp;amp; Confirmation Dialogs&lt;/li&gt; &#xA;   &lt;li&gt;Sheets &amp;amp; Popovers &amp;amp; Fullscreen Covers&lt;/li&gt; &#xA;   &lt;li&gt;Navigation Links&lt;/li&gt; &#xA;   &lt;li&gt;Routing&lt;/li&gt; &#xA;   &lt;li&gt;Custom Components&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/Examples/Inventory&#34;&gt;Inventory&lt;/a&gt;: A multi-screen application with lists, sheets, popovers and alerts, all driven by state and deep-linkable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;SwiftUI Navigation&#39;s tools were motivated and designed over the course of many episodes on &lt;a href=&#34;https://www.pointfree.co&#34;&gt;Point-Free&lt;/a&gt;, a video series exploring functional programming and the Swift language, hosted by &lt;a href=&#34;https://twitter.com/mbrandonw&#34;&gt;Brandon Williams&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/stephencelis&#34;&gt;Stephen Celis&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can watch all of the episodes &lt;a href=&#34;https://www.pointfree.co/collections/swiftui/navigation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.pointfree.co/collections/swiftui/navigation&#34;&gt; &lt;img alt=&#34;video poster image&#34; src=&#34;https://d3rccdn33rt8ze.cloudfront.net/episodes/0211.jpeg&#34; width=&#34;600&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can add SwiftUI Navigation to an Xcode project by adding it as a package dependency.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/pointfreeco/swiftui-navigation&#34;&gt;https://github.com/pointfreeco/swiftui-navigation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you want to use SwiftUI Navigation in a &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;SwiftPM&lt;/a&gt; project, it&#39;s as simple as adding it to a &lt;code&gt;dependencies&lt;/code&gt; clause in your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;  .package(url: &#34;https://github.com/pointfreeco/swiftui-navigation&#34;, from: &#34;0.4.5&#34;)&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The latest documentation for the SwiftUI Navigation APIs is available &lt;a href=&#34;http://pointfreeco.github.io/swiftui-navigation/main/documentation/swiftuinavigation/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is released under the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swiftui-navigation/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>straight-tamago/FileSwitcherX</title>
    <updated>2023-01-22T02:03:23Z</updated>
    <id>tag:github.com,2023-01-22:/straight-tamago/FileSwitcherX</id>
    <link href="https://github.com/straight-tamago/FileSwitcherX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CVE-2022-46689&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FileSwitcherX&lt;/h1&gt; &#xA;&lt;p&gt;iOS 14 - 16.1.2&lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TrollStore&lt;/li&gt; &#xA; &lt;li&gt;AltStore&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhuowei/MacDirtyCow&#34;&gt;https://github.com/zhuowei/MacDirtyCow&lt;/a&gt; (MacDirtyCow exploit)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/haxi0/TrollLock-Reborn&#34;&gt;https://github.com/haxi0/TrollLock-Reborn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/i41nbeer&#34;&gt;https://twitter.com/i41nbeer&lt;/a&gt; (CVE-2022-46689)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/straight_tamago&#34;&gt;https://twitter.com/straight_tamago&lt;/a&gt; (FileSwitcherX)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pointfreeco/swift-dependencies</title>
    <updated>2023-01-22T02:03:23Z</updated>
    <id>tag:github.com,2023-01-22:/pointfreeco/swift-dependencies</id>
    <link href="https://github.com/pointfreeco/swift-dependencies" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A dependency management library inspired by SwiftUI&#39;s &#34;environment.&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;A dependency management library inspired by SwiftUI&#39;s &#34;environment.&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pointfreeco/swift-dependencies/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/pointfreeco/swift-dependencies/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswift-dependencies%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswift-dependencies%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#learn-more&#34;&gt;Learn More&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;This library was motivated and designed over the course of many episodes on &lt;a href=&#34;https://www.pointfree.co&#34;&gt;Point-Free&lt;/a&gt;, a video series exploring functional programming and the Swift language, hosted by &lt;a href=&#34;https://twitter.com/mbrandonw&#34;&gt;Brandon Williams&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/stephencelis&#34;&gt;Stephen Celis&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.pointfree.co&#34;&gt; &lt;img alt=&#34;video poster image&#34; src=&#34;https://d3rccdn33rt8ze.cloudfront.net/episodes/0209.jpeg&#34; width=&#34;600&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Dependencies are the types and functions in your application that need to interact with outside systems that you do not control. Classic examples of this are API clients that make network requests to servers, but also seemingly innocuous things such as &lt;code&gt;UUID&lt;/code&gt; and &lt;code&gt;Date&lt;/code&gt; initializers, file access, user defaults, and even clocks and timers, can all be thought of as dependencies.&lt;/p&gt; &#xA;&lt;p&gt;You can get really far in application development without ever thinking about dependency management (or, as some like to call it, &#34;dependency injection‚Äù), but eventually uncontrolled dependencies can cause many problems in your code base and development cycle:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Uncontrolled dependencies make it &lt;strong&gt;difficult to write fast, deterministic tests&lt;/strong&gt; because you are susceptible to the vagaries of the outside world, such as file systems, network connectivity, internet speed, server uptime, and more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Many dependencies &lt;strong&gt;do not work well in SwiftUI previews&lt;/strong&gt;, such as location managers and speech recognizers, and some &lt;strong&gt;do not work even in simulators&lt;/strong&gt;, such as motion managers, and more. This prevents you from being able to easily iterate on the design of features if you make use of those frameworks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dependencies that interact with 3rd party, non-Apple libraries (such as Firebase, web socket libraries, network libraries, etc.) tend to be heavyweight and take a &lt;strong&gt;long time to compile&lt;/strong&gt;. This can slow down your development cycle.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For these reasons, and a lot more, it is highly encouraged for you to take control of your dependencies rather than letting them control you.&lt;/p&gt; &#xA;&lt;p&gt;But, controlling a dependency is only the beginning. Once you have controlled your dependencies, you are faced with a whole set of new problems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;How can you &lt;strong&gt;propagate dependencies&lt;/strong&gt; throughout your entire application in a way that is more ergonomic than explicitly passing them around everywhere, but safer than having a global dependency?&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How can you &lt;strong&gt;override dependencies&lt;/strong&gt; for just one portion of your application? This can be handy for overriding dependencies for tests and SwiftUI previews, as well as specific user flows such as onboarding experiences.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How can you be sure you &lt;strong&gt;overrode &lt;em&gt;all&lt;/em&gt; dependencies&lt;/strong&gt; a feature uses in tests? It would be incorrect for a test to mock out some dependencies but leave others as interacting with the outside world.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This library addresses all of the points above, and much, &lt;em&gt;much&lt;/em&gt; more.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;The library allows you to register your own dependencies, but it also comes with many controllable dependencies out of the box (see &lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/dependencyvalues&#34;&gt;&lt;code&gt;DependencyValues&lt;/code&gt;&lt;/a&gt; for a full list), and there is a good chance you can immediately make use of one. If you are using &lt;code&gt;Date()&lt;/code&gt;, &lt;code&gt;UUID()&lt;/code&gt;, &lt;code&gt;Task.sleep&lt;/code&gt;, or Combine schedulers directly in your feature&#39;s logic, you can already start to use this library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;final class FeatureModel: ObservableObject {&#xA;  @Dependency(\.continuousClock) var clock  // Controllable way to sleep a task&#xA;  @Dependency(\.date.now) var now           // Controllable way to ask for current date&#xA;  @Dependency(\.mainQueue) var mainQueue    // Controllable scheduling on main queue&#xA;  @Dependency(\.uuid) var uuid              // Controllable UUID creation&#xA;&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once your dependencies are declared, rather than reaching out to the &lt;code&gt;Date()&lt;/code&gt;, &lt;code&gt;UUID()&lt;/code&gt;, etc., directly, you can use the dependency that is defined on your feature&#39;s model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;final class FeatureModel: ObservableObject {&#xA;  // ...&#xA;&#xA;  func addButtonTapped() async throws {&#xA;    try await self.clock.sleep(for: .seconds(1))  // üëà Don&#39;t use &#39;Task.sleep&#39;&#xA;    self.items.append(&#xA;      Item(&#xA;        id: self.uuid(),  // üëà Don&#39;t use &#39;UUID()&#39;&#xA;        name: &#34;&#34;,&#xA;        createdAt: self.now  // üëà Don&#39;t use &#39;Date()&#39;&#xA;      )&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That is all it takes to start using controllable dependencies in your features. With that little bit of upfront work done you can start to take advantage of the library&#39;s powers.&lt;/p&gt; &#xA;&lt;p&gt;For example, you can easily control these dependencies in tests. If you want to test the logic inside the &lt;code&gt;addButtonTapped&lt;/code&gt; method, you can use the &lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/withdependencies(_:operation:)-4uz6m&#34;&gt;&lt;code&gt;withDependencies&lt;/code&gt;&lt;/a&gt; function to override any dependencies for the scope of one single test. It&#39;s as easy as 1-2-3:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func testAdd() async throws {&#xA;  let model = withDependencies {&#xA;    // 1Ô∏è‚É£ Override any dependencies that your feature uses.&#xA;    $0.clock = ImmediateClock()&#xA;    $0.date.now = Date(timeIntervalSinceReferenceDate: 1234567890)&#xA;    $0.uuid = .incrementing&#xA;  } operation: {&#xA;    // 2Ô∏è‚É£ Construct the feature&#39;s model&#xA;    FeatureModel()&#xA;  }&#xA;&#xA;  // 3Ô∏è‚É£ The model now executes in a controlled environment of dependencies,&#xA;  //    and so we can make assertions against its behavior.&#xA;  try await model.addButtonTapped()&#xA;  XCTAssertEqual(&#xA;    model.items,&#xA;    [&#xA;      Item(&#xA;        id: UUID(uuidString: &#34;00000000-0000-0000-0000-000000000000&#34;)!,&#xA;        name: &#34;&#34;,&#xA;        createdAt: Date(timeIntervalSinceReferenceDate: 1234567890)&#xA;      )&#xA;    ]&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we controlled the &lt;code&gt;date&lt;/code&gt; dependency to always return the same date, and we controlled the &lt;code&gt;uuid&lt;/code&gt; dependency to return an auto-incrementing UUID every time it is invoked, and we even controlled the &lt;code&gt;clock&lt;/code&gt; dependency using an &lt;a href=&#34;https://pointfreeco.github.io/swift-clocks/main/documentation/clocks/immediateclock&#34;&gt;&lt;code&gt;ImmediateClock&lt;/code&gt;&lt;/a&gt; to squash all of time into a single instant. If we did not control these dependencies this test would be very difficult to write since there is no way to accurately predict what will be returned by &lt;code&gt;Date()&lt;/code&gt; and &lt;code&gt;UUID()&lt;/code&gt;, and we&#39;d have to wait for real world time to pass, making the test slow.&lt;/p&gt; &#xA;&lt;p&gt;But, controllable dependencies aren&#39;t only useful for tests. They can also be used in Xcode previews. Suppose the feature above makes use of a clock to sleep for an amount of time before something happens in the view. If you don&#39;t want to literally wait for time to pass in order to see how the view changes, you can override the clock dependency to be an &#34;immediate&#34; clock using the &lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/withdependencies(_:operation:)-4uz6m&#34;&gt;&lt;code&gt;withDependencies&lt;/code&gt;&lt;/a&gt; helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct Feature_Previews: PreviewProvider {&#xA;  static var previews: some View {&#xA;    FeatureView(&#xA;      model: withDependencies {&#xA;        $0.clock = ImmediateClock()&#xA;      } operation: {&#xA;        FeatureModel()&#xA;      }&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will make it so that the preview uses an immediate clock when run, but when running in a simulator or on device it will still use a live &lt;code&gt;ContinuousClock&lt;/code&gt;. This makes it possible to override dependencies just for previews without affecting how your app will run in production.&lt;/p&gt; &#xA;&lt;p&gt;That is the basics to getting started with using the library, but there is still a lot more you can do. You can learn more in depth about the library by exploring the &lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/&#34;&gt;documentation&lt;/a&gt; and articles:&lt;/p&gt; &#xA;&lt;h4&gt;Getting started&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/quickstart&#34;&gt;Quick start&lt;/a&gt; (Same as the information above)&lt;/strong&gt;: Learn the basics of getting started with the library before diving deep into all of its features.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/whataredependencies&#34;&gt;What are dependencies?&lt;/a&gt;&lt;/strong&gt;: Learn what dependencies are, how they complicate your code, and why you want to control them.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Essentials&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/usingdependencies&#34;&gt;Using dependencies&lt;/a&gt;&lt;/strong&gt;: Learn how to use the dependencies that are registered with the library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/registeringdependencies&#34;&gt;Registering dependencies&lt;/a&gt;&lt;/strong&gt;: Learn how to register your own dependencies with the library so that they immediately become available from any part of your code base.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/livepreviewtest&#34;&gt;Live, preview, and test dependencies&lt;/a&gt;&lt;/strong&gt;: Learn how to provide different implementations of your dependencies for use in the live application, as well as in Xcode previews, and even in tests.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Advanced&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/designingdependencies&#34;&gt;Designing dependencies&lt;/a&gt;&lt;/strong&gt;: Learn techniques on designing your dependencies so that they are most flexible for injecting into features and overriding for tests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/overridingdependencies&#34;&gt;Overriding dependencies&lt;/a&gt;&lt;/strong&gt;: Learn how dependencies can be changed at runtime so that certain parts of your application can use different dependencies.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/lifetimes&#34;&gt;Dependency lifetimes&lt;/a&gt;&lt;/strong&gt;: Learn about the lifetimes of dependencies, how to prolong the lifetime of a dependency, and how dependencies are inherited.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/singleentrypointsystems&#34;&gt;Single entry point systems&lt;/a&gt;&lt;/strong&gt;: Learn about &#34;single entry point&#34; systems, and why they are best suited for this dependencies library, although it is possible to use the library with non-single entry point systems.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Miscellaneous&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/concurrencysupport&#34;&gt;Concurrency support&lt;/a&gt;&lt;/strong&gt;: Learn about the concurrency tools that come with the library that make writing tests and implementing dependencies easy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;We rebuilt Apple&#39;s &lt;a href=&#34;https://developer.apple.com/tutorials/app-dev-training/getting-started-with-scrumdinger&#34;&gt;Scrumdinger&lt;/a&gt; demo application using modern, best practices for SwiftUI development, including using this library to control dependencies on file system access, timers and speech recognition APIs. That &lt;a href=&#34;https://github.com/pointfreeco/swiftui-navigation/tree/main/Examples/Standups&#34;&gt;demo can be found&lt;/a&gt; in our &lt;a href=&#34;http://github.com/pointfreeco/swiftui-navigation&#34;&gt;SwiftUINavigation&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The latest documentation for the Dependencies APIs is available &lt;a href=&#34;https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can add Dependencies to an Xcode project by adding it to your project as a package.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/pointfreeco/swift-dependencies&#34;&gt;https://github.com/pointfreeco/swift-dependencies&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you want to use Dependencies in a &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;SwiftPM&lt;/a&gt; project, it&#39;s as simple as adding it to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;  .package(url: &#34;https://github.com/pointfreeco/swift-dependencies&#34;, from: &#34;0.1.0&#34;)&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then adding the product to any target that needs access to the library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.product(name: &#34;Dependencies&#34;, package: &#34;swift-dependencies&#34;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;This library controls a number of dependencies out of the box, but is also open to extension. The following projects all build on top of Dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tgrapperon/swift-dependencies-additions&#34;&gt;Dependencies Additions&lt;/a&gt;: A companion library that provides higher-level dependencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;There are many other dependency injection libraries in the Swift community. Each has its own set of priorities and trade-offs that differ from Dependencies. Here are a few well-known examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/Cleanse&#34;&gt;Cleanse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hmlongco/Factory&#34;&gt;Factory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/needle&#34;&gt;Needle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Swinject/Swinject&#34;&gt;Swinject&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is released under the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>