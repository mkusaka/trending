<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-30T01:47:50Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>swiftlang/swift-package-manager</title>
    <updated>2024-06-30T01:47:50Z</updated>
    <id>tag:github.com,2024-06-30:/swiftlang/swift-package-manager</id>
    <link href="https://github.com/swiftlang/swift-package-manager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Package Manager for the Swift Programming Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Package Manager Project&lt;/h1&gt; &#xA;&lt;p&gt;The Swift Package Manager is a tool for managing distribution of source code, aimed at making it easy to share your code and reuse others’ code. The tool directly addresses the challenges of compiling and linking Swift packages, managing dependencies, versioning, and supporting flexible distribution and collaboration models.&lt;/p&gt; &#xA;&lt;p&gt;We’ve designed the system to make it easy to share packages on services like GitHub, but packages are also great for private personal development, sharing code within a team, or at any other granularity.&lt;/p&gt; &#xA;&lt;p&gt;Swift Package Manager includes a build system that can build for macOS and Linux. Starting with Xcode 11, Xcode integrates with SwiftPM to provide support for including packages in iOS, macOS, watchOS, and tvOS applications.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/swiftlang/sourcekit-lsp&#34;&gt;SourceKit-LSP&lt;/a&gt; project leverages libSwiftPM and provides &lt;a href=&#34;https://langserver.org/&#34;&gt;Language Server Protocol&lt;/a&gt; implementation for editors that support LSP.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#system-requirements&#34;&gt;System Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#reporting-issues&#34;&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please use &lt;a href=&#34;https://swift.org/getting-started/#using-the-package-manager&#34;&gt;this guide&lt;/a&gt; for learning package manager basics.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For Quick Help use the &lt;code&gt;swift package --help&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;For documentation on using Swift Package Manager, creating packages, and more, see the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/Documentation/README.md&#34;&gt;documentation directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For documentation on developing the Swift Package Manager itself, see the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For detailed documentation on the package manifest API, see &lt;a href=&#34;https://docs.swift.org/package-manager/PackageDescription/index.html&#34;&gt;PackageDescription API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For release notes with information about changes between versions, see the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/Documentation/ReleaseNotes&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The package manager’s system requirements are the same as &lt;a href=&#34;https://github.com/apple/swift#system-requirements&#34;&gt;those for Swift&lt;/a&gt; with the caveat that the package manager requires Git at runtime as well as build-time.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The package manager is available as part the Swift toolchains available on &lt;a href=&#34;https://swift.org/download/&#34;&gt;Swift.org&lt;/a&gt;) including snapshots for the latest versions built from &lt;code&gt;main&lt;/code&gt; branch. For installation instructions for downloaded snapshots, please see the &lt;a href=&#34;https://swift.org/getting-started/#installing-swift&#34;&gt;Getting Started&lt;/a&gt; section of &lt;a href=&#34;https://swift.org&#34;&gt;Swift.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Swift Package Manager is also included in Xcode 8.0 and all subsequent releases.&lt;/p&gt; &#xA;&lt;p&gt;You can verify your installation by typing &lt;code&gt;swift package --version&lt;/code&gt; in a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ swift package --version&#xA;Apple Swift Package Manager - ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;There are several ways to contribute to Swift Package Manager. To learn about the policies, best practices that govern contributions to the Swift project and instructions for setting up the development environment please read the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md&#34;&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Swift package manager uses &lt;a href=&#34;https://github.com/apple/swift-llbuild&#34;&gt;llbuild&lt;/a&gt; as the underlying build system for compiling source files. It is also open source and part of the Swift project.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Reporting issues&lt;/h2&gt; &#xA;&lt;p&gt;If you have any trouble with the package manager, help is available. We recommend:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://forums.swift.org/c/development/swiftpm/&#34;&gt;Swift Forums&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;SwiftPM&#39;s &lt;a href=&#34;https://github.com/swiftlang/swift-package-manager/issues&#34;&gt;bug tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When reporting an issue please follow the bug reporting guidelines, they can be found in &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md#reporting-issues&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you’re not comfortable sharing your question with the list, contact details for the code owners can be found in &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CODEOWNERS&#34;&gt;CODEOWNERS&lt;/a&gt;; however, Swift Forums is usually the best place to go for help.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2015 - 2023 Apple Inc. and the Swift project authors. Licensed under Apache License v2.0 with Runtime Library Exception.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://swift.org/LICENSE.txt&#34;&gt;https://swift.org/LICENSE.txt&lt;/a&gt; for license information.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://swift.org/CONTRIBUTORS.txt&#34;&gt;https://swift.org/CONTRIBUTORS.txt&lt;/a&gt; for Swift project authors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kabiroberai/node-swift</title>
    <updated>2024-06-30T01:47:50Z</updated>
    <id>tag:github.com,2024-06-30:/kabiroberai/node-swift</id>
    <link href="https://github.com/kabiroberai/node-swift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create Node modules in Swift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NodeSwift&lt;/h1&gt; &#xA;&lt;p&gt;Bridge Node.js and Swift code.&lt;/p&gt; &#xA;&lt;h2&gt;What is it?&lt;/h2&gt; &#xA;&lt;p&gt;NodeSwift allows you to write Swift code that talks to Node.js libraries, and vice versa. This enables possibilities such as&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using native macOS APIs and SwiftPM in an Electron app.&lt;/li&gt; &#xA; &lt;li&gt;Interacting with the vast array of NPM APIs from a Swift program (e.g. a macOS app, iOS app, or a Vapor server).&lt;/li&gt; &#xA; &lt;li&gt;Speeding up your JS code by writing performance critical bits in Swift.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;MyModule.swift&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import NodeAPI&#xA;&#xA;#NodeModule(exports: [&#xA;    &#34;nums&#34;: [Double.pi.rounded(.down), Double.pi.rounded(.up)],&#xA;    &#34;str&#34;: String(repeating: &#34;NodeSwift! &#34;, count: 3),&#xA;    &#34;add&#34;: try NodeFunction { (a: Double, b: Double) in&#xA;        &#34;\(a) + \(b) = \(a + b)&#34;&#xA;    },&#xA;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;index.js&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { nums, str, add } = require(&#34;./build/MyModule.node&#34;);&#xA;console.log(nums); // [ 3, 4 ]&#xA;console.log(str); // NodeSwift! NodeSwift! NodeSwift!&#xA;console.log(add(5, 10)); // 5.0 + 10.0 = 15.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Safe&lt;/strong&gt;: NodeSwift makes use of Swift&#39;s memory safety and automatic reference counting. This means that, unlike with the C-based Node-API, you never have to think about memory management while writing NodeSwift modules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: With progressive disclosure, you can decide whether you want to use simpler or more advanced NodeSwift APIs to suit whatever your needs might be.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Idiomatic&lt;/strong&gt;: NodeSwift&#39;s APIs feel right at home in idiomatic Swift code. For example, to make a Swift class usable from Node.js you literally declare a &lt;code&gt;class&lt;/code&gt; in Swift that conforms to &lt;code&gt;NodeClass&lt;/code&gt;. We also use several Swift features like Dynamic Member Lookup that are designed precisely to make this sort of interop easy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Versatile&lt;/strong&gt;: You have access to the full set of Node.js APIs in Swift, from JavaScript object manipulation to event loop scheduling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt;: NodeSwift works not only on macOS, but also on Linux, Windows, and even iOS!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How?&lt;/h2&gt; &#xA;&lt;p&gt;A NodeSwift module consists of an &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;SwiftPM&lt;/a&gt; package and &lt;a href=&#34;https://www.npmjs.com&#34;&gt;NPM&lt;/a&gt; package in the same folder, both of which express NodeSwift as a dependency.&lt;/p&gt; &#xA;&lt;p&gt;The Swift package is exposed to JavaScript as a native Node.js module, which can be &lt;code&gt;require&lt;/code&gt;&#39;d by the JS code. The two sides communicate via &lt;a href=&#34;https://nodejs.org/api/n-api.html&#34;&gt;Node-API&lt;/a&gt;, which is wrapped by the &lt;code&gt;NodeAPI&lt;/code&gt; module on the Swift side.&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;For details, see the example in &lt;a href=&#34;https://raw.githubusercontent.com/kabiroberai/node-swift/main/example&#34;&gt;/example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- For details, refer to the documentation and examples:&#xA;&#xA;- [example](/example)&#xA;- node-vision&#xA;- swift-puppeteer&#xA;- fast-js --&gt; &#xA;&lt;!-- TODO: More ideas --&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;WebAssembly&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;While WebAssembly is great for performance, it still runs in a virtual machine, which means it can&#39;t access native Darwin/Win32/GNU+Linux APIs. NodeSwift runs your Swift code on the bare metal, which should be even faster than WASM, in addition to unlocking access to the operating system&#39;s native APIs.&lt;/p&gt; &#xA;&lt;p&gt;On the other hand, if you want to run Swift code in the browser, WebAssembly might be the right choice since NodeSwift requires a Node.js runtime.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other NAPI wrappers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;NAPI, NAN, Neon etc. are all other options for building native Node.js modules, each with its own strengths. For example, NAPI is written in C and thus affords great portability at the cost of memory unsafety. NodeSwift is a great option if you want to enhance your JS tool on Apple platforms, if you want to bring Node.js code into your existing Swift program, or if you simply prefer Swift to C/C++/Rust/etc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>swiftlang/swift-syntax</title>
    <updated>2024-06-30T01:47:50Z</updated>
    <id>tag:github.com,2024-06-30:/swiftlang/swift-syntax</id>
    <link href="https://github.com/swiftlang/swift-syntax" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A set of Swift libraries for parsing, inspecting, generating, and transforming Swift source code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Syntax&lt;/h1&gt; &#xA;&lt;p&gt;The swift-syntax package is a set of libraries that work on a source-accurate tree representation of Swift source code, called the SwiftSyntax tree. The SwiftSyntax tree forms the backbone of Swift’s macro system – the macro expansion nodes are represented as SwiftSyntax nodes and a macro generates a SwiftSyntax tree to be inserted into the source file.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can read SwiftSyntax’s documentation on &lt;a href=&#34;https://swiftpackageindex.com/swiftlang/swift-syntax/documentation&#34;&gt;swiftpackageindex.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A great way to interactively explore the SwiftSyntax tree of a source file is &lt;a href=&#34;https://swift-ast-explorer.com&#34;&gt;https://swift-ast-explorer.com&lt;/a&gt;, developed by &lt;a href=&#34;https://github.com/kishikawakatsumi&#34;&gt;@kishikawakatsumi&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A set of example usages of swift-syntax can be found in &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/Examples&#34;&gt;Examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Releases of SwiftSyntax are aligned with corresponding language and tooling releases, for example the major version 509 of swift-syntax is aligned with Swift 5.9.&lt;/p&gt; &#xA;&lt;p&gt;To depend on swift-syntax in a SwiftPM package, add the following to your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;  .package(url: &#34;https://github.com/swiftlang/swift-syntax.git&#34;, from: &#34;&amp;lt;#latest swift-syntax tag#&amp;gt;&#34;),&#xA;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To add swift-syntax as a dependency of your Xcode project, go to the &lt;em&gt;Package Dependencies&lt;/em&gt; tab of your Xcode project, click the plus button and search for &lt;a href=&#34;https://github.com/swiftlang/swift-syntax.git&#34;&gt;https://github.com/swiftlang/swift-syntax.git&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you should hit any issues while using SwiftSyntax, we appreciate bug reports on &lt;a href=&#34;https://github.com/swiftlang/swift-syntax/issues&#34;&gt;GitHub Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Start contributing to SwiftSyntax see &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/CONTRIBUTING.md&#34;&gt;this guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Bazel&lt;/h2&gt; &#xA;&lt;p&gt;SwiftSyntax provides an experimental &lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt; build configuration, maintained by Keith Smiley. To use it you can pull the source archive from the relevant release tag into your &lt;code&gt;WORKSPACE&lt;/code&gt; and depend on the libraries you need from the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/BUILD.bazel&#34;&gt;&lt;code&gt;BUILD.bazel&lt;/code&gt;&lt;/a&gt; file. Each library also has an associated &lt;code&gt;Library_opt&lt;/code&gt; target (such as &lt;code&gt;SwiftSyntax_opt&lt;/code&gt;) which forces SwiftSyntax to always build with optimizations enabled. This may help local runtime performance at the cost of debuggability, and initial build time. Please tag any &lt;a href=&#34;https://github.com/swiftlang/swift-syntax/issues&#34;&gt;issues&lt;/a&gt; related to the Bazel configuration with the label &#34;Bazel&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>