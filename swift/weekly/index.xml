<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-14T01:59:52Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jordanbaird/Ice</title>
    <updated>2024-04-14T01:59:52Z</updated>
    <id>tag:github.com,2024-04-14:/jordanbaird/Ice</id>
    <link href="https://github.com/jordanbaird/Ice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Powerful menu bar manager for macOS&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/jordanbaird/Ice/main/Ice/Assets.xcassets/AppIcon.appiconset/icon_256x256.png&#34; width=&#34;200&#34; height=&#34;200&#34;&gt; &#xA; &lt;h1&gt;Ice&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Ice is a powerful menu bar management tool. While its primary function is hiding and showing menu bar items, it aims to cover a wide variety of additional features to make it one of the most versatile menu bar tools available.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/jordanbaird/Ice/assets/90936861/bbbfebc2-c239-4f49-b0dd-34d1f3477314&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jordanbaird/Ice/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-latest-brightgreen?style=flat-square&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-macOS-blue?style=flat-square&#34; alt=&#34;Platform&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/requirements-macOS%2014%2B-fa4e49?style=flat-square&#34; alt=&#34;Requirements&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jordanbaird/Ice/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/jordanbaird/Ice?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Ice is currently in active development. Some features have not yet been implemented. Download the latest release &lt;a href=&#34;https://github.com/jordanbaird/Ice/releases/latest&#34;&gt;here&lt;/a&gt; and see the roadmap below for upcoming features.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;p&gt;Download the &#34;Ice.zip&#34; file from the &lt;a href=&#34;https://github.com/jordanbaird/Ice/releases/latest&#34;&gt;latest release&lt;/a&gt; and move the unzipped app into your &lt;code&gt;Applications&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;, you can install Ice using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install jordanbaird-ice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features/Roadmap&lt;/h2&gt; &#xA;&lt;h3&gt;Menu bar item management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hide menu bar items&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &#34;Always Hidden&#34; menu bar section&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Show hidden items when hovering over the menu bar&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Show hidden items when an empty area in the menu bar is clicked&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Show hidden items by scrolling or swiping in the menu bar&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatically rehide&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hide application menus when they overlap with shown menu bar items&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Drag and drop interface to arrange individual items&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Search menu bar items&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Display hidden items in a separate bar (e.g. for MacBooks with the notch)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Custom spacing between items&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Profiles for menu bar layout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Menu bar appearance&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Menu bar tint (solid and gradient)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Menu bar shadow&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Menu bar border&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom menu bar shapes (rounded and/or split)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hotkeys&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Toggle individual menu bar sections&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Toggle application menus&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Show/hide section divider icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Temporarily show individual menu bar items&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Enable/disable auto rehide&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Launch at login&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Menu bar widgets&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why the name?&lt;/h2&gt; &#xA;&lt;p&gt;Because your menu bar becomes like ice, allowing your menu bar items to slide away üßäüßäüßä&lt;/p&gt; &#xA;&lt;h2&gt;Why not support earlier operating systems?&lt;/h2&gt; &#xA;&lt;p&gt;There are a number of system APIs that Ice uses that are only available starting with macOS 14.&lt;/p&gt; &#xA;&lt;h2&gt;Gallery&lt;/h2&gt; &#xA;&lt;h4&gt;Choose your own icon to show in the menu bar&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/jordanbaird/Ice/assets/90936861/ded03af0-f6cf-4bc1-a094-af0cf32ead96&#34; alt=&#34;Custom Icon Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Customize the menu bar&#39;s appearance&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/jordanbaird/Ice/assets/90936861/99a59cc7-914a-4f8a-af4b-11a5193534da&#34; alt=&#34;Menu Bar Appearance Example 1&#34;&gt; &lt;img src=&#34;https://github.com/jordanbaird/Ice/assets/90936861/ba3bd8d9-0eeb-447b-8a62-1bc811319132&#34; alt=&#34;Menu Bar Appearance Example 2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Ice is available under the &lt;a href=&#34;https://raw.githubusercontent.com/jordanbaird/Ice/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apple/swift-embedded-examples</title>
    <updated>2024-04-14T01:59:52Z</updated>
    <id>tag:github.com,2024-04-14:/apple/swift-embedded-examples</id>
    <link href="https://github.com/apple/swift-embedded-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of example projects using Embedded Swift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Embedded Swift Example Projects&lt;/h1&gt; &#xA;&lt;p&gt;This repository is a set of demonstration projects of &lt;strong&gt;Embedded Swift&lt;/strong&gt;. Embedded Swift is a compilation and language mode that enables development of baremetal, embedded and standalone software in Swift. To learn more, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.swift.org/blog/embedded-swift-examples/&#34;&gt;Blog post introducing this repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forums.swift.org/t/embedded-swift-example-projects-for-arm-and-risc-v-microcontrollers/71066&#34;&gt;Swift forums thread about this repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forums.swift.org/t/embedded-swift/67057&#34;&gt;Discussions about Embedded Swift on the Swift forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apple/swift-evolution/raw/main/visions/embedded-swift.md&#34;&gt;Embedded Swift Vision Document&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apple/swift/tree/main/docs/EmbeddedSwift&#34;&gt;Documentation for Embedded Swift&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ö†Ô∏è Embedded Swift is experimental. Some information on this page might be out of date with latest development.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ÄºÔ∏è Use the latest downloadable &#39;Trunk Development&#39; snapshot from swift.org to use Embedded Swift. Public releases of Swift do not yet support Embedded Swift.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ÑπÔ∏è This repository contains code that is not continuously developed, instead it&#39;s presented &#34;as is&#34; for educational and demonstrational purposes. Making major improvements to existing examples is discouraged, but additions of new examples is welcome.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Catalog of Examples&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Board&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Photo&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-embedded-examples/main/stm32-blink&#34;&gt;stm32-blink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STM32F746G-DISCO&lt;/td&gt; &#xA;   &lt;td&gt;Baremetal program that blinks an LED repeatedly. Does not use any vendor SDKs or external toolchains.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/kubamracek/swift-evolution/branch/assets/stm32-blink.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-embedded-examples/main/stm32-lcd-logo&#34;&gt;stm32-lcd-logo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STM32F746G-DISCO&lt;/td&gt; &#xA;   &lt;td&gt;Sets up layers on the built-in LCD and animates them in a loop. Does not use any vendor SDKs or external toolchains.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/kubamracek/swift-evolution/branch/assets/stm32-lcd-logo.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-embedded-examples/main/stm32-neopixel&#34;&gt;stm32-neopixel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STM32F746G-DISCO&lt;/td&gt; &#xA;   &lt;td&gt;Uses SPI to program a NeoPixel LED strip. Does not use any vendor SDKs or external toolchains.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/kubamracek/swift-evolution/branch/assets/stm32-led.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-embedded-examples/main/stm32-uart-echo&#34;&gt;stm32-uart-echo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STM32F746G-DISCO&lt;/td&gt; &#xA;   &lt;td&gt;Uses UART to implement a simple &#34;echo&#34; firmware. Does not use any vendor SDKs or external toolchains.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/kubamracek/swift-evolution/branch/assets/stm32-uart-echo.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-embedded-examples/main/pico-blink&#34;&gt;pico-blink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Raspberry Pi Pico W&lt;/td&gt; &#xA;   &lt;td&gt;Baremetal program that blinks an LED repeatedly. Does not use any vendor SDKs or external toolchains.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/kubamracek/swift-evolution/branch/assets/pico-blink.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-embedded-examples/main/pico-blink-sdk&#34;&gt;pico-blink-sdk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Raspberry Pi Pico W&lt;/td&gt; &#xA;   &lt;td&gt;Baremetal program that blinks an LED repeatedly. Demonstrates how to use code and libraries from the Pico SDK and add Swift code on top of it.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/kubamracek/swift-evolution/branch/assets/pico-blink-sdl.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-embedded-examples/main/nrfx-blink-sdk&#34;&gt;nrfx-blink-sdk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;nRF52840-DK&lt;/td&gt; &#xA;   &lt;td&gt;Baremetal program that blinks an LED repeatedly. Demonstrates how to use code and libraries from the Zephyr SDK and add Swift code on top of it.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/kubamracek/swift-evolution/branch/assets/nrfx-blink-sdk.jpeg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-embedded-examples/main/esp32-led-strip-sdk&#34;&gt;esp32-led-strip-sdk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ESP32-C6-DevKitC-1&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates how to integrate with ESP-IDF SDK and use Swift to control the LED strip library from the SDK.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/kubamracek/swift-evolution/branch/assets/esp32-led-strip-sdk.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note that the SDK integration examples (Pico SDK, Zephyr SDK, etc.) are not recommendations or endorsement, the same is true for build system choice (Make, CMake, SwiftPM, shell scripts). Embedded Swift aims to be versatile and to allow for integration into more existing SDKs and build systems, and the example projects are merely showing the possibilities.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to this repository&lt;/h2&gt; &#xA;&lt;h3&gt;Code of Conduct&lt;/h3&gt; &#xA;&lt;p&gt;Like all Swift.org projects, we would like these Embedded Swift example projecs to foster a diverse and friendly community. We expect contributors to adhere to the &lt;a href=&#34;https://swift.org/code-of-conduct/&#34;&gt;Swift.org Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contact information&lt;/h3&gt; &#xA;&lt;p&gt;The current code owners of this repository are Kuba Mracek (&lt;a href=&#34;https://github.com/kubamracek&#34;&gt;@kubamracek&lt;/a&gt;) and Rauhul Varma (&lt;a href=&#34;https://github.com/rauhul&#34;&gt;@rauhul&lt;/a&gt;). You can contact them on the Swift forums via the handles &lt;a href=&#34;https://forums.swift.org/u/kubamracek/summary&#34;&gt;@kubamracek&lt;/a&gt; and &lt;a href=&#34;https://forums.swift.org/u/rauhul/summary&#34;&gt;@rauhul&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In case of moderation issues, you can also directly contact a member of the &lt;a href=&#34;https://swift.org/community/#community-structure&#34;&gt;Swift Core Team&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>