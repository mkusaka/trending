<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-07T01:50:12Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheWidlarzGroup/react-native-video</title>
    <updated>2024-07-07T01:50:12Z</updated>
    <id>tag:github.com,2024-07-07:/TheWidlarzGroup/react-native-video</id>
    <link href="https://github.com/TheWidlarzGroup/react-native-video" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A &lt;Video /&gt; component for react-native&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-native-video&lt;/h1&gt; &#xA;&lt;p&gt;üé¨ &lt;code&gt;&amp;lt;Video&amp;gt;&lt;/code&gt; component for React Native&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;documentation is available at &lt;a href=&#34;https://thewidlarzgroup.github.io/react-native-video/&#34;&gt;thewidlarzgroup.github.io/react-native-video/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Load the module&#xA;&#xA;import Video, {VideoRef} from &#39;react-native-video&#39;;&#xA;&#xA;// Within your render function, assuming you have a file called&#xA;// &#34;background.mp4&#34; in your project. You can include multiple videos&#xA;// on a single screen if you like.&#xA;&#xA;const VideoPlayer = () =&amp;gt; {&#xA; const videoRef = useRef&amp;lt;VideoRef&amp;gt;(null);&#xA; const background = require(&#39;./background.mp4&#39;);&#xA;&#xA; return (&#xA;   &amp;lt;Video &#xA;    // Can be a URL or a local file.&#xA;    source={background}&#xA;    // Store reference  &#xA;    ref={videoRef}&#xA;    // Callback when remote video is buffering                                      &#xA;    onBuffer={onBuffer}&#xA;    // Callback when video cannot be loaded              &#xA;    onError={onError}               &#xA;    style={styles.backgroundVideo}&#xA;   /&amp;gt;&#xA; )&#xA;}&#xA;&#xA;// Later on in your styles..&#xA;var styles = StyleSheet.create({&#xA;  backgroundVideo: {&#xA;    position: &#39;absolute&#39;,&#xA;    top: 0,&#xA;    left: 0,&#xA;    bottom: 0,&#xA;    right: 0,&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community support&lt;/h2&gt; &#xA;&lt;p&gt;We have an discord server where you can ask questions and get help. &lt;a href=&#34;https://discord.gg/WXuM4Tgb9X&#34;&gt;Join the discord server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Enterprise Support&lt;/h2&gt; &#xA;&lt;p&gt; üì± &lt;i&gt;react-native-video&lt;/i&gt; is provided &lt;i&gt;as it is&lt;/i&gt;. For enterprise support or other business inquiries, &lt;a href=&#34;https://www.thewidlarzgroup.com/&#34;&gt;please contact us ü§ù&lt;/a&gt;. We can help you with the integration, customization and maintenance. We are providing both free and commercial support for this project. let&#39;s build something awesome together! üöÄ &lt;/p&gt; &#xA;&lt;a href=&#34;https://www.thewidlarzgroup.com/&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./docs/assets/baners/twg-dark.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;./docs/assets/baners/twg-light.png&#34;&gt; &#xA;  &lt;img alt=&#34;TheWidlarzGroup&#34; src=&#34;https://raw.githubusercontent.com/TheWidlarzGroup/react-native-video/master/docs/assets/baners/twg-light.png&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>hummingbird-project/hummingbird</title>
    <updated>2024-07-07T01:50:12Z</updated>
    <id>tag:github.com,2024-07-07:/hummingbird-project/hummingbird</id>
    <link href="https://github.com/hummingbird-project/hummingbird" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight, flexible HTTP server framework written in Swift&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/hummingbird-project/hummingbird/assets/9382567/48de534f-8301-44bd-b117-dfb614909efd&#34;&gt; &#xA;  &lt;img src=&#34;https://github.com/hummingbird-project/hummingbird/assets/9382567/e371ead8-7ca1-43e3-8077-61d8b5eab879&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://swift.org&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/swift-5.9-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/hummingbird-project/hummingbird/actions?query=workflow%3ACI&#34;&gt; &lt;img src=&#34;https://github.com/hummingbird-project/hummingbird/actions/workflows/ci.yml/badge.svg?branch=main&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/7ME3nZ7mP2&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-discord-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Lightweight, flexible, modern server framework written in Swift.&lt;/p&gt; &#xA;&lt;h2&gt;Hummingbird&lt;/h2&gt; &#xA;&lt;p&gt;Hummingbird is a lightweight, flexible modern web application framework that runs on top of a SwiftNIO based server implementation. It is designed to require the minimum number of dependencies.&lt;/p&gt; &#xA;&lt;p&gt;It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding/decoding of requests/responses, TLS and HTTP2.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import Hummingbird&#xA;&#xA;// create router and add a single GET /hello route&#xA;let router = Router()&#xA;router.get(&#34;hello&#34;) { request, _ -&amp;gt; String in&#xA;    return &#34;Hello&#34;&#xA;}&#xA;// create application using router&#xA;let app = Application(&#xA;    router: router,&#xA;    configuration: .init(address: .hostname(&#34;127.0.0.1&#34;, port: 8080))&#xA;)&#xA;// run hummingbird application&#xA;try await app.runService()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hummingbird v2 is currently in development an &lt;a href=&#34;https://github.com/hummingbird-project/hummingbird/releases/tag/2.0.0-beta.2&#34;&gt;beta release&lt;/a&gt; is available if you&#39;d like to try it out.&lt;/p&gt; &#xA;&lt;h3&gt;Extending Hummingbird&lt;/h3&gt; &#xA;&lt;p&gt;Hummingbird is designed to require the least number of dependencies possible, but this means many features are unavailable to the core libraries. Additional features are provided through extensions. The Hummingbird repository comes with additional modules&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;HummingbirdRouter&lt;/code&gt;: an alternative router that uses a resultbuilder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;HummingbirdTLS&lt;/code&gt;: TLS support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;HummingbirdHTTP2&lt;/code&gt;: Support for HTTP2 upgrades.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;HummingbirdTesting&lt;/code&gt;: helper functions to aid testing Hummingbird projects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And also the following are available in other repositories in this organisation&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hummingbird-project/hummingbird-auth/tree/main&#34;&gt;&lt;code&gt;HummingbirdAuth&lt;/code&gt;&lt;/a&gt;: Authentication framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hummingbird-project/hummingbird-fluent/tree/main&#34;&gt;&lt;code&gt;HummingbirdFluent&lt;/code&gt;&lt;/a&gt;: Integration with Vapor&#39;s database ORM &lt;a href=&#34;https://github.com/Vapor/fluent-kit&#34;&gt;FluentKit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hummingbird-project/hummingbird-redis/tree/main&#34;&gt;&lt;code&gt;HummingbirdRedis&lt;/code&gt;&lt;/a&gt;: Redis support via &lt;a href=&#34;https://github.com/swift-server/RediStack&#34;&gt;RediStack&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hummingbird-project/hummingbird-websocket/tree/main&#34;&gt;&lt;code&gt;HummingbirdWebSocket&lt;/code&gt;&lt;/a&gt;: Support for WebSockets (Currently work in progess).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hummingbird-project/hummingbird-lambda/tree/main&#34;&gt;&lt;code&gt;HummingbirdLambda&lt;/code&gt;&lt;/a&gt;: Framework for running Hummingbird on AWS Lambdas.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hummingbird-project/swift-jobs/tree/main&#34;&gt;&lt;code&gt;Jobs&lt;/code&gt;&lt;/a&gt;: Job Queue Framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hummingbird-project/swift-mustache&#34;&gt;&lt;code&gt;Mustache&lt;/code&gt;&lt;/a&gt;: Mustache templating engine.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find reference documentation and user guides for Hummingbird &lt;a href=&#34;https://docs.hummingbird.codes/2.0/documentation/hummingbird/&#34;&gt;here&lt;/a&gt;. The &lt;a href=&#34;https://github.com/hummingbird-project/hummingbird-examples/tree/main&#34;&gt;hummingbird-examples&lt;/a&gt; repository has a number of examples of different uses of the library.&lt;/p&gt;</summary>
  </entry>
</feed>