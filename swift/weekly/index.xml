<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-08T01:47:42Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>duckduckgo/macos-browser</title>
    <updated>2024-09-08T01:47:42Z</updated>
    <id>tag:github.com,2024-09-08:/duckduckgo/macos-browser</id>
    <link href="https://github.com/duckduckgo/macos-browser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DuckDuckGo macOS Browser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DuckDuckGo for macOS&lt;/h1&gt; &#xA;&lt;p&gt;We are excited to engage the community in development!&lt;/p&gt; &#xA;&lt;h2&gt;We are hiring!&lt;/h2&gt; &#xA;&lt;p&gt;DuckDuckGo is growing fast and we continue to expand our fully distributed team. We embrace diverse perspectives, and seek out passionate, self-motivated people, committed to our shared vision of raising the standard of trust online. If you are a senior software engineer, visit our &lt;a href=&#34;https://duckduckgo.com/hiring/#open&#34;&gt;careers&lt;/a&gt; page to find out more about our openings!&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;Submodules&lt;/h3&gt; &#xA;&lt;p&gt;We use submodules, so you will need to bring them into the project in order to build and run it:&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Developer details&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re not part of the DuckDuckGo team, go to Signing &amp;amp; Capabilities to select your team and custom bundle identifier.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;We use Swift Package Manager for dependency management, which shouldn&#39;t require any additional set up.&lt;/p&gt; &#xA;&lt;h3&gt;SwiftLint&lt;/h3&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/realm/SwiftLint&#34;&gt;SwifLint&lt;/a&gt; for enforcing Swift style and conventions, so you&#39;ll need to &lt;a href=&#34;https://github.com/realm/SwiftLint#installation&#34;&gt;install it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Terminology&lt;/h2&gt; &#xA;&lt;p&gt;We have taken steps to update our terminology and remove words with problematic racial connotations, most notably the change to &lt;code&gt;main&lt;/code&gt; branches, &lt;code&gt;allow lists&lt;/code&gt;, and &lt;code&gt;blocklists&lt;/code&gt;. Closed issues or PRs may contain deprecated terminology that should not be used going forward.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/duckduckgo/macos-browser/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://duckduckgo.com/duckduckgo-help-pages/&#34;&gt;Help Center&lt;/a&gt; offers a variety of information about DuckDuckGo, including &lt;a href=&#34;https://duckduckgo.com/duckduckgo-help-pages/privacy/atb/&#34;&gt;how we improve our products&lt;/a&gt; while keeping your search and browsing history anonymous. If you have feedback or questions, you can &lt;a href=&#34;https://duckduckgo.com/duckduckgo-help-pages/company/contact-us/&#34;&gt;contact us&lt;/a&gt;. You can also use the feedback form in the browser. To do so, go to the three-dot menu &amp;gt; Send Feedback.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;DuckDuckGo is distributed under the Apache 2.0 &lt;a href=&#34;https://raw.githubusercontent.com/duckduckgo/macos-browser/main/LICENSE.md&#34;&gt;license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>quoid/userscripts</title>
    <updated>2024-09-08T01:47:42Z</updated>
    <id>tag:github.com,2024-09-08:/quoid/userscripts</id>
    <link href="https://github.com/quoid/userscripts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source userscript manager for Safari&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Userscripts Safari&lt;/h1&gt; &#xA;&lt;p&gt;An open-source userscript editor for Safari&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/etc/screenshot.png&#34; alt=&#34;Userscripts Safari&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#ui-overview&#34;&gt;UI Overview&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#browser-page&#34;&gt;Browser Page&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#settings-modal&#34;&gt;Settings Modal&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#popover&#34;&gt;Popover&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#metadata&#34;&gt;Metadata&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#api&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#scripts-directory&#34;&gt;Scripts Directory / Save Location&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#getting-help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#faqs&#34;&gt;FAQs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Userscripts is available for iOS (iPadOS) and macOS. For all versions, installation is done through &lt;a href=&#34;https://itunes.apple.com/us/app/userscripts/id1463298887&#34;&gt;Apple&#39;s App Store&lt;/a&gt;. On macOS, versions prior to &lt;code&gt;4.x&lt;/code&gt; were made available to download and install directly from the repository, but due to &lt;a href=&#34;https://github.com/quoid/userscripts/issues/154&#34;&gt;changes in the way Apple allows developers to distribute apps built with the WebExtension API&lt;/a&gt;, that is no longer an option.&lt;/p&gt; &#xA;&lt;p&gt;To run Userscripts on iOS you should be on iOS 15.1 or higher.&lt;/p&gt; &#xA;&lt;p&gt;To run Userscripts on macOS you should running macOS 12 or higher, along with Safari 14.1 or higher.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/userscripts/id1463298887&#34;&gt;App Store Link&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/quoid/userscripts/projects/3&#34;&gt;Development Progress&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s recommend to read this documentation and, if you have time, watch the following video overviews to familiarize yourself with the app and extension.&lt;/p&gt; &#xA;&lt;p&gt;Once the app is downloaded and installed the following steps should be taken:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;iOS (iPadOS)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;After installing the iOS App, you need two main steps to make the extension work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the App and set a directory&lt;/strong&gt; (For saving and loading userscripts)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;After Userscripts for ios v1.5.0, a local default directory will be set automatically&lt;/li&gt; &#xA;   &lt;li&gt;In earlier versions please click the &lt;code&gt;Set Userscripts Directory&lt;/code&gt; button and select the directory&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enable the extension in Safari&lt;/strong&gt; (And grant permissions)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Manage extensions from Settings App (Settings &amp;gt; Safari &amp;gt; Extensions) or Safari App (&lt;code&gt;AA&lt;/code&gt; button on iPhone, &lt;code&gt;extension-icon&lt;/code&gt; on iPad, also where you open the extension&#39;s &lt;code&gt;popup&lt;/code&gt; interface)&lt;/li&gt; &#xA;   &lt;li&gt;For optimal experience it&#39;s recommended that you &lt;code&gt;Always Allow&lt;/code&gt; Userscripts for &lt;code&gt;All Websites&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;The App cannot detect whether you have enabled the extension in Safari, therefore, the App prompt will not change after you enable the extension. Currently the App interface is only used to set or change the userscripts directory.&lt;/p&gt; &#xA; &lt;p&gt;You could select an iCloud folder for syncing scripts between macOS and iOS, but please note that there may be delays in synchronization, and you may encounter files be evictioned due to iCloud optimization, please refer to &lt;a href=&#34;https://github.com/quoid/userscripts/issues/424&#34;&gt;#424&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;There are two main ways to install a user script from the iOS version:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit any &lt;code&gt;.user.js&lt;/code&gt; URL in Safari, then open the extension &lt;code&gt;popup&lt;/code&gt; and you will see an installation prompt&lt;/li&gt; &#xA; &lt;li&gt;You can also save &lt;code&gt;.user.js&lt;/code&gt; files directly to the Userscripts directory you set above&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;Both of the above work equally well in the macOS version.&lt;/p&gt; &#xA; &lt;p&gt;The iOS version does not include the script editor provided in the macOS version, but you can always edit script files in the directory you set directly on iOS. (use any third-party code editor apps, support in-place opening and editing)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;After installing Userscripts on macOS, you &lt;strong&gt;do not&lt;/strong&gt; need to select a userscripts directory if you do not plan on syncing your userscripts between multiple devices. Instead you can choose to use the default directory, which is located at &lt;code&gt;~/User/Library/Containers/Userscripts/Data/Documents/scripts&lt;/code&gt; - again, this is default (and automatic) behavior. You only need to select a new location if you want to store your userscripts elsewhere, which is especially useful if you are using an external code editor such as Sublime Text or VSCode.&lt;/p&gt; &#xA;&lt;p&gt;Refer to Apple&#39;s official guide page: &lt;a href=&#34;https://support.apple.com/102343&#34;&gt;Use Safari extensions on your Mac&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/x1r3-L7pdYQ?t=14&#34;&gt;&lt;strong&gt;Here&#39;s a short clip showing how to easily create/add a userscript in Safari using this extension on macOS&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;UI Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Browser Page:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/etc/ui01.png&#34; alt=&#34;Userscripts Safari Main Application Window&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extension button&lt;/strong&gt; - click this button to open the extension interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Filter bar&lt;/strong&gt; - use this input to filter items in the sidebar, by &lt;em&gt;name&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sort button&lt;/strong&gt; - changes the order of the items in the sidebar by name or modified time&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sidebar buttons&lt;/strong&gt; - &lt;em&gt;described left to right&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &lt;code&gt;settings&lt;/code&gt; button (represented by a &lt;a href=&#34;https://wikipedia.org/wiki/Gear&#34;&gt;cog&lt;/a&gt;) displays the settings modal (discussed below)&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;code&gt;plus&lt;/code&gt; button allows users to add new items &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;New CSS&lt;/code&gt; is a &#34;userscript&#34; that expects &lt;a href=&#34;https://www.w3schools.com/css/&#34;&gt;CSS&lt;/a&gt; code&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;New Javascript&lt;/code&gt; is a prototypical userscript that expects &lt;a href=&#34;https://www.w3schools.com/js/DEFAULT.asp&#34;&gt;Javascript&lt;/a&gt; code&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;New Remote&lt;/code&gt; allows the user to add a remote hosted userscript (or style) by inputting the web address (&lt;em&gt;ex:&lt;/em&gt; &lt;code&gt;https://www.k21p.com/example.user.js&lt;/code&gt;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Item toggle&lt;/strong&gt; - this toggle enables or disables an item&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Item&lt;/strong&gt; - this is the userscript (or style), clicking on it will load it&#39;s contents into the editor - &lt;em&gt;you can hide descriptions in the settings area!&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Editor buttons (top)&lt;/strong&gt; - &lt;em&gt;described left to right&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Update button&lt;/strong&gt; - this button allows you to update userscripts that meet the following conditions &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;metadata contains &lt;code&gt;@version&lt;/code&gt; tag&lt;/li&gt; &#xA;     &lt;li&gt;metadata contains &lt;code&gt;@updateURL&lt;/code&gt; tag&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Download button&lt;/strong&gt; - click this button to download a copy of your userscript &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; every userscript that is displayed in the interface is already present on your local machine, at your save location - the download button offers a quick way to retrieve a copy of that file, without needing to click the settings button, and then the save location link within the settings modal&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Trash button&lt;/strong&gt; - moves the currently loaded userscript to the trash bin - it will subsequently be removed from the interface and save location&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Editor buttons (bottom)&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Discard&lt;/code&gt; - while editing, reverts any unsaved changes you&#39;ve made to a userscript&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Save&lt;/code&gt; - while editing, saves all changes you&#39;ve made to a userscript &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;Command + S&lt;/code&gt; is the keyboard shortcut for the action&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Settings Modal:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/etc/settings.png&#34; alt=&#34;Userscripts Safari Settings Window&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Auto Close Brackets&lt;/strong&gt; - toggles on/off auto closing of brackets in the editor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;this affects the following characters: &lt;code&gt;() [] {} &#34;&#34; &#39;&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Auto Hint&lt;/strong&gt; - automatically shows completion hints while editing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hide Descriptions&lt;/strong&gt; - hides the item descriptions in the sidebar&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Show Invisibles&lt;/strong&gt; - toggles the display of invisible characters in the editor&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Javascript Linter&lt;/strong&gt; - toggles basic Javascript linting within the editor&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tab Size&lt;/strong&gt; - the number of spaces a tab is equal to while editing, obviously defaults to &lt;code&gt;4&lt;/code&gt; because using &lt;code&gt;2&lt;/code&gt; spaces is absolute insanity&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enable Injection&lt;/strong&gt; - toggle on/off script injection for the pages you visit (this is the on/off switch)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Show Toolbar Count&lt;/strong&gt; - displays a badge on the toolbar icon with a number that represents how many enabled scripts match the url for the page you are on&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Save Location&lt;/strong&gt; - where your file are currently located and being saved to (click the blue text to open location)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Change Save Location (cogs icon)&lt;/strong&gt; - this button, located directly to the right of the save location, is a shortcut for opening the host app, which will allow you to change the save location&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Global Blacklist&lt;/strong&gt; - this input accepts a comma separated list of &lt;code&gt;@match&lt;/code&gt; patterns (&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Match_patterns#match_pattern_structure&#34;&gt;Match pattern structure&lt;/a&gt;), a page url that matches against a pattern in this list will be ignored for script injection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Popup:&lt;/h3&gt; &#xA;&lt;!-- ![Userscripts Popup](/etc/popover.png)--&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/etc/popover.png&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open Page Link&lt;/strong&gt; - &lt;em&gt;macOS only&lt;/em&gt;, opens the extension browser page&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enable Injection toggle&lt;/strong&gt; - turns on/off page script injection (on/off switch)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Refresh View&lt;/strong&gt; - refreshes the popup view&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Available Updates View&lt;/strong&gt; - the extension periodically checks all userscripts in your save location for updates and when an update is found, it is shown in this view&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Folder Button&lt;/strong&gt; - on &lt;strong&gt;macOS&lt;/strong&gt; this button opens your save location directory in Finder, on &lt;strong&gt;iOS&lt;/strong&gt; this button displays the &#34;all scripts view&#34; where you can see every script that found in your save location directory, the &#34;all scripts view&#34; allows you to toggle individual userscript scripts on/off regardless of the current page being displayed in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Prompt&lt;/strong&gt; - when a userscript is displayed in the browser, this alert displays, giving the user the option to install the userscript into their save location directory, tapping the prompt will take them through the installation steps&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Matched Userscripts List&lt;/strong&gt; - this list shows the currently matched userscripts relative to the current page being displayed in the browser, all userscripts that match to the domain will be showed, whether they are active or not. Users can click/tap the userscript to the toggle them on/off. If a userscript is active for the domain through a subframe a &lt;strong&gt;sub&lt;/strong&gt; tag will be show next the to the file type indicator&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Metadata&lt;/h2&gt; &#xA;&lt;p&gt;Userscripts Safari currently supports the following userscript metadata:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;@name&lt;/code&gt; - This will be the name that displays in the sidebar and be used as the filename - you can &lt;em&gt;not&lt;/em&gt; use the same name for multiple files of the same type&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@description&lt;/code&gt;- Use this to describe what your userscript does - this will be displayed in the sidebar - there is a setting to hide descriptions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@icon&lt;/code&gt; - This doesn&#39;t have a function with this userscript manager, but the &lt;strong&gt;first value&lt;/strong&gt; provided in the metadata will be accessible in the &lt;code&gt;GM_/GM.info&lt;/code&gt; object&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@match&lt;/code&gt; - Domain match patterns - you can use several instances of this field if you&#39;d like multiple domain matches - please refer to: &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Match_patterns#match_pattern_structure&#34;&gt;Match pattern structure&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; this extension only supports &lt;code&gt;http/s&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@exclude-match&lt;/code&gt; - Domain patterns where you do &lt;em&gt;not&lt;/em&gt; want the script to run&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@include&lt;/code&gt; - Used to match against urls for injection, globs and regular expressions are allowed, &lt;a href=&#34;https://wiki.greasespot.net/Include_and_exclude_rules&#34;&gt;read more here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@exclude&lt;/code&gt; - Functions in a similar way as &lt;code&gt;@include&lt;/code&gt; but rather than injecting, a match against this key&#39;s value will prevent injection&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@inject-into&lt;/code&gt; - allows the user to choose which context to inject the script into &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;allows the user to choose which context to inject the script into&lt;/li&gt; &#xA;   &lt;li&gt;values: &lt;code&gt;auto&lt;/code&gt; (default), &lt;code&gt;content&lt;/code&gt;, &lt;code&gt;page&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;GM&lt;/code&gt; apis are only available when using &lt;code&gt;content&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;works like &lt;a href=&#34;https://violentmonkey.github.io/api/metadata-block/#inject-into&#34;&gt;violentmonkey&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@run-at&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;allows the user to choose the injection timing&lt;/li&gt; &#xA;   &lt;li&gt;document-start, document-end (default), document-idle&lt;/li&gt; &#xA;   &lt;li&gt;works like &lt;a href=&#34;https://violentmonkey.github.io/api/metadata-block/#run-at&#34;&gt;violentmonkey&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;JS Only&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@weight&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;allows the user to further adjust script injection timing&lt;/li&gt; &#xA;   &lt;li&gt;can be used to ensure one script injects before another&lt;/li&gt; &#xA;   &lt;li&gt;ONLY accepts integers (floats, strings and everything else will be ignored)&lt;/li&gt; &#xA;   &lt;li&gt;min value = 1, max value = 999, higher numbers (“heavier”) execute earlier&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@require&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;allows users to include remote resources in their scripts&lt;/li&gt; &#xA;   &lt;li&gt;the value must be a valid url, currently no local file support&lt;/li&gt; &#xA;   &lt;li&gt;must require a resource of the same file type (JS for JS, CSS for CSS)&lt;/li&gt; &#xA;   &lt;li&gt;when a resource is required, it is downloaded and saved locally&lt;/li&gt; &#xA;   &lt;li&gt;the resources is downloaded once at save and never checked for updates or parsed in anyway &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;if you want to update the require resources, and the url does not change, you must remove the resources, save, then re-input it&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;require remote resources at your own risk, the extension never validates remote resource code in any way and be aware that using remote resources from untrusted sources can jeopardize your personal security&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@version&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;used to determine the current version of a userscript&lt;/li&gt; &#xA;   &lt;li&gt;when paired with &lt;code&gt;@updateURL&lt;/code&gt;, this will allow the user to update a userscript from a remote source, if the version on their machine is &lt;code&gt;&amp;lt;&lt;/code&gt; version at the update URL&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;@version&lt;/code&gt; does nothing by itself, it needs to be paired with&lt;code&gt; @updateURL&lt;/code&gt; for remote updating to function properly&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@updateURL&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the remote url to check version against&lt;/li&gt; &#xA;   &lt;li&gt;if the version of the file located at the update URL is &lt;code&gt;&amp;gt;&lt;/code&gt; the version on the local machine, the file will be updated&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;@updateURL&lt;/code&gt; does nothing by itself, it needs to be paired with &lt;code&gt;@version&lt;/code&gt; for remote updating to function properly&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@downloadURL&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;optional download location for a remotely updateable file (*i.e. a file that has both &lt;code&gt;@version&lt;/code&gt; and &lt;code&gt;@updateURL&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;when paired with &lt;code&gt;@version&lt;/code&gt; and &lt;code&gt;@updateURL&lt;/code&gt;, if the local version is &lt;code&gt;&amp;lt;&lt;/code&gt; the version of the file that &lt;code&gt;@updateURL&lt;/code&gt; points to, the extension will attempt to update the file&#39;s code with the contents of the file located at the &lt;code&gt;@downloadURL&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;@downloadURL&lt;/code&gt; does nothing by itself, it needs &lt;code&gt;@version&lt;/code&gt; and &lt;code&gt;@updateURL&lt;/code&gt; to present in order to function properly&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@noframes&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;this key takes no value&lt;/li&gt; &#xA;   &lt;li&gt;prevents code from being injected into nested frames&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;All userscripts need at least 1 &lt;code&gt;@match&lt;/code&gt; or &lt;code&gt;@include&lt;/code&gt; to run!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;Userscripts currently supports the following api methods. All methods are asynchronous unless otherwise noted. Users must &lt;code&gt;@grant&lt;/code&gt; these methods in order to use them in a userscript. When using API methods, it&#39;s only possible to inject into the content script scope due to security concerns.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.addStyle(css)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;css: String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.setValue(key, value)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;key: String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;value: Any&lt;/code&gt; - any can be JSON-serialized&lt;/li&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.getValue(key, defaultValue)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;key: String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;defaultValue: Any&lt;/code&gt; - optional&lt;/li&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved with the &lt;code&gt;value&lt;/code&gt; that was set or &lt;code&gt;defaultValue&lt;/code&gt; provided or &lt;code&gt;undefined&lt;/code&gt; if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.deleteValue(key)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;key: String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.listValues()&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved with an array of the key names of &lt;strong&gt;presently set&lt;/strong&gt; values if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.getTab()&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved with &lt;code&gt;Any&lt;/code&gt; data that is persistent as long as this tab is open if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.saveTab(tabObj)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;tabObj: Any&lt;/code&gt; - any can be JSON-serialized&lt;/li&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.openInTab(url, openInBackground)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;url: String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;openInBackground: Bool&lt;/code&gt; - optional, &lt;code&gt;false&lt;/code&gt; by default&lt;/li&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved with &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/tabs/Tab&#34;&gt;tab data&lt;/a&gt; for the tab just opened if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.closeTab(tabId)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;tabId: Int&lt;/code&gt; - optional, the &lt;code&gt;caller tab&lt;/code&gt; by default&lt;/li&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved if succeeds, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.setClipboard(data, type)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;data: String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;type: String&lt;/code&gt; - optional, &lt;code&gt;text/plain&lt;/code&gt; by default&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent/clipboardData&#34;&gt;read more here&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, resolved with a &lt;code&gt;Bool&lt;/code&gt; value indicating succeeds or fails, rejected with error message if fails&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.info&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;GM_info&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;is available without needing to add it to &lt;code&gt;@grant&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;an object containing information about the running userscript &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;scriptHandler: String&lt;/code&gt; - returns &lt;code&gt;Userscripts&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;version: String&lt;/code&gt; - the version of Userscripts app&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;scriptMetaStr: String&lt;/code&gt; - the metablock for the currently running script&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;script: Object&lt;/code&gt; - contains data about the currently running script &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;description: String&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;exclude-match: [String]&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;excludes: [String]&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;grant: [String]&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;includes: [String]&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;inject-into: String&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;matches: [String]&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;name: String&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;namespace: String&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;noframes: Bool&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;require: [String]&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;resources: [String]&lt;/code&gt; - &lt;em&gt;currently not implemented&lt;/em&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;run-at: String&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;version: String&lt;/code&gt; - &lt;em&gt;the userscript version value&lt;/em&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM.xmlHttpRequest(details)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;details: Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;the &lt;code&gt;details&lt;/code&gt; object accepts the following properties &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;url: String&lt;/code&gt; - required&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;method: String&lt;/code&gt; - optional, &lt;code&gt;GET&lt;/code&gt; by default&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;user: String&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;password: String&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;headers: Object&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;overrideMimeType: String&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;timeout: Int&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;binary: Bool&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;data: String&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;responseType: String&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;refer to &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&#34;&gt;&lt;code&gt;XMLHttpRequests&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;event handlers: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;onabort: Function&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;onerror: Function&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;onload: Function&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;onloadend: Function&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;onloadstart: Function&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;onprogress: Function&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;onreadystatechange: Function&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;ontimeout: Function&lt;/code&gt; - optional&lt;/li&gt; &#xA;     &lt;li&gt;the response object passed to the event handlers has the following properties: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;response&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;responseType&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;responseURL&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;status&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;statusText&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;responseText&lt;/code&gt; (when &lt;code&gt;responseType&lt;/code&gt; is &lt;code&gt;text&lt;/code&gt;)&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;returns an object with a single property, &lt;code&gt;abort&lt;/code&gt;, which is a &lt;code&gt;Function&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;usage: &lt;code&gt;const foo = GM.xmlHttpRequest({...});&lt;/code&gt; ... &lt;code&gt;foo.abort();&lt;/code&gt; to abort the request&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GM_xmlhttpRequest(details)&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;an alias for &lt;code&gt;GM.xmlHttpRequest&lt;/code&gt;, works exactly the same&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Scripts Directory&lt;/h2&gt; &#xA;&lt;p&gt;This is the directory where the app/extension will read from and write to. This directory is changed by opening the &lt;strong&gt;containing app&lt;/strong&gt; and clicking the respective &#34;change location&#34; button.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Script Directory Notes&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Close all instances of the extension UI (browser app and/or popup) before changing the scripts directory&lt;/li&gt; &#xA; &lt;li&gt;After files are added, removed or edited, you will need to open the popup at least 1 time to see those changes reflected in your browsing experience&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;On macOS&lt;/strong&gt;, after a directory outside of the default is selected, if you rename or move that selected directory, the extension will continue to read/write to that directory - the only way to remove the “link” is by trashing the folder or selecting a new save location&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter a problem while using this app/extension or are in need of some assistance, please open an issue here in the repository. When doing so, please provide as much detail as possible. This includes listing system specs and what website and script you are trying to execute. &lt;em&gt;Please follow the issue template!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#34;Refused to execute a script&#34; error(s), what should I do!?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You are seeing this error because of the website&#39;s &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&#34;&gt;Content Security Policy&lt;/a&gt;. Currently there is no way to allow extension content scripts to bypass CSPs in Safari.&lt;/p&gt; &#xA; &lt;p&gt;Automatically, the extension will attempt to circumvent strict CSPs, but if you are still experiencing issues, trying setting the userscript metadata key/val &lt;code&gt;// @inject-into auto&lt;/code&gt; or &lt;code&gt;// @inject-into content&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;You can read more about this in &lt;a href=&#34;https://github.com/quoid/userscripts/issues/106#issuecomment-797320450&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Do I need to use the extension&#39;s editor to create new userscripts or to edit existing?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can use your own editor to update and manage your files. As long as you are saving the files to the save location, and they are properly formatted, they should be injected. However, you &lt;strong&gt;must open the extension popup&lt;/strong&gt; beforehand. That means, if you create a new or edit an existing userscript with an external editor and save it to the save location, before injection will occur properly, the extension popup must be opened and the popup must load completely.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;What are the keyboard shortcuts?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Whilst using the included editor, clicking &lt;code&gt;⌘ + s&lt;/code&gt; will save the file. While working the editor, clicking &lt;code&gt;⌘ + f&lt;/code&gt; will bring up the search bar and &lt;code&gt;esc&lt;/code&gt; will hide it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;When I use &lt;code&gt;@require&lt;/code&gt;, where are the required files stored?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All required files are saved &lt;em&gt;as Javascript files&lt;/em&gt; in the extension container folder in macOS 11.x. That folder is located in the default save location, at: &lt;code&gt;~/Library/Containers/Userscripts/Data/Documents/require/&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;If you move files from the require folder or manually edit the &lt;code&gt;manifest.json&lt;/code&gt; file, you will likely break app/extension functionality.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Code level contributions please refer to &lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/docs/contributing.md&#34;&gt;contributing.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Further, any issue marked &#34;help wanted&#34; is actively seeking assistance. Please respond to those issues with feedback, guidance or offers of coding assistance.&lt;/p&gt; &#xA;&lt;p&gt;Participating and interacting with any existing &lt;a href=&#34;https://github.com/quoid/userscripts/issues&#34;&gt;&lt;code&gt;Issues&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/quoid/userscripts/discussions&#34;&gt;&lt;code&gt;Discussions&lt;/code&gt;&lt;/a&gt; would be a great help to the project and open source communities. Thank you for your contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The quickest and easiest way to support the project is by &lt;a href=&#34;https://apps.apple.com/us/app/userscripts/id1463298887&#34;&gt;leaving a positive review on the App Store&lt;/a&gt; if you enjoy the extension and want to see future improvements. Seeing these reviews let me know I am doing something right, or wrong, and motivates me to continue working on the project.&lt;/p&gt; &#xA;&lt;p&gt;The second best way to help out is to sign up to beta test new versions of the app. Since this extension values your privacy, and &lt;strong&gt;does not collect any data from users&lt;/strong&gt;, it is difficult to gauge how the extension is being used. By signing up to be a beta tester it not only allows you to test upcoming features, but also gives me the opportunity to elicit direct feedback from real users.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please join and test the corresponding beta version in &lt;a href=&#34;https://github.com/quoid/userscripts/releases&#34;&gt;releases&lt;/a&gt; via the TestFlight public link.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;Userscripts does not collect any data from its users nor monitor activities or actions you perform within the application and extension. This means everything that you do with the application and extension is private to you and is never shared with the developers or third parties. Since there is no data collection, there is no data retention of any kind.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2018-2024 Justin Wasack&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/quoid/userscripts/main/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt; license for all open source applications. A commercial license is required for all other applications.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>khcrysalis/Feather</title>
    <updated>2024-09-08T01:47:42Z</updated>
    <id>tag:github.com,2024-09-08:/khcrysalis/Feather</id>
    <link href="https://github.com/khcrysalis/Feather" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Feather is a free on-device iOS application manager/installer built with UIKit for quality.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;100&#34; height=&#34;100&#34; src=&#34;https://raw.githubusercontent.com/khcrysalis/Feather/main/Images/512@2x.png&#34; style=&#34;margin-right: -15px;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Feather&lt;/h1&gt; &#xA;&lt;p&gt; Feather is a free on-device iOS application manager/installer built with UIKit for quality. &lt;/p&gt; &#xA;&lt;h4&gt;README In Other Languages&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/khcrysalis/Feather/raw/main/README_de.md&#34;&gt;Deutsch🇩🇪&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/khcrysalis/Feather/raw/main/README_ru.md&#34;&gt;Русский🇷🇺&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Altstore repo support&lt;/strong&gt;. &lt;em&gt;Supporting Legacy and 2.0 repo structures&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Import your own &lt;code&gt;.ipa&lt;/code&gt;&#39;s&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Inject tweaks when signing apps&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install applications straight to your device seamlessly over the air&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Allows multiple certificate imports for easy switching&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable signing options&lt;/strong&gt;. &lt;em&gt;(name, bundleid, version, other plist options)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Meant to be used with Apple Accounts that are apart of &lt;code&gt;ADP&lt;/code&gt; (Apple Developer Program)&lt;/strong&gt;. &lt;em&gt;however other certificates can also work!&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy resigning&lt;/strong&gt;! &lt;em&gt;If you have another certificate you would like to use on an app you may resign and reinstall that same app!&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No tracking, analytics, or any of the sort&lt;/strong&gt;. &lt;em&gt;Your information such as UDID and certificates will never leave the device.&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;strong&gt;Tweak support is in beta&lt;/strong&gt;, make sure your tweaks work on the &lt;a href=&#34;https://theapplewiki.com/wiki/ElleKit&#34;&gt;Ellekit&lt;/a&gt; hooking platform, and built with the latest version of theos.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Some tweaks, not all, should work with Feather.&lt;/strong&gt; However, don&#39;t expect tweaks to work out of the box. As we will not change any dylib load command that isn&#39;t CydiaSubstrate.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;→ &lt;a href=&#34;https://github.com/khcrysalis/Feather/wiki&#34;&gt;Visit the Feather Wiki here!&lt;/a&gt;&lt;br&gt; → &lt;a href=&#34;https://github.com/khcrysalis/Feather/issues/26&#34;&gt;Visit the roadmap here!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;p align=&#34;center&#34;&gt;&#xA;     &lt;picture&gt;&#xA;      &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;Images/Repos.png&#34;&gt;&#xA;      &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;Images/Repos_L.png&#34;&gt;&#xA;      &lt;img alt=&#34;Pointercrate-pocket.&#34; src=&#34;https://raw.githubusercontent.com/khcrysalis/Feather/main/Images/Repos_L.png&#34; width=&#34;200&#34;&gt;&#xA;     &lt;/picture&gt;&lt;/p&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;p align=&#34;center&#34;&gt;&#xA;     &lt;picture&gt;&#xA;      &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;Images/Store.png&#34;&gt;&#xA;      &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;Images/Store_L.png&#34;&gt;&#xA;      &lt;img alt=&#34;Pointercrate-pocket.&#34; src=&#34;https://raw.githubusercontent.com/khcrysalis/Feather/main/Images/Store_L.png&#34; width=&#34;200&#34;&gt;&#xA;     &lt;/picture&gt;&lt;/p&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;p align=&#34;center&#34;&gt;&#xA;     &lt;picture&gt;&#xA;      &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;Images/Library.png&#34;&gt;&#xA;      &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;Images/Library_L.png&#34;&gt;&#xA;      &lt;img alt=&#34;Pointercrate-pocket.&#34; src=&#34;https://raw.githubusercontent.com/khcrysalis/Feather/main/Images/Library_L.png&#34; width=&#34;200&#34;&gt;&#xA;     &lt;/picture&gt;&lt;/p&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;p align=&#34;center&#34;&gt;&#xA;     &lt;picture&gt;&#xA;      &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;Images/Sign.png&#34;&gt;&#xA;      &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;Images/Sign_L.png&#34;&gt;&#xA;      &lt;img alt=&#34;Pointercrate-pocket.&#34; src=&#34;https://raw.githubusercontent.com/khcrysalis/Feather/main/Images/Sign_L.png&#34; width=&#34;200&#34;&gt;&#xA;     &lt;/picture&gt;&lt;/p&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Sources&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Store&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Library&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Signing&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Tip] Go into lightmode to see lightmode screenshots!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p&gt;Feather allows you to import a &lt;code&gt;.p12&lt;/code&gt; and a &lt;code&gt;.mobileprovision&lt;/code&gt; pair to sign the application with (you will need a correct password to the p12 before importing). &lt;a href=&#34;https://github.com/zhlynn/zsign&#34;&gt;Zsign&lt;/a&gt; is used for the signing aspect, feather feeds it the certificates you have selected in its certificates tab and will sign the app on your device - after its finished it will now be added to your signed applications tab. When selected, it will take awhile as its compressing and will prompt you to install it.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;What does Feather use for its server?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;It uses the &lt;a href=&#34;https://github.com/Upinel/localhost.direct&#34;&gt;localhost.direct&lt;/a&gt; certificate and &lt;a href=&#34;https://github.com/vapor/vapor&#34;&gt;Vapor&lt;/a&gt; to self host an HTTPS server on your device - all itms services really needs is a valid certificate and a valid HTTPS server. Which allows iOS to accept the request and install the application.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Does Feather bundle its own certificate for the server&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Yes, to be able to install applications on device the server needs to be HTTPS. Which, we use a localhost.direct certificate for when turning on the server while attempting to install.&lt;/p&gt; &#xA;&lt;p&gt;We have an option to download a new certificate to make this server be able to run in the far future but no guarentees. It entirely depends on the owners of localhost.direct to be able to provide a certificate for use. If it does expire and theres a new one available, hopefully we&#39;ll be there to update the files in the background so Feather is able to retrieve those.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Why does Feather append a random string on the bundle ID?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;New ADP (Apple Developer Program) memberships created after June 6, 2021, require development and ad-hoc signed apps for iOS, iPadOS, and tvOS to check with a PPQ (Provisioning Profile Query Check) service when the app is first launched. The device must be connected to the internet to verify.&lt;/p&gt; &#xA;&lt;p&gt;PPQCheck checks for a similar bundle identifier on the App Store, if said identifier matches the app you&#39;re launching and is happened to be signed with a non-appstore certificate, your Apple ID may be flagged and even banned from using the program for any longer.&lt;/p&gt; &#xA;&lt;p&gt;This is why we prepend the random string before each identifier, its done as a safety meassure - however you can disable it if you &lt;em&gt;really&lt;/em&gt; want to in Feathers settings page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE: IF YOU WANT TO KEEP APPLICATION DATA THROUGH REINSTALLS, MAKE SURE YOU HAVE THE SAME BUNDLEID.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;What is remove dylib inside of options&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;There&#39;s a very specific reason its there, for those wanting to remove pre-existing injected dylibs inside but it really serves no other practical use other than that. Don&#39;t use this if you have no idea what you&#39;re doing.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;What about free developer accounts?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Sadly Feather is unlikely to ever support those as there are plenty of alternatives that exist! Here&#39;s a few: &lt;a href=&#34;https://altstore.io&#34;&gt;Altstore&lt;/a&gt;, &lt;a href=&#34;https://sideloadly.io/&#34;&gt;Sideloadly&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/khcrysalis/feather # Clone&#xA;cd feather&#xA;make package SCHEME=&#34;&#39;feather (Release)&#39;&#34; # Build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Tip] Use &lt;code&gt;SCHEME=&#34;&#39;feather (Debug)&#39;&#34;&lt;/code&gt; for debug build&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Thanks to all my &lt;a href=&#34;https://github.com/sponsors/khcrysalis&#34;&gt;sponsors&lt;/a&gt;!!&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/khcrysalis/github-sponsor-graph/main/graph.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;&lt;strong&gt;&#34;samara is cute&#34; - Vendicated&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#khcrysalis/feather&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=khcrysalis/feather&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=khcrysalis/feather&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=khcrysalis/feather&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Upinel/localhost.direct&#34;&gt;localhost.direct&lt;/a&gt; - localhost with public CA signed SSL certificate&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vapor/vapor&#34;&gt;Vapor&lt;/a&gt; - A server-side Swift HTTP web framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhlynn/zsign&#34;&gt;Zsign&lt;/a&gt; - Allowing to sign on-device, reimplimented to work on other platforms such as iOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kean/Nuke&#34;&gt;Nuke&lt;/a&gt; - Image caching.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lakr233/Asspp&#34;&gt;Asspp&lt;/a&gt; - Some code for setting up the http server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- - [plistserver](https://github.com/QuickSign-Team/plistserver) - Hosted on https://api.palera.in&#xA;&gt; NOTE: The original license to plistserver is [GPL](https://github.com/nekohaxx/plistserver/commit/b207a76a9071a695d8b498db029db5d63a954e53), so changing the license is NOT viable as technically it&#39;s irrevocable. We are allowed to host it on our own server for use in Feather by technicality.  --&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;They are welcome! :)&lt;/p&gt;</summary>
  </entry>
</feed>