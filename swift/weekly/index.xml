<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-09T01:47:30Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>juliand665/Recon-Bolt</title>
    <updated>2022-10-09T01:47:30Z</updated>
    <id>tag:github.com,2022-10-09:/juliand665/Recon-Bolt</id>
    <link href="https://github.com/juliand665/Recon-Bolt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A growing SwiftUI app to let you view your Valorant data.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;Resources/Icon Transparent.png&#34; alt=&#34;Icon&#34; width=&#34;512&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Recon Bolt&lt;/h1&gt; &#xA;&lt;p&gt;This is a companion app for Valorant. It started as a way to view your competitive rank changes (back before the numbers were visible) and has now evolved into so much more, even allowing you to participate in agent select from anywhere. Check out the screenshots for a clearer overview than I could ever give in words!&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately, this app needs your Riot username and password to function, but of course you can view the code yourself to check its safety, and the password is stored in the keychain rather than as plaintext.&lt;/p&gt; &#xA;&lt;h2&gt;Discord&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve created a Discord server for this app! Feel free to &lt;a href=&#34;https://discord.gg/bwENMNRqNa&#34;&gt;join the server&lt;/a&gt; if you&#39;d like to discuss it :)&lt;/p&gt; &#xA;&lt;h2&gt;Download (TestFlight)&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve uploaded a build of the app to Apple and they approved it for beta testing! &lt;a href=&#34;https://testflight.apple.com/join/M1e2dgxj&#34;&gt;Here&#39;s the link&lt;/a&gt; to join the beta.&lt;/p&gt; &#xA;&lt;p&gt;Please note that the app currently &lt;strong&gt;only supports iOS 15+&lt;/strong&gt;, but you should be on the latest version of iOS anyway—iOS 15 supports all the same devices as iOS 14 and iOS 13 did.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;(Some of this data is mocked, some is real—&lt;em&gt;can you tell which is which?&lt;/em&gt;)&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Light/profile.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Dark/profile.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Light/summary.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Dark/summary.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Light/party.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Dark/party.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Light/missions.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Dark/missions.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Light/loadout.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Dark/loadout.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Light/skin.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Dark/skin.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Light/store.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/juliand665/Recon-Bolt/main/Resources/GitHub/Screenshots/Dark/store.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;Resources/GitHub/Screenshots/Light/agent select.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;Resources/GitHub/Screenshots/Dark/agent select.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;Resources/GitHub/Screenshots/Light/agent info.png&#34;&gt; &lt;img width=&#34;49%&#34; src=&#34;Resources/GitHub/Screenshots/Dark/agent info.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This project would not have been possible (or was significantly eased by) some prior work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/RumbleMike/ValorantStreamOverlay&#34;&gt;RumbleMike/ValorantStreamOverlay&lt;/a&gt;&lt;/strong&gt; provided the initial inspiration (and even just let me know it was possible).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/RumbleMike/ValorantClientAPI&#34;&gt;RumbleMike/ValorantClientAPI&lt;/a&gt; and the associated Discord&lt;/strong&gt;: This has some nice docs and a great community for working with the API I need.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/colinhartigan/valclient.py&#34;&gt;colinhartigan/valclient.py&lt;/a&gt;&lt;/strong&gt; has filled in where the above docs were incomplete, providing a simple reference of what endpoints exist and how they&#39;re accessed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/techchrism/valorant-api-docs&#34;&gt;techchrism/valorant-api-docs&lt;/a&gt;&lt;/strong&gt; is another documentation effort that I was recently made aware of, which looks both complete and detailed!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://valorant-api.com&#34;&gt;Valorant-API.com&lt;/a&gt;&lt;/strong&gt; has proven to be a truly invaluable API, serving up the game&#39;s assets in an easy-to-use format. They were also wonderfully open and responsive to feature/change requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why not Android?&lt;/h2&gt; &#xA;&lt;p&gt;The vast majority of Recon Bolt is UI Code, which heavily relies on Apple&#39;s fantastic new SwiftUI framework. I simply would not have had the motivation to work this much on an app with any other framework I know of, much less for an OS which I don&#39;t even use. Sorry!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LinusHenze/Fugu14</title>
    <updated>2022-10-09T01:47:30Z</updated>
    <id>tag:github.com,2022-10-09:/LinusHenze/Fugu14</id>
    <link href="https://github.com/LinusHenze/Fugu14" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fugu14 is an untethered iOS 14.3-14.5.1 jailbreak&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fugu14 - Untethered iOS 14 Jailbreak&lt;/h1&gt; &#xA;&lt;p&gt;Fugu14 is an (incomplete) iOS 14 Jailbreak, including an untether (persistence), kernel exploit, kernel PAC bypass and PPL bypass. The CVE numbers of the vulnerabilities are: CVE-2021-30740, CVE-2021-30768, CVE-2021-30769, CVE-2021-30770 and CVE-2021-30773.&lt;/p&gt; &#xA;&lt;h1&gt;Supported Devices/iOS Versions&lt;/h1&gt; &#xA;&lt;p&gt;Fugu14 &lt;em&gt;should&lt;/em&gt; support all arm64e devices (iPhone XS and newer) on iOS 14.3 - 14.5.1.&lt;br&gt; Support for lower versions (down to 14.2) can be added by editing &lt;code&gt;arm/shared/ClosurePwn/Sources/ClosurePwn/PwnClosure.swift&lt;/code&gt; and &lt;code&gt;arm/shared/KernelExploit/Sources/KernelExploit/offsets.swift&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;arm64 devices are not supported because the exploit to install the Fugu14 App does not work on these devices.&lt;br&gt; However, it is in theory possible to install the untether on them (e.g. via checkra1n).&lt;br&gt; Note that all of this code was written specifically for arm64e, so some changes are required to add arm64 support to the untether.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The kernel exploit is extremely reliable (it will never trigger a kernel panic)&lt;/li&gt; &#xA; &lt;li&gt;A simple TCP shell is available on port 1337&lt;/li&gt; &#xA; &lt;li&gt;Trustcaches put in &lt;code&gt;/.Fugu14Untether/trustcaches/&lt;/code&gt; will be loaded automatically&lt;/li&gt; &#xA; &lt;li&gt;Executables put in &lt;code&gt;/.Fugu14Untether/autorun/&lt;/code&gt; will be launched during boot (make sure to also create a trust cache for your executable!)&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://twitter.com/s1guza&#34;&gt;Siguza&#39;s&lt;/a&gt; &lt;a href=&#34;https://github.com/Siguza/libkrw&#34;&gt;libkrw&lt;/a&gt; library (load &lt;code&gt;/usr/lib/libkrw/libFugu14Krw.dylib&lt;/code&gt; and call &lt;code&gt;krw_initializer&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;(Jailbreak Developers: You can make your jailbreak untethered just by creating a CLI version that supports libkrw, copying it to &lt;code&gt;/.Fugu14Untether/autorun/&lt;/code&gt; and writing a trust cache to &lt;code&gt;/.Fugu14Untether/trustcaches/&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;WARNING&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Messing around with the untether may BOOTLOOP your device&lt;/li&gt; &#xA; &lt;li&gt;The fast untether (disabled unless you edit the source code) HAS NOT BEEN TESTED ON A REAL DEVICE -- DO NOT USE IT&lt;/li&gt; &#xA; &lt;li&gt;Additionally, the fast untether (in case it actually works) is more UNSAFE than the &#34;slow&#34; untether&lt;/li&gt; &#xA; &lt;li&gt;Developers: PLEASE TEST ANY CHANGES YOU MAKE TO THE UNTETHER ON A VIRTUAL DEVICE FIRST&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building and Running&lt;/h1&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need a supported device running a supported iOS version (see above)&lt;/li&gt; &#xA; &lt;li&gt;The device must be connected via USB&lt;/li&gt; &#xA; &lt;li&gt;You need the IPSW for your device, &lt;em&gt;unzipped&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;You need to have Xcode installed&lt;/li&gt; &#xA; &lt;li&gt;You need to have iproxy and ideviceinstaller installed (brew install usbmuxd ideviceinstaller)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To build and run the iOS Jailbreak, all you have to do is run the &lt;code&gt;ios_install.py&lt;/code&gt; script and follow the instructions. In case you get a code signing error, open &lt;code&gt;arm/iOS/Fugu14App/Fugu14App.xcodeproj&lt;/code&gt; and edit the code signing options.&lt;/p&gt; &#xA;&lt;h1&gt;Recovery&lt;/h1&gt; &#xA;&lt;p&gt;So you didn&#39;t read the warning section and your device is now in a bootloop. Let&#39;s hope you didn&#39;t enable the fast untether.&lt;br&gt; Anyway, before updating your device to the latest iOS version, try the following first:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install irecovery on your computer&lt;/li&gt; &#xA; &lt;li&gt;Connect your device via USB and boot into the recovery mode&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;irecovery -s&lt;/code&gt; on your computer, then enter the following commands:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;setenv boot-args no_untether&lt;/li&gt; &#xA; &lt;li&gt;saveenv&lt;/li&gt; &#xA; &lt;li&gt;reboot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Your device should now boot again. If it doesn&#39;t, repeat step two again, run &lt;code&gt;irecovery -s&lt;/code&gt; and then enter these commands:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;setenv boot-args untether_force_restore&lt;/li&gt; &#xA; &lt;li&gt;saveenv&lt;/li&gt; &#xA; &lt;li&gt;reboot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Device still won&#39;t boot? Then you&#39;ll have to update it to the latest version unfortunately :/&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;Like most software, Fugu14 contains (derived) code which was written by others.&lt;br&gt; I would therefore like to thank the people below for open-sourcing their code:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/5aelo&#34;&gt;Samuel Groß&lt;/a&gt;: SLOP technique (as used in the dyld exploit) and the JavaScript Int64 library (+ utils)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently, the remount patch has copyright issues which I&#39;m trying to resolve ASAP. Apparently, multiple parties think the code is theirs so I don&#39;t know what to do right now. I just write this here and hope no one DMCA&#39;s me.&lt;/p&gt; &#xA;&lt;p&gt;Fugu14 also includes various header files from Apple.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please see credits.txt.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Fugu14 is released under the MIT license. Please see the &lt;code&gt;LICENSE&lt;/code&gt; file for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>algolia/algoliasearch-client-swift</title>
    <updated>2022-10-09T01:47:30Z</updated>
    <id>tag:github.com,2022-10-09:/algolia/algoliasearch-client-swift</id>
    <link href="https://github.com/algolia/algoliasearch-client-swift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚡️ A fully-featured and blazing-fast Swift API client to interact with Algolia.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.algolia.com&#34;&gt; &lt;img alt=&#34;Algolia for Swift&#34; src=&#34;https://raw.githubusercontent.com/algolia/algoliasearch-client-swift/master/banner.png&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h4 align=&#34;center&#34;&gt;The perfect starting point to integrate &lt;a href=&#34;https://algolia.com&#34; target=&#34;_blank&#34;&gt;Algolia&lt;/a&gt; within your Swift project&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/algolia/algoliasearch-client-swift/actions/workflows/tests.yml&#34;&gt; &lt;img src=&#34;https://github.com/algolia/algoliasearch-client-swift/actions/workflows/tests.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/AlgoliaSearchClient&#34;&gt; &lt;img src=&#34;http://img.shields.io/cocoapods/v/AlgoliaSearchClient.svg?style=flat&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/AlgoliaSearchClient&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-macOS%20%7C%20iOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux%20-lightgray.svg?style=flat&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://developer.apple.com/documentation/xcode/creating_a_mac_version_of_your_ipad_app/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Catalyst-compatible-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.algolia.com/doc/api-client/getting-started/install/swift/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://discourse.algolia.com&#34; target=&#34;_blank&#34;&gt;Community Forum&lt;/a&gt; • &lt;a href=&#34;http://stackoverflow.com/questions/tagged/algolia&#34; target=&#34;_blank&#34;&gt;Stack Overflow&lt;/a&gt; • &lt;a href=&#34;https://github.com/algolia/algoliasearch-client-swift/issues&#34; target=&#34;_blank&#34;&gt;Report a bug&lt;/a&gt; • &lt;a href=&#34;https://www.algolia.com/doc/api-client/troubleshooting/faq/swift/&#34; target=&#34;_blank&#34;&gt;FAQ&lt;/a&gt; • &lt;a href=&#34;https://www.algolia.com/support&#34; target=&#34;_blank&#34;&gt;Support&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pure cross-platform Swift client&lt;/li&gt; &#xA; &lt;li&gt;Typed requests and responses&lt;/li&gt; &#xA; &lt;li&gt;Widespread use of &lt;code&gt;Result&lt;/code&gt; type&lt;/li&gt; &#xA; &lt;li&gt;Uses the power of &lt;code&gt;Codable&lt;/code&gt; protocol for easy integration of your domain models&lt;/li&gt; &#xA; &lt;li&gt;Thread-safe clients&lt;/li&gt; &#xA; &lt;li&gt;Detailed logging&lt;/li&gt; &#xA; &lt;li&gt;Injectable HTTP client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;The Swift Package Manager is a tool for managing the distribution of Swift code. It’s integrated with the Swift build system to automate the process of downloading, compiling, and linking dependencies. Since the release of Swift 5 and Xcode 11, SPM is compatible with the iOS, macOS and tvOS build systems for creating apps.&lt;/p&gt; &#xA;&lt;p&gt;To use SwiftPM, you should use Xcode 11 to open your project. Click &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;Swift Packages&lt;/code&gt; -&amp;gt; &lt;code&gt;Add Package Dependency&lt;/code&gt;, enter &lt;a href=&#34;https://github.com/algolia/algoliasearch-client-swift&#34;&gt;InstantSearch repo&#39;s URL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a framework author and use Swift API Client as a dependency, update your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let package = Package(&#xA;    // 8.15.0 ..&amp;lt; 9.0.0&#xA;    dependencies: [&#xA;        .package(url: &#34;https://github.com/algolia/algoliasearch-client-swift&#34;, from: &#34;8.15.0&#34;)&#xA;    ],&#xA;    // ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add &lt;code&gt;import AlgoliaSearchClient&lt;/code&gt; to your source files.&lt;/p&gt; &#xA;&lt;h3&gt;Cocoapods&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects.&lt;/p&gt; &#xA;&lt;p&gt;To install Algolia Swift Client, simply add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;AlgoliaSearchClient&#39;, &#39;~&amp;gt; 8.15&#39;&#xA;# pod &#39;InstantSearchClient&#39;, &#39;~&amp;gt; 6.0&#39; // Swift 4.2&#xA;# pod &#39;InstantSearchClient&#39;, &#39;~&amp;gt; 5.0&#39; // Swift 4.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pod update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; is a simple, decentralized dependency manager for Cocoa.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To install InstantSearch, simply add the following line to your Cartfile:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;github &#34;algolia/algoliasearch-client-swift&#34; ~&amp;gt; 8.15&#xA;# github &#34;algolia/algoliasearch-client-swift&#34; ~&amp;gt; 6.0.0 // Swift 4.2&#xA;# github &#34;algolia/algoliasearch-client-swift&#34; ~&amp;gt; 5.0.0 // Swift 4.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launch the following commands from the project directory (for v.8.0+)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;carthage update&#xA;./Carthage/Checkouts/algoliasearch-client-swift/carthage-prebuild&#xA;carthage build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this is your first time using Carthage in the project, you&#39;ll need to go through some additional steps as explained &lt;a href=&#34;https://github.com/Carthage/Carthage#adding-frameworks-to-an-application&#34;&gt;over at Carthage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;💡 Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Initialize the client&lt;/h3&gt; &#xA;&lt;p&gt;To start, you need to initialize the client. To do this, you need your &lt;strong&gt;Application ID&lt;/strong&gt; and &lt;strong&gt;API Key&lt;/strong&gt;. You can find both on &lt;a href=&#34;https://www.algolia.com/api-keys&#34;&gt;your Algolia account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let client = Client(appID: &#34;YourApplicationID&#34;, apiKey: &#34;YourAdminAPIKey&#34;)&#xA;let index = client.index(withName: &#34;your_index_name&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Push data&lt;/h3&gt; &#xA;&lt;p&gt;Without any prior configuration, you can start indexing contacts in the &lt;code&gt;contacts&lt;/code&gt; index using the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct Contact: Encodable {&#xA;  let firstname: String&#xA;  let lastname: String&#xA;  let followers: Int&#xA;  let company: String&#xA;}&#xA;&#xA;let contacts: [Contact] = [&#xA;  .init(firstname: &#34;Jimmie&#34;, lastname: &#34;Barninger&#34;, followers: 93, company: &#34;California Paint&#34;),&#xA;  .init(firstname: &#34;Warren&#34;, lastname: &#34;Speach&#34;, followers: 42, company: &#34;Norwalk Crmc&#34;)&#xA;]&#xA;&#xA;let index = client.index(withName: &#34;contacts&#34;)&#xA;index.saveObjects(contacts, autoGeneratingObjectID: true) { result in&#xA;  if case .success(let response) = result {&#xA;    print(&#34;Response: \(response)&#34;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Search&lt;/h3&gt; &#xA;&lt;p&gt;You can now search for contacts by &lt;code&gt;firstname&lt;/code&gt;, &lt;code&gt;lastname&lt;/code&gt;, &lt;code&gt;company&lt;/code&gt;, etc. (even with typos):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;index.search(query: &#34;jimmie&#34;) { result in&#xA;  switch result {&#xA;  case .failure(let error):&#xA;    print(&#34;Error: \(error)&#34;)&#xA;  case .success(let response):&#xA;    print(&#34;Response: \(response)&#34;)&#xA;    do {&#xA;      let foundContacts: [Contact] = try response.extractsHits()&#xA;      print(&#34;Found contacts: \(foundContacts)&#34;)&#xA;    } catch let error {&#xA;      print(&#34;Contact parsing error: \(error)&#34;)&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configure&lt;/h3&gt; &#xA;&lt;p&gt;Settings can be customized to tune the search behavior. For example, you can add a custom sort by number of followers to the already great built-in relevance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let settings = Settings()&#xA;  .set(\.customRanking, to: [.desc(&#34;followers&#34;)])&#xA;index.setSettings(settings) { result in&#xA;  if case .failure(let error) = result {&#xA;    print(&#34;Error when applying settings: \(error)&#34;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also configure the list of attributes you want to index by order of importance (first = most important):&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Since the engine is designed to suggest results as you type, you&#39;ll generally search by prefix. In this case the order of attributes is very important to decide which hit is the best:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let settings = Settings()&#xA;  .set(\.searchableAttributes, to: [&#34;lastname&#34;, &#34;firstname&#34;, &#34;company&#34;])&#xA;index.setSettings(settings) { result in&#xA;  if case .failure(let error) = result {&#xA;    print(&#34;Error when applying settings: \(error)&#34;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For full documentation, visit the &lt;a href=&#34;https://www.algolia.com/doc/api-client/getting-started/install/swift/&#34;&gt;Algolia Swift API Client&#39;s documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📝 Examples&lt;/h2&gt; &#xA;&lt;p&gt;You can find code samples in the &lt;a href=&#34;https://github.com/algolia/api-clients-playground/tree/master/swift&#34;&gt;Algolia&#39;s API Clients playground&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Use the Dockerfile&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to this project without installing all its dependencies, you can use our Docker image. Please check our &lt;a href=&#34;https://raw.githubusercontent.com/algolia/algoliasearch-client-swift/master/DOCKER_README.MD&#34;&gt;dedicated guide&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;Algolia Swift API Client is an open-sourced software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/algolia/algoliasearch-client-swift/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Objective-C support&lt;/h3&gt; &#xA;&lt;p&gt;The Swift API client is compatible with Objective-C up to version 7.0.5. Please use this version of the client if you&#39;re working with an Objective-C project.&lt;/p&gt; &#xA;&lt;h3&gt;Swift 3&lt;/h3&gt; &#xA;&lt;p&gt;You can use this library with Swift by one of the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pod &#39;AlgoliaSearch-Client-Swift&#39;, &#39;~&amp;gt; 4.8.1&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pod &#39;AlgoliaSearch-Client-Swift&#39;, :git =&amp;gt; &#39;https://github.com/algolia/algoliasearch-client-swift.git&#39;, :branch =&amp;gt; &#39;swift-3&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Need help&lt;/strong&gt;? Ask a question to the &lt;a href=&#34;https://discourse.algolia.com/&#34;&gt;Algolia Community&lt;/a&gt; or on &lt;a href=&#34;http://stackoverflow.com/questions/tagged/algolia&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Encountering an issue?&lt;/strong&gt; Before reaching out to support, we recommend heading to our &lt;a href=&#34;https://www.algolia.com/doc/api-client/troubleshooting/faq/swift/&#34;&gt;FAQ&lt;/a&gt; where you will find answers for the most common issues and gotchas with the client.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Found a bug?&lt;/strong&gt; You can open a &lt;a href=&#34;https://github.com/algolia/algoliasearch-client-swift/issues&#34;&gt;GitHub issue&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>