<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-24T01:54:35Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DevToys-app/DevToysMac</title>
    <updated>2024-03-24T01:54:35Z</updated>
    <id>tag:github.com,2024-03-24:/DevToys-app/DevToysMac</id>
    <link href="https://github.com/DevToys-app/DevToysMac" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DevToys For mac&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DevToysMac&lt;/h1&gt; &#xA;&lt;p&gt;This is the mac app version of &lt;a href=&#34;https://github.com/veler/DevToys&#34;&gt;DevToys for Windows&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/20896810/154781951-f4c6fa80-2fcc-40fe-a94b-fccfc0f2ccf1.png&#34; alt=&#34;Dribbble Shot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to install&lt;/h1&gt; &#xA;&lt;h2&gt;Manually&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://github.com/ObuchiYuki/DevToysMac/releases/latest&#34;&gt;latest release&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Extract &lt;code&gt;DevToys.app&lt;/code&gt; from &lt;code&gt;DevToys.app.zip&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Homebrew&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;. Then install DevToysMac with &lt;code&gt;brew install --cask devtoys&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;h3&gt;Home&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; alt=&#34;スクリーンショット 2022-01-30 19 01 01&#34; src=&#34;https://user-images.githubusercontent.com/20896810/151695286-7984d264-e590-43b8-9ed7-03853967b0e4.png&#34;&gt; &#xA;&lt;h3&gt;Json &amp;lt;&amp;gt; Yaml Converter&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; alt=&#34;スクリーンショット 2022-01-30 19 01 23&#34; src=&#34;https://user-images.githubusercontent.com/20896810/151695289-cf2a4c2f-8ca9-4537-a896-5fc944b706ac.png&#34;&gt; &#xA;&lt;h3&gt;Number Base Converter&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; alt=&#34;スクリーンショット 2022-01-30 19 01 41&#34; src=&#34;https://user-images.githubusercontent.com/20896810/151695294-88c629d9-514f-4966-a174-1fcec9c29185.png&#34;&gt; &#xA;&lt;h3&gt;HTML Encoder / Decoder&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; alt=&#34;スクリーンショット 2022-01-30 19 02 05&#34; src=&#34;https://user-images.githubusercontent.com/20896810/151695300-e0dccd31-b3ac-42e6-904d-d287e56e4e63.png&#34;&gt; &#xA;&lt;h3&gt;URL Encoder / Decoder&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; alt=&#34;スクリーンショット 2022-01-30 19 02 11&#34; src=&#34;https://user-images.githubusercontent.com/20896810/151695305-a88c6106-3086-4289-bd61-8670cd1d1bac.png&#34;&gt; &#xA;&lt;h3&gt;Base64 Encoder / Decoder&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; alt=&#34;スクリーンショット 2022-01-30 19 02 49&#34; src=&#34;https://user-images.githubusercontent.com/20896810/151695317-a821fc62-64b6-4e09-a7dc-cb661f10ee7d.png&#34;&gt; &#xA;&lt;h3&gt;JSON Formatter&lt;/h3&gt; &#xA;&lt;img width=&#34;500&#34; alt=&#34;スクリーンショット 2022-01-30 19 04 43&#34; src=&#34;https://user-images.githubusercontent.com/20896810/151695321-f996ddc7-27d3-457e-8086-d40848ce8d68.png&#34;&gt; &#xA;&lt;p&gt;and more...&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mattmassicotte/ConcurrencyRecipes</title>
    <updated>2024-03-24T01:54:35Z</updated>
    <id>tag:github.com,2024-03-24:/mattmassicotte/ConcurrencyRecipes</id>
    <link href="https://github.com/mattmassicotte/ConcurrencyRecipes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Practical solutions to problems with Swift Concurrency&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ConcurrencyRecipes&lt;/h1&gt; &#xA;&lt;p&gt;Practical solutions to problems with Swift Concurrency&lt;/p&gt; &#xA;&lt;p&gt;Swift Concurrency can be really hard to use. I thought it could be handy to document and share solutions and hazards you might face along the way. I am &lt;strong&gt;absolutely not&lt;/strong&gt; saying this is comprehensive, or that the solutions presented are great. I&#39;m learning too. Contributions are very welcome, especially for problems!&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/AsyncContext.md&#34;&gt;Creating an Async Context&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/Protocols.md&#34;&gt;Using Protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/Isolation.md&#34;&gt;Isolation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/Structured.md&#34;&gt;Structured Concurrency&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/SwiftUI.md&#34;&gt;SwiftUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/PreconcurrencyLibraries.md&#34;&gt;Using Libraries not Designed for Concurrency&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/Interoperability.md&#34;&gt;Interoperability&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hazards&lt;/h2&gt; &#xA;&lt;p&gt;Quick definitions for the hazards referenced throughout the recipes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Timing: More than one option is available, but can affect when events actually occur.&lt;/li&gt; &#xA; &lt;li&gt;Ordering: Unstructured tasks means ordering is up to the caller. Think carefully about dependencies, multiple invocations, and cancellation.&lt;/li&gt; &#xA; &lt;li&gt;Lack of Caller Control: definitions always control actor context. This is different from other threading models, and you cannot alter definitions you do not control.&lt;/li&gt; &#xA; &lt;li&gt;Sendability: types that cross isolation domains must be sendable. This isn&#39;t always easy, and for types you do not control, not possible.&lt;/li&gt; &#xA; &lt;li&gt;Blocking: Swift concurrency uses a fixed-size thread pool. Tying up background threads can lead to lag and even deadlock.&lt;/li&gt; &#xA; &lt;li&gt;Availability: Concurrency is evolving rapidly, and some APIs require the latest SDK.&lt;/li&gt; &#xA; &lt;li&gt;Async virality: Making a function async affects all its callsites. This can result in a large number of changes, each of which could, itself, affect subsequence callsites.&lt;/li&gt; &#xA; &lt;li&gt;Actor Reentrancy: More than one thread can enter an Actor&#39;s async methods. An actor&#39;s state can change across awaits.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing and Collaboration&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;d love to hear from you! Get in touch via &lt;a href=&#34;https://mastodon.social/@mattiem&#34;&gt;mastodon&lt;/a&gt;, an issue, or a pull request.&lt;/p&gt; &#xA;&lt;p&gt;I prefer collaboration, and would love to find ways to work together if you have a similar project.&lt;/p&gt; &#xA;&lt;p&gt;By participating in this project you agree to abide by the &lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tryswift/trySwiftTokyoApp</title>
    <updated>2024-03-24T01:54:35Z</updated>
    <id>tag:github.com,2024-03-24:/tryswift/trySwiftTokyoApp</id>
    <link href="https://github.com/tryswift/trySwiftTokyoApp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official app for try! Swift Tokyo 2024&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;try! Swift Tokyo App&lt;/h1&gt; &#xA;&lt;p&gt;This is the official app for try! Swift Tokyo 2024.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve submitted the app to the App Store as MVP, and it&#39;s currently under review. Here&#39;s a list of features that are currently available and those that are planned for future releases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; View the schedule&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; View the sponsors&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Check your favorite sessions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Receive notifications for upcoming sessions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Localize the app in English and Japanese (partially done)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; macOS support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; watchOS support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; tvOS support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; visionOS support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 15.3 and later (Swift 5.10 and later)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Available on the App Store soon, or you can build the app yourself. See the &lt;a href=&#34;https://raw.githubusercontent.com/tryswift/trySwiftTokyoApp/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; section for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;trySwiftTokyo.xcworkspace&lt;/code&gt; in Xcode&lt;/li&gt; &#xA; &lt;li&gt;Build and run the app&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to the app! Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/tryswift/trySwiftTokyoApp/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;History of try! Swift App&lt;/h2&gt; &#xA;&lt;p&gt;The first try! Swift app (a repository named final) was released in 2016. At the time, it was written in Swift 3. Now is a good time for a new app, so We rebuilt it based on TCA and SwiftUI. Please take a look and enjoy. &lt;a href=&#34;https://github.com/tryswift/trySwiftAppFinal&#34;&gt;https://github.com/tryswift/trySwiftAppFinal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/tryswift/trySwiftTokyoApp/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>