<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-21T02:06:46Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Adamant-im/adamant-iOS</title>
    <updated>2024-01-21T02:06:46Z</updated>
    <id>tag:github.com,2024-01-21:/Adamant-im/adamant-iOS</id>
    <link href="https://github.com/Adamant-im/adamant-iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;iOS native client for ADAMANT Decentralized Messenger&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ADAMANT Messenger for iOS&lt;/h1&gt; &#xA;&lt;p&gt;iOS native client for ADAMANT Messenger. Available at &lt;a href=&#34;https://itunes.apple.com/app/adamant-messenger/id1341473829&#34;&gt;App Store&lt;/a&gt;. You can use this repository to build your own version of ADAMANT iOS application.&lt;/p&gt; &#xA;&lt;p&gt;ADAMANT is the most secure and anonymous messenger, encrypted with Blockchain.&lt;/p&gt; &#xA;&lt;p&gt;Highlights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The most secure and anonymous messenger (see comparison table on Website)&lt;/li&gt; &#xA; &lt;li&gt;PWA version is also available &lt;a href=&#34;https://msg.adamant.im/&#34;&gt;https://msg.adamant.im/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Trusted. Open-source project.&lt;/li&gt; &#xA; &lt;li&gt;Brand new Fair dPoS blockchain concensus&lt;/li&gt; &#xA; &lt;li&gt;The only one which is Blockchain-powered&lt;/li&gt; &#xA; &lt;li&gt;Integrated crypto transfers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read more about ADAMANT Project at &lt;a href=&#34;https://adamant.im&#34;&gt;adamant.im&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Setup&lt;/h2&gt; &#xA;&lt;p&gt;Clone and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pod install&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>exyte/PopupView</title>
    <updated>2024-01-21T02:06:46Z</updated>
    <id>tag:github.com,2024-01-21:/exyte/PopupView</id>
    <link href="https://github.com/exyte/PopupView" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Toasts and popups library written with SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://exyte.com/&#34;&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/exyte/media/master/common/header-dark.png&#34;&gt;&#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/exyte/media/master/common/header-light.png&#34;&gt;&#xA;  &lt;/picture&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://exyte.com/&#34;&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/exyte/media/master/common/our-site-dark.png&#34; width=&#34;80&#34; height=&#34;16&#34;&gt;&#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/exyte/media/master/common/our-site-light.png&#34; width=&#34;80&#34; height=&#34;16&#34;&gt;&#xA;  &lt;/picture&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://twitter.com/exyteHQ&#34;&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/exyte/media/master/common/twitter-dark.png&#34; width=&#34;74&#34; height=&#34;16&#34;&gt;&#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/exyte/media/master/common/twitter-light.png&#34; width=&#34;74&#34; height=&#34;16&#34;&gt; &#xA;  &lt;/picture&gt;&lt;/a&gt; &lt;a href=&#34;https://exyte.com/contacts&#34;&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/exyte/media/master/common/get-in-touch-dark.png&#34; width=&#34;128&#34; height=&#34;24&#34; align=&#34;right&#34;&gt;&#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/exyte/media/master/common/get-in-touch-light.png&#34; width=&#34;128&#34; height=&#34;24&#34; align=&#34;right&#34;&gt;&#xA;  &lt;/picture&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Floaters&lt;/th&gt; &#xA;   &lt;th&gt;Toasts&lt;/th&gt; &#xA;   &lt;th&gt;Popups&lt;/th&gt; &#xA;   &lt;th&gt;Sheets&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://raw.githubusercontent.com/exyte/media/master/PopupView/1.gif&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://raw.githubusercontent.com/exyte/media/master/PopupView/2.gif&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://raw.githubusercontent.com/exyte/media/master/PopupView/3.gif&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://raw.githubusercontent.com/exyte/media/master/PopupView/4.gif&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h1 align=&#34;left&#34;&gt;Popup View&lt;/h1&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h4&gt;Toasts, alerts and popups library written with SwiftUI&lt;/h4&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://exyte.com/blog/swiftui-tutorial-popupview-library&#34;&gt;Read Article Â»&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/exyte/popupView?label=Version&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://swiftpackageindex.com/exyte/PopupView&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fexyte%2FPopupView%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/exyte/PopupView&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fexyte%2FPopupView%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/exyte/PopupView&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SwiftPM-Compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;SPM Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/ExytePopupView&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/cocoapods-Compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;Cocoapods Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-brightgreen.svg?style=flat&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-black.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Update to version 2&lt;/h1&gt; &#xA;&lt;p&gt;Instead of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.popup(isPresented: $floats.showingTopFirst, type: .floater(), position: .top, animation: .spring(), closeOnTapOutside: true, backgroundColor: .black.opacity(0.5)) {&#xA;    FloatTopFirst()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.popup(isPresented: $floats.showingTopFirst) {&#xA;    FloatTopFirst()&#xA;} customize: {&#xA;    $0&#xA;        .type(.floater())&#xA;        .position(.top)&#xA;        .animation(.spring())&#xA;        .closeOnTapOutside(true)&#xA;        .backgroundColor(.black.opacity(0.5))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using this API you can pass parameters in any order you like.&lt;/p&gt; &#xA;&lt;h1&gt;Show over navbar&lt;/h1&gt; &#xA;&lt;p&gt;To display your popup over all other views including navbars please use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.popup(isPresented: $floats.showingTopFirst) {&#xA;    FloatTopFirst()&#xA;} customize: {&#xA;    $0.isOpaque(true)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will also mean that you won&#39;t be able to tap &#34;through&#34; the popup&#39;s background on any of the controls &#34;behind it&#34; (that&#39;s because this method actually uses transparent fullscreenSheet, which won&#39;t pass the touches to underlying view). Opaque popup uses screen size to calculate its position.&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately, if opaque is false (to allow &#34;through-touches&#34; if you need them), popup - even if forced to be fullscreen, will be displayed under the navbar (if you know how to pass over this restriction, please do let me know in the comments). Please keep in mind that in this case the popup calculates its position using the frame of the view you attach it to, to avoid being under the navbar. So you&#39;ll likely want to attach it to the root view of your screen.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add a bool to control popup presentation state&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;.popup&lt;/code&gt; modifier to your view.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import PopupView&#xA;&#xA;struct ContentView: View {&#xA;&#xA;    @State var showingPopup = false&#xA;&#xA;    var body: some View {&#xA;        YourView()&#xA;            .popup(isPresented: $showingPopup) {&#xA;                Text(&#34;The popup&#34;)&#xA;                    .frame(width: 200, height: 60)&#xA;                    .background(Color(red: 0.85, green: 0.8, blue: 0.95))&#xA;                    .cornerRadius(30.0)&#xA;            } customize: {&#xA;                $0.autohideIn(2)&#xA;            }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Required parameters&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;isPresented&lt;/code&gt; - binding to determine if the popup should be seen on screen or hidden&lt;br&gt; &lt;code&gt;view&lt;/code&gt; - view you want to display on your popup&lt;/p&gt; &#xA;&lt;h4&gt;or&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;item&lt;/code&gt; - binding to item: if item&#39;s value is nil - popup is hidden, if non-nil - displayed. Be careful - library makes a copy of your item during dismiss animation!!&lt;br&gt; &lt;code&gt;view&lt;/code&gt; - view you want to display on your popup&lt;/p&gt; &#xA;&lt;h3&gt;Available customizations - optional parameters&lt;/h3&gt; &#xA;&lt;p&gt;use &lt;code&gt;customize&lt;/code&gt; closure in popup modifier:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;type&lt;/code&gt; - toast, float or default. Floater has parameters of its own:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;verticalPadding&lt;/code&gt; - padding which will define padding from the relative vertical edge or will be added to safe area if &lt;code&gt;useSafeAreaInset&lt;/code&gt; is true&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vhorizontalPadding&lt;/code&gt; - padding which will define padding from the relative horizontal edge or will be added to safe area if &lt;code&gt;useSafeAreaInset&lt;/code&gt; is true&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;useSafeAreaInset&lt;/code&gt; - whether to include safe area insets in floater padding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;position&lt;/code&gt; - topLeading, top, topTrailing, leading, center, trailing, bottomLeading, bottom, bottomTrailing &lt;code&gt;appearFrom&lt;/code&gt; - &lt;code&gt;top, bottom, left, right&lt;/code&gt;: determines the direction of appearing animation. If left empty it copies &lt;code&gt;position&lt;/code&gt; parameter: so appears from .top edge, if &lt;code&gt;position&lt;/code&gt; is set to .top &lt;code&gt;animation&lt;/code&gt; - custom animation for popup sliding onto screen&lt;br&gt; &lt;code&gt;autohideIn&lt;/code&gt; - time after which popup should disappear&lt;br&gt; &lt;code&gt;dragToDismiss&lt;/code&gt; - true by default: enable/disable drag to dismiss (upwards for .top popup types, downwards for .bottom and default type)&lt;br&gt; &lt;code&gt;closeOnTap&lt;/code&gt; - true by default: enable/disable closing on tap on popup&lt;br&gt; &lt;code&gt;closeOnTapOutside&lt;/code&gt; - false by default: enable/disable closing on tap on outside of popup&lt;br&gt; &lt;code&gt;backgroundColor&lt;/code&gt; - Color.clear by default: change background color of outside area&lt;br&gt; &lt;code&gt;backgroundView&lt;/code&gt; - custom background builder for outside area (if this one is set &lt;code&gt;backgroundColor&lt;/code&gt; is ignored)&lt;br&gt; &lt;code&gt;isOpaque&lt;/code&gt; - false by default: if true taps do not pass through popup&#39;s background and the popup is displayed on top of navbar. For more see section &#34;Show over navbar&#34;&lt;br&gt; &lt;code&gt;useKeyboardSafeArea&lt;/code&gt; - false by default: if true popup goes up for keyboardHeight when keyboard is displayed &lt;code&gt;dismissCallback&lt;/code&gt; - custom callback to call once the popup is dismissed&lt;/p&gt; &#xA;&lt;h3&gt;Draggable card - sheet&lt;/h3&gt; &#xA;&lt;p&gt;To implement a sheet (like in 4th gif) enable &lt;code&gt;dragToDismiss&lt;/code&gt; on bottom toast (see example project for implementation of the card itself)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.popup(isPresented: $show) {&#xA;    // your content &#xA;} customize: {&#xA;    $0&#xA;        .type (.toast)&#xA;        .position(bottom)&#xA;        .dragToDismiss(true)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;To try PopupView examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repo &lt;code&gt;https://github.com/exyte/PopupView.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open terminal and run &lt;code&gt;cd &amp;lt;PopupViewRepo&amp;gt;/Example/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pod install&lt;/code&gt; to install all dependencies&lt;/li&gt; &#xA; &lt;li&gt;Run open &lt;code&gt;PopupViewExample.xcworkspace/&lt;/code&gt; to open project in the Xcode&lt;/li&gt; &#xA; &lt;li&gt;Try it!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/exyte/PopupView.git&#34;)&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To install &lt;code&gt;PopupView&lt;/code&gt;, simply add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;ExytePopupView&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To integrate &lt;code&gt;PopupView&lt;/code&gt; into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ogdl&#34;&gt;github &#34;Exyte/PopupView&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 15.0+ / macOS 11.0+ / tvOS 14.0+ / watchOS 7.0+&lt;/li&gt; &#xA; &lt;li&gt;Xcode 12+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Our other open source SwiftUI libraries&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/exyte/Grid&#34;&gt;Grid&lt;/a&gt; - The most powerful Grid container&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/ScalingHeaderScrollView&#34;&gt;ScalingHeaderScrollView&lt;/a&gt; - A scroll view with a sticky header which shrinks as you scroll&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/AnimatedTabBar&#34;&gt;AnimatedTabBar&lt;/a&gt; - A tabbar with number of preset animations&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/mediapicker&#34;&gt;MediaPicker&lt;/a&gt; - Customizable media picker&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/chat&#34;&gt;Chat&lt;/a&gt; - Chat UI framework with fully customizable message cells, input view, and a built-in media picker&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/ConcentricOnboarding&#34;&gt;ConcentricOnboarding&lt;/a&gt; - Animated onboarding flow&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/FloatingButton&#34;&gt;FloatingButton&lt;/a&gt; - Floating button menu&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/ActivityIndicatorView&#34;&gt;ActivityIndicatorView&lt;/a&gt; - A number of animated loading indicators&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/ProgressIndicatorView&#34;&gt;ProgressIndicatorView&lt;/a&gt; - A number of animated progress indicators&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/SVGView&#34;&gt;SVGView&lt;/a&gt; - SVG parser&lt;br&gt; &lt;a href=&#34;https://github.com/exyte/LiquidSwipe&#34;&gt;LiquidSwipe&lt;/a&gt; - Liquid navigation animation&lt;/p&gt;</summary>
  </entry>
</feed>