<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-12T02:01:19Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alexwidua/prototypes</title>
    <updated>2023-03-12T02:01:19Z</updated>
    <id>tag:github.com,2023-03-12:/alexwidua/prototypes</id>
    <link href="https://github.com/alexwidua/prototypes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;little monorepo of misc prototypes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prototypes&lt;/h1&gt; &#xA;&lt;p&gt;A little monorepo of prototypes and explorations I&#39;ve shared on &lt;a href=&#34;https://twitter.com/alexwidua&#34;&gt;Twitter&lt;/a&gt;. The prototypes are usually built using React and/or SwiftUI.&lt;/p&gt; &#xA;&lt;h2&gt;Shared Prototypes&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Twitter&lt;/th&gt; &#xA;   &lt;th&gt;Web&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shiny Button ðŸ«³ ðŸª©&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/alexwidua/status/1630998774247030786&#34;&gt;Tweet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://shiny-button.vercel.app/&#34;&gt;shiny-button.vercel.app&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Solar Eclipse ðŸŒ™&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/alexwidua/status/1628435490910179328&#34;&gt;Tweet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://solareclipse.vercel.app/&#34;&gt;solareclipse.vercel.app&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;p&gt;These prototypes are built purely out of curiosity and joy. Expect a lot of hot glue and scraps. I appreciate you checking out this repository and hope that you get something out of it :-)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alfianlosari/ChatGPTSwiftUI</title>
    <updated>2023-03-12T02:01:19Z</updated>
    <id>tag:github.com,2023-03-12:/alfianlosari/ChatGPTSwiftUI</id>
    <link href="https://github.com/alfianlosari/ChatGPTSwiftUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A ChatGPT native iOS, macOS, watchOS, tvOS SwiftUI Application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT SwiftUI iOS, macOS, watchOS, tvOS App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://imagizer.imageshack.com/v2/640x480q90/922/hmlopw.png&#34; alt=&#34;Alt text&#34; title=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a native iOS, macOS, watchOS, tvOS App for interacting with ChatGPT built using SwiftUI and OpenAPI API. It&#39;s using Official ChatGPT endpoint with &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; model.&lt;/p&gt; &#xA;&lt;h2&gt;Separate SPM repo for API only&lt;/h2&gt; &#xA;&lt;p&gt;you can add dependency for &lt;a href=&#34;https://github.com/alfianlosari/ChatGPTSwift&#34;&gt;ChatGPTSwift&lt;/a&gt; to access the API only if you want to integrate into your own app&lt;/p&gt; &#xA;&lt;h2&gt;Video tutorial&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/PLEgTCT20zU&#34;&gt;iOS YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/Wl1cDvwpJoE&#34;&gt;macOS YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/DwXy0gKz1GY&#34;&gt;watchOS YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/7RQHG7GXJ_U&#34;&gt;tvOS YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/9byLhs5hQjI&#34;&gt;Upgrade to Official API YouTube&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requierements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 14&lt;/li&gt; &#xA; &lt;li&gt;Register at openai.com/api&lt;/li&gt; &#xA; &lt;li&gt;Create API Key&lt;/li&gt; &#xA; &lt;li&gt;Paste API key in ContentView where the ChatGPTAPI instance is declared&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>gonzalezreal/swift-markdown-ui</title>
    <updated>2023-03-12T02:01:19Z</updated>
    <id>tag:github.com,2023-03-12:/gonzalezreal/swift-markdown-ui</id>
    <link href="https://github.com/gonzalezreal/swift-markdown-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Display and customize Markdown text in SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MarkdownUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gonzalezreal/MarkdownUI/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/gonzalezreal/MarkdownUI/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgonzalezreal%2Fswift-markdown-ui%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgonzalezreal%2Fswift-markdown-ui%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Display and customize Markdown text in SwiftUI.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#minimum-requirements&#34;&gt;Minimum requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#creating-a-markdown-view&#34;&gt;Creating a Markdown view&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#styling-markdown&#34;&gt;Styling Markdown&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;MarkdownUI is a powerful library for displaying and customizing Markdown text in SwiftUI. It is compatible with the &lt;a href=&#34;https://github.github.com/gfm/&#34;&gt;GitHub Flavored Markdown Spec&lt;/a&gt; and can display images, headings, lists (including task lists), blockquotes, code blocks, tables, and thematic breaks, besides styled text and links.&lt;/p&gt; &#xA;&lt;p&gt;MarkdownUI offers comprehensible theming features to customize how it displays Markdown text. You can use the built-in themes, create your own or override specific text and block styles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownUI@2x.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownUI~dark@2x.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Minimum requirements&lt;/h2&gt; &#xA;&lt;p&gt;You can use MarkdownUI on the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 12.0+&lt;/li&gt; &#xA; &lt;li&gt;iOS 15.0+&lt;/li&gt; &#xA; &lt;li&gt;tvOS 15.0+&lt;/li&gt; &#xA; &lt;li&gt;watchOS 8.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some features, like displaying tables or multi-image paragraphs, require macOS 13.0+, iOS 16.0+, tvOS 16.0+, and watchOS 9.0+.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Creating a Markdown view&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;Markdown&lt;/code&gt; view displays rich structured text using the Markdown syntax. It can display images, headings, lists (including task lists), blockquotes, code blocks, tables, and thematic breaks, besides styled text and links.&lt;/p&gt; &#xA;&lt;p&gt;The simplest way of creating a &lt;code&gt;Markdown&lt;/code&gt; view is to pass a Markdown string to the &lt;code&gt;init(_:baseURL:imageBaseURL:)&lt;/code&gt; initializer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let markdownString = &#34;&#34;&#34;&#xA;  ## Try MarkdownUI&#xA;&#xA;  **MarkdownUI** is a native Markdown renderer for SwiftUI&#xA;  compatible with the&#xA;  [GitHub Flavored Markdown Spec](https://github.github.com/gfm/).&#xA;  &#34;&#34;&#34;&#xA;&#xA;var body: some View {&#xA;  Markdown(markdownString)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownString@2x.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownString~dark@2x.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A more convenient way to create a &lt;code&gt;Markdown&lt;/code&gt; view is by using the &lt;code&gt;init(baseURL:imageBaseURL:content:)&lt;/code&gt; initializer, which takes a Markdown content builder in which you can compose the view content, either by providing Markdown strings or by using an expressive domain-specific language.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;var body: some View {&#xA;  Markdown {&#xA;    &#34;&#34;&#34;&#xA;    ## Using a Markdown Content Builder&#xA;    Use Markdown strings or an expressive domain-specific language&#xA;    to build the content.&#xA;    &#34;&#34;&#34;&#xA;    Heading(.level2) {&#xA;      &#34;Try MarkdownUI&#34;&#xA;    }&#xA;    Paragraph {&#xA;      Strong(&#34;MarkdownUI&#34;)&#xA;      &#34; is a native Markdown renderer for SwiftUI&#34;&#xA;      &#34; compatible with the &#34;&#xA;      InlineLink(&#xA;        &#34;GitHub Flavored Markdown Spec&#34;,&#xA;        destination: URL(string: &#34;https://github.github.com/gfm/&#34;)!&#xA;      )&#xA;      &#34;.&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownContentBuilder@2x.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownContentBuilder~dark@2x.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also create a &lt;code&gt;MarkdownContent&lt;/code&gt; value in your model layer and later create a &lt;code&gt;Markdown&lt;/code&gt; view by passing the content value to the &lt;code&gt;init(_:baseURL:imageBaseURL:)&lt;/code&gt; initializer. The &lt;code&gt;MarkdownContent&lt;/code&gt; value pre-parses the Markdown string preventing the view from doing this step.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Somewhere in the model layer&#xA;let content = MarkdownContent(&#34;You can try **CommonMark** [here](https://spec.commonmark.org/dingus/).&#34;)&#xA;&#xA;// Later in the view layer&#xA;var body: some View {&#xA;  Markdown(self.model.content)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Styling Markdown&lt;/h3&gt; &#xA;&lt;p&gt;Markdown views use a basic default theme to display the contents. For more information, read about the &lt;code&gt;basic&lt;/code&gt; theme.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown {&#xA;  &#34;&#34;&#34;&#xA;  You can quote text with a `&amp;gt;`.&#xA;&#xA;  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a&#xA;  &amp;gt; dog it&#39;s too dark to read.&#xA;&#xA;  â€“ Groucho Marx&#xA;  &#34;&#34;&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/BlockquoteContent@2x.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/BlockquoteContent~dark@2x.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can customize the appearance of Markdown content by applying different themes using the &lt;code&gt;markdownTheme(_:)&lt;/code&gt; modifier. For example, you can apply one of the built-in themes, like &lt;code&gt;gitHub&lt;/code&gt;, to either a Markdown view or a view hierarchy that contains Markdown views.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown {&#xA;  &#34;&#34;&#34;&#xA;  You can quote text with a `&amp;gt;`.&#xA;&#xA;  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a&#xA;  &amp;gt; dog it&#39;s too dark to read.&#xA;&#xA;  â€“ Groucho Marx&#xA;  &#34;&#34;&#34;&#xA;}&#xA;.markdownTheme(.gitHub)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/GitHubBlockquote@2x.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/GitHubBlockquote~dark@2x.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To override a specific text style from the current theme, use the &lt;code&gt;markdownTextStyle(_:textStyle:)&lt;/code&gt; modifier. The following example shows how to override the &lt;code&gt;code&lt;/code&gt; text style.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown {&#xA;  &#34;&#34;&#34;&#xA;  Use `git status` to list all new or modified files&#xA;  that haven&#39;t yet been committed.&#xA;  &#34;&#34;&#34;&#xA;}&#xA;.markdownTextStyle(\.code) {&#xA;  FontFamilyVariant(.monospaced)&#xA;  FontSize(.em(0.85))&#xA;  ForegroundColor(.purple)&#xA;  BackgroundColor(.purple.opacity(0.25))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomInlineCode@2x.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomInlineCode~dark@2x.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;markdownBlockStyle(_:body:)&lt;/code&gt; modifier to override a specific block style. For example, you can override only the &lt;code&gt;blockquote&lt;/code&gt; block style, leaving other block styles untouched.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown {&#xA;  &#34;&#34;&#34;&#xA;  You can quote text with a `&amp;gt;`.&#xA;&#xA;  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a&#xA;  &amp;gt; dog it&#39;s too dark to read.&#xA;&#xA;  â€“ Groucho Marx&#xA;  &#34;&#34;&#34;&#xA;}&#xA;.markdownBlockStyle(\.blockquote) { configuration in&#xA;  configuration.label&#xA;    .padding()&#xA;    .markdownTextStyle {&#xA;      FontCapsVariant(.lowercaseSmallCaps)&#xA;      FontWeight(.semibold)&#xA;      BackgroundColor(nil)&#xA;    }&#xA;    .overlay(alignment: .leading) {&#xA;      Rectangle()&#xA;        .fill(Color.teal)&#xA;        .frame(width: 4)&#xA;    }&#xA;    .background(Color.teal.opacity(0.5))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomBlockquote@2x.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomBlockquote~dark@2x.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Another way to customize the appearance of Markdown content is to create your own theme. To create a theme, start by instantiating an empty &lt;code&gt;Theme&lt;/code&gt; and chain together the different text and block styles in a single expression.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;extension Theme {&#xA;  static let fancy = Theme()&#xA;    .code {&#xA;      FontFamilyVariant(.monospaced)&#xA;      FontSize(.em(0.85))&#xA;    }&#xA;    .link {&#xA;      ForegroundColor(.purple)&#xA;    }&#xA;    // More text styles...&#xA;    .paragraph { label in&#xA;      label&#xA;        .relativeLineSpacing(.em(0.25))&#xA;        .markdownMargin(top: 0, bottom: 16)&#xA;    }&#xA;    .listItem { label in&#xA;      label.markdownMargin(top: .em(0.25))&#xA;    }&#xA;    // More block styles...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swiftpackageindex.com&#34;&gt;Swift Package Index&lt;/a&gt; kindly hosts the online documentation for all versions, available here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui/2.0.1/documentation/markdownui&#34;&gt;2.0.1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;MarkdownUI comes with a few more tricks on the sleeve. You can explore the &lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/&#34;&gt;companion demo project&lt;/a&gt; and discover its complete set of capabilities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/Screenshot.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/Screenshot~dark.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Adding MarkdownUI to a Swift package&lt;/h3&gt; &#xA;&lt;p&gt;To use MarkdownUI in a Swift Package Manager project, add the following line to the dependencies in your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.package(url: &#34;https://github.com/gonzalezreal/swift-markdown-ui&#34;, from: &#34;2.0.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Include &lt;code&gt;&#34;MarkdownUI&#34;&lt;/code&gt; as a dependency for your executable target:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.target(name: &#34;&amp;lt;target&amp;gt;&#34;, dependencies: [&#xA;  .product(name: &#34;MarkdownUI&#34;, package: &#34;swift-markdown-ui&#34;)&#xA;]),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, add &lt;code&gt;import MarkdownUI&lt;/code&gt; to your source code.&lt;/p&gt; &#xA;&lt;h3&gt;Adding MarkdownUI to an Xcode project&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;From the &lt;strong&gt;File&lt;/strong&gt; menu, select &lt;strong&gt;Add Packagesâ€¦&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;https://github.com/gonzalezreal/swift-markdown-ui&lt;/code&gt; into the &lt;em&gt;Search or Enter Package URL&lt;/em&gt; search field&lt;/li&gt; &#xA; &lt;li&gt;Link &lt;strong&gt;MarkdownUI&lt;/strong&gt; to your application target&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>