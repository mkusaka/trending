<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-02T02:05:12Z</updated>
  <subtitle>Weekly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>evanw/thumbhash</title>
    <updated>2023-04-02T02:05:12Z</updated>
    <id>tag:github.com,2023-04-02:/evanw/thumbhash</id>
    <link href="https://github.com/evanw/thumbhash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A very compact representation of an image placeholder&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ThumbHash&lt;/h1&gt; &#xA;&lt;p&gt;A very compact representation of a placeholder for an image. Store it inline with your data and show it while the real image is loading for a smoother loading experience. It&#39;s similar to &lt;a href=&#34;https://github.com/woltapp/blurhash&#34;&gt;BlurHash&lt;/a&gt; but with the following advantages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Encodes more detail in the same space&lt;/li&gt; &#xA; &lt;li&gt;Also encodes the aspect ratio&lt;/li&gt; &#xA; &lt;li&gt;Gives more accurate colors&lt;/li&gt; &#xA; &lt;li&gt;Supports images with alpha&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Despite doing all of these additional things, the code for ThumbHash is still similar in complexity to the code for BlurHash. One potential drawback compared to BlurHash is that the parameters of the algorithm are not configurable (everything is automatically configured).&lt;/p&gt; &#xA;&lt;p&gt;A demo and more information is available here: &lt;a href=&#34;https://evanw.github.io/thumbhash/&#34;&gt;https://evanw.github.io/thumbhash/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Implementations&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains implementations for the following languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/evanw/thumbhash/main/js&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/evanw/thumbhash/main/rust&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/evanw/thumbhash/main/swift&#34;&gt;Swift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/evanw/thumbhash/main/java&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These additional implementations also exist outside of this repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go: &lt;a href=&#34;https://github.com/galdor/go-thumbhash&#34;&gt;https://github.com/galdor/go-thumbhash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Perl: &lt;a href=&#34;https://github.com/mauke/Image-ThumbHash&#34;&gt;https://github.com/mauke/Image-ThumbHash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PHP: &lt;a href=&#34;https://github.com/SRWieZ/thumbhash&#34;&gt;https://github.com/SRWieZ/thumbhash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ruby: &lt;a href=&#34;https://github.com/daibhin/thumbhash&#34;&gt;https://github.com/daibhin/thumbhash&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;If you want to add your own implementation here, you can send a PR that puts a link to your implementation in this README.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alfianlosari/ChatGPTSwift</title>
    <updated>2023-04-02T02:05:12Z</updated>
    <id>tag:github.com,2023-04-02:/alfianlosari/ChatGPTSwift</id>
    <link href="https://github.com/alfianlosari/ChatGPTSwift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Access ChatGPT API using Swift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPTSwift API&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://imagizer.imageshack.com/v2/640x480q90/923/c9MPBA.png&#34; alt=&#34;Alt text&#34; title=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Access OpenAI ChatGPT Official API using Swift. Works on all Apple platforms.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS/tvOS 15 and above&lt;/li&gt; &#xA; &lt;li&gt;macOS 12 and above&lt;/li&gt; &#xA; &lt;li&gt;watchOS 8 and above&lt;/li&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;a href=&#34;https://github.com/alfianlosari/ChatGPTSwift.git&#34;&gt;https://github.com/alfianlosari/ChatGPTSwift.git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cocoapods&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;platform :ios, &#39;15.0&#39;&#xA;use_frameworks!&#xA;&#xA;target &#39;MyApp&#39; do&#xA;  pod &#39;ChatGPTSwift&#39;, &#39;~&amp;gt; 1.3.1&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirement&lt;/h2&gt; &#xA;&lt;p&gt;Register for API key from &lt;a href=&#34;https://openai.com/api&#34;&gt;OpenAI&lt;/a&gt;. Initialize with api key&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let api = ChatGPTAPI(apiKey: &#34;API_KEY&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 APIs: stream and normal&lt;/p&gt; &#xA;&lt;h3&gt;Stream&lt;/h3&gt; &#xA;&lt;p&gt;The server will stream chunks of data until complete, the method &lt;code&gt;AsyncThrowingStream&lt;/code&gt; which you can loop using For-Loop like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Task {&#xA;    do {&#xA;        let stream = try await api.sendMessageStream(text: &#34;What is ChatGPT?&#34;)&#xA;        for try await line in stream {&#xA;            print(line)&#xA;        }&#xA;    } catch {&#xA;        print(error.localizedDescription)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Normal&lt;/h3&gt; &#xA;&lt;p&gt;A normal HTTP request and response lifecycle. Server will send the complete text (it will take more time to response)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Task {&#xA;    do {&#xA;        let response = try await api.sendMessage(text: &#34;What is ChatGPT?&#34;)&#xA;        print(response)&#xA;    } catch {&#xA;        print(error.localizedDescription)&#xA;    }&#xA;}&#xA;        &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Providing extra parameters&lt;/h3&gt; &#xA;&lt;p&gt;Optionally, you can provide the model, system prompt, temperature, and model like so.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let response = try await api.sendMessage(text: &#34;What is ChatGPT?&#34;,&#xA;                                         model: &#34;gpt-4&#34;,&#xA;                                         systemText: &#34;You are a CS Professor&#34;,&#xA;                                         temperature: 0.5)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default values for these parameters are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;model: &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;systemText: &lt;code&gt;You&#39;re a helpful assistant&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;temperature: &lt;code&gt;0.5&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To learn more about those parameters, you can visit the official &lt;a href=&#34;https://platform.openai.com/docs/guides/chat/introduction&#34;&gt;ChatGPT API documentation&lt;/a&gt; and &lt;a href=&#34;https://openai.com/blog/introducing-chatgpt-and-whisper-apis&#34;&gt;ChatGPT API Introduction Page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;History List&lt;/h2&gt; &#xA;&lt;p&gt;The client stores the history list of the conversation that will be included in the new prompt so ChatGPT aware of the previous context of conversation. When sending new prompt, the client will make sure the token count is not exceeding 4096 using &lt;a href=&#34;https://github.com/alfianlosari/GPTEncoder&#34;&gt;GPTEncoder library&lt;/a&gt; to calculate tokens in string, in case it exceeded the token, some of previous conversations will be truncated. In future i will provide an API to specify the token threshold as new gpt-4 model accept much bigger 8k tokens in a prompt.&lt;/p&gt; &#xA;&lt;h3&gt;View Current History List&lt;/h3&gt; &#xA;&lt;p&gt;You can view current history list from the &lt;code&gt;historyList&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;print(api.historyList)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete History List&lt;/h3&gt; &#xA;&lt;p&gt;You can also delete the history list by invoking&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;api.deleteHistoryList()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Replace History List&lt;/h3&gt; &#xA;&lt;p&gt;You can provide your own History List, this will replace the stored history list. Remember not to pass the 4096 tokens threshold.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let myHistoryList = [&#xA;    Message(role: &#34;user&#34;, content: &#34;who is james bond?&#34;)&#xA;    Message(role: &#34;assistant&#34;, content: &#34;secret british agent with codename 007&#34;),&#xA;    Message(role: &#34;user&#34;, content: &#34;which one is the latest movie?&#34;),&#xA;    Message(role: &#34;assistant&#34;, content: &#34;It&#39;s No Time to Die played by Daniel Craig&#34;)&#xA;]&#xA;&#xA;api.replaceHistoryList(with: myHistoryList)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GPT Encoder Lib&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve also created &lt;a href=&#34;https://github.com/alfianlosari/GPTEncoder&#34;&gt;GPTEncoder&lt;/a&gt; Swift BPE Encoder/Decoder for OpenAI GPT Models. A programmatic interface for tokenizing text for OpenAI GPT API.&lt;/p&gt; &#xA;&lt;h2&gt;GPT Tokenizer UI Lib&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve also created &lt;a href=&#34;https://github.com/alfianlosari/GPTTokenizerUI&#34;&gt;GPTTokenizerUI&lt;/a&gt;, a SPM lib you can integrate in your app for providing GUI to input text and show the tokenization results used by GPT API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://imagizer.imageshack.com/v2/640x480q70/922/CEVvrE.png&#34; alt=&#34;Alt text&#34; title=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo Apps&lt;/h2&gt; &#xA;&lt;p&gt;You can check the demo apps for iOS and macOS from the &lt;a href=&#34;https://github.com/alfianlosari/ChatGPTSwiftUI&#34;&gt;SwiftUIChatGPT repo&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MessageKit/MessageKit</title>
    <updated>2023-04-02T02:05:12Z</updated>
    <id>tag:github.com,2023-04-02:/MessageKit/MessageKit</id>
    <link href="https://github.com/MessageKit/MessageKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A community-driven replacement for JSQMessagesViewController&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/master/Assets/mklogo.png&#34; title=&#34;MessageKit logo&#34; width=&#34;270&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A community-driven replacement for JSQMessagesViewController &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://swiftpackageindex.com/MessageKit/MessageKit&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2FMessageKit%2FMessageKit%2Fbadge%3Ftype%3Dswift-versions&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://swiftpackageindex.com/MessageKit/MessageKit&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2FMessageKit%2FMessageKit%2Fbadge%3Ftype%3Dplatforms&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://developer.apple.com/xcode&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Xcode-13-blue.svg?sanitize=true&#34; alt=&#34;Xcode&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/main/LICENSE.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/MessageKit/MessageKit?color=red&#34; alt=&#34;MIT&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/MessageKit/MessageKit/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;Contributions Welcome&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/master/Assets/TypingIndicator.png&#34; title=&#34;MessageKit header&#34; width=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide a &lt;span&gt;🚨&lt;/span&gt;safe&lt;span&gt;🚨&lt;/span&gt; environment for others to learn and grow through Open Source.&lt;/li&gt; &#xA; &lt;li&gt;Make adding Chat&lt;span&gt;💬&lt;/span&gt; to a project easy.&lt;/li&gt; &#xA; &lt;li&gt;Enable beautiful and customizable Chat UI&#39;s.&lt;/li&gt; &#xA; &lt;li&gt;Provide an awesome Open Source project for the iOS open source community.&lt;/li&gt; &#xA; &lt;li&gt;Help others learn.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; - &lt;strong&gt;Recommended&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Swift 5.3 in Xcode 12 &lt;a href=&#34;https://github.com/apple/swift-evolution/raw/master/proposals/0271-package-manager-resources.md&#34;&gt;added support&lt;/a&gt; for assets in Swift Packages. You can &lt;a href=&#34;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&#34;&gt;just add&lt;/a&gt; MessageKit package to your project by entering it&#39;s repository URL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/MessageKit/MessageKit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Older versions of Swift and Xcode don&#39;t support MessageKit via SPM.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/Documentation/MANUAL_INSTALLATION.md&#34;&gt;Manual&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;iOS 13&lt;/strong&gt; or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swift 5.5&lt;/strong&gt; or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For iOS 12 or CocoaPods please use version 3.8.0&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For iOS 11 please use version 3.3.0&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For iOS 9 and iOS 10 please use version 3.1.1&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please have a look at the &lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/Documentation/QuickStart.md&#34;&gt;Quick Start guide&lt;/a&gt; and the &lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/Documentation/FAQs.md&#34;&gt;FAQs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We recommend you start by looking at the &lt;a href=&#34;https://github.com/MessageKit/MessageKit/tree/master/Example&#34;&gt;Example&lt;/a&gt; project or write a question with the &#34;messagekit&#34; tag on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/messagekit&#34;&gt;Stack Overflow&lt;/a&gt;. You can also look at previous issues here on GitHub with the &lt;strong&gt;&#34;Question&#34;&lt;/strong&gt; tag.&lt;/p&gt; &#xA;&lt;p&gt;For more on how to use the MessageInputBar, see the dependency it is based on &lt;a href=&#34;https://github.com/nathantannar4/InputBarAccessoryView&#34;&gt;InputBarAccessoryView&lt;/a&gt;. You can also see this &lt;a href=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/main/%5Bhttps://github.com/MessageKit/MessageKit/raw/master/Documentation/MessageInputBar.md&#34;&gt;short guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out the full documentation &lt;a href=&#34;https://messagekit.github.io/MessageKit/documentation/messagekit&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Cell Structure&lt;/h3&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/master/Assets/CellStructure.png&#34; title=&#34;CellStructure&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Each default cell is a subclass of &lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/Sources/Views/Cells/MessageContentCell.swift&#34;&gt;&lt;code&gt;MessageContentCell&lt;/code&gt;&lt;/a&gt; which has 7 parts. From top down we have a: &lt;code&gt;cellTopLabel&lt;/code&gt;, &lt;code&gt;messageTopLabel&lt;/code&gt;, &lt;code&gt;messageContainerView&lt;/code&gt;, &lt;code&gt;messageBottomLabel&lt;/code&gt;, &lt;code&gt;cellBottomLabel&lt;/code&gt; with the &lt;code&gt;avatarView&lt;/code&gt; and &lt;code&gt;accessoryView&lt;/code&gt; on either side respectively. Above we see the basic &lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/Sources/Views/Cells/TextMessageCell.swift&#34;&gt;&lt;code&gt;TextMessageCell&lt;/code&gt;&lt;/a&gt; which uses a &lt;code&gt;MessageLabel&lt;/code&gt; as its main content.&lt;/p&gt; &#xA;&lt;p&gt;This structure will allow you to create a layout that suits your needs as you can customize the size, appearance and padding of each. If you need something more advanced you can implement a custom cell, which we show how to do in the &lt;a href=&#34;https://github.com/MessageKit/MessageKit/tree/master/Example&#34;&gt;Example&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;h3&gt;InputBarAccessoryView Structure&lt;/h3&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/master/Assets/InputBarAccessoryViewLayout.png&#34; title=&#34;InputBarAccessoryViewLayout&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;InputBarAccessoryView&lt;/code&gt;, 3rd party dependency from &lt;a href=&#34;https://github.com/nathantannar4/InputBarAccessoryView&#34;&gt;InputBarAccessoryView&lt;/a&gt; is a flexible and robust way of creating any kind of input layout you wish. Check the repo and examples there for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Default Cells&lt;/h2&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/master/Assets/ExampleA.png&#34; title=&#34;Example A&#34; height=&#34;400&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/master/Assets/ExampleB.png&#34; title=&#34;Example B&#34; height=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The type of cell rendered for a given message is based on the &lt;code&gt;MessageKind&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;public enum MessageKind {&#xA;    case text(String) // TextMessageCell&#xA;    case attributedText(NSAttributedString) // TextMessageCell&#xA;    case photo(MediaItem) // MediaMessageCell&#xA;    case video(MediaItem) // MediaMessageCell&#xA;    case location(LocationItem) // LocationMessageCell&#xA;    case emoji(String) // TextMessageCell&#xA;    case audio(AudioItem) // AudioMessageCell&#xA;    case contact(ContactItem) // ContactMessageCell&#xA;    case linkPreview(LinkItem) // LinkPreviewMessageCell&#xA;&#xA;    /// A custom message.&#xA;    /// - Note: Using this case requires that you implement the following methods and handle this case:&#xA;    ///   - MessagesDataSource: customCell(for message: MessageType, at indexPath: IndexPath, in messagesCollectionView: MessagesCollectionView) -&amp;gt; UICollectionViewCell&#xA;    ///   - MessagesLayoutDelegate: customCellSizeCalculator(for message: MessageType, at indexPath: IndexPath, in messagesCollectionView: MessagesCollectionView) -&amp;gt; CellSizeCalculator&#xA;    case custom(Any?)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you choose to use the &lt;code&gt;.custom&lt;/code&gt; kind you are responsible for all of the cells layout. Any &lt;code&gt;UICollectionViewCell&lt;/code&gt; can be returned for custom cells which means any of the styling you provide from the &lt;code&gt;MessageDisplayDelegate&lt;/code&gt; will not effect your custom cell. Even if you subclass your cell from &lt;code&gt;MessageContentCell&lt;/code&gt;. &lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/Documentation/CUSTOM_CELLS.md&#34;&gt;Read more about custom cells&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/Documentation/QuickStart.md#messagekind&#34;&gt;Read more about the cases on the Quick Start guide.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MessageKit/MessageKit/actions?query=workflow%3A%22Tests%22&#34;&gt;&lt;img src=&#34;https://github.com/MessageKit/MessageKit/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MessageKit/MessageKit/actions?query=workflow%3A%22Build+Framework%22&#34;&gt;&lt;img src=&#34;https://github.com/MessageKit/MessageKit/workflows/Build%20Framework/badge.svg?sanitize=true&#34; alt=&#34;Build framework&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MessageKit/MessageKit/actions?query=workflow%3A%22PR+Example+app%22&#34;&gt;&lt;img src=&#34;https://github.com/MessageKit/MessageKit/workflows/Build%20Example%20app/badge.svg?sanitize=true&#34; alt=&#34;Build example app&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MessageKit/MessageKit/actions?query=workflow%3A%22Danger%22&#34;&gt;&lt;img src=&#34;https://github.com/MessageKit/MessageKit/workflows/Danger/badge.svg?sanitize=true&#34; alt=&#34;Danger&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Great! Look over these things first.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please read our &lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guide Lines&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Come join us on &lt;a href=&#34;https://join.slack.com/t/messagekit/shared_invite/MjI4NzIzNzMyMzU0LTE1MDMwODIzMDUtYzllYzIyNTU4MA&#34;&gt;Slack&lt;/a&gt; and 🗣 don&#39;t be a stranger.&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://github.com/MessageKit/MessageKit/issues&#34;&gt;current issues&lt;/a&gt; and see if you can tackle any of those.&lt;/li&gt; &#xA; &lt;li&gt;Download the project and check out the current code base. Suggest any improvements by opening a new issue.&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/MessageKit/MessageKit/main/#whats-next&#34;&gt;What&#39;s Next&lt;/a&gt; section &lt;span&gt;👇&lt;/span&gt; to see where we are headed.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://stackoverflow.com/questions/tagged/messagekit&#34;&gt;StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/realm/SwiftLint&#34;&gt;SwiftLint&lt;/a&gt; to keep yourself in &lt;img alt=&#34;neckbeard&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/neckbeard.png?v8&#34;&gt;) style.&lt;/li&gt; &#xA; &lt;li&gt;Be kind and helpful.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What&#39;s Next?&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/MessageKit/MessageKit/releases&#34;&gt;Releases&lt;/a&gt; to see what we are working on next.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Have a question or an issue about MessageKit? Create an &lt;a href=&#34;https://github.com/MessageKit/MessageKit/issues/new&#34;&gt;issue&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Interested in contributing to MessageKit? Click here to join our &lt;a href=&#34;https://join.slack.com/t/messagekit/shared_invite/MjI4NzIzNzMyMzU0LTE1MDMwODIzMDUtYzllYzIyNTU4MA&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Apps using this library&lt;/h3&gt; &#xA;&lt;p&gt;Add your app to the list of apps using this library and make a pull request.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.classdojo.com&#34;&gt;ClassDojo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/id1607268774&#34;&gt;Connect Messaging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ring4.com&#34;&gt;Ring4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/ru/app/id1180117334&#34;&gt;Formacar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/hopup-airsoft-community/id1128903141?mt=8&#34;&gt;HopUp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mediquo.com&#34;&gt;MediQuo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/it/app/rappresentame/id1330914443&#34;&gt;RappresentaMe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/wiseeyes/id1391408511?mt=8&#34;&gt;WiseEyes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/khoren93/SwiftHub&#34;&gt;SwiftHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://studievenn.no&#34;&gt;Studievenn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/np/app/smoove-text/id1362792811&#34;&gt;SmooveText&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/coyo-engage/id1341588804&#34;&gt;COYO Engage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hitchpin.com&#34;&gt;HitchPin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/charge-running-live-coaching/id1204578360&#34;&gt;Charge Running&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/id573328837&#34;&gt;HER&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/girlfriend-plus/id1011637655&#34;&gt;Girlfriend Plus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/id1477310602&#34;&gt;Noon Happen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/cz/app/id1596773834&#34;&gt;XPASS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.heiaheia.com&#34;&gt;HeiaHeia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Please provide attribution, it is greatly appreciated.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Core Team&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sd10&#34;&gt;@SD10&lt;/a&gt;, Steven Deutsch&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nathantannar4&#34;&gt;@nathantannar4&lt;/a&gt;, Nathan Tannar&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhongwuzw&#34;&gt;@zhongwuzw&lt;/a&gt;, Wu Zhong&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/austinwright&#34;&gt;@austinwright&lt;/a&gt;, Austin Wright&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kaspik&#34;&gt;@kaspik&lt;/a&gt;, Jakub Kaspar&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/martinpucik&#34;&gt;@martinpucik&lt;/a&gt;, Martin Pucik&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to &lt;a href=&#34;https://github.com/MessageKit/MessageKit/graphs/contributors&#34;&gt;&lt;strong&gt;the contributors&lt;/strong&gt;&lt;/a&gt; of this project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MessageKit is released under the &lt;a href=&#34;https://github.com/MessageKit/MessageKit/raw/master/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;p&gt;Inspired by &lt;a href=&#34;https://github.com/jessesquires/JSQMessagesViewController&#34;&gt;JSQMessagesViewController&lt;/a&gt; &lt;span&gt;👈&lt;/span&gt; &lt;span&gt;💯&lt;/span&gt;&lt;/p&gt;</summary>
  </entry>
</feed>