<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-01T02:23:09Z</updated>
  <subtitle>Monthly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Dimillian/IceCubesApp</title>
    <updated>2023-07-01T02:23:09Z</updated>
    <id>tag:github.com,2023-07-01:/Dimillian/IceCubesApp</id>
    <link href="https://github.com/Dimillian/IceCubesApp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A SwiftUI Mastodon client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IceCubesApp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/us/app/ice-cubes-for-mastodon/id6444915884&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Dimillian/IceCubesApp/main/Images/download_on_the_app_store.svg?sanitize=true&#34; alt=&#34;Download on the App Store&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Dimillian/IceCubesApp/main/Images/promo.png&#34;&gt; &#xA;&lt;p&gt;IceCubesApp is an open source application for accessing the decentralized social network Mastodon! It&#39;s built entirely in SwiftUI, making it fast, lightweight, and easy to use.&lt;/p&gt; &#xA;&lt;p&gt;You can connect to any Mastodon instance and browse your timeline, interact with other users, and post updates and media.&lt;/p&gt; &#xA;&lt;p&gt;The project is split into different Swift Packages to make it easier to manage and maintain the codebase. Each package is focused on a specific aspect of the application, such as the UI, network communication, or data models. This modular approach allows for easier collaboration and ensures that the code is organized and easy to understand.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s a great starting point for learning SwiftUI. The app covers many of the basic concepts of SwiftUI, such as building layouts, working with data, and handling user interaction. By exploring the code, you can gain a solid understanding of how to use SwiftUI in your daily life. Plus, the open source nature of IceCubesApp means that you can see how real-world applications are built and get a sense of best practices for using SwiftUI.&lt;/p&gt; &#xA;&lt;p&gt;The architecture is straightforward MVVM for most parts, no redux on this one ;)&lt;/p&gt; &#xA;&lt;p&gt;Please note that IceCubesApp is currently in an early stage of development and as such, there are many features that are still missing. While the app is functional and can be used to browse and interact with Mastodon, there are still many features that are planned for the future.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Dimillian/IceCubesApp/main/IceCubesApp/Assets.xcassets/AppIcon.appiconset/144.png?&#34; alt=&#34;Icon&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building the project&lt;/h2&gt; &#xA;&lt;p&gt;To build the project, you need to clone the repo and create a copy of the included &lt;code&gt;.xcconfig&lt;/code&gt; file to create your config before you can compile the project. &lt;strong&gt;Otherwise, you will get an error.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here are the steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA; &lt;li&gt;In the same folder that contains the &lt;code&gt;IceCubesApp.xcconfig.template&lt;/code&gt;, run this command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp IceCubesApp.xcconfig.template IceCubesApp.xcconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Fill in the &lt;code&gt;DEVELOPMENT_TEAM&lt;/code&gt; and &lt;code&gt;BUNDLE_ID_PREFIX&lt;/code&gt; values. The first should have your Apple Team ID (which you can find by logging into the Apple Developer Portal). The latter is your domain in reverse notation or whatever you use as the prefix for your projects.&lt;/li&gt; &#xA; &lt;li&gt;Save your changes, and then you should be able to compile the project without any issues.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>utmapp/UTM</title>
    <updated>2023-07-01T02:23:09Z</updated>
    <id>tag:github.com,2023-07-01:/utmapp/UTM</id>
    <link href="https://github.com/utmapp/UTM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Virtual machines for iOS and macOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UTM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/utmapp/UTM/actions?query=event%3Arelease+workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/utmapp/UTM/workflows/Build/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It is possible to invent a single machine which can be used to compute any computable sequence.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;-- &lt;cite&gt;Alan Turing, 1936&lt;/cite&gt;&lt;/p&gt; &#xA;&lt;p&gt;UTM is a full featured system emulator and virtual machine host for iOS and macOS. It is based off of QEMU. In short, it allows you to run Windows, Linux, and more on your Mac, iPhone, and iPad. More information at &lt;a href=&#34;https://getutm.app/&#34;&gt;https://getutm.app/&lt;/a&gt; and &lt;a href=&#34;https://mac.getutm.app/&#34;&gt;https://mac.getutm.app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;450px&#34; alt=&#34;UTM running on an iPhone&#34; src=&#34;https://raw.githubusercontent.com/utmapp/UTM/main/screen.png&#34;&gt; &lt;br&gt; &lt;img width=&#34;450px&#34; alt=&#34;UTM running on a MacBook&#34; src=&#34;https://raw.githubusercontent.com/utmapp/UTM/main/screenmac.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full system emulation (MMU, devices, etc) using QEMU&lt;/li&gt; &#xA; &lt;li&gt;30+ processors supported including x86_64, ARM64, and RISC-V&lt;/li&gt; &#xA; &lt;li&gt;VGA graphics mode using SPICE and QXL&lt;/li&gt; &#xA; &lt;li&gt;Text terminal mode&lt;/li&gt; &#xA; &lt;li&gt;USB devices&lt;/li&gt; &#xA; &lt;li&gt;JIT based acceleration using QEMU TCG&lt;/li&gt; &#xA; &lt;li&gt;Frontend designed from scratch for macOS 11 and iOS 11+ using the latest and greatest APIs&lt;/li&gt; &#xA; &lt;li&gt;Create, manage, run VMs directly from your device&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional macOS Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hardware accelerated virtualization using Hypervisor.framework and QEMU&lt;/li&gt; &#xA; &lt;li&gt;Boot macOS guests with Virtualization.framework on macOS 12+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;UTM SE&lt;/h2&gt; &#xA;&lt;p&gt;UTM/QEMU requires dynamic code generation (JIT) for maximum performance. JIT on iOS devices require either a jailbroken device, or one of the various workarounds found for specific versions of iOS (see &#34;Install&#34; for more details).&lt;/p&gt; &#xA;&lt;p&gt;UTM SE (&#34;slow edition&#34;) uses a &lt;a href=&#34;https://github.com/ktemkin/qemu/raw/with_tcti/tcg/aarch64-tcti/README.md&#34;&gt;threaded interpreter&lt;/a&gt; which performs better than a traditional interpreter but still slower than JIT. This technique is similar to what &lt;a href=&#34;https://github.com/ish-app/ish&#34;&gt;iSH&lt;/a&gt; does for dynamic execution. As a result, UTM SE does not require jailbreaking or any JIT workarounds and can be sideloaded as a regular app.&lt;/p&gt; &#xA;&lt;p&gt;To optimize for size and build times, only the following architectures are included in UTM SE: ARM, PPC, RISC-V, and x86 (all with both 32-bit and 64-bit variants).&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;UTM (SE) for iOS: &lt;a href=&#34;https://getutm.app/install/&#34;&gt;https://getutm.app/install/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;UTM is also available for macOS: &lt;a href=&#34;https://mac.getutm.app/&#34;&gt;https://mac.getutm.app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/utmapp/UTM/main/Documentation/MacDevelopment.md&#34;&gt;macOS Development&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/utmapp/UTM/main/Documentation/iOSDevelopment.md&#34;&gt;iOS Development&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Related&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ish-app/ish&#34;&gt;iSH&lt;/a&gt;: emulates a usermode Linux terminal interface for running x86 Linux applications on iOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/holzschu/a-shell&#34;&gt;a-shell&lt;/a&gt;: packages common Unix commands and utilities built natively for iOS and accessible through a terminal interface&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;UTM is distributed under the permissive Apache 2.0 license. However, it uses several (L)GPL components. Most are dynamically linked but the gstreamer plugins are statically linked and parts of the code are taken from qemu. Please be aware of this if you intend on redistributing this application.&lt;/p&gt; &#xA;&lt;p&gt;Some icons made by &lt;a href=&#34;https://www.freepik.com&#34;&gt;Freepik&lt;/a&gt; from &lt;a href=&#34;https://www.flaticon.com/&#34;&gt;www.flaticon.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, UTM frontend depends on the following MIT/BSD License components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hackiftekhar/IQKeyboardManager&#34;&gt;IQKeyboardManager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/migueldeicaza/SwiftTerm&#34;&gt;SwiftTerm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/weichsel/ZIPFoundation&#34;&gt;ZIP Foundation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/futuretap/InAppSettingsKit&#34;&gt;InAppSettingsKit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Continuous integration hosting is provided by &lt;a href=&#34;https://www.macstadium.com/opensource&#34;&gt;MacStadium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.macstadium.com&#34;&gt;&lt;img src=&#34;https://uploads-ssl.webflow.com/5ac3c046c82724970fc60918/5c019d917bba312af7553b49_MacStadium-developerlogo.png&#34; alt=&#34;MacStadium logo&#34; width=&#34;250&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apple/swift-syntax</title>
    <updated>2023-07-01T02:23:09Z</updated>
    <id>tag:github.com,2023-07-01:/apple/swift-syntax</id>
    <link href="https://github.com/apple/swift-syntax" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A set of Swift libraries for parsing, inspecting, generating, and transforming Swift source code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SwiftSyntax&lt;/h1&gt; &#xA;&lt;p&gt;SwiftSyntax is a set of Swift libraries for parsing, inspecting, generating, and transforming Swift source code.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can read SwiftSyntax’s documentation on &lt;a href=&#34;https://swiftpackageindex.com/apple/swift-syntax/documentation&#34;&gt;swiftpackageindex.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A great way to interactively explore the SwiftSyntax tree of a source file is &lt;a href=&#34;https://swift-ast-explorer.com&#34;&gt;https://swift-ast-explorer.com&lt;/a&gt;, developed by &lt;a href=&#34;https://github.com/kishikawakatsumi&#34;&gt;@kishikawakatsumi&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adding SwiftSyntax as a Dependency&lt;/h2&gt; &#xA;&lt;h3&gt;Trunk Development (main)&lt;/h3&gt; &#xA;&lt;p&gt;The mainline branch of SwiftSyntax tracks the latest developments. It is not an official release, and is subject to rapid changes in APIs and behaviors. To use it, add this repository to the &lt;code&gt;Package.swift&lt;/code&gt; manifest of your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// swift-tools-version:5.7&#xA;import PackageDescription&#xA;&#xA;let package = Package(&#xA;  name: &#34;MyTool&#34;,&#xA;  dependencies: [&#xA;    .package(url: &#34;https://github.com/apple/swift-syntax.git&#34;, branch: &#34;main&#34;),&#xA;  ],&#xA;  targets: [&#xA;    .target(name: &#34;MyTool&#34;, dependencies: [&#xA;      .product(name: &#34;SwiftSyntax&#34;, package: &#34;swift-syntax&#34;),&#xA;    ]),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mainline SwiftSyntax also includes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SwiftParser&lt;/code&gt; for natively parsing source code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SwiftOperators&lt;/code&gt; for folding SwiftSyntax trees containing operators&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SwiftSyntaxBuilder&lt;/code&gt; for generating Swift code with a result builder-style interface&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Releases&lt;/h3&gt; &#xA;&lt;p&gt;Releases of SwiftSyntax are aligned with corresponding language and tooling releases and are stable. To use them, add this repository to the &lt;code&gt;Package.swift&lt;/code&gt; manifest of your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// swift-tools-version:5.7&#xA;import PackageDescription&#xA;&#xA;let package = Package(&#xA;  name: &#34;MyTool&#34;,&#xA;  dependencies: [&#xA;    .package(url: &#34;https://github.com/apple/swift-syntax.git&#34;, exact: &#34;&amp;lt;#Specify Release tag#&amp;gt;&#34;),&#xA;  ],&#xA;  targets: [&#xA;    .target(name: &#34;MyTool&#34;, dependencies: [&#xA;      .product(name: &#34;SwiftSyntax&#34;, package: &#34;swift-syntax&#34;),&#xA;    ]),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;&amp;lt;#Specify Release tag#&amp;gt;&lt;/code&gt; by the version of SwiftSyntax that you want to use (see the following table for mapping details).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Xcode Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Swift Release Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;SwiftSyntax Release Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 14.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.8-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;508.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 14.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.7-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50700.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 13.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.6-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50600.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 13.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.5-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50500.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 12.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.4-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50400.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 12.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.3-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50300.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 11.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.2-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50200.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;SwiftSyntax uses &lt;a href=&#34;https://developer.apple.com/documentation/docc&#34;&gt;DocC&lt;/a&gt; bundles for its documentation. To view rendered documentation in Xcode, open the SwiftSyntax package and select&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Product &amp;gt; Build Documentation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Associated articles are written in markdown, and can be viewed in a browser, text editor, or IDE.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/Sources/SwiftSyntax/Documentation.docc&#34;&gt;SwiftSyntax&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/Sources/SwiftParser/SwiftParser.docc&#34;&gt;SwiftParser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/Sources/SwiftOperators/SwiftOperators.docc&#34;&gt;SwiftOperators&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Start contributing to SwiftSyntax see &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/CONTRIBUTING.md&#34;&gt;this guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you should hit any issues while using SwiftSyntax, we appreciate bug reports on &lt;a href=&#34;https://github.com/apple/swift-syntax/issues&#34;&gt;GitHub Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Bazel&lt;/h2&gt; &#xA;&lt;p&gt;SwiftSyntax provides an experimental &lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt; build configuration, maintained by Keith Smiley. To use it you can pull the source archive from the relevant release tag into your &lt;code&gt;WORKSPACE&lt;/code&gt; and depend on the libraries you need from the &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/BUILD.bazel&#34;&gt;&lt;code&gt;BUILD.bazel&lt;/code&gt;&lt;/a&gt; file. Each library also has an associated &lt;code&gt;Library_opt&lt;/code&gt; target (such as &lt;code&gt;SwiftSyntax_opt&lt;/code&gt;) which forces SwiftSyntax to always build with optimizations enabled. This may help local runtime performance at the cost of debuggability, and initial build time. Please tag any &lt;a href=&#34;https://github.com/apple/swift-syntax/issues&#34;&gt;issues&lt;/a&gt; related to the Bazel configuration with the label &#34;Bazel&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>