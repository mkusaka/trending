<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-01T02:24:39Z</updated>
  <subtitle>Monthly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Alamofire/Alamofire</title>
    <updated>2023-10-01T02:24:39Z</updated>
    <id>tag:github.com,2023-10-01:/Alamofire/Alamofire</id>
    <link href="https://github.com/Alamofire/Alamofire" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Elegant HTTP Networking in Swift&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/Resources/AlamofireLogo.png&#34; alt=&#34;Alamofire: Elegant Networking in Swift&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://img.shields.io/badge/Swift-5.6_5.7_5.8_5.9-Orange?style=flat-square&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift-5.6_5.7_5.8_5.9-orange?style=flat-square&#34; alt=&#34;Swift&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/badge/Platforms-macOS_iOS_tvOS_watchOS_vision_OS_Linux_Windows_Android-Green?style=flat-square&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Platforms-macOS_iOS_tvOS_watchOS_visionOS_Linux_Windows_Android-yellowgreen?style=flat-square&#34; alt=&#34;Platforms&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/cocoapods/v/Alamofire.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Alamofire.svg?style=flat-square&#34; alt=&#34;CocoaPods Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat-square&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square&#34; alt=&#34;Swift Package Manager&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://forums.swift.org/c/related-projects/alamofire/37&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift_Forums-Alamofire-orange?style=flat-square&#34; alt=&#34;Swift Forums&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alamofire is an HTTP networking library written in Swift.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#component-libraries&#34;&gt;Component Libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#migration-guides&#34;&gt;Migration Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#communication&#34;&gt;Communication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#using-alamofire&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#introduction&#34;&gt;&lt;strong&gt;Introduction -&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#making-requests&#34;&gt;Making Requests&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-handling&#34;&gt;Response Handling&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-validation&#34;&gt;Response Validation&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-caching&#34;&gt;Response Caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;HTTP -&lt;/strong&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#http-methods&#34;&gt;HTTP Methods&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md##request-parameters-and-parameter-encoders&#34;&gt;Parameters and Parameter Encoder&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#http-headers&#34;&gt;HTTP Headers&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#authentication&#34;&gt;Authentication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Large Data -&lt;/strong&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#downloading-data-to-a-file&#34;&gt;Downloading Data to a File&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#uploading-data-to-a-server&#34;&gt;Uploading Data to a Server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Tools -&lt;/strong&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#statistical-metrics&#34;&gt;Statistical Metrics&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#curl-command-output&#34;&gt;cURL Command Output&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md&#34;&gt;Advanced Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;URL Session -&lt;/strong&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#session&#34;&gt;Session Manager&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#sessiondelegate&#34;&gt;Session Delegate&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#request&#34;&gt;Request&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Routing -&lt;/strong&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#routing-requests&#34;&gt;Routing Requests&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#adapting-and-retrying-requests-with-requestinterceptor&#34;&gt;Adapting and Retrying Requests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Model Objects -&lt;/strong&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#customizing-response-handlers&#34;&gt;Custom Response Handlers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Advanced Concurrency -&lt;/strong&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#using-alamofire-with-swift-concurrency&#34;&gt;Swift Concurrency&lt;/a&gt; and &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#using-alamofire-with-combine&#34;&gt;Combine&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Connection -&lt;/strong&gt; &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#security&#34;&gt;Security&lt;/a&gt;, &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#network-reachability&#34;&gt;Network Reachability&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#open-radars&#34;&gt;Open Radars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#donations&#34;&gt;Donations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chainable Request / Response Methods&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Swift Concurrency Support Back to iOS 13, macOS 10.15, tvOS 13, and watchOS 6.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Combine Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; URL / JSON Parameter Encoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Upload File / Data / Stream / MultipartFormData&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Download File using Request or Resume Data&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Authentication with &lt;code&gt;URLCredential&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; HTTP Response Validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Upload and Download Progress Closures with Progress&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cURL Command Output&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamically Adapt and Retry Requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; TLS Certificate and Public Key Pinning&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Network Reachability&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Comprehensive Unit and Integration Test Coverage&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://alamofire.github.io/Alamofire&#34;&gt;Complete Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Write Requests Fast!&lt;/h2&gt; &#xA;&lt;p&gt;Alamofire&#39;s compact syntax and extensive feature set allow requests with powerful features like automatic retry to be written in just a few lines of code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Automatic String to URL conversion, Swift concurrency support, and automatic retry.&#xA;let response = await AF.request(&#34;https://httpbin.org/get&#34;, interceptor: .retryPolicy)&#xA;                       // Automatic HTTP Basic Auth.&#xA;                       .authenticate(username: &#34;user&#34;, password: &#34;pass&#34;)&#xA;                       // Caching customization.&#xA;                       .cacheResponse(using: .cache)&#xA;                       // Redirect customization.&#xA;                       .redirect(using: .follow)&#xA;                       // Validate response code and Content-Type.&#xA;                       .validate()&#xA;                       // Produce a cURL command for the request.&#xA;                       .cURLDescription { description in&#xA;                         print(description)&#xA;                       }&#xA;                       // Automatic Decodable support with background parsing.&#xA;                       .serializingDecodable(DecodableType.self)&#xA;                       // Await the full response with metrics and a parsed body.&#xA;                       .response&#xA;// Detailed response description for easy debugging.&#xA;debugPrint(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Component Libraries&lt;/h2&gt; &#xA;&lt;p&gt;In order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the &lt;a href=&#34;https://github.com/Alamofire/Foundation&#34;&gt;Alamofire Software Foundation&lt;/a&gt; to bring additional functionality to the Alamofire ecosystem.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/AlamofireImage&#34;&gt;AlamofireImage&lt;/a&gt; - An image library including image response serializers, &lt;code&gt;UIImage&lt;/code&gt; and &lt;code&gt;UIImageView&lt;/code&gt; extensions, custom image filters, an auto-purging in-memory cache, and a priority-based image downloading system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/AlamofireNetworkActivityIndicator&#34;&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire. It contains configurable delay timers to help mitigate flicker and can support &lt;code&gt;URLSession&lt;/code&gt; instances not managed by Alamofire.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Minimum Swift Version&lt;/th&gt; &#xA;   &lt;th&gt;Installation&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/td&gt; &#xA;   &lt;td&gt;5.6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#cocoapods&#34;&gt;CocoaPods&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#carthage&#34;&gt;Carthage&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#manually&#34;&gt;Manual&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fully Tested&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;Latest Only&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Building But Unsupported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;Latest Only&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Building But Unsupported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;Latest Only&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Building But Unsupported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Known Issues on Linux and Windows&lt;/h4&gt; &#xA;&lt;p&gt;Alamofire builds on Linux, Windows, and Android but there are missing features and many issues in the underlying &lt;code&gt;swift-corelibs-foundation&lt;/code&gt; that prevent full functionality and may cause crashes. These include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ServerTrustManager&lt;/code&gt; and associated certificate functionality is unavailable, so there is no certificate pinning and no client certificate support.&lt;/li&gt; &#xA; &lt;li&gt;Various methods of HTTP authentication may crash, including HTTP Basic and HTTP Digest. Crashes may occur if responses contain server challenges.&lt;/li&gt; &#xA; &lt;li&gt;Cache control through &lt;code&gt;CachedResponseHandler&lt;/code&gt; and associated APIs is unavailable, as the underlying delegate methods aren&#39;t called.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; are never gathered.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Due to these issues, Alamofire is unsupported on Linux, Windows, and Android. Please report any crashes to the &lt;a href=&#34;https://bugs.swift.org&#34;&gt;Swift bug reporter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Migration Guides&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%205.0%20Migration%20Guide.md&#34;&gt;Alamofire 5.0 Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%204.0%20Migration%20Guide.md&#34;&gt;Alamofire 4.0 Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%203.0%20Migration%20Guide.md&#34;&gt;Alamofire 3.0 Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%202.0%20Migration%20Guide.md&#34;&gt;Alamofire 2.0 Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;need help with making network requests&lt;/strong&gt; using Alamofire, use &lt;a href=&#34;https://stackoverflow.com/questions/tagged/alamofire&#34;&gt;Stack Overflow&lt;/a&gt; and tag &lt;code&gt;alamofire&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you need to &lt;strong&gt;find or understand an API&lt;/strong&gt;, check &lt;a href=&#34;http://alamofire.github.io/Alamofire/&#34;&gt;our documentation&lt;/a&gt; or &lt;a href=&#34;https://developer.apple.com/documentation/foundation/url_loading_system&#34;&gt;Apple&#39;s documentation for &lt;code&gt;URLSession&lt;/code&gt;&lt;/a&gt;, on top of which Alamofire is built.&lt;/li&gt; &#xA; &lt;li&gt;If you need &lt;strong&gt;help with an Alamofire feature&lt;/strong&gt;, use &lt;a href=&#34;https://forums.swift.org/c/related-projects/alamofire&#34;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to &lt;strong&gt;discuss Alamofire best practices&lt;/strong&gt;, use &lt;a href=&#34;https://forums.swift.org/c/related-projects/alamofire&#34;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to &lt;strong&gt;discuss a feature request&lt;/strong&gt;, use &lt;a href=&#34;https://forums.swift.org/c/related-projects/alamofire&#34;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue here on GitHub and follow the guide. The more detail the better!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Alamofire&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ogdl&#34;&gt;github &#34;Alamofire/Alamofire&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler.&lt;/p&gt; &#xA;&lt;p&gt;Once you have your Swift package set up, adding Alamofire as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/Alamofire/Alamofire.git&#34;, .upToNextMajor(from: &#34;5.8.0&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer not to use any of the aforementioned dependency managers, you can integrate Alamofire into your project manually.&lt;/p&gt; &#xA;&lt;h4&gt;Embedded Framework&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command &#34;if&#34; your project is not initialized as a git repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add Alamofire as a git &lt;a href=&#34;https://git-scm.com/docs/git-submodule&#34;&gt;submodule&lt;/a&gt; by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application&#39;s Xcode project.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;It should appear nested underneath your application&#39;s blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; in the Project Navigator and verify the deployment target matches that of your application target.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the &#34;Targets&#34; heading in the sidebar.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the tab bar at the top of that window, open the &#34;General&#34; panel.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the &#34;Embedded Binaries&#34; section.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt;, or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;And that&#39;s it!&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;The &lt;code&gt;Alamofire.framework&lt;/code&gt; is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Before contributing to Alamofire, please read the instructions detailed in our &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Open Radars&lt;/h2&gt; &#xA;&lt;p&gt;The following radars have some effect on the current implementation of Alamofire.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.openradar.me/radar?id=5517037090635776&#34;&gt;&lt;code&gt;rdar://21349340&lt;/code&gt;&lt;/a&gt; - Compiler throwing warning due to toll-free bridging issue in the test case&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rdar://26870455&lt;/code&gt; - Background URL Session Configurations do not work in the simulator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rdar://26849668&lt;/code&gt; - Some URLProtocol APIs do not properly handle &lt;code&gt;URLRequest&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resolved Radars&lt;/h2&gt; &#xA;&lt;p&gt;The following radars have been resolved over time after being filed against the Alamofire project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.openradar.me/radar?id=5010235949318144&#34;&gt;&lt;code&gt;rdar://26761490&lt;/code&gt;&lt;/a&gt; - Swift string interpolation causing memory leak with common usage. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(Resolved): 9/1/17 in Xcode 9 beta 6.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://openradar.appspot.com/radar?id=4942308441063424&#34;&gt;&lt;code&gt;rdar://36082113&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; failing to link on watchOS 3.0+ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(Resolved): Just add &lt;code&gt;CFNetwork&lt;/code&gt; to your linked frameworks.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FB7624529&lt;/code&gt; - &lt;code&gt;urlSession(_:task:didFinishCollecting:)&lt;/code&gt; never called on watchOS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(Resolved): Metrics now collected on watchOS 7+.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;What&#39;s the origin of the name Alamofire?&lt;/h3&gt; &#xA;&lt;p&gt;Alamofire is named after the &lt;a href=&#34;https://aggie-horticulture.tamu.edu/wildseed/alamofire.html&#34;&gt;Alamo Fire flower&lt;/a&gt;, a hybrid variant of the Bluebonnet, the official state flower of Texas.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Alamofire is owned and maintained by the &lt;a href=&#34;http://alamofire.org&#34;&gt;Alamofire Software Foundation&lt;/a&gt;. You can follow them on Twitter at &lt;a href=&#34;https://twitter.com/AlamofireSF&#34;&gt;@AlamofireSF&lt;/a&gt; for project updates and releases.&lt;/p&gt; &#xA;&lt;h3&gt;Security Disclosure&lt;/h3&gt; &#xA;&lt;p&gt;If you believe you have identified a security vulnerability with Alamofire, you should report it as soon as possible via email to &lt;a href=&#34;mailto:security@alamofire.org&#34;&gt;security@alamofire.org&lt;/a&gt;. Please do not post it to a public issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/Alamofire/Foundation#members&#34;&gt;ASF&lt;/a&gt; is looking to raise money to officially stay registered as a federal non-profit organization. Registering will allow Foundation members to gain some legal protections and also allow us to put donations to use, tax-free. Sponsoring the ASF will enable us to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pay our yearly legal fees to keep the non-profit in good status&lt;/li&gt; &#xA; &lt;li&gt;Pay for our mail servers to help us stay on top of all questions and security issues&lt;/li&gt; &#xA; &lt;li&gt;Potentially fund test servers to make it easier for us to test the edge cases&lt;/li&gt; &#xA; &lt;li&gt;Potentially fund developers to work on one of our projects full-time&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The community adoption of the ASF libraries has been amazing. We are greatly humbled by your enthusiasm around the projects and want to continue to do everything we can to move the needle forward. With your continued support, the ASF will be able to improve its reach and also provide better legal safety for the core members. If you use any of our libraries for work, see if your employers would be interested in donating. Any amount you can donate, whether once or monthly, to help us reach our goal would be greatly appreciated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/Alamofire&#34;&gt;Sponsor Alamofire&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://macstadium.com&#34;&gt;MacStadium&lt;/a&gt; provides Alamofire with a free, hosted Mac mini.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Alamofire/Alamofire/master/Resources/MacStadiumLogo.png&#34; alt=&#34;Powered by MacStadium&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Alamofire is released under the MIT license. &lt;a href=&#34;https://github.com/Alamofire/Alamofire/raw/master/LICENSE&#34;&gt;See LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>XcodesOrg/xcodes</title>
    <updated>2023-10-01T02:24:39Z</updated>
    <id>tag:github.com,2023-10-01:/XcodesOrg/xcodes</id>
    <link href="https://github.com/XcodesOrg/xcodes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The best command-line tool to install and switch between multiple versions of Xcode.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;xcodes&lt;/h1&gt; &#xA;&lt;p&gt;The best command-line tool to install and switch between multiple versions of Xcode.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you&#39;re looking for an app version of &lt;code&gt;xcodes&lt;/code&gt;, try &lt;a href=&#34;https://github.com/XcodesOrg/XcodesApp&#34;&gt;Xcodes.app&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/XcodesOrg/xcodes/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI Status&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/XcodesOrg/xcodes/main/Header.png&#34; alt=&#34;Header Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🎉&lt;/span&gt; Announcment&lt;/h3&gt; &#xA;&lt;p&gt;Xcodes is now part of the &lt;code&gt;XcodesOrg&lt;/code&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/XcodesOrg/xcodes/main/nextstep.md&#34;&gt;read more here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Homebrew (Preferred)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install xcodesorg/made/xcodes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These are Developer ID-signed and notarized release builds and don&#39;t require Xcode to already be installed in order to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other methods:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Download a release&lt;/summary&gt; &#xA; &lt;p&gt;Download the latest release from the &lt;a href=&#34;https://github.com/XcodesOrg/xcodes/releases&#34;&gt;Releases&lt;/a&gt; page. These are Developer ID-signed release builds and don&#39;t require Xcode to already be installed in order to use.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using &lt;a href=&#34;https://github.com/yonaskolb/Mint&#34;&gt;Mint&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mint install XcodesOrg/xcodes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Build from source&lt;/summary&gt; &#xA; &lt;p&gt;Building from source requires Xcode 12.0 or later, so it&#39;s not an option for setting up a computer from scratch.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/XcodesOrg/xcodes&#xA;cd xcodes&#xA;make install&#xA;# or, if /usr/local/ isn&#39;t in your PATH&#xA;PREFIX=/your/install/directory make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;While installing, you may get the following output:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;swift build&#xA;error: terminated(72): xcrun --sdk macosx --find xctest output:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If that occurs, it means you need to select a version of Xcode. You can do this with &lt;code&gt;xcode-select&lt;/code&gt; or by choosing a Command Line Tools option in Xcode&#39;s preferences Locations tab.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Install Xcode :&lt;/h3&gt; &#xA;&lt;p&gt;Install a specific version of Xcode using a command like one of these:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;xcodes install 10.2.1&#xA;xcodes install 11 Beta 7&#xA;xcodes install 11.2 GM seed&#xA;xcodes install 9.0 --path ~/Archive/Xcode_9.xip&#xA;xcodes install --latest-prerelease&#xA;xcodes install --latest --directory &#34;/Volumes/Bag Of Holding/&#34;&#xA;xcodes install --latest --experimental-unxip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll then be prompted to enter your Apple ID username and password. You can also provide these with the &lt;code&gt;XCODES_USERNAME&lt;/code&gt; and &lt;code&gt;XCODES_PASSWORD&lt;/code&gt; environment variables.&lt;/p&gt; &#xA;&lt;p&gt;After successfully authenticating, xcodes will save your Apple ID password into the keychain and will remember your Apple ID for future use. If you need to use a different Apple ID than the one that&#39;s remembered, set the &lt;code&gt;XCODES_USERNAME&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;xcodes will download and install the version you asked for so that it&#39;s ready to use.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;(1/6) Downloading Xcode 11.2.0: 100%&#xA;(2/6) Unarchiving Xcode (This can take a while)&#xA;(3/6) Moving Xcode to /Applications/Xcode-11.2.0.app&#xA;(4/6) Moving Xcode archive Xcode-11.2.0.xip to the Trash&#xA;(5/6) Checking security assessment and code signing&#xA;(6/6) Finishing installation&#xA;xcodes requires superuser privileges in order to finish installation.&#xA;macOS User Password:&#xA;&#xA;Xcode 11.2.0 has been installed to /Applications/Xcode-11.2.0.app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have &lt;a href=&#34;https://aria2.github.io&#34;&gt;aria2&lt;/a&gt; installed (it&#39;s available in Homebrew, &lt;code&gt;brew install aria2&lt;/code&gt;), then xcodes will default to use it for downloads. It uses up to 16 connections to download Xcode 3-5x faster than URLSession.&lt;/p&gt; &#xA;&lt;p&gt;Xcode will be installed to /Applications by default, but you can provide the path to a different directory with the &lt;code&gt;--directory&lt;/code&gt; option or the &lt;code&gt;XCODES_DIRECTORY&lt;/code&gt; environment variable. All of the xcodes commands support this option, like &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;uninstall&lt;/code&gt;, so you can manage Xcode versions that aren&#39;t in /Applications. xcodes supports having all of your Xcode versions installed in &lt;em&gt;one&lt;/em&gt; directory, wherever that may be.&lt;/p&gt; &#xA;&lt;h3&gt;Install Runtimes :&lt;/h3&gt; &#xA;&lt;p&gt;Run this command line to display the available runtimes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;xcodes runtimes --include-betas&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the wanted Runtime (ex. iOS 17.0-beta1)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;xcodes runtimes install &#34;iOS 17.0-beta1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;.xcode-version&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We recommend the creation of a &lt;code&gt;.xcode-version&lt;/code&gt; file to explicitly declare and store the Xcode version to be used by your CI environment as well as your team.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;13.4.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/XcodesOrg/xcodes/main/XCODE_VERSION.md&#34;&gt;the proposal&lt;/a&gt; of &lt;code&gt;.xcode-version&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;download &amp;lt;version&amp;gt;&lt;/code&gt;: Download a specific version of Xcode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;install &amp;lt;version&amp;gt;&lt;/code&gt;: Download and install a specific version of Xcode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;installed&lt;/code&gt;: List the versions of Xcode that are installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;list&lt;/code&gt;: List all versions of Xcode that are available to install&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;select&lt;/code&gt;: Change the selected Xcode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uninstall&lt;/code&gt;: Uninstall a specific version of Xcode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;update&lt;/code&gt;: Update the list of available versions of Xcode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;version&lt;/code&gt;: Print the version number of xcodes itself&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;signout&lt;/code&gt;: Clears the stored username and password&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Experimental Unxip - for faster unxipping&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to the amazing work by &lt;a href=&#34;https://github.com/saagarjha/unxip&#34;&gt;saagarjhi&lt;/a&gt; - Xcodes now includes the ability to unxip up to 70% faster on some systems.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;xcodes install --latest --experimental-unxip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shell Completion Scripts&lt;/h3&gt; &#xA;&lt;p&gt;xcodes can generate completion scripts which allow you to press the tab key on your keyboard to autocomplete commands and arguments when typing an xcodes command. The steps to install a completion script depend on the shell that you use. More information about installation instructions for different shells and the underlying implementation is available in the &lt;a href=&#34;https://github.com/apple/swift-argument-parser/raw/main/Sources/ArgumentParser/Documentation.docc/Articles/InstallingCompletionScripts.md&#34;&gt;swift-argument-parser repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Zsh, with oh-my-zsh:&lt;/summary&gt; &#xA; &lt;p&gt;Run the following commands:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir ~/.oh-my-zsh/completions&#xA;xcodes --generate-completion-script &amp;gt; ~/.oh-my-zsh/completions/_xcodes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need Xcode 13 in order to build and run xcodes.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using Xcode&lt;/summary&gt; Even though xcodes is a command-line app, all of the normal functionality works in Xcode, like building, running, and running tests. You can even type text into Xcode&#39;s console when it prompts you for input like your Apple ID or 2FA code. &#xA; &lt;p&gt;When running xcodes from Xcode, if you want to run a particular command or pass some arguments, you can hold the option key to present a sheet with more options. This means you&#39;d use &lt;kbd&gt;Option&lt;/kbd&gt; + &lt;kbd&gt;Command&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt; or hold &lt;kbd&gt;Option&lt;/kbd&gt; while clicking the Run button. Here you can add, remove, and toggle arguments that will be passed to xcodes when it&#39;s launched.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/XcodesOrg/xcodes/main/XcodeRunSheet.png&#34; alt=&#34;Xcode Edit Scheme Screen&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using Swift command line tools&lt;/summary&gt; You can also use the Swift command line tools once you have Xcode installed: &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Build: &lt;code&gt;swift build&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Run: &lt;code&gt;swift run&lt;/code&gt;, or commands like &lt;code&gt;swift run xcodes list&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Run tests: &lt;code&gt;swift test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;There&#39;s a Makefile to help build xcodes for distribution. We already do this for you in order to provide Developer ID-signed and notarized release builds via Homebrew (see &lt;a href=&#34;https://raw.githubusercontent.com/XcodesOrg/xcodes/main/#installation&#34;&gt;Installation&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Releasing a new version of xcodes&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Bump the version number in Version.swift, commit the change, and tag it&#xA;vim Sources/XcodesKit/Version.swift&#xA;git add Sources/XcodesKit/Version.swift&#xA;git commit -m &#34;Bump version to $VERSION&#34;&#xA;git tag -asm &#34;$VERSION&#34; &#34;$VERSION&#34;&#xA;&#xA;# Clean first&#xA;make clean&#xA;&#xA;# Make a release build of xcodes, sign it, and zip it&#xA;make zip&#xA;# Create a Homebrew bottle&#xA;make bottle VERSION=&#34;$VERSION&#34;&#xA;&#xA;# Notarize the release build&#xA;# This can take a while&#xA;make notarize \&#xA;    TEAMID=&#34;ABC123&#34;&#xA;&#xA;# Push the new version bump commit and tag&#xA;git push --follow-tags&#xA;&#xA;# Edit the draft release created by Release Drafter to point at the new tag&#xA;# Set the release title to the new version&#xA;# Add the xcodes.zip and xcodes-$VERSION.mojave.tar.gz files to the release&#xA;# Publish the release&#xA;&#xA;# Update the Homebrew Bottle: https://github.com/XcodesOrg/homebrew-made/blob/master/Formula/xcodes.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Notable design decisions are recorded in &lt;a href=&#34;https://raw.githubusercontent.com/XcodesOrg/xcodes/main/DECISIONS.md&#34;&gt;DECISIONS.md&lt;/a&gt;. The Apple authentication flow is described in &lt;a href=&#34;https://raw.githubusercontent.com/XcodesOrg/xcodes/main/Apple.paw&#34;&gt;Apple.paw&lt;/a&gt;, which will allow you to play with the API endpoints that are involved using the &lt;a href=&#34;https://paw.cloud&#34;&gt;Paw&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xcpretty/xcode-install&#34;&gt;&lt;code&gt;xcode-install&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt;fastlane/spaceship&lt;/a&gt; both deserve credit for figuring out the hard parts of what makes this possible.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mattkiazyk&#34;&gt;Matt Kiazyk&lt;/a&gt; - &lt;a href=&#34;https://www.twitter.com/mattkiazyk&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mozilla-mobile/firefox-ios</title>
    <updated>2023-10-01T02:24:39Z</updated>
    <id>tag:github.com,2023-10-01:/mozilla-mobile/firefox-ios</id>
    <link href="https://github.com/mozilla-mobile/firefox-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firefox for iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Firefox for iOS &lt;a href=&#34;https://codebeat.co/projects/github-com-mozilla-firefox-ios&#34;&gt;&lt;img src=&#34;https://codebeat.co/badges/67e58b6d-bc89-4f22-ba8f-7668a9c15c5a&#34; alt=&#34;codebeat badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/mozilla-mobile/firefox-ios/branch/main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/mozilla-mobile/firefox-ios/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Download on the &lt;a href=&#34;https://apps.apple.com/app/firefox-web-browser/id989804926&#34;&gt;App Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;This branch (main)&lt;/h2&gt; &#xA;&lt;p&gt;This branch works with &lt;a href=&#34;https://developer.apple.com/download/all/?q=xcode&#34;&gt;Xcode 14.3.0&lt;/a&gt;, Swift 5.8 and supports iOS 14 and above.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please note:&lt;/em&gt; Both Intel and M1 macs are supported 🎉 and we use swift package manager.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure you aim your pull requests in the right direction.&lt;/p&gt; &#xA;&lt;p&gt;For bug fixes and features for a specific release, use the version branch.&lt;/p&gt; &#xA;&lt;h2&gt;Getting involved&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to participate in this open source project. We love Pull Requests, Issue Reports, Feature Requests or any kind of positive contribution. Please read the &lt;a href=&#34;https://www.mozilla.org/en-US/about/governance/policies/participation/&#34;&gt;Mozilla Community Participation Guidelines&lt;/a&gt; and our &lt;a href=&#34;https://github.com/mozilla-mobile/firefox-ios/raw/main/CONTRIBUTING.md&#34;&gt;Firefox for iOS contributing guidelines&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat: See &lt;a href=&#34;https://chat.mozilla.org/#/room/#fx-ios:mozilla.org&#34;&gt;#fx-ios&lt;/a&gt; for general discussion, or open a &lt;a href=&#34;https://github.com/mozilla-mobile/firefox-ios/discussions&#34;&gt;Github discussion&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Issues: &lt;a href=&#34;https://github.com/mozilla-mobile/firefox-ios/issues/new/choose&#34;&gt;File a new issue&lt;/a&gt; • &lt;a href=&#34;https://github.com/mozilla-mobile/firefox-ios/issues&#34;&gt;Existing bugs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Want to contribute on the codebase but don&#39;t know where to start? Here is a list of &lt;a href=&#34;https://github.com/mozilla-mobile/firefox-ios/labels/Contributor%20OK&#34;&gt;issues that are contributor friendly&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building the code&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the latest &lt;a href=&#34;https://developer.apple.com/xcode/downloads/&#34;&gt;Xcode developer tools&lt;/a&gt; from Apple.&lt;/li&gt; &#xA; &lt;li&gt;Install, &lt;a href=&#34;https://brew.sh&#34;&gt;Brew&lt;/a&gt;, Node, and a Python3 virtualenv for localization scripts: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew update&#xA;brew install node&#xA;pip3 install virtualenv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone the repository: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/mozilla-mobile/firefox-ios&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install Node.js dependencies, build user scripts and update content blocker: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd firefox-ios&#xA;sh ./bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Client.xcodeproj&lt;/code&gt; in Xcode.&lt;/li&gt; &#xA; &lt;li&gt;Make sure to select the &lt;code&gt;Fennec&lt;/code&gt; &lt;a href=&#34;https://developer.apple.com/documentation/xcode/build-system?changes=_2&#34;&gt;scheme&lt;/a&gt; in Xcode.&lt;/li&gt; &#xA; &lt;li&gt;Select the destination device you want to build on.&lt;/li&gt; &#xA; &lt;li&gt;Run the app with &lt;code&gt;Cmd + R&lt;/code&gt; or by pressing the &lt;code&gt;build and run&lt;/code&gt; button.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;⚠️ Important: In case you have dependencies issues with SPM, please try the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode -&amp;gt; File -&amp;gt; Packages -&amp;gt; Reset Package Caches&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building User Scripts&lt;/h2&gt; &#xA;&lt;p&gt;User Scripts (JavaScript injected into the &lt;code&gt;WKWebView&lt;/code&gt;) are compiled, concatenated, and minified using &lt;a href=&#34;https://webpack.js.org/&#34;&gt;webpack&lt;/a&gt;. User Scripts to be aggregated are placed in the following directories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-none&#34;&gt;/Client&#xA;|-- /Frontend&#xA;    |-- /UserContent&#xA;        |-- /UserScripts&#xA;            |-- /AllFrames&#xA;            |   |-- /AtDocumentEnd&#xA;            |   |-- /AtDocumentStart&#xA;            |-- /MainFrame&#xA;                |-- /AtDocumentEnd&#xA;                |-- /AtDocumentStart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This reduces the total possible number of User Scripts down to four. The compiled output from concatenating and minifying the User Scripts placed in these folders resides in &lt;code&gt;/Client/Assets&lt;/code&gt; and are named accordingly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AllFramesAtDocumentEnd.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AllFramesAtDocumentStart.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MainFrameAtDocumentEnd.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MainFrameAtDocumentStart.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To simplify the build process, these compiled files are checked-in to this repository. When adding or editing User Scripts, these files can be re-compiled with &lt;code&gt;webpack&lt;/code&gt; manually. This requires Node.js to be installed, and all required &lt;code&gt;npm&lt;/code&gt; packages can be installed by running &lt;code&gt;npm install&lt;/code&gt; in the project&#39;s root directory. User Scripts can be compiled by running the following &lt;code&gt;npm&lt;/code&gt; command in the root directory of the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;This Source Code Form is subject to the terms of the Mozilla Public&#xA;License, v. 2.0. If a copy of the MPL was not distributed with this&#xA;file, You can obtain one at https://mozilla.org/MPL/2.0/&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>