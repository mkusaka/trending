<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-01T01:55:58Z</updated>
  <subtitle>Monthly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kean/Pulse</title>
    <updated>2024-08-01T01:55:58Z</updated>
    <id>tag:github.com,2024-08-01:/kean/Pulse</id>
    <link href="https://github.com/kean/Pulse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Network logger for Apple platforms&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;2100&#34; alt=&#34;promo-main&#34; src=&#34;https://github.com/kean/Pulse/assets/1567433/d8d588db-e165-4beb-9aec-c4a93e59ba29&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pulse&lt;/strong&gt; is a powerful logging system for Apple Platforms. Native. Built with SwiftUI.&lt;/p&gt; &#xA;&lt;p&gt;Record and inspect logs and &lt;code&gt;URLSession&lt;/code&gt; network requests right from your iOS app. Share logs and view them in &lt;a href=&#34;https://pulselogger.com&#34;&gt;Pulse Pro&lt;/a&gt; or use remote logging to see them in real time. Logs are stored locally and never leave your devices.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Pulse&lt;/code&gt; is not just a tool, it&#39;s a framework. It records events from &lt;code&gt;URLSession&lt;/code&gt; or from frameworks that use it, such as &lt;a href=&#34;https://github.com/Alamofire/Alamofire&#34;&gt;Alamofire&lt;/a&gt; or &lt;a href=&#34;https://github.com/kean/Get&#34;&gt;Get&lt;/a&gt;, and displays them using &lt;code&gt;PulseUI&lt;/code&gt; views that you integrate directly into your app. This way Pulse console is available for everyone who has your test builds. You or your QA team can view the logs on the device and easily share them to attach to bug reports.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Pulse is &lt;strong&gt;not&lt;/strong&gt; a network proxy. If you need one, check out &lt;a href=&#34;https://proxyman.io&#34;&gt;&lt;strong&gt;Proxyman&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The best way to start using Pulse is with the &lt;a href=&#34;https://kean-docs.github.io/pulse/documentation/pulse/gettingstarted&#34;&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt; guide. There are many ways to use it and to learn more, see the dedicated docs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kean-docs.github.io/pulse/documentation/pulse/&#34;&gt;&lt;strong&gt;Pulse Docs&lt;/strong&gt;&lt;/a&gt; describe how to integrate the main framework and enable logging&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kean-docs.github.io/pulseui/documentation/pulseui/&#34;&gt;&lt;strong&gt;PulseUI Docs&lt;/strong&gt;&lt;/a&gt; contains information about adding the debug menu and console into your app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kean-docs.github.io/pulseloghandler/documentation/pulseloghandler/&#34;&gt;&lt;strong&gt;PulseLogHandler Docs&lt;/strong&gt;&lt;/a&gt; describe how to use Pulse as &lt;a href=&#34;https://github.com/apple/swift-log&#34;&gt;SwiftLog&lt;/a&gt; backend&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://kean.blog/pulse/home&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1567433/184552639-cf6765df-b5af-416b-95d3-0204e32df9d6.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Pulse Pro&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pulselogger.com&#34;&gt;&lt;strong&gt;Pulse Pro&lt;/strong&gt;&lt;/a&gt; is a professional macOS app that allows you to view logs in real time. The app is designed to be flexible, expansive, and precise while using all the familiar macOS patterns. It makes it easy to navigate large log files with table and text modes, filters, an all-new network inspector, JSON filters, and more.&lt;/p&gt; &#xA;&lt;h2&gt;Minimum Requirements&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Pulse&lt;/th&gt; &#xA;   &lt;th&gt;Swift&lt;/th&gt; &#xA;   &lt;th&gt;Xcode&lt;/th&gt; &#xA;   &lt;th&gt;Platforms&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pulse 4.0&lt;/td&gt; &#xA;   &lt;td&gt;Swift 5.7&lt;/td&gt; &#xA;   &lt;td&gt;Xcode 14.1&lt;/td&gt; &#xA;   &lt;td&gt;iOS 14.0, tvOS 15.0, watchOS 8.0, macOS 12.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pulse 3.0&lt;/td&gt; &#xA;   &lt;td&gt;Swift 5.7&lt;/td&gt; &#xA;   &lt;td&gt;Xcode 14.1&lt;/td&gt; &#xA;   &lt;td&gt;iOS 14.0, tvOS 14.0, watchOS 8.0, macOS 12.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Pulse is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pointfreeco/swift-dependencies</title>
    <updated>2024-08-01T01:55:58Z</updated>
    <id>tag:github.com,2024-08-01:/pointfreeco/swift-dependencies</id>
    <link href="https://github.com/pointfreeco/swift-dependencies" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A dependency management library inspired by SwiftUI&#39;s &#34;environment.&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;A dependency management library inspired by SwiftUI&#39;s &#34;environment.&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pointfreeco/swift-dependencies/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/pointfreeco/swift-dependencies/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://pointfree.co/slack-invite&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-chat-informational.svg?label=Slack&amp;amp;logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswift-dependencies%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswift-dependencies%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#learn-more&#34;&gt;Learn More&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#alternatives&#34;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;This library was motivated and designed over the course of many episodes on &lt;a href=&#34;https://www.pointfree.co&#34;&gt;Point-Free&lt;/a&gt;, a video series exploring functional programming and the Swift language, hosted by &lt;a href=&#34;https://twitter.com/mbrandonw&#34;&gt;Brandon Williams&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/stephencelis&#34;&gt;Stephen Celis&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.pointfree.co&#34;&gt; &lt;img alt=&#34;video poster image&#34; src=&#34;https://d3rccdn33rt8ze.cloudfront.net/episodes/0209.jpeg&#34; width=&#34;600&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Dependencies are the types and functions in your application that need to interact with outside systems that you do not control. Classic examples of this are API clients that make network requests to servers, but also seemingly innocuous things such as &lt;code&gt;UUID&lt;/code&gt; and &lt;code&gt;Date&lt;/code&gt; initializers, file access, user defaults, and even clocks and timers, can all be thought of as dependencies.&lt;/p&gt; &#xA;&lt;p&gt;You can get really far in application development without ever thinking about dependency management (or, as some like to call it, &#34;dependency injection&#34;), but eventually uncontrolled dependencies can cause many problems in your code base and development cycle:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Uncontrolled dependencies make it &lt;strong&gt;difficult to write fast, deterministic tests&lt;/strong&gt; because you are susceptible to the vagaries of the outside world, such as file systems, network connectivity, internet speed, server uptime, and more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Many dependencies &lt;strong&gt;do not work well in SwiftUI previews&lt;/strong&gt;, such as location managers and speech recognizers, and some &lt;strong&gt;do not work even in simulators&lt;/strong&gt;, such as motion managers, and more. This prevents you from being able to easily iterate on the design of features if you make use of those frameworks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dependencies that interact with 3rd party, non-Apple libraries (such as Firebase, web socket libraries, network libraries, etc.) tend to be heavyweight and take a &lt;strong&gt;long time to compile&lt;/strong&gt;. This can slow down your development cycle.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For these reasons, and a lot more, it is highly encouraged for you to take control of your dependencies rather than letting them control you.&lt;/p&gt; &#xA;&lt;p&gt;But, controlling a dependency is only the beginning. Once you have controlled your dependencies, you are faced with a whole set of new problems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;How can you &lt;strong&gt;propagate dependencies&lt;/strong&gt; throughout your entire application in a way that is more ergonomic than explicitly passing them around everywhere, but safer than having a global dependency?&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How can you &lt;strong&gt;override dependencies&lt;/strong&gt; for just one portion of your application? This can be handy for overriding dependencies for tests and SwiftUI previews, as well as specific user flows such as onboarding experiences.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How can you be sure you &lt;strong&gt;overrode &lt;em&gt;all&lt;/em&gt; dependencies&lt;/strong&gt; a feature uses in tests? It would be incorrect for a test to mock out some dependencies but leave others as interacting with the outside world.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This library addresses all of the points above, and much, &lt;em&gt;much&lt;/em&gt; more.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;The library allows you to register your own dependencies, but it also comes with many controllable dependencies out of the box (see &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/dependencyvalues#dependency-values&#34;&gt;&lt;code&gt;DependencyValues&lt;/code&gt;&lt;/a&gt; for a full list), and there is a good chance you can immediately make use of one. If you are using &lt;code&gt;Date()&lt;/code&gt;, &lt;code&gt;UUID()&lt;/code&gt;, &lt;code&gt;Task.sleep&lt;/code&gt;, or Combine schedulers directly in your feature&#39;s logic, you can already start to use this library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;final class FeatureModel: ObservableObject {&#xA;  @Dependency(\.continuousClock) var clock  // Controllable way to sleep a task&#xA;  @Dependency(\.date.now) var now           // Controllable way to ask for current date&#xA;  @Dependency(\.mainQueue) var mainQueue    // Controllable scheduling on main queue&#xA;  @Dependency(\.uuid) var uuid              // Controllable UUID creation&#xA;&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once your dependencies are declared, rather than reaching out to the &lt;code&gt;Date()&lt;/code&gt;, &lt;code&gt;UUID()&lt;/code&gt;, etc., directly, you can use the dependency that is defined on your feature&#39;s model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;final class FeatureModel: ObservableObject {&#xA;  // ...&#xA;&#xA;  func addButtonTapped() async throws {&#xA;    try await self.clock.sleep(for: .seconds(1))  // 👈 Don&#39;t use &#39;Task.sleep&#39;&#xA;    self.items.append(&#xA;      Item(&#xA;        id: self.uuid(),  // 👈 Don&#39;t use &#39;UUID()&#39;&#xA;        name: &#34;&#34;,&#xA;        createdAt: self.now  // 👈 Don&#39;t use &#39;Date()&#39;&#xA;      )&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That is all it takes to start using controllable dependencies in your features. With that little bit of upfront work done you can start to take advantage of the library&#39;s powers.&lt;/p&gt; &#xA;&lt;p&gt;For example, you can easily control these dependencies in tests. If you want to test the logic inside the &lt;code&gt;addButtonTapped&lt;/code&gt; method, you can use the &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/withdependencies(_:operation:)-4uz6m&#34;&gt;&lt;code&gt;withDependencies&lt;/code&gt;&lt;/a&gt; function to override any dependencies for the scope of one single test. It&#39;s as easy as 1-2-3:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func testAdd() async throws {&#xA;  let model = withDependencies {&#xA;    // 1️⃣ Override any dependencies that your feature uses.&#xA;    $0.clock = ImmediateClock()&#xA;    $0.date.now = Date(timeIntervalSinceReferenceDate: 1234567890)&#xA;    $0.uuid = .incrementing&#xA;  } operation: {&#xA;    // 2️⃣ Construct the feature&#39;s model&#xA;    FeatureModel()&#xA;  }&#xA;&#xA;  // 3️⃣ The model now executes in a controlled environment of dependencies,&#xA;  //    and so we can make assertions against its behavior.&#xA;  try await model.addButtonTapped()&#xA;  XCTAssertEqual(&#xA;    model.items,&#xA;    [&#xA;      Item(&#xA;        id: UUID(uuidString: &#34;00000000-0000-0000-0000-000000000000&#34;)!,&#xA;        name: &#34;&#34;,&#xA;        createdAt: Date(timeIntervalSinceReferenceDate: 1234567890)&#xA;      )&#xA;    ]&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we controlled the &lt;code&gt;date&lt;/code&gt; dependency to always return the same date, and we controlled the &lt;code&gt;uuid&lt;/code&gt; dependency to return an auto-incrementing UUID every time it is invoked, and we even controlled the &lt;code&gt;clock&lt;/code&gt; dependency using an &lt;a href=&#34;https://pointfreeco.github.io/swift-clocks/main/documentation/clocks/immediateclock&#34;&gt;&lt;code&gt;ImmediateClock&lt;/code&gt;&lt;/a&gt; to squash all of time into a single instant. If we did not control these dependencies this test would be very difficult to write since there is no way to accurately predict what will be returned by &lt;code&gt;Date()&lt;/code&gt; and &lt;code&gt;UUID()&lt;/code&gt;, and we&#39;d have to wait for real world time to pass, making the test slow.&lt;/p&gt; &#xA;&lt;p&gt;But, controllable dependencies aren&#39;t only useful for tests. They can also be used in Xcode previews. Suppose the feature above makes use of a clock to sleep for an amount of time before something happens in the view. If you don&#39;t want to literally wait for time to pass in order to see how the view changes, you can override the clock dependency to be an &#34;immediate&#34; clock using the &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/withdependencies(_:operation:)-4uz6m&#34;&gt;&lt;code&gt;withDependencies&lt;/code&gt;&lt;/a&gt; helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct Feature_Previews: PreviewProvider {&#xA;  static var previews: some View {&#xA;    FeatureView(&#xA;      model: withDependencies {&#xA;        $0.clock = ImmediateClock()&#xA;      } operation: {&#xA;        FeatureModel()&#xA;      }&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will make it so that the preview uses an immediate clock when run, but when running in a simulator or on device it will still use a live &lt;code&gt;ContinuousClock&lt;/code&gt;. This makes it possible to override dependencies just for previews without affecting how your app will run in production.&lt;/p&gt; &#xA;&lt;p&gt;That is the basics to getting started with using the library, but there is still a lot more you can do. You can learn more in depth about the library by exploring the &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies&#34;&gt;documentation&lt;/a&gt; and articles:&lt;/p&gt; &#xA;&lt;h4&gt;Getting started&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/quickstart&#34;&gt;Quick start&lt;/a&gt; (Same as the information above)&lt;/strong&gt;: Learn the basics of getting started with the library before diving deep into all of its features.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/whataredependencies&#34;&gt;What are dependencies?&lt;/a&gt;&lt;/strong&gt;: Learn what dependencies are, how they complicate your code, and why you want to control them.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Essentials&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/usingdependencies&#34;&gt;Using dependencies&lt;/a&gt;&lt;/strong&gt;: Learn how to use the dependencies that are registered with the library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/registeringdependencies&#34;&gt;Registering dependencies&lt;/a&gt;&lt;/strong&gt;: Learn how to register your own dependencies with the library so that they immediately become available from any part of your code base.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/livepreviewtest&#34;&gt;Live, preview, and test dependencies&lt;/a&gt;&lt;/strong&gt;: Learn how to provide different implementations of your dependencies for use in the live application, as well as in Xcode previews, and even in tests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/testing&#34;&gt;Testing&lt;/a&gt;&lt;/strong&gt;: One of the main reasons to control dependencies is to allow for easier testing. Learn some tips and tricks for writing better tests with the library.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Advanced&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/designingdependencies&#34;&gt;Designing dependencies&lt;/a&gt;&lt;/strong&gt;: Learn techniques on designing your dependencies so that they are most flexible for injecting into features and overriding for tests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/overridingdependencies&#34;&gt;Overriding dependencies&lt;/a&gt;&lt;/strong&gt;: Learn how dependencies can be changed at runtime so that certain parts of your application can use different dependencies.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/lifetimes&#34;&gt;Dependency lifetimes&lt;/a&gt;&lt;/strong&gt;: Learn about the lifetimes of dependencies, how to prolong the lifetime of a dependency, and how dependencies are inherited.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies/singleentrypointsystems&#34;&gt;Single entry point systems&lt;/a&gt;&lt;/strong&gt;: Learn about &#34;single entry point&#34; systems, and why they are best suited for this dependencies library, although it is possible to use the library with non-single entry point systems.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;We rebuilt Apple&#39;s &lt;a href=&#34;https://developer.apple.com/tutorials/app-dev-training/getting-started-with-scrumdinger&#34;&gt;Scrumdinger&lt;/a&gt; demo application using modern, best practices for SwiftUI development, including using this library to control dependencies on file system access, timers and speech recognition APIs. That demo can be found &lt;a href=&#34;https://github.com/pointfreeco/syncups&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The latest documentation for the Dependencies APIs is available &lt;a href=&#34;https://swiftpackageindex.com/pointfreeco/swift-dependencies/main/documentation/dependencies&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can add Dependencies to an Xcode project by adding it to your project as a package.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/pointfreeco/swift-dependencies&#34;&gt;https://github.com/pointfreeco/swift-dependencies&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you want to use Dependencies in a &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;SwiftPM&lt;/a&gt; project, it&#39;s as simple as adding it to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;  .package(url: &#34;https://github.com/pointfreeco/swift-dependencies&#34;, from: &#34;1.0.0&#34;)&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then adding the product to any target that needs access to the library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.product(name: &#34;Dependencies&#34;, package: &#34;swift-dependencies&#34;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;If you want to discuss this library or have a question about how to use it to solve a particular problem, there are a number of places you can discuss with fellow &lt;a href=&#34;http://www.pointfree.co&#34;&gt;Point-Free&lt;/a&gt; enthusiasts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For long-form discussions, we recommend the &lt;a href=&#34;http://github.com/pointfreeco/swift-dependencies/discussions&#34;&gt;discussions&lt;/a&gt; tab of this repo.&lt;/li&gt; &#xA; &lt;li&gt;For casual chat, we recommend the &lt;a href=&#34;http://pointfree.co/slack-invite&#34;&gt;Point-Free Community Slack&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;This library controls a number of dependencies out of the box, but is also open to extension. The following projects all build on top of Dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tgrapperon/swift-dependencies-additions&#34;&gt;Dependencies Additions&lt;/a&gt;: A companion library that provides higher-level dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arasan01/swift-dependencies-extras&#34;&gt;Dependencies Protocol Extras&lt;/a&gt;: Library to make swift-dependencies even more useful when using Protocol&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;There are many other dependency injection libraries in the Swift community. Each has its own set of priorities and trade-offs that differ from Dependencies. Here are a few well-known examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hmlongco/Factory&#34;&gt;Factory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/needle&#34;&gt;Needle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Swinject/Swinject&#34;&gt;Swinject&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scribd/Weaver&#34;&gt;Weaver&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is released under the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/pointfreeco/swift-dependencies/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>swiftlang/swift-syntax</title>
    <updated>2024-08-01T01:55:58Z</updated>
    <id>tag:github.com,2024-08-01:/swiftlang/swift-syntax</id>
    <link href="https://github.com/swiftlang/swift-syntax" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A set of Swift libraries for parsing, inspecting, generating, and transforming Swift source code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Syntax&lt;/h1&gt; &#xA;&lt;p&gt;The swift-syntax package is a set of libraries that work on a source-accurate tree representation of Swift source code, called the SwiftSyntax tree. The SwiftSyntax tree forms the backbone of Swift’s macro system – the macro expansion nodes are represented as SwiftSyntax nodes and a macro generates a SwiftSyntax tree to be inserted into the source file.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can read SwiftSyntax’s documentation on &lt;a href=&#34;https://swiftpackageindex.com/swiftlang/swift-syntax/documentation&#34;&gt;swiftpackageindex.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A great way to interactively explore the SwiftSyntax tree of a source file is &lt;a href=&#34;https://swift-ast-explorer.com&#34;&gt;https://swift-ast-explorer.com&lt;/a&gt;, developed by &lt;a href=&#34;https://github.com/kishikawakatsumi&#34;&gt;@kishikawakatsumi&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A set of example usages of swift-syntax can be found in &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/Examples&#34;&gt;Examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Releases of SwiftSyntax are aligned with corresponding language and tooling releases, for example the major version 509 of swift-syntax is aligned with Swift 5.9.&lt;/p&gt; &#xA;&lt;p&gt;To depend on swift-syntax in a SwiftPM package, add the following to your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;  .package(url: &#34;https://github.com/swiftlang/swift-syntax.git&#34;, from: &#34;&amp;lt;#latest swift-syntax tag#&amp;gt;&#34;),&#xA;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To add swift-syntax as a dependency of your Xcode project, go to the &lt;em&gt;Package Dependencies&lt;/em&gt; tab of your Xcode project, click the plus button and search for &lt;a href=&#34;https://github.com/swiftlang/swift-syntax.git&#34;&gt;https://github.com/swiftlang/swift-syntax.git&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you should hit any issues while using SwiftSyntax, we appreciate bug reports on &lt;a href=&#34;https://github.com/swiftlang/swift-syntax/issues&#34;&gt;GitHub Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Start contributing to SwiftSyntax see &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/CONTRIBUTING.md&#34;&gt;this guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Bazel&lt;/h2&gt; &#xA;&lt;p&gt;SwiftSyntax provides an experimental &lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt; build configuration, maintained by Keith Smiley. To use it you can pull the source archive from the relevant release tag into your &lt;code&gt;WORKSPACE&lt;/code&gt; and depend on the libraries you need from the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/BUILD.bazel&#34;&gt;&lt;code&gt;BUILD.bazel&lt;/code&gt;&lt;/a&gt; file. Each library also has an associated &lt;code&gt;Library_opt&lt;/code&gt; target (such as &lt;code&gt;SwiftSyntax_opt&lt;/code&gt;) which forces SwiftSyntax to always build with optimizations enabled. This may help local runtime performance at the cost of debuggability, and initial build time. Please tag any &lt;a href=&#34;https://github.com/swiftlang/swift-syntax/issues&#34;&gt;issues&lt;/a&gt; related to the Bazel configuration with the label &#34;Bazel&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>