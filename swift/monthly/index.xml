<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-01T01:56:20Z</updated>
  <subtitle>Monthly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shadowsocks/ShadowsocksX-NG</title>
    <updated>2024-09-01T01:56:20Z</updated>
    <id>tag:github.com,2024-09-01:/shadowsocks/ShadowsocksX-NG</id>
    <link href="https://github.com/shadowsocks/ShadowsocksX-NG" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Next Generation of ShadowsocksX&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ShadowsocksX-NG&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shadowsocks/ShadowsocksX-NG/releases/latest&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shadowsocks/ShadowsocksX-NG/actions&#34;&gt;&lt;img src=&#34;https://github.com/shadowsocks/ShadowsocksX-NG/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next Generation of &lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-iOS&#34;&gt;ShadowsocksX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why a new implementation?&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s hard to maintain the original implementation as there is too much unused code in it. It also embeds the &lt;code&gt;ss-local&lt;/code&gt; source code. It&#39;s crazy to maintain dependencies of &lt;code&gt;ss-local&lt;/code&gt;. So it&#39;s hard to update the &lt;code&gt;ss-local&lt;/code&gt; version.&lt;/p&gt; &#xA;&lt;p&gt;Now I just copied the &lt;code&gt;ss-local&lt;/code&gt; from Homebrew. Run &lt;code&gt;ss-local&lt;/code&gt; executable as a Launch Agent in the background. So there is only some source code related to GUI left. Then I have rewrited the GUI code in Swift.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;p&gt;macOS 10.12+&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 12.5.1+&lt;/li&gt; &#xA; &lt;li&gt;CocoaPods 1.10.1+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://github.com/shadowsocks/ShadowsocksX-NG/releases/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ss-local&lt;/code&gt; from shadowsocks-libev 3.2.5.&lt;/li&gt; &#xA; &lt;li&gt;Support SIP003 plugins. Embed &lt;code&gt;kcptun&lt;/code&gt;, &lt;code&gt;simple-obfs&lt;/code&gt; and &lt;code&gt;v2ray-plugin&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Could update PAC by download GFW List from GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Share your server profiles by qrcode or url.&lt;/li&gt; &#xA; &lt;li&gt;Import server profile urls from pasteboard.&lt;/li&gt; &#xA; &lt;li&gt;Import server profile by scan QRCode on screen.&lt;/li&gt; &#xA; &lt;li&gt;Custom rules for PAC.&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;a href=&#34;https://shadowsocks.org/en/spec/AEAD-Ciphers.html&#34;&gt;AEAD Ciphers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HTTP Proxy by &lt;a href=&#34;http://www.privoxy.org/&#34;&gt;privoxy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Difference from original ShadowsocksX&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ss-local&lt;/code&gt; is run as a background service through launchd, not as an in-app process. So after you quit the app, the &lt;code&gt;ss-local&lt;/code&gt; might be still running.&lt;/p&gt; &#xA;&lt;p&gt;Added a manual mode which won&#39;t configure the system proxy settings, so that you could configure your apps to use the SOCKS5 proxy manually.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions must be available on a separately named branch based on the latest version of the main branch &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ref: &lt;a href=&#34;http://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;GitFlow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is released under the terms of the GPLv3.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MonitorControl/MonitorControl</title>
    <updated>2024-09-01T01:56:20Z</updated>
    <id>tag:github.com,2024-09-01:/MonitorControl/MonitorControl</id>
    <link href="https://github.com/MonitorControl/MonitorControl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🖥 Control your display&#39;s brightness &amp; volume on your Mac as if it was a native Apple Display. Use Apple Keyboard keys or custom shortcuts. Shows the native macOS OSDs.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MonitorControl/MonitorControl/main/.github/Icon-cropped.png&#34; width=&#34;200&#34; alt=&#34;App icon&#34; align=&#34;left&#34;&gt; &#xA;&lt;div&gt; &#xA; &lt;h3&gt;MonitorControl - for Apple Silicon and Intel&lt;/h3&gt; &#xA; &lt;p&gt;Controls your external display brightness and volume and shows native OSD. Use menubar extra sliders or the keyboard, including native Apple keys!&lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/MonitorControl/MonitorControl/releases&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MonitorControl/MonitorControl/main/.github/macos_badge_noborder.png&#34; width=&#34;175&#34; alt=&#34;Download for macOS&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- shields --&gt; &#xA; &lt;!-- downloads --&gt; &#xA; &lt;a href=&#34;https://github.com/MonitorControl/MonitorControl/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/MonitorControl/MonitorControl/total.svg?style=flat&#34; alt=&#34;downloads&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- version --&gt; &#xA; &lt;a href=&#34;https://github.com/MonitorControl/MonitorControl/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release-pre/MonitorControl/MonitorControl.svg?style=flat&#34; alt=&#34;latest version&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- license --&gt; &#xA; &lt;a href=&#34;https://github.com/MonitorControl/MonitorControl/raw/master/License.txt&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/MonitorControl/MonitorControl.svg?style=flat&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- platform --&gt; &#xA; &lt;a href=&#34;https://github.com/MonitorControl/MonitorControl&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-macOS-lightgrey.svg?style=flat&#34; alt=&#34;platform&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- backers --&gt; &#xA; &lt;a href=&#34;https://opencollective.com/monitorcontrol&#34;&gt; &lt;img src=&#34;https://opencollective.com/monitorcontrol/tiers/badge.svg?sanitize=true&#34; alt=&#34;backers&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MonitorControl/MonitorControl/main/.github/screenshot.png&#34; width=&#34;824&#34; alt=&#34;Screenshot&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://github.com/MonitorControl/MonitorControl/releases&#34;&gt;Releases&lt;/a&gt; and download the latest &lt;code&gt;.dmg&lt;/code&gt;, or you can install via Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install MonitorControl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Major features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Control your display&#39;s brightness, volume and contrast!&lt;/li&gt; &#xA; &lt;li&gt;Shows native OSD for brightness and volume.&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple protocols to adjust brightness: DDC for external displays (brightness, contrast, volume), native Apple protocol for Apple and built-in displays, Gamma table control for software dimming, shade control for AirPlay, Sidecar and Display Link devices and other virtual screens.&lt;/li&gt; &#xA; &lt;li&gt;Supports smooth brightness transitions.&lt;/li&gt; &#xA; &lt;li&gt;Seamlessly combined hardware and software dimming extends dimming beyond the minimum brightness available on your display.&lt;/li&gt; &#xA; &lt;li&gt;Synchronize brightness from built-in and Apple screens - replicate Ambient light sensor and touch bar induced changes to a non-Apple external display!&lt;/li&gt; &#xA; &lt;li&gt;Sync up all your displays using a single slider or keyboard shortcuts.&lt;/li&gt; &#xA; &lt;li&gt;Allows dimming to full black.&lt;/li&gt; &#xA; &lt;li&gt;Support for custom keyboard shortcuts as well as standard brightness and media keys on Apple keyboards.&lt;/li&gt; &#xA; &lt;li&gt;Dozens of customization options to tweak the inner workings of the app to suit your hardware and needs (don&#39;t forget to enable &lt;code&gt;Show advanced settings&lt;/code&gt; in app Preferences).&lt;/li&gt; &#xA; &lt;li&gt;Simple, unobtrusive UI to blend in to the general aesthetics of macOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;One of the best app of its kind, completely FREE.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install and use the app&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MonitorControl/MonitorControl/releases&#34;&gt;Download the app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy the MonitorControl app file from the .DMG to your Applications folder&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;code&gt;MonitorControl&lt;/code&gt; app file&lt;/li&gt; &#xA; &lt;li&gt;Add the app to &lt;code&gt;Accessibility&lt;/code&gt; under &lt;code&gt;System Settings&lt;/code&gt; » &lt;code&gt;Privacy &amp;amp; Security&lt;/code&gt; as prompted (this is required only if you wish to use the native Apple keyboard brightness and media keys - if this is not the case, you can safely skip this step).&lt;/li&gt; &#xA; &lt;li&gt;Use your keyboard or the sliders in the app menu (a brightness symbol in the macOS menubar as shown on the screenshot above) to control your displays.&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Preferences…&lt;/code&gt; for customization options (enable &lt;code&gt;Show advanced settings&lt;/code&gt; for even more options).&lt;/li&gt; &#xA; &lt;li&gt;You can set up custom keyboard shortcuts under the &lt;code&gt;Keyboard&lt;/code&gt; in Preferences (the app uses Apple media keys by default).&lt;/li&gt; &#xA; &lt;li&gt;If you have any questions, go to &lt;a href=&#34;https://github.com/MonitorControl/MonitorControl/discussions&#34;&gt;Discussions&lt;/a&gt;!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Screenshots (Preferences)&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MonitorControl/MonitorControl/main/.github/pref_1.png&#34; width=&#34;392&#34; alt=&#34;Screenshot&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MonitorControl/MonitorControl/main/.github/pref_2.png&#34; width=&#34;392&#34; alt=&#34;Screenshot&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MonitorControl/MonitorControl/main/.github/pref_3.png&#34; width=&#34;392&#34; alt=&#34;Screenshot&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MonitorControl/MonitorControl/main/.github/pref_4.png&#34; width=&#34;392&#34; alt=&#34;Screenshot&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;macOS compatibility&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;MonitorControl version&lt;/th&gt; &#xA;   &lt;th&gt;macOS version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v4.0.0&lt;/td&gt; &#xA;   &lt;td&gt;Catalina 10.15*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v3.1.1&lt;/td&gt; &#xA;   &lt;td&gt;Mojave 10.14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v2.1.0&lt;/td&gt; &#xA;   &lt;td&gt;Sierra 10.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;* With some limitations - full functionality available on macOS 11 Big Sur or newer.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported displays&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Most modern LCD displays from all major manufacturers supported implemented DDC/CI protocol via USB-C, DisplayPort, HDMI, DVI or VGA to allow for hardware backlight and volume control.&lt;/li&gt; &#xA; &lt;li&gt;Apple displays and built-in displays are supported using native protocols.&lt;/li&gt; &#xA; &lt;li&gt;LCD and LED Televisions usually do not implement DDC, these are supported using software alternatives to dim the image.&lt;/li&gt; &#xA; &lt;li&gt;DisplayLink, Airplay, Sidecar and other virtual screens are supported via shade (overlay) control.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Notable exceptions for hardware control compatibility:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DDC control using the built-in HDMI port of the 2018 Intel Mac mini, the built-in HDMI port of all M1 Macs (MacBook Pro 14&#34; and 16&#34;, Mac Mini, Mac Studio) and the built-in HDMI port of the entry level M2 Mac mini are not supported. Use USB-C instead or get &lt;a href=&#34;https://betterdisplay.pro&#34;&gt;BetterDisplay&lt;/a&gt; for full DDC control over HDMI with these Macs as well for free. Software-only dimming is still available for these connections.&lt;/li&gt; &#xA; &lt;li&gt;Some displays (notably EIZO) use MCCS over USB or an entirely custom protocol for control. These displays are supported with software dimming only.&lt;/li&gt; &#xA; &lt;li&gt;DisplayLink docks and dongles do not allow for DDC control on Macs, only software dimming is available for these connections.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Compatibility with&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;f.lux users: please activate &lt;code&gt;Avoid gamma table manipulation&lt;/code&gt; under &lt;code&gt;Preferences&lt;/code&gt; » &lt;code&gt;Displays&lt;/code&gt;! This step is not needed if you use Night Shift.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdisplay.pro/&#34;&gt;BetterDisplay&lt;/a&gt; users: either activate &lt;code&gt;Avoid gamma table manipulation&lt;/code&gt; in MonitorControl or turn off &lt;code&gt;Allow color adjustments&lt;/code&gt; in BetterDisplay (under Settings/Displays/Overview). You might want to disable native keyboard control either in MonitorControl or BetterDisplay, depending on which app you want to use for brightness control and dimming.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;h3&gt;Required&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/realm/SwiftLint&#34;&gt;Swiftlint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nicklockwood/SwiftFormat&#34;&gt;SwiftFormat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Flinesoft/BartyCrouch&#34;&gt;BartyCrouch&lt;/a&gt; (for updating localizations)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build steps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the project via this Terminal command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/MonitorControl/MonitorControl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to clone one of the branches, add &lt;code&gt;--single-branch --branch [branchname]&lt;/code&gt; after the &lt;code&gt;clone&lt;/code&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re all set! Now open the &lt;code&gt;MonitorControl.xcodeproj&lt;/code&gt; with Xcode! The dependencies will automatically get downloaded once you open the project. If they don&#39;t: &lt;code&gt;File &amp;gt; Packages &amp;gt; Resolve Package Versions&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Third party dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MonitorControl/MediaKeyTap&#34;&gt;MediaKeyTap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/Preferences&#34;&gt;Preferences&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rnine/SimplyCoreAudio&#34;&gt;SimplyCoreAudio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/KeyboardShortcuts&#34;&gt;KeyboardShortcuts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sparkle-project/Sparkle&#34;&gt;Sparkle&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/the0neyouseek&#34;&gt;@the0neyouseek&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JoniVR&#34;&gt;@JoniVR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/waydabber&#34;&gt;@waydabber&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mathew-kurian/&#34;&gt;@mathew-kurian&lt;/a&gt; (original developer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tyilo/&#34;&gt;@Tyilo&lt;/a&gt; (fork)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Bensge/&#34;&gt;@Bensge&lt;/a&gt; - (used some code from his project &lt;a href=&#34;https://github.com/Bensge/NativeDisplayBrightness&#34;&gt;NativeDisplayBrightness&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nhurden/&#34;&gt;@nhurden&lt;/a&gt; (for the original MediaKeyTap)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kfix/ddcctl&#34;&gt;@kfix&lt;/a&gt; (for ddcctl)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reitermarkus&#34;&gt;@reitermarkus&lt;/a&gt; (for Intel DDC support)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alin23&#34;&gt;@alin23&lt;/a&gt; (generally spearheaded M1 DDC support and figured out a many of the caveats)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.deviantart.com/javierocasio&#34;&gt;javierocasio&lt;/a&gt; (app icon background)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>seemoo-lab/openhaystack</title>
    <updated>2024-09-01T01:56:20Z</updated>
    <id>tag:github.com,2024-09-01:/seemoo-lab/openhaystack</id>
    <link href="https://github.com/seemoo-lab/openhaystack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build your own &#39;AirTags&#39; 🏷 today! Framework for tracking personal Bluetooth devices via Apple&#39;s massive Find My network.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Resources/Icon/OpenHaystackIcon.png&#34; alt=&#34;OpenHaystack application icon&#34; height=&#34;42&#34; width=&#34;42&#34; valign=&#34;bottom&#34;&gt; OpenHaystack&lt;/h1&gt; &#xA;&lt;p&gt;OpenHaystack is a framework for tracking personal Bluetooth devices via Apple&#39;s massive Find My network. Use it to create your own tracking &lt;em&gt;tags&lt;/em&gt; that you can append to physical objects (keyrings, backpacks, ...) or integrate it into other Bluetooth-capable devices such as notebooks.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Resources/OpenHaystack-Screenshot.png&#34; alt=&#34;Screenshot of the app&#34; width=&#34;701&#34;&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#what-is-openhaystack&#34;&gt;What is &lt;em&gt;OpenHaystack&lt;/em&gt;?&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#history&#34;&gt;History&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#disclaimer&#34;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#how-to-use-openhaystack&#34;&gt;How to use &lt;em&gt;OpenHaystack&lt;/em&gt;?&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#system-requirements&#34;&gt;System requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#how-does-apples-find-my-network-work&#34;&gt;How does Apple&#39;s Find My network work?&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#pairing-1&#34;&gt;Pairing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#losing-2&#34;&gt;Losing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#finding-3&#34;&gt;Finding&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#searching-4&#34;&gt;Searching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#how-to-track-other-bluetooth-devices&#34;&gt;How to track other Bluetooth devices?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#openhaystack-mobile&#34;&gt;OpenHaystack Mobile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is &lt;em&gt;OpenHaystack&lt;/em&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;OpenHaystack is an application that allows you to create your own accessories that are tracked by Apple&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#how-does-apples-find-my-network-work&#34;&gt;Find My network&lt;/a&gt;. All you need is a Mac and a &lt;a href=&#34;https://microbit.org/&#34;&gt;BBC micro:bit&lt;/a&gt; or any &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#how-to-track-other-bluetooth-devices&#34;&gt;other Bluetooth-capable device&lt;/a&gt;. By using the app, you can track your accessories anywhere on earth without cellular coverage. Nearby iPhones will discover your accessories and upload their location to Apple&#39;s servers when they have a network connection.&lt;/p&gt; &#xA;&lt;h3&gt;History&lt;/h3&gt; &#xA;&lt;p&gt;OpenHaystack is the result of reverse-engineering and security analysis work of Apple&#39;s &lt;em&gt;Find My network&lt;/em&gt; (or &lt;em&gt;offline finding&lt;/em&gt;). We at the &lt;a href=&#34;https://seemoo.de&#34;&gt;Secure Mobile Networking Lab&lt;/a&gt; of TU Darmstadt started analyzing offline finding after its initial announcement in June 2019. We identified how Apple devices can be found by iPhones devices, even when they are offline through this work. The whole system is a clever combination of Bluetooth advertisements, public-key cryptography, and a central database of encrypted location reports. We disclosed a specification of the closed parts of offline finding and conducted a comprehensive security and privacy analysis. We found two distinct vulnerabilities. The most severe one, which allowed a malicious application to access location data, has meanwhile been fixed by Apple (&lt;a href=&#34;https://support.apple.com/en-us/HT211849&#34;&gt;CVE-2020-9986&lt;/a&gt;). For more information about the security analysis, please read &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#references&#34;&gt;our paper&lt;/a&gt;. Since its release, we received quite a bit of &lt;a href=&#34;https://owlink.org/press/&#34;&gt;press and media coverage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;p&gt;OpenHaystack is experimental software. The code is untested and incomplete. For example, OpenHaystack accessories using our &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Firmware&#34;&gt;firmware&lt;/a&gt; broadcast a fixed public key and, therefore, are trackable by other devices in proximity (this might change in a future release). OpenHaystack is not affiliated with or endorsed by Apple Inc.&lt;/p&gt; &#xA;&lt;h2&gt;How to use &lt;em&gt;OpenHaystack&lt;/em&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;OpenHaystack consists of two components. First, we provide a &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/OpenHaystack&#34;&gt;macOS application&lt;/a&gt; that can display the last reported location of your personal Bluetooth devices. Second, the &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Firmware&#34;&gt;firmware image&lt;/a&gt; enables Bluetooth devices to broadcast beacons that make them discoverable by iPhones.&lt;/p&gt; &#xA;&lt;h3&gt;System requirements&lt;/h3&gt; &#xA;&lt;p&gt;OpenHaystack requires macOS 11 (Big Sur).&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;The OpenHaystack application requires a custom plugin for Apple Mail. It is used to download location reports from Apple&#39;s servers via a private API (technical explanation: the plugin inherits Apple Mail&#39;s entitlements required to use this API). Therefore, the installation procedure is slightly different and requires you to temporarily disable &lt;a href=&#34;https://support.apple.com/guide/security/gatekeeper-and-runtime-protection-sec5599b66df/1/web/1&#34;&gt;Gatekeeper&lt;/a&gt;. Our plugin does not access any other private data such as emails (see &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/OpenHaystack/OpenHaystackMail&#34;&gt;source code&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download a precompiled binary release from our &lt;a href=&#34;https://github.com/seemoo-lab/openhaystack/releases&#34;&gt;GitHub page&lt;/a&gt;.&lt;br&gt; &lt;em&gt;Alternative:&lt;/em&gt; build the application from source via Xcode.&lt;/li&gt; &#xA; &lt;li&gt;Open OpenHaystack. This will ask you to install the Mail plugin in &lt;code&gt;~/Library/Mail/Bundle&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open a terminal and run &lt;code&gt;sudo spctl --master-disable&lt;/code&gt;, which will disable Gatekeeper and allow our Apple Mail plugin to run.&lt;/li&gt; &#xA; &lt;li&gt;Open Apple Mail. Go to &lt;em&gt;Preferences&lt;/em&gt; → &lt;em&gt;General&lt;/em&gt; → &lt;em&gt;Manage Plug-Ins...&lt;/em&gt; and activate the checkbox next to &lt;em&gt;OpenHaystackMail.mailbundle&lt;/em&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If the &lt;em&gt;Manage Plug-Ins...&lt;/em&gt; button does not appear. Run this command in terminal &lt;code&gt;sudo defaults write &#34;/Library/Preferences/com.apple.mail&#34; EnableBundles 1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Allow access and restart Mail.&lt;/li&gt; &#xA; &lt;li&gt;Open a terminal and enter &lt;code&gt;sudo spctl --master-enable&lt;/code&gt;, which will enable Gatekeeper again.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Adding a new accessory.&lt;/strong&gt; To create a new accessory, you just need to enter a name for it and optionally select a suitable icon and a color. The app then generates a new key pair that is used to encrypt and decrypt the location reports. The private key is stored in your Mac&#39;s keychain.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deploy to device.&lt;/strong&gt; Connect a &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#how-to-track-other-bluetooth-devices&#34;&gt;supported device&lt;/a&gt; via USB to your Mac and hit the &lt;em&gt;Deploy&lt;/em&gt; button next to the accessory&#39;s name and choose the corresponding. Instead of using OpenHaystack&#39;s integrated deployment, you may also copy the public key used for advertising (right click on accessory) and deploy it manually.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Display devices&#39; locations.&lt;/strong&gt; It can take up to 30 minutes until you will see the first location report on the map on the right side. The map will always show all your items&#39; most recent locations. You can click on every item to check when the last update was received. By clicking the reload button, you can update the location reports.&lt;/p&gt; &#xA;&lt;h2&gt;How does Apple&#39;s Find My network work?&lt;/h2&gt; &#xA;&lt;p&gt;We briefly explain Apple&#39;s offline finding system (aka &lt;a href=&#34;https://developer.apple.com/find-my/&#34;&gt;&lt;em&gt;Find My network&lt;/em&gt;&lt;/a&gt;). Please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#references&#34;&gt;PETS paper and Apple&#39;s accessory specification&lt;/a&gt; for more details. We provide a schematic overview (from our paper) and explain how we integrate the different steps in OpenHaystack below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Resources/FindMyOverview.png&#34; alt=&#34;Find My Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pairing (1)&lt;/h3&gt; &#xA;&lt;p&gt;To use Apple&#39;s Find My network, we generate a public-private key pair on an elliptic curve (P-224). The private key remains on the Mac securely stored in the keychain, and the public key is deployed on the accessory, e.g., an attached micro:bit.&lt;/p&gt; &#xA;&lt;h3&gt;Losing (2)&lt;/h3&gt; &#xA;&lt;p&gt;In short, the accessories broadcast the public key as Bluetooth Low Energy (BLE) advertisements (see &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Firmware&#34;&gt;firmware&lt;/a&gt;). Nearby iPhones will not be able to distinguish our accessories from a genuine Apple device or certified accessory.&lt;/p&gt; &#xA;&lt;h3&gt;Finding (3)&lt;/h3&gt; &#xA;&lt;p&gt;When a nearby iPhone receives a BLE advertisement, the iPhone fetches its current location via GPS, encrypts it using public key from the advertisement, and uploads the encrypted report to Apple&#39;s server. All iPhones on iOS 13 or newer do this by default. OpenHaystack is not involved in this step.&lt;/p&gt; &#xA;&lt;h3&gt;Searching (4)&lt;/h3&gt; &#xA;&lt;p&gt;Apple does not know which encrypted locations belong to which Apple account or device. Therefore, every Apple user can download any location report as long as they know the corresponding public key. This is not a security issue: all reports are end-to-end encrypted and cannot be decrypted unless one knows the corresponding private key (stored in the keychain). We leverage this feature to download the reports from Apple that have been created for our OpenHaystack accessories. We use our private keys to decrypt the location reports and show the most recent one on the map.&lt;/p&gt; &#xA;&lt;p&gt;Apple protects their database against arbitrary access by requiring an authenticated Apple user to download location reports. We use our Apple Mail plugin, which runs with elevated privileges, to access the required authentication information. The OpenHaystack app communicates with the plugin while downloading reports. This is why you need to keep Mail open while using OpenHaystack.&lt;/p&gt; &#xA;&lt;h2&gt;How to track other Bluetooth devices?&lt;/h2&gt; &#xA;&lt;p&gt;In principle, any Bluetooth device can be turned into an OpenHaystack accessory that is trackable via Apple&#39;s Find My network. Currently, we provide a convenient deployment method of our OpenHaystack firmwares for a small number of embedded devices (see table below). We also support Linux devices via our generic HCI script. Feel free to port OpenHaystack to other devices that support Bluetooth Low Energy based on the &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Firmware&#34;&gt;source code of our firmware&lt;/a&gt; and the specification in &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/#references&#34;&gt;our paper&lt;/a&gt;. Please share your results with us!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Tested on&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Deploy via app&lt;/th&gt; &#xA;   &lt;th&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Firmware/Microbit_v1&#34;&gt;Nordic nRF51&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;BBC micro:bit v1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;Only supports nRF51822 at this time (see issue #6).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Firmware/ESP32&#34;&gt;Espressif ESP32&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SP32-WROOM, ESP32-WROVER&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;Deployment can take up to 3 minutes. Requires Python 3. Thanks &lt;strong&gt;@fhessel&lt;/strong&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Firmware/Linux_HCI&#34;&gt;Linux HCI&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Raspberry Pi 4 w/ Raspbian&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Should support any Linux machine.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Resources/Setup.jpg&#34; alt=&#34;Setup&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OpenHaystack Mobile&lt;/h2&gt; &#xA;&lt;p&gt;OpenHaystack Mobile is a complete reimplementation of the OpenHaystack macOS application for smartphones. The app provides the same functionality to create and track accessories and aims to increase the usability, especially for new users. In contrast to the macOS application, the location reports cannot be fetched directly on the smartphone, so the app requires a proxy server hosted on Mac hardware to access the Find My network. The proxy server can be accessed over a network by multiple users simultaneously.&lt;/p&gt; &#xA;&lt;p&gt;To connect to your proxy server set the correct URL in: openhaystack-mobile/lib/findMy/reports_fetcher.dart&lt;/p&gt; &#xA;&lt;p&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Resources/mobile-map-view.png&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/Resources/mobile-accessory-history.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenHaystack Mobile is built with the cross-platform &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter framework&lt;/a&gt; and currently runs on Android and iOS. More information about the app and usage instructions can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/openhaystack-mobile&#34;&gt;openhaystack-mobile&lt;/a&gt; folder of this repository.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Alexander Heinrich&lt;/strong&gt; (&lt;a href=&#34;https://github.com/Sn0wfreezeDev&#34;&gt;@Sn0wfreezeDev&lt;/a&gt;, &lt;a href=&#34;mailto:aheinrich@seemoo.tu-darmstadt.de&#34;&gt;email&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Milan Stute&lt;/strong&gt; (&lt;a href=&#34;https://github.com/schmittner&#34;&gt;@schmittner&lt;/a&gt;, &lt;a href=&#34;mailto:mstute@seemoo.tu-darmstadt.de&#34;&gt;email&lt;/a&gt;, &lt;a href=&#34;https://seemoo.de/mstute&#34;&gt;web&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alexander Heinrich, Milan Stute, Tim Kornhuber, Matthias Hollick. &lt;strong&gt;Who Can &lt;em&gt;Find My&lt;/em&gt; Devices? Security and Privacy of Apple&#39;s Crowd-Sourced Bluetooth Location Tracking System.&lt;/strong&gt; &lt;em&gt;Proceedings on Privacy Enhancing Technologies (PoPETs)&lt;/em&gt;, 2021. &lt;a href=&#34;https://doi.org/10.2478/popets-2021-0045&#34;&gt;doi:10.2478/popets-2021-0045&lt;/a&gt; &lt;a href=&#34;https://www.petsymposium.org/2021/files/papers/issue3/popets-2021-0045.pdf&#34;&gt;📄 Paper&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2103.02282&#34;&gt;📄 Preprint&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Alexander Heinrich, Milan Stute, and Matthias Hollick. &lt;strong&gt;DEMO: OpenHaystack: A Framework for Tracking Personal Bluetooth Devices via Apple’s Massive Find My Network.&lt;/strong&gt; &lt;em&gt;14th ACM Conference on Security and Privacy in Wireless and Mobile (WiSec ’21)&lt;/em&gt;, 2021.&lt;/li&gt; &#xA; &lt;li&gt;Tim Kornhuber. &lt;strong&gt;Analysis of Apple&#39;s Crowd-Sourced Location Tracking System.&lt;/strong&gt; &lt;em&gt;Technical University of Darmstadt&lt;/em&gt;, Master&#39;s thesis, 2020.&lt;/li&gt; &#xA; &lt;li&gt;Apple Inc. &lt;strong&gt;Find My Network Accessory Specification – Developer Preview – Release R3.&lt;/strong&gt; 2020. &lt;a href=&#34;https://developer.apple.com/find-my/&#34;&gt;📄 Download&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;OpenHaystack is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/seemoo-lab/openhaystack/main/LICENSE&#34;&gt;&lt;strong&gt;GNU Affero General Public License v3.0&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>