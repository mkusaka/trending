<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-01T02:26:16Z</updated>
  <subtitle>Monthly Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>godly-devotion/MochiDiffusion</title>
    <updated>2023-05-01T02:26:16Z</updated>
    <id>tag:github.com,2023-05-01:/godly-devotion/MochiDiffusion</id>
    <link href="https://github.com/godly-devotion/MochiDiffusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Stable Diffusion on Mac natively&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;256&#34; src=&#34;https://github.com/godly-devotion/MochiDiffusion/raw/main/Mochi Diffusion/Resources/Assets.xcassets/AppIcon.appiconset/AppIcon.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Mochi Diffusion&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Run Stable Diffusion on Mac natively&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/godly-devotion/MochiDiffusion/raw/main/README.md&#34;&gt;English&lt;/a&gt;, &lt;a href=&#34;https://github.com/godly-devotion/MochiDiffusion/raw/main/README.ko.md&#34;&gt;한국어&lt;/a&gt;, &lt;a href=&#34;https://github.com/godly-devotion/MochiDiffusion/raw/main/README.zh-Hans.md&#34;&gt;中文&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Discord&#34; target=&#34;_blank&#34; href=&#34;https://discord.gg/x2kartzxGv&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1068185566782423092?color=blueviolet&amp;amp;label=discord&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Crowdin&#34; target=&#34;_blank&#34; href=&#34;https://crowdin.com/project/mochi-diffusion&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/mochi-diffusion/localized.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;License&#34; target=&#34;_blank&#34; href=&#34;https://github.com/godly-devotion/MochiDiffusion/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/godly-devotion/MochiDiffusion?color=blue&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/godly-devotion/MochiDiffusion/main/.github/images/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;This app uses &lt;a href=&#34;https://github.com/apple/ml-stable-diffusion&#34;&gt;Apple&#39;s Core ML Stable Diffusion implementation&lt;/a&gt; to achieve maximum performance and speed on Apple Silicon based Macs while reducing memory requirements.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extremely fast and memory efficient (~150MB with Neural Engine)&lt;/li&gt; &#xA; &lt;li&gt;Runs well on all Apple Silicon Macs by fully utilizing Neural Engine&lt;/li&gt; &#xA; &lt;li&gt;Generate images locally and completely offline&lt;/li&gt; &#xA; &lt;li&gt;Generate images based on an existing image (commonly known as Image2Image)&lt;/li&gt; &#xA; &lt;li&gt;Generated images are saved with prompt info inside EXIF metadata (view in Finder&#39;s Get Info window)&lt;/li&gt; &#xA; &lt;li&gt;Convert generated images to high resolution (using RealESRGAN)&lt;/li&gt; &#xA; &lt;li&gt;Autosave &amp;amp; restore images&lt;/li&gt; &#xA; &lt;li&gt;Use custom Stable Diffusion Core ML models&lt;/li&gt; &#xA; &lt;li&gt;No worries about pickled models&lt;/li&gt; &#xA; &lt;li&gt;macOS native app using SwiftUI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest version from the &lt;a href=&#34;https://github.com/godly-devotion/MochiDiffusion/releases&#34;&gt;releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;When using a model for the very first time, it may take up to 2 minutes for the Neural Engine to compile a cached version. Afterwards, subsequent generations will be much faster.&lt;/p&gt; &#xA;&lt;h2&gt;Compute Unit&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CPU &amp;amp; Neural Engine&lt;/code&gt; provides a good balance between speed and low memory usage&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CPU &amp;amp; GPU&lt;/code&gt; may be faster on M1 Max, Ultra and later but will use more memory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Depending on the option chosen, you will need to use the correct model version (see Models section for details).&lt;/p&gt; &#xA;&lt;h2&gt;Models&lt;/h2&gt; &#xA;&lt;p&gt;You will need to convert or download Core ML models in order to use Mochi Diffusion.&lt;/p&gt; &#xA;&lt;p&gt;A few models have been converted and uploaded &lt;a href=&#34;https://huggingface.co/coreml&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/godly-devotion/MochiDiffusion/wiki/How-to-convert-Stable-Diffusion-models-to-Core-ML&#34;&gt;Convert&lt;/a&gt; or download Core ML models &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;split_einsum&lt;/code&gt; version is compatible with all compute unit options including Neural Engine&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;original&lt;/code&gt; version is only compatible with &lt;code&gt;CPU &amp;amp; GPU&lt;/code&gt; option&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;By default, the app&#39;s model folder will be created under your home directory. This location can be customized under Settings&lt;/li&gt; &#xA; &lt;li&gt;In the model folder, create a new folder with the name you&#39;d like displayed in the app then move or extract the converted models here&lt;/li&gt; &#xA; &lt;li&gt;Your directory structure should look like this:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;Home Directory&amp;gt;/&#xA;└── MochiDiffusion/&#xA;    └── models/&#xA;        ├── stable-diffusion-2-1_split-einsum_compiled/&#xA;        │   ├── merges.txt&#xA;        │   ├── TextEncoder.mlmodelc&#xA;        │   ├── Unet.mlmodelc&#xA;        │   ├── VAEDecoder.mlmodelc&#xA;        │   ├── VAEEncoder.mlmodelc&#xA;        │   └── vocab.json&#xA;        ├── ...&#xA;        └── ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apple Silicon (M1 and later)&lt;/li&gt; &#xA; &lt;li&gt;macOS Ventura 13.1 and later&lt;/li&gt; &#xA; &lt;li&gt;Xcode 14.3 (to build)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;All generation happens locally and absolutely nothing is sent to the cloud.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Mochi Diffusion is always looking for contributions, whether it&#39;s through bug reports, code, or new translations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you find a bug, or would like to suggest a new feature or enhancement, try &lt;a href=&#34;https://github.com/godly-devotion/MochiDiffusion/issues&#34;&gt;searching for your problem first&lt;/a&gt; as it helps avoid duplicates. If you can&#39;t find your issue, feel free to &lt;a href=&#34;https://github.com/godly-devotion/MochiDiffusion/issues/new/choose&#34;&gt;create a new issue&lt;/a&gt;. Don&#39;t create an issue for your question as those are for bugs and feature requests only.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;re looking to contribute code, feel free to &lt;a href=&#34;https://github.com/godly-devotion/MochiDiffusion/pulls&#34;&gt;open a Pull Request&lt;/a&gt;. I recommend installing &lt;a href=&#34;https://github.com/realm/SwiftLint#installation&#34;&gt;SwiftLint&lt;/a&gt; to catch lint issues.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;d like to translate Mochi Diffusion to your language, please visit the &lt;a href=&#34;https://crowdin.com/project/mochi-diffusion&#34;&gt;project page on Crowdin&lt;/a&gt;. You can create an account for free and start translating and/or approving.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apple/ml-stable-diffusion&#34;&gt;Apple&#39;s Core ML Stable Diffusion implementation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huggingface/swift-coreml-diffusers&#34;&gt;Hugging Face&#39;s Swift UI sample implementation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;App Icon by &lt;a href=&#34;https://github.com/Zabriskije&#34;&gt;Zabriskije&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>huggingface/swift-coreml-diffusers</title>
    <updated>2023-05-01T02:26:16Z</updated>
    <id>tag:github.com,2023-05-01:/huggingface/swift-coreml-diffusers</id>
    <link href="https://github.com/huggingface/swift-coreml-diffusers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Swift app demonstrating Core ML Stable Diffusion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Core ML Diffusers 🧨&lt;/h1&gt; &#xA;&lt;p&gt;This is a native app that shows how to integrate Apple&#39;s &lt;a href=&#34;https://github.com/apple/ml-stable-diffusion&#34;&gt;Core ML Stable Diffusion implementation&lt;/a&gt; in a native Swift UI application. The Core ML port is a simplification of the Stable Diffusion implementation from the &lt;a href=&#34;https://github.com/huggingface/diffusers&#34;&gt;diffusers library&lt;/a&gt;. This application can be used for faster iteration, or as sample code for any use cases.&lt;/p&gt; &#xA;&lt;p&gt;This is what the app looks like on macOS: &lt;img src=&#34;https://raw.githubusercontent.com/huggingface/swift-coreml-diffusers/main/screenshot.jpg&#34; alt=&#34;App Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;On first launch, the application downloads a zipped archive with a Core ML version of Stability AI&#39;s Stable Diffusion v2 base, from &lt;a href=&#34;https://huggingface.co/pcuenq/coreml-stable-diffusion-2-base/tree/main&#34;&gt;this location in the Hugging Face Hub&lt;/a&gt;. This process takes a while, as several GB of data have to be downloaded and unarchived.&lt;/p&gt; &#xA;&lt;p&gt;For faster inference, we use a very fast scheduler: &lt;a href=&#34;https://github.com/LuChengTHU/dpm-solver&#34;&gt;DPM-Solver++&lt;/a&gt;, that we ported to Swift from our &lt;a href=&#34;https://github.com/huggingface/diffusers/raw/main/src/diffusers/schedulers/scheduling_dpmsolver_multistep.py&#34;&gt;diffusers DPMSolverMultistepScheduler implementation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility and Performance&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS Ventura 13.1, iOS/iPadOS 16.2, Xcode 14.2.&lt;/li&gt; &#xA; &lt;li&gt;Performance (after the initial generation, which is slower) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;~8s in macOS on MacBook Pro M1 Max (64 GB). Model: Stable Diffusion v2-base, ORIGINAL attention implementation, running on CPU + GPU.&lt;/li&gt; &#xA;   &lt;li&gt;23 ~ 30s on iPhone 13 Pro. Model: Stable Diffusion v2-base, SPLIT_EINSUM attention, CPU + Neural Engine, memory reduction enabled.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://huggingface.co/blog/fast-mac-diffusers&#34;&gt;this post&lt;/a&gt; and &lt;a href=&#34;https://github.com/huggingface/swift-coreml-diffusers/issues/31&#34;&gt;this issue&lt;/a&gt; for additional performance figures.&lt;/p&gt; &#xA;&lt;p&gt;The application will try to guess the best hardware to run models on. You can override this setting using the &lt;code&gt;Advanced&lt;/code&gt; section in the controls sidebar.&lt;/p&gt; &#xA;&lt;h2&gt;How to Run&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to test the app on macOS is by &lt;a href=&#34;https://apps.apple.com/app/diffusers/id1666309574&#34;&gt;downloading it from the Mac App Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to Build&lt;/h2&gt; &#xA;&lt;p&gt;You need &lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;Xcode&lt;/a&gt; to build the app. When you clone the repo, please update &lt;code&gt;common.xcconfig&lt;/code&gt; with your development team identifier. Code signing is required to run on iOS, but it&#39;s currently disabled for macOS.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;Performance on iPhone is somewhat erratic, sometimes it&#39;s ~20x slower and the phone heats up. This happens because the model could not be scheduled to run on the Neural Engine and everything happens in the CPU. We have not been able to determine the reasons for this problem. If you observe the same, here are some recommendations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Detach from Xcode&lt;/li&gt; &#xA; &lt;li&gt;Kill apps you are not using.&lt;/li&gt; &#xA; &lt;li&gt;Let the iPhone cool down before repeating the test.&lt;/li&gt; &#xA; &lt;li&gt;Reboot your device.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allow additional models to be downloaded from the Hub.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>PlayCover/PlayCover</title>
    <updated>2023-05-01T02:26:16Z</updated>
    <id>tag:github.com,2023-05-01:/PlayCover/PlayCover</id>
    <link href="https://github.com/PlayCover/PlayCover" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Community fork of PlayCover&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;p&gt;‎&lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/PlayCover/PlayCover/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/PlayCover/PlayCover.svg?style=for-the-badge&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PlayCover/PlayCover/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/PlayCover/PlayCover.svg?style=for-the-badge&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PlayCover/PlayCover/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PlayCover/PlayCover.svg?style=for-the-badge&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PlayCover/PlayCover/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/PlayCover/PlayCover.svg?style=for-the-badge&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PlayCover/PlayCover/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/PlayCover/PlayCover.svg?style=for-the-badge&#34; alt=&#34;GPLv3 License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/projects/playcover/playcover/&#34;&gt;&lt;img src=&#34;https://img.shields.io/weblate/progress/playcover?style=for-the-badge&#34; alt=&#34;Weblate&#34;&gt;&lt;/a&gt;&lt;p&gt;&lt;/p&gt; &lt;/h1&gt; &#xA;&lt;!-- PROJECT LOGO --&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/PlayCover/PlayCover&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PlayCover/PlayCover/develop/images/logo.png&#34; alt=&#34;Logo&#34; width=&#34;80&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;PlayCover&lt;/h3&gt; &#xA; &lt;p align=&#34;center&#34;&gt; Run iOS apps and games on Apple Silicon Macs with mouse, keyboard and controller support. &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://playcover.github.io/PlayBook&#34;&gt;Documentation&lt;/a&gt; · &lt;a href=&#34;https://discord.gg/rMv5qxGTGC&#34;&gt;Discord&lt;/a&gt; · &lt;a href=&#34;https://playcover.io/&#34;&gt;Website&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- ABOUT THE PROJECT --&gt; &#xA;&lt;h2&gt;About The Project&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to PlayCover! This software is all about allowing you to run iOS apps and games on Apple Silicon devices running macOS 12.0 or newer.&lt;/p&gt; &#xA;&lt;p&gt;PlayCover works by putting applications through a wrapper which imitates an iPad. This allows the apps to run natively and perform very well.&lt;/p&gt; &#xA;&lt;p&gt;PlayCover also allows you to map custom touch controls to keyboard, which is not possible in alternative sideloading methods such as Sideloadly.&lt;/p&gt; &#xA;&lt;p&gt;These controls include all the essentials, from WASD, camera movement, left and right clicks, and individual keymapping, similar to a popular Android emulator’s keymapping system called Bluestacks.&lt;/p&gt; &#xA;&lt;p&gt;This software was originally designed to run Genshin Impact on your Apple Silicon device, but it can now run a wide range of applications. Unfortunately, not all games are supported, and some may have bugs.&lt;/p&gt; &#xA;&lt;p&gt;Localisations handled in &lt;a href=&#34;https://hosted.weblate.org/projects/playcover/&#34;&gt;Weblate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PlayCover/PlayCover/develop/images/dark.png#gh-dark-mode-only&#34; alt=&#34;Fancy logo&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PlayCover/PlayCover/develop/images/light.png#gh-light-mode-only&#34; alt=&#34;Fancy logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PlayCover/PlayCover/develop/#top&#34;&gt;⬆️ Back to top️&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- GETTING STARTED --&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Follow the instructions below to get Genshin Impact, and many other games, up and running in no time.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;At the moment, PlayCover can only run on Apple Silicon Macs. Devices with the following chips are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;M1&lt;/li&gt; &#xA; &lt;li&gt;M1 Pro&lt;/li&gt; &#xA; &lt;li&gt;M1 Max&lt;/li&gt; &#xA; &lt;li&gt;M1 Ultra&lt;/li&gt; &#xA; &lt;li&gt;M2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have an Intel Mac, you can explore alternatives like Bootcamp or emulators.&lt;/p&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;You can download stable releases &lt;a href=&#34;https://github.com/PlayCover/PlayCover/releases&#34;&gt;here&lt;/a&gt;, or build from source by following the instructions in the Documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;To learn how to setup and use PlayCover, visit the documentation &lt;a href=&#34;https://playcover.github.io/PlayBook&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew Cask&lt;/h3&gt; &#xA;&lt;p&gt;We host a &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; tap with the &lt;a href=&#34;https://github.com/PlayCover/homebrew-playcover/raw/master/Casks/playcover-community.rb&#34;&gt;PlayCover cask&lt;/a&gt;. To install from it run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install --cask PlayCover/playcover/playcover-community&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Remove PlayCover using &lt;code&gt;brew uninstall --cask playcover-community&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Untap &lt;code&gt;PlayCover/playcover&lt;/code&gt; with &lt;code&gt;brew untap PlayCover/playcover&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PlayCover/PlayCover/develop/#top&#34;&gt;⬆️ Back to top️&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- LICENSE --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the GPLv3 License. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;!-- CONTACT --&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Lucas Lee - &lt;a href=&#34;mailto:playcover@lucas.icu&#34;&gt;playcover@lucas.icu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Depal - &lt;a href=&#34;mailto:depal@playcover.io&#34;&gt;depal@playcover.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ACKNOWLEDGMENTS --&gt; &#xA;&lt;h2&gt;Libraries Used&lt;/h2&gt; &#xA;&lt;p&gt;These open source libraries were used to create this project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/paradiseduo/inject&#34;&gt;inject&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Ret70/PTFakeTouch&#34;&gt;PTFakeTouch&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shapedbyiris/download-manager&#34;&gt;DownloadManager&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huynguyencong/DataCache&#34;&gt;DataCache&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lorenzofiamingo/swiftui-cached-async-image&#34;&gt;SwiftUI CachedAsyncImage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Thanks to @iVoider for creating such a great project!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PlayCover/PlayCover/develop/#top&#34;&gt;⬆️ Back to top️&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;</summary>
  </entry>
</feed>