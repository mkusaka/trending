<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-23T01:47:27Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>markiv/SwiftUI-Shimmer</title>
    <updated>2023-01-23T01:47:27Z</updated>
    <id>tag:github.com,2023-01-23:/markiv/SwiftUI-Shimmer</id>
    <link href="https://github.com/markiv/SwiftUI-Shimmer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Shimmer is a super-light modifier that adds a shimmering effect to any SwiftUI View, for example, to show that an operation is in progress. It works well on light and dark modes, and across iOS, macOS, tvOS and watchOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SwiftUI-Shimmer ✨&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Shimmer&lt;/code&gt; is a super-light modifier that adds a shimmering effect to any SwiftUI &lt;code&gt;View&lt;/code&gt;, for example, to show that an operation is in progress. It works well on light and dark modes, and across iOS, macOS, tvOS and watchOS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import SwiftUI&#xA;import Shimmer&#xA;⋮&#xA;⋮&#xA;Text(&#34;SwiftUI Shimmer&#34;).modifier(Shimmer())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or more conveniently&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Text(&#34;SwiftUI Shimmer&#34;).shimmering()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/markiv/SwiftUI-Shimmer/main/docs/light.gif&#34; alt=&#34;Light Mode&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/markiv/SwiftUI-Shimmer/main/docs/dark.gif&#34; alt=&#34;Dark Mode&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Optional Parameters ⚙️&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;active&lt;/code&gt;: Convenience parameter to conditionally enable the effect. Defaults to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;duration&lt;/code&gt;: The duration of a shimmer cycle in seconds. Default: &lt;code&gt;1.5&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bounce&lt;/code&gt;: Whether to bounce (reverse) the animation back and forth. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;delay&lt;/code&gt;: A delay in seconds. Defaults to &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/markiv/SwiftUI-Shimmer/main/docs/bounce3.gif&#34; alt=&#34;Bounce 3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom Animation&lt;/h2&gt; &#xA;&lt;p&gt;You can now provide a custom animation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Text(&#34;Loading...&#34;)&#xA;    .shimmering(&#xA;        active: isAnimating,&#xA;        animation: .easeInOut(duration: 2).repeatCount(5, autoreverses: false).delay(1)&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Animated Skeletons ☠️&lt;/h2&gt; &#xA;&lt;p&gt;Of course, you can combine &lt;code&gt;.shimmering(...)&lt;/code&gt; with the &lt;code&gt;.redacted(...)&lt;/code&gt; modifier to create interesting animated skeleton views.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/markiv/SwiftUI-Shimmer/main/docs/loading.gif&#34; alt=&#34;Loading&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Text(&#34;Some text&#34;)&#xA;    .redacted(reason: .placeholder)&#xA;    .shimmering()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;SwiftUI-Shimmer can be installed using Swift Package Manager.&lt;/p&gt; &#xA;&lt;p&gt;Use the package URL to search for the URLImage package: &lt;a href=&#34;https://github.com/markiv/SwiftUI-Shimmer&#34;&gt;https://github.com/markiv/SwiftUI-Shimmer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For how-to integrate package dependencies refer to &lt;a href=&#34;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&#34;&gt;Adding Package Dependencies to Your App documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What About UIKit?&lt;/h2&gt; &#xA;&lt;p&gt;For an older, UIKit-based shimmer effect, see &lt;a href=&#34;https://github.com/markiv/UIView-Shimmer&#34;&gt;UIView-Shimmer&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>