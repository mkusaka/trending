<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-20T01:39:52Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>1998code/iOS16-Live-Activities</title>
    <updated>2022-09-20T01:39:52Z</updated>
    <id>tag:github.com,2022-09-20:/1998code/iOS16-Live-Activities</id>
    <link href="https://github.com/1998code/iOS16-Live-Activities" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SwiftPizza App for Apple ActivityKit &amp; WidgetKit &amp; Dynamic Island.&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;64px&#34; src=&#34;https://user-images.githubusercontent.com/54872601/181689472-8f443ca9-4fa0-418b-b0d3-e0730883889a.png&#34;&gt; &#xA;&lt;h1&gt;iOS16 Live Activities + Dynamic Island üèùÔ∏è&lt;/h1&gt; &#xA;&lt;h3&gt;SwiftPizza üçïüë®üèª‚Äçüç≥ App for Apple ActivityKit &amp;amp; WidgetKit&lt;/h3&gt; &#xA;&lt;p&gt;This is the first project example referring to the latest &lt;a href=&#34;https://developer.apple.com/news/?id=hi37aek8&#34;&gt;Apple ActivityKit beta&lt;/a&gt; and &lt;a href=&#34;https://developer.apple.com/news/?id=ttuz9vwq&#34;&gt;Dynamic Island (NEW)&lt;/a&gt; release.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Live Activities will help you follow an ongoing activity right from your Lock Screen, so you can track the progress of your food delivery or use the Now Playing controls without unlocking your device.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Your app‚Äôs Live Activities display on the Lock Screen and in Dynamic Island ‚Äî a new design that introduces an intuitive, delightful way to experience iPhone 14 Pro and iPhone 14 Pro Max.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img width=&#34;400px&#34; src=&#34;https://user-images.githubusercontent.com/54872601/181690034-bf5b5c58-16c2-45e7-8ef3-57899b0bf208.gif&#34;&gt; &lt;img width=&#34;400px&#34; src=&#34;https://user-images.githubusercontent.com/54872601/190294592-0e019d65-0b37-4636-a8af-49a49cc3657b.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;More Videos&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/1998design/status/1552681295607566336?s=21&amp;amp;t=waceX8VvaP-VCGc2KJmHpw&#34;&gt;https://twitter.com/1998design/status/1552681295607566336?s=21&amp;amp;t=waceX8VvaP-VCGc2KJmHpw&lt;/a&gt; &lt;a href=&#34;https://twitter.com/1998design/status/1552686498276814848?s=21&amp;amp;t=waceX8VvaP-VCGc2KJmHpw&#34;&gt;https://twitter.com/1998design/status/1552686498276814848?s=21&amp;amp;t=waceX8VvaP-VCGc2KJmHpw&lt;/a&gt; &lt;a href=&#34;https://twitter.com/1998design/status/1570225193095933952?s=21&amp;amp;t=LoYk1Llj0cLpEhG0MBFZLw&#34;&gt;https://twitter.com/1998design/status/1570225193095933952?s=21&amp;amp;t=LoYk1Llj0cLpEhG0MBFZLw&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Environment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 16.1 beta 1&lt;/li&gt; &#xA; &lt;li&gt;Xcode 14.1 beta 1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;Dynamic Island: &lt;a href=&#34;https://1998design.medium.com/how-to-create-dynamic-island-widgets-on-ios-16-1-or-above-dca0a7dd1483&#34;&gt;https://1998design.medium.com/how-to-create-dynamic-island-widgets-on-ios-16-1-or-above-dca0a7dd1483&lt;/a&gt; &lt;br&gt; Live Activities: &lt;a href=&#34;https://1998design.medium.com/how-to-create-live-activities-widget-for-ios-16-2c07889f1235&#34;&gt;https://1998design.medium.com/how-to-create-live-activities-widget-for-ios-16-2c07889f1235&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Info.plist&lt;/h3&gt; &#xA;&lt;p&gt;Add &lt;code&gt;NSSupportsLiveActivities&lt;/code&gt; key and set to &lt;code&gt;YES&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Import&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import ActivityKit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Activity Attributes (Targeted to both App and Widget)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct PizzaDeliveryAttributes: ActivityAttributes {&#xA;    public typealias PizzaDeliveryStatus = ContentState&#xA;&#xA;    public struct ContentState: Codable, Hashable {&#xA;        var driverName: String&#xA;        // Changed from Date to ClosedRange&amp;lt;Date&amp;gt; - 16.1&#xA;        var estimatedDeliveryTime: ClosedRange&amp;lt;Date&amp;gt;&#xA;    }&#xA;&#xA;    var numberOfPizzas: Int&#xA;    var totalAmount: String&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Functions (Start / Update / Stop / Show ALL)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func startDeliveryPizza() {&#xA;    let pizzaDeliveryAttributes = PizzaDeliveryAttributes(numberOfPizzas: 1, totalAmount:&#34;$99&#34;)&#xA;    // Date() changed to Date()...Date() - 16.1&#xA;    let initialContentState = PizzaDeliveryAttributes.PizzaDeliveryStatus(driverName: &#34;TIM üë®üèª‚Äçüç≥&#34;, estimatedDeliveryTime: Date()...Date().addingTimeInterval(15 * 60))&#xA;&#xA;    do {&#xA;        let deliveryActivity = try Activity&amp;lt;PizzaDeliveryAttributes&amp;gt;.request(&#xA;            attributes: pizzaDeliveryAttributes,&#xA;            contentState: initialContentState,&#xA;            pushType: nil)&#xA;        print(&#34;Requested a pizza delivery Live Activity \(deliveryActivity.id)&#34;)&#xA;    } catch (let error) {&#xA;        print(&#34;Error requesting pizza delivery Live Activity \(error.localizedDescription)&#34;)&#xA;    }&#xA;}&#xA;&#xA;func updateDeliveryPizza() {&#xA;    Task {&#xA;        // Date() changed to Date()...Date() - 16.1&#xA;        let updatedDeliveryStatus = PizzaDeliveryAttributes.PizzaDeliveryStatus(driverName: &#34;TIM üë®üèª‚Äçüç≥&#34;, estimatedDeliveryTime: Date()...Date().addingTimeInterval(60 * 60))&#xA;&#xA;        for activity in Activity&amp;lt;PizzaDeliveryAttributes&amp;gt;.activities{&#xA;            await activity.update(using: updatedDeliveryStatus)&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;func stopDeliveryPizza() {&#xA;    Task {&#xA;        for activity in Activity&amp;lt;PizzaDeliveryAttributes&amp;gt;.activities{&#xA;            await activity.end(dismissalPolicy: .immediate)&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;func showAllDeliveries() {&#xA;    Task {&#xA;        for activity in Activity&amp;lt;PizzaDeliveryAttributes&amp;gt;.activities {&#xA;            print(&#34;Pizza delivery details: \(activity.id) -&amp;gt; \(activity.attributes)&#34;)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Widgets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import ActivityKit&#xA;import WidgetKit&#xA;import SwiftUI&#xA;&#xA;@main&#xA;struct Widgets: WidgetBundle {&#xA;   var body: some Widget {&#xA;       PizzaDeliveryActivityWidget()&#xA;   }&#xA;}&#xA;&#xA;struct PizzaDeliveryActivityWidget: Widget {&#xA;    var body: some WidgetConfiguration {&#xA;        // attributesType changed to for - 16.1&#xA;        ActivityConfiguration(for: PizzaDeliveryAttributes.self) { context in&#xA;            VStack(alignment: .leading) {&#xA;                HStack {&#xA;                    VStack(alignment: .leading) {&#xA;                        Text(&#34;\(context.state.driverName) is on the way!&#34;).font(.headline)&#xA;                        HStack {&#xA;                            VStack {&#xA;                                Divider().frame(height: 6).overlay(.blue).cornerRadius(5)&#xA;                            }&#xA;                            Image(systemName: &#34;box.truck.badge.clock.fill&#34;).foregroundColor(.blue)&#xA;                            VStack {&#xA;                                RoundedRectangle(cornerRadius: 5)&#xA;                                    .stroke(.secondary, style: StrokeStyle(lineWidth: 1, dash: [5]))&#xA;                                    .frame(height: 6)&#xA;                            }&#xA;                            Text(timerInterval: context.state.estimatedDeliveryTime, countsDown: true)&#xA;                            VStack {&#xA;                                RoundedRectangle(cornerRadius: 5)&#xA;                                    .stroke(.secondary, style: StrokeStyle(lineWidth: 1, dash: [5]))&#xA;                                    .frame(height: 6)&#xA;                            }&#xA;                            Image(systemName: &#34;house.fill&#34;).foregroundColor(.green)&#xA;                        }&#xA;                    }.padding(.trailing, 25)&#xA;                    Text(&#34;\(context.attributes.numberOfPizzas) üçï&#34;).font(.title).bold()&#xA;                }.padding(5)&#xA;                Text(&#34;You&#39;ve already paid: \(context.attributes.totalAmount) + $9.9 Delivery Fee üí∏&#34;).font(.caption).foregroundColor(.secondary)&#xA;            }.padding(15)&#xA;        }&#xA;        // NEW 16.1&#xA;        dynamicIsland: { context in&#xA;            DynamicIsland {&#xA;                DynamicIslandExpandedRegion(.leading) {&#xA;                    Label(&#34;\(context.attributes.numberOfPizzas) Pizzas&#34;, systemImage: &#34;bag&#34;)&#xA;                        .font(.title2)&#xA;                }&#xA;                DynamicIslandExpandedRegion(.trailing) {&#xA;                    Label {&#xA;                        Text(timerInterval: context.state.estimatedDeliveryTime, countsDown: true)&#xA;                            .multilineTextAlignment(.trailing)&#xA;                            .frame(width: 50)&#xA;                            .monospacedDigit()&#xA;                            .font(.caption2)&#xA;                    } icon: {&#xA;                        Image(systemName: &#34;timer&#34;)&#xA;                    }&#xA;                    .font(.title2)&#xA;                }&#xA;                DynamicIslandExpandedRegion(.center) {&#xA;                    Text(&#34;\(context.state.driverName) is on his way!&#34;)&#xA;                        .lineLimit(1)&#xA;                        .font(.caption)&#xA;                }&#xA;                DynamicIslandExpandedRegion(.bottom) {&#xA;                    Button {&#xA;                        // Deep link into the app.&#xA;                    } label: {&#xA;                        Label(&#34;Contact driver&#34;, systemImage: &#34;phone&#34;)&#xA;                    }&#xA;                }&#xA;            } compactLeading: {&#xA;                Label {&#xA;                    Text(&#34;\(context.attributes.numberOfPizzas) Pizzas&#34;)&#xA;                } icon: {&#xA;                    Image(systemName: &#34;bag&#34;)&#xA;                }&#xA;                .font(.caption2)&#xA;            } compactTrailing: {&#xA;                Text(timerInterval: context.state.estimatedDeliveryTime, countsDown: true)&#xA;                    .multilineTextAlignment(.center)&#xA;                    .frame(width: 40)&#xA;                    .font(.caption2)&#xA;            } minimal: {&#xA;                VStack(alignment: .center) {&#xA;                    Image(systemName: &#34;timer&#34;)&#xA;                    Text(timerInterval: context.state.estimatedDeliveryTime, countsDown: true)&#xA;                        .multilineTextAlignment(.center)&#xA;                        .monospacedDigit()&#xA;                        .font(.caption2)&#xA;                }&#xA;            }&#xA;            .keylineTint(.cyan)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Responses&lt;/h2&gt; &#xA;&lt;h3&gt;Start Activity&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Console: Requested a pizza delivery Live Activity DA288E1B-F6F5-4BF1-AA73-E43E0CC13150&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Show ALL Activities&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Console: Pizza delivery details: DA288E1B-F6F5-4BF1-AA73-E43E0CC13150 -&amp;gt; PizzaDeliveryAttributes(numberOfPizzas: 1, totalAmount: &#34;$99&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to pass image data to the widget&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;YES. Use Local Assets Folder &lt;br&gt; a. Advantage: Easy to implement &lt;br&gt; May possible to change image (string name) when updating the event&lt;br&gt; b. Bad: Limited options and big app size.&lt;br&gt; If you need to add more image sets, then re-upload to App Store is required (Time wasting, and not all users can get the instant update)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;YES. Load the image from the Internet, and pass the data to the widget via App Group and AppStorage (aka UserDefaults)&lt;br&gt; a. Advantage: Can update in any time as the url can be changed / modify remotely.&lt;br&gt; No need to store in Assets Folder and reduced app size.&lt;br&gt; b. Limitation: Unless the user re-open the app, the image cannot be updated in the background.&lt;/li&gt; &#xA; &lt;li&gt;NO. Async Image (Known not working)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.apple.com/documentation/activitykit/displaying-live-data-on-the-lock-screen-with-live-activities&#34;&gt;https://developer.apple.com/documentation/activitykit/displaying-live-data-on-the-lock-screen-with-live-activities&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Legal&lt;/h2&gt; &#xA;&lt;p&gt;Swift¬Æ and SwiftUI¬Æ are trademarks of Apple Inc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elihwyma/Pogo</title>
    <updated>2022-09-20T01:39:52Z</updated>
    <id>tag:github.com,2022-09-20:/elihwyma/Pogo</id>
    <link href="https://github.com/elihwyma/Pogo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;don&#39;t use this if you don&#39;t know what ur doing. this isn&#39;t a jailbreak. this will merely strap procursus. as of now no tweaks will work. hardly any packages. hardly any repos. for developers to mess about with. have fun&lt;/p&gt; &#xA;&lt;p&gt;all this code is dog shit, it&#39;s thrown together with a knife and fork because quite frankly i don&#39;t give a fuck and neither should you. queen of ui design&lt;/p&gt; &#xA;&lt;p&gt;out of sheer laziness this uses &lt;a href=&#34;https://github.com/tsolomko/SWCompression&#34;&gt;SWCompression&lt;/a&gt; for opening up the tar file&lt;/p&gt; &#xA;&lt;p&gt;to build just run &lt;code&gt;make&lt;/code&gt; in root, needs xcode and other shittery&lt;/p&gt; &#xA;&lt;p&gt;if u can&#39;t build ipa, use &lt;a href=&#34;https://nightly.link/elihwyma/Pogo/workflows/build/main/Pogo&#34;&gt;nightly.link&lt;/a&gt; or the artifact.&lt;/p&gt; &#xA;&lt;p&gt;to install, boot ios with a modified kernel that disables amfi, open this ipa in trollstore and then press install&lt;/p&gt; &#xA;&lt;p&gt;if u want a repo, add mineek.github.io/repo, it&#39;s not signed atm so make sure to do apt update --allow-insecure-repositories (if using sileo it works already, make sure to NOT open issues at procursus when using rootless.)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gmarm/BetterSegmentedControl</title>
    <updated>2022-09-20T01:39:52Z</updated>
    <id>tag:github.com,2022-09-20:/gmarm/BetterSegmentedControl</id>
    <link href="https://github.com/gmarm/BetterSegmentedControl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An easy to use, customizable replacement for UISegmentedControl &amp; UISwitch.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BetterSegmentedControl&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift-5.1-blue.svg?style=flat&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://app.bitrise.io/app/1d06a34a06589be2/status.svg?token=i0xHqYqUAjHGkzToH5FVOg&amp;amp;branch=master&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;http://cocoapods.org/pods/BetterSegmentedControl&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/BetterSegmentedControl.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/BetterSegmentedControl&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/BetterSegmentedControl.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/BetterSegmentedControl&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/BetterSegmentedControl.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gmarm/BetterSegmentedControl/master/Assets/logo-transparent-background.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;code&gt;BetterSegmentedControl&lt;/code&gt; is an easy to use, customizable replacement for &lt;code&gt;UISegmentedControl&lt;/code&gt; and &lt;code&gt;UISwitch&lt;/code&gt; written in Swift.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Can be used as a segmented control or switch&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Plethora of customizable options from colors to insets, radii and animations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use text or icons as segments, or add your own custom segments&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Designable straight in Interface Builder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Accessibility support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; iPad cursor support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customizable behavior&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Right-to-left languages support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fully tested&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check the latest release notes &lt;a href=&#34;https://github.com/gmarm/BetterSegmentedControl/releases/tag/2.0.1&#34;&gt;here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gmarm/BetterSegmentedControl/master/Assets/demo_main.gif&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;iPad cursor&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gmarm/BetterSegmentedControl/master/Assets/demo_ipad_cursor.gif&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 9.0+&lt;/li&gt; &#xA; &lt;li&gt;Xcode 8+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;BetterSegmentedControl is available through Swift Package Manager. To install it, simply go to Xcode under &lt;code&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;BetterSegmentedControl is available through &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, simply add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Swift 5.1&#xA;pod &#39;BetterSegmentedControl&#39;, &#39;~&amp;gt; 2.0&#39;&#xA;&#xA;# Swift 4&#xA;pod &#39;BetterSegmentedControl&#39;, &#39;1.0&#39;&#xA;&#xA;# Swift 3 / Objective-C&#xA;pod &#39;BetterSegmentedControl&#39;, &#39;0.8&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer not to use CocoaPods or Swift Package Manager, you can integrate BetterSegmentedControl into your project manually.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let control = BetterSegmentedControl(frame: CGRect(x: 16.0,&#xA;                                                   y: 0,&#xA;                                                   width: view.bounds.width - 32.0,&#xA;                                                   height: 44.0))&#xA;view.addSubview(control)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find several ways of using it, such as by designing it in a Storyboard file or creating it in code in the example project.&lt;/p&gt; &#xA;&lt;p&gt;To run the example project, clone the repo, and run &lt;code&gt;pod install&lt;/code&gt; from the Example directory first.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to submit Pull Requests or send me your feedback and suggestions!&lt;/p&gt; &#xA;&lt;p&gt;Logo by &lt;a href=&#34;https://dribbble.com/guillaumegalante&#34;&gt;Guillaume Galante&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;George Marmaridis&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gmarm&#34;&gt;https://github.com/gmarm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/gmarmas&#34;&gt;https://twitter.com/gmarmas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/gmarm&#34;&gt;https://www.linkedin.com/in/gmarm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:gmarmas@gmail.com&#34;&gt;gmarmas@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;BetterSegmentedControl is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;</summary>
  </entry>
</feed>