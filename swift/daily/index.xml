<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-04T01:42:58Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TelegramMessenger/Telegram-iOS</title>
    <updated>2024-04-04T01:42:58Z</updated>
    <id>tag:github.com,2024-04-04:/TelegramMessenger/Telegram-iOS</id>
    <link href="https://github.com/TelegramMessenger/Telegram-iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Telegram-iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Telegram iOS Source Code Compilation Guide&lt;/h1&gt; &#xA;&lt;p&gt;We welcome all developers to use our API and source code to create applications on our platform. There are several things we require from &lt;strong&gt;all developers&lt;/strong&gt; for the moment.&lt;/p&gt; &#xA;&lt;h1&gt;Creating your Telegram Application&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://core.telegram.org/api/obtaining_api_id&#34;&gt;&lt;strong&gt;Obtain your own api_id&lt;/strong&gt;&lt;/a&gt; for your application.&lt;/li&gt; &#xA; &lt;li&gt;Please &lt;strong&gt;do not&lt;/strong&gt; use the name Telegram for your app — or make sure your users understand that it is unofficial.&lt;/li&gt; &#xA; &lt;li&gt;Kindly &lt;strong&gt;do not&lt;/strong&gt; use our standard logo (white paper plane in a blue circle) as your app&#39;s logo.&lt;/li&gt; &#xA; &lt;li&gt;Please study our &lt;a href=&#34;https://core.telegram.org/mtproto/security_guidelines&#34;&gt;&lt;strong&gt;security guidelines&lt;/strong&gt;&lt;/a&gt; and take good care of your users&#39; data and privacy.&lt;/li&gt; &#xA; &lt;li&gt;Please remember to publish &lt;strong&gt;your&lt;/strong&gt; code too in order to comply with the licences.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Quick Compilation Guide&lt;/h1&gt; &#xA;&lt;h2&gt;Get the Code&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive -j8 https://github.com/TelegramMessenger/Telegram-iOS.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup Xcode&lt;/h2&gt; &#xA;&lt;p&gt;Install Xcode (directly from &lt;a href=&#34;https://developer.apple.com/download/applications&#34;&gt;https://developer.apple.com/download/applications&lt;/a&gt; or using the App Store).&lt;/p&gt; &#xA;&lt;h2&gt;Adjust Configuration&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Generate a random identifier:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;openssl rand -hex 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create a new Xcode project. Use &lt;code&gt;Telegram&lt;/code&gt; as the Product Name. Use &lt;code&gt;org.{identifier from step 1}&lt;/code&gt; as the Organization Identifier.&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Keychain Access&lt;/code&gt; and navigate to &lt;code&gt;Certificates&lt;/code&gt;. Locate &lt;code&gt;Apple Development: your@email.address (XXXXXXXXXX)&lt;/code&gt; and double tap the certificate. Under &lt;code&gt;Details&lt;/code&gt;, locate &lt;code&gt;Organizational Unit&lt;/code&gt;. This is the Team ID.&lt;/li&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;build-system/template_minimal_development_configuration.json&lt;/code&gt;. Use data from the previous steps.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Generate an Xcode project&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py \&#xA;    --cacheDir=&#34;$HOME/telegram-bazel-cache&#34; \&#xA;    generateProject \&#xA;    --configurationPath=build-system/template_minimal_development_configuration.json \&#xA;    --xcodeManagedCodesigning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Advanced Compilation Guide&lt;/h1&gt; &#xA;&lt;h2&gt;Xcode&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy and edit &lt;code&gt;build-system/appstore-configuration.json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;build-system/fake-codesigning&lt;/code&gt;. Create and download provisioning profiles, using the &lt;code&gt;profiles&lt;/code&gt; folder as a reference for the entitlements.&lt;/li&gt; &#xA; &lt;li&gt;Generate an Xcode project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py \&#xA;    --cacheDir=&#34;$HOME/telegram-bazel-cache&#34; \&#xA;    generateProject \&#xA;    --configurationPath=configuration_from_step_1.json \&#xA;    --codesigningInformationPath=directory_from_step_2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;IPA&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Repeat the steps from the previous section. Use distribution provisioning profiles.&lt;/li&gt; &#xA; &lt;li&gt;Run:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py \&#xA;    --cacheDir=&#34;$HOME/telegram-bazel-cache&#34; \&#xA;    build \&#xA;    --configurationPath=...see previous section... \&#xA;    --codesigningInformationPath=...see previous section... \&#xA;    --buildNumber=100001 \&#xA;    --configuration=release_arm64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h2&gt;Xcode is stuck at &#34;build-request.json not updated yet&#34;&lt;/h2&gt; &#xA;&lt;p&gt;Occasionally, you might observe the following message in your build log:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;/Users/xxx/Library/Developer/Xcode/DerivedData/Telegram-xxx/Build/Intermediates.noindex/XCBuildData/xxx.xcbuilddata/build-request.json&#34; not updated yet, waiting...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Should this occur, simply cancel the ongoing build and initiate a new one.&lt;/p&gt; &#xA;&lt;h2&gt;Telegram_xcodeproj: no such package&lt;/h2&gt; &#xA;&lt;p&gt;Following a system restart, the auto-generated Xcode project might encounter a build failure accompanied by this error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ERROR: Skipping &#39;@rules_xcodeproj_generated//generator/Telegram/Telegram_xcodeproj:Telegram_xcodeproj&#39;: no such package &#39;@rules_xcodeproj_generated//generator/Telegram/Telegram_xcodeproj&#39;: BUILD file not found in directory &#39;generator/Telegram/Telegram_xcodeproj&#39; of external repository @rules_xcodeproj_generated. Add a BUILD file to a directory to mark it as a package.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you encounter this issue, re-run the project generation steps in the README.&lt;/p&gt; &#xA;&lt;h1&gt;Tips&lt;/h1&gt; &#xA;&lt;h2&gt;Codesigning is not required for simulator-only builds&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;--disableProvisioningProfiles&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py \&#xA;    --cacheDir=&#34;$HOME/telegram-bazel-cache&#34; \&#xA;    generateProject \&#xA;    --configurationPath=path-to-configuration.json \&#xA;    --codesigningInformationPath=path-to-provisioning-data \&#xA;    --disableProvisioningProfiles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;Each release is built using a specific Xcode version (see &lt;code&gt;versions.json&lt;/code&gt;). The helper script checks the versions of the installed software and reports an error if they don&#39;t match the ones specified in &lt;code&gt;versions.json&lt;/code&gt;. It is possible to bypass these checks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 build-system/Make/Make.py --overrideXcodeVersion build ... # Don&#39;t check the version of Xcode&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>isl-org/OpenBot</title>
    <updated>2024-04-04T01:42:58Z</updated>
    <id>tag:github.com,2024-04-04:/isl-org/OpenBot</id>
    <link href="https://github.com/isl-org/OpenBot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenBot leverages smartphones as brains for low-cost robots. We have designed a small electric vehicle that costs about $50 and serves as a robot body. Our software stack for Android smartphones supports advanced robotics workloads such as person following and real-time autonomous navigation.&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://www.openbot.org/&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Banner&#34; width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/docs/images/banner.jpg&#34;&gt; &lt;/a&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a&gt;Turning Smartphones into Robots&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;GitHub build&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/isl-org/OpenBot/gradle.yml?branch=master&#34;&gt; &lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/isl-org/OpenBot&#34;&gt; &lt;img alt=&#34;GitHub pull requests&#34; src=&#34;https://img.shields.io/github/issues-pr/isl-org/OpenBot&#34;&gt; &lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/isl-org/OpenBot&#34;&gt; &lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/isl-org/OpenBot&#34;&gt; &lt;img alt=&#34;Github downloads&#34; src=&#34;https://img.shields.io/github/downloads/isl-org/OpenBot/total&#34;&gt; &lt;img alt=&#34;Github size&#34; src=&#34;https://img.shields.io/github/repo-size/isl-org/OpenBot&#34;&gt; &lt;img alt=&#34;Github license&#34; src=&#34;https://img.shields.io/github/license/isl-org/OpenBot&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/README_CN.md&#34;&gt;简体中文&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;OpenBot leverages smartphones as brains for low-cost robots. We have designed a small electric vehicle that costs about $50 and serves as a robot body. Our software stack for Android smartphones supports advanced robotics workloads such as person following and real-time autonomous navigation.&lt;/p&gt; &#xA;&lt;h2&gt;Get started with OpenBot&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build your own &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/body/README.md&#34;&gt;Robot Body&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Flash the &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/firmware/README.md&#34;&gt;Arduino Firmware&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/android/README.md&#34;&gt;Android Apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Drive the robot via a &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/controller/README.md&#34;&gt;Controller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Train your own &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/policy/README.md&#34;&gt;Driving Policy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get the source code&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can download the repo as a &lt;a href=&#34;https://github.com/intel-isl/OpenBot/archive/master.zip&#34;&gt;zip file&lt;/a&gt; and extract it into a folder of your choice.&lt;/li&gt; &#xA; &lt;li&gt;You can clone the OpenBot repository from GitHub with the following command: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/intel-isl/OpenBot.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can fork the OpenBot repository and then clone your local copy. This is recommended, especially if you want to &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=RbzPXywJifA&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;300&#34; alt=&#34;youtube video&#34; src=&#34;https://img.youtube.com/vi/RbzPXywJifA/hqdefault.jpg&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=qc8hFLyWDOM&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;300&#34; alt=&#34;youtube video&#34; src=&#34;https://img.youtube.com/vi/qc8hFLyWDOM/hqdefault.jpg&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Cool projects using OpenBot&lt;/h2&gt; &#xA;&lt;p&gt;There are a lot of cool projects using OpenBot already. Below is a small selection. Click on the images to be redirected to the respective projects.&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;a href=&#34;https://www.thingiverse.com/thing:4670884&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Tank OpenBot&#34; width=&#34;24%&#34; src=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/docs/images/openbot_tank.jpg&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://diyrobocars.com/2020/12/14/an-improved-version-of-the-intel-openbot&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;2WD OpenBot&#34; width=&#34;24%&#34; src=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/docs/images/openbot_2wd.jpg&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://custom-build-robots.com/raspberry-pi-robot-cars/openbot-your-smartphone-controls-a-robot-car-introduction/13860?lang=en&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Cardboard OpenBot&#34; width=&#34;24%&#34; src=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/docs/images/chassis_cardboard_1.jpg&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=PEj8jWapGt4&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Baby Yoda OpenBot&#34; width=&#34;24%&#34; src=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/docs/images/openbot_yoda.jpg&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://join.slack.com/t/openbot-community/shared_invite/zt-jl8ygxqt-WNRNi9yzh7Lu60qui6Nh6w&#34;&gt;Slack&lt;/a&gt; channel to connect with the OpenBot community.&lt;/li&gt; &#xA; &lt;li&gt;Contact us via &lt;a href=&#34;mailto:openbot.team@gmail.com&#34;&gt;Email&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;. If you are not sure where to start have a look at the &lt;a href=&#34;https://github.com/intel-isl/OpenBot/issues&#34;&gt;open issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;Please cite our &lt;a href=&#34;https://arxiv.org/abs/2008.10631&#34;&gt;paper&lt;/a&gt; if you use OpenBot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bib&#34;&gt;@inproceedings{mueller2021openbot,&#xA;    title     = {OpenBot: Turning Smartphones into Robots},&#xA;    author    = {M{\&#34;u}ller, Matthias and Koltun, Vladlen},&#xA;    booktitle = {Proceedings of the International Conference on Robotics and Automation (ICRA)},&#xA;    year = {2021},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;a href=&#34;https://www.openbot.org//&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Footer&#34; width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/isl-org/OpenBot/master/docs/images/footer.gif&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>