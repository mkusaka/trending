<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-07T01:44:33Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>swiftwasm/WasmKit</title>
    <updated>2025-04-07T01:44:33Z</updated>
    <id>tag:github.com,2025-04-07:/swiftwasm/WasmKit</id>
    <link href="https://github.com/swiftwasm/WasmKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WebAssembly Runtime written in Swift&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;WasmKit Icon&#34; src=&#34;https://raw.github.com/wiki/akkyie/wakit/images/wakit_icon.png&#34; width=&#34;100px&#34;&gt; &#xA;&lt;h1&gt;WasmKit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;WasmKit&lt;/strong&gt; is a standalone and embeddable WebAssembly runtime implementation written in Swift.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The best way to learn how to use WasmKit is to look at the &lt;a href=&#34;https://raw.githubusercontent.com/swiftwasm/WasmKit/main/Examples&#34;&gt;Examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Command Line Tool&lt;/h3&gt; &#xA;&lt;p&gt;WasmKit provides a command line tool to run WebAssembly binaries compliant with WASI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone https://github.com/swiftwasm/WasmKit.git&#xA;$ cd WasmKit&#xA;$ swift run wasmkit-cli run ./Examples/wasm/hello.wasm&#xA;Hello, World!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;As a Library&lt;/h3&gt; &#xA;&lt;h4&gt;Swift Package Manager&lt;/h4&gt; &#xA;&lt;p&gt;You can use WasmKit as a &lt;a href=&#34;https://www.swift.org/documentation/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; dependency by adding the following to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/swiftwasm/WasmKit.git&#34;, from: &#34;0.1.0&#34;),&#xA;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find API documentation on the &lt;a href=&#34;https://swiftpackageindex.com/swiftwasm/WasmKit/main/documentation/wasmkit&#34;&gt;Swift Package Index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftwasm/WasmKit/main/Documentation/RegisterMachine.md#performance-evaluation&#34;&gt;Reasonably fast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Minimal dependencies &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The core runtime engine depends only on &lt;a href=&#34;https://github.com/apple/swift-system&#34;&gt;swift-system&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;No Foundation dependency&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Compact and embeddable &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Debug build complete in 5 seconds[^1]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Batteries included &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;WASI support, WAT parser, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;WasmKit engine works on all major platforms supported by Swift. It is continuously tested on macOS, Ubuntu, and Windows, and should work on the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 10.13+, iOS 12.0+, tvOS 12.0+, watchOS 6.0+&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 20.04+&lt;/li&gt; &#xA; &lt;li&gt;Windows 10+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementation Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WebAssembly MVP&lt;/td&gt; &#xA;   &lt;td&gt;Parsing binary format&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Parsing text format (WAT)&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Execution&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validation&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WebAssembly Proposal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WebAssembly/reference-types/raw/master/proposals/reference-types/Overview.md&#34;&gt;Reference types&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WebAssembly/bulk-memory-operations/raw/master/proposals/bulk-memory-operations/Overview.md&#34;&gt;Bulk memory operations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WebAssembly/mutable-global/raw/master/proposals/mutable-global/Overview.md&#34;&gt;Mutable globals&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WebAssembly/spec/raw/master/proposals/sign-extension-ops/Overview.md&#34;&gt;Sign-extension operators&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WebAssembly/nontrapping-float-to-int-conversions/raw/main/proposals/nontrapping-float-to-int-conversion/Overview.md&#34;&gt;Non-trapping float-to-int conversions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WebAssembly/memory64/raw/main/proposals/memory64/Overview.md&#34;&gt;Memory64&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WebAssembly/tail-call/raw/master/proposals/tail-call/Overview.md&#34;&gt;Tail call&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WebAssembly/threads/raw/master/proposals/threads/Overview.md&#34;&gt;Threads and atomics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ðŸš§ Parser implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WASI&lt;/td&gt; &#xA;   &lt;td&gt;WASI Preview 1&lt;/td&gt; &#xA;   &lt;td&gt;âœ… Implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Minimum Supported Swift Version&lt;/h2&gt; &#xA;&lt;p&gt;The minimum supported Swift version of WasmKit is 5.8, which is the version used to bootstrap the Swift toolchain in &lt;a href=&#34;https://ci.swift.org/&#34;&gt;ci.swift.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;To run the WasmKit test suite, you need to checkout the test suite repositories first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Checkout test suite repositories&#xA;$ ./Vendor/checkout-dependency&#xA;# Run tests&#xA;$ swift test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;This project was originally developed by &lt;a href=&#34;https://github.com/akkyie&#34;&gt;@akkyie&lt;/a&gt;, and is now maintained by the community.&lt;/p&gt; &#xA;&lt;p&gt;[^1]: On a 2020 Mac mini (M1, 16GB RAM) with Swift 5.10. Measured by &lt;code&gt;swift package resolve &amp;amp;&amp;amp; swift package clean &amp;amp;&amp;amp; time swift build --product PrintAdd&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>