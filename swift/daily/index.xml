<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-07T01:55:28Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rxhanson/Rectangle</title>
    <updated>2022-07-07T01:55:28Z</updated>
    <id>tag:github.com,2022-07-07:/rxhanson/Rectangle</id>
    <link href="https://github.com/rxhanson/Rectangle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Move and resize windows on macOS with keyboard shortcuts and snap areas&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rectangle&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rxhanson/Rectangle/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/rxhanson/Rectangle/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://formulae.brew.sh/cask/rectangle&#34;&gt;&lt;img src=&#34;https://badgen.net/homebrew/cask/dm/rectangle&#34; alt=&#34;Monthly downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Rectangle is a window management app based on Spectacle, written in Swift.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13651296/101402672-57ab5300-38d4-11eb-9e8c-6a3147d26711.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Rectangle supports macOS v10.11+.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can download the latest dmg from &lt;a href=&#34;https://rectangleapp.com&#34;&gt;https://rectangleapp.com&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rxhanson/Rectangle/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Or install with brew cask:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install --cask rectangle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;p&gt;The keyboard shortcuts are self explanatory, but the snap areas can use some explanation if you&#39;ve never used them on Windows or other window management apps.&lt;/p&gt; &#xA;&lt;p&gt;Drag a window to the edge of the screen. When the mouse cursor reaches the edge of the screen, you&#39;ll see a footprint that Rectangle will attempt to resize and move the window to when the click is released.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Snap Area&lt;/th&gt; &#xA;   &lt;th&gt;Resulting Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Left or right edge&lt;/td&gt; &#xA;   &lt;td&gt;Left or right half&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Top&lt;/td&gt; &#xA;   &lt;td&gt;Maximize&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Corners&lt;/td&gt; &#xA;   &lt;td&gt;Quarter in respective corner&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Left or right edge, just above or below a corner&lt;/td&gt; &#xA;   &lt;td&gt;Top or bottom half&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bottom left, center, or right third&lt;/td&gt; &#xA;   &lt;td&gt;Respective third&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bottom left or right third, then drag to bottom center&lt;/td&gt; &#xA;   &lt;td&gt;First or last two thirds, respectively&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Ignore an app&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Focus the app that you want to ignore (make a window from that app frontmost).&lt;/li&gt; &#xA; &lt;li&gt;Open the Rectangle menu and select &#34;Ignore app&#34;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Terminal Commands for Hidden Preferences&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rxhanson/Rectangle/master/TerminalCommands.md&#34;&gt;TerminalCommands.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Differences with Spectacle&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rectangle uses &lt;a href=&#34;https://github.com/shpakovski/MASShortcut&#34;&gt;MASShortcut&lt;/a&gt; for keyboard shortcut recording. Spectacle used its own shortcut recorder.&lt;/li&gt; &#xA; &lt;li&gt;Rectangle has additional window actions: move windows to each edge without resizing, maximize only the height of a window, almost maximizing a window.&lt;/li&gt; &#xA; &lt;li&gt;Next/prev screen thirds is replaced with explicitly first third, first two thirds, center third, last two thirds, and last third. Screen orientation is taken into account, as in first third will be left third on landscape and top third on portrait. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can however emulate Spectacle&#39;s third cycling using first and last third actions. So, if you repeatedly execute first third, it will cycle through thirds (first, center, last) and vice-versa with the last third.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;There&#39;s an option to have windows traverse across displays on subsequent left or right executions.&lt;/li&gt; &#xA; &lt;li&gt;Windows will snap when dragged to edges/corners of the screen. This can be disabled.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common Known Issues&lt;/h2&gt; &#xA;&lt;h3&gt;Rectangle doesn&#39;t have the ability to move to other desktops/spaces&lt;/h3&gt; &#xA;&lt;p&gt;Apple never released a public API for Spaces. Other apps that move windows between spaces use unsupported or undesirable ways to achieve this. If Apple decides to release a public API for it, I&#39;ll add it in.&lt;/p&gt; &#xA;&lt;h3&gt;Window resizing is off slightly for iTerm2&lt;/h3&gt; &#xA;&lt;p&gt;By default iTerm2 will only resize in increments of character widths. There might be a setting inside iTerm2 to disable this, but you can change it with the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;defaults write com.googlecode.iterm2 DisableWindowSizeSnap -integer 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rectangle appears to cause Notification Center to freeze&lt;/h3&gt; &#xA;&lt;p&gt;This appears to affect only a small amount of users. To prevent this from happening, uncheck the box for &#34;Snap windows by dragging&#34;. See issue &lt;a href=&#34;https://github.com/rxhanson/Rectangle/issues/317&#34;&gt;317&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;If windows aren&#39;t resizing or moving as you expect, here&#39;s some initial steps to get to the bottom of it. Most issues of this type have been caused by other apps.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure macOS is up to date, if possible.&lt;/li&gt; &#xA; &lt;li&gt;Restart your machine.&lt;/li&gt; &#xA; &lt;li&gt;Make sure there are no other window manager applications running.&lt;/li&gt; &#xA; &lt;li&gt;Make sure that the app whose windows are not behaving properly does not have any conflicting keyboard shortcuts.&lt;/li&gt; &#xA; &lt;li&gt;Try using the menu items to execute a window action or changing the keyboard shortcut to something different so we can tell if it&#39;s a keyboard shortcut issue or not.&lt;/li&gt; &#xA; &lt;li&gt;Enable debug logging, as per the instructions in the following section.&lt;/li&gt; &#xA; &lt;li&gt;The logs are pretty straightforward. If your calculated rect and your resulting rect are identical, chances are that there is another application causing issues. Save your logs if needed to attach to an issue if you create one.&lt;/li&gt; &#xA; &lt;li&gt;If you suspect there may be another application causing issues, try creating and logging in as a new macOS user.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;View Debug Logging&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Hold down the alt (option) key with the Rectangle menu open.&lt;/li&gt; &#xA; &lt;li&gt;Select the &#34;View Logging...&#34; menu item, which is in place of the &#34;About&#34; menu item.&lt;/li&gt; &#xA; &lt;li&gt;Logging will appear in the window as you perform Rectangle commands.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Preferences Storage&lt;/h2&gt; &#xA;&lt;p&gt;The configuration for Rectangle is stored using NSUserDefaults, meaning it is stored in the following location: &lt;code&gt;~/Library/Preferences/com.knollsoft.Rectangle.plist&lt;/code&gt; Note that shortcuts in v0.41+ are stored in a different format and will not load in prior versions.&lt;/p&gt; &#xA;&lt;p&gt;That file can be backed up or transferred to other machines.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Rectangle v0.44+, you can also use the import/export button in the Preferences pane to share to your preferences and keyboard shortcuts across machines using a JSON file.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstallation&lt;/h2&gt; &#xA;&lt;p&gt;Rectangle can be uninstalled by moving it to the trash. Prior to moving it to the trash, you might want to uncheck the box for launching on login to unregister the launcher, but this is not necessary. You can remove the Rectangle defaults from your machine with the following terminal command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;defaults delete com.knollsoft.Rectangle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Logic from Rectangle is used in the &lt;a href=&#34;https://multitouch.app&#34;&gt;Multitouch&lt;/a&gt; app. The &lt;a href=&#34;https://rectangleapp.com/pro&#34;&gt;Rectangle Pro&lt;/a&gt; app is entirely built on top of Rectangle. If you contribute significant code or localizations that get merged into Rectangle, you get a free license of Multitouch or Rectangle Pro. Contributors to Sparkle, MASShortcut, or Spectacle can also receive free Multitouch or Rectangle Pro licenses (just send me a direct message on &lt;a href=&#34;https://gitter.im&#34;&gt;Gitter&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Localization&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to contribute to localization, all of the translations are held in the Main.strings per language. If you would like to add a localization but one doesn&#39;t currently exist and you don&#39;t know how to create one, create an issue and a translation file can be initialized.&lt;/p&gt; &#xA;&lt;p&gt;Pull requests for new localizations or improvements on existing localizations are welcome.&lt;/p&gt; &#xA;&lt;h3&gt;Running the app in Xcode (for developers)&lt;/h3&gt; &#xA;&lt;p&gt;Rectangle uses &lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt; to install Sparkle and MASShortcut.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure CocoaPods is installed and up to date on your machine (&lt;code&gt;sudo gem install cocoapods&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;pod install&lt;/code&gt; the root directory of the project.&lt;/li&gt; &#xA; &lt;li&gt;Open the generated xcworkspace file (&lt;code&gt;open Rectangle.xcworkspace&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>brave/brave-ios</title>
    <updated>2022-07-07T01:55:28Z</updated>
    <id>tag:github.com,2022-07-07:/brave/brave-ios</id>
    <link href="https://github.com/brave/brave-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Brave iOS Browser&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/brave/brave-ios/workflows/Build/badge.svg?branch=development&#34; alt=&#34;Build&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Brave for iOS 🦁&lt;/h1&gt; &#xA;&lt;p&gt;Download on the &lt;a href=&#34;https://itunes.apple.com/app/brave-web-browser/id1052879175?mt=8&#34;&gt;App Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;This branch (development)&lt;/h2&gt; &#xA;&lt;p&gt;This branch is for mainline development that will ship in the next release.&lt;/p&gt; &#xA;&lt;p&gt;This branch currently supports iOS 14+, and is written in Swift 5.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure you aim your pull requests in the right direction.&lt;/p&gt; &#xA;&lt;p&gt;For bug fixes and features for the upcoming release, please see the associated &lt;a href=&#34;https://github.com/brave/brave-ios/milestones&#34;&gt;GitHub milestones&lt;/a&gt; (e.g. &lt;em&gt;2.1.3&lt;/em&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Getting involved&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to participate in this open source project. We love Pull Requests, Bug Reports, ideas, (security) code reviews or any kind of positive contribution.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Development discussion: &lt;a href=&#34;https://community.brave.com/c/contributing/contributing-ios&#34;&gt;&#39;Contributing-ios&#39; Community Forums&lt;/a&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Bugs: &lt;a href=&#34;https://github.com/brave/brave-ios/issues/new&#34;&gt;File a new bug&lt;/a&gt; • &lt;a href=&#34;https://github.com/brave/brave-ios/issues&#34;&gt;Existing bugs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Want to contribute but don&#39;t know where to start? Here is a list of &lt;a href=&#34;https://github.com/brave/brave-ios/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&#34;&gt;Good First Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building the code&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the latest &lt;a href=&#34;https://developer.apple.com/xcode/downloads/&#34;&gt;Xcode developer tools&lt;/a&gt; from Apple. (Xcode 13.3 and up required).&lt;/li&gt; &#xA; &lt;li&gt;Install Xcode Command Line Tools &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;xcode-select --install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Make sure &lt;code&gt;npm&lt;/code&gt; is installed, &lt;code&gt;node&lt;/code&gt; version 12 is recommended&lt;/li&gt; &#xA; &lt;li&gt;Install SwiftLint: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew update&#xA;brew install swiftlint&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone the repository: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/brave/brave-ios.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Pull in the project dependencies: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd brave-ios&#xA;sh ./bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add a symlink to &lt;code&gt;npm&lt;/code&gt; (M1 Macs) &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ln -s $(which npm) /usr/local/bin/npm&#xA;sudo ln -s $(which node) /usr/local/bin/node&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;App/Client.xcodeproj&lt;/code&gt; in Xcode.&lt;/li&gt; &#xA; &lt;li&gt;Build the &lt;code&gt;Debug&lt;/code&gt; scheme in Xcode.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Updating Rewards&lt;/h2&gt; &#xA;&lt;p&gt;Some Brave Rewards code is precompiled into a framework in the &lt;code&gt;BraveRewards&lt;/code&gt; directory. It&#39;s code can be found in &lt;a href=&#34;https://github.com/brave/brave-core/&#34;&gt;brave-core&lt;/a&gt;, and instructions on building and updating this code can be found &lt;a href=&#34;https://github.com/brave/brave-ios/raw/development/BraveCore/Updating%20the%20BraveRewards%20framework.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributor guidelines&lt;/h2&gt; &#xA;&lt;h3&gt;Creating a pull request&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All pull requests must be associated with a specific GitHub issue.&lt;/li&gt; &#xA; &lt;li&gt;If a bug corresponding to the fix does not yet exist, please file it.&lt;/li&gt; &#xA; &lt;li&gt;Please use the following formats in your PR titles: &lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;Fix/Ref #&amp;lt;issueId&amp;gt;: &amp;lt;description&amp;gt;.&lt;/code&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;Examples: &lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;Fix #102: Added Face ID usage description to plist.&lt;/code&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;Ref #102: Fixed type on Face ID usage description.&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add any additional information regarding the PR in the description.&lt;/li&gt; &#xA; &lt;li&gt;In the unlikely and rare situation that a PR fixing multiple, related issues separate issue numbers with a comma: &lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;Fix #159, Fix #160: Removed whitepsace for + button on right-side panel.&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;PRs will be squashed and merged, so it is important to keep PRs focused on specific tasks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Swift style&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift code should generally follow the conventions listed at &lt;a href=&#34;https://github.com/raywenderlich/swift-style-guide&#34;&gt;https://github.com/raywenderlich/swift-style-guide&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Exception: we use 4-space indentation instead of 2.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Whitespace&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New code should not contain any trailing whitespace.&lt;/li&gt; &#xA; &lt;li&gt;We recommend &lt;em&gt;enabling&lt;/em&gt; the &#34;Automatically trim trailing whitespace&#34; and keeping &#34;Including whitespace-only lines&#34; &lt;em&gt;deselected&lt;/em&gt; in Xcode (under Text Editing).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Commits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Each commit should have a single clear purpose. If a commit contains multiple unrelated changes, those changes should be split into separate commits.&lt;/li&gt; &#xA; &lt;li&gt;If a commit requires another commit to build properly, those commits should be squashed.&lt;/li&gt; &#xA; &lt;li&gt;Follow-up commits for any review comments should be squashed. Do not include &#34;Fixed PR comments&#34;, merge commits, or other &#34;temporary&#34; commits in pull requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;In &lt;em&gt;most&lt;/em&gt; cases Pull Request commits will remain intact with a merge commit on the targeted branch.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Code Signing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;After running the &lt;em&gt;bootstrap.sh&lt;/em&gt; script in the setup instructions navigate to: &lt;br&gt;&lt;code&gt;App/Configuration/Local/DevTeam.xcconfig&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add your &lt;em&gt;Apple Team ID&lt;/em&gt; in this file: &lt;br&gt;&lt;code&gt;LOCAL_DEVELOPMENT_TEAM = KL8N8XSYF4&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Team IDs look identical to provisioning profile UUIDs, so make sure this is the correct one.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The entire &lt;code&gt;Local&lt;/code&gt; directory is included in the &lt;code&gt;.gitignore&lt;/code&gt;, so these changes are not tracked by source control. This allows code signing without making tracked changes. Updating this file will only sign the &lt;code&gt;Debug&lt;/code&gt; target for local builds.&lt;/p&gt; &#xA;&lt;h3&gt;Finding Team IDs&lt;/h3&gt; &#xA;&lt;p&gt;The easiest known way to find your team ID is to log into your &lt;a href=&#34;https://developer.apple.com&#34;&gt;Apple Developer&lt;/a&gt; account. After logging in, the team ID is currently shown at the end of the URL: &lt;br&gt;&lt;code&gt;https://developer.apple.com/account/&amp;lt;TEAM ID&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use this string literal in the above, &lt;code&gt;DevTeam.xcconfig&lt;/code&gt; file to code sign&lt;/p&gt; &#xA;&lt;h3&gt;Attribution&lt;/h3&gt; &#xA;&lt;p&gt;This repository is a fork of &lt;a href=&#34;https://github.com/mozilla-mobile/firefox-ios&#34;&gt;Firefox iOS Browser&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>stripe/stripe-ios</title>
    <updated>2022-07-07T01:55:28Z</updated>
    <id>tag:github.com,2022-07-07:/stripe/stripe-ios</id>
    <link href="https://github.com/stripe/stripe-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stripe iOS SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stripe iOS SDK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/stripe/stripe-ios&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/stripe/stripe-ios/master.svg?style=flat&#34; alt=&#34;Travis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/?q=author%3Astripe%20name%3Astripe&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Stripe.svg?style=flat&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stripe/stripe-ios/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/Stripe.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stripe/stripe-ios#&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/Stripe.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Stripe iOS SDK makes it quick and easy to build an excellent payment experience in your iOS app. We provide powerful and customizable UI screens and elements that can be used out-of-the-box to collect your users&#39; payment details. We also expose the low-level APIs that power those UIs so that you can build fully custom experiences.&lt;/p&gt; &#xA;&lt;p&gt;Get started with our &lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?platform=ios&#34;&gt;📚 integration guides&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#examples&#34;&gt;example projects&lt;/a&gt;, or &lt;a href=&#34;https://stripe.dev/stripe-ios/docs/index.html&#34;&gt;📘 browse the SDK reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Learn about our &lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/StripeIdentity/README.md&#34;&gt;Stripe Identity iOS SDK&lt;/a&gt; to verify the identity of your users on iOS.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Updating to a newer version of the SDK? See our &lt;a href=&#34;https://github.com/stripe/stripe-ios/raw/master/MIGRATING.md&#34;&gt;migration guide&lt;/a&gt; and &lt;a href=&#34;https://github.com/stripe/stripe-ios/raw/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;!--ts--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#integration&#34;&gt;Integration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#card-scanning&#34;&gt;Card scanning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#migrating-from-older-versions&#34;&gt;Migrating&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#licenses&#34;&gt;Licenses&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--te--&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Simplified security&lt;/strong&gt;: We make it simple for you to collect sensitive data such as credit card numbers and remain &lt;a href=&#34;https://stripe.com/docs/security#pci-dss-guidelines&#34;&gt;PCI compliant&lt;/a&gt;. This means the sensitive data is sent directly to Stripe instead of passing through your server. For more information, see our &lt;a href=&#34;https://stripe.com/docs/security&#34;&gt;integration security guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apple Pay&lt;/strong&gt;: We provide a &lt;a href=&#34;https://stripe.com/docs/apple-pay&#34;&gt;seamless integration with Apple Pay&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SCA-ready&lt;/strong&gt;: The SDK automatically performs native &lt;a href=&#34;https://stripe.com/docs/payments/3d-secure&#34;&gt;3D Secure authentication&lt;/a&gt; if needed to comply with &lt;a href=&#34;https://stripe.com/docs/strong-customer-authentication&#34;&gt;Strong Customer Authentication&lt;/a&gt; regulation in Europe.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Native UI&lt;/strong&gt;: We provide native screens and elements to collect payment details. For example, &lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?platform=ios&#34;&gt;PaymentSheet&lt;/a&gt; is a prebuilt UI that combines all the steps required to pay - collecting payment details, billing details, and confirming the payment - into a single sheet that displays on top of your app.&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/89988962/153276097-9b3369a0-e732-45c4-96ec-ff9d48ad0fb6.png&#34; alt=&#34;PaymentSheet&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Stripe API&lt;/strong&gt;: We provide &lt;a href=&#34;https://stripe.dev/stripe-ios/docs/Classes/STPAPIClient.html&#34;&gt;low-level APIs&lt;/a&gt; that correspond to objects and methods in the Stripe API. You can build your own entirely custom UI on top of this layer, while still taking advantage of utilities like &lt;a href=&#34;https://stripe.dev/stripe-ios/docs/Classes/STPCardValidator.html&#34;&gt;STPCardValidator&lt;/a&gt; to validate your user’s input.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Card scanning&lt;/strong&gt;: We support card scanning on iOS 13 and higher. See our &lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/#card-scanning&#34;&gt;Card scanning&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;App Clips&lt;/strong&gt;: The &lt;code&gt;StripeApplePay&lt;/code&gt; module provides a &lt;a href=&#34;https://stripe.com/docs/apple-pay#app-clips&#34;&gt;lightweight SDK for offering Apple Pay in an App Clip&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Localized&lt;/strong&gt;: We support the following localizations: Bulgarian, Catalan, Chinese (Hong Kong), Chinese (Simplified), Chinese (Traditional), Croatian, Czech, Danish, Dutch, English (US), English (United Kingdom), Estonian, Filipino, Finnish, French, French (Canada), German, Greek, Hungarian, Indonesian, Italian, Japanese, Korean, Latvian, Lithuanian, Malay, Maltese, Norwegian Bokmål, Norwegian Nynorsk (Norway), Polish, Portuguese, Portuguese (Brazil), Romanian, Russian, Slovak, Slovenian, Spanish, Spanish (Latin America), Swedish, Turkish, Thai and Vietnamese.&lt;/p&gt; &#xA;&lt;h4&gt;Recommended usage&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re selling digital products or services that will be consumed within your app, (e.g. subscriptions, in-game currencies, game levels, access to premium content, or unlocking a full version), you must use Apple&#39;s in-app purchase APIs. See the &lt;a href=&#34;https://developer.apple.com/app-store/review/guidelines/#payments&#34;&gt;App Store review guidelines&lt;/a&gt; for more information. For all other scenarios you can use this SDK to process payments via Stripe.&lt;/p&gt; &#xA;&lt;h4&gt;Privacy&lt;/h4&gt; &#xA;&lt;p&gt;The Stripe iOS SDK collects data to help us improve our products and prevent fraud. This data is never used for advertising and is not rented, sold, or given to advertisers. Our full privacy policy is available at &lt;a href=&#34;https://stripe.com/privacy&#34;&gt;https://stripe.com/privacy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For help with Apple&#39;s App Privacy Details form in App Store Connect, visit &lt;a href=&#34;https://support.stripe.com/questions/stripe-ios-sdk-privacy-details&#34;&gt;Stripe iOS SDK Privacy Details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;We support Cocoapods, Carthage, and Swift Package Manager. If you link the library manually, use a version from our &lt;a href=&#34;https://github.com/stripe/stripe-ios/releases&#34;&gt;releases&lt;/a&gt; page and make sure to embed &lt;ins&gt;all&lt;/ins&gt; of the following frameworks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Stripe.xcframework&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Stripe3DS2.xcframework&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;StripeApplePay.xcframework&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;StripeCore.xcframework&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;StripeUICore.xcframework&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To manually link the &lt;strong&gt;Stripe Identity iOS SDK&lt;/strong&gt;, follow &lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/StripeIdentity/README.md#manual-linking&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re reading this on GitHub.com, please make sure you are looking at the &lt;a href=&#34;https://github.com/stripe/stripe-ios/tags&#34;&gt;tagged version&lt;/a&gt; that corresponds to the release you have installed. Otherwise, the instructions and example code may be mismatched with your copy.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The Stripe iOS SDK requires Xcode 13.2.1 or later and is compatible with apps targeting iOS 12 or above. We support Catalyst on macOS 10.15 or later.&lt;/p&gt; &#xA;&lt;p&gt;For iOS 11 support, please use &lt;a href=&#34;https://github.com/stripe/stripe-ios/tree/v21.13.0&#34;&gt;v21.13.0&lt;/a&gt;. For iOS 10, please use &lt;a href=&#34;https://github.com/stripe/stripe-ios/tree/v19.4.0&#34;&gt;v19.4.0&lt;/a&gt;. If you need to support iOS 9, use &lt;a href=&#34;https://github.com/stripe/stripe-ios/tree/v17.0.2&#34;&gt;v17.0.2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Requirements for the &lt;strong&gt;Stripe Identity iOS SDK&lt;/strong&gt; can be found &lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/StripeIdentity/README.md#requirements&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Integration&lt;/h3&gt; &#xA;&lt;p&gt;Get started with our &lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?platform=ios&#34;&gt;📚 integration guides&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/Example&#34;&gt;example projects&lt;/a&gt;, or &lt;a href=&#34;https://stripe.dev/stripe-ios/docs/index.html&#34;&gt;📘 browse the SDK reference&lt;/a&gt; for fine-grained documentation of all the classes and methods in the SDK.&lt;/p&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/Example/PaymentSheet%20Example&#34;&gt;Prebuilt UI&lt;/a&gt; (Recommended)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This example demonstrates how to build a payment flow using &lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?platform=ios&#34;&gt;&lt;code&gt;PaymentSheet&lt;/code&gt;&lt;/a&gt;, an embeddable native UI component that lets you accept &lt;a href=&#34;https://stripe.com/docs/payments/payment-methods/integration-options#payment-method-product-support&#34;&gt;10+ payment methods&lt;/a&gt; with a single integration.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/Example/Non-Card%20Payment%20Examples&#34;&gt;Non-Card Payment Examples&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This example demonstrates how to manually accept various payment methods using the Stripe API.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Card scanning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?platform=ios&#34;&gt;PaymentSheet&lt;/a&gt; offers built-in card scanning. To enable card scanning, you&#39;ll need to set &lt;code&gt;NSCameraUsageDescription&lt;/code&gt; in your application&#39;s plist, and provide a reason for accessing the camera (e.g. &#34;To scan cards&#34;). Card scanning is supported on devices with iOS 13 or higher.&lt;/p&gt; &#xA;&lt;p&gt;You can demo this feature in our &lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/Example/PaymentSheet%20Example&#34;&gt;PaymentSheet example app&lt;/a&gt;. When you run the example app on a device, you&#39;ll see a &#34;Scan Card&#34; button when adding a new card.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions of any kind including new features, bug fixes, and documentation improvements. Please first open an issue describing what you want to build if it is a major change so that we can discuss how to move forward. Otherwise, go ahead and open a pull request for minor changes such as typo fixes and one liners.&lt;/p&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Carthage 0.37 or later (if you have homebrew installed, &lt;code&gt;brew install carthage&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;From the root of the repo, run &lt;code&gt;bundle install &amp;amp;&amp;amp; bundle exec fastlane stripeios_tests&lt;/code&gt;. This will install the test dependencies and run the tests.&lt;/li&gt; &#xA; &lt;li&gt;Once you have run this once, you can also run the tests in Xcode from the &lt;code&gt;StripeiOS&lt;/code&gt; target in &lt;code&gt;Stripe.xcworkspace&lt;/code&gt;. Make sure to use the iPhone 12 mini, iOS 15.4 simulator so the snapshot tests will pass.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Migrating from older versions&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/stripe/stripe-ios/raw/master/MIGRATING.md&#34;&gt;MIGRATING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/LICENSE&#34;&gt;Stripe iOS SDK License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-ios/master/Stripe/PanModal/LICENSE&#34;&gt;PanModal License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>