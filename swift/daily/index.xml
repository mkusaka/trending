<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-10T01:42:43Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mattmassicotte/ConcurrencyRecipes</title>
    <updated>2024-03-10T01:42:43Z</updated>
    <id>tag:github.com,2024-03-10:/mattmassicotte/ConcurrencyRecipes</id>
    <link href="https://github.com/mattmassicotte/ConcurrencyRecipes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Practical solutions to problems with Swift Concurrency&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ConcurrencyRecipes&lt;/h1&gt; &#xA;&lt;p&gt;Practical solutions to problems with Swift Concurrency&lt;/p&gt; &#xA;&lt;p&gt;Swift Concurrency can be really hard to use. I thought it could be handy to document and share solutions and hazards you might face along the way. I am &lt;strong&gt;absolutely not&lt;/strong&gt; saying this is comprehensive, or that the solutions presented are great. I&#39;m learning too. Contributions are very welcome, especially for problems!&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/AsyncContext.md&#34;&gt;Creating an Async Context&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/Protocols.md&#34;&gt;Using Protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/Isolation.md&#34;&gt;Isolation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/Structured.md&#34;&gt;Structured Concurrency&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/SwiftUI.md&#34;&gt;SwiftUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/Recipes/PreconcurrencyLibraries.md&#34;&gt;Using Libraries not Designed for Concurrency&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hazards&lt;/h2&gt; &#xA;&lt;p&gt;Quick definitions for the hazards referenced throughout the recipes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Timing: More than one option is available, but can affect when events actually occur.&lt;/li&gt; &#xA; &lt;li&gt;Ordering: Unstructured tasks means ordering is up to the caller. Think carefully about dependencies, multiple invocations, and cancellation.&lt;/li&gt; &#xA; &lt;li&gt;Lack of Caller Control: definitions always control actor context. This is different from other threading models, and you cannot alter definitions you do not control.&lt;/li&gt; &#xA; &lt;li&gt;Sendability: types that cross isolation domains must be sendable. This isn&#39;t always easy, and for types you do not control, not possible.&lt;/li&gt; &#xA; &lt;li&gt;Blocking: Swift concurrency uses a fixed-size thread pool. Tying up background threads can lead to lag and even deadlock.&lt;/li&gt; &#xA; &lt;li&gt;Availability: Concurrency is evolving rapidly, and some APIs require the latest SDK.&lt;/li&gt; &#xA; &lt;li&gt;Async virality: Making a function async affects all its callsites. This can result in a large number of changes, each of which could, itself, affect subsequence callsites.&lt;/li&gt; &#xA; &lt;li&gt;Actor Reentrancy: More than one thread can enter an Actor&#39;s async methods. An actor&#39;s state can change across awaits.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing and Collaboration&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;d love to hear from you! Get in touch via &lt;a href=&#34;https://mastodon.social/@mattiem&#34;&gt;mastodon&lt;/a&gt;, an issue, or a pull request.&lt;/p&gt; &#xA;&lt;p&gt;I prefer collaboration, and would love to find ways to work together if you have a similar project.&lt;/p&gt; &#xA;&lt;p&gt;By participating in this project you agree to abide by the &lt;a href=&#34;https://raw.githubusercontent.com/mattmassicotte/ConcurrencyRecipes/main/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>