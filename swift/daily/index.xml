<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-21T01:58:17Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dejager/atmos</title>
    <updated>2022-06-21T01:58:17Z</updated>
    <id>tag:github.com,2022-06-21:/dejager/atmos</id>
    <link href="https://github.com/dejager/atmos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A SwiftUI proof-of-concept which adds rain to a view&#39;s background&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Atmos&lt;/h1&gt; &#xA;&lt;p&gt;A SwiftUI proof-of-concept, and some sleight-of-hand, which adds rain to a view&#39;s background.&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; src=&#34;https://user-images.githubusercontent.com/641197/174412574-d7eb2fe1-47c2-461c-a68b-00a8960e015e.png&#34;&gt; &#xA;&lt;h4&gt;&#34;Ima use this in my app...&#34;&lt;/h4&gt; &#xA;&lt;p&gt;Introducing Metal to SwiftUI workflow requires the same level of care and attention you&#39;d give to adopting a rescue hyena. In many ways it&#39;s an architectural decision. Have fun, but proceed with caution. ‚ò∫Ô∏è&lt;/p&gt; &#xA;&lt;h4&gt;&#34;This approach could be more efficient!&#34;&lt;/h4&gt; &#xA;&lt;p&gt;Absolutely it can! In multiple ways. This is a proof of concept I put together over a couple of lunches during WWDC 2022. There&#39;s plenty of room for improvement and I have a short attention span. Run wild and make it better. Or stare in wonder at the waste of a perfectly good GPU. ü´†&lt;/p&gt; &#xA;&lt;h2&gt;I&#39;d love to hear from you&lt;/h2&gt; &#xA;&lt;p&gt;You can reach me through &lt;a href=&#34;https://twitter.com/dejager&#34;&gt;Twitter&lt;/a&gt; or &lt;a href=&#34;https://t.co/y0K7rKBYpy&#34;&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This example is a blend of ideas, tutorials, and code samples shared by these fine folks: &lt;a href=&#34;https://ciechanow.ski&#34;&gt;Bartosz Ciechanowski&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/TheArtOfCodeIsCool&#34;&gt;Martijn Steinrucken&lt;/a&gt; | &lt;a href=&#34;https://metalbyexample.com&#34;&gt;Warren Moore&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@thomaslrdeau&#34;&gt;Thomas Lardeau&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>overtake/TelegramSwift</title>
    <updated>2022-06-21T01:58:17Z</updated>
    <id>tag:github.com,2022-06-21:/overtake/TelegramSwift</id>
    <link href="https://github.com/overtake/TelegramSwift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source code of Telegram for macos on Swift 5.0&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/overtake/TelegramSwift/master/Telegram-Mac/Assets.xcassets/AppIcon.appiconset/Default_128x128.png&#34;&gt; &#xA; &lt;h2 align=&#34;center&#34;&gt;Telegram for macOS&lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/overtake/TelegramSwift/master/images/tg.png&#34; alt=&#34;Telegram macOS screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://telegram.org&#34;&gt;&lt;strong&gt;Telegram&lt;/strong&gt;&lt;/a&gt; is a messaging app with a focus on speed and security. It‚Äôs superfast, simple, and free! This repo contains the official source code for &lt;a href=&#34;https://macos.telegram.org/&#34;&gt;Telegram for macOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get it&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/telegram/id747648890?mt=12&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/overtake/TelegramSwift/master/images/mas_badge.png&#34; alt=&#34;Download on the Mac App Store&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using Homebrew&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew cask install telegram&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;mas-cli&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;mas install 747648890&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual download&lt;/h3&gt; &#xA;&lt;p&gt;If you would like, you can &lt;a href=&#34;https://telegram.org/dl/macos&#34;&gt;download the non-MAS version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://telegram.org/dl/macos/beta&#34;&gt;download the beta version&lt;/a&gt; if you want to try the latest features and you are prepared for bugs and crashes. If you are running the beta, join the &lt;a href=&#34;https://t.me/macswift&#34;&gt;beta testing chat on Telegram&lt;/a&gt; to report bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Contributors on GitHub&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/overtake/TelegramSwift/graphs/contributors&#34;&gt;this repository‚Äôs contributors graph&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Bugs and Suggestions&lt;/h3&gt; &#xA;&lt;p&gt;You can report bug or suggestions feature for Telegram for macOS on &lt;a href=&#34;https://bugs.telegram.org&#34;&gt;Telegram‚Äôs Bugs &amp;amp; Suggestions platform&lt;/a&gt;. Read &lt;a href=&#34;https://bugs.telegram.org/c/746&#34;&gt;the platform tip&lt;/a&gt; before creating first card.&lt;/p&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;You can help translate Telegram for macOS on &lt;a href=&#34;https://translations.telegram.org&#34;&gt;Telegram‚Äôs translations platform&lt;/a&gt;. Pick your language, then look for the macOS translation set.&lt;/p&gt; &#xA;&lt;!--### Third-party libraries--&gt; &#xA;&lt;!--See [LIBRARIES](LIBRARIES.md).--&gt; &#xA;&lt;h2&gt;Permissions&lt;/h2&gt; &#xA;&lt;p&gt;Telegram strives to protect your privacy. This app asks for as few permissions as possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Microphone&lt;/strong&gt;: You can send voice messages and make audio calls with Telegram.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Camera&lt;/strong&gt;: You can set your profile picture using your Mac‚Äôs iSight camera.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Location&lt;/strong&gt;: You can send your location to friends.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Outgoing network connections&lt;/strong&gt;: Telegram needs to connect to the internet to send your messages to your friends.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Incoming network connections&lt;/strong&gt;: Telegram needs to accept incoming connections for peer-to-peer voice calls.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User-selected files&lt;/strong&gt;: You can save files or images to your Mac.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Downloads folder&lt;/strong&gt;: Telegram can automatically download files or images you receive.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shortcuts&lt;/h2&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://github.com/overtake/TelegramSwift/wiki&#34;&gt;Shortcuts&lt;/a&gt; you can learn how easy is navigate using your devices.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Telegram for macOS is licensed under the GNU Public License, version 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/overtake/TelegramSwift/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Forking&lt;/h2&gt; &#xA;&lt;p&gt;You can fork this application and make something awesome! Make sure that your fork follows these five requirements:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do&lt;/strong&gt; &lt;a href=&#34;https://core.telegram.org/api/obtaining_api_id&#34;&gt;get your own API ID&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Don‚Äôt&lt;/strong&gt; call your fork &lt;strong&gt;Telegram&lt;/strong&gt;‚Äâ‚Äî‚Äâor at least make sure your users understand that yours is unofficial.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Don‚Äôt&lt;/strong&gt; use our standard logo (white paper plane in a blue circle) for your fork.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do&lt;/strong&gt; read and follow our &lt;a href=&#34;https://core.telegram.org/mtproto/security_guidelines&#34;&gt;security guidelines&lt;/a&gt; to make sure you take good care of your users‚Äô data and protect their privacy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do&lt;/strong&gt; publish your code. The &lt;a href=&#34;https://raw.githubusercontent.com/overtake/TelegramSwift/master/LICENSE&#34;&gt;GPL license&lt;/a&gt; requires it!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Build&lt;/h2&gt; &#xA;&lt;p&gt;Instructions for building Telegram for macOS are in &lt;a href=&#34;https://raw.githubusercontent.com/overtake/TelegramSwift/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elai950/AlertToast</title>
    <updated>2022-06-21T01:58:17Z</updated>
    <id>tag:github.com,2022-06-21:/elai950/AlertToast</id>
    <link href="https://github.com/elai950/AlertToast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create Apple-like alerts &amp; toasts using SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AlertToast-SwiftUI &lt;a href=&#34;https://twitter.com/intent/tweet?text=Get%20over%20170%20free%20design%20blocks%20based%20on%20Bootstrap%204&amp;amp;url=https://froala.com/design-blocks&amp;amp;via=froala&amp;amp;hashtags=bootstrap,design,templates,blocks,developers&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;Present Apple-like alert &amp;amp; toast in SwiftUI&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/elai950/AlertToast/raw/master/Assets/GithubCoverNew.png&#34; width=&#34;480&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üåÑ Example&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/elai950/AlertToast/raw/master/Assets/onboarding.png&#34; style=&#34;display: block; margin: auto;&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/elai950/AlertToast/raw/master/Assets/ToastExample.gif&#34; style=&#34;display: block; margin: auto;&#34; width=&#34;180&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üî≠ Overview&lt;/h2&gt; &#xA;&lt;p&gt;Currently in SwiftUI, the only way to inform the user about some process that finished for example, is by using &lt;code&gt;Alert&lt;/code&gt;. Sometimes, you just want to pop a message that tells the user that something completed, or his message was sent. Apple doesn&#39;t provide any other method rather than using &lt;code&gt;Alert&lt;/code&gt; even though Apple using all kinds of different pop-ups. The results are poor UX where the user would need to tap &#34;OK/Dismiss&#34; for every little information that he should be notified about.&lt;/p&gt; &#xA;&lt;p&gt;Alert Toast is an open-source library in Github to use with SwiftUI. It allows you to present popups that don&#39;t need any user action to dismiss or to validate. Some great usage examples: &lt;code&gt;Message Sent&lt;/code&gt;, &lt;code&gt;Poor Network Connection&lt;/code&gt;, &lt;code&gt;Profile Updated&lt;/code&gt;, &lt;code&gt;Logged In/Out&lt;/code&gt;, &lt;code&gt;Favorited&lt;/code&gt;, &lt;code&gt;Loading&lt;/code&gt; and so on...&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/BUILD-1.3.7-green?style=for-the-badge&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://img.shields.io/badge/PLATFORM-IOS%20|%20MACOS-lightgray?style=for-the-badge&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://img.shields.io/badge/LICENSE-MIT-lightgray?style=for-the-badge&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://img.shields.io/badge/MADE WITH-SWIFTUI-orange?style=for-the-badge&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built with pure SwiftUI.&lt;/li&gt; &#xA; &lt;li&gt;3 Display modes: &lt;code&gt;Alert&lt;/code&gt; (pop at the center), &lt;code&gt;HUD&lt;/code&gt; (drop from the top) and &lt;code&gt;Banner&lt;/code&gt; (pop/slide from the bottom).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Complete&lt;/code&gt;, &lt;code&gt;Error&lt;/code&gt; &lt;code&gt;SystemImage&lt;/code&gt;, &lt;code&gt;Image&lt;/code&gt;, &lt;code&gt;Loading&lt;/code&gt;, and &lt;code&gt;Regular&lt;/code&gt; (Only Text).&lt;/li&gt; &#xA; &lt;li&gt;Supports Light &amp;amp; Dark Mode.&lt;/li&gt; &#xA; &lt;li&gt;Works with &lt;strong&gt;any&lt;/strong&gt; kind of view builder.&lt;/li&gt; &#xA; &lt;li&gt;Localization support.&lt;/li&gt; &#xA; &lt;li&gt;Font &amp;amp; Background customization.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;If you like the project, don&#39;t forget to &lt;code&gt;put star üåü&lt;/code&gt;.&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:elai950@gmail.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/EMAIL-ELAI-informational?style=for-the-badge&amp;amp;logo=minutemailer&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.linkedin.com/in/elai-zuberman-8120a073/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LINKEDIN-informational?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=5JN5PT55NAHKU&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-informational?style=for-the-badge&amp;amp;logo=paypal&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Navigation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#-installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#cocoapods&#34;&gt;CocoaPods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#manually&#34;&gt;Manually&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#-usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#usage-example-with-regular-alert&#34;&gt;Usage example with regular alert&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#complete-modifier-example&#34;&gt;Complete Modifier Example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#alert-toast-parameters&#34;&gt;Alert Toast Parameters&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#-article&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#-contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#-author&#34;&gt;Author&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#-license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíª Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Cocoapods&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/AlertToast&#34;&gt;AlertToast Cocapods Website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CocoaPods is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate &lt;code&gt;AlertToast&lt;/code&gt; into your Xcode project using CocoaPods, specify it in your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;AlertToast&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; is a tool for managing the distribution of Swift code. It‚Äôs integrated with the Swift build system to automate the process of downloading, compiling, and linking dependencies.&lt;/p&gt; &#xA;&lt;p&gt;To integrate &lt;code&gt;AlertToast&lt;/code&gt; into your Xcode project using Xcode 12, specify it in &lt;code&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency...&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ogdl&#34;&gt;https://github.com/elai950/AlertToast.git, :branch=&#34;master&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Xcode 13, please refer &lt;a href=&#34;https://iiroalhonen.medium.com/adding-a-swift-package-dependency-in-xcode-13-937b2caaf218&#34;&gt;this article&lt;/a&gt; to install &lt;code&gt;AlertToast&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer not to use any of dependency managers, you can integrate &lt;code&gt;AlertToast&lt;/code&gt; into your project manually. Put &lt;code&gt;Sources/AlertToast&lt;/code&gt; folder in your Xcode project. Make sure to enable &lt;code&gt;Copy items if needed&lt;/code&gt; and &lt;code&gt;Create groups&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üß≥ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 13.0+ | macOS 11+&lt;/li&gt; &#xA; &lt;li&gt;Xcode 12.0+ | Swift 5+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üõ† Usage&lt;/h2&gt; &#xA;&lt;p&gt;First, add &lt;code&gt;import AlertToast&lt;/code&gt; on every &lt;code&gt;swift&lt;/code&gt; file you would like to use &lt;code&gt;AlertToast&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then, use the &lt;code&gt;.toast&lt;/code&gt; view modifier:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;isPresenting&lt;/code&gt;: (MUST) assign a &lt;code&gt;Binding&amp;lt;Bool&amp;gt;&lt;/code&gt; to show or dismiss alert.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;duration&lt;/code&gt;: default is 2, set 0 to disable auto dismiss.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tapToDismiss&lt;/code&gt;: default is &lt;code&gt;true&lt;/code&gt;, set &lt;code&gt;false&lt;/code&gt; to disable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;alert&lt;/code&gt;: (MUST) expects &lt;code&gt;AlertToast&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Usage example with regular alert&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import AlertToast&#xA;import SwiftUI&#xA;&#xA;struct ContentView: View{&#xA;&#xA;    @State private var showToast = false&#xA;&#xA;    var body: some View{&#xA;        VStack{&#xA;&#xA;            Button(&#34;Show Toast&#34;){&#xA;                 showToast.toggle()&#xA;            }&#xA;        }&#xA;        .toast(isPresenting: $showToast){&#xA;&#xA;            // `.alert` is the default displayMode&#xA;            AlertToast(type: .regular, title: &#34;Message Sent!&#34;)&#xA;            &#xA;            //Choose .hud to toast alert from the top of the screen&#xA;            //AlertToast(displayMode: .hud, type: .regular, title: &#34;Message Sent!&#34;)&#xA;            &#xA;            //Choose .banner to slide/pop alert from the bottom of the screen&#xA;            //AlertToast(displayMode: .banner(.slide), type: .regular, title: &#34;Message Sent!&#34;)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Complete Modifier Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.toast(isPresenting: $showAlert, duration: 2, tapToDismiss: true, alert: {&#xA;   //AlertToast goes here&#xA;}, onTap: {&#xA;   //onTap would call either if `tapToDismis` is true/false&#xA;   //If tapToDismiss is true, onTap would call and then dismis the alert&#xA;}, completion: {&#xA;   //Completion block after dismiss&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Alert Toast Parameters&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AlertToast(displayMode: DisplayMode,&#xA;           type: AlertType,&#xA;           title: Optional(String),&#xA;           subTitle: Optional(String),&#xA;           style: Optional(AlertStyle))&#xA;           &#xA;//This is the available customizations parameters:&#xA;AlertStyle(backgroundColor: Color?,&#xA;            titleColor: Color?,&#xA;            subTitleColor: Color?,&#xA;            titleFont: Font?,&#xA;            subTitleFont: Font?)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Available Alert Types:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Regular:&lt;/strong&gt; text only (Title and Subtitle).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Complete:&lt;/strong&gt; animated checkmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Error:&lt;/strong&gt; animated xmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;System Image:&lt;/strong&gt; name image from &lt;code&gt;SFSymbols&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Image:&lt;/strong&gt; name image from Assets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Loading:&lt;/strong&gt; Activity Indicator (Spinner).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Alert dialog view modifier (with default settings):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.toast(isPresenting: Binding&amp;lt;Bool&amp;gt;, duration: Double = 2, tapToDismiss: true, alert: () -&amp;gt; AlertToast , onTap: () -&amp;gt; (), completion: () -&amp;gt; () )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Simple Text Alert:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AlertToast(type: .regular, title: Optional(String), subTitle: Optional(String))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Complete/Error Alert:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AlertToast(type: .complete(Color)/.error(Color), title: Optional(String), subTitle: Optional(String))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;System Image Alert:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AlertToast(type: .systemImage(String, Color), title: Optional(String), subTitle: Optional(String))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Image Alert:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AlertToast(type: .image(String), title: Optional(String), subTitle: Optional(String))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Loading Alert:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;//When using loading, duration won&#39;t auto dismiss and tapToDismiss is set to false&#xA;AlertToast(type: .loading, title: Optional(String), subTitle: Optional(String))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add many &lt;code&gt;.toast&lt;/code&gt; on a single view.&lt;/p&gt; &#xA;&lt;h2&gt;üìñ Article&lt;/h2&gt; &#xA;&lt;p&gt;I wrote an article that contains more usage examples.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://elaizuberman.medium.com/presenting-apples-music-alerts-in-swiftui-7f5c32cebed6&#34;&gt;Medium - How to toast an alert in SwiftUI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üë®‚Äçüíª Contributors&lt;/h2&gt; &#xA;&lt;p&gt;All issue reports, feature requests, pull requests and GitHub stars are welcomed and much appreciated.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/barnard-b&#34;&gt;@barnard-b&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚úçÔ∏è Author&lt;/h2&gt; &#xA;&lt;p&gt;Elai Zuberman&lt;/p&gt; &#xA;&lt;h2&gt;üìÉ License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;AlertToast&lt;/code&gt; is available under the MIT license. See the &lt;a href=&#34;https://github.com/elai950/AlertToast/raw/master/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file for more info.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elai950/AlertToast/master/#-overview&#34;&gt;Jump Up&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>