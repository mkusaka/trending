<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-20T01:48:29Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>johnpatrickmorgan/NavigationBackport</title>
    <updated>2022-08-20T01:48:29Z</updated>
    <id>tag:github.com,2022-08-20:/johnpatrickmorgan/NavigationBackport</id>
    <link href="https://github.com/johnpatrickmorgan/NavigationBackport" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backported SwiftUI navigation APIs introduced in WWDC22&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Navigation Backport&lt;/h1&gt; &#xA;&lt;p&gt;This package uses the navigation APIs available in older SwiftUI versions (such as &lt;code&gt;NavigationView&lt;/code&gt; and &lt;code&gt;NavigationLink&lt;/code&gt;) to recreate the new &lt;code&gt;NavigationStack&lt;/code&gt; APIs introduced in WWDC22, so that you can start targeting those APIs on older versions of iOS, tvOS and watchOS.&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ &lt;code&gt;NavigationStack&lt;/code&gt; -&amp;gt; &lt;code&gt;NBNavigationStack&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ &lt;code&gt;NavigationLink&lt;/code&gt; -&amp;gt; &lt;code&gt;NBNavigationLink&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ &lt;code&gt;NavigationPath&lt;/code&gt; -&amp;gt; &lt;code&gt;NBNavigationPath&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ &lt;code&gt;navigationDestination&lt;/code&gt; -&amp;gt; &lt;code&gt;nbNavigationDestination&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ &lt;code&gt;NavigationPath.CodableRepresentation&lt;/code&gt; -&amp;gt; &lt;code&gt;NBNavigationPath.CodableRepresentation&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can migrate to these APIs now, and when you eventually bump your deployment target to iOS 16, you can remove this library and easily migrate to its SwiftUI equivalent. &lt;code&gt;NavigationStack&lt;/code&gt;&#39;s full API is replicated, so you can initialise an &lt;code&gt;NBNavigationStack&lt;/code&gt; with a binding to an &lt;code&gt;Array&lt;/code&gt;, with a binding to a &lt;code&gt;NBNavigationPath&lt;/code&gt; binding, or with no binding at all.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import NavigationBackport&#xA;import SwiftUI&#xA;&#xA;struct ContentView: View {&#xA;  @State var path = NBNavigationPath()&#xA;&#xA;  var body: some View {&#xA;    NBNavigationStack(path: $path) {&#xA;      HomeView()&#xA;        .nbNavigationDestination(for: NumberList.self, destination: { numberList in&#xA;          NumberListView(numberList: numberList)&#xA;        })&#xA;        .nbNavigationDestination(for: Int.self, destination: { number in&#xA;          NumberView(number: number, goBackToRoot: { path.removeLast(path.count) })&#xA;        })&#xA;        .nbNavigationDestination(for: EmojiVisualisation.self, destination: { visualisation in&#xA;          EmojiView(visualisation: visualisation)&#xA;        })&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;struct HomeView: View {&#xA;  var body: some View {&#xA;    VStack(spacing: 8) {&#xA;      NBNavigationLink(value: NumberList(range: 0 ..&amp;lt; 100), label: { Text(&#34;Pick a number&#34;) })&#xA;    }.navigationTitle(&#34;Home&#34;)&#xA;  }&#xA;}&#xA;&#xA;struct NumberList: Hashable {&#xA;  let range: Range&amp;lt;Int&amp;gt;&#xA;}&#xA;&#xA;struct NumberListView: View {&#xA;  let numberList: NumberList&#xA;  var body: some View {&#xA;    List {&#xA;      ForEach(numberList.range, id: \.self) { number in&#xA;        NBNavigationLink(&#34;\(number)&#34;, value: number)&#xA;      }&#xA;    }.navigationTitle(&#34;List&#34;)&#xA;  }&#xA;}&#xA;&#xA;struct NumberView: View {&#xA;  let number: Int&#xA;  let goBackToRoot: () -&amp;gt; Void&#xA;&#xA;  var body: some View {&#xA;    VStack(spacing: 8) {&#xA;      Text(&#34;\(number)&#34;)&#xA;      NBNavigationLink(&#xA;        value: number + 1,&#xA;        label: { Text(&#34;Show next number&#34;) }&#xA;      )&#xA;      NBNavigationLink(&#xA;        value: EmojiVisualisation(emoji: &#34;üêë&#34;, count: number),&#xA;        label: { Text(&#34;Visualise with sheep&#34;) }&#xA;      )&#xA;      Button(&#34;Go back to root&#34;, action: goBackToRoot)&#xA;    }.navigationTitle(&#34;\(number)&#34;)&#xA;  }&#xA;}&#xA;&#xA;struct EmojiVisualisation: Hashable {&#xA;  let emoji: String&#xA;  let count: Int&#xA;  &#xA;  var description: String {&#xA;    Array(repeating: emoji, count: count).joined()&#xA;  }&#xA;}&#xA;&#xA;struct EmojiView: View {&#xA;  let visualisation: EmojiVisualisation&#xA;&#xA;  var body: some View {&#xA;    Text(visualisation.text)&#xA;      .navigationTitle(&#34;Visualise \(visualisation.count)&#34;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deep-linking&lt;/h2&gt; &#xA;&lt;p&gt;Before &lt;code&gt;NavigationStack&lt;/code&gt;, SwiftUI did not support pushing more than one screen in a single state update, e.g. when deep-linking to a screen multiple layers deep in a navigation hierarchy. &lt;code&gt;NavigationBackport&lt;/code&gt; provides an API to work around this limitation: you can wrap such path changes within a call to &lt;code&gt;withDelaysIfUnsupported&lt;/code&gt;, and the library will, if necessary, break down the larger update into a series of smaller updates that SwiftUI supports, with delays in between. For example, the following code that tries to push three screens in one update will not work:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;  path.append(Screen.orders)&#xA;  path.append(Screen.editOrder(id: id))&#xA;  path.append(Screen.confirmChanges(orderId: id))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, the amended code below will successfully push all three screens, one after another:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;$path.withDelaysIfUnsupported {&#xA;  $0.append(Screen.orders)&#xA;  $0.append(Screen.editOrder(id: id))&#xA;  $0.append(Screen.confirmChanges(orderId: id))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can make any changes to the path passed into the &lt;code&gt;withDelaysIfUnsupported&lt;/code&gt; closure, and the library will calculate the minimal number of state updates required to successfully update the UI.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>macadmins/nudge</title>
    <updated>2022-08-20T01:48:29Z</updated>
    <id>tag:github.com,2022-08-20:/macadmins/nudge</id>
    <link href="https://github.com/macadmins/nudge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for encouraging the installation of macOS security updates.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/NudgeIcon.png&#34; width=&#34;10%&#34; height=&#34;10%&#34;&gt; &#xA;&lt;h1&gt;Nudge (macadmin&#39;s Slack &lt;a href=&#34;https://macadmins.slack.com/archives/CDUU7DJQ2&#34;&gt;#nudge&lt;/a&gt;)&lt;/h1&gt; &#xA;&lt;p&gt;Nudge is a multi-linguistic application, offering custom user deferrals, which strongly encourages macOS updates. Written in Swift and SwiftUI.&lt;/p&gt; &#xA;&lt;p&gt;Nudge will only work on macOS Big Sur 11 and later and is a replacement for the original Nudge, which was written in Python 2/3. If you need to enforce macOS updates for earlier versions, it is recommended to use &lt;a href=&#34;https://github.com/macadmins/nudge-python&#34;&gt;nudge-python&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information about installation, deployment, and the user experience, please see the &lt;a href=&#34;https://github.com/macadmins/nudge/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Examples of the User Interface&lt;/h1&gt; &#xA;&lt;h2&gt;simpleMode&lt;/h2&gt; &#xA;&lt;h3&gt;English&lt;/h3&gt; &#xA;&lt;h4&gt;Light&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/simple_mode/demo_simple_light_1.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/simple_mode/demo_simple_light_2.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;h4&gt;Dark&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/simple_mode/demo_simple_dark_1.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/simple_mode/demo_simple_dark_2.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;h3&gt;Localized (Spanish)&lt;/h3&gt; &#xA;&lt;h4&gt;Light&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/simple_mode/demo_simple_light_localized.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;h4&gt;Dark&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/simple_mode/demo_simple_dark_localized.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;h2&gt;standardMode&lt;/h2&gt; &#xA;&lt;h3&gt;English&lt;/h3&gt; &#xA;&lt;h4&gt;Light&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_light_1_icon.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_light_1_no_icon.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_light_2_icon.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_light_2_no_icon.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_light_3.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_light_4.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;h4&gt;Dark&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_dark_1_icon.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_dark_1_no_icon.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_dark_2_icon.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_dark_2_no_icon.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_dark_3.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_dark_4.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;h3&gt;Localized (Spanish)&lt;/h3&gt; &#xA;&lt;h4&gt;Light&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_light_2_localized.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_light_4_icon_localized.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;h4&gt;Dark&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_dark_2_icon_localized.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/macadmins/nudge/main/assets/standard_mode/demo_dark_4_localized.png&#34; width=&#34;75%&#34; height=&#34;75%&#34;&gt;</summary>
  </entry>
</feed>