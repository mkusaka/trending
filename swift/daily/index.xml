<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-08T01:43:34Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Awalz/SwiftyCam</title>
    <updated>2024-01-08T01:43:34Z</updated>
    <id>tag:github.com,2024-01-08:/Awalz/SwiftyCam</id>
    <link href="https://github.com/Awalz/SwiftyCam" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Snapchat Inspired iOS Camera Framework written in Swift&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Awalz/SwiftyCam/master/SwiftyCamBanner.jpg&#34; align=&#34;center&#34;&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-iOS%208%2B-blue.svg?style=flat&#34; alt=&#34;Platform: iOS 8+&#34;&gt; &lt;a href=&#34;https://developer.apple.com/swift&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/language-swift%204.2-4BC51D.svg?style=flat&#34; alt=&#34;Language: Swift 4.2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/SwiftyCam&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/SwiftyCam.svg?style=flat&#34; alt=&#34;CocoaPods compatible&#34;&gt;&lt;/a&gt; &lt;img src=&#34;http://img.shields.io/badge/license-BSD-lightgrey.svg?style=flat&#34; alt=&#34;License: BSD&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;SwiftyCam is a a simple, Snapchat-style iOS Camera framework for easy photo and video capture. SwiftyCam allows users to capture both photos and videos from the same session with very little configuration.&lt;/p&gt; &#xA;&lt;p&gt;Configuring a Camera View Controller in AVFoundation can be tedious and time consuming. SwiftyCam is a drop in View Controller which gives complete control of the AVSession.&lt;/p&gt; &#xA;&lt;h3&gt;For Swift 4 support, see Swift4 branch&lt;/h3&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;SwiftyCam&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üòé&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Snapchat-style media capture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üëç&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Support iOS8+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üì∑&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image capture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üé•&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Video capture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üìà&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Manual image quality settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üéâ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Front and rear camera support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¶&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Front and rear flash&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚òÄ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Retina flash support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üîé&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supports manual zoom&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üîí&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supports manual focus&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üåú&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Low light setting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;üîà&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Background audio support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 8.0+&lt;/li&gt; &#xA; &lt;li&gt;Swift 4.2+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SwiftyCam is available under the BSD license. See the LICENSE file for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Cocoapods:&lt;/h3&gt; &#xA;&lt;p&gt;SwiftyCam is available through &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, simply add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#34;SwiftyCam&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Add this to &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;Awalz/SwiftyCam&#34; ~&amp;gt; 2.2.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ carthage update SwiftyCam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation:&lt;/h3&gt; &#xA;&lt;p&gt;Simply copy the contents of the Source folder into your project.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Using SwiftyCam is very simple.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites:&lt;/h3&gt; &#xA;&lt;p&gt;As of iOS 10, Apple requires the additon of the &lt;code&gt;NSCameraUsageDescription&lt;/code&gt; and &lt;code&gt;NSMicrophoneUsageDescription&lt;/code&gt; strings to the info.plist of your application. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;key&amp;gt;NSCameraUsageDescription&amp;lt;/key&amp;gt;&#xA;&#x9;&amp;lt;string&amp;gt;To Take Photos and Video&amp;lt;/string&amp;gt;&#xA;&amp;lt;key&amp;gt;NSMicrophoneUsageDescription&amp;lt;/key&amp;gt;&#xA;&#x9;&amp;lt;string&amp;gt;To Record Audio With Video&amp;lt;/string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Getting Started:&lt;/h3&gt; &#xA;&lt;p&gt;If you install SwiftyCam from Cocoapods, be sure to import the module into your View Controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import SwiftyCam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SwiftyCam is a drop-in convenience framework. To create a Camera instance, create a new UIViewController subclass. Replace the UIViewController subclass declaration with &lt;code&gt;SwiftyCamViewController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class MyCameraViewController : SwiftyCamViewController&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That is all that is required to setup the AVSession for photo and video capture. SwiftyCam will prompt the user for permission to use the camera/microphone, and configure both the device inputs and outputs.&lt;/p&gt; &#xA;&lt;h2&gt;Capture&lt;/h2&gt; &#xA;&lt;h3&gt;SwiftyCamButton:&lt;/h3&gt; &#xA;&lt;p&gt;SwiftyCam comes with a very convenient method of capturing media. SwiftyCamButton captures photos with a &lt;code&gt;UITapGestureRecognizer&lt;/code&gt; and captures video with a &lt;code&gt;UILongPressGestureRecognizer&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use a SwiftyCamButton, simply create one and assign the delegate to your SwiftyCamViewController:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let captureButton = SwiftyCamButton(frame: buttonFrame)&#xA;captureButton.delegate = self&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual:&lt;/h3&gt; &#xA;&lt;p&gt;Capturing media with SwiftyCam is very simple. To capture a photo, simply call the &lt;code&gt;takePhoto&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;takePhoto()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Capturing Video is just as easy. To begin recording video, call the &lt;code&gt;startVideoRecording&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;startVideoRecording()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To end the capture of a video, call the &lt;code&gt;stopVideoRecording&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;stopVideoRecording()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delegate&lt;/h3&gt; &#xA;&lt;p&gt;In order to acquire the photos and videos taken by either the SwiftyCamButton or manually, you must implement the &lt;code&gt;SwiftyCamViewControllerDelegate&lt;/code&gt; and set the &lt;code&gt;cameraDelegate&lt;/code&gt; to your view controller instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class MyCameraViewController : SwiftyCamViewController, SwiftyCamViewControllerDelegate {&#xA;&#xA;    override func viewDidLoad() {&#xA;        super.viewDidLoad()&#xA;        cameraDelegate = self&#xA;    }&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Delegate methods:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func swiftyCam(_ swiftyCam: SwiftyCamViewController, didTake photo: UIImage) {&#xA;     // Called when takePhoto() is called or if a SwiftyCamButton initiates a tap gesture&#xA;     // Returns a UIImage captured from the current session&#xA;}&#xA;&#xA;func swiftyCam(_ swiftyCam: SwiftyCamViewController, didBeginRecordingVideo camera: SwiftyCamViewController.CameraSelection) {&#xA;     // Called when startVideoRecording() is called&#xA;     // Called if a SwiftyCamButton begins a long press gesture&#xA;}&#xA;&#xA;func swiftyCam(_ swiftyCam: SwiftyCamViewController, didFinishRecordingVideo camera: SwiftyCamViewController.CameraSelection) {&#xA;     // Called when stopVideoRecording() is called&#xA;     // Called if a SwiftyCamButton ends a long press gesture&#xA;}&#xA;&#xA;func swiftyCam(_ swiftyCam: SwiftyCamViewController, didFinishProcessVideoAt url: URL) {&#xA;     // Called when stopVideoRecording() is called and the video is finished processing&#xA;     // Returns a URL in the temporary directory where video is stored&#xA;}&#xA;&#xA;func swiftyCam(_ swiftyCam: SwiftyCamViewController, didFocusAtPoint point: CGPoint) {&#xA;     // Called when a user initiates a tap gesture on the preview layer&#xA;     // Will only be called if tapToFocus = true&#xA;     // Returns a CGPoint of the tap location on the preview layer&#xA;}&#xA;&#xA;func swiftyCam(_ swiftyCam: SwiftyCamViewController, didChangeZoomLevel zoom: CGFloat) {&#xA;&#x9;  // Called when a user initiates a pinch gesture on the preview layer&#xA;&#x9;  // Will only be called if pinchToZoomn = true&#xA;&#x9;  // Returns a CGFloat of the current zoom level&#xA;}&#xA;&#xA;func swiftyCam(_ swiftyCam: SwiftyCamViewController, didSwitchCameras camera: SwiftyCamViewController.CameraSelection) {&#xA;     // Called when user switches between cameras&#xA;     // Returns current camera selection   &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flash&lt;/h2&gt; &#xA;&lt;p&gt;The flash(torch) can be enabled by changing the &lt;code&gt;flashEnabled&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;flashEnabled = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Flash is now supported for front and rear facing cameras.&lt;/p&gt; &#xA;&lt;h3&gt;Rear Camera&lt;/h3&gt; &#xA;&lt;p&gt;For photos, the camera will flash much like the stock iOS camera. For video, the torch(flash) will enable for the duration of the video capture.&lt;/p&gt; &#xA;&lt;h3&gt;Front Camera&lt;/h3&gt; &#xA;&lt;p&gt;For models that support &lt;a href=&#34;https://developer.apple.com/library/content/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/Cameras/Cameras.html#//apple_ref/doc/uid/TP40013599-CH107-SW7&#34;&gt;Retina Flash&lt;/a&gt;, the front camera will use the default flash for image capture. If Retina Flash is not supported, a faux Retina Flash is used similar to Snapchat.&lt;/p&gt; &#xA;&lt;p&gt;For front facing videos, a white, 85% opaque view will be placed over the video feed for the duration of the video capture.&lt;/p&gt; &#xA;&lt;h2&gt;Switching Camera&lt;/h2&gt; &#xA;&lt;p&gt;By default, SwiftyCam will launch to the rear facing camera. This can be changed by changing the &lt;code&gt;defaultCamera&lt;/code&gt; property in &lt;code&gt;viewDidLoad&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;override func viewDidLoad() {&#xA;    super.viewDidLoad()&#xA;    defaultCamera = .front&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SwiftyCam supports capture from both the front and back cameras. To switch cameras, call the function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;switchCamera()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tap-to-focus, pinch-to-zoom and camera flash are not supported when the front facing camera is selected. &lt;em&gt;Switching video while video is being recorded is not currently supported&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;SwiftyCam also enables switching between cameras with a double tap gesture. To disable this feature, use the &lt;code&gt;doubleTapCameraSwitch&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;doubleTapCameraSwitch = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;SwiftyCam has several options for configurating the functionality of the capture:&lt;/p&gt; &#xA;&lt;h3&gt;Video Quality&lt;/h3&gt; &#xA;&lt;p&gt;Video quality can be set by the &lt;strong&gt;videoQuality&lt;/strong&gt; property of SwiftyCamViewController. The choices available correspond to the matching &lt;strong&gt;AVCaptureSessionPreset&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;VideoQuality&lt;/th&gt; &#xA;   &lt;th&gt;AVCaptureSessionPreset&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.high&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCapturePresetHigh&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.medium&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCapturePresetMedium&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.low&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCapturePresetLow&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.resolution352x288&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCaptureSessionPreset352x288&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.resolution640x480&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCaptureSessionPreset640x480&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.resolution1280x720&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCaptureSessionPreset1280x720&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.resolution1920x1080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCaptureSessionPreset1920x1080&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.resolution3840x2160&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCaptureSessionPreset3840x2160&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.iframe960x540&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCaptureSessionPresetiFrame960x540&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.iframe1280x720&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVCaptureSessionPresetiFrame1280x720&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The default value is &lt;strong&gt;.high&lt;/strong&gt;. For use with the front-facing camera, &lt;strong&gt;.high&lt;/strong&gt; will always be used.&lt;/p&gt; &#xA;&lt;h3&gt;Maximum Video Duration&lt;/h3&gt; &#xA;&lt;p&gt;If using a SwiftyCamButton, you can set a maximum video duration for the length of video. The video recording will me automatically stopped once the time limit has been reached and the delegate method &lt;code&gt;SwiftyCamDidFinishRecordingVideo&lt;/code&gt; will be called. To set this value, simply change the &lt;code&gt;maximumVideoDuration&lt;/code&gt; value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;maximumVideoDuration = 10.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A value of &lt;strong&gt;0.0&lt;/strong&gt; will allow for unlimited video recording via the SwiftyCamButton. The default value is &lt;strong&gt;0.0&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Camera Zoom&lt;/h2&gt; &#xA;&lt;p&gt;SwiftyCam supports digital zoom of the camera session via pinch and pan gestures. The gestures work similar to the default iOS app and will zoom to the maximum supported zoom level. Camera zoom is only supported on the rear facing camera. AVFoundation does not currently support front facing camera zoom. To disable this feature, change the &lt;code&gt;pinchToZoom&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;pinchToZoom = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;pinchToZoom&lt;/code&gt; is enabled.&lt;/p&gt; &#xA;&lt;p&gt;SwiftyCam also supports the ability to zoom the rear facing camera with vertical pan gestures. To disable this feature, change the &lt;code&gt;swipeToZoom&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;swipeToZoom = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;swipeToZoom&lt;/code&gt; is enabled. The default gestures zoom in the capture session with a downward swipe, and zoom out with an upward swipe. This can be reversed by changing the &lt;code&gt;swipeToZoomInverted&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;swipeToZoomInverted = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also restrict the amount that the rear facing camera can zoom. To do this, use the &lt;code&gt;maxZoomScale&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;maxZoomScale = 2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;maxZoomScale&lt;/code&gt; is set to &lt;strong&gt;infinite&lt;/strong&gt;. The actual maximum zoom level is determined by the device&#39;s &lt;a href=&#34;https://developer.apple.com/reference/avfoundation/avcapturedeviceformat/1624635-videomaxzoomfactor&#34;&gt;videoMaxZoomFactor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Camera Focus&lt;/h2&gt; &#xA;&lt;p&gt;SwiftyCam, by default, support tap to focus on the video preview. SwiftyCam will set the focus and exposure levels of the session to the tapped point. While tap to set exposure is supported on both cameras, tap to focus is only supported on rear facing cameras. Autofocus and autoexposure will be resumed once SwiftyCam detects significant movement from the tapped point. To disable this feature, change the &lt;code&gt;tapToFocus&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;tapToFocus = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;tapToFocus&lt;/code&gt; is enabled. If you wish to show a on screen animation when a tap to focus is initiated, you can use the &lt;code&gt;SwiftyCamDidFocusAtPoint(focusPoint:)&lt;/code&gt; to get the coordinates of tap and provide your own tap animation&lt;/p&gt; &#xA;&lt;h2&gt;Device Orientation&lt;/h2&gt; &#xA;&lt;p&gt;By default, SwiftyCam will set the photo orientation to be portrait. If you wish to preserve the orientation of the capture photos to allow support for landscape images, use the &lt;code&gt;shouldUseDeviceOrientation&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;shouldUseDeviceOrientation = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Background Audio&lt;/h2&gt; &#xA;&lt;p&gt;SwiftyCam has the ability to allow background audio to continue playing within the session, and to be captured by the video recording. By default, this is enabled. If you wish to disable this feature, change the &lt;code&gt;allowBackgroundAudio&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;allowBackgroundAudio = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Low Light Boost&lt;/h2&gt; &#xA;&lt;p&gt;For supported models (iPhone 5 and 5C), AVCaptureDevice supports a low light boost when it is detected that the capture session is in a low light area. By default, this is set to true. It can be modified with the &lt;code&gt;lowLightBoost&lt;/code&gt; variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;lowLightBoost = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;When a user firsts launch SwiftyCamViewController, they will be prompted for permission for access to the cameras and microphones. By default, if a user declines access to the hardware, SwiftyCam will provide a prompt to the App privacy settings inside the iOS settings application.&lt;/p&gt; &#xA;&lt;h2&gt;Miscellaneous&lt;/h2&gt; &#xA;&lt;p&gt;Other properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;isCameraFlashOn&lt;/code&gt; - &lt;strong&gt;Boolean&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isVideoRecording&lt;/code&gt; - &lt;strong&gt;Boolean&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isSessionRunning&lt;/code&gt; - &lt;strong&gt;Boolean&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;currentCamera&lt;/code&gt; - &lt;strong&gt;CameraSelection&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contact&lt;/h3&gt; &#xA;&lt;p&gt;If you have any questions, requests, or enhancements, feel free to submit a pull request, create an issue, or contact me in person:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Andrew Walz&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;mailto:andrewjwalz@gmail.com&#34;&gt;andrewjwalz@gmail.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>