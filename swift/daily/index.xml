<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-23T01:48:04Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nextcloud/ios</title>
    <updated>2022-08-23T01:48:04Z</updated>
    <id>tag:github.com,2022-08-23:/nextcloud/ios</id>
    <link href="https://github.com/nextcloud/ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ“± Nextcloud iOS App&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://nextcloud.com&#34;&gt;Nextcloud&lt;/a&gt; iOS app&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nextcloud/ios/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/nextcloud/ios.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nextcloud/ios/actions/workflows/xcode.yml&#34;&gt;&lt;img src=&#34;https://github.com/nextcloud/ios/actions/workflows/xcode.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nextcloud/ios/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/nextcloud/ios/actions/workflows/lint.yml/badge.svg?sanitize=true&#34; alt=&#34;SwiftLint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://webchat.freenode.net/?channels=nextcloud-mobile&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/IRC-%23nextcloud--mobile%20on%20freenode-blue.svg?sanitize=true&#34; alt=&#34;irc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/nextcloud/ios/master/Animation.gif&#34; alt=&#34;Demo of the Nextcloud iOS files app&#34; width=&#34;277&#34; height=&#34;600&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/nextcloud/id1125420102&#34;&gt;&lt;img src=&#34;https://developer.apple.com/assets/elements/badges/download-on-the-app-store.svg?sanitize=true&#34; alt=&#34;Demo of the Nextcloud iOS files app&#34; height=&#34;40&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://nextcloud.com&#34;&gt;https://nextcloud.com&lt;/a&gt; and follow us on &lt;a href=&#34;https://twitter.com/nextclouders&#34;&gt;twitter.com/nextclouders&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you want to &lt;a href=&#34;https://nextcloud.com/contribute/&#34;&gt;contribute&lt;/a&gt; to Nextcloud, you are very welcome:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;our forum at &lt;a href=&#34;https://help.nextcloud.com/c/clients/ios&#34;&gt;https://help.nextcloud.com/c/clients/ios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;for translations of the app on &lt;a href=&#34;https://www.transifex.com/nextcloud/nextcloud/dashboard/&#34;&gt;Transifex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;opening issues and PRs (including a corresponding issue)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution Guidelines &amp;amp; License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nextcloud/ios/master/LICENSE.txt&#34;&gt;GPLv3&lt;/a&gt; with &lt;a href=&#34;https://raw.githubusercontent.com/nextcloud/ios/master/COPYING.iOS&#34;&gt;Apple app store exception&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Nextcloud doesn&#39;t require a CLA (Contributor License Agreement). The copyright belongs to all the individual contributors. Therefore we recommend that every contributor adds following line to the header of a file, if they changed it substantially:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@copyright Copyright (c) &amp;lt;year&amp;gt;, &amp;lt;your name&amp;gt; (&amp;lt;your email address&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://nextcloud.com/code-of-conduct/&#34;&gt;Code of Conduct&lt;/a&gt;. This document offers some guidance to ensure Nextcloud participants can cooperate effectively in a positive and inspiring atmosphere, and to explain how together we can strengthen and support each other.&lt;/p&gt; &#xA;&lt;p&gt;More information how to contribute: &lt;a href=&#34;https://nextcloud.com/contribute/&#34;&gt;https://nextcloud.com/contribute/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Start contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can start by forking this repository and creating pull requests on the develop branch. Maybe start working on &lt;a href=&#34;https://github.com/nextcloud/ios/labels/good%20first%20issue&#34;&gt;starter issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Easy starting points are also reviewing &lt;a href=&#34;https://github.com/nextcloud/ios/pulls&#34;&gt;pull requests&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Xcode 13.4 Project Setup&lt;/h3&gt; &#xA;&lt;h4&gt;Dependencies&lt;/h4&gt; &#xA;&lt;p&gt;After forking a repository you have to build the dependencies. Dependencies are managed with Carthage version 0.38.0 or later. Run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;carthage update --use-xcframeworks --platform iOS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to fetch and compile the dependencies.&lt;/p&gt; &#xA;&lt;p&gt;In order to build the project in Xcode you will also need a file &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; at the root of the repository which contains the Firebase configuration. For development work you can use a mock version found &lt;a href=&#34;https://github.com/firebase/quickstart-ios/raw/master/mock-GoogleService-Info.plist&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Creating Pull requests&lt;/h3&gt; &#xA;&lt;h4&gt;DCO Signoff&lt;/h4&gt; &#xA;&lt;p&gt;Nextcloud enforces the &lt;a href=&#34;https://developercertificate.org/&#34;&gt;Developer Certificate of Origin (DCO)&lt;/a&gt; on Pull Requests. It requires your commit messages to contain a Signed-off-by line with an email address that matches your GitHub account.&lt;/p&gt; &#xA;&lt;h5&gt;How to Sign off&lt;/h5&gt; &#xA;&lt;p&gt;The DCO is a way for contributors to certify that they wrote or otherwise have the right to submit the code they are contributing by adding a Signed-off-by line to commit messages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;My Commit message&#xA;&#xA;Signed-off-by: Random Contributor &amp;lt;random@contributor.dev&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Git even has a &lt;code&gt;-s | --signoff&lt;/code&gt; command line option to append this to your commit messages automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you need assistance or want to ask a question about the iOS app, you are welcome to &lt;a href=&#34;https://help.nextcloud.com/c/clients/ios&#34;&gt;ask for support&lt;/a&gt; in our Forums. If you have found a bug, feel free to &lt;a href=&#34;https://github.com/nextcloud/ios/issues&#34;&gt;open a new Issue on GitHub&lt;/a&gt;. Keep in mind, that this repository only manages the iOS app. If you find bugs or have problems with the server/backend, you should ask the &lt;a href=&#34;https://github.com/nextcloud/server&#34;&gt;Nextcloud server team&lt;/a&gt; for help!&lt;/p&gt; &#xA;&lt;h2&gt;TestFlight&lt;/h2&gt; &#xA;&lt;p&gt;Do you want to try the latest version in development of Nextcloud iOS ? Simple, follow this simple step&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://testflight.apple.com/join/RXEJbWj9&#34;&gt;Apple TestFlight&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apple/swift-syntax</title>
    <updated>2022-08-23T01:48:04Z</updated>
    <id>tag:github.com,2022-08-23:/apple/swift-syntax</id>
    <link href="https://github.com/apple/swift-syntax" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SwiftPM package for SwiftSyntax library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SwiftSyntax&lt;/h1&gt; &#xA;&lt;p&gt;SwiftSyntax is a set of Swift bindings for the &lt;a href=&#34;https://github.com/apple/swift/tree/main/lib/Syntax&#34;&gt;libSyntax&lt;/a&gt; library. It allows Swift tools to parse, inspect, generate, and transform Swift source code.&lt;/p&gt; &#xA;&lt;p&gt;Its API is designed for performance-critical applications. It uses value types almost exclusively and aims to avoid existential conversions where possible.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: SwiftSyntax is still in development, and the API is not guaranteed to be stable. It&#39;s subject to change without warning.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Declare SwiftPM dependency with release tag&lt;/h2&gt; &#xA;&lt;p&gt;Add this repository to the &lt;code&gt;Package.swift&lt;/code&gt; manifest of your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// swift-tools-version:5.6&#xA;import PackageDescription&#xA;&#xA;let package = Package(&#xA;  name: &#34;MyTool&#34;,&#xA;  dependencies: [&#xA;    .package(url: &#34;https://github.com/apple/swift-syntax.git&#34;, exact: &#34;&amp;lt;#Specify Release tag#&amp;gt;&#34;),&#xA;  ],&#xA;  targets: [&#xA;    .target(name: &#34;MyTool&#34;, dependencies: [&#xA;      .product(name: &#34;SwiftSyntax&#34;, package: &#34;swift-syntax&#34;),&#xA;    ]),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;&amp;lt;#Specify Release tag#&amp;gt;&lt;/code&gt; by the version of SwiftSyntax that you want to use (see the following table for mapping details).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Xcode Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Swift Release Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;SwiftSyntax Release Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 13.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.6-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50600.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 13.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.5-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50500.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 12.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.4-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50400.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 12.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.3-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50300.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 11.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;swift-5.2-RELEASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.50200.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Then, import &lt;code&gt;SwiftSyntax&lt;/code&gt; in your Swift code.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be found &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/Documentation&#34;&gt;here&lt;/a&gt; and some examples of using SwiftSyntax can be found &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/Examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Start contributing to SwiftSyntax see &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/CONTRIBUTING.md&#34;&gt;this guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you should hit any issues while using SwiftSyntax, we appreciate bug reports on &lt;a href=&#34;https://github.com/apple/swift-syntax/issues&#34;&gt;GitHub Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift-syntax/main/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>instructure/canvas-ios</title>
    <updated>2022-08-23T01:48:04Z</updated>
    <id>tag:github.com,2022-08-23:/instructure/canvas-ios</id>
    <link href="https://github.com/instructure/canvas-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Canvas iOS apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Canvas iOS Apps&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/canvas-student/id480883488?mt=8&#34;&gt;Student&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/canvas-teacher/id1257834464?mt=8&#34;&gt;Teacher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/canvas-parent/id1097996698?mt=8&#34;&gt;Parent&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started on Development&lt;/h2&gt; &#xA;&lt;p&gt;You will need the following tools installed beforehand:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cocoapods.org&#34;&gt;Cocoapods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/realm/SwiftLint#installation&#34;&gt;SwiftLint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/en/docs/install#mac-stable&#34;&gt;yarn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-native-cli&#34;&gt;react-native-cli&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install swiftlint yarn&#xA;gem install cocoapods&#xA;yarn global add react-native-cli --prefix /usr/local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can setup the repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:instructure/canvas-ios.git&#xA;cd canvas-ios&#xA;./setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;setup.sh&lt;/code&gt; script should take care of installing additional dependencies from Cocoapods and yarn.&lt;/p&gt; &#xA;&lt;h3&gt;Secrets&lt;/h3&gt; &#xA;&lt;p&gt;Any static keys, tokens, passwords, or other secrets that need to be available in the app bundle should be added as a case to &lt;code&gt;Secret.swift&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The secrets necessary for a particular build are generated as data assets using a script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn build-secrets &#34;studentPSPDFKitLicense=token1&#34; &#34;teacherPSPDFKitLicense=token2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to purchase PSPDFKitLicenses to distribute custom apps. Instructure&#39;s licenses are only used for official builds and are not included in the repository.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Analytics&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to use Firebase Analytics in custom apps, you will need to populate the &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; for each app.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging Redux&lt;/h3&gt; &#xA;&lt;p&gt;To get redux logs you can add &lt;a href=&#34;https://github.com/LogRocket/redux-logger&#34;&gt;redux-logger&lt;/a&gt; as a middleware to the redux store.&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t want to keep the logger in because it slows down the runtime quite a lot.&lt;/p&gt; &#xA;&lt;p&gt;In src/redux/store.js&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import logger from &#39;redux-logger&#39;&#xA;&#xA;let middleware = [promiseMiddleware, errorHandler, createPersisteMiddleware(500), logger]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The redux logs will now show up in the React Native Debugger.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Guiding Principles&lt;/h2&gt; &#xA;&lt;h3&gt;Simple&lt;/h3&gt; &#xA;&lt;p&gt;Writing an app is complex. Decisions made from the beginning have a big impact on the end result.&lt;/p&gt; &#xA;&lt;p&gt;We strive to maintain a simple architecture that is easy to understand and pick up. Someone familiar with the platform should be productive within a single day.&lt;/p&gt; &#xA;&lt;p&gt;Code should be self-documenting and easy to follow.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Ugly code is easy to recognize and its cost is easy to estimate. Neither is true for a wrong abstraction.&#xA;- Dan Abramov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Easy to Debug&lt;/h3&gt; &#xA;&lt;p&gt;Surprise! Apps have bugs. Industry average is 15-50 defects per 1000 lines of code.&lt;/p&gt; &#xA;&lt;p&gt;We build our apps in a way that makes finding and fixing issues is as easy as possible.&lt;/p&gt; &#xA;&lt;h3&gt;Testable&lt;/h3&gt; &#xA;&lt;p&gt;Writing code in a testable way is paramount for long term success. These apps are built in a way that makes our unit testing surface as large as possible.&lt;/p&gt; &#xA;&lt;h3&gt;Conventions&lt;/h3&gt; &#xA;&lt;p&gt;We make and keep strong &lt;a href=&#34;https://raw.githubusercontent.com/instructure/canvas-ios/master/CONVENTIONS.md&#34;&gt;conventions&lt;/a&gt; in order to reduce mental overhead.&lt;/p&gt; &#xA;&lt;h3&gt;No Tricky Stuff&lt;/h3&gt; &#xA;&lt;p&gt;We do things the Apple prescribed way because it offers the best long term predictability with minimal maintenance.&lt;/p&gt; &#xA;&lt;h3&gt;Fat Model, Thin Controller&lt;/h3&gt; &#xA;&lt;p&gt;Models &amp;amp; Presenters handle as much of the business logic as possible. This allows a wide unit testing surface. Views &amp;amp; View Controllers should be as small as possible.&lt;/p&gt; &#xA;&lt;h3&gt;Predictable&lt;/h3&gt; &#xA;&lt;p&gt;By scrutinizing each dependency we bring in, the code we write is our responsibility. Unit tests are a key portion of the code we write, so as time passes, the code that worked 2 years ago still works today.&lt;/p&gt; &#xA;&lt;h3&gt;Automation&lt;/h3&gt; &#xA;&lt;p&gt;We don&#39;t do any manual QA of our products. We write code that tests our apps for us.&lt;/p&gt; &#xA;&lt;h3&gt;Prune Legacy Code&lt;/h3&gt; &#xA;&lt;p&gt;ðŸ˜¬ One day React Native, Cocoapods, and other old frameworks will be fully replaced by the swift architecture in Core. Eventually. Hopefully. ðŸ¤ž&lt;/p&gt; &#xA;&lt;h2&gt;Using the Canvas Apps&lt;/h2&gt; &#xA;&lt;h3&gt;How to connect to a local canvas instance or a Portal instance&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://instructure.atlassian.net/wiki/spaces/MOBILE/pages/563937366/Manual+Oauth+Login+Bypassing+mobile+verify&#34;&gt;https://instructure.atlassian.net/wiki/spaces/MOBILE/pages/563937366/Manual+Oauth+Login+Bypassing+mobile+verify&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are connecting to a portal instance you must be connected to the VPN. This requires Full VPN tunnel and not just the typical Employee VPN connection. After you hit connect in the Cisco VPN client to connect to vpn.instructure.com there will be a drop down where you can select Full Tunnel&lt;/p&gt; &#xA;&lt;h3&gt;Generating icons from &lt;a href=&#34;https://instructure.design/#iconography&#34;&gt;instructure.design&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Most, if not all of the icons used in the Canvas apps can be found in instructure-icons, but are defined as React components, SVG, &amp;amp; Sketch files. Since iOS does not handle SVG files in UIImageViews natively, these are converted to PDF.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn build-icons&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generating code coverage report&lt;/h3&gt; &#xA;&lt;p&gt;You can generate code coverage reports with &lt;code&gt;yarn coverage --scheme &amp;lt;SCHEME&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Student&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn coverage --scheme Student&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Core&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn coverage --scheme Core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run tests first use &lt;code&gt;yarn test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn test --scheme Core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scheme&lt;/td&gt; &#xA;   &lt;td&gt;The scheme to run against&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;os&lt;/td&gt; &#xA;   &lt;td&gt;Specify simulator os. Only available when running tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Open Source Licenses Used&lt;/h2&gt; &#xA;&lt;p&gt;We have a script that should ensure the correct license header comments are in place:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn update-headers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Our applications are licensed under the AGPLv3 License.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;This file is part of Canvas.&#xA;Copyright (C) 2019-present  Instructure, Inc.&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU Affero General Public License as&#xA;published by the Free Software Foundation, either version 3 of the&#xA;License, or (at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU Affero General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU Affero General Public License&#xA;along with this program.  If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;MDM Configurations&lt;/h2&gt; &#xA;&lt;p&gt;MDM Profile settings are saved in &lt;code&gt;UserDefaults.standard&lt;/code&gt; and keyed by &lt;code&gt;com.apple.configuration.managed&lt;/code&gt;. These logins are added to the list of previous logins on the start screen.&lt;/p&gt; &#xA;&lt;p&gt;Use our &lt;code&gt;MDMManager&lt;/code&gt; to observe changes such as managed logins.&lt;/p&gt; &#xA;&lt;p&gt;You can test this locally with command line arguments.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Scheme&lt;/code&gt; &amp;gt; &lt;code&gt;Edit Scheme&lt;/code&gt; &amp;gt; &lt;code&gt;Run&lt;/code&gt; &amp;gt; &lt;code&gt;Arguments&lt;/code&gt; &amp;gt; &lt;code&gt;Arguments Passed on Launch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-com.apple.configuration.managed &#39;&amp;lt;dict&amp;gt;&amp;lt;key&amp;gt;enableLogin&amp;lt;/key&amp;gt;&amp;lt;true/&amp;gt;&amp;lt;key&amp;gt;users&amp;lt;/key&amp;gt;&amp;lt;array&amp;gt;&amp;lt;dict&amp;gt;&amp;lt;key&amp;gt;host&amp;lt;/key&amp;gt;&amp;lt;string&amp;gt;canvas.instructure.com&amp;lt;/string&amp;gt;&amp;lt;key&amp;gt;username&amp;lt;/key&amp;gt;&amp;lt;string&amp;gt;student&amp;lt;/string&amp;gt;&amp;lt;key&amp;gt;password&amp;lt;/key&amp;gt;&amp;lt;string&amp;gt;Canvas2019&amp;lt;/string&amp;gt;&amp;lt;/dict&amp;gt;&amp;lt;/array&amp;gt;&amp;lt;/dict&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change the &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, and &lt;code&gt;host&lt;/code&gt; to your test credentials. You can also add &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;authenticationProvider&lt;/code&gt; strings to the top level dict to skip the &#34;Find my school&#34; screen during login.&lt;/p&gt;</summary>
  </entry>
</feed>