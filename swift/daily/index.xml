<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-29T01:38:02Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AparokshaUI/adwaita-swift</title>
    <updated>2024-03-29T01:38:02Z</updated>
    <id>tag:github.com,2024-03-29:/AparokshaUI/adwaita-swift</id>
    <link href="https://github.com/AparokshaUI/adwaita-swift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A framework for creating user interfaces for GNOME with an API similar to SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;256&#34; alt=&#34;Adwaita Icon&#34; src=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/Icons/AdwaitaIcon.png&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Adwaita for Swift&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://david-swift.gitbook.io/adwaita/&#34;&gt; User Manual &lt;/a&gt; · &lt;a href=&#34;https://github.com/AparokshaUI/Adwaita&#34;&gt; GitHub &lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/Documentation/Reference/README.md&#34;&gt; Contributor Docs &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Adwaita&lt;/em&gt; is a framework for creating user interfaces for GNOME with an API similar to SwiftUI.&lt;/p&gt; &#xA;&lt;p&gt;The following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct Example: View {&#xA;&#xA;    @State private var count = 0&#xA;&#xA;    var view: Body {&#xA;        Text(&#34;\(count)&#34;)&#xA;            .style(&#34;title-1&#34;)&#xA;            .padding(50)&#xA;            .topToolbar {&#xA;                HeaderBar.start {&#xA;                    Button(icon: .default(icon: .goPrevious)) {&#xA;                        count -= 1&#xA;                    }&#xA;                    Button(icon: .default(icon: .goNext)) {&#xA;                        count += 1&#xA;                    }&#xA;                }&#xA;            }&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Creates a simple counter view:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/Icons/Screenshot.png&#34; alt=&#34;Counter Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;More examples are available in the &lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/Tests/&#34;&gt;demo app&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/Icons/Demo.png&#34; alt=&#34;Demo App&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/#goals&#34;&gt;Goals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/#widgets&#34;&gt;Widgets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/#thanks&#34;&gt;Thanks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Adwaita&lt;/em&gt;’s main goal is to provide an easy-to-use interface for creating GNOME apps. The backend should stay as simple as possible, while not limiting the possibilities there are with &lt;a href=&#34;https://gnome.pages.gitlab.gnome.org/libadwaita/doc/1-latest/index.html&#34;&gt;Libadwaita&lt;/a&gt; and &lt;a href=&#34;https://docs.gtk.org/gtk4/&#34;&gt;GTK&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use &lt;em&gt;Adwaita&lt;/em&gt; in a project, but there are widgets missing, open an &lt;a href=&#34;https://github.com/AparokshaUI/Adwaita/issues&#34;&gt;issue on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find more information about the project&#39;s motivation in &lt;a href=&#34;https://www.swift.org/blog/adwaita-swift/&#34;&gt;this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Widgets&lt;/h2&gt; &#xA;&lt;p&gt;An overview of the widgets supported by &lt;em&gt;Adwaita&lt;/em&gt; is available &lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Information/Widgets.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;h4&gt;Flatpak&lt;/h4&gt; &#xA;&lt;p&gt;It is recommended to develop apps inside of a Flatpak. That way, you don&#39;t have to install Swift or any of the dependencies on your system, and you always have access to the latest versions. Take a look at the &lt;a href=&#34;https://github.com/AparokshaUI/AdwaitaTemplate&#34;&gt;template repository&lt;/a&gt;. This works on Linux only.&lt;/p&gt; &#xA;&lt;h4&gt;Directly on System&lt;/h4&gt; &#xA;&lt;p&gt;You can also run your apps directly on the system.&lt;/p&gt; &#xA;&lt;p&gt;If you are using a Linux distribution, install &lt;code&gt;libadwaita-devel&lt;/code&gt; or &lt;code&gt;libadwaita&lt;/code&gt; (or something similar, based on the package manager) as well as &lt;code&gt;gtk4-devel&lt;/code&gt;, &lt;code&gt;gtk4&lt;/code&gt; or similar.&lt;/p&gt; &#xA;&lt;p&gt;On macOS, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install Libadwaita (and thereby GTK 4):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install libadwaita&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your Swift package in GNOME Builder, Xcode, or any other IDE.&lt;/li&gt; &#xA; &lt;li&gt;Open the &lt;code&gt;Package.swift&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Into the &lt;code&gt;Package&lt;/code&gt; initializer, under &lt;code&gt;dependencies&lt;/code&gt;, paste:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.package(url: &#34;https://github.com/AparokshaUI/Adwaita&#34;, from: &#34;0.1.0&#34;)   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;I recommend using the &lt;a href=&#34;https://github.com/AparokshaUI/AdwaitaTemplate&#34;&gt;template repository&lt;/a&gt; as a starting point.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/GettingStarted.md&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Basics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Basics/HelloWorld.md&#34;&gt;Hello World&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Basics/CreatingViews.md&#34;&gt;Creating Views&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Basics/Windows.md&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Basics/KeyboardShortcuts.md&#34;&gt;Keyboard Shortcuts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Advanced/CreatingWidgets.md&#34;&gt;Creating Widgets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Advanced/PublishingApps.md&#34;&gt;Publishing Apps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Information&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Information/Widgets.md&#34;&gt;Widgets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/user-manual/Information/AutoGeneratedWidgets.md&#34;&gt;Auto-Generated Widgets&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CoreOffice/XMLCoder&#34;&gt;XMLCoder&lt;/a&gt; licensed under the &lt;a href=&#34;https://github.com/CoreOffice/XMLCoder/raw/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/david-swift/LevenshteinTransformations&#34;&gt;Levenshtein Transformations&lt;/a&gt; licensed under the &lt;a href=&#34;https://github.com/david-swift/LevenshteinTransformations/raw/main/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other Thanks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/Contributors.md&#34;&gt;contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The auto-generation of widgets is based on &lt;a href=&#34;https://github.com/stackotter/swift-cross-ui&#34;&gt;Swift Cross UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/realm/SwiftLint&#34;&gt;SwiftLint&lt;/a&gt; for checking whether code style conventions are violated&lt;/li&gt; &#xA; &lt;li&gt;The programming language &lt;a href=&#34;https://github.com/apple/swift&#34;&gt;Swift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SourceDocs/SourceDocs&#34;&gt;SourceDocs&lt;/a&gt; used for generating the &lt;a href=&#34;https://raw.githubusercontent.com/AparokshaUI/adwaita-swift/main/Documentation/Reference/README.md&#34;&gt;docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ChartsOrg/Charts</title>
    <updated>2024-03-29T01:38:02Z</updated>
    <id>tag:github.com,2024-03-29:/ChartsOrg/Charts</id>
    <link href="https://github.com/ChartsOrg/Charts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Beautiful charts for iOS/tvOS/OSX! The Apple side of the crossplatform MPAndroidChart.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Version 4.0.0&lt;/strong&gt;, synced to &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart/commit/f6a398b&#34;&gt;MPAndroidChart #f6a398b&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/danielgindi/Charts/master/Assets/feature_graphic.png&#34; alt=&#34;alt tag&#34;&gt; &lt;img src=&#34;https://img.shields.io/cocoapods/p/Charts.svg?sanitize=true&#34; alt=&#34;Supported Platforms&#34;&gt; &lt;a href=&#34;https://github.com/danielgindi/Charts/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/danielgindi/Charts.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/charts&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Charts.svg?sanitize=true&#34; alt=&#34;Latest pod release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/danielgindi/Charts&#34;&gt;&lt;img src=&#34;https://travis-ci.org/danielgindi/Charts.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/danielgindi/Charts&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/danielgindi/Charts/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/danielgindi/Charts?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/danielgindi/Charts.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/danielgindi/Charts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Just a heads up: Charts 5.0 has some breaking changes. Charts has now been renamed DGCharts to prevent conflicts with Apple&#39;s new Swift Charts. Please read &lt;a href=&#34;https://github.com/danielgindi/Charts/releases/tag/5.0.0&#34;&gt;the release/migration notes&lt;/a&gt;.&lt;/h3&gt; &#xA;&lt;h3&gt;One more heads up: As Swift evolves, if you are not using the latest Swift compiler, you shouldn&#39;t check out the master branch. Instead, you should go to the release page and pick up whatever suits you.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 14 / Swift 5.7 (master branch)&lt;/li&gt; &#xA; &lt;li&gt;iOS &amp;gt;= 12.0 (Use as an &lt;strong&gt;Embedded&lt;/strong&gt; Framework)&lt;/li&gt; &#xA; &lt;li&gt;tvOS &amp;gt;= 12.0&lt;/li&gt; &#xA; &lt;li&gt;macOS &amp;gt;= 10.13&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Okay so there&#39;s this beautiful library called &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;&gt;MPAndroidChart&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/philippjahoda&#34;&gt;Philipp Jahoda&lt;/a&gt; which has become very popular amongst Android developers, but there was no decent solution to create charts for iOS.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve chosen to write it in &lt;code&gt;Swift&lt;/code&gt; as it can be highly optimized by the compiler, and can be used in both &lt;code&gt;Swift&lt;/code&gt; and &lt;code&gt;ObjC&lt;/code&gt; project. The demo project is written in &lt;code&gt;ObjC&lt;/code&gt; to demonstrate how it works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;An amazing feature&lt;/strong&gt; of this library now, for Android, iOS, tvOS and macOS, is the time it saves you when developing for both platforms, as the learning curve is singleton- it happens only once, and the code stays very similar so developers don&#39;t have to go around and re-invent the app to produce the same output with a different library. (And that&#39;s not even considering the fact that there&#39;s not really another good choice out there currently...)&lt;/p&gt; &#xA;&lt;h2&gt;Having trouble running the demo?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ChartsDemo/ChartsDemo.xcodeproj&lt;/code&gt; is the demo project for iOS/tvOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ChartsDemo-OSX/ChartsDemo-OSX.xcodeproj&lt;/code&gt; is the demo project for macOS&lt;/li&gt; &#xA; &lt;li&gt;Make sure you are running a supported version of Xcode. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Usually it is specified here a few lines above.&lt;/li&gt; &#xA;   &lt;li&gt;In most cases it will be the latest Xcode version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Make sure that your project supports Swift 5.0&lt;/li&gt; &#xA; &lt;li&gt;Optional: Run &lt;code&gt;carthage checkout&lt;/code&gt; in the project folder, to fetch dependencies (i.e testing dependencies). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you don&#39;t have Carthage - you can get it &lt;a href=&#34;https://github.com/Carthage/Carthage/releases&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;In order to correctly compile:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Drag the &lt;code&gt;DGCharts.xcodeproj&lt;/code&gt; to your project&lt;/li&gt; &#xA; &lt;li&gt;Go to your target&#39;s settings, hit the &#34;+&#34; under the &#34;Frameworks, Libraries, and Embedded Content&#34; section, and select the DGCharts.framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@import DGCharts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;When using Swift in an ObjC project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to import your Bridging Header. Usually it is &#34;&lt;em&gt;YourProject-Swift.h&lt;/em&gt;&#34;, so in ChartsDemo it&#39;s &#34;&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;&#34;. Do not try to actually include &#34;&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;&#34; in your project :-)&lt;/li&gt; &#xA; &lt;li&gt;(Xcode 8.1 and earlier) Under &#34;Build Options&#34;, mark &#34;Embedded Content Contains Swift Code&#34;&lt;/li&gt; &#xA; &lt;li&gt;(Xcode 8.2+) Under &#34;Build Options&#34;, mark &#34;Always Embed Swift Standard Libraries&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;When using &lt;a href=&#34;https://realm.io/&#34;&gt;Realm.io&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that the Realm framework is not linked with Charts - it is only there for &lt;em&gt;optional&lt;/em&gt; bindings. Which means that you need to have the framework in your project, and in a compatible version to whatever is compiled with DGCharts. We will do our best to always compile against the latest version.&lt;/li&gt; &#xA;   &lt;li&gt;You&#39;ll need to add &lt;code&gt;ChartsRealm&lt;/code&gt; as a dependency too.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;3rd party tutorials&lt;/h2&gt; &#xA;&lt;h4&gt;Video tutorials&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=mWhwe_tLNE8&amp;amp;list=PL_csAAO9PQ8bjzg-wxEff1Fr0Y5W1hrum&amp;amp;index=5&#34;&gt;Chart in Swift - Setting Up a Basic Line Chart Using iOS Charts(Alex Nagy)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/csd7pyfEXgw&#34;&gt;Charts Framework in SwiftUI - Bar Chart (Stewart Lynch)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Blog posts&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@skoli/using-realm-and-charts-with-swift-3-in-ios-10-40c42e3838c0#.2gyymwfh8&#34;&gt;Using Realm and Charts with Swift 3 in iOS 10 (Sami Korpela)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@OsianSmith/creating-a-line-chart-in-swift-3-and-ios-10-2f647c95392e&#34;&gt;Creating a Line Chart in Swift 3 and iOS 10 (Osian Smith)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/annalizhaz/ChartsForSwiftBasic&#34;&gt;Beginning Set-up and Example Using Charts with Swift 3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@HeyDaveTheDev/creating-a-radar-chart-in-swift-5791afcf92f0&#34;&gt;Creating a Radar Chart in Swift (David Piper)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@zzzzbh/plotting-in-ios-using-charts-framework-with-swiftui-222034a2bea6&#34;&gt;Plotting in IOS using Charts framework with SwiftUI (Evgeny Basisty)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@penny-huang/swift-setting-up-a-basic-bar-chart-using-ios-charts-afd6aad96ac&#34;&gt;Set Up a Basic Bar Chart Using iOS-Charts (Penny Huang)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@penny-huang/swift-ios-charts-tutorial-highlight-selected-value-with-a-custom-marker-30ccbf92aa1b&#34;&gt;iOS-Charts Tutorial: Highlight Selected Value With a Custom Marker (Penny Huang)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/better-programming/drawing-charts-in-ios-before-swiftui-9f95b8612607&#34;&gt;Drawing Charts in iOS Before SwiftUI (Gennady Stepanov)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Want your tutorial to show here? Create a PR!&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h4&gt;Can&#39;t compile?&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please note the difference between installing a compiled framework from CocoaPods or Carthage, and copying the source code.&lt;/li&gt; &#xA; &lt;li&gt;Please read the &lt;strong&gt;Usage&lt;/strong&gt; section again.&lt;/li&gt; &#xA; &lt;li&gt;Search in the issues&lt;/li&gt; &#xA; &lt;li&gt;Try to politely ask in the issues section&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Other problems / feature requests&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search in the issues&lt;/li&gt; &#xA; &lt;li&gt;Try to politely ask in the issues section&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CocoaPods Install&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;pod &#39;DGCharts&#39;&lt;/code&gt; to your Podfile. &#34;DGCharts&#34; is the name of the library.&lt;br&gt; For &lt;a href=&#34;https://realm.io/&#34;&gt;Realm&lt;/a&gt; support, please add &lt;code&gt;pod &#39;ChartsRealm&#39;&lt;/code&gt; too.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;del&gt;&lt;code&gt;pod &#39;ios-charts&#39;&lt;/code&gt;&lt;/del&gt; is not the correct library, and refers to a different project by someone else.&lt;/p&gt; &#xA;&lt;h2&gt;Carthage Install&lt;/h2&gt; &#xA;&lt;p&gt;DGCharts now include Carthage prebuilt binaries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-carthage&#34;&gt;github &#34;danielgindi/Charts&#34; == 5.1.0&#xA;github &#34;danielgindi/Charts&#34; ~&amp;gt; 5.1.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to build the binaries for a new release, use &lt;code&gt;carthage build --no-skip-current &amp;amp;&amp;amp; carthage archive Charts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Swift Package Manager Install&lt;/h2&gt; &#xA;&lt;p&gt;Swift Package Manager&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/danielgindi/Charts.git&#34;, .upToNextMajor(from: &#34;5.1.0&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3rd party bindings&lt;/h2&gt; &#xA;&lt;p&gt;Xamarin (by @Flash3001): &lt;em&gt;iOS&lt;/em&gt; - &lt;a href=&#34;https://github.com/Flash3001/iOSCharts.Xamarin&#34;&gt;GitHub&lt;/a&gt;/&lt;a href=&#34;https://www.nuget.org/packages/iOSCharts/&#34;&gt;NuGet&lt;/a&gt;. &lt;em&gt;Android&lt;/em&gt; - &lt;a href=&#34;https://github.com/Flash3001/MPAndroidChart.Xamarin&#34;&gt;GitHub&lt;/a&gt;/&lt;a href=&#34;https://www.nuget.org/packages/MPAndroidChart/&#34;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;If you like what you see here, and want to support the work being done in this repository, you could:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contribute code, issues and pull requests&lt;/li&gt; &#xA; &lt;li&gt;Let people know this library exists (&lt;span&gt;🔥&lt;/span&gt; spread the word &lt;span&gt;🔥&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=68UL6Y8KUPS96&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; (You can buy me a beer, or you can buy me dinner :-)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The author of &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;&gt;MPAndroidChart&lt;/a&gt; is the reason that this library exists, and is accepting &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart#donations&#34;&gt;donations&lt;/a&gt; on his page. He deserves them!&lt;/p&gt; &#xA;&lt;h2&gt;Questions &amp;amp; Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you are having questions or problems, you should:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you are using the latest version of the library. Check the &lt;a href=&#34;https://github.com/danielgindi/Charts/releases&#34;&gt;&lt;strong&gt;release-section&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Study the Android version&#39;s &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart/wiki&#34;&gt;&lt;strong&gt;Documentation-Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search or open questions on &lt;a href=&#34;http://stackoverflow.com/questions/tagged/ios-charts&#34;&gt;&lt;strong&gt;stackoverflow&lt;/strong&gt;&lt;/a&gt; with the &lt;code&gt;ios-charts&lt;/code&gt; tag&lt;/li&gt; &#xA; &lt;li&gt;Search &lt;a href=&#34;https://github.com/danielgindi/Charts/issues&#34;&gt;&lt;strong&gt;known issues&lt;/strong&gt;&lt;/a&gt; for your problem (open and closed)&lt;/li&gt; &#xA; &lt;li&gt;Create new issues (please &lt;span&gt;🔥&lt;/span&gt; &lt;strong&gt;search known issues before&lt;/strong&gt; &lt;span&gt;🔥&lt;/span&gt;, do not create duplicate issues)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Core features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;8 different chart types&lt;/li&gt; &#xA; &lt;li&gt;Scaling on both axes (with touch-gesture, axes separately or pinch-zoom)&lt;/li&gt; &#xA; &lt;li&gt;Dragging / Panning (with touch-gesture)&lt;/li&gt; &#xA; &lt;li&gt;Combined-Charts (line-, bar-, scatter-, candle-stick-, bubble-)&lt;/li&gt; &#xA; &lt;li&gt;Dual (separate) Axes&lt;/li&gt; &#xA; &lt;li&gt;Customizable Axes (both x- and y-axis)&lt;/li&gt; &#xA; &lt;li&gt;Highlighting values (with customizable popup-views)&lt;/li&gt; &#xA; &lt;li&gt;Save chart to camera-roll / export to PNG/JPEG&lt;/li&gt; &#xA; &lt;li&gt;Predefined color templates&lt;/li&gt; &#xA; &lt;li&gt;Legends (generated automatically, customizable)&lt;/li&gt; &#xA; &lt;li&gt;Animations (build up animations, on both x- and y-axis)&lt;/li&gt; &#xA; &lt;li&gt;Limit lines (providing additional information, maximums, ...)&lt;/li&gt; &#xA; &lt;li&gt;Fully customizable (paints, typefaces, legends, colors, background, gestures, dashed lines, ...)&lt;/li&gt; &#xA; &lt;li&gt;Plotting data directly from &lt;a href=&#34;https://realm.io&#34;&gt;&lt;strong&gt;Realm.io&lt;/strong&gt;&lt;/a&gt; mobile database (&lt;a href=&#34;https://github.com/danielgindi/ChartsRealm&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chart types:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Screenshots are currently taken from the original repository, as they render exactly the same :-)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart4.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart3.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (cubic lines)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/cubiclinechart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (gradient fill)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/line_chart_gradient.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Combined-Chart (bar- and linechart in this case)&lt;/strong&gt; &lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/combined_chart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;BarChart (with legend, simple design)&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_barchart3.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;BarChart (grouped DataSets)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/groupedbarchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Horizontal-BarChart&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;PieChart (with selection, ...)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/simpledesign_piechart1.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ScatterChart&lt;/strong&gt; (with squares, triangles, circles, ... and more)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/scatterchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CandleStickChart&lt;/strong&gt; (for financial data)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/candlestickchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;BubbleChart&lt;/strong&gt; (area covered by bubbles indicates the value)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;RadarChart&lt;/strong&gt; (spider web chart)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/radarchart.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Currently there&#39;s no need for documentation for the iOS/tvOS/macOS version, as the API is &lt;strong&gt;95% the same&lt;/strong&gt; as on Android.&lt;br&gt; You can read the official &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;&gt;MPAndroidChart&lt;/a&gt; documentation here: &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart/wiki&#34;&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or you can see the Charts Demo project in both Objective-C and Swift (&lt;a href=&#34;https://github.com/danielgindi/Charts/tree/master/ChartsDemo-iOS&#34;&gt;&lt;strong&gt;ChartsDemo-iOS&lt;/strong&gt;&lt;/a&gt;, as well as macOS &lt;a href=&#34;https://github.com/danielgindi/Charts/tree/master/ChartsDemo-macOS&#34;&gt;&lt;strong&gt;ChartsDemo-macOS&lt;/strong&gt;&lt;/a&gt;) and learn the how-tos from it.&lt;/p&gt; &#xA;&lt;h1&gt;Special Thanks&lt;/h1&gt; &#xA;&lt;p&gt;Goes to &lt;a href=&#34;https://github.com/liuxuan30&#34;&gt;@liuxuan30&lt;/a&gt;, &lt;a href=&#34;https://github.com/petester42&#34;&gt;@petester42&lt;/a&gt; and &lt;a href=&#34;https://github.com/AlBirdie&#34;&gt;@AlBirdie&lt;/a&gt; for new features, bugfixes, and lots and lots of involvement in our open-sourced community! You guys are a huge help to all of those coming here with questions and issues, and I couldn&#39;t respond to all of those without you.&lt;/p&gt; &#xA;&lt;h3&gt;Our amazing sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://debricked.com/&#34;&gt;Debricked&lt;/a&gt;: Use open source securely&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://debricked.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4375169/73585544-25bfa800-44dd-11ea-9661-82519a125302.jpg&#34; alt=&#34;debricked&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2016 Daniel Cohen Gindi &amp;amp; Philipp Jahoda&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>