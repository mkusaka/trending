<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-11T01:39:18Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>joshdholtz/DeckUI</title>
    <updated>2022-09-11T01:39:18Z</updated>
    <id>tag:github.com,2022-09-11:/joshdholtz/DeckUI</id>
    <link href="https://github.com/joshdholtz/DeckUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Swift DSL for writing slide decks in Xcode&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚ú® DeckUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swiftpackageindex.com/joshdholtz/DeckUI&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fjoshdholtz%2FDeckUI%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/joshdholtz/DeckUI&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fjoshdholtz%2FDeckUI%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/joshdholtz/DeckUI&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/joshdholtz/DeckUI/main/%5Bhttps://twitter.com/joshdholtz%5D(https://twitter.com/joshdholtz)&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@joshdholtz-blue.svg?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DeckUI is a Swift DSL (domain specific language) for writing slide decks in Xcode. It allows for quick creation of slides and content in a language and environment you are familiar with.&lt;/p&gt; &#xA;&lt;p&gt;But &lt;em&gt;why&lt;/em&gt;?&lt;/p&gt; &#xA;&lt;p&gt;Well, I made this because:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I was bored on an airplane&lt;/li&gt; &#xA; &lt;li&gt;Wanted to use this as a demo for future conference talk on Swift DSLs&lt;/li&gt; &#xA; &lt;li&gt;Need something more customizable than markdown for writing slide decks and more codey than Keynote&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üëâ Watch &lt;a href=&#34;https://www.youtube.com/watch?v=FraeH6OeJPY&#34;&gt;Introducing DeckUI - Write slide decks in Swift&lt;/a&gt; on my YouTube channel for more explaination and full demo&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Create slide decks in pure Swift code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Decks are presented in SwiftUI with &lt;code&gt;Presenter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Build decks without knowing any SwiftUI &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;With &lt;code&gt;Deck&lt;/code&gt;, &lt;code&gt;Slide&lt;/code&gt;, &lt;code&gt;Title&lt;/code&gt;, &lt;code&gt;Words&lt;/code&gt;, &lt;code&gt;Bullets&lt;/code&gt;, &lt;code&gt;Media&lt;/code&gt;, &lt;code&gt;Columns&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use &lt;code&gt;RawView&lt;/code&gt; to drop any SwiftUI view &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fully interactable and great for demos&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Display code with &lt;code&gt;Code&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use up and down arrows to highlight lines of code as your talking about them&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üêå Future Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support iOS and maybe tvOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Fix bug with &lt;code&gt;Media&lt;/code&gt; remote image loading and slide transitions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Animations within a slide&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support videos on &lt;code&gt;Media&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More customization on &lt;code&gt;Words&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Nesting of &lt;code&gt;Bullets&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Syntax highlighting for &lt;code&gt;Code&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More examples&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Simple Demo&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import SwiftUI&#xA;import DeckUI&#xA;&#xA;struct ContentView: View {&#xA;    var body: some View {&#xA;        Presenter(deck: self.deck)&#xA;    }&#xA;}&#xA;&#xA;extension ContentView {&#xA;    var deck: Deck {&#xA;        Deck(title: &#34;SomeConf 2023&#34;) {&#xA;            Slide(alignment: .center) {&#xA;                Title(&#34;Welcome to DeckUI&#34;)&#xA;            }&#xA;&#xA;            Slide {&#xA;                Title(&#34;Quick Demo&#34;)&#xA;                Columns {&#xA;                    Column {&#xA;                        Bullets {&#xA;                            Words(&#34;Bullets&#34;)&#xA;                            Words(&#34;Words&#34;)&#xA;                            Words(&#34;Images&#34;)&#xA;                            Words(&#34;Columns&#34;)&#xA;                        }&#xA;                    }&#xA;                    &#xA;                    Column {&#xA;                        Media(.remoteImage(URL(string: &#34;https://www.fillmurray.com/g/200/300&#34;)!))&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/401294/189043329-fe75161c-17c1-4471-8632-07fb79d26d1a.mov&#34;&gt;https://user-images.githubusercontent.com/401294/189043329-fe75161c-17c1-4471-8632-07fb79d26d1a.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üíª Installing&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;https://github.com/joshdholtz/DeckUI.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Up to Next Major&#34; with &#34;1.0.0&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;There are no official &#34;Getting Started&#34; docs yet üòÖ But look at...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshdholtz/DeckUI/raw/main/Examples/Demo/Shared/ContentView.swift&#34;&gt;Demo app&lt;/a&gt; for usage&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshdholtz/DeckUI/tree/main/Sources/DeckUI/DSL&#34;&gt;Sources/DeckUI/DSL&lt;/a&gt; for how the &lt;code&gt;Deck&lt;/code&gt;, &lt;code&gt;Slide&lt;/code&gt;, and all slide components are built&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshdholtz/DeckUI/tree/main/Sources/DeckUI/Views&#34;&gt;Sources/DeckUI/Views&lt;/a&gt; for how &lt;code&gt;Presenter&lt;/code&gt; is built&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìñ Documentation&lt;/h2&gt; &#xA;&lt;p&gt;100% not documented yet but I&#39;ll get there ü§∑‚Äç‚ôÇÔ∏è&lt;/p&gt; &#xA;&lt;h2&gt;üèé Performance&lt;/h2&gt; &#xA;&lt;p&gt;Probably bad and never production ready üòà Please only use DeckUI for a single presentation and never at any scale.&lt;/p&gt; &#xA;&lt;h2&gt;üë®‚Äçüíª Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Yes please! I&#39;m happy to discuss issues and review/merge pull requests üôÇ I will do my best to get to the but I am a dad, work at &lt;a href=&#34;https://www.revenuecat.com/&#34;&gt;RevenueCat&lt;/a&gt;, and the lead maintainer of &lt;a href=&#34;https://github.com/fastlane/fastlane&#34;&gt;fastlane&lt;/a&gt; so I might not respond right away.&lt;/p&gt; &#xA;&lt;h2&gt;üìö Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Slide&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Slide&lt;/code&gt; can be used without any parameters but can be given a custom &lt;code&gt;alignment&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, and &lt;code&gt;theme&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    // Content&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide(alignment: .center, padding: 80, theme: .white) {&#xA;    // Content&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Title&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Title&lt;/code&gt; can be used by itself or with an optional &lt;code&gt;subtitle&lt;/code&gt;. It was real similar to &lt;code&gt;Words&lt;/code&gt; but larger.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide(alignment: .center) {&#xA;    Title(&#34;Introducing...&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    Title(&#34;Introduction&#34;, subtitle: &#34;What is it?&#34;)&#xA;    // Content&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Words&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Words&lt;/code&gt; are similar to what a textbox would be in Keynote, PowerPoint, or Google Slides. There will eventually be more style configurations for words.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide(alignment: .center) {&#xA;    Title(&#34;Center alignment&#34;)&#xA;    Words(&#34;Slides can be center aligned&#34;)&#xA;    Words(&#34;And more words&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bullets&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Bullets&lt;/code&gt; turns &lt;code&gt;Words&lt;/code&gt; into a list. It takes an optional &lt;code&gt;style&lt;/code&gt; parameter where you can choose between &lt;code&gt;.bullets&lt;/code&gt; and &lt;code&gt;.dash&lt;/code&gt;. &lt;code&gt;Bullets&lt;/code&gt; cannot be nested yet but soon‚Ñ¢Ô∏è.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    Title(&#34;Introduction&#34;, subtitle: &#34;What is it?&#34;)&#xA;    Bullets {&#xA;        Words(&#34;A custom Swift DSL to make slide decks&#34;)&#xA;        Words(&#34;Distributed as a Swift Package&#34;)&#xA;        Words(&#34;Develop your slide deck in Xcode with Swift&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    Title(&#34;Introduction&#34;, subtitle: &#34;What is it?&#34;)&#xA;    Bullets(style: .dash) {&#xA;        Words(&#34;A custom Swift DSL to make slide decks&#34;)&#xA;        Words(&#34;Distributed as a Swift Package&#34;)&#xA;        Words(&#34;Develop your slide deck in Xcode with Swift&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Media&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Media&lt;/code&gt; provides a few ways to display images from various source types. This will eventually support videos.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    Media(.assetImage(&#34;some-asset-name&#34;))&#xA;    Media(.bundleImage(&#34;some-file-name.jpg&#34;))&#xA;    Media(.remoteImage(URL(string: &#34;http://placekitten.com/g/200/300&#34;))!)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Columns&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Columns&lt;/code&gt; allow you to use one to infinte &lt;code&gt;Column&lt;/code&gt;s. Put other slide content in &lt;code&gt;Column&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    Title(&#34;Columns&#34;)&#xA;    Columns {&#xA;        Column {&#xA;            // Content&#xA;        }&#xA;        &#xA;        Column {&#xA;            // Content&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    Title(&#34;Columns&#34;)&#xA;    Columns {&#xA;        Column {&#xA;            // Content&#xA;        }&#xA;        &#xA;        Column {&#xA;            // Content&#xA;        }&#xA;&#xA;        Column {&#xA;            // Content&#xA;        }&#xA;&#xA;        Column {&#xA;            // Content&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Code&lt;/code&gt; is a super specifi version &lt;code&gt;Words&lt;/code&gt;. It will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Display text as monospace&lt;/li&gt; &#xA; &lt;li&gt;Scroll vertical if bigger than screen&lt;/li&gt; &#xA; &lt;li&gt;Highlight lines of code when up and down arrows are pressed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    Code(&#34;&#34;&#34;&#xA;    struct ContentView: View {&#xA;        var body: some View {&#xA;            Text(&#34;Hello slides&#34;)&#xA;        }&#xA;    }&#xA;    &#34;&#34;&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    Code(&#34;&#34;&#34;&#xA;    struct ContentView: View {&#xA;        var body: some View {&#xA;            Text(&#34;Hello slides&#34;)&#xA;        }&#xA;    }&#xA;    &#34;&#34;&#34;, , enableHighlight: false)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RawView&lt;/h3&gt; &#xA;&lt;p&gt;Drop any SwiftUI view inside of &lt;code&gt;RawView&lt;/code&gt;. Could be built-in SwiftUI views like &lt;code&gt;Text&lt;/code&gt; or &lt;code&gt;Button&lt;/code&gt; but can also be any custom SwiftUI view.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Slide {&#xA;    RawView {&#xA;        CounterView()&#xA;    }&#xA;}&#xA;&#xA;struct CounterView: View {&#xA;    @State var count = 0&#xA;    &#xA;    var body: some View {&#xA;        Button {&#xA;            self.count += 1&#xA;        } label: {&#xA;            Text(&#34;Press me - \(self.count)&#34;)&#xA;                .font(.system(size: 60))&#xA;                .padding(.horizontal, 40)&#xA;                .padding(.vertical, 20)&#xA;                .foregroundColor(.white)&#xA;                .overlay(&#xA;                    RoundedRectangle(cornerRadius: 25)&#xA;                    .stroke(Color.white, lineWidth: 2)&#xA;                )&#xA;        }.buttonStyle(.plain)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Themes&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;Theme&lt;/code&gt; can be set in &lt;code&gt;Presenter&lt;/code&gt; or individually on &lt;code&gt;Slide&lt;/code&gt;. There are three default themes (&lt;code&gt;.dark&lt;/code&gt;, &lt;code&gt;.black&lt;/code&gt;, &lt;code&gt;.white&lt;/code&gt;) but feel free to use your own.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {&#xA;    var body: some View {&#xA;        Presenter(deck: self.deck, showCamera: true)&#xA;    }&#xA;}&#xA;&#xA;extension Theme {&#xA;    public static let venonat: Theme = Theme(&#xA;        background: Color(hex: &#34;#624a7b&#34;),&#xA;        title: Foreground(&#xA;            color: Color(hex: &#34;#ff5a5a&#34;),&#xA;            font: Font.system(size: 80,&#xA;                              weight: .bold,&#xA;                              design: .default)&#xA;        ),&#xA;        subtitle: Foreground(&#xA;            color: Color(hex: &#34;#a48bbd&#34;),&#xA;            font: Font.system(size: 50,&#xA;                              weight: .light,&#xA;                              design: .default).italic()&#xA;        ),&#xA;        body: Foreground(&#xA;            color: Color(hex: &#34;#FFFFFF&#34;),&#xA;            font: Font.system(size: 50,&#xA;                              weight: .regular,&#xA;                              design: .default)&#xA;        ),&#xA;        code: Foreground(&#xA;            color: Color(hex: &#34;#FFFFFF&#34;),&#xA;            font: Font.system(size: 26,&#xA;                              weight: .regular,&#xA;                              design: .monospaced)&#xA;        ),&#xA;        codeHighlighted: (Color(hex: &#34;#312952&#34;), Foreground(&#xA;            color: Color(hex: &#34;#FFFFFF&#34;),&#xA;            font: Font.system(size: 26,&#xA;                              weight: .heavy,&#xA;                              design: .monospaced)&#xA;        ))&#xA;    )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>