<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-27T01:40:44Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KasemJaffer/receive_sharing_intent</title>
    <updated>2025-03-27T01:40:44Z</updated>
    <id>tag:github.com,2025-03-27:/KasemJaffer/receive_sharing_intent</id>
    <link href="https://github.com/KasemJaffer/receive_sharing_intent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter plugin that enables flutter apps to receive sharing photos, text and url from other apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;receive_sharing_intent&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/receive_sharing_intent&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/receive_sharing_intent.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Flutter plugin that enables flutter apps to receive sharing photos, videos, text, urls or any other file types from another app.&lt;/p&gt; &#xA;&lt;p&gt;Also, supports iOS Share extension and launching the host app automatically. Check the provided &lt;a href=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/lib/main.dart&#34;&gt;example&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SDK 19+ (Kotlin 1.9.22)&lt;/td&gt; &#xA;   &lt;td&gt;12.0+ (Swift 5.0)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/demo.gif&#34; alt=&#34;Alt Text&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;To use this plugin, add &lt;code&gt;receive_sharing_intent&lt;/code&gt; as a &lt;a href=&#34;https://flutter.io/platform-plugins/&#34;&gt;dependency in your pubspec.yaml file&lt;/a&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  receive_sharing_intent: ^latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Android&lt;/h2&gt; &#xA;&lt;p&gt;Add the following filters to your &lt;a href=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/android/app/src/main/AndroidManifest.xml&#34;&gt;android/app/src/main/AndroidManifest.xml&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;manifest xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34;&#xA;.....&#xA; &amp;lt;uses-permission android:name=&#34;android.permission.READ_EXTERNAL_STORAGE&#34;/&amp;gt;&#xA;&#xA;  &amp;lt;application&#xA;        android:name=&#34;io.flutter.app.FlutterApplication&#34;&#xA;        ...&#xA;        &amp;gt;&#xA;&amp;lt;!--Set activity launchMode to singleTask, if you want to prevent creating new activity instance everytime there is a new intent.--&amp;gt;&#xA;    &amp;lt;activity&#xA;            android:name=&#34;.MainActivity&#34;&#xA;            android:launchMode=&#34;singleTask&#34;&#xA;            android:theme=&#34;@style/LaunchTheme&#34;&#xA;            android:configChanges=&#34;orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode&#34;&#xA;            android:hardwareAccelerated=&#34;true&#34;&#xA;            android:windowSoftInputMode=&#34;adjustResize&#34;&amp;gt;&#xA;&#xA;            &amp;lt;!--TODO:  Add this filter, if you want support opening urls into your app--&amp;gt;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;               &amp;lt;action android:name=&#34;android.intent.action.VIEW&#34; /&amp;gt;&#xA;               &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;               &amp;lt;category android:name=&#34;android.intent.category.BROWSABLE&#34; /&amp;gt;&#xA;               &amp;lt;data&#xA;                   android:scheme=&#34;https&#34;&#xA;                   android:host=&#34;example.com&#34;&#xA;                   android:pathPrefix=&#34;/invite&#34;/&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;&#xA;            &amp;lt;!--TODO:  Add this filter, if you want support opening files into your app--&amp;gt;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;              &amp;lt;action android:name=&#34;android.intent.action.VIEW&#34; /&amp;gt;&#xA;              &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;              &amp;lt;data&#xA;                   android:mimeType=&#34;*/*&#34;&#xA;                   android:scheme=&#34;content&#34; /&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;&#xA;             &amp;lt;!--TODO: Add this filter, if you want to support sharing text into your app--&amp;gt;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;               &amp;lt;action android:name=&#34;android.intent.action.SEND&#34; /&amp;gt;&#xA;               &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;               &amp;lt;data android:mimeType=&#34;text/*&#34; /&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;&#xA;            &amp;lt;!--TODO: Add this filter, if you want to support sharing images into your app--&amp;gt;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;                &amp;lt;action android:name=&#34;android.intent.action.SEND&#34; /&amp;gt;&#xA;                &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;                &amp;lt;data android:mimeType=&#34;image/*&#34; /&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;                &amp;lt;action android:name=&#34;android.intent.action.SEND_MULTIPLE&#34; /&amp;gt;&#xA;                &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;                &amp;lt;data android:mimeType=&#34;image/*&#34; /&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;&#xA;             &amp;lt;!--TODO: Add this filter, if you want to support sharing videos into your app--&amp;gt;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;                &amp;lt;action android:name=&#34;android.intent.action.SEND&#34; /&amp;gt;&#xA;                &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;                &amp;lt;data android:mimeType=&#34;video/*&#34; /&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;                &amp;lt;action android:name=&#34;android.intent.action.SEND_MULTIPLE&#34; /&amp;gt;&#xA;                &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;                &amp;lt;data android:mimeType=&#34;video/*&#34; /&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;&#xA;            &amp;lt;!--TODO: Add this filter, if you want to support sharing any type of files--&amp;gt;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;                &amp;lt;action android:name=&#34;android.intent.action.SEND&#34; /&amp;gt;&#xA;                &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;                &amp;lt;data android:mimeType=&#34;*/*&#34; /&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;            &amp;lt;intent-filter&amp;gt;&#xA;                &amp;lt;action android:name=&#34;android.intent.action.SEND_MULTIPLE&#34; /&amp;gt;&#xA;                &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;                &amp;lt;data android:mimeType=&#34;*/*&#34; /&amp;gt;&#xA;            &amp;lt;/intent-filter&amp;gt;&#xA;      &amp;lt;/activity&amp;gt;&#xA;&#xA;  &amp;lt;/application&amp;gt;&#xA;&amp;lt;/manifest&amp;gt;&#xA;....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;iOS&lt;/h2&gt; &#xA;&lt;h4&gt;1. Create Share Extension&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using Xcode, go to File/New/Target and Choose &#34;Share Extension&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Give it a name, i.e., &#34;Share Extension&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make sure the deployment target for Runner.app and the share extension is the same.&lt;/p&gt; &#xA;&lt;h4&gt;2. Replace your &lt;a href=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/ios/Share%20Extension/Info.plist&#34;&gt;ios/Share Extension/Info.plist&lt;/a&gt; with the following:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;&#xA;&amp;lt;!DOCTYPE plist PUBLIC &#34;-//Apple//DTD PLIST 1.0//EN&#34; &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&amp;gt;&#xA;&amp;lt;plist version=&#34;1.0&#34;&amp;gt;&#xA;  &amp;lt;dict&amp;gt;&#xA;    &amp;lt;key&amp;gt;AppGroupId&amp;lt;/key&amp;gt;&#xA;    &amp;lt;string&amp;gt;$(CUSTOM_GROUP_ID)&amp;lt;/string&amp;gt;&#xA;&#x9;&amp;lt;key&amp;gt;CFBundleVersion&amp;lt;/key&amp;gt;&#xA;&#x9;&amp;lt;string&amp;gt;$(FLUTTER_BUILD_NUMBER)&amp;lt;/string&amp;gt;&#xA;&#x9;&amp;lt;key&amp;gt;NSExtension&amp;lt;/key&amp;gt;&#xA;&#x9;&amp;lt;dict&amp;gt;&#xA;&#x9;&#x9;&amp;lt;key&amp;gt;NSExtensionAttributes&amp;lt;/key&amp;gt;&#xA;        &amp;lt;dict&amp;gt;&#xA;            &amp;lt;key&amp;gt;PHSupportedMediaTypes&amp;lt;/key&amp;gt;&#xA;               &amp;lt;array&amp;gt;&#xA;                    &amp;lt;!--TODO: Add this flag, if you want to support sharing video into your app--&amp;gt;&#xA;                   &amp;lt;string&amp;gt;Video&amp;lt;/string&amp;gt;&#xA;                   &amp;lt;!--TODO: Add this flag, if you want to support sharing images into your app--&amp;gt;&#xA;                   &amp;lt;string&amp;gt;Image&amp;lt;/string&amp;gt;&#xA;               &amp;lt;/array&amp;gt;&#xA;            &amp;lt;key&amp;gt;NSExtensionActivationRule&amp;lt;/key&amp;gt;&#xA;            &amp;lt;dict&amp;gt;&#xA;                &amp;lt;!--TODO: Add this flag, if you want to support sharing text into your app--&amp;gt;&#xA;                &amp;lt;key&amp;gt;NSExtensionActivationSupportsText&amp;lt;/key&amp;gt;&#xA;                &amp;lt;true/&amp;gt;&#xA;                &amp;lt;!--TODO: Add this tag, if you want to support sharing urls into your app--&amp;gt;&#xA;            &#x9;&amp;lt;key&amp;gt;NSExtensionActivationSupportsWebURLWithMaxCount&amp;lt;/key&amp;gt;&#xA;            &#x9;&amp;lt;integer&amp;gt;1&amp;lt;/integer&amp;gt;&#xA;            &#x9;&amp;lt;!--TODO: Add this flag, if you want to support sharing images into your app--&amp;gt;&#xA;                &amp;lt;key&amp;gt;NSExtensionActivationSupportsImageWithMaxCount&amp;lt;/key&amp;gt;&#xA;                &amp;lt;integer&amp;gt;100&amp;lt;/integer&amp;gt;&#xA;                &amp;lt;!--TODO: Add this flag, if you want to support sharing video into your app--&amp;gt;&#xA;                &amp;lt;key&amp;gt;NSExtensionActivationSupportsMovieWithMaxCount&amp;lt;/key&amp;gt;&#xA;                &amp;lt;integer&amp;gt;100&amp;lt;/integer&amp;gt;&#xA;                &amp;lt;!--TODO: Add this flag, if you want to support sharing other files into your app--&amp;gt;&#xA;                &amp;lt;!--Change the integer to however many files you want to be able to share at a time--&amp;gt;&#xA;&#x9;&#x9;&#x9;&#x9;&amp;lt;key&amp;gt;NSExtensionActivationSupportsFileWithMaxCount&amp;lt;/key&amp;gt;&#xA;&#x9;&#x9;&#x9;&#x9;&amp;lt;integer&amp;gt;1&amp;lt;/integer&amp;gt;&#xA;            &amp;lt;/dict&amp;gt;&#xA;        &amp;lt;/dict&amp;gt;&#xA;&#x9;&#x9;&amp;lt;key&amp;gt;NSExtensionMainStoryboard&amp;lt;/key&amp;gt;&#xA;&#x9;&#x9;&amp;lt;string&amp;gt;MainInterface&amp;lt;/string&amp;gt;&#xA;&#x9;&#x9;&amp;lt;key&amp;gt;NSExtensionPointIdentifier&amp;lt;/key&amp;gt;&#xA;&#x9;&#x9;&amp;lt;string&amp;gt;com.apple.share-services&amp;lt;/string&amp;gt;&#xA;&#x9;&amp;lt;/dict&amp;gt;&#xA;  &amp;lt;/dict&amp;gt;&#xA;&amp;lt;/plist&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Add the following to your &lt;a href=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/ios/Runner/Info.plist&#34;&gt;ios/Runner/Info.plist&lt;/a&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;...&#xA;&amp;lt;key&amp;gt;AppGroupId&amp;lt;/key&amp;gt;&#xA;&amp;lt;string&amp;gt;$(CUSTOM_GROUP_ID)&amp;lt;/string&amp;gt;&#xA;&amp;lt;key&amp;gt;CFBundleURLTypes&amp;lt;/key&amp;gt;&#xA;&#x9;&amp;lt;array&amp;gt;&#xA;&#x9;&#x9;&amp;lt;dict&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;key&amp;gt;CFBundleTypeRole&amp;lt;/key&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;string&amp;gt;Editor&amp;lt;/string&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;key&amp;gt;CFBundleURLSchemes&amp;lt;/key&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;array&amp;gt;&#xA;&#x9;&#x9;&#x9;&#x9;&amp;lt;string&amp;gt;ShareMedia-$(PRODUCT_BUNDLE_IDENTIFIER)&amp;lt;/string&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;/array&amp;gt;&#xA;&#x9;&#x9;&amp;lt;/dict&amp;gt;&#xA;&#x9;&amp;lt;/array&amp;gt;&#xA;&#xA;&amp;lt;key&amp;gt;NSPhotoLibraryUsageDescription&amp;lt;/key&amp;gt;&#xA;&amp;lt;string&amp;gt;To upload photos, please allow permission to access your photo library.&amp;lt;/string&amp;gt;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Add the following to your &lt;a href=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/ios/Runner/Runner.entitlements&#34;&gt;ios/Runner/Runner.entitlements&lt;/a&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;....&#xA;    &amp;lt;!--TODO:  Add this tag, if you want support opening urls into your app--&amp;gt;&#xA;    &amp;lt;key&amp;gt;com.apple.developer.associated-domains&amp;lt;/key&amp;gt;&#xA;    &amp;lt;array&amp;gt;&#xA;        &amp;lt;string&amp;gt;applinks:example.com&amp;lt;/string&amp;gt;&#xA;    &amp;lt;/array&amp;gt;&#xA;....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Add the following to your &lt;a href=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/ios/Podfile&#34;&gt;ios/Podfile&lt;/a&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;...&#xA;target &#39;Runner&#39; do&#xA;  use_frameworks!&#xA;  use_modular_headers!&#xA;&#xA;  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))&#xA;&#xA;  # Share Extension is name of Extension which you created which is in this case &#39;Share Extension&#39;&#xA;  target &#39;Share Extension&#39; do&#xA;    inherit! :search_paths&#xA;  end&#xA;end&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;6. Add Runner and Share Extension in the same group&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;Signing &amp;amp; Capabilities&lt;/code&gt; tab and add App Groups capability in &lt;strong&gt;BOTH&lt;/strong&gt; Targets: &lt;code&gt;Runner&lt;/code&gt; and &lt;code&gt;Share Extension&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add a new container with the name of your choice. For example &lt;code&gt;group.MyContainer&lt;/code&gt; in the example project its &lt;code&gt;group.com.kasem.ShareExtention&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add User-defined(&lt;code&gt;Build Settings -&amp;gt; +&lt;/code&gt;) string &lt;code&gt;CUSTOM_GROUP_ID&lt;/code&gt; in &lt;strong&gt;BOTH&lt;/strong&gt; Targets: &lt;code&gt;Runner&lt;/code&gt; and &lt;code&gt;Share Extension&lt;/code&gt; and set value to group id created above. You can use different group ids depends on your flavor schemes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;7. Go to Build Phases of your Runner target and move &lt;code&gt;Embed Foundation Extension&lt;/code&gt; to the top of &lt;code&gt;Thin Binary&lt;/code&gt;.&lt;/h4&gt; &#xA;&lt;h4&gt;8. Make your &lt;code&gt;ShareViewController&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/ios/Share%20Extension/ShareViewController.swift&#34;&gt;ios/Share Extension/ShareViewController.swift&lt;/a&gt; inherit from &lt;code&gt;RSIShareViewController&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// If you get no such module &#39;receive_sharing_intent&#39; error. &#xA;// Go to Build Phases of your Runner target and&#xA;// move `Embed Foundation Extension` to the top of `Thin Binary`. &#xA;import receive_sharing_intent&#xA;&#xA;class ShareViewController: RSIShareViewController {&#xA;      &#xA;    // Use this method to return false if you don&#39;t want to redirect to host app automatically.&#xA;    // Default is true&#xA;    override func shouldAutoRedirect() -&amp;gt; Bool {&#xA;        return false&#xA;    }&#xA;    &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Compiling issues and their fixes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Error: No such module &#39;receive_sharing_intent&#39;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fix: Go to Build Phases of your Runner target and move &lt;code&gt;Embed Foundation Extension&lt;/code&gt; to the top of &lt;code&gt;Thin Binary&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Error: App does not build after adding Share Extension?&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fix: Check Build Settings of your share extension and remove everything that tries to import Cocoapods from your main project. i.e. remove everything under &lt;code&gt;Linking/Other Linker Flags&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You might need to disable bitcode for the extension target&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Error: Invalid Bundle. The bundle at &#39;Runner.app/Plugins/Sharing Extension.appex&#39; contains disallowed file &#39;Frameworks&#39;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fix: &lt;a href=&#34;https://stackoverflow.com/a/25789145/2061365&#34;&gt;https://stackoverflow.com/a/25789145/2061365&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Full Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KasemJaffer/receive_sharing_intent/master/example/lib/main.dart&#34;&gt;main.dart&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;dart:async&#39;;&#xA;&#xA;import &#39;package:receive_sharing_intent/receive_sharing_intent.dart&#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatefulWidget {&#xA;  @override&#xA;  _MyAppState createState() =&amp;gt; _MyAppState();&#xA;}&#xA;&#xA;class _MyAppState extends State&amp;lt;MyApp&amp;gt; {&#xA;  late StreamSubscription _intentSub;&#xA;  final _sharedFiles = &amp;lt;SharedMediaFile&amp;gt;[];&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;&#xA;    // Listen to media sharing coming from outside the app while the app is in the memory.&#xA;    _intentSub = ReceiveSharingIntent.instance.getMediaStream().listen((value) {&#xA;      setState(() {&#xA;        _sharedFiles.clear();&#xA;        _sharedFiles.addAll(value);&#xA;&#xA;        print(_sharedFiles.map((f) =&amp;gt; f.toMap()));&#xA;      });&#xA;    }, onError: (err) {&#xA;      print(&#34;getIntentDataStream error: $err&#34;);&#xA;    });&#xA;&#xA;    // Get the media sharing coming from outside the app while the app is closed.&#xA;    ReceiveSharingIntent.instance.getInitialMedia().then((value) {&#xA;      setState(() {&#xA;        _sharedFiles.clear();&#xA;        _sharedFiles.addAll(value);&#xA;        print(_sharedFiles.map((f) =&amp;gt; f.toMap()));&#xA;&#xA;        // Tell the library that we are done processing the intent.&#xA;        ReceiveSharingIntent.instance.reset();&#xA;      });&#xA;    });&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    _intentSub.cancel();&#xA;    super.dispose();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    const textStyleBold = const TextStyle(fontWeight: FontWeight.bold);&#xA;    return MaterialApp(&#xA;      home: Scaffold(&#xA;        appBar: AppBar(&#xA;          title: const Text(&#39;Plugin example app&#39;),&#xA;        ),&#xA;        body: Center(&#xA;          child: Column(&#xA;            children: &amp;lt;Widget&amp;gt;[&#xA;              Text(&#34;Shared files:&#34;, style: textStyleBold),&#xA;              Text(_sharedFiles&#xA;                      .map((f) =&amp;gt; f.toMap())&#xA;                      .join(&#34;,\n****************\n&#34;)),&#xA;            ],&#xA;          ),&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>