<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-02T01:46:35Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aheze/VariableBlurView</title>
    <updated>2023-06-02T01:46:35Z</updated>
    <id>tag:github.com,2023-06-02:/aheze/VariableBlurView</id>
    <link href="https://github.com/aheze/VariableBlurView" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A one-file, App Store-safe version of Janum Trivedi&#39;s variable blur effect.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VariableBlurView&lt;/h1&gt; &#xA;&lt;p&gt;A one-file, App Store-safe version of Janum Trivedi&#39;s variable blur effect.&lt;/p&gt; &#xA;&lt;p&gt;Original author: &lt;a href=&#34;https://github.com/jtrivedi&#34;&gt;@jtrivedi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Original repository: &lt;a href=&#34;https://github.com/jtrivedi/VariableBlurView&#34;&gt;https://github.com/jtrivedi/VariableBlurView&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;React Native port: &lt;a href=&#34;https://github.com/candlefinance/blur-view&#34;&gt;https://github.com/candlefinance/blur-view&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aheze/VariableBlurView/assets/49819455/4400f76d-7d85-4e3f-9757-19bc99297524&#34;&gt;https://github.com/aheze/VariableBlurView/assets/49819455/4400f76d-7d85-4e3f-9757-19bc99297524&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Just drag &lt;a href=&#34;https://github.com/aheze/VariableBlurView/raw/main/Sources/VariableBlurView.swift&#34;&gt;&lt;code&gt;VariableBlurView.swift&lt;/code&gt;&lt;/a&gt; into your project. Or, add the package URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/aheze/VariableBlurView&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How is it App Store-safe?&lt;/h3&gt; &#xA;&lt;p&gt;Well it still uses the &lt;code&gt;CAFilter&lt;/code&gt; private API, but I obfuscated it as a base64 string. I&#39;ve used this method in &lt;a href=&#34;https://midnight.day&#34;&gt;Midnight&lt;/a&gt; and it worked just fine.&lt;/p&gt; &#xA;&lt;p&gt;Also, this version gets past App Review â€” Janum&#39;s original version included a objc briding header, which gets auto-rejected. This version uses a bunch of runtime objc selectors instead.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Original license &lt;a href=&#34;https://github.com/jtrivedi/VariableBlurView/raw/main/LICENSE.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MIT License&#xA;&#xA;Copyright (c) 2023 A. Zheng&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>YogeshPateliOS/FoodAppSwiftUI</title>
    <updated>2023-06-02T01:46:35Z</updated>
    <id>tag:github.com,2023-06-02:/YogeshPateliOS/FoodAppSwiftUI</id>
    <link href="https://github.com/YogeshPateliOS/FoodAppSwiftUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Experience Delicious: A SwiftUI Food Delivery App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YogeshPateliOS/FoodAppSwiftUI/main/foodui.png&#34; alt=&#34;APP UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I developed this project using SwiftUI, MVVM, Combine, and integrated it with Yummie&#39;s backend for data.&lt;/li&gt; &#xA; &lt;li&gt;Onboarding Screen&lt;/li&gt; &#xA; &lt;li&gt;On the home screen, you&#39;ll find a list of Food Categories, popular dishes, and our best recommendations. Soon,&lt;/li&gt; &#xA; &lt;li&gt;Dish details screen where you can view the title, image, and description of a selected dish, as well as an intuitive UI to place an order. Stay tuned for updates!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>