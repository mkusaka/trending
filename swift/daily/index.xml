<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-06T01:40:21Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tuist/xcbeautify</title>
    <updated>2023-10-06T01:40:21Z</updated>
    <id>tag:github.com,2023-10-06:/tuist/xcbeautify</id>
    <link href="https://github.com/tuist/xcbeautify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A little beautifier tool for xcodebuild&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;xcbeautify&lt;/h1&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tuist/xcbeautify/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-2-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tuist/xcbeautify/actions&#34;&gt;&lt;img src=&#34;https://github.com/tuist/xcbeautify/workflows/build/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tuist/xcbeautify/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/tuist/xcbeautify.svg?sanitize=true&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tuist/xcbeautify/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/tuist/xcbeautify.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;xcbeautify&lt;/code&gt; is a little beautifier tool for &lt;code&gt;xcodebuild&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Similar to &lt;code&gt;xcpretty&lt;/code&gt;, but faster.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2x faster than &lt;code&gt;xcpretty&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Human-friendly and colored output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports the new build system&#39;s output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports Xcode&#39;s parallel testing output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports formatting Swift Package Manager output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports formatting Bazel output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports generating JUnit reports.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports macOS &amp;amp; Linux.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Written in Swift: &lt;code&gt;xcbeautify&lt;/code&gt; compiles to a static binary which you can bring anywhere. This also means less Ruby-dependant in your development environment and CI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fun fact&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;xcbeautify&lt;/code&gt; uses itself to format its CI build logs.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;If you use macOS 10.14.3 or earlier, install Swift 5 Runtime Support for Command Line Tools first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew cask install thii/swift-runtime/swift-runtime&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/yonaskolb/mint&#34;&gt;Mint&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mint install tuist/xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Create a directory in the same location as the &lt;code&gt;xcodeproj&lt;/code&gt; file, for example &lt;code&gt;BuildTools&lt;/code&gt;.&lt;br&gt; In that directory, create a &lt;code&gt;Package.swift&lt;/code&gt; file with the following contents.&lt;br&gt; In addition, add an empty file named &lt;code&gt;Empty.swift&lt;/code&gt; to the same location.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// swift-tools-version: 5.6&#xA;import PackageDescription&#xA;&#xA;let package = Package(&#xA;    name: &#34;BuildTools&#34;,&#xA;    platforms: [.macOS(.v10_11)],&#xA;    dependencies: [&#xA;      .package(url: &#34;https://github.com/tuist/xcbeautify&#34;, from: &#34;0.13.0&#34;),&#xA;    ],&#xA;    targets: [&#xA;      .target(name: &#34;BuildTools&#34;, path: &#34;&#34;)&#xA;    ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enter this command to execute.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swift run -c release --package-path ./BuildTools xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/tuist/xcbeautify.git&#xA;cd xcbeautify&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xcodebuild [flags] | xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want &lt;code&gt;xcbeautify&lt;/code&gt; to exit with the same status code as &lt;code&gt;xcodebuild&lt;/code&gt; (e.g. on a CI):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;set -o pipefail &amp;amp;&amp;amp; xcodebuild [flags] | xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For parallel and concurrent destination testing, it helps to use unbuffered I/O for &lt;em&gt;stdout&lt;/em&gt; and to redirect &lt;em&gt;stderr&lt;/em&gt; to &lt;em&gt;stdout&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NSUnbufferedIO=YES xcodebuild [flags] 2&amp;gt;&amp;amp;1 | xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;swift test [flags] 2&amp;gt;&amp;amp;1 | xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parse Bazel&#39;s building and testing output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set -o pipefail &amp;amp;&amp;amp; bazel build //path/to/package:target 2&amp;gt;&amp;amp;1 | xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set -o pipefail &amp;amp;&amp;amp; bazel test //path/to/package:target 2&amp;gt;&amp;amp;1 | xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Actions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xcbeautify&lt;/code&gt; features an integrated GitHub Actions renderer that harnesses &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions&#34;&gt;workflow commands&lt;/a&gt; to highlight warnings, errors, and results directly within the GitHub user interface. To utilize this function, simply run &lt;code&gt;xcbeautify&lt;/code&gt; and add the &lt;code&gt;--renderer github-actions&lt;/code&gt; flag during execution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;set -o pipefail &amp;amp;&amp;amp; xcodebuild [flags] | xcbeautify --renderer github-actions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Generate Xcode project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make xcode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build with Bazel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bazel build //Sources/xcbeautify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Release a new version, e.g. &lt;code&gt;x.y.z&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make release version=x.y.z&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please send a PR!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h2&gt;Contributors âœ¨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/nikolaykasyanov&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/136644?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Nikolay Kasyanov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikolay Kasyanov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tuist/xcbeautify/commits?author=nikolaykasyanov&#34; title=&#34;Code&#34;&gt;ðŸ’»&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://www.charlespisciotta.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38054839?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Charles Pisciotta&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Charles Pisciotta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tuist/xcbeautify/commits?author=cpisciotta&#34; title=&#34;Code&#34;&gt;ðŸ’»&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
</feed>