<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-12T01:36:19Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stackotter/swift-cross-ui</title>
    <updated>2025-05-12T01:36:19Z</updated>
    <id>tag:github.com,2025-05-12:/stackotter/swift-cross-ui</id>
    <link href="https://github.com/stackotter/swift-cross-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform declarative UI framework, inspired by SwiftUI.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/stackotter/swift-cross-ui/main/banner.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/stackotter/swift-cross-ui/workflows/Build%20macOS/badge.svg?branch=main&#34;&gt; &lt;img src=&#34;https://github.com/stackotter/swift-cross-ui/workflows/Build%20Linux/badge.svg?branch=main&#34;&gt; &lt;img src=&#34;https://github.com/stackotter/swift-cross-ui/workflows/Build%20Windows/badge.svg?branch=main&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/stackotter/swift-cross-ui&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;A SwiftUI-like framework for creating cross-platform apps in Swift (5.10+).&lt;/p&gt; &#xA;&lt;p&gt;To dive right in with SwiftCrossUI, check out &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/quick-start&#34;&gt;the SwiftCrossUI quick start guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] SwiftCrossUI does not attempt to replicate SwiftUI&#39;s API perfectly since that would be a constantly-moving target and SwiftUI has many entrenched Apple-centric concepts. That said, SwiftCrossUI&#39;s built-in views and scenes share much of their API surface with their SwiftUI cousins, and over time SwiftCrossUI will likely adopt many of SwiftUI&#39;s commonly-used APIs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stackotter/swift-cross-ui/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stackotter/swift-cross-ui/main/#supporting-swiftcrossui&#34;&gt;Supporting SwiftCrossUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stackotter/swift-cross-ui/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stackotter/swift-cross-ui/main/#basic-example&#34;&gt;Basic example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stackotter/swift-cross-ui/main/#backends&#34;&gt;Backends&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Discussion about SwiftCrossUI happens in the &lt;a href=&#34;https://discord.gg/fw2trT48ny&#34;&gt;SwiftCrossUI Discord server&lt;/a&gt;. &lt;a href=&#34;https://discord.gg/fw2trT48ny&#34;&gt;Join&lt;/a&gt; to discuss the library, get involved, or just be kept up-to-date on progress!&lt;/p&gt; &#xA;&lt;h2&gt;Supporting SwiftCrossUI&lt;/h2&gt; &#xA;&lt;p&gt;If you find SwiftCrossUI useful, please consider supporting me by &lt;a href=&#34;https://github.com/sponsors/stackotter&#34;&gt;becoming a sponsor&lt;/a&gt;. I spend most of my spare time working on open-source projects, and each sponsorship helps me focus more time on making high quality libraries and tools for the community.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s the &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui&#34;&gt;documentation site&lt;/a&gt;. SwiftCrossUI is still a work-in-progress; proper documentation and tutorials are on the horizon. Documentation contributions are very welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Basic example&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a simple example app demonstrating how easy it is to get started with SwiftCrossUI. For a more detailed walkthrough, check out our &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/quick-start&#34;&gt;quick start guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import PackageDescription&#xA;&#xA;let package = Package(&#xA;    name: &#34;YourApp&#34;,&#xA;    dependencies: [&#xA;        .package(url: &#34;https://github.com/stackotter/swift-cross-ui&#34;, branch: &#34;main&#34;)&#xA;    ],&#xA;    targets: [&#xA;        .executableTarget(&#xA;            name: &#34;YourApp&#34;,&#xA;            dependencies: [&#xA;                .product(name: &#34;SwiftCrossUI&#34;, package: &#34;swift-cross-ui&#34;),&#xA;                .product(name: &#34;DefaultBackend&#34;, package: &#34;swift-cross-ui&#34;),&#xA;            ]&#xA;        )&#xA;    ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Figure 1: &lt;em&gt;Package.swift&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import SwiftCrossUI&#xA;import DefaultBackend&#xA;&#xA;@main&#xA;struct CounterApp: App {&#xA;    @State var count = 0&#xA;&#xA;    var body: some Scene {&#xA;        WindowGroup(&#34;CounterApp&#34;) {&#xA;            HStack {&#xA;                Button(&#34;-&#34;) { count -= 1 }&#xA;                Text(&#34;Count: \(count)&#34;)&#xA;                Button(&#34;+&#34;) { count += 1 }&#xA;            }.padding()&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Clone the SwiftCrossUI repository to test out this example, and many more;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/stackotter/swift-cross-ui&#xA;cd swift-cross-ui/Examples&#xA;swift run CounterExample&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The documentation contains &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/examples&#34;&gt;a detailed list of all examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backends&lt;/h2&gt; &#xA;&lt;p&gt;SwiftCrossUI has a variety of backends tailored to different operating systems. The beauty of SwiftCrossUI is that you can write your app once and have it look native everywhere. For this reason I recommend using &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/defaultbackend&#34;&gt;DefaultBackend&lt;/a&gt; unless you&#39;ve got particular constraints.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Click through each backend name for detailed system requirements and installation instructions.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/defaultbackend&#34;&gt;DefaultBackend&lt;/a&gt;: Adapts to your target operating system. On macOS it uses &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/appkitbackend&#34;&gt;AppKitBackend&lt;/a&gt;, on Windows it uses &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/winuibackend&#34;&gt;WinUIBackend&lt;/a&gt;, on Linux it uses &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/gtkbackend&#34;&gt;GtkBackend&lt;/a&gt;, and on iOS and tvOS it uses &lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/uikitbackend&#34;&gt;UIKitBackend&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/appkitbackend&#34;&gt;AppKitBackend&lt;/a&gt;: The native macOS backend. Supports all SwiftCrossUI features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/uikitbackend&#34;&gt;UIKitBackend&lt;/a&gt;: The native iOS &amp;amp; tvOS backend. Supports most SwiftCrossUI features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/winuibackend&#34;&gt;WinUIBackend&lt;/a&gt;: The native Windows backend. Supports most SwiftCrossUI features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/gtkbackend&#34;&gt;GtkBackend&lt;/a&gt;: Works on Linux, macOS, and Windows. Requires gtk 4 to be installed. Supports most SwiftCrossUI features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackotter.github.io/swift-cross-ui/documentation/swiftcrossui/gtk3backend&#34;&gt;Gtk3Backend&lt;/a&gt;: Exists to target older Linux distributions. Requires gtk 3 to be installed. Supports most SwiftCrossUI features. Quite buggy on macOS due to underlying Gtk 3 bugs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] If you&#39;re using DefaultBackend, you can override the underlying backend during compilation by setting the &lt;code&gt;SCUI_DEFAULT_BACKEND&lt;/code&gt; environment variable to the name of the desired backend. This is useful when you e.g. want to test the Gtk version of your app while using a Mac. Note that this only works for built-in backends and still requires the chosen backend to be compatible with your machine.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>