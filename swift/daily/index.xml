<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-28T01:46:43Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vadymmarkov/Fakery</title>
    <updated>2023-01-28T01:46:43Z</updated>
    <id>tag:github.com,2023-01-28:/vadymmarkov/Fakery</id>
    <link href="https://github.com/vadymmarkov/Fakery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ‘½ Swift fake data generator&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/Images/logo.png&#34; alt=&#34;Fakery logo&#34;&gt; &lt;a href=&#34;https://travis-ci.org/vadymmarkov/Fakery&#34;&gt;&lt;img src=&#34;http://img.shields.io/travis/vadymmarkov/Fakery.svg?style=flat&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/carthage-compatible-brightgreen.svg?style=flat&#34; alt=&#34;Carthage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/Fakery&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Fakery.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/Fakery&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/Fakery.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/Fakery&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/Fakery.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a Swift port of Ruby&#39;s &lt;a href=&#34;https://github.com/stympy/faker&#34;&gt;Faker&lt;/a&gt; library that generates fake data.&lt;/p&gt; &#xA;&lt;p&gt;Are you still bothered with meaningless randomly character strings? Just relax and leave this job to &lt;strong&gt;Fakery&lt;/strong&gt;. It&#39;s useful in all the cases when you need to use some dummy data for testing, population of database during development, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Generated data is pretty realistic, supports a range of locales, but returned values are not guaranteed to be unique.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#localization&#34;&gt;Localization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#generators&#34;&gt;Generators&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#address&#34;&gt;Address&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#app&#34;&gt;App&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#business&#34;&gt;Business&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#cat&#34;&gt;Cat&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#commerce&#34;&gt;Commerce&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#company&#34;&gt;Company&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#zelda&#34;&gt;Zelda&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#gender&#34;&gt;Gender&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#internet&#34;&gt;Internet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#lorem&#34;&gt;Lorem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#name&#34;&gt;Name&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#number&#34;&gt;Number&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#phone-number&#34;&gt;Phone number&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#team&#34;&gt;Team&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#bank&#34;&gt;Bank&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#car&#34;&gt;Car&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#programming-language&#34;&gt;Programming language&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#vehicle&#34;&gt;Vehicle&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#hobbit&#34;&gt;Hobbit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#author&#34;&gt;Author&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadymmarkov/Fakery/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import Fakery&#xA;&#xA;let faker = Faker(locale: &#34;nb-NO&#34;)&#xA;&#xA;let firstName = faker.name.firstName()  //=&amp;gt; &#34;Emilie&#34;&#xA;let lastName = faker.name.lastName()    //=&amp;gt; &#34;Hansen&#34;&#xA;let city = faker.address.city()         //=&amp;gt; &#34;Oslo&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fakery&lt;/strong&gt; is quite powerful when it comes to generation of locale-specific data. In &lt;code&gt;Resources/Locales&lt;/code&gt; you can find JSON files for more than 20 locales, and, of course, it&#39;s not a limit. Feel free to contribute and add more!&lt;/p&gt; &#xA;&lt;p&gt;The default locale is English. When you use one of the available generators and the corresponding key is not found in a JSON file for the currently selected locale &lt;strong&gt;Fakery&lt;/strong&gt; will also check if it exists in &#34;en.json&#34; file.&lt;/p&gt; &#xA;&lt;h2&gt;Generators&lt;/h2&gt; &#xA;&lt;h3&gt;Address&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.address.city() //=&amp;gt; &#34;Oslo&#34;&#xA;faker.address.streetName() //=&amp;gt; &#34;North Avenue&#34;&#xA;faker.address.secondaryAddress() //=&amp;gt; &#34;Apt. 123&#34;&#xA;faker.address.streetAddress(includeSecondary: Bool) //=&amp;gt; &#34;12 North Avenue&#34;&#xA;faker.address.buildingNumber() //=&amp;gt; &#34;123&#34;&#xA;faker.address.postcode(stateAbbreviation: String) //=&amp;gt; &#34;0884&#34;&#xA;faker.address.timeZone() //=&amp;gt; &#34;America/Los_Angeles&#34;&#xA;faker.address.streetSuffix() //=&amp;gt; &#34;Avenue&#34;&#xA;faker.address.citySuffix() //=&amp;gt; &#34;town&#34;&#xA;faker.address.cityPrefix() //=&amp;gt; &#34;North&#34;&#xA;faker.address.stateAbbreviation() //=&amp;gt; &#34;CA&#34;&#xA;faker.address.state() //=&amp;gt; &#34;California&#34;&#xA;faker.address.county() //=&amp;gt; &#34;Autauga County&#34;&#xA;faker.address.country() //=&amp;gt; &#34;United States of America&#34;&#xA;faker.address.countryCode() //=&amp;gt; &#34;US&#34;&#xA;faker.address.latitude() //=&amp;gt; -58.17256227443719&#xA;faker.address.longitude() //=&amp;gt; -156.65548382095133&#xA;faker.address.coordinate() //=&amp;gt; CLLocationCoordinate2D(latitude: 40.97868, longitude: 29.09306)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;App&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.app.name() //=&amp;gt; &#34;Namfix&#34;&#xA;faker.app.version() //=&amp;gt; &#34;0.1.1&#34;&#xA;faker.app.author() //=&amp;gt; &#34;Ida Adams&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Business&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.business.creditCardNumber() //=&amp;gt; &#34;1234-2121-1221-1211&#34;&#xA;faker.business.creditCardType() //=&amp;gt; &#34;visa&#34;&#xA;faker.business.creditCardExpiryDate() //=&amp;gt; &#34;2020-10-12&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cat&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.cat.name() //=&amp;gt; &#34;Shadow&#34;        &#xA;faker.cat.breed() //=&amp;gt; &#34;British Semipi-longhair&#34;&#xA;faker.cat.registry() //=&amp;gt; &#34;American Cat Fanciers Association&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commerce&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.commerce.color() //=&amp;gt; &#34;black&#34;&#xA;faker.commerce.department(maximum: Int, fixedAmount: Bool) //=&amp;gt; &#34;Music&#34;&#xA;faker.commerce.productName() //=&amp;gt; &#34;Awesome Wooden Hat&#34;&#xA;faker.commerce.price() // 90.5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Company&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.company.name() //=&amp;gt; &#34;Adams Inc&#34;       &#xA;faker.company.suffix() //=&amp;gt; &#34;Inc&#34;&#xA;faker.company.catchPhrase() //=&amp;gt; &#34;Universal software&#34;        &#xA;faker.company.bs() //=&amp;gt; &#34;implement innovative methodologies&#34;&#xA;faker.company.logo() // &#34;http://pigment.github.io/fake-logos/logos/medium/color/1.png&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Zelda&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.zelda.game() //=&amp;gt; &#34;Ocarina of Time&#34;   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gender&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.gender.type() //=&amp;gt; &#34;Agender&#34;&#xA;faker.gender.binaryType() //=&amp;gt; &#34;Male&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Internet&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.internet.username(separator: String?) //=&amp;gt; &#34;ida4&#34;       &#xA;faker.internet.domainName(alphaNumericOnly: Bool) //=&amp;gt; &#34;example.com&#34;        &#xA;faker.internet.domainWord(alphaNumericOnly: Bool) //=&amp;gt; &#34;domainword&#34;        &#xA;faker.internet.domainSuffix() //=&amp;gt; &#34;com&#34;&#xA;faker.internet.email() // =&amp;gt; &#34;ida4@some.info&#34;&#xA;faker.internet.freeEmail() //=&amp;gt; &#34;gmail.com&#34;&#xA;faker.internet.safeEmail() //=&amp;gt; &#34;adams@example.org&#34;&#xA;faker.internet.password(minimumLength: Int, maximumLength: Int) //=&amp;gt; &#34;e2dddhwd1g5qhvhgfi&#34;&#xA;faker.internet.ipV4Address() //=&amp;gt; &#34;24.29.18.175&#34;&#xA;faker.internet.ipV6Address() //=&amp;gt; &#34;ac5f:d696:3807:1d72:2eb5:4e81:7d2b:e1df&#34;&#xA;faker.internet.url() //=&amp;gt; &#34;http://example.com/ida4&#34;&#xA;faker.internet.image() //=&amp;gt; &#34;http://lorempixel.com/320/200&#34;&#xA;faker.internet.templateImage() //=&amp;gt; &#34;http://dummyimage.com/320x200/000000/ffffff&#34;&#xA;faker.internet.hashtag() //=&amp;gt; &#34;#art&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lorem&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.lorem.word() //=&amp;gt; &#34;repellendus&#34;         &#xA;faker.lorem.words(amount: Int) //=&amp;gt; [&#34;dolores&#34;, &#34;adipisci&#34;, &#34;nesciunt&#34;]      &#xA;faker.lorem.character() //=&amp;gt; &#34;a&#34;        &#xA;faker.lorem.characters(amount: Int) // Default = 255&#xA;faker.lorem.sentence(wordsAmount: Int) // Default = 4&#xA;faker.lorem.sentences(amount: Int) // Default = 3&#xA;faker.lorem.paragraph(sentencesAmount: Int) // Default = 3&#xA;faker.lorem.paragraphs(amount: Int) // Default = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Name&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.name.name() //=&amp;gt; &#34;Ida Adams&#34;        &#xA;faker.name.firstName() //=&amp;gt; &#34;Ida&#34;&#xA;faker.name.lastName() //=&amp;gt; &#34;Adams&#34;&#xA;faker.name.prefix() //=&amp;gt; &#34;Mrs.&#34;&#xA;faker.name.suffix() //=&amp;gt; &#34;PhD&#34;&#xA;faker.name.title() //=&amp;gt; &#34;Lead&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Number&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.number.randomBool() //=&amp;gt; true or false&#xA;faker.number.randomInt() //=&amp;gt; some Int between 0 and 1000&#xA;faker.number.randomInt(min: -100, max:50) //=&amp;gt; some Int between -100 and 50&#xA;faker.number.randomFloat() //=&amp;gt; some Float between 0 and 1000&#xA;faker.number.randomFloat(min: -10.4, max:50) //=&amp;gt; some Float between -10.4 and 50&#xA;faker.number.randomCGFloat() //=&amp;gt; some CGFloat between 0 and 1000&#xA;faker.number.randomCGFloat(min: 42.42, max:86) //=&amp;gt; some CGFloat between -42.42 and 86&#xA;faker.number.randomDouble() //=&amp;gt; some Double between 0 and 1000&#xA;faker.number.randomDouble(min: 0, max:1) //=&amp;gt; some Double between 0 and 1&#xA;faker.number.increasingUniqueId() //=&amp;gt; every call returns an unique int&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Phone number&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.phoneNumber.phoneNumber() //=&amp;gt; &#34;1-333-333-3333&#34;        &#xA;faker.phoneNumber.cellPhone() //=&amp;gt; &#34;333-333-3333&#34;&#xA;faker.phoneNumber.areaCode() //=&amp;gt; &#34;201&#34;&#xA;faker.phoneNumber.exchangeCode() //=&amp;gt; &#34;201&#34;&#xA;faker.phoneNumber.subscriberNumber() //=&amp;gt; &#34;1234&#34;&#xA;faker.phoneNumber.numberExtension(length: Int) // &#34;123&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Team&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;faker.team.name() //=&amp;gt; &#34;bats&#34;         &#xA;faker.team.creature() //=&amp;gt; &#34;Alabama bats&#34;&#xA;faker.team.state() // =&amp;gt; &#34;Alabama&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bank&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;faker.bank.name() //=&amp;gt; &#34;ABN AMRO CORPORATE FINANCE LIMITED&#34;         &#xA;faker.bank.swiftBic() //=&amp;gt; &#34;AAFMGB21&#34;&#xA;faker.bank.iban() // =&amp;gt; &#34;NL45BUNQ2209931378&#34;&#xA;faker.bank.bban() //=&amp;gt; ABNA0136468471&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hobbit&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;faker.hobbit.character() //=&amp;gt; &#34;Bilbo Baggins&#34;         &#xA;faker.hobbit.thorinsCompany() //=&amp;gt; &#34;Thorin Oakenshield&#34;&#xA;faker.hobbit.quote() // =&amp;gt; &#34;Do you wish me a good morning, or mean that it is a good morning whether I want it or not; or that you feel good this morning; or that it is a morning to be good on?&#34;&#xA;faker.hobbit.location() //=&amp;gt; &#34;Bree&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Car&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;faker.car.brand() //=&amp;gt; &#34;BMW&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Programming language&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;faker.programming_language.name() //=&amp;gt; &#34;Elixir&#34;         &#xA;faker.programming_language.creator() //=&amp;gt; &#34;JosÃ© Valim&#34;         &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Vehicle&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;faker.vehicle.manufacture() //=&amp;gt; &#34;Volkswagen&#34; &#xA;faker.vehicle.make() //=&amp;gt; &#34;BMW&#34;&#xA;faker.vehicle.colors() //=&amp;gt; &#34;Red&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ham&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;faker.ham.name() //=&amp;gt; &#34;Taylor Ham&#34;         &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;House&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;faker.house.furniture() //=&amp;gt; &#34;chair&#34;&#xA;faker.house.room() //=&amp;gt; &#34;living room&#34; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fakery&lt;/strong&gt; is available through &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, simply add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Fakery&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or alternatively using the Swift Package Manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let package = Package(&#xA;    //â€¦&#xA;    dependencies[&#xA;        .package(name: &#34;Fakery&#34;, url: &#34;https://github.com/vadymmarkov/Fakery&#34;, from: &#34;5.0.0&#34;))&#xA;    ],&#xA;    targets: [&#xA;        .target(name: &#34;Foo&#34;, dependencies: [&#34;Fakery&#34;]&#xA;    ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use of the Swift Package Manager requires Swift &amp;gt;=5.3.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://github.com/hyperoslo/playbook/raw/master/GIT_AND_GITHUB.md&#34;&gt;playbook&lt;/a&gt; for guidelines on contributing.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Vadym Markov, &lt;a href=&#34;mailto:markov.vadym@gmail.com&#34;&gt;markov.vadym@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fakery&lt;/strong&gt; is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;</summary>
  </entry>
</feed>