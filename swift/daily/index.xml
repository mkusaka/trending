<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-07T01:32:53Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tevelee/SwiftUI-Flow</title>
    <updated>2024-05-07T01:32:53Z</updated>
    <id>tag:github.com,2024-05-07:/tevelee/SwiftUI-Flow</id>
    <link href="https://github.com/tevelee/SwiftUI-Flow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flow Layout implemented in SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SwiftUI Flow Layout&lt;/h1&gt; &#xA;&lt;p&gt;Introduces &lt;code&gt;HFlow&lt;/code&gt; and &lt;code&gt;VFlow&lt;/code&gt; similar to &lt;code&gt;HStack&lt;/code&gt; and &lt;code&gt;VStack&lt;/code&gt;. Arranges views in lines and cuts new lines accordingly (if elements don&#39;t fit the bounding space).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Spacing (separate item spacing and line spacing)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Alignment&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Conforms to &lt;code&gt;Layout&lt;/code&gt; protocol&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports Right-to-Left layout direction&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Sample SwiftUI View to tweak parameters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;HFlow&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct Colors: View {&#xA;    let colors: [Color] = [&#xA;        .blue,&#xA;        .orange,&#xA;        .green,&#xA;        .yellow,&#xA;        .brown,&#xA;        .mint,&#xA;        .indigo,&#xA;        .cyan,&#xA;        .gray,&#xA;        .pink&#xA;    ]&#xA;&#xA;    var body: some View {&#xA;        HFlow {&#xA;            ForEach(colors + colors, id: \.description) { color in&#xA;                RoundedRectangle(cornerRadius: 10)&#xA;                    .fill(color.gradient)&#xA;                    .frame(width: Double.random(in: 40...60), height: 50)&#xA;            }&#xA;        }&#xA;        .frame(maxWidth: 300)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tevelee/SwiftUI-Flow/main/Resources/hflow.png&#34; alt=&#34;HFlow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;VFlow&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;VFlow {&#xA;    ForEach(colors, id: \.description) { color in&#xA;        RoundedRectangle(cornerRadius: 10)&#xA;            .fill(color.gradient)&#xA;            .frame(width: 50, height: Double.random(in: 40...60))&#xA;    }&#xA;}&#xA;.frame(maxHeight: 300)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tevelee/SwiftUI-Flow/main/Resources/vflow.png&#34; alt=&#34;VFlow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Alignment&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;HFlow(alignment: .top) {&#xA;    ForEach(colors, id: \.description) { color in&#xA;        RoundedRectangle(cornerRadius: 10)&#xA;            .fill(color.gradient)&#xA;            .frame(width: 50, height: Double.random(in: 40...60))&#xA;    }&#xA;}&#xA;.frame(maxWidth: 300)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tevelee/SwiftUI-Flow/main/Resources/hflow-top.png&#34; alt=&#34;VFlow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Spacing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;HFlow(itemSpacing: 4, rowSpacing: 20) {&#xA;    ForEach(colors, id: \.description) { color in&#xA;        RoundedRectangle(cornerRadius: 10)&#xA;            .fill(color.gradient)&#xA;            .frame(width: 50, height: 50)&#xA;    }&#xA;}&#xA;.frame(maxWidth: 300)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tevelee/SwiftUI-Flow/main/Resources/hflow-spacing.png&#34; alt=&#34;VFlow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;RTL&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;HFlow {&#xA;    ForEach(colors, id: \.description) { color in&#xA;        RoundedRectangle(cornerRadius: 10)&#xA;            .fill(color.gradient)&#xA;            .frame(width: Double.random(in: 40...60), height: 50)&#xA;    }&#xA;}&#xA;.frame(maxWidth: 300)&#xA;.environment(\.layoutDirection, .rightToLeft)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tevelee/SwiftUI-Flow/main/Resources/hflow-rtl.png&#34; alt=&#34;VFlow&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sebjvidal/Apple-Music-UI-Demo</title>
    <updated>2024-05-07T01:32:53Z</updated>
    <id>tag:github.com,2024-05-07:/sebjvidal/Apple-Music-UI-Demo</id>
    <link href="https://github.com/sebjvidal/Apple-Music-UI-Demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>