<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-02T01:46:14Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shapehq/tartelet</title>
    <updated>2023-04-02T01:46:14Z</updated>
    <id>tag:github.com,2023-04-02:/shapehq/tartelet</id>
    <link href="https://github.com/shapehq/tartelet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚙️💻 A macOS app that makes it a breeze to manage multiple GitHub Actions runners in ephemeral virtual machines on a single host machine. The benefits are that runners can run in parallel, and each job runs in an isolated environment.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shapehq/tartelet/main/artwork.jpg&#34; alt=&#34;Hero artwork&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;👋 Welcome to Tartelet - a macOS app that launches self-hosted GitHub Actions runners in virtual machines using &lt;a href=&#34;https://github.com/cirruslabs/tart&#34;&gt;Tart&lt;/a&gt;.&lt;/h2&gt; &#xA;&lt;p&gt;Tartelet makes it a breeze to manage up to two GitHub Actions runners in ephemeral virtual machines on a single host machine. The benefits are that runners can run in parallel and each job runs in an isolated environment that is recreated after each GitHub Actions job has finished.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet#-getting-started&#34;&gt;🚀 Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet#-how-does-it-work&#34;&gt;👨‍🔧 How does it work?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet#-how-is-the-performance&#34;&gt;🏎 How is the performance?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet#-how-can-i-contribute&#34;&gt;👩‍💻 How can I contribute?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet#-why-is-it-named-tartelet&#34;&gt;🤨 Why is it named Tartelet?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet#-acknowledgements&#34;&gt;🙏 Acknowledgements&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the following articles in &lt;a href=&#34;https://github.com/shapehq/tartelet/wiki&#34;&gt;the wiki&lt;/a&gt; to get started with Tartelet.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet/wiki/Installing-Tartelet&#34;&gt;Installing Tartelet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet/wiki/Configuring-Tartelet&#34;&gt;Configuring Tartelet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shapehq/tartelet/wiki/Starting-the-Virtual-Machines&#34;&gt;Starting the Virtual Machines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👨‍🔧 How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shapehq/tartelet/main/screenshot.jpg&#34; alt=&#34;Screenshot of Tartelet running two virtual machines&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tartelet uses Tart for managing the virtual machines and Tart which in turn uses Apple&#39;s &lt;a href=&#34;https://developer.apple.com/documentation/virtualization&#34;&gt;Apple&#39;s Virtualization framework&lt;/a&gt;. The lifecycle of a GitHub Actions runner managed by Tartelet is as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Tartelet uses Tart to clone a virtual machine.&lt;/li&gt; &#xA; &lt;li&gt;The virtual machine is booted.&lt;/li&gt; &#xA; &lt;li&gt;After the machine is booted, a setup script is being run. The script downloads the newest version of &lt;a href=&#34;https://docs.github.com/en/actions/hosting-your-own-runners/adding-self-hosted-runners&#34;&gt;GitHub&#39;s runner application&lt;/a&gt; and registers the runner on the GitHub organization.&lt;/li&gt; &#xA; &lt;li&gt;The runner listens for a job and executes it.&lt;/li&gt; &#xA; &lt;li&gt;After executing the job, the runner automatically removes itself from the GitHub organization.&lt;/li&gt; &#xA; &lt;li&gt;The virtual machine is shutdown.&lt;/li&gt; &#xA; &lt;li&gt;Tartelet uses Tart to delete the virtual machine.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After the last step the process starts over.&lt;/p&gt; &#xA;&lt;h2&gt;🏎 How is the performance?&lt;/h2&gt; &#xA;&lt;p&gt;The performance depends on the hardware that the app is running on. When testing on a Mac mini M1 from 2020 with 16 GB memory, we found that our jobs run 3 - 4 times faster than on GitHub&#39;s runners.&lt;/p&gt; &#xA;&lt;p&gt;We found that our jobs run about 12% slower when running two virtual machines in parallel compared to running a single virtual machine. We find this performance cost negligible as running two virtual machines significantly increases our throughput at a low monetary cost.&lt;/p&gt; &#xA;&lt;p&gt;This means that Tartelet can run two virtual machines at once. This the maximum number of virtual machines that Apple’s Virtualization framework allows us to run at once.&lt;/p&gt; &#xA;&lt;p&gt;After a job has finished, the virtual machine that ran the job is shut down and destroyed, and a new virtual machine is created and booted. This process takes about 25 - 30 seconds. However, that overhead is insignificant in most cases as Tartelet creates a new virtual machine after each job has finished. This means that a new virtual machine and its GitHub Actions runner are ready to process the next job. Unless there are more jobs queued on GitHub than the number of available virtual machines, the overhead of creating and booting a virtual machine becomes negligible.&lt;/p&gt; &#xA;&lt;p&gt;These numbers were last updated in January/February 2023.&lt;/p&gt; &#xA;&lt;h2&gt;👩‍💻 How can I contribute?&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests with bugfixes and new features are much appreciated. We are happy to review PRs and merge them once they are ready, as long as they contain changes that fit within the vision of Tartelet.&lt;/p&gt; &#xA;&lt;p&gt;Clone the repository to get started working on the project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:shapehq/tartelet.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generating a Project File with XcodeGen&lt;/h3&gt; &#xA;&lt;p&gt;After cloning the repository you will notice that the project does not contain a .xcodeproj file. This should be generated using &lt;a href=&#34;https://github.com/yonaskolb/XcodeGen&#34;&gt;XcodeGen&lt;/a&gt;. Install XcodeGen using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; by running the following command in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install xcodegen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing XcodeGen the project file can be generated by running the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xcodegen generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generating Resource Constants with SwiftGen&lt;/h3&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/SwiftGen/SwiftGen&#34;&gt;SwiftGen&lt;/a&gt; to generate constants for images, colors, and localizations. Install SwiftGen using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; by running the following command in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install swiftgen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Constants for images, colors, and localizations are then generated by running the following command in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;swiftgen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;swiftgen.yml&lt;/code&gt; file at the root of the repository describes how constants are generated.&lt;/p&gt; &#xA;&lt;h3&gt;Linting the Codebase with SwiftLint&lt;/h3&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/realm/SwiftLint&#34;&gt;SwiftLint&lt;/a&gt; to ensure uniformity in the code. Install SwiftLint using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; by running the following command in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install swiftlint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🤨 Why is it named Tartelet?&lt;/h2&gt; &#xA;&lt;p&gt;The app is named Tartelet because it builds upon &lt;a href=&#34;https://tart.run&#34;&gt;Tart&lt;/a&gt;, a source-available CLI for managing macOS virtual machines. Tartelet makes it easy to run multiple virtual machines using Tart. The Danish word for &#34;easy&#34; is &#34;let&#34;. &#34;Tart&#34; + &#34;e&#34; + &#34;let&#34; = &#34;Tartelet&#34; and &lt;a href=&#34;https://www.valdemarsro.dk/tarteletter-hoens-asparges/&#34;&gt;a &#34;tartelet&#34; is a traditional Danish food.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🙏 Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cirruslabs/tart&#34;&gt;Tart&lt;/a&gt; does all the heavy-lifting of creating, cloning, and running virtual machines.&lt;/li&gt; &#xA; &lt;li&gt;Tartelet is heavily inspired by &lt;a href=&#34;https://github.com/traderepublic/Cilicon&#34;&gt;Cilicon&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Tartelet is built with ❤️ by &lt;a href=&#34;https://shape.dk&#34;&gt;Shape&lt;/a&gt; in Denmark. Oh, and &lt;a href=&#34;https://careers.shape.dk&#34;&gt;we are hiring&lt;/a&gt; 🤗&lt;/p&gt;</summary>
  </entry>
</feed>