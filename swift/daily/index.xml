<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-26T01:46:45Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aheze/Setting</title>
    <updated>2023-02-26T01:46:45Z</updated>
    <id>tag:github.com,2023-02-26:/aheze/Setting</id>
    <link href="https://github.com/aheze/Setting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Compose beautiful preference panels.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/Top.png&#34; width=&#34;300&#34; alt=&#34;Header image&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Compose beautiful preference panels.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple but powerful syntax (powered by &lt;a href=&#34;https://www.hackingwithswift.com/swift/5.4/result-builders&#34;&gt;result builders&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Create nested pages and groups.&lt;/li&gt; &#xA; &lt;li&gt;Fully searchable.&lt;/li&gt; &#xA; &lt;li&gt;Native integration with SwiftUI and AppStorage.&lt;/li&gt; &#xA; &lt;li&gt;Comes with pre-made components: Toggle, Button, Slider, etc...&lt;/li&gt; &#xA; &lt;li&gt;Style components with native SwiftUI modifiers.&lt;/li&gt; &#xA; &lt;li&gt;Show and hide components dynamically.&lt;/li&gt; &#xA; &lt;li&gt;Add your own custom SwiftUI views.&lt;/li&gt; &#xA; &lt;li&gt;Works on iOS and macOS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/Setting.png&#34; alt=&#34;Screenshots of views created with Setting&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/Details.png&#34; alt=&#34;Screenshots of a nested page and search results&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Setting is available via the &lt;a href=&#34;https://developer.apple.com/documentation/swift_packages/adding_package_dependencies_to_your_app&#34;&gt;Swift Package Manager&lt;/a&gt;. Requires iOS 15+ or macOS Monterey and up.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/aheze/Setting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import Setting&#xA;import SwiftUI&#xA;&#xA;struct PlaygroundView: View {&#xA;    /// Setting supports `@State`, `@AppStorage`, `@Published`, and more!&#xA;    @AppStorage(&#34;isOn&#34;) var isOn = true&#xA;&#xA;    var body: some View {&#xA;        /// Start things off with `SettingStack`.&#xA;        SettingStack {&#xA;            /// This is the main settings page.&#xA;            SettingPage(title: &#34;Playground&#34;) {&#xA;                /// Use groups to group components together.&#xA;                SettingGroup(header: &#34;Main Group&#34;) {&#xA;                    /// Use any of the pre-made components...&#xA;                    SettingToggle(title: &#34;This value is persisted!&#34;, isOn: $isOn)&#xA;&#xA;                    /// ...or define your own ones!&#xA;                    SettingCustomView {&#xA;                        Image(&#34;Logo&#34;)&#xA;                            .resizable()&#xA;                            .aspectRatio(contentMode: .fit)&#xA;                            .frame(width: 160)&#xA;                            .padding(20)&#xA;                    }&#xA;&#xA;                    /// Nest `SettingPage` inside other `SettingPage`s!&#xA;                    SettingPage(title: &#34;Advanced Settings&#34;) {&#xA;                        SettingText(title: &#34;I show up on the next page!&#34;)&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/Customizable.png&#34; alt=&#34;The result, a generated settings page. Clicking on &amp;quot;Advanced Settings&amp;quot; presents a new page.&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;View more examples in the &lt;a href=&#34;https://github.com/aheze/Setting/tree/main/Example/SettingExample&#34;&gt;example app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct PlaygroundView: View {&#xA;    var body: some View {&#xA;        SettingStack {&#xA;            SettingPage(title: &#34;Playground&#34;) {&#xA;                SettingGroup {&#xA;                    SettingText(title: &#34;Hello!&#34;)&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/1.png&#34; alt=&#34;Settings view rendered with &amp;quot;Hello!&amp;quot; label&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;SettingStack {&#xA;    SettingPage(title: &#34;Playground&#34;) {&#xA;        SettingGroup {&#xA;            SettingText(title: &#34;Hello!&#34;)&#xA;        }&#xA;&#xA;        SettingGroup {&#xA;            SettingPage(title: &#34;First Page&#34;) {}&#xA;                .previewIcon(&#34;star&#34;)&#xA;&#xA;            SettingPage(title: &#34;Second Page&#34;) {}&#xA;                .previewIcon(&#34;sparkles&#34;)&#xA;&#xA;            SettingPage(title: &#34;Third Page&#34;) {}&#xA;                .previewIcon(&#34;leaf.fill&#34;)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/2.png&#34; alt=&#34;Settings view rendered with 3 row links&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct PlaygroundView: View {&#xA;    @AppStorage(&#34;isOn&#34;) var isOn = true&#xA;    @AppStorage(&#34;value&#34;) var value = Double(5)&#xA;&#xA;    var body: some View {&#xA;        SettingStack {&#xA;            SettingPage(title: &#34;Playground&#34;) {&#xA;                SettingGroup {&#xA;                    SettingToggle(title: &#34;On&#34;, isOn: $isOn)&#xA;                }&#xA;&#xA;                SettingGroup(header: &#34;Slider&#34;) {&#xA;                    SettingSlider(&#xA;                        value: $value,&#xA;                        range: 0 ... 10&#xA;                    )&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/3.png&#34; alt=&#34;Settings view rendered with toggle and slider&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct PlaygroundView: View {&#xA;    @AppStorage(&#34;index&#34;) var index = 0&#xA;&#xA;    var body: some View {&#xA;        SettingStack {&#xA;            SettingPage(title: &#34;Playground&#34;) {&#xA;                SettingGroup {&#xA;                    SettingPicker(&#xA;                        title: &#34;Picker&#34;,&#xA;                        choices: [&#34;A&#34;, &#34;B&#34;, &#34;C&#34;, &#34;D&#34;],&#xA;                        selectedIndex: $index&#xA;                    )&#xA;                    SettingPicker(&#xA;                        title: &#34;Picker with menu&#34;,&#xA;                        choices: [&#34;A&#34;, &#34;B&#34;, &#34;C&#34;, &#34;D&#34;],&#xA;                        selectedIndex: $index,&#xA;                        choicesConfiguration: .init(&#xA;                            pickerDisplayMode: .menu&#xA;                        )&#xA;                    )&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/4.png&#34; alt=&#34;Settings view rendered with picker&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;SettingStack {&#xA;    SettingPage(title: &#34;Playground&#34;) {&#xA;        SettingCustomView {&#xA;            Color.blue&#xA;                .opacity(0.1)&#xA;                .cornerRadius(12)&#xA;                .overlay {&#xA;                    Text(&#34;Put anything here!&#34;)&#xA;                        .foregroundColor(.blue)&#xA;                        .font(.title.bold())&#xA;                }&#xA;                .frame(height: 150)&#xA;                .padding(.horizontal, 16)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/5.png&#34; alt=&#34;Settings view rendered with &amp;quot;Put anything here!&amp;quot; label&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If multiple components have the same title, use the &lt;code&gt;id&lt;/code&gt; parameter to make sure everything gets rendered correctly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;SettingText(id: &#34;Announcement 1&#34;, title: &#34;Hello!&#34;)&#xA;SettingText(id: &#34;Announcement 2&#34;, title: &#34;Hello!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Setting comes with &lt;code&gt;if-else&lt;/code&gt; support!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;SettingToggle(title: &#34;Turn on&#34;, isOn: $isOn)&#xA;&#xA;if isOn {&#xA;    SettingText(&#34;I&#39;m turned on!&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wrap components in &lt;code&gt;SettingCustomView&lt;/code&gt; to style them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;SettingCustomView {&#xA;    SettingText(title: &#34;I&#39;m bold!&#34;)&#xA;        .bold()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Need to store custom structs in &lt;code&gt;AppStorage&lt;/code&gt;? Check out @IanKeen&#39;s awesome &lt;a href=&#34;https://gist.github.com/IanKeen/4d29b48519dca125b21675eeb7623d60&#34;&gt;gist&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can pass in a custom &lt;code&gt;SettingViewModel&lt;/code&gt; instance for finer control.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct PlaygroundView: View {&#xA;    @StateObject var settingViewModel = SettingViewModel()&#xA;&#xA;    var body: some View {&#xA;        SettingStack(settingViewModel: settingViewModel) {&#xA;            SettingPage(title: &#34;Playground&#34;) {&#xA;                SettingGroup {&#xA;                    SettingText(title: &#34;Welcome to Setting!&#34;)&#xA;                }&#xA;            }&#xA;        } customNoResultsView: {&#xA;            VStack(spacing: 20) {&#xA;                Image(systemName: &#34;xmark&#34;)&#xA;                    .font(.largeTitle)&#xA;&#xA;                Text(&#34;No results for &#39;\(settingViewModel.searchText)&#39;&#34;)&#xA;            }&#xA;            .frame(maxWidth: .infinity, maxHeight: .infinity)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aheze/Setting/main/Assets/NoResults.png&#34; alt=&#34;Settings view rendered with &amp;quot;Put anything here!&amp;quot; label&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Author&lt;/th&gt; &#xA;   &lt;th&gt;Contributing&lt;/th&gt; &#xA;   &lt;th&gt;Need Help?&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Setting is made by &lt;a href=&#34;https://github.com/aheze&#34;&gt;aheze&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;All contributions are welcome. Just &lt;a href=&#34;https://github.com/aheze/Setting/fork&#34;&gt;fork&lt;/a&gt; the repo, then make a pull request.&lt;/td&gt; &#xA;   &lt;td&gt;Open an &lt;a href=&#34;https://github.com/aheze/Setting/issues&#34;&gt;issue&lt;/a&gt; or join the &lt;a href=&#34;https://discord.com/invite/Pmq8fYcus2&#34;&gt;Discord server&lt;/a&gt;. You can also ping me on &lt;a href=&#34;https://twitter.com/aheze0&#34;&gt;Twitter&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;MIT License&#xA;&#xA;Copyright (c) 2023 A. Zheng&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>