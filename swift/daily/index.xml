<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-27T01:42:56Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>airbnb/epoxy-ios</title>
    <updated>2023-09-27T01:42:56Z</updated>
    <id>tag:github.com,2023-09-27:/airbnb/epoxy-ios</id>
    <link href="https://github.com/airbnb/epoxy-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Epoxy is a suite of declarative UI APIs for building UIKit applications in Swift&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;300&#34; alt=&#34;Epoxy logo&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/logo.svg?sanitize=true&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/airbnb/epoxy-ios/actions?query=branch%3Amaster+workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/airbnb/epoxy-ios/workflows/CI/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apple/swift-package-manager&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SPM-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Swift Package Manager compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/airbnb/epoxy-ios&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fairbnb%2Fepoxy-ios%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/airbnb/epoxy-ios&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fairbnb%2Fepoxy-ios%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;Swift Versions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Epoxy is a suite of&amp;nbsp;declarative UI APIs for building &lt;a href=&#34;https://developer.apple.com/documentation/uikit&#34;&gt;UIKit&lt;/a&gt; applications in Swift. Epoxy is inspired and influenced by the wonderful &lt;a href=&#34;https://github.com/airbnb/epoxy&#34;&gt;Epoxy framework on Android&lt;/a&gt;, as well as other declarative UI frameworks in Swift such as &lt;a href=&#34;https://developer.apple.com/documentation/swiftui&#34;&gt;SwiftUI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Epoxy was developed at &lt;a href=&#34;https://www.airbnb.com/&#34;&gt;Airbnb&lt;/a&gt; and powers thousands of screens in apps that are shipped to millions of users. It has been developed and refined for years by &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/graphs/contributors&#34;&gt;dozens of contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Below are a few sample screens from the Airbnb app that we&#39;ve built using Epoxy. Our usages of Epoxy span from our simplest forms and static screens to our most advanced and dynamic features.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Home Details&lt;/th&gt; &#xA;   &lt;th&gt;Home Photos&lt;/th&gt; &#xA;   &lt;th&gt;Messaging&lt;/th&gt; &#xA;   &lt;th&gt;Registration&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/home_details.png&#34; alt=&#34;Home Details&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/home_photos.png&#34; alt=&#34;Home Photos&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/messaging.png&#34; alt=&#34;Messaging&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/registration.png&#34; alt=&#34;Registration&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#cocoapods&#34;&gt;CocoaPods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#swift-package-manager-spm&#34;&gt;Swift Package Manager (SPM)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#modules&#34;&gt;Modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#documentation-and-tutorials&#34;&gt;Documentation and tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#epoxycollectionview&#34;&gt;EpoxyCollectionView&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#epoxybars&#34;&gt;EpoxyBars&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#epoxynavigationcontroller&#34;&gt;EpoxyNavigationController&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#epoxypresentations&#34;&gt;EpoxyPresentations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#epoxylayoutgroups&#34;&gt;EpoxyLayoutGroups&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Epoxy can be installed using &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#CocoaPods&#34;&gt;CocoaPods&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#Swift-Package-Manager-(SPM)&#34;&gt;Swift Package Manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;To get started with Epoxy using &lt;a href=&#34;https://cocoapods.org&#34;&gt;Cocoapods&lt;/a&gt; add the following to your &lt;code&gt;Podfile&lt;/code&gt; and then follow the &lt;a href=&#34;https://guides.cocoapods.org/using/using-cocoapods.html&#34;&gt;integration instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Epoxy&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Epoxy is separated into &lt;a href=&#34;https://guides.cocoapods.org/syntax/podspec.html&#34;&gt;podspecs&lt;/a&gt; for each &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#modules&#34;&gt;module&lt;/a&gt; so you only have to include what you need.&lt;/p&gt; &#xA;&lt;h3&gt;Swift Package Manager (SPM)&lt;/h3&gt; &#xA;&lt;p&gt;To install Epoxy using &lt;a href=&#34;https://github.com/apple/swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt; you can follow the &lt;a href=&#34;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&#34;&gt;tutorial published by Apple&lt;/a&gt; using the URL for the Epoxy repo with the current version:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In Xcode, select “File” → “Swift Packages” → “Add Package Dependency”&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;a href=&#34;https://github.com/airbnb/epoxy-ios.git&#34;&gt;https://github.com/airbnb/epoxy-ios.git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Epoxy is separated &lt;a href=&#34;https://swift.org/package-manager/#products&#34;&gt;library products&lt;/a&gt; for each &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#modules&#34;&gt;module&lt;/a&gt; so you only have to include what you need.&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;Epoxy has a modular architecture so you only have to include what you need for your use case:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/airbnb/epoxy-ios/raw/master/Sources/Epoxy/Exports.swift&#34;&gt;&lt;code&gt;Epoxy&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Includes all of the below modules in a single import statement&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#EpoxyCollectionView&#34;&gt;&lt;code&gt;EpoxyCollectionView&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Declarative API for driving the content of a &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uicollectionview&#34;&gt;&lt;code&gt;UICollectionView&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#EpoxyNavigationController&#34;&gt;&lt;code&gt;EpoxyNavigationController&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Declarative API for driving the navigation stack of a &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uinavigationcontroller&#34;&gt;&lt;code&gt;UINavigationController&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#EpoxyPresentations&#34;&gt;&lt;code&gt;EpoxyPresentations&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Declarative API for driving the modal presentations of a &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uiviewcontroller&#34;&gt;&lt;code&gt;UIViewController&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#EpoxyBars&#34;&gt;&lt;code&gt;EpoxyBars&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Declarative API for adding fixed top/bottom bar stacks to a &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uiviewcontroller&#34;&gt;&lt;code&gt;UIViewController&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/#EpoxyLayoutGroups&#34;&gt;&lt;code&gt;EpoxyLayoutGroups&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Declarative API for building composable layouts in UIKit with a syntax similar to SwiftUI&#39;s stack APIs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/EpoxyCore&#34;&gt;&lt;code&gt;EpoxyCore&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Foundational APIs that are used to build all Epoxy declarative UI APIs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation and tutorials&lt;/h2&gt; &#xA;&lt;p&gt;For full documentation and step-by-step tutorials please check the &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki&#34;&gt;wiki&lt;/a&gt;. For type-level documentation, see the &lt;a href=&#34;https://swiftpackageindex.com/airbnb/epoxy-ios/master/documentation/epoxycore&#34;&gt;Epoxy DocC documentation&lt;/a&gt; hosted on the &lt;a href=&#34;https://swiftpackageindex.com/&#34;&gt;Swift Package Index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s also a full sample app with a lot of examples that you can either run via the &lt;code&gt;EpoxyExample&lt;/code&gt; scheme in &lt;code&gt;Epoxy.xcworkspace&lt;/code&gt; or browse its &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/tree/master/Example&#34;&gt;source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you still have questions, feel free to create a new &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/issues&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;EpoxyCollectionView&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;EpoxyCollectionView&lt;/code&gt; provides a declarative API for driving the content of a &lt;code&gt;UICollectionView&lt;/code&gt;. &lt;code&gt;CollectionViewController&lt;/code&gt; is a subclassable &lt;code&gt;UIViewController&lt;/code&gt; that lets you easily spin up a &lt;code&gt;UICollectionView&lt;/code&gt;-backed view controller with a declarative API.&lt;/p&gt; &#xA;&lt;p&gt;The following code samples will render a single cell in a &lt;code&gt;UICollectionView&lt;/code&gt; with a &lt;code&gt;TextRow&lt;/code&gt; component rendered in that cell. &lt;code&gt;TextRow&lt;/code&gt; is a simple &lt;code&gt;UIView&lt;/code&gt; containing two labels that conforms to the &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/EpoxyCore#views&#34;&gt;&lt;code&gt;EpoxyableView&lt;/code&gt;&lt;/a&gt; protocol.&lt;/p&gt; &#xA;&lt;p&gt;You can either instantiate a &lt;code&gt;CollectionViewController&lt;/code&gt; instance directly with sections, e.g. this view controller with a selectable row:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Source &lt;/td&gt; &#xA;   &lt;td&gt; Result &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;enum DataID {&#xA;  case row&#xA;}&#xA;&#xA;let viewController = CollectionViewController(&#xA;  layout: UICollectionViewCompositionalLayout&#xA;    .list(using: .init(appearance: .plain)),&#xA;  items: {&#xA;    TextRow.itemModel(&#xA;      dataID: DataID.row,&#xA;      content: .init(title: &#34;Tap me!&#34;),&#xA;      style: .small)&#xA;      .didSelect { _ in&#xA;        // Handle selection&#xA;      }&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250&#34; alt=&#34;Screenshot&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/tap_me_example.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Or you can subclass &lt;code&gt;CollectionViewController&lt;/code&gt; for more advanced scenarios, e.g. this view controller that keeps track of a running count:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Source &lt;/td&gt; &#xA;   &lt;td&gt; Result &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class CounterViewController: CollectionViewController {&#xA;  init() {&#xA;    let layout = UICollectionViewCompositionalLayout&#xA;      .list(using: .init(appearance: .plain))&#xA;    super.init(layout: layout)&#xA;    setItems(items, animated: false)&#xA;  }&#xA;&#xA;  enum DataID {&#xA;    case row&#xA;  }&#xA;&#xA;  var count = 0 {&#xA;    didSet {&#xA;      setItems(items, animated: true)&#xA;    }&#xA;  }&#xA;&#xA;  @ItemModelBuilder&#xA;  var items: [ItemModeling] {&#xA;    TextRow.itemModel(&#xA;      dataID: DataID.row,&#xA;      content: .init(&#xA;        title: &#34;Count \(count)&#34;,&#xA;        body: &#34;Tap to increment&#34;),&#xA;      style: .large)&#xA;      .didSelect { [weak self] _ in&#xA;        self?.count += 1&#xA;      }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250&#34; alt=&#34;Screenshot&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/counter_example.gif&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can learn more about &lt;code&gt;EpoxyCollectionView&lt;/code&gt; in its &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/EpoxyCollectionView&#34;&gt;wiki entry&lt;/a&gt;, or by browsing the &lt;a href=&#34;https://swiftpackageindex.com/airbnb/epoxy-ios/master/documentation/epoxycollectionview&#34;&gt;code documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;EpoxyBars&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;EpoxyBars&lt;/code&gt; provides a declarative API for rendering fixed top, fixed bottom, or &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uiresponder/1621119-inputaccessoryview&#34;&gt;input accessory&lt;/a&gt; bar stacks in a &lt;code&gt;UIViewController&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following code example will render a &lt;code&gt;ButtonRow&lt;/code&gt; component fixed to the bottom of the &lt;code&gt;UIViewController&lt;/code&gt;&#39;s view. &lt;code&gt;ButtonRow&lt;/code&gt; is a simple &lt;code&gt;UIView&lt;/code&gt; component that contains a single &lt;code&gt;UIButton&lt;/code&gt; constrained to the margins of the superview that conforms to the &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/EpoxyCore#views&#34;&gt;&lt;code&gt;EpoxyableView&lt;/code&gt;&lt;/a&gt; protocol:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Source &lt;/td&gt; &#xA;   &lt;td&gt; Result &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class BottomButtonViewController: UIViewController {&#xA;  override func viewDidLoad() {&#xA;    super.viewDidLoad()&#xA;    bottomBarInstaller.install()&#xA;  }&#xA;&#xA;  lazy var bottomBarInstaller = BottomBarInstaller(&#xA;    viewController: self,&#xA;    bars: bars)&#xA;&#xA;  @BarModelBuilder&#xA;  var bars: [BarModeling] {&#xA;    ButtonRow.barModel(&#xA;      content: .init(text: &#34;Click me!&#34;),&#xA;      behaviors: .init(didTap: {&#xA;        // Handle button selection&#xA;      }))&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250&#34; alt=&#34;Screenshot&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/bottom_button_example.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can learn more about &lt;code&gt;EpoxyBars&lt;/code&gt; in its &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/EpoxyBars&#34;&gt;wiki entry&lt;/a&gt;, or by browsing the &lt;a href=&#34;https://swiftpackageindex.com/airbnb/epoxy-ios/master/documentation/epoxybars&#34;&gt;code documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;EpoxyNavigationController&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;EpoxyNavigationController&lt;/code&gt; provides a declarative API for driving the navigation stack of a &lt;code&gt;UINavigationController&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following code example shows how you can use this to easily drive a feature that has a flow of multiple view controllers:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Source &lt;/td&gt; &#xA;   &lt;td&gt; Result &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class FormNavigationController: NavigationController {&#xA;  init() {&#xA;    super.init()&#xA;    setStack(stack, animated: false)&#xA;  }&#xA;&#xA;  enum DataID {&#xA;    case step1, step2&#xA;  }&#xA;&#xA;  var showStep2 = false {&#xA;    didSet {&#xA;      setStack(stack, animated: true)&#xA;    }&#xA;  }&#xA;&#xA;  @NavigationModelBuilder&#xA;  var stack: [NavigationModel] {&#xA;    .root(dataID: DataID.step1) { [weak self] in&#xA;      Step1ViewController(didTapNext: {&#xA;        self?.showStep2 = true&#xA;      })&#xA;    }&#xA;&#xA;    if showStep2 {&#xA;      NavigationModel(&#xA;        dataID: DataID.step2,&#xA;        makeViewController: {&#xA;          Step2ViewController(didTapNext: {&#xA;            // Navigate away from this step.&#xA;          })&#xA;        },&#xA;        remove: { [weak self] in&#xA;          self?.showStep2 = false&#xA;        })&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250&#34; alt=&#34;Screenshot&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/form_navigation_example.gif&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can learn more about &lt;code&gt;EpoxyNavigationController&lt;/code&gt; in its &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/EpoxyNavigationController&#34;&gt;wiki entry&lt;/a&gt;, or by browsing the &lt;a href=&#34;https://swiftpackageindex.com/airbnb/epoxy-ios/master/documentation/epoxynavigationcontroller&#34;&gt;code documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;EpoxyPresentations&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;EpoxyPresentations&lt;/code&gt; provides a declarative API for driving the modal presentation of a &lt;code&gt;UIViewController&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following code example shows how you can use this to easily drive a feature that shows a modal when it first appears:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Source &lt;/td&gt; &#xA;   &lt;td&gt; Result &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class PresentationViewController: UIViewController {&#xA;  override func viewDidAppear(_ animated: Bool) {&#xA;    super.viewDidAppear(animated)&#xA;    setPresentation(presentation, animated: true)&#xA;  }&#xA;&#xA;  enum DataID {&#xA;    case detail&#xA;  }&#xA;&#xA;  var showDetail = true {&#xA;    didSet {&#xA;      setPresentation(presentation, animated: true)&#xA;    }&#xA;  }&#xA;&#xA;  @PresentationModelBuilder&#xA;  var presentation: PresentationModel? {&#xA;    if showDetail {&#xA;      PresentationModel(&#xA;        dataID: DataID.detail,&#xA;        presentation: .system,&#xA;        makeViewController: { [weak self] in&#xA;          DetailViewController(didTapDismiss: {&#xA;            self?.showDetail = false&#xA;          })&#xA;        },&#xA;        dismiss: { [weak self] in&#xA;          self?.showDetail = false&#xA;        })&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250&#34; alt=&#34;Screenshot&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/modal_example.gif&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can learn more about &lt;code&gt;EpoxyPresentations&lt;/code&gt; in its &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/EpoxyPresentations&#34;&gt;wiki entry&lt;/a&gt;, or by browsing the &lt;a href=&#34;https://swiftpackageindex.com/airbnb/epoxy-ios/master/documentation/epoxypresentations&#34;&gt;code documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;EpoxyLayoutGroups&lt;/h2&gt; &#xA;&lt;p&gt;LayoutGroups are UIKit &lt;a href=&#34;https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/index.html&#34;&gt;Auto Layout&lt;/a&gt; containers inspired by SwiftUI&#39;s &lt;a href=&#34;https://developer.apple.com/documentation/swiftui/hstack&#34;&gt;&lt;code&gt;HStack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://developer.apple.com/documentation/swiftui/vstack&#34;&gt;&lt;code&gt;VStack&lt;/code&gt;&lt;/a&gt; that allow you to easily compose UIKit elements into horizontal and vertical groups.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;VGroup&lt;/code&gt; allows you to group components together vertically to create stacked components like this:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Source &lt;/td&gt; &#xA;   &lt;td&gt; Result &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Set of dataIDs to have consistent&#xA;// and unique IDs&#xA;enum DataID {&#xA;  case title&#xA;  case subtitle&#xA;  case action&#xA;}&#xA;&#xA;// Groups are created declaratively&#xA;// just like Epoxy ItemModels&#xA;let group = VGroup(&#xA;  alignment: .leading,&#xA;  spacing: 8)&#xA;{&#xA;  Label.groupItem(&#xA;    dataID: DataID.title,&#xA;    content: &#34;Title text&#34;,&#xA;    style: .title)&#xA;  Label.groupItem(&#xA;    dataID: DataID.subtitle,&#xA;    content: &#34;Subtitle text&#34;,&#xA;    style: .subtitle)&#xA;  Button.groupItem(&#xA;    dataID: DataID.action,&#xA;    content: &#34;Perform action&#34;,&#xA;    behaviors: .init { button in&#xA;      print(&#34;Button tapped! \(button)&#34;)&#xA;    },&#xA;    style: .standard)&#xA;}&#xA;&#xA;// install your group in a view&#xA;group.install(in: view)&#xA;&#xA;// constrain the group like you&#xA;// would a normal subview&#xA;group.constrainToMargins()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img alt=&#34;ActionRow screenshot&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/ActionRow.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;As you can see, this is incredibly similar to the other APIs used in Epoxy. One important thing to note is that &lt;code&gt;install(in: view)&lt;/code&gt; call at the bottom. Both &lt;code&gt;HGroup&lt;/code&gt; and &lt;code&gt;VGroup&lt;/code&gt; are written using &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uilayoutguide&#34;&gt;&lt;code&gt;UILayoutGuide&lt;/code&gt;&lt;/a&gt; which prevents having large nested view hierarchies. To account for this, we’ve added this &lt;code&gt;install&lt;/code&gt; method to prevent the user from having to add subviews and the layout guide manually.&lt;/p&gt; &#xA;&lt;p&gt;Using &lt;code&gt;HGroup&lt;/code&gt; is almost exactly the same as &lt;code&gt;VGroup&lt;/code&gt; but the components are now horizontally laid out instead of vertically:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Source &lt;/td&gt; &#xA;   &lt;td&gt; Result &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;enum DataID {&#xA;  case icon&#xA;  case title&#xA;}&#xA;&#xA;let group = HGroup(spacing: 8) {&#xA;  ImageView.groupItem(&#xA;    dataID: DataID.icon,&#xA;    content: UIImage(systemName: &#34;person.fill&#34;)!,&#xA;    style: .init(size: .init(width: 24, height: 24)))&#xA;  Label.groupItem(&#xA;    dataID: DataID.title,&#xA;    content: &#34;This is an IconRow&#34;)&#xA;}&#xA;&#xA;group.install(in: view)&#xA;group.constrainToMargins()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img alt=&#34;IconRow screenshot&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/IconRow.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Groups support nesting too, so you can easily create complex layouts with multiple groups:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Source &lt;/td&gt; &#xA;   &lt;td&gt; Result &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;enum DataID {&#xA;  case checkbox&#xA;  case titleSubtitleGroup&#xA;  case title&#xA;  case subtitle&#xA;}&#xA;&#xA;HGroup(spacing: 8) {&#xA;  Checkbox.groupItem(&#xA;    dataID: DataID.checkbox,&#xA;    content: .init(isChecked: true),&#xA;    style: .standard)&#xA;  VGroupItem(&#xA;    dataID: DataID.titleSubtitleGroup,&#xA;    style: .init(spacing: 4))&#xA;  {&#xA;    Label.groupItem(&#xA;      dataID: DataID.title,&#xA;      content: &#34;Build iOS App&#34;,&#xA;      style: .title)&#xA;    Label.groupItem(&#xA;      dataID: DataID.subtitle,&#xA;      content: &#34;Use EpoxyLayoutGroups&#34;,&#xA;      style: .subtitle)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img alt=&#34;IconRow screenshot&#34; src=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/docs/images/CheckboxRow.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can learn more about &lt;code&gt;EpoxyLayoutGroups&lt;/code&gt; in its &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/EpoxyLayoutGruops&#34;&gt;wiki entry&lt;/a&gt;, or by browsing the &lt;a href=&#34;https://swiftpackageindex.com/airbnb/epoxy-ios/master/documentation/epoxylayoutgroups&#34;&gt;code documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/FAQ#why-would-i-use-epoxy-and-uikit-instead-of-swiftui&#34;&gt;Why would I use Epoxy and UIKit instead of SwiftUI?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/epoxy-ios/wiki/FAQ#how-does-epoxy-for-ios-differ-from-epoxy-for-android&#34;&gt;How does Epoxy for iOS differ from Epoxy for Android?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome! We&#39;d love help improving this library. Feel free to browse through open &lt;a href=&#34;https://github.com/airbnb/epoxy-ios/issues&#34;&gt;issues&lt;/a&gt; to look for things that need work. If you have a feature request or bug, please open a new issue so we can track it. Contributors are expected to follow the &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/epoxy-ios/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Epoxy is released under the Apache License 2.0. See &lt;code&gt;LICENSE&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Logo design by &lt;a href=&#34;https://twitter.com/AlanaHanada&#34;&gt;Alana Hanada&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/NotJoNacho&#34;&gt;Jonard La Rosa&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sindresorhus/Actions</title>
    <updated>2023-09-27T01:42:56Z</updated>
    <id>tag:github.com,2023-09-27:/sindresorhus/Actions</id>
    <link href="https://github.com/sindresorhus/Actions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚙️ Supercharge your shortcuts&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://sindresorhus.com/actions&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sindresorhus/Actions/main/Stuff/AppIcon-readme.png&#34; width=&#34;200&#34; height=&#34;200&#34;&gt; &lt;/a&gt; &#xA; &lt;h1&gt;Actions&lt;/h1&gt; &#xA; &lt;p&gt; &lt;b&gt;Additional actions for the Shortcuts app&lt;/b&gt; &lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The app provides lots of powerful extra actions for the Shortcuts app on macOS and iOS. These actions make it significantly easier to create shortcuts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sindresorhus/Actions/issues/new/choose&#34;&gt;&lt;strong&gt;Submit action idea&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; &lt;sub&gt;&lt;em&gt;(Submit an issue before &lt;a href=&#34;https://raw.githubusercontent.com/sindresorhus/Actions/main/.github/contributing.md&#34;&gt;submitting a pull request&lt;/a&gt;)&lt;/em&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Want to run shortcuts directly from the iOS Lock Screen? Check out my &lt;a href=&#34;https://sindresorhus.com/quick-launch&#34;&gt;Quick Launch&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;p&gt;And trigger shortcuts on your Mac from your iOS device with my &lt;a href=&#34;https://sindresorhus.com/hyperduck#shortcuts&#34;&gt;Hyperduck&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;p&gt;And for high-quality transcription, see my &lt;a href=&#34;https://sindresorhus.com/aiko&#34;&gt;Aiko&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/app/id1586435171&#34;&gt;&lt;img src=&#34;https://sindresorhus.com/assets/download-on-app-store-badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Requires at least macOS 13 or iOS 16&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Older versions (macOS)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/Actions/releases/download/v1.13.1/Actions.1.13.1.-.macOS.12.zip&#34;&gt;1.13.1&lt;/a&gt; for macOS 12+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Included actions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add to List&lt;/li&gt; &#xA; &lt;li&gt;Apply Capture Date&lt;/li&gt; &#xA; &lt;li&gt;Ask ChatGPT&lt;/li&gt; &#xA; &lt;li&gt;Ask for Text with Timeout&lt;/li&gt; &#xA; &lt;li&gt;Authenticate&lt;/li&gt; &#xA; &lt;li&gt;Blur Images&lt;/li&gt; &#xA; &lt;li&gt;Boolean&lt;/li&gt; &#xA; &lt;li&gt;Calculate with Soulver&lt;/li&gt; &#xA; &lt;li&gt;Choose from List (Extended)&lt;/li&gt; &#xA; &lt;li&gt;Clamp Number&lt;/li&gt; &#xA; &lt;li&gt;Combine Lists&lt;/li&gt; &#xA; &lt;li&gt;Convert Coordinates to Location&lt;/li&gt; &#xA; &lt;li&gt;Convert Date to Unix Time&lt;/li&gt; &#xA; &lt;li&gt;Convert Location to Geo URI&lt;/li&gt; &#xA; &lt;li&gt;Convert Unix Time to Date&lt;/li&gt; &#xA; &lt;li&gt;Create Color Image&lt;/li&gt; &#xA; &lt;li&gt;Create URL&lt;/li&gt; &#xA; &lt;li&gt;Edit URL&lt;/li&gt; &#xA; &lt;li&gt;Filter List&lt;/li&gt; &#xA; &lt;li&gt;Flash Screen &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Format Currency&lt;/li&gt; &#xA; &lt;li&gt;Format Date Difference&lt;/li&gt; &#xA; &lt;li&gt;Format Duration&lt;/li&gt; &#xA; &lt;li&gt;Format Number — Compact&lt;/li&gt; &#xA; &lt;li&gt;Format Person Name&lt;/li&gt; &#xA; &lt;li&gt;Generate CSV&lt;/li&gt; &#xA; &lt;li&gt;Generate Haptic Feedback &lt;sup&gt;(iOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate Random Data&lt;/li&gt; &#xA; &lt;li&gt;Generate Random Text&lt;/li&gt; &#xA; &lt;li&gt;Generate UUID&lt;/li&gt; &#xA; &lt;li&gt;Get Audio Playback Destination &lt;sup&gt;(iOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get Average Color of Image&lt;/li&gt; &#xA; &lt;li&gt;Get Battery State&lt;/li&gt; &#xA; &lt;li&gt;Get Boolean from Input&lt;/li&gt; &#xA; &lt;li&gt;Get Default Printer &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get Device Details (Extended)&lt;/li&gt; &#xA; &lt;li&gt;Get Device Orientation&lt;/li&gt; &#xA; &lt;li&gt;Get Dominant Colors of Image&lt;/li&gt; &#xA; &lt;li&gt;Get Emojis&lt;/li&gt; &#xA; &lt;li&gt;Get File Icon &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get File Path&lt;/li&gt; &#xA; &lt;li&gt;Get High-Resolution Timestamp&lt;/li&gt; &#xA; &lt;li&gt;Get Index of List Item&lt;/li&gt; &#xA; &lt;li&gt;Get Map Image of Location&lt;/li&gt; &#xA; &lt;li&gt;Get Modifier Key State &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get Music Playlists &lt;sup&gt;(iOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get Printers &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get Query Item Value from URL&lt;/li&gt; &#xA; &lt;li&gt;Get Query Items from URL&lt;/li&gt; &#xA; &lt;li&gt;Get Query Items from URL as Dictionary&lt;/li&gt; &#xA; &lt;li&gt;Get Random Boolean&lt;/li&gt; &#xA; &lt;li&gt;Get Random Color&lt;/li&gt; &#xA; &lt;li&gt;Get Random Date and Time&lt;/li&gt; &#xA; &lt;li&gt;Get Random Emoticon&lt;/li&gt; &#xA; &lt;li&gt;Get Random Floating-Point Number&lt;/li&gt; &#xA; &lt;li&gt;Get Random Number from Seed&lt;/li&gt; &#xA; &lt;li&gt;Get Related Words&lt;/li&gt; &#xA; &lt;li&gt;Get Running Apps &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get SF Symbol Image&lt;/li&gt; &#xA; &lt;li&gt;Get Title of URL&lt;/li&gt; &#xA; &lt;li&gt;Get Uniform Type Identifier&lt;/li&gt; &#xA; &lt;li&gt;Get Unsplash Image&lt;/li&gt; &#xA; &lt;li&gt;Get User Details&lt;/li&gt; &#xA; &lt;li&gt;Global Variable&lt;/li&gt; &#xA; &lt;li&gt;Hex Encode&lt;/li&gt; &#xA; &lt;li&gt;Hide Shortcuts App&lt;/li&gt; &#xA; &lt;li&gt;Invert Images&lt;/li&gt; &#xA; &lt;li&gt;Is Audio Playing &lt;sup&gt;(iOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Is Bluetooth On&lt;/li&gt; &#xA; &lt;li&gt;Is Cellular Data On&lt;/li&gt; &#xA; &lt;li&gt;Is Connected to VPN &lt;sup&gt;(iOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Is Dark Mode On&lt;/li&gt; &#xA; &lt;li&gt;Is Day&lt;/li&gt; &#xA; &lt;li&gt;Is Device Orientation&lt;/li&gt; &#xA; &lt;li&gt;Is Host Reachable&lt;/li&gt; &#xA; &lt;li&gt;Is Low Power Mode On&lt;/li&gt; &#xA; &lt;li&gt;Is Online&lt;/li&gt; &#xA; &lt;li&gt;Is Screen Locked &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Is Silent Mode On &lt;sup&gt;(iOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Is Web Server Reachable&lt;/li&gt; &#xA; &lt;li&gt;Is Wi-Fi On &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Merge Dictionaries&lt;/li&gt; &#xA; &lt;li&gt;Open URLs with App &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Overwrite File&lt;/li&gt; &#xA; &lt;li&gt;Parse CSV&lt;/li&gt; &#xA; &lt;li&gt;Parse JSON5&lt;/li&gt; &#xA; &lt;li&gt;Play Alert Sound &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pretty Print Dictionaries&lt;/li&gt; &#xA; &lt;li&gt;Remove Duplicate Lines&lt;/li&gt; &#xA; &lt;li&gt;Remove Duplicates from List&lt;/li&gt; &#xA; &lt;li&gt;Remove Emojis&lt;/li&gt; &#xA; &lt;li&gt;Remove Empty Lines&lt;/li&gt; &#xA; &lt;li&gt;Remove from List&lt;/li&gt; &#xA; &lt;li&gt;Remove Non-Printable Characters&lt;/li&gt; &#xA; &lt;li&gt;Reverse Lines&lt;/li&gt; &#xA; &lt;li&gt;Reverse List&lt;/li&gt; &#xA; &lt;li&gt;Round Number to Multiple&lt;/li&gt; &#xA; &lt;li&gt;Sample Color from Screen &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scan Documents &lt;sup&gt;(iOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scan QR Codes in Image&lt;/li&gt; &#xA; &lt;li&gt;Set Creation and Modification Date of File&lt;/li&gt; &#xA; &lt;li&gt;Set Default Printer &lt;sup&gt;(macOS-only)&lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set Uniform Type Identifier&lt;/li&gt; &#xA; &lt;li&gt;Shuffle List&lt;/li&gt; &#xA; &lt;li&gt;Sort List&lt;/li&gt; &#xA; &lt;li&gt;Spell Out Number&lt;/li&gt; &#xA; &lt;li&gt;Transcribe Audio&lt;/li&gt; &#xA; &lt;li&gt;Transform Lists&lt;/li&gt; &#xA; &lt;li&gt;Transform Text&lt;/li&gt; &#xA; &lt;li&gt;Transform Text with JavaScript&lt;/li&gt; &#xA; &lt;li&gt;Trim Whitespace&lt;/li&gt; &#xA; &lt;li&gt;Truncate List&lt;/li&gt; &#xA; &lt;li&gt;Truncate Number&lt;/li&gt; &#xA; &lt;li&gt;Truncate Text&lt;/li&gt; &#xA; &lt;li&gt;Wait Milliseconds&lt;/li&gt; &#xA; &lt;li&gt;Write or Edit Text&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Want more shortcut actions?&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;High-quality transcription (speech to text) in 100 languages → &lt;a href=&#34;https://sindresorhus.com/aiko&#34;&gt;Aiko&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Trigger shortcuts on your Mac from your iOS device → &lt;a href=&#34;https://sindresorhus.com/hyperduck#shortcuts&#34;&gt;Hyperduck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Show text in menu bar → &lt;a href=&#34;https://sindresorhus.com/one-thing&#34;&gt;One Thing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open URLs in a specific browser → &lt;a href=&#34;https://sindresorhus.com/velja&#34;&gt;Velja&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Remove tracking parameters from URLs → &lt;a href=&#34;https://sindresorhus.com/velja&#34;&gt;Velja&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate images from text with AI → &lt;a href=&#34;https://sindresorhus.com/amazing-ai&#34;&gt;Amazing AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clear clipboard formatting → &lt;a href=&#34;https://sindresorhus.com/pure-paste&#34;&gt;Pure Paste&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get internet speed → &lt;a href=&#34;https://sindresorhus.com/speediness&#34;&gt;Speediness&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join video calls → &lt;a href=&#34;https://sindresorhus.com/dato&#34;&gt;Dato&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Put text on the iOS Lock Screen → &lt;a href=&#34;https://sindresorhus.com/any-text&#34;&gt;Any Text&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get random animated GIF → &lt;a href=&#34;https://sindresorhus.com/jiffy&#34;&gt;Jiffy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sindresorhus/Actions/main/Stuff/screenshot1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Non-App Store version for macOS&lt;/h3&gt; &#xA;&lt;p&gt;A special version for users that cannot access the App Store. It won&#39;t receive automatic updates. I will update it here once a year.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dsc.cloud/sindresorhus/Actions-2.3.1-1678525767.zip&#34;&gt;Download&lt;/a&gt; &lt;em&gt;(2.3.1 · macOS 13+)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h4&gt;The actions don&#39;t show up in the Shortcuts app&lt;/h4&gt; &#xA;&lt;p&gt;Restart your device.&lt;/p&gt; &#xA;&lt;h4&gt;Why is this free without ads?&lt;/h4&gt; &#xA;&lt;p&gt;I just enjoy making apps. I earn money on other apps. Consider leaving a nice review on the App Store.&lt;/p&gt; &#xA;&lt;h4&gt;Can I contribute localizations?&lt;/h4&gt; &#xA;&lt;p&gt;I don&#39;t have any immediate plans to localize the app.&lt;/p&gt; &#xA;&lt;h2&gt;Other apps&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/Gifski&#34;&gt;Gifski&lt;/a&gt; - Convert videos to high-quality GIFs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/System-Color-Picker&#34;&gt;System Color Picker&lt;/a&gt; - The macOS color picker as an app with more features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/Plash&#34;&gt;Plash&lt;/a&gt; - Make any website your Mac desktop wallpaper&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sindresorhus.com/dato&#34;&gt;Dato&lt;/a&gt; - Better menu bar clock with calendar and time zones&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sindresorhus.com/apps&#34;&gt;More apps…&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>