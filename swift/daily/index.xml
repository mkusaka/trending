<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-10T01:46:07Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shoheiyokoyama/Gemini</title>
    <updated>2023-12-10T01:46:07Z</updated>
    <id>tag:github.com,2023-12-10:/shoheiyokoyama/Gemini</id>
    <link href="https://github.com/shoheiyokoyama/Gemini" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gemini is rich scroll based animation framework for iOS, written in Swift.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/logo.png&#34; width=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/demo-circle-rotation.gif&#34; align=&#34;left&#34;&gt; &#xA;&lt;h2&gt;What is the &lt;code&gt;Gemini&lt;/code&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Gemini&lt;/code&gt; is rich scroll based animation framework for iOS, written in Swift. You can easily use &lt;code&gt;GeminiCollectionView&lt;/code&gt;, which is a subclass of &lt;code&gt;UICollectionView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It enables you to make multiple animation which has various and customizable properties, and moreover can create your own custom scroll animation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Gemini&lt;/code&gt; also provides a fluent interface based on method chaining. you can use this intuitively and simply.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;collectionView.gemini&#xA;    .circleRotationAnimation()&#xA;    .radius(400)&#xA;    .rotateDirection(.clockwise)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://img.shields.io/badge/platform-ios-blue.svg?style=flat&#34; alt=&#34;Platform&#34;&gt; &lt;a href=&#34;https://img.shields.io/badge/Cocoapods-compatible-brightgreen.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Cocoapods-compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;Cocoapods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-Compatible-brightgreen.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://mit-license.org&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-MIT-lightgrey.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/swift-5.0-orange.svg?sanitize=true&#34; alt=&#34;Swift&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/pod-v1.4.0-red.svg?sanitize=true&#34; alt=&#34;pod&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/demo-yaw-rotation.gif&#34; align=&#34;right&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Rich animation with scrolling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Easily usable&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Highly customizable&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Several types of animations and properties&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports vertical and horizontal flow layout&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports easing function&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports &lt;code&gt;Swift5.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fluent interfaces based on method chaining&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Compatible with &lt;code&gt;Carthage&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Compatible with &lt;code&gt;CocoaPods&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Example project with lots of stock animations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; And More...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#anmation-types&#34;&gt;Animation Types and properties&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#author&#34;&gt;Author&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;anmation-types&#34;&gt; Animation Types and properties&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;a name=&#34;anmation-types&#34;&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a name=&#34;anmation-types&#34;&gt;The following animation types are available. See sample code &lt;/a&gt;&lt;a href=&#34;https://github.com/shoheiyokoyama/Gemini/tree/master/Example/Gemini&#34;&gt;here&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#cube&#34;&gt;Cube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#circle-rotation&#34;&gt;Circle Rotation&lt;/a&gt; You can configure direction of rotation using the &lt;code&gt;CircleRotationDirection&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#3d-vector-rotation&#34;&gt;3D vector rotation&lt;/a&gt; Each rotation types provide multiple rotation effect &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#roll-rotation&#34;&gt;Roll Rotation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#pitch-rotation&#34;&gt;Pitch Rotation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#yaw-rotation&#34;&gt;Yaw Rotation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#scale&#34;&gt;Scale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#custom&#34;&gt;Custom&lt;/a&gt; You can create your own custom scroll animation using multiple properties, rotation, scale, translation, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, you can also customize the following properties for the above animation types.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BackgroundColor&lt;/li&gt; &#xA; &lt;li&gt;CornerRadius&lt;/li&gt; &#xA; &lt;li&gt;Alpha&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#easing-function&#34;&gt;Easings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shoheiyokoyama/Gemini/master/#shadow-effect&#34;&gt;Shadow Effect&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;cube&#34;&gt; Cube&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;cube&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/cube-horizontal.gif&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/cube-vertical.gif&#34;&gt; &lt;/p&gt; &lt;p&gt;It&#39;s a cube animation like Instagram. If you would like to customize the cube animation, change &lt;code&gt;cubeDegree&lt;/code&gt;. If &lt;code&gt;cubeDegree&lt;/code&gt; is 90, it moves like a regular hexahedron.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;collectionView.gemini&#xA;    .cubeAnimation()&#xA;    .cubeDegree(90)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&#xA;&lt;h2&gt;&lt;a name=&#34;cube&#34;&gt;&lt;/a&gt;&lt;a name=&#34;circle-rotation&#34;&gt; CircleRotation&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;circle-rotation&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/circle-horizontal.gif&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/circle-vertical.gif&#34;&gt; &lt;/p&gt; &lt;p&gt;An animation moves in a circle. You can change &lt;code&gt;circleRadius&lt;/code&gt; and &lt;code&gt;CircleRotationDirection&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;collectionView.gemini&#xA;    .circleRotationAnimation()&#xA;    .radius(450) // The radius of the circle&#xA;    .rotateDirection(.clockwise) // Direction of rotation. &#xA;    .itemRotationEnabled(true) // Whether the item rotates or not.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&#xA;&lt;h2&gt;&lt;a name=&#34;circle-rotation&#34;&gt;&lt;/a&gt;&lt;a name=&#34;3d-vector-rotation&#34;&gt; 3D vector rotation&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;3d-vector-rotation&#34;&gt; &lt;p&gt;Available for &lt;code&gt;Roll&lt;/code&gt;, &lt;code&gt;Pitch&lt;/code&gt; and &lt;code&gt;Yaw&lt;/code&gt; animation. These rotation animation are designed based on 3-Dimensional vector. Figure-1 shows direction of rotation based on device.&lt;/p&gt; &lt;h6&gt;&lt;em&gt;&lt;strong&gt;Figure-1&lt;/strong&gt;&lt;/em&gt; Pitch, roll, and yaw axes&lt;/h6&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/attitude_rotation.png&#34; width=&#34;350&#34;&gt; &lt;/p&gt; &lt;/a&gt;&#xA;&lt;h6&gt;&lt;a name=&#34;3d-vector-rotation&#34;&gt;Reference: &lt;/a&gt;&lt;a href=&#34;https://developer.apple.com/library/content/documentation/EventHandling/Conceptual/EventHandlingiPhoneOS/HandlingProcessedDeviceMotionData.html#//apple_ref/doc/uid/TP40009541-CH27-SW1&#34;&gt;Event Handling Guide for UIKit Apps&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;&lt;a name=&#34;roll-rotation&#34;&gt; Roll Rotation&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;a name=&#34;roll-rotation&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/roll-horizontal.gif&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/roll-vertical.gif&#34;&gt; &lt;/p&gt; &lt;/a&gt;&#xA;&lt;h3&gt;&lt;a name=&#34;roll-rotation&#34;&gt;&lt;/a&gt;&lt;a name=&#34;pitch-rotation&#34;&gt; Pitch Rotation&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;a name=&#34;pitch-rotation&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/pitch-horizontal.gif&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/pitch-vertical.gif&#34;&gt; &lt;/p&gt; &lt;/a&gt;&#xA;&lt;h3&gt;&lt;a name=&#34;pitch-rotation&#34;&gt;&lt;/a&gt;&lt;a name=&#34;yaw-rotation&#34;&gt; Yaw Rotation&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;a name=&#34;yaw-rotation&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/yaw-horizontal.gif&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/yaw-vertical.gif&#34;&gt; &lt;/p&gt; &lt;p&gt;Each types of rotation animation has &lt;code&gt;RotationEffect&lt;/code&gt;(e.g. &lt;code&gt;RollRotationEffect&lt;/code&gt;) and degree of rotation.&lt;/p&gt; &lt;p&gt;Customize &lt;code&gt;RotationEffect&lt;/code&gt; (&lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;sineWave&lt;/code&gt;, &lt;code&gt;reverseSineWave&lt;/code&gt;) and degree of rotation.&lt;/p&gt; &lt;p&gt;In the case of &lt;code&gt;rollRotation&lt;/code&gt;, like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;collectionView.gemini&#xA;    .rollRotationAnimation()&#xA;    .degree(45)&#xA;    .rollEffect(.rollUp)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&#xA;&lt;h2&gt;&lt;a name=&#34;yaw-rotation&#34;&gt;&lt;/a&gt;&lt;a name=&#34;scale&#34;&gt; Scale&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;scale&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/scale-up.gif&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/scale-down.gif&#34;&gt; &lt;/p&gt; &lt;p&gt;The &lt;code&gt;scaleUp&lt;/code&gt; gradually increases frame size, &lt;code&gt;scaleDown&lt;/code&gt; decreases.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;collectionView.gemini&#xA;    .scaleAnimation()&#xA;    .scale(0.75)&#xA; &amp;nbsp; &amp;nbsp;.scaleEffect(.scaleUp) // or .scaleDown&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&#xA;&lt;h2&gt;&lt;a name=&#34;scale&#34;&gt;&lt;/a&gt;&lt;a name=&#34;custom&#34;&gt; Custom&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;custom&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/custom1.gif&#34;&gt; &lt;img src=&#34;https://github.com/shoheiyokoyama/Assets/raw/master/Gemini/custom2.gif&#34;&gt; &lt;/p&gt; &lt;p&gt;You can flexibly and easily customize scroll animation. Customize properties of &lt;code&gt;GeminiAnimation.custom&lt;/code&gt; such as &lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;scaleEffect&lt;/code&gt;, &lt;code&gt;rotationAngle&lt;/code&gt;, &lt;code&gt;translation&lt;/code&gt;, &lt;code&gt;easing&lt;/code&gt;, &lt;code&gt;shadowEffect&lt;/code&gt;, &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;cornerRadius&lt;/code&gt;, &lt;code&gt;backgroundColor&lt;/code&gt;, &lt;code&gt;anchorPoint&lt;/code&gt;, etc.&lt;/p&gt; &lt;p&gt;The animation of gif is customized in the following way:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;collectionView.gemini&#xA;    .customAnimation()&#xA;    .translation(y: 50)&#xA;    .rotationAngle(y: 13)&#xA;    .ease(.easeOutExpo)&#xA;    .shadowEffect(.fadeIn)&#xA;    .maxShadowAlpha(0.3)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or right side of gifs is customized as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;collectionView.gemini&#xA;    .customAnimation()&#xA;    .backgroundColor(startColor: lightGreenColor, endColor: lightBlueColor)&#xA;    .ease(.easeOutSine)&#xA;    .cornerRadius(75)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a name=&#34;custom&#34;&gt;There are more sample code at &lt;/a&gt;&lt;a href=&#34;https://github.com/shoheiyokoyama/Gemini/raw/master/Example/Gemini/ViewControllers/CustomAnimationViewController.swift&#34;&gt;CustomAnimationViewController.swift&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;easing-function&#34;&gt; Easing function&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;easing-function&#34;&gt; &lt;p&gt;&lt;code&gt;Gemini&lt;/code&gt; supports various easing functions based on distance of scroll.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;linear&lt;/li&gt; &#xA;  &lt;li&gt;easeInQuad&lt;/li&gt; &#xA;  &lt;li&gt;easeOutQuad&lt;/li&gt; &#xA;  &lt;li&gt;easeInOutQuad&lt;/li&gt; &#xA;  &lt;li&gt;easeInCubic&lt;/li&gt; &#xA;  &lt;li&gt;easeOutCubic&lt;/li&gt; &#xA;  &lt;li&gt;easeInOutCubic&lt;/li&gt; &#xA;  &lt;li&gt;easeInQuart&lt;/li&gt; &#xA;  &lt;li&gt;easeOutQuart&lt;/li&gt; &#xA;  &lt;li&gt;easeInOutQuart&lt;/li&gt; &#xA;  &lt;li&gt;easeInQuint&lt;/li&gt; &#xA;  &lt;li&gt;easeOutQuint&lt;/li&gt; &#xA;  &lt;li&gt;easeInOutQuint&lt;/li&gt; &#xA;  &lt;li&gt;easeInSine&lt;/li&gt; &#xA;  &lt;li&gt;easeOutSine&lt;/li&gt; &#xA;  &lt;li&gt;easeInOutSine&lt;/li&gt; &#xA;  &lt;li&gt;easeInExpo&lt;/li&gt; &#xA;  &lt;li&gt;easeOutExpo&lt;/li&gt; &#xA;  &lt;li&gt;easeInOutExpo&lt;/li&gt; &#xA;  &lt;li&gt;easeInCirc&lt;/li&gt; &#xA;  &lt;li&gt;easeOutCirc&lt;/li&gt; &#xA;  &lt;li&gt;easeInOutCirc&lt;/li&gt; &#xA; &lt;/ul&gt; &lt;/a&gt;&#xA;&lt;h2&gt;&lt;a name=&#34;easing-function&#34;&gt;&lt;/a&gt;&lt;a name=&#34;shadow-effect&#34;&gt; Shadow effect&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;shadow-effect&#34;&gt; &lt;p&gt;Default value is &lt;code&gt;ShadowEffect.none&lt;/code&gt;. Return &lt;code&gt;shadowView&lt;/code&gt; in your custom class, which is a subclass of &lt;code&gt;GeminiCell&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;fadeIn&lt;/li&gt; &#xA;  &lt;li&gt;nextFadeIn&lt;/li&gt; &#xA;  &lt;li&gt;previousFadeIn&lt;/li&gt; &#xA;  &lt;li&gt;fadeOut&lt;/li&gt; &#xA;  &lt;li&gt;none&lt;/li&gt; &#xA; &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class CustomCollectionViewCell: GeminiCell {&#xA;    @IBOutlet weak var customShadowView: UIView!&#xA;    override var shadowView: UIView? {&#xA;        return customShadowView&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&#xA;&lt;h1&gt;&lt;a name=&#34;shadow-effect&#34;&gt;&lt;/a&gt;&lt;a name=&#34;usage&#34;&gt; Usage&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;a name=&#34;usage&#34;&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;em&gt;&lt;strong&gt;Use Gemini classes&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &lt;p&gt;&lt;code&gt;Gemini&lt;/code&gt; is designed to be easy to use. Use &lt;code&gt;GeminiCollectionView&lt;/code&gt; and &lt;code&gt;GeminiCell&lt;/code&gt;. These classes is subclass of &lt;code&gt;UICollectionView&lt;/code&gt;, &lt;code&gt;UICollectionViewCell&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt;&lt;em&gt;&lt;strong&gt;Configure animation&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &lt;p&gt;Configure animation with fluent interface based on method chaining. You can develop expressive code that enhances readability.&lt;/p&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;&lt;em&gt;&lt;strong&gt;Call function for animation&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &lt;p&gt;Finally, call &lt;code&gt;animateVisibleCells()&lt;/code&gt; in &lt;code&gt;scrollViewDidScroll(_:)&lt;/code&gt;&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;NOTE: If you want to adapt animation immediately after view is displayed, call &lt;code&gt;animateCell(_:)&lt;/code&gt; in &lt;code&gt;collectionView(_:cellForItemAt:)&lt;/code&gt; and &lt;code&gt;collectionView(_:willDisplay:forItemAt:)&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Import Gemini&#xA;import Gemini&#xA;&#xA;// Inherite GeminiCell&#xA;class CustomCell: GeminiCell {&#xA;    ...&#xA;}&#xA;&#xA;// Conform to UICollectionViewDelegate and UICollectionViewDataSource&#xA;class CustomViewController: UIViewController: UICollectionViewDelegate, UICollectionViewDataSource {&#xA;&#xA;    // Inherite GeminiCollectionView&#xA;    @IBOutlet weak var collectionView: GeminiCollectionView!&#xA;&#xA;    ...&#xA;&#xA;    // Configure animation and properties&#xA;    func configureAnimation() {&#xA;        collectionView.gemini&#xA;            .circleRotationAnimation()&#xA;            .radius(400)&#xA;            .rotateDirection(.clockwise)&#xA;    }&#xA;&#xA;    // Call animation function&#xA;    func scrollViewDidScroll(_ scrollView: UIScrollView) {&#xA;        collectionView.animateVisibleCells()&#xA;    }&#xA;&#xA;    func collectionView(_ collectionView: UICollectionView, willDisplay cell: UICollectionViewCell, forItemAt indexPath: IndexPath) {&#xA;        if let cell = cell as? GeminiCell {&#xA;            self.collectionView.animateCell(cell)&#xA;        }&#xA;    }&#xA;&#xA;    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&amp;gt; UICollectionViewCell {&#xA;        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: &#34;CustomCell&#34;, for: indexPath) as! CustomCell&#xA;        self.collectionView.animateCell(cell)&#xA;        return cell&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a name=&#34;usage&#34;&gt;See &lt;/a&gt;&lt;a href=&#34;https://github.com/shoheiyokoyama/Gemini/tree/master/Example/Gemini&#34;&gt;Example&lt;/a&gt;, for more details.&lt;/p&gt; &#xA;&lt;p&gt;To run the example project, clone the repo, and run &lt;code&gt;pod install&lt;/code&gt; from the Example directory first.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;requirements&#34;&gt; Requirements&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;requirements&#34;&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Xcode 10.2.1&lt;/li&gt; &#xA;  &lt;li&gt;Swift 5.0&lt;/li&gt; &#xA; &lt;/ul&gt; &lt;/a&gt;&#xA;&lt;h2&gt;&lt;a name=&#34;requirements&#34;&gt;&lt;/a&gt;&lt;a name=&#34;installation&#34;&gt; Installation&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;installation&#34;&gt; &lt;h3&gt;CocoaPods&lt;/h3&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a name=&#34;installation&#34;&gt;Gemini is available through &lt;/a&gt;&lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, simply add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#34;Gemini&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;Add the following line to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;github &#34;shoheiyokoyama/Gemini&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;author&#34;&gt; Author&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;a name=&#34;author&#34;&gt; &lt;p&gt;Shohei Yokoyama&lt;/p&gt; &lt;/a&gt;&#xA;&lt;ul&gt;&#xA; &lt;a name=&#34;author&#34;&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/shoheiyokoyama&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;&lt;/a&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/shohei.yokoyama.96&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/shoheiyokoyam&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gmail: &lt;a href=&#34;mailto:shohei.yok0602@gmail.com&#34;&gt;shohei.yok0602@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Gemini is available under the MIT license. See the &lt;a href=&#34;https://github.com/shoheiyokoyama/Gemini/raw/master/LICENSE&#34;&gt;LICENSE file&lt;/a&gt; for more info.&lt;/p&gt;</summary>
  </entry>
</feed>