<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-22T01:38:33Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Jaennaet/pISSStream</title>
    <updated>2025-05-22T01:38:33Z</updated>
    <id>tag:github.com,2025-05-22:/Jaennaet/pISSStream</id>
    <link href="https://github.com/Jaennaet/pISSStream" rel="alternate"></link>
    <summary type="html">&lt;p&gt;App that shows how full the International Space Station&#39;s urine tank is in real time, available for macOS (menu bar), iOS, watchOS and visionOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pISSStream&lt;/h1&gt; &#xA;&lt;p&gt;pISSStream is a menu bar app that shows the International Space Station&#39;s urine tank&#39;s capacity in real-time. It is available for macOS, watchOS, iOS, and visionOS.&lt;/p&gt; &#xA;&lt;h2&gt;Official Icon&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Jaennaet/pISSStream/main/pISSStream/Assets.xcassets/AppIcon.appiconset/icon_512x512.png&#34; alt=&#34;Launch Image&#34; width=&#34;200&#34; style=&#34;border-radius: 12px;&#34;&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Real-time ISS urine tank level monitoring&lt;/li&gt; &#xA; &lt;li&gt;macOS menu bar integration&lt;/li&gt; &#xA; &lt;li&gt;iOS and watchOS app with live updates&lt;/li&gt; &#xA; &lt;li&gt;visionOS immersive 3D visualization&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spatial audio with deep-space soundscape in immersive view&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enhanced UI and custom app icon for Vision Pro&lt;/li&gt; &#xA; &lt;li&gt;Uses NASA&#39;s official public ISS telemetry stream via &lt;a href=&#34;https://lightstreamer.com/&#34;&gt;Lightstreamer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://panthercap.us-east.host.bsky.network/xrpc/com.atproto.sync.getBlob?did=did%3Aplc%3Acl3kuq4sxg3jpfjtom4gnamx&amp;amp;cid=bafkreidthbrhc7pjez4g445dpontwyefusimny45kja57twy2obshwtsn4&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Jaennaet/pISSStream/releases/download/v0.2/pISSStream.0.2.dmg&#34;&gt;Download&lt;/a&gt; the latest release DMG.&lt;/p&gt; &#xA;&lt;h3&gt;iOS, watchOS &amp;amp; visionOS&lt;/h3&gt; &#xA;&lt;p&gt;Due to Apple&#39;s security model, you&#39;ll need to build from source and sign with your own developer account:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Xcode 15.2 or later&lt;/li&gt; &#xA;   &lt;li&gt;Apple Developer account&lt;/li&gt; &#xA;   &lt;li&gt;iOS 17.0+ device for iOS app&lt;/li&gt; &#xA;   &lt;li&gt;Apple Vision Pro or visionOS simulator for spatial computing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build steps:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Clone the repository&#xA;git clone https://github.com/Jaennaet/pISSStream.git&#xA;cd pISSStream&#xA;&#xA;# Open in Xcode&#xA;open pISSStream.xcodeproj&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;In Xcode:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Select your development team in the Signing &amp;amp; Capabilities tab&lt;/li&gt; &#xA; &lt;li&gt;Choose your target device (iPhone/macOS or Vision Pro)&lt;/li&gt; &#xA; &lt;li&gt;Build and run (‚åòR)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: If you don&#39;t have an Apple Developer account, you can still run the app in the simulator or on your device for up to 7 days using a free provisioning profile.&lt;/p&gt; &#xA;&lt;p&gt;For &lt;strong&gt;visionOS&lt;/strong&gt; development, you&#39;ll need the visionOS SDK installed in Xcode. The app uses the ImmersiveSpace API for the 3D visualization experience and features spatial audio for enhanced immersion.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac with Apple silicon&lt;/li&gt; &#xA; &lt;li&gt;Xcode 15.2+&lt;/li&gt; &#xA; &lt;li&gt;Apple Developer Account&lt;/li&gt; &#xA; &lt;li&gt;Vision Pro with developer mode enabled&lt;/li&gt; &#xA; &lt;li&gt;Mac and Vision Pro on same Wi-Fi network&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Wireless Development&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;On Vision Pro:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Settings &amp;gt; General &amp;gt; Developer &amp;gt; Enable Developer Mode&lt;/li&gt; &#xA;   &lt;li&gt;Settings &amp;gt; Privacy &amp;amp; Security &amp;gt; Allow Remote Development&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect Vision Pro:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open Xcode&lt;/li&gt; &#xA;   &lt;li&gt;Window &amp;gt; Devices and Simulators&lt;/li&gt; &#xA;   &lt;li&gt;Click &#39;+&#39; to add Vision Pro&lt;/li&gt; &#xA;   &lt;li&gt;Follow pairing instructions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build &amp;amp; Deploy:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Select Vision Pro as build target&lt;/li&gt; &#xA;   &lt;li&gt;Product &amp;gt; Run (‚åòR)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Common Issues&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;Device not found&#34;: Check Wi-Fi connection&lt;/li&gt; &#xA; &lt;li&gt;&#34;Unauthorized device&#34;: Re-pair Vision Pro&lt;/li&gt; &#xA; &lt;li&gt;&#34;Build failed&#34;: Update provisioning profile&lt;/li&gt; &#xA; &lt;li&gt;Error &#34;No paired Vision Pro found&#34;: Ensure Vision Pro is connected and paired&lt;/li&gt; &#xA; &lt;li&gt;&#34;Invalid signing&#34;: Verify developer account and provisioning profile&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;p&gt;When pISSStream can connect to Lightstreamer and the ISS telemetry signal is being received by the ground station, the menu bar item shows üßëüèΩ‚ÄçüöÄüöΩ alongside the fill percentage, and the app icon reflects the latest UI enhancements.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://panthercap.us-east.host.bsky.network/xrpc/com.atproto.sync.getBlob?did=did%3Aplc%3Acl3kuq4sxg3jpfjtom4gnamx&amp;amp;cid=bafkreiaykjgxzlvaf5jjp66uobqlapqcsb2zg7vobs2b47bwf54xnisgma&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If either the connection to Lightstreamer or the ISS telemetry signal itself is lost, the menu bar item shows üßëüèΩ‚ÄçüöÄ‚ùóand the last received value if any, and the menu reads either &#34;Connecting&#34; or &#34;No Signal&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://panthercap.us-east.host.bsky.network/xrpc/com.atproto.sync.getBlob?did=did%3Aplc%3Acl3kuq4sxg3jpfjtom4gnamx&amp;amp;cid=bafkreighfm74uy74zcz4pxk2rw4p5b2ts4tezebtkbyyocngqmyiyvenam&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;p&gt;Launch the app to view the current tank level in a simple interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/afad6330-498e-4fd8-bc22-ab9a4d5bbda9&#34; alt=&#34;398597279-b5f96dba-3823-4cef-a227-95070cc12e18&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;visionOS&lt;/h4&gt; &#xA;&lt;p&gt;Experience the ISS waste tank in immersive 3D with real-time fill-level visualization.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/b24c6752-0fb8-4a2e-bf3c-6dab13f2c5e2&#34;&gt;https://github.com/user-attachments/assets/b24c6752-0fb8-4a2e-bf3c-6dab13f2c5e2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;watchOS&lt;/h4&gt; &#xA;&lt;p&gt;Track the ISS waste tank fill level in real time ‚Äî right from your wrist.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/f342fc59-0f2e-47db-88f9-d11746a863a2&#34;&gt;https://github.com/user-attachments/assets/f342fc59-0f2e-47db-88f9-d11746a863a2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;But why?&lt;/h2&gt; &#xA;&lt;p&gt;For some inexplicable reason people keep asking me why I (&lt;a href=&#34;https://github.com/Jaennaet&#34;&gt;@Jaennaet&lt;/a&gt;) did this.&lt;/p&gt; &#xA;&lt;p&gt;My motivation was entirely that I thought this was both a hilariously stupid use of a space station&#39;s telemetry stream, but also kind of amazing at the same time. It&#39;s remarkable that we live in a world where it takes an afternoon to bang out a joke application that reads actual realtime telemetry data from a space station&#39;s toilets.&lt;/p&gt; &#xA;&lt;p&gt;Also a great excuse to learn Swift, but the sheer ridiculousness was what drove me.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;Not the epitome of good coding practices since this was my first Swift &amp;amp; Apple platforms app ever, may break in exciting ways at the slightest excuse.&lt;/p&gt; &#xA;&lt;p&gt;At the very least:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;shrugs at stale data&lt;/li&gt; &#xA; &lt;li&gt;Not overly bothered with error handling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome for bug fixes.&lt;/p&gt; &#xA;&lt;h2&gt;Errata&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Jaennaet&#34;&gt;@Jaennaet&lt;/a&gt; found out about the data stream from &lt;a href=&#34;https://iss-mimic.github.io/Mimic/&#34;&gt;https://iss-mimic.github.io/Mimic/&lt;/a&gt;, which has considerably more and more interesting stats than just how full the piss tank is.&lt;/p&gt; &#xA;&lt;p&gt;We will not be adding any of them.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jaennaet&#34;&gt;@Jaennaet&lt;/a&gt;: initial idea and first version&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/durul&#34;&gt;@durul&lt;/a&gt;: code quality, LOS handling, iOS, watchOS &amp;amp; visionOS versions&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>