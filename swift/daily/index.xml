<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-10T01:41:10Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>root3nl/SupportApp</title>
    <updated>2023-10-10T01:41:10Z</updated>
    <id>tag:github.com,2023-10-10:/root3nl/SupportApp</id>
    <link href="https://github.com/root3nl/SupportApp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Support App is developed by Root3, specialized in managing Apple devices. Root3 offers consultancy and support for organizations to get the most out of their Apple devices and is based in The Netherlands (Halfweg).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;macOS Support App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/root3nl/SupportApp?color=success&#34; alt=&#34;GitHub release (latest by date)&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/macOS-11%2B-green&#34; alt=&#34;Github&#34;&gt; &lt;a href=&#34;https://testflight.apple.com/join/asmgJsAM&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Join-TestFlight-blue&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/generic_version_2.5.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/generic_version_2.4.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/generic_light_mode_cropped.png&#34; height=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/generic_version_2.3_small_dark.png&#34; height=&#34;300&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#download&#34;&gt;Download&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#testflight&#34;&gt;TestFlight&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#technologies&#34;&gt;Technologies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#features&#34;&gt;Features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#menu-bar-icon&#34;&gt;Menu Bar Icon&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#title-and-logo&#34;&gt;Title and logo&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#logo-options&#34;&gt;Logo options&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#color&#34;&gt;Color&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#diagnostic-information&#34;&gt;Diagnostic information&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#app-link-or-command-shortcuts&#34;&gt;App, link or command shortcuts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#footer-text&#34;&gt;Footer Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#notification-icon&#34;&gt;Notification Icon&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#welcome-screen&#34;&gt;Welcome Screen&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#software-update-integration&#34;&gt;Software Update Integration&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#advanced-configuration&#34;&gt;Advanced configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#support-app-extensions&#34;&gt;Support App Extensions&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#how-to-populate-support-app-extensions&#34;&gt;How to populate Support App Extensions&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#variables&#34;&gt;Variables&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#built-in-local-variables&#34;&gt;Built-in local variables&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#mdm-variables&#34;&gt;MDM variables&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#jamf-pro-variables&#34;&gt;Jamf Pro variables&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#privileged-commands-or-scripts-with-supporthelper&#34;&gt;Privileged commands or scripts with SupportHelper&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#file-locations&#34;&gt;File locations&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#security-considerations&#34;&gt;Security Considerations&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#how-to-use-sf-symbols&#34;&gt;How to use SF Symbols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#mdm-deployment&#34;&gt;MDM deployment&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#jamf-pro-custom-json-schema&#34;&gt;Jamf Pro custom JSON Schema&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#installer-or-app-bundle&#34;&gt;Installer or app bundle&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#sample-launchagent&#34;&gt;Sample LaunchAgent&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#sample-configuration-profile&#34;&gt;Sample Configuration Profile&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#logging&#34;&gt;Logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#known-issues&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#privacy-policy&#34;&gt;Privacy policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#note-and-disclaimer&#34;&gt;Note and disclaimer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;The Support app is a macOS menu bar app built for organizations to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Help users and helpdesks to see basic diagnostic information at a glance and proactively notify them to easily fix small issues.&lt;/li&gt; &#xA; &lt;li&gt;Offer shortcuts to easily access support channels or other company resources such as a website or a file server&lt;/li&gt; &#xA; &lt;li&gt;Give users a modern and native macOS app with your corporate identity&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The app is developed by Root3, specialized in managing Apple devices. Root3 offers managed workplaces, consultancy and support for organizations to get the most out of their Apple devices and is based in The Netherlands (Halfweg).&lt;/p&gt; &#xA;&lt;p&gt;Root3 already had a basic in-house support app written in Objective-C and decided to completely rewrite it in Swift using SwiftUI with an all-new design that looks great on macOS Big Sur. We’ve learned that SwiftUI is the perfect way of creating great looking apps for all Apple platforms with minimal effort. In the development process we decided to make it generic so other organizations can take advantage of it and contribute to the Mac admins community.&lt;/p&gt; &#xA;&lt;p&gt;The easiest and recommended way to configure the app is using a Configuration Profile and your MDM solution.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 11.0.1 or higher&lt;/li&gt; &#xA; &lt;li&gt;Any MDM solution supporting custom Configuration Profiles&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;h3&gt;Support App&lt;/h3&gt; &#xA;&lt;p&gt;Package Installer (includes LaunchAgent): &lt;a href=&#34;https://github.com/root3nl/SupportApp/releases/latest&#34;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Application (zipped): &lt;a href=&#34;https://github.com/root3nl/SupportApp/releases/latest&#34;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the MDM deployment section below for more info.&lt;/p&gt; &#xA;&lt;h3&gt;SupportHelper&lt;/h3&gt; &#xA;&lt;p&gt;Package Installer (includes LaunchDaemon): &lt;a href=&#34;https://github.com/root3nl/SupportApp/releases/latest&#34;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TestFlight&lt;/h3&gt; &#xA;&lt;p&gt;You can participate in beta versions of Support App using TestFlight. This requires macOS 12 or higher.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://testflight.apple.com/join/asmgJsAM&#34;&gt;&lt;strong&gt;Join TestFlight&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; There may not always be a TestFlight version available.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Technologies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Written in Swift using SwiftUI&lt;/li&gt; &#xA; &lt;li&gt;All icons are SF Symbols&lt;/li&gt; &#xA; &lt;li&gt;Built for and compatible with macOS 11.0 and higher&lt;/li&gt; &#xA; &lt;li&gt;Native support for Apple Silicon&lt;/li&gt; &#xA; &lt;li&gt;Dark Mode support&lt;/li&gt; &#xA; &lt;li&gt;Colors are matched with your macOS accent color (blue by default)&lt;/li&gt; &#xA; &lt;li&gt;MDM support to configure your own branding such as a custom title, logo, SF Symbols and contact methods&lt;/li&gt; &#xA; &lt;li&gt;Notarized&lt;/li&gt; &#xA; &lt;li&gt;Sandboxed&lt;/li&gt; &#xA; &lt;li&gt;Localized in English, Dutch, French, German and Spanish&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Menu Bar Icon&lt;/h3&gt; &#xA;&lt;p&gt;The Menu Bar Icon can be customized to your own image such as a PNG with Alpha Channel, an image from URL or an SF Symbol. Any image will be shown as template to match the rest of the Menu Bar Extras. Icons larger than 22 points will automatically be resized to the recommended 16 points and the aspect ration will be preserved. Optionally a notification badge can overlay the icon to attract the user&#39;s attention when an Apple Software Update is available or any other warning was triggered. Please check the preference key &lt;code&gt;StatusBarIconNotifierEnabled&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; When using a local file, make sure to put the image in a folder accessible from the App Sandbox. We recommend a subfolder in &lt;code&gt;/Library/Application Support/&lt;/code&gt; such as &lt;code&gt;/Library/Application Support/MyOrganization&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; When using an file from URL, the image will be downloaded once when the Support App opens and will be used for subsequent launches of the app, to avoid unnecessary downloads and use cases where the Mac has no internet connection at startup. To use a new icon, the URL must be changed for the Support App to trigger a new download.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Title and logo&lt;/h3&gt; &#xA;&lt;p&gt;The row above the buttons allow a custom title and company logo. The title supports both text and Emoji. On macOS Monterey and higher, it supports Markdown as well. The logo supports a remote URL, an SF Symbol and several local images types like PNG, JPEG and ICNS and will be resized to a maximum height of 48 points. The original aspect ratio will be retained. A PNG with alpha channel is advised to get variable transparency around your logo.&lt;/p&gt; &#xA;&lt;h4&gt;Logo options&lt;/h4&gt; &#xA;&lt;p&gt;Here are the available for the Logo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remote URL&lt;/strong&gt; (macOS 12 and later): &lt;code&gt;https://URL_TO_IMAGE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SF Symbol&lt;/strong&gt; (macOS 12 and later): &lt;code&gt;SF=SF_SYMBOL_NAME_HERE&lt;/code&gt; or &lt;code&gt;SF=SF_SYMBOL_NAME_HERE,color=COLOR_OPTION_HERE&lt;/code&gt;. Available color options: &lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;multicolor&lt;/code&gt;, &lt;code&gt;hierarchical&lt;/code&gt; or a custom HEX color code such as &lt;code&gt;#9ACEA4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local file&lt;/strong&gt;: &lt;code&gt;/PATH_TO_LOCAL_FILE&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; When using a local file, make sure to put the image in a folder accessible from the App Sandbox. We recommend a subfolder in &lt;code&gt;/Library/Application Support/&lt;/code&gt; such as &lt;code&gt;/Library/Application Support/MyOrganization&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Color&lt;/h3&gt; &#xA;&lt;p&gt;All the circles around the symbols have the macOS accent color and will dynamically change with the user&#39;s setting in System Preferences --&amp;gt; General. If desired, this color can be customised matching your corporate colors. We recommend keeping the macOS accent color when the color of your choice is too light, as text will be difficult to read.&lt;/p&gt; &#xA;&lt;h3&gt;Diagnostic information&lt;/h3&gt; &#xA;&lt;p&gt;There are a couple of info items with diagnostics available to choose from. A total of four items will be displayed in the top four buttons. Available items:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Computer Name&lt;/strong&gt; (default): The current computer name will be displayed here. Especially helpful when your organisation has a difficult naming convention and users want to do things like AirDrop.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;macOS version&lt;/strong&gt; (default): The current version of macOS including major, minor and patch version as well as the marketing name. The marketing name will be easier to understand for your end users. A notification badge will be shown when an Apple Software Update is available. Clicking on this item shows more details and allows the user to initiate the update in System Settings.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Last Reboot&lt;/strong&gt; (default): The current uptime. When troubleshooting some issue, the first thing you would like to do is a reboot when the uptime is high. The optional preference key &lt;code&gt;UptimeDaysLimit&lt;/code&gt; can be used to configure the maximum amount of uptime days recommended by the organization. Exceeding this limit results in a badge counter with exclamation mark in the info item.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Storage Used&lt;/strong&gt; (default): The storage percentage used on the boot drive. When hovering with the mouse, the available storage is shown. Clicking on this item opens the macOS built-in Storage Management app. The optional preference key &lt;code&gt;StorageLimit&lt;/code&gt; can be used to configure the maximum percentage of used storage recommended by the organization. Exceeding this limit results in a badge counter with exclamation mark in the info item.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Network&lt;/strong&gt;: The active network interface type (Wi-Fi or Ethernet) along with the local IPv4 address. The icon indicates the connection type, Wi-Fi or Ethernet. Clicking on this item opens the Network preference pane in System Preferences. On macOS 13 or earlier, the current SSID name is shown. Due to privacy restrictions, macOS 14 and later show &#34;Wi-Fi&#34; instead of the SSID name.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mac Password&lt;/strong&gt;: Shows when the user&#39;s password expires and supports both local and Active Directory accounts by default. Alternative supported user sources are Jamf Connect, Kerberos SSO Extension and NoMAD. Shows a warning when the expiry reaches the value set in the optional key &lt;code&gt;PasswordExpiryLimit&lt;/code&gt;. The text label in the item can be modified using the preference key &lt;code&gt;PasswordLabel&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extension A and B&lt;/strong&gt;: Support App Extensions to show any information. The title, icon must be configured and optionally a link to open an App, URL, User Command or Privileged Command/Script. The value below the title of the Extension must be populated by setting a preference key using a script or command. Extensions can also trigger an orange notification badge alert in both the Extension and menu bar icon. See &lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#how-to-populate-support-app-extensions&#34;&gt;How to populate Support App Extensions&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;App, link or command shortcuts&lt;/h3&gt; &#xA;&lt;p&gt;The buttons in the 3rd and 4th row behave as shortcuts to applications or links. Both rows are flexible and can show two or three buttons. The total amount of configurable buttons is possible: 0, 2, 3, 4, 5, 6. You can configure five variables for every of these buttons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Title&lt;/strong&gt;: Button label&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Subtitle&lt;/strong&gt; (now shown if not configured): An extra string to display when the user hovers over the button&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Type&lt;/strong&gt;: The link type the button should open. The following action types are available:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;App&lt;/li&gt; &#xA;   &lt;li&gt;URL&lt;/li&gt; &#xA;   &lt;li&gt;Command&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Link&lt;/strong&gt;: Application, URL or command/script to execute:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;App: Bundle Identifier of the app&lt;/li&gt; &#xA;   &lt;li&gt;URL: Link to a webpage or other links that would normaly work like PROTOCOL://URL&lt;/li&gt; &#xA;   &lt;li&gt;Command: Zsh command or path to a script. Be aware that this will be executed as the user and therefore has its limitations&lt;/li&gt; &#xA;   &lt;li&gt;DistributedNotification: Zsh command or path to a script to run with elevated privileges (requires SupportHelper)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Symbol&lt;/strong&gt;: The symbol shown in the button, see the SF Symbols section how to use these symbols&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The rows with all configurable items enabled are shown in the screenshot below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Info items and Support App Extensions in &lt;strong&gt;GREEN&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Buttons in &lt;strong&gt;ORANGE&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/configurable_buttons_2.4.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;h3&gt;Footer Text&lt;/h3&gt; &#xA;&lt;p&gt;A footer text can optionally be used to put some additional text at the bottom of the Support App. This supports both text and Emoji. On macOS Monterey and higher, it supports Markdown. Use the preference key &lt;code&gt;FooterText&lt;/code&gt; to configure the footer.&lt;/p&gt; &#xA;&lt;h3&gt;Notification Icon&lt;/h3&gt; &#xA;&lt;p&gt;The icon shown in alerts and the about window can be modified by using the preference key &lt;code&gt;NotificationIcon&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See an example below:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/custom_alert.png&#34; width=&#34;350&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; When using a local file, make sure to put the image in a folder accessible from the App Sandbox. We recommend a subfolder in &lt;code&gt;/Library/Application Support/&lt;/code&gt; such as &lt;code&gt;/Library/Application Support/MyOrganization&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; When using an file from URL, the image will be downloaded once when the Support App opens and will be used for subsequent launches of the app, to avoid unnecessary downloads and use cases where the Mac has no internet connection at startup. To use a new icon, the URL must be changed for the Support App to trigger a new download.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Modifying the app icon when it is not running would compromise the App Sandbox and we decided not to implement this. We suggest hiding the app by running the following command: &lt;code&gt;sudo chflags hidden &#34;/Applications/Support.app&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Welcome Screen&lt;/h3&gt; &#xA;&lt;p&gt;An informational window can optionally be shown when the Support App is opened for the first time. It explains the key features to the user before all data is shown. This can be set using the preference key &lt;code&gt;ShowWelcomeScreen&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See an example below:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/welcome_screen.png&#34; width=&#34;500&#34;&gt; &#xA;&lt;h3&gt;Software Update integration&lt;/h3&gt; &#xA;&lt;p&gt;The Support App shows the current version of macOS and a notification badge if there is an update or upgrade available. Clicking the info item shows a popover with more details like the name of the update(s) available and also allows organizations to add a custom text. This can be used to provide more context and explain the user about the organization&#39;s update policy or anything else. The text string supports Markdown to style it further and include links. Please check &lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#built-in-local-variables&#34;&gt;Built-in local variables&lt;/a&gt; for an example using Markdown and variables.&lt;/p&gt; &#xA;&lt;p&gt;The popover allows the user to open System Settings and install the update or upgrade. If there is no update or upgrade available, the popover simply shows &#34;Your Mac is up to date&#34;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/software_update_integration.png&#34; width=&#34;500&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; When a deferral is set using the preference key &lt;code&gt;forceDelayedMajorSoftwareUpdates&lt;/code&gt; in the domain &lt;code&gt;com.apple.applicationaccess&lt;/code&gt;, major macOS updates will automatically be hidden indefinitely until the key is removed or set to &lt;code&gt;false&lt;/code&gt;. The amount of days configured for the deferral are ignored. Due to limitations and complexity, it is not supported to automatically show the macOS major update once the deferral days are passed. This behaviour replaces the &lt;code&gt;HideMajorUpdates&lt;/code&gt; key, previously available in version 2.5 and earlier. More info here: &lt;a href=&#34;https://developer.apple.com/documentation/devicemanagement/restrictions&#34;&gt;https://developer.apple.com/documentation/devicemanagement/restrictions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The configuration of the Support app is optimized for use with your MDM solution. The easiest way to configure the app is using a Configuration Profile so you can use whatever MDM solution you like, as long as it supports custom Configuration Profiles.&lt;/p&gt; &#xA;&lt;p&gt;Some preference keys like the icon and status bar icon point to a file location. Due to the sandboxed characteristic of the app, not all file locations are allowed. We suggest putting the files in a folder within Application Support such as &lt;code&gt;/Library/Application Support/Your Company/&lt;/code&gt; where the app can read the contents. Other supported file locations can be found in Apple’s documentation about App Sandbox: &lt;a href=&#34;https://developer.apple.com/library/archive/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW17&#34;&gt;https://developer.apple.com/library/archive/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW17&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Preference domain&lt;/strong&gt;: &lt;code&gt;nl.root3.support&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Below are all available preference keys:&lt;/p&gt; &#xA;&lt;h3&gt;General&lt;/h3&gt; &#xA;&lt;p&gt;All general settings&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Title&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Support&lt;/td&gt; &#xA;   &lt;td&gt;Text shown in the top left corner when the app opens.&lt;/td&gt; &#xA;   &lt;td&gt;“Your Company Name“, “IT Helpdesk“ etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Logo&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;App Icon&lt;/td&gt; &#xA;   &lt;td&gt;Remote URL, SF Symbol or path to the logo shown in the top right corner when the app opens. Scales to 48 points maximum height. A subfolder in &lt;code&gt;/Library/Application Support/&lt;/code&gt; is the recommended location due to sandboxing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/Library/Application Support/Your Company/logo.png&lt;/code&gt; or &lt;code&gt;https://domain.tld/url_to_image.png&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LogoDarkMode&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;App Icon&lt;/td&gt; &#xA;   &lt;td&gt;Remote URL, SF Symbol or path to the logo shown in the top right corner when the app opens for Dark Mode. Scales to 48 points maximum height. A subfolder in &lt;code&gt;/Library/Application Support/&lt;/code&gt; is the recommended location due to sandboxing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/Library/Application Support/Your Company/logo_darkmode.png&lt;/code&gt; or &lt;code&gt;https://domain.tld/url_to_image.png&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NotificationIcon&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;App Icon&lt;/td&gt; &#xA;   &lt;td&gt;Remote URL or path to a custom square image to be shown in alerts and the about window.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/Library/Application Support/Your Company/logo.png&lt;/code&gt; or &lt;code&gt;https://domain.tld/url_to_image.png&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StatusBarIcon&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Root3 Logo&lt;/td&gt; &#xA;   &lt;td&gt;Remote URL or path to the status bar icon shown in the menu bar. Recommended: PNG, 16x16 points. Icons larger than 22 points will automatically be resized to 16 points. A subfolder in &lt;code&gt;/Library/Application Support/&lt;/code&gt; is the recommended location due to sandboxing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/Library/Application Support/Your Company/statusbaricon.png&lt;/code&gt; or &lt;code&gt;https://domain.tld/url_to_image.png&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StatusBarIconSFSymbol&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Root3 Logo&lt;/td&gt; &#xA;   &lt;td&gt;Custom status bar icon using an SF Symbol. Ignored when StatusBarIcon is also set&lt;/td&gt; &#xA;   &lt;td&gt;“lifepreserver”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StatusBarIconNotifierEnabled&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Shows a small notification badge in the Status Bar Icon when an info items triggers a warning or notification&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UpdateText&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The text shown below the software update details popover&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Your organization requires you to update as soon as possible. &lt;a href=&#34;https://URL_TO_YOUR_UPDATE_POLICY&#34;&gt;More info...&lt;/a&gt;&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CustomColor&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;macOS Accent Color&lt;/td&gt; &#xA;   &lt;td&gt;Custom color for all symbols. Leave empty to use macOS Accent Color. We recommend not to use a very light color as text may become hard to read&lt;/td&gt; &#xA;   &lt;td&gt;HEX color in RGB format like &#34;#8cc63f&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CustomColorDarkMode&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;macOS Accent Color&lt;/td&gt; &#xA;   &lt;td&gt;Custom color for all symbols in Dark Mode. Leave empty to use macOS Accent Color or CustomColor if specified. We recommend not to use a very dark color as text may become hard to read&lt;/td&gt; &#xA;   &lt;td&gt;HEX color in RGB format like &#34;#8cc63f&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HideFirstRowInfoItems&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Hides the first row of info items.&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HideSecondRowInfoItems&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Hides the second row of info items.&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HideThirdRowInfoItems&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Hides the third row of info items.&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HideFirstRowButtons&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Hides the first row of configurable items.&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HideSecondRowButtons&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Hides the second row of configurable items.&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ErrorMessage&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Please contact IT support&lt;/td&gt; &#xA;   &lt;td&gt;Shown when clicking an action results in an error&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Please contact the servicedesk&#34;, &#34;Please contact COMPANY_NAME&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ShowWelcomeScreen&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Shows the welcome screen when the Support App is opened for the first time.&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FooterText&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Text shown at the bottom as footnote&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Provided by your &lt;strong&gt;IT department&lt;/strong&gt; with ❤️&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAtLogin&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Launch Support (non-PKG) automatically at login and keep it open (macOS 13 and higher). This setting is ignored if a legacy LaunchAgent is installed/active. Keep disabled if you don&#39;t want to open Support at login or use your own LaunchAgent&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Info items&lt;/h3&gt; &#xA;&lt;p&gt;Configuration of the top four items with diagnostic information.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InfoItemOne&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;ComputerName&lt;/td&gt; &#xA;   &lt;td&gt;Info item shown in the upper left corner&lt;/td&gt; &#xA;   &lt;td&gt;&#34;ComputerName&#34;, &#34;MacOSVersion&#34;, &#34;Network&#34;, &#34;Password&#34;, &#34;Storage&#34;, &#34;Uptime&#34;, &#34;ExtensionA&#34; or &#34;ExtensionB&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InfoItemTwo&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;MacOSVersion&lt;/td&gt; &#xA;   &lt;td&gt;Info item shown in the upper right corner&lt;/td&gt; &#xA;   &lt;td&gt;&#34;ComputerName&#34;, &#34;MacOSVersion&#34;, &#34;Network&#34;, &#34;Password&#34;, &#34;Storage&#34;, &#34;Uptime&#34;, &#34;ExtensionA&#34; or &#34;ExtensionB&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InfoItemThree&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Uptime&lt;/td&gt; &#xA;   &lt;td&gt;Info item shown in the second row left&lt;/td&gt; &#xA;   &lt;td&gt;&#34;ComputerName&#34;, &#34;MacOSVersion&#34;, &#34;Network&#34;, &#34;Password&#34;, &#34;Storage&#34;, &#34;Uptime&#34;, &#34;ExtensionA&#34; or &#34;ExtensionB&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InfoItemFour&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Storage&lt;/td&gt; &#xA;   &lt;td&gt;Info item shown in the second row right&lt;/td&gt; &#xA;   &lt;td&gt;&#34;ComputerName&#34;, &#34;MacOSVersion&#34;, &#34;Network&#34;, &#34;Password&#34;, &#34;Storage&#34;, &#34;Uptime&#34;, &#34;ExtensionA&#34; or &#34;ExtensionB&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InfoItemFive&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Info item shown in the third row left&lt;/td&gt; &#xA;   &lt;td&gt;&#34;ComputerName&#34;, &#34;MacOSVersion&#34;, &#34;Network&#34;, &#34;Password&#34;, &#34;Storage&#34;, &#34;Uptime&#34;, &#34;ExtensionA&#34; or &#34;ExtensionB&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InfoItemSix&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Info item shown in the third row right&lt;/td&gt; &#xA;   &lt;td&gt;&#34;ComputerName&#34;, &#34;MacOSVersion&#34;, &#34;Network&#34;, &#34;Password&#34;, &#34;Storage&#34;, &#34;Uptime&#34;, &#34;ExtensionA&#34; or &#34;ExtensionB&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UptimeDaysLimit&lt;/td&gt; &#xA;   &lt;td&gt;Integer&lt;/td&gt; &#xA;   &lt;td&gt;0 (Disabled)&lt;/td&gt; &#xA;   &lt;td&gt;Days of uptime after which a notification badge is shown, disabled by default&lt;/td&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PasswordType&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Apple&lt;/td&gt; &#xA;   &lt;td&gt;The account type to use with the Password info item: local user account (Apple), Jamf Connect, Kerberos SSO Extension or NoMAD&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Apple&#34;, &#34;JamfConnect&#34;, &#34;KerberosSSO&#34; or &#34;Nomad&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PasswordExpiryLimit&lt;/td&gt; &#xA;   &lt;td&gt;Integer&lt;/td&gt; &#xA;   &lt;td&gt;0 (Disabled)&lt;/td&gt; &#xA;   &lt;td&gt;Days until password expiry after which a notification badge is shown, disabled by default&lt;/td&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PasswordLabel&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Mac Password&lt;/td&gt; &#xA;   &lt;td&gt;Alternative text label shown in the Password info item&lt;/td&gt; &#xA;   &lt;td&gt;&#34;AD Password&#34;, &#34;Company Password&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StorageLimit&lt;/td&gt; &#xA;   &lt;td&gt;Integer&lt;/td&gt; &#xA;   &lt;td&gt;0 (Disabled)&lt;/td&gt; &#xA;   &lt;td&gt;Percentage of storage used after which a notification badge is shown, disabled by default&lt;/td&gt; &#xA;   &lt;td&gt;80&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;First row of configurable items: Item left&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowTitleLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Remote Support&lt;/td&gt; &#xA;   &lt;td&gt;The text shown in the button label.&lt;/td&gt; &#xA;   &lt;td&gt;“Share My Screen”, “TeamViewer“, “Software Updates“ “My core application” etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowSubtitleLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.&lt;/td&gt; &#xA;   &lt;td&gt;“Click to open“, “Share your screen“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowTypeLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;App&lt;/td&gt; &#xA;   &lt;td&gt;Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;App&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; or &lt;strong&gt;DistributedNotification&lt;/strong&gt; (Privileged command/script)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowLinkLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;com.apple.ScreenSharing&lt;/td&gt; &#xA;   &lt;td&gt;The Bundle Identifier of the App, URL or command to open.&lt;/td&gt; &#xA;   &lt;td&gt;“com.teamviewer.TeamViewerQS“ (App), “x-apple.systempreferences:com.apple.preferences.softwareupdate“ (URL)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowSymbolLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;cursorarrow&lt;/td&gt; &#xA;   &lt;td&gt;The SF Symbol shown in the button.&lt;/td&gt; &#xA;   &lt;td&gt;“binoculars.fill”, “cursorarrow.click.2” or any other SF Symbol. Please check the SF Symbols section.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;First row of configurable items: Item middle&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowTitleMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The text shown in the button label.&lt;/td&gt; &#xA;   &lt;td&gt;“Self Service“, “App Store“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowSubtitleMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.&lt;/td&gt; &#xA;   &lt;td&gt;“Click to open”, “Download apps“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowTypeMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;URL&lt;/td&gt; &#xA;   &lt;td&gt;Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;App&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; or &lt;strong&gt;DistributedNotification&lt;/strong&gt; (Privileged command/script)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowLinkMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The Bundle Identifier of the App, URL or command to open.&lt;/td&gt; &#xA;   &lt;td&gt;“com.jamfsoftware.selfservice.mac”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowSymbolMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The SF Symbol shown in the button.&lt;/td&gt; &#xA;   &lt;td&gt;“briefcase.fill”, “bag.circle”, “giftcard.fill”, “gift.circle” or any other SF Symbol. Please check the SF Symbols section.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;First row of configurable items: Item right&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowTitleRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Company Store&lt;/td&gt; &#xA;   &lt;td&gt;The text shown in the button label.&lt;/td&gt; &#xA;   &lt;td&gt;“Self Service“, “App Store“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowSubtitleRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.&lt;/td&gt; &#xA;   &lt;td&gt;“Click to open”, “Download apps“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowTypeRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;App&lt;/td&gt; &#xA;   &lt;td&gt;Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;App&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; or &lt;strong&gt;DistributedNotification&lt;/strong&gt; (Privileged command/script)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowLinkRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;com.apple.AppStore&lt;/td&gt; &#xA;   &lt;td&gt;The Bundle Identifier of the App, URL or command to open.&lt;/td&gt; &#xA;   &lt;td&gt;“com.jamfsoftware.selfservice.mac”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FirstRowSymbolRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;cart.fill&lt;/td&gt; &#xA;   &lt;td&gt;The SF Symbol shown in the button.&lt;/td&gt; &#xA;   &lt;td&gt;“briefcase.fill”, “bag.circle”, “giftcard.fill”, “gift.circle” or any other SF Symbol. Please check the SF Symbols section.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Second row of configurable items: Item left&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowTitleLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Support Ticket&lt;/td&gt; &#xA;   &lt;td&gt;The text shown in the button label.&lt;/td&gt; &#xA;   &lt;td&gt;“Create ticket”, “Open incident“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowSubtitleLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Subtitle text will replace the title when the user hovers over the button. Ignored if left empty.&lt;/td&gt; &#xA;   &lt;td&gt;“support.company.tld”, “Now”, “Create“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowTypeLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;URL&lt;/td&gt; &#xA;   &lt;td&gt;Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;App&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; or &lt;strong&gt;DistributedNotification&lt;/strong&gt; (Privileged command/script)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowLinkLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://yourticketsystem.tld&#34;&gt;https://yourticketsystem.tld&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Bundle Identifier of the App, URL or command to open.&lt;/td&gt; &#xA;   &lt;td&gt;“&lt;a href=&#34;https://yourticketsystem.tld%E2%80%9D&#34;&gt;https://yourticketsystem.tld”&lt;/a&gt;, “mailto:&lt;a href=&#34;mailto:support@company.tld&#34;&gt;support@company.tld&lt;/a&gt;”, “tel:+31000000000” or “smb://yourfileserver.tld”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowSymbolLeft&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;ticket&lt;/td&gt; &#xA;   &lt;td&gt;The SF Symbol shown in the button.&lt;/td&gt; &#xA;   &lt;td&gt;“lifepreserver”, “person.fill.questionmark” or any other SF Symbol. Please check the SF Symbols section.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Second row of configurable items: Item middle&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowTitleMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The text shown in the button label.&lt;/td&gt; &#xA;   &lt;td&gt;“Send email”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowSubtitleMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Subtitle text will replace the title when the user hovers over the button. Ignored if left empty.&lt;/td&gt; &#xA;   &lt;td&gt;“&lt;a href=&#34;mailto:support@company.tld&#34;&gt;support@company.tld&lt;/a&gt;”, “Now”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowTypeMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;URL&lt;/td&gt; &#xA;   &lt;td&gt;Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;App&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; or &lt;strong&gt;DistributedNotification&lt;/strong&gt; (Privileged command/script)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowLinkMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The Bundle Identifier of the App, URL or command to open.&lt;/td&gt; &#xA;   &lt;td&gt;“&lt;a href=&#34;https://yourticketsystem.tld%E2%80%9D&#34;&gt;https://yourticketsystem.tld”&lt;/a&gt;, “mailto:&lt;a href=&#34;mailto:support@company.tld&#34;&gt;support@company.tld&lt;/a&gt;”, “tel:+31000000000” or “smb://yourfileserver.tld”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowSymbolMiddle&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The SF Symbol shown in the button.&lt;/td&gt; &#xA;   &lt;td&gt;“paperplane”, “arrowshape.turn.up.right.fill” or any other SF Symbol. Please check the SF Symbols section.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Second row of configurable items: Item right&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowTitleRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;The text shown in the button label.&lt;/td&gt; &#xA;   &lt;td&gt;“Call Helpdesk“, “Phone“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowSubtitleRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Subtitle text will replace the title when the user hovers over the button. Ignored if left empty.&lt;/td&gt; &#xA;   &lt;td&gt;“+31 00 000 00 00”, “Now”, “Call“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowTypeRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;URL&lt;/td&gt; &#xA;   &lt;td&gt;Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;App&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; or &lt;strong&gt;DistributedNotification&lt;/strong&gt; (Privileged command/script)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowLinkRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;tel:+31000000000&lt;/td&gt; &#xA;   &lt;td&gt;The Bundle Identifier of the App, URL or command to open.&lt;/td&gt; &#xA;   &lt;td&gt;“&lt;a href=&#34;https://yourticketsystem.tld%E2%80%9D&#34;&gt;https://yourticketsystem.tld”&lt;/a&gt;, “mailto:&lt;a href=&#34;mailto:support@company.tld&#34;&gt;support@company.tld&lt;/a&gt;”, “tel:+31000000000” or “smb://yourfileserver.tld”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecondRowSymbolRight&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;phone&lt;/td&gt; &#xA;   &lt;td&gt;The SF Symbol shown in the button.&lt;/td&gt; &#xA;   &lt;td&gt;“iphone.homebutton”, “megaphone” or any other SF Symbol. Please check the SF Symbols section.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Advanced configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Support App Extensions&lt;/h3&gt; &#xA;&lt;p&gt;Support App Extensions enable administrators to create custom info items and populate those with output from scripts or commands. You can use your MDM solution to run scripts or commands to populate the Support App Extensions. Optionally we provide SupportHelper to run scripts or commands everytime the Support App popover appears to make sure data is up to date. Please read &lt;a href=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/#privileged-commands-or-scripts-supporthelper&#34;&gt;Privileged commands or scripts (SupportHelper)&lt;/a&gt; down below for more info.&lt;/p&gt; &#xA;&lt;p&gt;Below are the preference keys to enable Support App Extensions:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preference key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtensionTitleA&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The title shown in the extension.&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Last Check-In&#34;, &#34;Compliance&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtensionSymbolA&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The SF Symbol shown in the extension.&lt;/td&gt; &#xA;   &lt;td&gt;&#34;clock.badge.checkmark.fill&#34;,&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtensionTypeA&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;App&lt;/td&gt; &#xA;   &lt;td&gt;Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;App&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; or &lt;strong&gt;DistributedNotification&lt;/strong&gt; (Privileged command/script)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtensionLinkA&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The Bundle Identifier of the App, URL or command to open.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;defaults write /Library/Preferences/nl.root3.support.plist ExtensionLoadingA -bool true; /usr/local/bin/jamf policy; &lt;/code&gt;&lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/Extension%20Sample%20Scripts/jamf_last_check-in_time.zsh&#34;&gt;&lt;code&gt;/usr/local/bin/jamf_last_check-in_time.zsh&lt;/code&gt;&lt;/a&gt; or any other action you prefer by clicking on the Extension&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtensionTitleB&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The title shown in the extension.&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Account Privileges&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtensionSymbolB&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The SF Symbol shown in the extension.&lt;/td&gt; &#xA;   &lt;td&gt;&#34;wallet.pass.fill&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtensionTypeB&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;App&lt;/td&gt; &#xA;   &lt;td&gt;Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;App&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; or &lt;strong&gt;DistributedNotification&lt;/strong&gt; (Privileged command/script)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtensionLinkB&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The Bundle Identifier of the App, URL or command to open.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/Extension%20Sample%20Scripts/sap_privileges_change_permissions.zsh&#34;&gt;&lt;code&gt;/usr/local/bin/sap_privileges_change_permissions.zsh&lt;/code&gt;&lt;/a&gt; or any other action you prefer by clicking on the Extension&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OnAppearAction&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Path to script script or command to be executed when the Support App is opened by clicking on the menu bar item. The SupportHelper is required for this feature.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/usr/local/bin/runs_when_support_appears.zsh&lt;/code&gt; such as &lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/Extension%20Sample%20Scripts/user_permissions.zsh&#34;&gt;&lt;code&gt;/usr/local/bin/user_permissions.zsh&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/Extension%20Sample%20Scripts/jamf_last_check-in_time.zsh&#34;&gt;&lt;code&gt;/usr/local/bin/jamf_last_check-in_time.zsh&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/Extension%20Sample%20Scripts/mscp_compliance_status.sh&#34;&gt;&lt;code&gt;/usr/local/bin/mscp_compliance_status.sh&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; Both Support App Extensions have other preference keys &lt;code&gt;ExtensionValueA&lt;/code&gt; and &lt;code&gt;ExtensionValueB&lt;/code&gt; but those keys are meant to be dynamically set and changed by a script or command, not by MDM. Once set, the default placeholder will disappear and show the output from the preference keys.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;How to populate Support App Extensions&lt;/h4&gt; &#xA;&lt;p&gt;Support App Extensions must be populated by setting the value in a preference key within the preference domain &lt;code&gt;nl.root3.support&lt;/code&gt;. This can be achieved by running custom scripts from your MDM solution or using the &lt;code&gt;OnAppearAction&lt;/code&gt; combined with SupportHelper. This last option will allow you to update the Support App Extension values every time the Support App popover appears by running the script.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a custom script and populate the desired value by running the following command: &lt;code&gt;sudo defaults write /Library/Preferences/nl.root3.support.plist ExtensionValueA -string &#34;OUTPUT_VALUE_HERE&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the following command to show a placeholder while getting the value: &lt;code&gt;sudo defaults write /Library/Preferences/nl.root3.support.plist ExtensionValueA -string &#34;KeyPlaceholder&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the following command at the &lt;strong&gt;beginning of the script&lt;/strong&gt; to show a spinning indicator while getting the value: &lt;code&gt;sudo defaults write /Library/Preferences/nl.root3.support.plist ExtensionLoadingA -bool true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the following command at the &lt;strong&gt;end of the script&lt;/strong&gt; to stop the spinning indicator view: &lt;code&gt;sudo defaults write /Library/Preferences/nl.root3.support.plist ExtensionLoadingA -bool false&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Below a simple example script including loading effect and placeholder while loading&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#!/bin/zsh&#xA;&#xA;# Start spinning indicator&#xA;defaults write /Library/Preferences/nl.root3.support.plist ExtensionLoadingA -bool true&#xA;&#xA;# Show placeholder value while loading&#xA;defaults write /Library/Preferences/nl.root3.support.plist ExtensionValueA -string &#34;KeyPlaceholder&#34;&#xA;&#xA;# Keep loading effect active for 0.5 seconds&#xA;sleep 0.5&#xA;&#xA;# Get output value&#xA;command_output=$(PUT_COMMAND_TO_GET_OUTPUT_HERE)&#xA;&#xA;# Set output value&#xA;defaults write /Library/Preferences/nl.root3.support.plist ExtensionValueA -string &#34;${command_output}&#34;&#xA;&#xA;# Trigger an orange warning notification badge depending on the output you decide&#xA;if [[ &#34;${command_output}&#34; == &#34;OUTPUT_IS_BAD&#34; ]]; then&#xA; defaults write /Library/Preferences/nl.root3.support.plist ExtensionAlertA -bool true&#xA;else&#xA; defaults write /Library/Preferences/nl.root3.support.plist ExtensionAlertA -bool false&#xA;fi&#xA;&#xA;# Stop spinning indicator&#xA;defaults write /Library/Preferences/nl.root3.support.plist ExtensionLoadingA -bool false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; When using more than one Support App Extension combined with &lt;code&gt;OnAppearAction&lt;/code&gt;, it&#39;s best to update the values in one script instead of chaining multiple scripts to have the best experience&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Please do not forget to make the script executable: &lt;code&gt;sudo chmod +x /PATH/TO/SCRIPT&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Privileged commands or scripts with SupportHelper&lt;/h3&gt; &#xA;&lt;p&gt;To allow commands or scripts to be executed with root privileges, the SupportHelper is available optionally. This utility is built on Distributed Notifications to allow inter-app communication between the Support App and the SupportHelper. The Support App notifies SupportHelper and the message contains the preference key set in the Configuration Profile with the command or path to the script. SupportHelper listens for new messages using a LaunchDaemon and executes the command or script by requesting the command or path to the script from the Configuration Profile.&lt;/p&gt; &#xA;&lt;p&gt;Below an example to force a MDM check-in using SupportHelper and a custom script:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/generic_version_2.4_beta.gif&#34; width=&#34;800&#34;&gt; &#xA;&lt;p&gt;More information about Distributed Notifications: &lt;a href=&#34;https://developer.apple.com/documentation/foundation/distributednotificationcenter&#34;&gt;https://developer.apple.com/documentation/foundation/distributednotificationcenter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Use Cases&lt;/h4&gt; &#xA;&lt;p&gt;There are a couple of use cases SupportHelper can help with. For example run a command or script with root privileges:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every time the Support App popover appears, populate Support App Extensions using &lt;code&gt;OnAppearAction&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extension Attributes (Jamf Pro) by adding the commands to populate the Support App Extension to the EA: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Show device compliance information, such as the macOS Security Compliance Project Failed Results Count&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Executing a background task by clicking on a configurable button. Some examples: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Request an MDM check-in or inventory depending on your MDM solution&lt;/li&gt; &#xA;   &lt;li&gt;Requesting temporary admin permissions (for example in conjuntion with SAP Privileges)&lt;/li&gt; &#xA;   &lt;li&gt;Collecting logs such as &lt;code&gt;sudo sysdiagnose&lt;/code&gt; and sending the output somewhere else&lt;/li&gt; &#xA;   &lt;li&gt;Run device compliance remediation, such as the macOS Security Compliance Project Remediation Script&lt;/li&gt; &#xA;   &lt;li&gt;Any other action requiring root privileges, especially when users have standard permissions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;File locations&lt;/h4&gt; &#xA;&lt;p&gt;The SupportHelper installer places two files:&lt;/p&gt; &#xA;&lt;p&gt;LaunchDaemon: &lt;code&gt;/Library/LaunchDaemons/nl.root3.support.helper.plist&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Binary: &lt;code&gt;/usr/local/bin/SupportHelper&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Security considerations&lt;/h4&gt; &#xA;&lt;p&gt;As SupportHelper is able to execute scripts or commands with root privileges, it needs to be used responsibly. For most deployments, SupportHelper will not be needed and we recommend deploying the Support App without SupportHelper. If you&#39;re unsure or unfamiliar with this concept, DO NOT use SupportHelper. This utility is separated from the Support App to avoid compromising the app-sandbox as well.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Only values from a Configuration Profile will be used. Values set by &lt;code&gt;defaults write&lt;/code&gt; will be ignored as it imposes a security risk.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Variables&lt;/h3&gt; &#xA;&lt;p&gt;You can use variables to dynamically populate text fields, like the title, footer, buttons or any other text field. You have the option to use Local Variables built-in the Support App and are MDM agnostic, or use MDM specific variables if available in your MDM solution.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Using Built-in Local Variables or MDM variables depends on the use case you want to achieve or the available variables and you may use both if needed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Built-in local variables&lt;/h4&gt; &#xA;&lt;p&gt;The Support App supports local variables with device and user details and work independently from your MDM solution.&lt;/p&gt; &#xA;&lt;p&gt;The following built-in local variables are available with an example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalComputerName&lt;/strong&gt;: the current computer name/hostname&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalModelName&lt;/strong&gt;: the model name, like MacBook Air (M2, 2022). Apple Silicon only&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalModelShortName&lt;/strong&gt;: the short model name like MacBook or iMac&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalFullName&lt;/strong&gt;: the full name of the local macOS user account&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalUserName&lt;/strong&gt;: the username of the local macOS user account&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalMacosVersion&lt;/strong&gt;: the macOS version, like 13.4.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalMacosVersionName&lt;/strong&gt;: the macOS version marketing name, like Ventura or Sonoma&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalSerialNumber&lt;/strong&gt;: the devices serial number&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalIpAddress&lt;/strong&gt;: the current IP address&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;$LocalUpdatesAvailable&lt;/strong&gt;: the number of updates available&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set &lt;code&gt;title&lt;/code&gt; to: &#34;Hi $LocalFullName!&#34;&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;code&gt;FooterText&lt;/code&gt; to: &#34;Provided by IT with ❤️\nSerial Number: $LocalSerialNumber&#34;&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;code&gt;UpdateText&lt;/code&gt; including Markdown features to: &#34;Your $LocalModelShortName has **$LocalUpdatesAvailable update(s)** available. Please update as soon as possible.\n[More info](&lt;a href=&#34;https://LINK-TO-UPDATE-POLICY&#34;&gt;https://LINK-TO-UPDATE-POLICY&lt;/a&gt;)&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Built-in local variables are case &lt;strong&gt;sensitive&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;MDM variables&lt;/h4&gt; &#xA;&lt;h5&gt;Jamf Pro variables&lt;/h5&gt; &#xA;&lt;p&gt;When using Jamf Pro as the MDM solution, variables from Jamf Pro can also be used in the Configuration Profile values to dynamically populate text fields.&lt;/p&gt; &#xA;&lt;p&gt;Example&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set &lt;code&gt;title&lt;/code&gt; to &#34;Hi $FULLNAME!&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information about Jamf variables: &lt;a href=&#34;https://learn.jamf.com/bundle/jamf-pro-documentation-current/page/Computer_Configuration_Profiles.html&#34;&gt;https://learn.jamf.com/bundle/jamf-pro-documentation-current/page/Computer_Configuration_Profiles.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use SF Symbols&lt;/h2&gt; &#xA;&lt;p&gt;We choose to go all the way with SF Symbols as these good looking icons are designed by Apple and give the app a native look and feel. All icons have a symbol name which you can use in the Configuration Profile. As these icons are built into macOS, it automatically shows the correct icon.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download SF Symbols &lt;a href=&#34;https://developer.apple.com/sf-symbols/&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select the icon you’d like to use&lt;/li&gt; &#xA; &lt;li&gt;Copy the symbol name and paste into your Configuration Profile&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/how_to_use_sf_symbols.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;h2&gt;MDM deployment&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended to deploy the Configuration Profile first before installing the Support app.&lt;/p&gt; &#xA;&lt;h3&gt;Jamf Pro custom JSON schema&lt;/h3&gt; &#xA;&lt;p&gt;A JSON Schema for Jamf Pro is provided for easy configuration of all the preference keys without creating/modifying a custom Configuration Profile in XML format. Download the JSON file &lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/Jamf%20Pro%20Custom%20Schema/Jamf%20Pro%20Custom%20Schema.json&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;More information about the JSON Schema feature in Jamf Pro: &lt;a href=&#34;https://docs.jamf.com/technical-papers/jamf-pro/json-schema/10.19.0/Overview.html&#34;&gt;https://docs.jamf.com/technical-papers/jamf-pro/json-schema/10.19.0/Overview.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/root3nl/SupportApp/master/Screenshots/jamf_pro_custom_schema.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;h3&gt;Installer or app bundle&lt;/h3&gt; &#xA;&lt;p&gt;Depending on your preference or MDM solution you can use either the installer or zipped app bundle. The installer includes a LaunchAgent and is the recommended method to make sure the app stays open and relaunches automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Sample LaunchAgent&lt;/h3&gt; &#xA;&lt;p&gt;A sample LaunchAgent to always keep the app alive is provided &lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/LaunchAgent%20Sample/nl.root3.support.plist&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sample Configuration Profile&lt;/h3&gt; &#xA;&lt;p&gt;A sample Configuration Profile you can edit to your preferences is provided &lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/Configuration%20Profile%20Samples/Support%20App%20Configuration%20Sample.mobileconfig&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Background Item Management&lt;/h4&gt; &#xA;&lt;p&gt;A sample Configuration Profile is provided (both signed and unsigned) for macOS 13 and higher to avoid users from disabling the LaunchAgent in System Settings &amp;gt; General &amp;gt; Login Items. The profile uses the Root3 Team ID to only allow signed software from Root3. &lt;a href=&#34;https://github.com/root3nl/SupportApp/raw/master/Configuration%20Profile%20Samples/Background%20Item%20Management&#34;&gt;&lt;strong&gt;Samples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;Logs can be viewed from Console or Terminal by filtering the subsystems &lt;code&gt;nl.root3.support&lt;/code&gt; (Support App) and &lt;code&gt;nl.root3.support.helper&lt;/code&gt; (SupportHelper).&lt;/p&gt; &#xA;&lt;p&gt;An example to stream current logs in Terminal for troubleshooting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;log stream --debug --info --predicate &#39;subsystem contains &#34;nl.root3.support&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All available software updates (minor and major) are shown in the menu bar icon and the macOS version info item, even when the update is deferred using a Restrictions Configuration Profile from MDM. macOS collects all available updates in &lt;code&gt;/Library/Preferences/com.apple.SoftwareUpdate.plist&lt;/code&gt; regardless of any deferral configurations. Only major OS updates can be hidden using the &lt;code&gt;HideMajorUpdates&lt;/code&gt; key for macOS 12.3 and later.&lt;/li&gt; &#xA; &lt;li&gt;Buttons may keep a hovered state when mouse cursor moves fast: FB8212902 (&lt;strong&gt;resolved in macOS Monterey&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;When Jamf Connect is used as password type, clicking &#34;Change Now&#34; does not allow the user to open the Jamf Connect change password window, but instead triggers an alert. Jamf Connect does not support a URL Scheme for opening the Change Password window. Please upvote this feature request: &lt;a href=&#34;https://ideas.jamf.com/ideas/JN-I-16087&#34;&gt;https://ideas.jamf.com/ideas/JN-I-16087&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version 2.4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support App Extensions: introducing a new way to make your own custom info items and provide relevant information to your end users and create actions. Extensions can show anything you want and can be populated using scripts or commands, for example using your MDM solution. There is support for two Extensions to use in the info item rows.&lt;/li&gt; &#xA; &lt;li&gt;SupportHelper (separately available): there is now support for privileged scripts and commands to run directly from a button in the Support App while preserving the App Sandbox. An optional utility called SupportHelper will be required and handles the execution on behalf of the Support App. This is built on the Distributed Notifications framework to allow inter-app communication. SupportHelper is a separate installer and is not included in the standard Support App installer.&lt;/li&gt; &#xA; &lt;li&gt;Optional info items row: an extra row with info items or Extensions can now be enabled. When enabling this third row, it will show the Password and Network info items by default. The row can show any info item or Extension.&lt;/li&gt; &#xA; &lt;li&gt;New password sources: the Password info item can now be configured to show password expiry information from Jamf Connect, Apple’s Kerberos SSO Extension or NoMAD. Set preference key &#34;PasswordType&#34; to &#34;JamfConnect&#34;, &#34;KerberosSSO&#34; or &#34;Nomad&#34;.&lt;/li&gt; &#xA; &lt;li&gt;The title text now supports markdown just like the footer text.&lt;/li&gt; &#xA; &lt;li&gt;Items no longer show a hover effect when no link is configured, allowing buttons to be static without a clickable action. This applies to both configurable buttons and Extensions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version 2.3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Welcome Screen: an informational window can now optionally be shown when the Support App is opened for the first time. It explains the key features to the user.&lt;/li&gt; &#xA; &lt;li&gt;Preference key ‘StorageLimit’ added to configure the maximum percentage of used storage recommended by the organization. When the limit is reached, a badge counter with exclamation mark will be shown in the Storage tile. Also a little orange notification badge can overlay the menu bar icon when the preference key ‘StatusBarIconNotifierEnabled’ is set to ‘true’.&lt;/li&gt; &#xA; &lt;li&gt;The Network info item now shows either the current SSID or Ethernet as the title instead of ‘IP Address’.&lt;/li&gt; &#xA; &lt;li&gt;Preference key ‘NotificationIcon’ added to configure a custom square image to be shown in alerts and the about window.&lt;/li&gt; &#xA; &lt;li&gt;The notification badge in the StatusBarItem can now show either orange or red, depending on the current state. An available software update will overrule orange warnings and will show a red notification badge.&lt;/li&gt; &#xA; &lt;li&gt;A footer option is added to put some additional text at the bottom of the Support App. This supports both text and Emoji. On macOS Monterey and higher, it supports Markdown.&lt;/li&gt; &#xA; &lt;li&gt;French localization is added&lt;/li&gt; &#xA; &lt;li&gt;macOS Monterey compatibility&lt;/li&gt; &#xA; &lt;li&gt;Bug fixes and improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version 2.2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modulair info items: you can now configure any of the top four info items to any of the six available options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;IP Address (NEW)&lt;/li&gt; &#xA;   &lt;li&gt;Mac Password(NEW)&lt;/li&gt; &#xA;   &lt;li&gt;Computer Name&lt;/li&gt; &#xA;   &lt;li&gt;macOS Version&lt;/li&gt; &#xA;   &lt;li&gt;Last Reboot&lt;/li&gt; &#xA;   &lt;li&gt;Storage&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;IP Address is added as a configurable info item. It shows the current IPv4 address. The icon will show the connection type, Wi-Fi or Ethernet. Clicking the item will open Network in System Preferences.&lt;/li&gt; &#xA; &lt;li&gt;Mac Password is added as a configurable info item. It shows the days until the Mac password expires. Clicking the item will open Accounts in System Preferences. Local accounts and Active Directory accounts are supported. The text label in the item can be modified using the preference key ‘PasswordLabel’.&lt;/li&gt; &#xA; &lt;li&gt;Preference key ‘UptimeDaysLimit’ added to configure the maximum amount of uptime days recommended by the organization. When the limit is reached, a badge counter with exclamation mark will be shown in the Last Reboot tile. Also a little notification badge can overlay the menu bar icon when the preference key ‘StatusBarIconNotifierEnabled’ is set to ‘true’&lt;/li&gt; &#xA; &lt;li&gt;Preference key ‘PasswordExpiryLimit’ added to configure the minimum amount of days before the user should change the Mac password. When the limit is reached, a badge counter with exclamation mark will be shown in the Mac Password tile. Also a little notification badge can overlay the menu bar icon when the preference key ‘StatusBarIconNotifierEnabled’ is set to ‘true’.&lt;/li&gt; &#xA; &lt;li&gt;Flexible rows of for App, URL or Command: The middle button is now optional, offering a two or three button row. The middle button are enabled by setting the following keys: FirstRowTitleMiddle or SecondRowTitleMiddle. Together with HideFirstRow and HideSecondRow, the total amount of configurable buttons is possible: 0, 2, 3, 4, 5, 6. As a result, keys for the middle buttons no longer have default values and the app shows two buttons by default;&lt;/li&gt; &#xA; &lt;li&gt;Computer Name info item: The Mac model name and introduction year is shown when hovering over Computer Name. Clicking the item opens ‘About This Mac’&lt;/li&gt; &#xA; &lt;li&gt;Small UI tweaks for Dark Mode. Buttons now have a small border and are more distinguishable&lt;/li&gt; &#xA; &lt;li&gt;Performance improvements and bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version 2.1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Preference key LogoDarkMode is added to provide a separate logo for Dark Mode&lt;/li&gt; &#xA; &lt;li&gt;Preference key CustomColorDarkMode is added to set a separate custom color for Dark Mode&lt;/li&gt; &#xA; &lt;li&gt;The number of available Apple Software Updates will now be shown in a badge counter in the macOS version tile. Also a little notification badge can overlay the menu bar icon when the preference key ‘StatusBarIconNotifierEnabled’ is set to ‘true’&lt;/li&gt; &#xA; &lt;li&gt;Clicking on the macOS version tile will now open the Software Update preference pane in System Preferences&lt;/li&gt; &#xA; &lt;li&gt;Running basic zsh commands as the user can now be used as an action by setting the LinkType to “Command”&lt;/li&gt; &#xA; &lt;li&gt;Changes to the menu bar icon will now be observed and will automatically be applied without restarting the app&lt;/li&gt; &#xA; &lt;li&gt;Preference key ErrorMessage is added to provide a custom error message when clicking an App, URL or Command results in an error&lt;/li&gt; &#xA; &lt;li&gt;The app’s icon is changed to a more generic looking icon&lt;/li&gt; &#xA; &lt;li&gt;Default error message is improved&lt;/li&gt; &#xA; &lt;li&gt;Unified logging is implemented for the subsystem “nl.root3.support” to be able to capture errors when using commands or scripts&lt;/li&gt; &#xA; &lt;li&gt;Fixed a localization issue for error alerts&lt;/li&gt; &#xA; &lt;li&gt;Fixed an issue where some functions kept running in the background, causing more CPU time than required&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Privacy policy&lt;/h2&gt; &#xA;&lt;p&gt;We value your privacy. To protect your privacy, the Support App does not collect or send any personal data. The only outgoing network request is to send the computer&#39;s serial number to an Apple API to request the model&#39;s marketing name. This information is only kept within the app and is never collected elsewhere.&lt;/p&gt; &#xA;&lt;h2&gt;Note and disclaimer&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Root3 developed this application as a side project to add additional value for our customers&lt;/li&gt; &#xA; &lt;li&gt;The application can be used free of charge and is provided ‘as is’, without any warranty&lt;/li&gt; &#xA; &lt;li&gt;Comments and feature request are appreciated. Please file an issue on Github&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Jinxiansen/SwiftUI</title>
    <updated>2023-10-10T01:41:10Z</updated>
    <id>tag:github.com,2023-10-10:/Jinxiansen/SwiftUI</id>
    <link href="https://github.com/Jinxiansen/SwiftUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;`SwiftUI` Framework Learning and Usage Guide. 🚀&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/icon/banner.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Jinxiansen/SwiftUI&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platforms-iOS%20%7C%20tvOS%20%7C%20macOS%20%7C%20watchOS-green.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swift.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift-5.1-orange.svg?sanitize=true&#34; alt=&#34;Swift&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://developer.apple.com/xcode&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Xcode-11.0-blue.svg?sanitize=true&#34; alt=&#34;Xcode&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://developer.apple.com/macOS&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/macOS-15.0-blue.svg?sanitize=true&#34; alt=&#34;Xcode&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/licenses-MIT-red.svg?sanitize=true&#34; alt=&#34;MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This article refers to SwiftUI &lt;a href=&#34;https://github.com/Jinxiansen/SwiftUI/tree/doc&#34;&gt;apple example&lt;/a&gt; and records the results of the exploration here, I hope to be helpful to you.&lt;/p&gt; &#xA;&lt;p&gt;For the content described in this article, by default you have some experience based on Swift language development, so it will not describe every detail in detail; if you have doubts about Swift syntax, you can learn &lt;a href=&#34;https://swift.org&#34;&gt;Swift&lt;/a&gt; Grammar.&lt;/p&gt; &#xA;&lt;p&gt;When learning and using &lt;code&gt;SwiftUI&lt;/code&gt;, if you have any questions, you can join the SwiftUI QQ Group: &lt;strong&gt;18552966&lt;/strong&gt; to discuss communication.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/README_CN.md&#34;&gt;中文版🇨🇳&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Recommended Preview: &lt;a href=&#34;https://github.com/Jinxiansen/Windows11&#34;&gt;Windows 11&lt;/a&gt; desktop client implemented using &lt;strong&gt;SwiftUI&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/windows11/launchpad.png&#34;&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;⭐️ Stargazers over time&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Jinxiansen/SwiftUI&#34;&gt;&lt;img src=&#34;https://starchart.cc/Jinxiansen/SwiftUI.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;💻 Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 10.15&lt;/li&gt; &#xA; &lt;li&gt;Xcode 11.0&lt;/li&gt; &#xA; &lt;li&gt;iOS 13.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Directory：&lt;/h2&gt; &#xA;&lt;h3&gt;Basic View&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Text_D&#34;&gt;Text&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Text&#34;&gt;Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#TextField&#34;&gt;TextField&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#SecureField&#34;&gt;SecureField&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Image_D&#34;&gt;Image&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Image&#34;&gt;Image&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#WebImage&#34;&gt;WebImage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Button_D&#34;&gt;Button&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Button&#34;&gt;Button&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#PullDownButton&#34;&gt;PullDownButton&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#ItemBasedPopUpButton&#34;&gt;ItemBasedPopUpButton&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#NavigationButton&#34;&gt;NavigationButton&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#PresentationButton&#34;&gt;PresentationButton&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#EditButton&#34;&gt;EditButton&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#PasteButton&#34;&gt;PasteButton&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Picker_D&#34;&gt;Picker&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Picker&#34;&gt;Picker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#DatePicker&#34;&gt;DatePicker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Toggle&#34;&gt;Toggle&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Slider&#34;&gt;Slider&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Stepper&#34;&gt;Stepper&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#SegmentedControl&#34;&gt;SegmentedControl&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Special_D&#34;&gt;Special Views&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#WebView&#34;&gt;WebView&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#UIViewController&#34;&gt;UIViewController&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;Layout_D&#34;&gt;Layout&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Stacks_D&#34;&gt;Stacks&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#HStack&#34;&gt;HStack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#VStack&#34;&gt;VStack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#ZStack&#34;&gt;ZStack&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;List_D&#34;&gt;List&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#List&#34;&gt;List&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#ScrollView&#34;&gt;ScrollView&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#ForEach&#34;&gt;ForEach&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Container_D&#34;&gt;Container Views&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Group&#34;&gt;Group&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#GroupBox&#34;&gt;GroupBox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Section&#34;&gt;Section&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Form&#34;&gt;Form&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Architectural_D&#34;&gt;Architectural Views&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#NavigationView&#34;&gt;NavigationView&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#TabView&#34;&gt;TabView&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#HSplitView&#34;&gt;HSplitView&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#VSplitView&#34;&gt;VSplitView&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Alert_D&#34;&gt; Alert &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Alert&#34;&gt;Alert&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Modal&#34;&gt;Modal&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Popover&#34;&gt;Popover&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Sheet&#34;&gt;Sheet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#ActionSheet&#34;&gt;ActionSheet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;State_D&#34;&gt;State and Data Flow&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Bindings_D&#34;&gt; Bindings &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Binding&#34;&gt;Binding&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Data_D&#34;&gt; Data-Dependent Views &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#State&#34;&gt;State&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#ObjectBinding&#34;&gt;ObjectBinding&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#EnvironmentObject&#34;&gt;EnvironmentObject&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Environment_D&#34;&gt; Environment Values &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Environment&#34;&gt;Environment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#EnvironmentValues&#34;&gt;EnvironmentValues&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;ENavigation_D&#34;&gt; ENavigation Models &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#DynamicNavigationDestinationLink&#34;&gt;DynamicNavigationDestinationLink&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Preferences_D&#34;&gt; Preferences &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#LocalizedStringKey&#34;&gt;LocalizedStringKey&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Transactions_D&#34;&gt; Transactions &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Transaction&#34;&gt;Transaction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;Gestures_D&#34;&gt;Gestures&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;BasicGestures_D&#34;&gt; Basic Gestures &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#TapGesture&#34;&gt;TapGesture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#LongPressGesture&#34;&gt;LongPressGesture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#DragGesture&#34;&gt;DragGesture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#MagnificationGesture&#34;&gt;MagnificationGesture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#RotationGesture&#34;&gt;RotationGesture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Combined_D&#34;&gt; Combined Gestures &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#SequenceGesture&#34;&gt;SequenceGesture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#SimultaneousGesture&#34;&gt;SimultaneousGesture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#ExclusiveGesture&#34;&gt;ExclusiveGesture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span id=&#34;Custom_D&#34;&gt; Custom Gestures &lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#AnyGesture&#34;&gt;AnyGesture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2 id=&#34;Basic View&#34;&gt;Basic View&lt;/h2&gt; &#xA;&lt;h4 id=&#34;Text&#34;&gt;Text&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Text&lt;/code&gt; is used to display one or more lines of text content with the same effect as &lt;code&gt;UILabel&lt;/code&gt;, but it is even better.&lt;/p&gt; &#xA;&lt;p&gt;If you want to create &lt;code&gt;Text&lt;/code&gt;, just create it with &lt;code&gt;Text(&#34;SwiftUI&#34;)&lt;/code&gt;; With chained syntax, you can also add multiple attributes to the text, such as fonts, colors, shadows, spacing between top left and right, and so on.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Text(&#34;SwiftUI&#34;)&#xA;    .foregroundColor(.orange)&#xA;    .bold()&#xA;    .font(.system(.largeTitle))&#xA;    .fontWeight(.medium)&#xA;    .italic()&#xA;    .shadow(color: .black, radius: 1, x: 0, y: 2)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Text.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;HStack and VStack controls are used to host multiple views, as mentioned later.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Text_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;TextField&#34;&gt; TextField &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;TextField&lt;/code&gt; is used to add a normal input box, which is often used as a text input.&lt;/p&gt; &#xA;&lt;p&gt;Example：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;TextField(self.$name, placeholder: self.nameText, onEditingChanged: { changed in&#xA;    print(&#34;onEditing: \(changed)&#34;)&#xA;}) {&#xA;    print(&#34;userName: \(self.name)&#34;)&#xA;    self.endEditing(true)&#xA;}}&#xA;.padding(10)&#xA;.frame(height: 50)&#xA;.textFieldStyle(RoundedBorderTextFieldStyle())&#xA;.padding(EdgeInsets(top: 0, leading: 20, bottom: 0, trailing: 20))&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Field.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Text_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;SecureField&#34;&gt; SecureField &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;SecureField &lt;/code&gt; is generally used as a password input. It is used in the same way as &lt;code&gt;TextField&lt;/code&gt;. The example and the running effect are the same as &lt;code&gt;TextField&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4 id=&#34;Image&#34;&gt; Image &lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;Image&lt;/code&gt; control is used to display images, example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Image(&#34;icon&#34;)&#xA;    .resizable()&#xA;    .frame(width: 100,&#xA;           height: 100,&#xA;           alignment: .center)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Image.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Text_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;WebImage&#34;&gt; WebImage &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;webImage&lt;/code&gt; is used to download the web image, use the &lt;code&gt;URLSession&lt;/code&gt; to download the original &lt;code&gt;Image&lt;/code&gt; after successful download; you can also use &lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/(https://github.com/onevcat/Kingfisher)&#34;&gt;Kingfisher&lt;/a&gt; in the &lt;code&gt;downloadWebImage &lt;/code&gt; function .&lt;/p&gt; &#xA;&lt;p&gt;Example：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;var body: some View {&#xA;        Image(uiImage: self.uiImage ?? placeholderImage)&#xA;            .resizable()&#xA;            .onAppear(perform: downloadWebImage)&#xA;            .frame(width: 80,&#xA;                   height: 80,&#xA;                   alignment: .center)&#xA;            .onTapGesture {&#xA;                print(&#34;Tap &#34;)&#xA;        }&#xA;    }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/WebImage.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Text_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;Button&#34;&gt; Button &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Button&lt;/code&gt; is used to respond to click events.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Button(action: {&#xA;    print(&#34;Tap&#34;)&#xA;}) {&#xA;   Text(&#34;I&#39;m a Button&#34;)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Button.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Button_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;PullDownButton&#34;&gt; PullDownButton &lt;/h4&gt; &#xA;&lt;p&gt;Waiting for release.&lt;/p&gt; &#xA;&lt;h4 id=&#34;ItemBasedPopUpButton&#34;&gt; ItemBasedPopUpButton &lt;/h4&gt; &#xA;&lt;p&gt;Waiting for release.&lt;/p&gt; &#xA;&lt;h4 id=&#34;NavigationButton&#34;&gt; NavigationButton &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;NavigationButtonPage &lt;/code&gt; is used to push to the next navigation page.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;NavigationLink(destination: NavigationButtonPage()) {&#xA;            Text(&#34;NavigationButton&#34;).bold()&#xA;                .foregroundColor(.orange)&#xA;                .font(.largeTitle)&#xA;            }&#xA;    .navigationBarTitle(Text(&#34;Page&#34;))&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/NavigationButton.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Button_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;PresentationButton&#34; style=&#34;color:red&#34;&gt; PresentationButton is deprecated&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;PresentationButton&lt;/code&gt; &lt;del&gt;is used to pop up a page.&lt;/del&gt; has deprecated, please use &lt;code&gt;NavigationLink&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Button_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;EditButton&#34;&gt; EditButton &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;EditButton&lt;/code&gt; is used to trigger the editing state, just use the &lt;code&gt;navigationBarItems&lt;/code&gt; setting when using it.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;navigationBarItems(trailing: EditButton())&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/EditButton.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Button_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;PasteButton&#34;&gt; PasteButton &lt;/h4&gt; &#xA;&lt;p&gt;Waiting for release.&lt;/p&gt; &#xA;&lt;h4 id=&#34;Picker&#34;&gt; Picker &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Picker&lt;/code&gt; can customize the selector of the data source.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Picker(selection: $leftIndex, label: Text(&#34;Picker&#34;)) {&#xA;    ForEach(0..&amp;lt;leftSource.count) {&#xA;        Text(self.leftSource[$0]).tag($0)&#xA;    }&#xA;    }.frame(width: UIScreen.main.bounds.width/2)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Picker.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Picker_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;DatePicker&#34;&gt; DatePicker &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;DatePicker&lt;/code&gt; is used to select the absolute date of the control.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;DatePicker(selection: $server.date, &#xA;in: server.spaceDate, &#xA;displayedComponents: .date, label: {&#xA;    Text(&#34;&#34;)&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/DatePicker.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Picker_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;Toggle&#34;&gt; Toggle &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Toggle&lt;/code&gt; is used to switch the selected state, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Toggle(isOn: $isOn) {&#xA;    Text(&#34;State: \(self.isOn == true ? &#34;Open&#34;:&#34;open&#34;)&#34;)&#xA;}.padding(20)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Toggle.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Picker_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;Slider&#34;&gt; Slider &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Slider &lt;/code&gt; A control for selecting values from a finite range of values, example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Slider(value: $data.rating)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Slider.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Picker_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;Stepper&#34;&gt; Stepper &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Stepper &lt;/code&gt; is used to increase or decrease the value, example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Stepper(value: $value, step: 2, onEditingChanged: { c in&#xA;    print(c)&#xA;}) {&#xA;    Text(&#34;Stepper Value: \(self.value)&#34;)&#xA;    }.padding(50)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Stepper.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Picker_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;SegmentedControl&#34; style=&#34;color:red&#34;&gt;SegmentedControl is deprecated&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;SegmentedControl &lt;/code&gt; is used for segmentation condition selection, example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;SegmentedControl(selection: $currentIndex) {&#xA;    ForEach(0..&amp;lt;items.count) { index in&#xA;        Text(self.items[index]).tag(index)&#xA;    }&#xA;    }.tapAction {&#xA;        print(&#34;currentIndex: \(self.currentIndex)&#34;)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/SegmentedControl.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Picker_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;WebView&#34;&gt; WebView &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;WebView&lt;/code&gt; is used to display an open web page, example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;struct WebViewPage : UIViewRepresentable {&#xA;    func makeUIView(context: Context) -&amp;gt; WKWebView  {&#xA;        return WKWebView()&#xA;    }&#xA;    func updateUIView(_ uiView: WKWebView, context: Context) {&#xA;        let req = URLRequest(url: URL(string: &#34;https://www.apple.com&#34;)!)&#xA;        uiView.load(req)&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/WebView.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Special_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;UIViewController&#34;&gt; UIViewController &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;UIViewController&lt;/code&gt; is used to display the &lt;strong&gt;UIViewController&lt;/strong&gt; that opens &lt;strong&gt;UIKit&lt;/strong&gt; in &lt;strong&gt;SwiftUI&lt;/strong&gt; and opens the &lt;code&gt;SwiftUI&lt;/code&gt; View in &lt;strong&gt;UIViewController&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;First define:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;struct ControllerPage&amp;lt;T: UIViewController&amp;gt; : UIViewControllerRepresentable {&#xA;    &#xA;    typealias UIViewControllerType = UIViewController&#xA;    &#xA;    func makeUIViewController(context: UIViewControllerRepresentableContext&amp;lt;ControllerPage&amp;gt;) -&amp;gt; UIViewController {&#xA;        return T()&#xA;    }&#xA;    &#xA;    func updateUIViewController(_ uiViewController: UIViewController, context: UIViewControllerRepresentableContext&amp;lt;ControllerPage&amp;gt;) {&#xA;        debugPrint(&#34;\(#function)：\(type(of: T.self))&#34;)&#xA;    }&#xA;    &#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;NavigationButton(destination: ControllerPage&amp;lt;UIKitController&amp;gt;()) {&#xA;    PageRow(title: &#34;UIViewController&#34;,subTitle: &#34;Open UIViewController&#34;)&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/UIViewController.png&#34;&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/UIViewController2.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Special_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Layout&lt;/h3&gt; &#xA;&lt;h4 id=&#34;HStack&#34;&gt; HStack &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;HStack&lt;/code&gt; is used to arrange the subviews on a horizontal line.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;HStack {&#xA;    Text(&#34;made in China.&#34;)&#xA;    Divider() // Just add a line.&#xA;    Text(&#34;the People&#39;s Republic Of China.&#34;)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/HStack.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;VStack&#34;&gt; VStack &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;VStack&lt;/code&gt; is used to arrange the subviews on a vertical line.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;VStack {&#xA;    Text(&#34;made in China.&#34;)&#xA;    Divider() // Just add a line.&#xA;    Text(&#34;the People&#39;s Republic Of China.&#34;)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/VStack.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;ZStack&#34;&gt; ZStack &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;ZStack&lt;/code&gt; is used to override the subview, aligned on two axes.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;ZStack {&#xA;    Text(&#34;made in China.&#34;)&#xA;    Divider() // Just add a line.&#xA;    Text(&#34;the People&#39;s Republic Of China.&#34;)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/ZStack.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;List&#34;&gt; List &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;List&lt;/code&gt; list container to display a list of data.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;List(0..&amp;lt;5) { item in&#xA;    Text(&#34;Hello World !&#34;)&#xA;}.navigationBarTitle(Text(&#34;List&#34;), displayMode: .large)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/List.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;ScrollView&#34;&gt; ScrollView &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;ScrollView&lt;/code&gt; is a scroll view container.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;ScrollView {&#xA;    Text(&#34;SwiftUI&#34;).padding(20)&#xA;    Divider()&#xA;    Image(&#34;icon&#34;).resizable()&#xA;        .frame(width: 300, height: 300, alignment: .center)&#xA;    Divider()&#xA;    Text(&#34;Views and ... user interface.&#34;)&#xA;    }&#xA;    .border(Color.gray.gradient, width: 1)&#xA;            .cornerRadius(10)&#xA;            .padding(10)&#xA;            .navigationBarTitle(Text(&#34;ScrollView&#34;))&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/ScrollView.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;ForEach&#34;&gt; ForEach &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;ForEach&lt;/code&gt; is used to present a view based on a collection of existing data.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;let data = (0..&amp;lt;5)&#xA;var body: some View {&#xA;    ForEach(data) { e in&#xA;        Text(&#34;Hello \(e)&#34;)&#xA;            .bold()&#xA;            .font(.system(size: 25, design: .monospaced))&#xA;            .padding(5)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/ForEach.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;Group&#34;&gt; Group &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Group&lt;/code&gt; is used to aggregate multiple views, and the properties set on the Group will be applied to each child view.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Group {&#xA;        Text(&#34;Hello World !&#34;)&#xA;        Text(&#34;Hello World !&#34;)&#xA;      }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Group.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;GroupBox&#34;&gt; GroupBox &lt;/h4&gt; &#xA;&lt;p&gt;Waiting for release.&lt;/p&gt; &#xA;&lt;h4 id=&#34;Section&#34;&gt; Section &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Section&lt;/code&gt; is used to create the &lt;strong&gt;header/footer&lt;/strong&gt; view content, which is generally used in conjunction with the &lt;code&gt;List&lt;/code&gt; component.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Section(header: Text(&#34;I&#39;m header&#34;), footer: Text(&#34;I&#39;m footer&#34;)) {&#xA;    ForEach(0..&amp;lt;3) {&#xA;        Text(&#34;Hello \($0)&#34;)&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Section.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4 id=&#34;Form&#34;&gt; Form &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Form&lt;/code&gt; A container for grouping controls used for data entry, such as in settings or inspectors.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Form {&#xA;   TextField(&#34;First Name&#34;, text: $firstName)&#xA;   TextField(&#34;Last Name&#34;, text: $lastName)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Form.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;NavigationView&#34;&gt; NavigationView &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;NavigationView&lt;/code&gt; is used to create a view container that contains the top navigation bar.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;NavigationView {&#xA;            Text(&#34;🧚‍♂️🧚‍♀️🧜‍♂️🧜‍♀️🧞‍♂️🧞‍♀️&#34;).blur(radius: 5)&#xA;            Text(&#34;Swifter Swifter&#34;)&#xA;            .bold()&#xA;                .foregroundColor(.orange)&#xA;                .font(.largeTitle)&#xA;        }&#xA;    .navigationBarTitle(Text(&#34;NavigationView&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/NavigationView.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;TabView&#34;&gt; TabView &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;TabView&lt;/code&gt; is used to create a view container that contains the bottom ** TabBar**.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;TabView(selection: $index) {&#xA;    ForEach(0..&amp;lt;imgs.count) { item in&#xA;        TabItemPage(index: item)&#xA;            .tabItem{&#xA;                Image(self.imgs[item])&#xA;                Text(&#34;\(item)&#34;)&#xA;        }&#xA;        .tag(item)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/TabView.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;HSplitView&#34;&gt; HSplitView &lt;/h4&gt; &#xA;&lt;p&gt;Waiting for release.&lt;/p&gt; &#xA;&lt;h4 id=&#34;VSplitView&#34;&gt; VSplitView &lt;/h4&gt; &#xA;&lt;p&gt;Waiting for release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Layout_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;Alert&#34;&gt; Alert &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Alert&lt;/code&gt; is used to display a bullet reminder that needs to be associated with a trigger event.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;alert(isPresented: $showAlert, content: {&#xA;            Alert(title: Text(&#34;确定要支付这100000000美元吗？&#34;),&#xA;                  message: Text(&#34;请谨慎操作\n一旦确认，钱款将立即转入对方账户&#34;),&#xA;                  primaryButton: .destructive(Text(&#34;确认&#34;)) { print(&#34;转出中...&#34;) },&#xA;                  secondaryButton: .cancel())&#xA;        }).navigationBarTitle(Text(&#34;Alert&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/AlertPage.jpg&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Alert_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;ActionSheet&#34;&gt; ActionSheet &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;ActionSheet&lt;/code&gt; is used to pop up a selection box.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;ActionSheet(title: Text(&#34;Title&#34;),&#xA;            message: Text(&#34;Message&#34;),&#xA;            buttons:&#xA;    [.default(Text(&#34;Default&#34;), onTrigger: {&#xA;        print(&#34;Default&#34;)&#xA;        self.showSheet = false&#xA;    }),.destructive(Text(&#34;destructive&#34;), onTrigger: {&#xA;        print(&#34;destructive&#34;)&#xA;        self.showSheet = false&#xA;    }),.cancel({&#xA;        print(&#34;Cancel&#34;)&#xA;        self.showSheet = false&#xA;    })])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;usage：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;.actionSheet(isPresented: $showSheet, content: {sheet})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/ActionSheet.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Alert_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;Modal&#34;&gt; Modal &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Modal&lt;/code&gt; is used to pop up a view.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;Modal(Text(&#34;Modal View&#34;),onDismiss: {&#xA;    print(&#34;View Dismiss !&#34;)&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Modal.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Alert_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4 id=&#34;Popover&#34;&gt; Popover &lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Popover&lt;/code&gt; is used to pop up a view, see the results below.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;&#xA;.popover(isPresented: $showPop, content: {&#xA;                ImagePage()&#xA;        })&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;View running results&lt;/summary&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/images/example/Popover.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/#Alert_D&#34;&gt;🔝&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📎 About&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The code involved in the above example is in this repository code. It is recommended to download and run the view.&lt;/li&gt; &#xA; &lt;li&gt;If you have better usage and suggestions about SwiftUI, look forward to sharing it!&lt;/li&gt; &#xA; &lt;li&gt;If there are omissions and errors in the examples in this article, please create a &lt;a href=&#34;https://github.com/Jinxiansen/SwiftUI/issues/new&#34;&gt;&lt;strong&gt;Issue&lt;/strong&gt;&lt;/a&gt; !&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✉️ Contacts&lt;/h2&gt; &#xA;&lt;p&gt;email : &lt;a href=&#34;mailto:hi@jinxiansen.com&#34;&gt;hi@jinxiansen.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;微博 : &lt;a href=&#34;http://weibo.com/3205872327&#34;&gt;@晋先森&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;SwiftUI is released under the &lt;a href=&#34;https://raw.githubusercontent.com/Jinxiansen/SwiftUI/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;. See LICENSE for details.&lt;/p&gt;</summary>
  </entry>
</feed>