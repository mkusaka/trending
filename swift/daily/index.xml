<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-04T02:00:24Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ChimeHQ/ConcurrencyPlus</title>
    <updated>2022-07-04T02:00:24Z</updated>
    <id>tag:github.com,2022-07-04:/ChimeHQ/ConcurrencyPlus</id>
    <link href="https://github.com/ChimeHQ/ConcurrencyPlus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utilities for working with Swift Concurrency&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ChimeHQ/ConcurrencyPlus/actions&#34;&gt;&lt;img src=&#34;https://github.com/ChimeHQ/ConcurrencyPlus/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/BSD-3-Clause&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/ChimeHQ/ConcurrencyPlus&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/ChimeHQ/ConcurrencyPlus&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2FChimeHQ%2FConcurrencyPlus%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;Platforms&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ConcurrencyPlus&lt;/h1&gt; &#xA;&lt;p&gt;Utilities for working with Swift Concurrency&lt;/p&gt; &#xA;&lt;p&gt;This is a really small library with some type and extensions that may be useful when working with Swift&#39;s concurrency system. For API details, see the &lt;a href=&#34;https://swiftpackageindex.com/ChimeHQ/ConcurrencyPlus/main/documentation/concurrencyplus&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Types&lt;/h2&gt; &#xA;&lt;h3&gt;TaskQueue&lt;/h3&gt; &#xA;&lt;p&gt;Conceptually similar to a serial &lt;code&gt;DispatchQueue&lt;/code&gt;, but can accept async blocks. Unlike with an unstructured &lt;code&gt;Task&lt;/code&gt;, this makes it possible to control the ordering of events.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let queue = TaskQueue()&#xA;&#xA;queue.addOperation {&#xA;    await asyncFunction()&#xA;    await anotherAsyncFunction()&#xA;}&#xA;&#xA;// This can can also return the underlying Task,&#xA;// so you can cancel, or await a value&#xA;let task = await queue.addOperation {&#xA;    return await makeValue()&#xA;}&#xA;&#xA;let value = try await task.value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;TaskQueue&lt;/code&gt; also defines a single global queue, to enable this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Without .ordered, the execution order of these&#xA;// tasks is not well-defined.&#xA;Task.ordered {&#xA;    event1()&#xA;}&#xA;&#xA;Task.ordered(priority: .background) {&#xA;    event2()&#xA;}&#xA;&#xA;Task.ordered {&#xA;    event3()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CancellingContinuation&lt;/h3&gt; &#xA;&lt;p&gt;Just like a &lt;code&gt;CheckedContinuation&lt;/code&gt;, but will automatically resume by throwing if it is deallocated without being resumed manually. This is useful for situations where you cannot guarantee that a closure will be called. An example of such a situation is an XPC call.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;try await withCancellingContinuation({ continuation in&#xA;    funcThatMightNotInvokeItsCallback(completionHandler: { in&#xA;        continuation.resume()&#xA;    })&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Suggestions or Feedback&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;d love to hear from you! Get in touch via &lt;a href=&#34;https://twitter.com/chimehq&#34;&gt;twitter&lt;/a&gt;, an issue, or a pull request.&lt;/p&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://raw.githubusercontent.com/ChimeHQ/ConcurrencyPlus/main/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SwiftFiddle/swiftregex</title>
    <updated>2022-07-04T02:00:24Z</updated>
    <id>tag:github.com,2022-07-04:/SwiftFiddle/swiftregex</id>
    <link href="https://github.com/SwiftFiddle/swiftregex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Swift Regex is an online tool to learn, build and test Swift Regex Regex and Regex Builder.&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;a href=&#34;https://github.com/kishikawakatsumi/swiftregex/actions&#34;&gt; &lt;img src=&#34;https://github.com/kishikawakatsumi/swiftregex/workflows/CI/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/os-macOS/Linux-green.svg?style=flat&#34; alt=&#34;macOS/Linux&#34;&gt; &lt;a href=&#34;http://swift.org&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/swift-5.7-orange.svg?style=flat&#34; alt=&#34;Swift 5.7 Compatible&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/kishikawakatsumi/swiftregex/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-yellow.svg?style=flat&#34; alt=&#34;MIT&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Swift Regex&lt;/h1&gt; &#xA;&lt;p&gt;Regular Expression Tester with highlighting for Swift Regex. Quickly test and debug your regex and Regex Builder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swiftregex.com&#34;&gt;&lt;img width=&#34;1280&#34; alt=&#34;Screen Shot&#34; src=&#34;https://user-images.githubusercontent.com/40610/176885327-6b7b9b42-a9d8-4ac0-bf7d-4df6be021d89.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swiftregex.com&#34;&gt;&lt;img width=&#34;1280&#34; alt=&#34;Screen Shot&#34; src=&#34;https://user-images.githubusercontent.com/40610/176885334-dec898ce-a0b8-46a4-8ce0-81e8892d2e6e.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swiftregex.com&#34;&gt;https://swiftregex.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shadowsocks/ShadowsocksX-NG</title>
    <updated>2022-07-04T02:00:24Z</updated>
    <id>tag:github.com,2022-07-04:/shadowsocks/ShadowsocksX-NG</id>
    <link href="https://github.com/shadowsocks/ShadowsocksX-NG" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Next Generation of ShadowsocksX&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ShadowsocksX-NG&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shadowsocks/ShadowsocksX-NG/releases/latest&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shadowsocks/ShadowsocksX-NG/actions&#34;&gt;&lt;img src=&#34;https://github.com/shadowsocks/ShadowsocksX-NG/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next Generation of &lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-iOS&#34;&gt;ShadowsocksX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why a new implementation?&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s hard to maintain the original implementation as there is too much unused code in it. It also embeds the &lt;code&gt;ss-local&lt;/code&gt; source code. It&#39;s crazy to maintain dependencies of &lt;code&gt;ss-local&lt;/code&gt;. So it&#39;s hard to update the &lt;code&gt;ss-local&lt;/code&gt; version.&lt;/p&gt; &#xA;&lt;p&gt;Now I just copied the &lt;code&gt;ss-local&lt;/code&gt; from Homebrew. Run &lt;code&gt;ss-local&lt;/code&gt; executable as a Launch Agent in the background. So there is only some source code related to GUI left. Then I have rewrited the GUI code in Swift.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;p&gt;macOS 10.12+&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 12.5.1+&lt;/li&gt; &#xA; &lt;li&gt;CocoaPods 1.10.1+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://github.com/shadowsocks/ShadowsocksX-NG/releases/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ss-local&lt;/code&gt; from shadowsocks-libev 3.2.5.&lt;/li&gt; &#xA; &lt;li&gt;Support SIP003 plugins. Embed &lt;code&gt;kcptun&lt;/code&gt;, &lt;code&gt;simple-obfs&lt;/code&gt; and &lt;code&gt;v2ray-plugin&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Could update PAC by download GFW List from GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Share your server profiles by qrcode or url.&lt;/li&gt; &#xA; &lt;li&gt;Import server profile urls from pasteboard.&lt;/li&gt; &#xA; &lt;li&gt;Import server profile by scan QRCode on screen.&lt;/li&gt; &#xA; &lt;li&gt;Custom rules for PAC.&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;a href=&#34;https://shadowsocks.org/en/spec/AEAD-Ciphers.html&#34;&gt;AEAD Ciphers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HTTP Proxy by &lt;a href=&#34;http://www.privoxy.org/&#34;&gt;privoxy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Difference from original ShadowsocksX&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ss-local&lt;/code&gt; is run as a background service through launchd, not as an in-app process. So after you quit the app, the &lt;code&gt;ss-local&lt;/code&gt; might be still running.&lt;/p&gt; &#xA;&lt;p&gt;Added a manual mode which won&#39;t configure the system proxy settings, so that you could configure your apps to use the SOCKS5 proxy manually.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions must be available on a separately named branch based on the latest version of the main branch &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ref: &lt;a href=&#34;http://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;GitFlow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is released under the terms of the GPLv3.&lt;/p&gt;</summary>
  </entry>
</feed>