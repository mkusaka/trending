<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-23T01:36:10Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pujiaxin33/JXSegmentedView</title>
    <updated>2025-05-23T01:36:10Z</updated>
    <id>tag:github.com,2025-05-23:/pujiaxin33/JXSegmentedView</id>
    <link href="https://github.com/pujiaxin33/JXSegmentedView" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A powerful and easy to use segmented view (segmentedcontrol, pagingview, pagerview, pagecontrol, categoryview) (腾讯新闻、今日头条、QQ音乐、网易云音乐、京东、爱奇艺、腾讯视频、淘宝、天猫、简书、微博等所有主流APP分类切换滚动视图)&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/pujiaxin33/JXSegmentedView/master/Example/JXSegmentedViewExample/Image/JXSegmentedViewSmall.png&#34; width=&#34;467&#34; height=&#34;84&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pujiaxin33/JXSegmentedView/master/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-iOS-blue.svg?style=plastic&#34; alt=&#34;platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pujiaxin33/JXSegmentedView/master/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/language-swift-blue.svg?sanitize=true&#34; alt=&#34;languages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/JXSegmentedView&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/cocoapods-supported-4BC51D.svg?style=plastic&#34; alt=&#34;cocoapods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;carthage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pujiaxin33/JXSegmentedView/master/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/support-ios%208%2B-orange.svg?sanitize=true&#34; alt=&#34;support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/README-English.md&#34;&gt;There is an English document here, click to view&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A powerful and easy to use segmented view (segmentedcontrol, pagingview, pagerview, pagecontrol, categoryview) (腾讯新闻、今日头条、QQ音乐、网易云音乐、京东、爱奇艺、腾讯视频、淘宝、天猫、简书、微博等所有主流APP分类切换滚动视图)&lt;/p&gt; &#xA;&lt;p&gt;与其他的同类三方库对比的优点：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;指示器逻辑面向协议编程(Protocol Oriented Programming)，可以为所欲为的扩展指示器效果；&lt;/li&gt; &#xA; &lt;li&gt;提供更加全面丰富效果，几乎支持所有主流APP效果；&lt;/li&gt; &#xA; &lt;li&gt;使用子类化管理cell样式，逻辑更清晰，扩展更简单；&lt;/li&gt; &#xA; &lt;li&gt;列表支持整个生命周期方法；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Objective-C版本&lt;/h2&gt; &#xA;&lt;p&gt;如果你在找Objective-C版本，请点击查看 &lt;a href=&#34;https://github.com/pujiaxin33/JXCategoryView&#34;&gt;JXCategoryView&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;效果预览&lt;/h2&gt; &#xA;&lt;h3&gt;指示器效果预览&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;Gif&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Line固定宽度&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/LineFixedWidth.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Line与cell等宽&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/LineFlexibleWidth.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Line延长&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/LineLengthen.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Line延长+偏移&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/LineLengthenOffset.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RainbowLine🌈彩虹&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/LineRainbow.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DotLine点线&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/LineDot.gif&#34; width=&#34;334&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DoubleLine双线&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/LineDouble.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Triangle三角形底部&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/Triangle.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Triangle三角形顶部&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/TriangleTop.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Background椭圆形&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorBackground.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Background椭圆形+阴影&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorBackgroundShadow.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Background遮罩有背景&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorBackgroundMask.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Background遮罩无背景&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorBackgroundMaskPure.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Background渐变色&lt;br&gt;(渐变是固定的)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorBackgroundGradient.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gradient渐变色&lt;br&gt;(渐变随着位置变动)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorGradient.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Image底部&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorImageBottom.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Image背景&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorImageBG.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;混合使用&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Indicator/IndicatorMixed.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;以下指示器支持上下位置切换： &lt;code&gt;JXSegmentedIndicatorLineView&lt;/code&gt;、&lt;code&gt;JXSegmentedIndicatorRainbowLineView&lt;/code&gt;、&lt;code&gt;JXSegmentedIndicatorDotLineView&lt;/code&gt;、&lt;code&gt;JXSegmentedIndicatorDoubleLineView&lt;/code&gt;、&lt;code&gt;JXSegmentedIndicatorTriangleView&lt;/code&gt;、&lt;code&gt;JXSegmentedIndicatorImageView&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cell样式效果预览&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;Gif&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;颜色渐变&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/ColorGradient.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;文字渐变&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/TextGradient.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;大小缩放&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/ZoomOnly.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;大小缩放+字体粗细&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/ZoomStrokeWidth.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;大小缩放+点击动画&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/ZoomAnimation.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;大小缩放+cell宽度缩放&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/ZoomCellWidth.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TitleImage_Top&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/TitleImageTop.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TitleImage_Left&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/TitleImageLeft.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TitleImage_Bottom&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/TitleImageBottom.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TitleImage_Right&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/TitleImageRight.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TitleImage_只有图片&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/TitleImageOnlyImage.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TitleOrImage(高仿腾讯视频)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/TitleOrImage.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;数字&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/Number.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;红点&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/CellDot.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;多行富文本&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/TitleAttributed.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;多种cell混用&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Cell/MixedCell.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;特殊效果预览&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;Gif&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;数据源过少&lt;br&gt; isItemSpacingAverageEnabled为true&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Special/ItemAveTrue.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;数据源过少&lt;br&gt; isItemSpacingAverageEnabled为false&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Special/ItemAveFalse.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SegmentedControl&lt;br&gt;参考&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Example/JXSegmentedViewExample/Special/SegmentedControl/SegmentedControlViewController.swift&#34;&gt;&lt;code&gt;SegmentedControlViewController&lt;/code&gt;&lt;/a&gt;类&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Special/SegmentedControl.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;导航栏使用&lt;br&gt;参考&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Example/JXSegmentedViewExample/Special/SegmentedControl/NaviSegmentedControlViewController.swift&#34;&gt;&lt;code&gt;NaviSegmentedControlViewController&lt;/code&gt;&lt;/a&gt;类&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Special/NavigationBar.gif&#34; width=&#34;350&#34; height=&#34;80&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;嵌套使用&lt;br&gt;参考&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Example/JXSegmentedViewExample/Special/Nest/NestViewController.swift&#34;&gt;&lt;code&gt;NestViewController&lt;/code&gt;&lt;/a&gt;类&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Special/Nest.gif&#34; width=&#34;350&#34; height=&#34;200&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;个人主页(上下左右滚动、header悬浮)&lt;br&gt;参考&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Example/JXSegmentedViewExample/Special/Personal/PagingViewController.swift&#34;&gt;&lt;code&gt;PagingViewController&lt;/code&gt;&lt;/a&gt;类&lt;br&gt; 更多样式请点击查看&lt;a href=&#34;https://github.com/pujiaxin33/JXPagingView&#34;&gt;JXPagingView库&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Special/Personal.gif&#34; width=&#34;350&#34; height=&#34;567&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;数据加载&amp;amp;刷新&lt;br&gt;参考&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Example/JXSegmentedViewExample/Special/LoadData/WithListContainerView/LoadDataViewController.swift&#34;&gt;&lt;code&gt;LoadDataViewController&lt;/code&gt;&lt;/a&gt;类&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/pujiaxin33/JXExampleImages/raw/master/JXSegmentedView/Special/LoadData.gif&#34; width=&#34;350&#34; height=&#34;200&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;要求&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 9.0+&lt;/li&gt; &#xA; &lt;li&gt;Xcode 9+&lt;/li&gt; &#xA; &lt;li&gt;Swift 5.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;h3&gt;手动&lt;/h3&gt; &#xA;&lt;p&gt;Clone代码，把Sources文件夹拖入项目，就可以使用了；&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;target &#39;&amp;lt;Your Target Name&amp;gt;&#39; do&#xA;    pod &#39;JXSegmentedView&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;先执行&lt;code&gt;pod repo update&lt;/code&gt;，再执行&lt;code&gt;pod install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;在cartfile文件添加：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;pujiaxin33/JXSegmentedView&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后执行&lt;code&gt;carthage update --platform iOS&lt;/code&gt; 即可&lt;/p&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;1.在Package.swift文件添加如下代码:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dependencies: [&#xA;  .package(url: &#34;https://github.com/pujiaxin33/JXSegmentedView.git&#34;, from: &#34;1.2.1&#34;)&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.使用命令行构建:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ swift build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;JXSegmentedView&lt;/code&gt;使用示例&lt;/h3&gt; &#xA;&lt;p&gt;1.初始化JXSegmentedView&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;segmentedView = JXSegmentedView()&#xA;segmentedView.delegate = self&#xA;view.addSubview(self.segmentedView)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.初始化dataSource&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;dataSouce&lt;/code&gt;类型为&lt;code&gt;JXSegmentedViewDataSource&lt;/code&gt;协议。使用单独的类实现&lt;code&gt;JXSegmentedViewDataSource&lt;/code&gt;协议，实现代码隔离。选择不同的类赋值给&lt;code&gt;dataSource&lt;/code&gt;，就可以控制&lt;code&gt;JXSegmentedView&lt;/code&gt;显示效果，实现插件化。比如选择&lt;code&gt;JXSegmentedTitleImageDataSource&lt;/code&gt;类作为&lt;code&gt;dataSource&lt;/code&gt;就选择了文字图片的显示效果；选择&lt;code&gt;JXSegmentedNumberDataSource&lt;/code&gt;类作为&lt;code&gt;dataSource&lt;/code&gt;就选择了文字加数字的显示效果；&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;//segmentedDataSource一定要通过属性强持有，不然会被释放掉&#xA;segmentedDataSource = JXSegmentedTitleDataSource()&#xA;//配置数据源相关配置属性&#xA;segmentedDataSource.titles = [&#34;猴哥&#34;, &#34;青蛙王子&#34;, &#34;旺财&#34;]&#xA;segmentedDataSource.isTitleColorGradientEnabled = true&#xA;//关联dataSource&#xA;segmentedView.dataSource = self.segmentedDataSource&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3.初始化指示器indicator&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;let indicator = JXSegmentedIndicatorLineView()&#xA;indicator.indicatorWidth = 20&#xA;segmentedView.indicators = [indicator]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4.可选实现&lt;code&gt;JXSegmentedViewDelegate&lt;/code&gt;代理&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;//点击选中或者滚动选中都会调用该方法。适用于只关心选中事件，而不关心具体是点击还是滚动选中的情况。&#xA;func segmentedView(_ segmentedView: JXSegmentedView, didSelectedItemAt index: Int) {}&#xA;// 点击选中的情况才会调用该方法&#xA;func segmentedView(_ segmentedView: JXSegmentedView, didClickSelectedItemAt index: Int) {}&#xA;// 滚动选中的情况才会调用该方法&#xA;func segmentedView(_ segmentedView: JXSegmentedView, didScrollSelectedItemAt index: Int) {}&#xA;// 正在滚动中的回调&#xA;func segmentedView(_ segmentedView: JXSegmentedView, scrollingFrom leftIndex: Int, to rightIndex: Int, percent: CGFloat) {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;contentScrollView&lt;/code&gt;列表容器使用示例&lt;/h3&gt; &#xA;&lt;h4&gt;直接使用&lt;code&gt;UIScrollView&lt;/code&gt;自定义使用示例&lt;/h4&gt; &#xA;&lt;p&gt;因为代码比较分散，而且代码量也比较多，所有不推荐使用该方法。要正确使用需要注意的地方比较多，尤其对于刚接触iOS的同学来说不太友好。&lt;/p&gt; &#xA;&lt;p&gt;不直接贴代码了，具体点击&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Example/JXSegmentedViewExample/Special/LoadData/ListCustom/LoadDataCustomViewController.swift&#34;&gt;LoadDataCustomViewController&lt;/a&gt;查看源代码了解。&lt;/p&gt; &#xA;&lt;p&gt;作为替代，官方使用&amp;amp;强烈推荐使用下面这种方式👇👇👇。&lt;/p&gt; &#xA;&lt;h4&gt;配合&lt;code&gt;JXSegmentedListContainerView&lt;/code&gt;封装类使用示例&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;JXSegmentedListContainerView&lt;/code&gt;是对列表视图高度封装的类，具有以下优点：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;相对于直接使用&lt;code&gt;UIScrollView&lt;/code&gt;自定义，封装度高、代码集中、使用简单；&lt;/li&gt; &#xA; &lt;li&gt;列表懒加载：当显示某个列表的时候，才进行列表初始化。而不是一次性加载全部列表，性能更优；&lt;/li&gt; &#xA; &lt;li&gt;可以选用CollectionView作为列表容器，内存管理更加优秀；&lt;/li&gt; &#xA; &lt;li&gt;支持列表的整个生命周期方法调用；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;1.初始化&lt;code&gt;JXSegmentedListContainerView&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;listContainerView = JXSegmentedListContainerView(dataSource: self)&#xA;view.addSubview(self.listContainerView)&#xA;//关联listContainer&#xA;segmentedView.listContainer = listContainerView&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.实现&lt;code&gt;JXSegmentedListContainerViewDataSource&lt;/code&gt;代理方法&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;//返回列表的数量&#xA;func numberOfLists(in listContainerView: JXSegmentedListContainerView) -&amp;gt; Int {&#xA;    return segmentedDataSource.titles.count&#xA;}&#xA;//返回遵从`JXSegmentedListContainerViewListDelegate`协议的实例&#xA;func listContainerView(_ listContainerView: JXSegmentedListContainerView, initListAt index: Int) -&amp;gt; JXSegmentedListContainerViewListDelegate {&#xA;    return ListBaseViewController()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3.列表实现&lt;code&gt;JXSegmentedListContainerViewListDelegate&lt;/code&gt;代理方法&lt;/p&gt; &#xA;&lt;p&gt;不管列表是UIView还是UIViewController都可以，提高使用灵活性，更便于现有的业务接入。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;/// 如果列表是VC，就返回VC.view&#xA;/// 如果列表是View，就返回View自己&#xA;/// - Returns: 返回列表视图&#xA;func listView() -&amp;gt; UIView {&#xA;    return view&#xA;}&#xA;func listWillAppear() {}&#xA;func listDidAppear() {}&#xA;func listDidDisappear() {}&#xA;func listDidDisappear() {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;具体点击&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Example/JXSegmentedViewExample/Special/LoadData/WithListContainerView/LoadDataViewController.swift&#34;&gt;LoadDataViewController&lt;/a&gt;查看源代码了解&lt;/p&gt; &#xA;&lt;h3&gt;使用总结&lt;/h3&gt; &#xA;&lt;p&gt;因为&lt;code&gt;JXSegmentedView&lt;/code&gt;本身支持许多特性：指示器、cell样式、列表容器等，如何有序管理好代码成了一个难题。借助于协议、继承、封装类极大的简化了使用难度，而且提高了灵活性，扩展相当容易。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;核心主类：&lt;code&gt;JXSegmentedView&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;数据源&amp;amp;cell样式定制类：遵从&lt;code&gt;JXSegmentedViewDataSource&lt;/code&gt;协议的类&lt;/li&gt; &#xA; &lt;li&gt;指示器类：遵从&lt;code&gt;JXSegmentedIndicatorProtocol&lt;/code&gt;协议的&lt;code&gt;UIView&lt;/code&gt;类&lt;/li&gt; &#xA; &lt;li&gt;列表容器：官方推荐&lt;code&gt;JXSegmentedListContainerView&lt;/code&gt;类，特殊情况可以使用&lt;code&gt;UIScrollView&lt;/code&gt;自定义&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;指示器样式自定义&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需要继承&lt;code&gt;JXSegmentedIndicatorProtocol&lt;/code&gt;协议，点击参看&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Sources/Indicator/JXSegmentedIndicatorProtocol.swift&#34;&gt;JXSegmentedIndicatorProtocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;提供了继承&lt;code&gt;JXSegmentedIndicatorProtocol&lt;/code&gt;协议的基类&lt;code&gt;JXSegmentedIndicatorBaseView&lt;/code&gt;，里面提供了许多基础属性。点击参看&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Sources/Indicator/JXSegmentedIndicatorBaseView.swift&#34;&gt;JXSegmentedIndicatorBaseView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;自定义指示器，请参考已实现的指示器视图，多尝试、多思考，再有问题请提Issue或加入反馈QQ群&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;dataSource和Cell自定义&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需要继承&lt;code&gt;JXSegmentedViewDataSource&lt;/code&gt;协议，点击参看&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Sources/Core/JXSegmentedView.swift&#34;&gt;JXSegmentedViewDataSource&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;提供了继承&lt;code&gt;JXSegmentedViewDataSource&lt;/code&gt;协议的基类&lt;code&gt;JXSegmentedBaseDataSource&lt;/code&gt;，里面提供了许多基础属性。点击参看&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Sources/Core/JXSegmentedBaseDataSource.swift&#34;&gt;JXSegmentedBaseDataSource&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;任何自定义需求，dataSource、cell、itemModel三个都要子类化。即使某个子类cell什么事情都不做。用于维护继承链，以免以后子类化都不知道要继承谁了；&lt;/li&gt; &#xA; &lt;li&gt;dataSource和Cell自定义，请参考已实现的dataSource，多尝试、多思考，再有问题请提Issue或加入反馈QQ群&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;常用属性说明&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E.md&#34;&gt;常用属性说明文档地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;其他使用注意事项&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md&#34;&gt;其他使用注意事项文档总地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXPagingView&#34;&gt;个人主页效果&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E4%BE%A7%E6%BB%91%E6%89%8B%E5%8A%BF%E5%A4%84%E7%90%86%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3.md&#34;&gt;侧滑手势处理说明文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E5%88%97%E8%A1%A8%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%96%B9%E6%B3%95%E5%A4%84%E7%90%86.md&#34;&gt;列表的生命周期方法处理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#jxsegmentedlistcontainertype%E7%9A%84scrollview%E5%92%8Ccollectionview%E5%AF%B9%E6%AF%94&#34;&gt;JXSegmentedListContainerType的scrollView和collectionView对比&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#cell%E5%B7%A6%E6%BB%91%E5%88%A0%E9%99%A4&#34;&gt;cell左滑删除&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#jxsegmentedview%E7%8A%B6%E6%80%81%E5%88%B7%E6%96%B0&#34;&gt;JXSegmentedView状态刷新&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#reloaddatawithoutlistcontainer%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E&#34;&gt;reloadDataWithoutListContainer方法使用说明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#listcontainer%E6%88%96contentscrollview%E5%85%B3%E8%81%94%E8%AF%B4%E6%98%8E&#34;&gt;listContainer或contentScrollView关联说明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#%E7%82%B9%E5%87%BBitem%E4%B9%8B%E5%90%8Econtentscrollview%E5%88%87%E6%8D%A2%E6%95%88%E6%9E%9C&#34;&gt;点击Item之后contentScrollView切换效果&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#%E4%BB%A3%E7%A0%81%E9%80%89%E4%B8%AD%E6%8C%87%E5%AE%9Aindex&#34;&gt;代码选中指定index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#%E5%88%97%E8%A1%A8cell%E7%82%B9%E5%87%BB%E8%B7%B3%E8%BD%AC%E7%A4%BA%E4%BE%8B&#34;&gt;列表cell点击跳转示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#%E7%A6%81%E6%AD%A2%E5%88%97%E8%A1%A8%E5%AE%B9%E5%99%A8%E5%B7%A6%E5%8F%B3%E6%BB%91%E5%8A%A8&#34;&gt;禁止列表容器左右滑动&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#jxsegmentedviewcollectionview%E9%AB%98%E5%BA%A6%E5%8F%96%E6%95%B4%E8%AF%B4%E6%98%8E&#34;&gt;JXSegmentedView.collectionView高度取整说明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#%E5%AF%B9%E7%88%B6vc%E7%9A%84automaticallyadjustsscrollviewinsets%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE%E4%B8%BAfalse&#34;&gt;对父VC的automaticallyAdjustsScrollViewInsets属性设置为false&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#%E5%8D%95%E4%B8%AAcell%E5%88%B7%E6%96%B0&#34;&gt;单个cell刷新&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.md#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BB%BA%E8%AE%AE&#34;&gt;自定义建议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;重要版本更新记录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2019.10.9发布1.0.0版本，参考&lt;a href=&#34;https://github.com/pujiaxin33/JXSegmentedView/raw/master/Document/1.0.0%E7%89%88%E6%9C%AC%E8%BF%81%E7%A7%BB%E6%8C%87%E5%8D%97.md&#34;&gt;1.0.0版本迁移指南&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;补充&lt;/h2&gt; &#xA;&lt;p&gt;如果刚开始使用&lt;code&gt;JXSegmentedView&lt;/code&gt;，当开发过程中需要支持某种特性时，请务必先搜索使用文档或者源代码。确认是否已经实现支持了想要的特性。请别不要文档和源代码都没有看，就直接提问，这对于大家都是一种时间浪费。如果没有支持想要的特性，欢迎提Issue讨论，或者自己实现提一个PullRequest。&lt;/p&gt; &#xA;&lt;p&gt;该仓库保持及时更新，对于主流新的分类选择效果会第一时间支持。使用过程中，有任何建议或问题，可以通过以下方式联系我：&lt;br&gt; 邮箱：&lt;a href=&#34;mailto:317437084@qq.com&#34;&gt;317437084@qq.com&lt;/a&gt; &lt;br&gt; QQ群： 112440276&lt;/p&gt; &#xA;&lt;img src=&#34;https://note.youdao.com/yws/public/resource/c6fa96a65e424afcf7f6304ddf5c283a/xmlnote/8dc821d271c35845acff3f853f434bce/3913&#34; width=&#34;300&#34; height=&#34;411&#34;&gt; &#xA;&lt;p&gt;喜欢就star❤️一下吧&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;JXSegmentedView is released under the MIT license.&lt;/p&gt;</summary>
  </entry>
</feed>