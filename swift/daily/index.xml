<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-22T01:41:26Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Lakr233/BBackupp</title>
    <updated>2023-08-22T01:41:26Z</updated>
    <id>tag:github.com,2023-08-22:/Lakr233/BBackupp</id>
    <link href="https://github.com/Lakr233/BBackupp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated iOS Backup Robot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BBackupp&lt;/h1&gt; &#xA;&lt;p&gt;Backup iOS devices the way it should be. Sandboxed single binary for all your stuff with automation support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lakr233/BBackupp/main/Resource/Demo/Main.png&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Backup iOS/iPad/visionOS(maybe) devices&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Backup encryption&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Backup compression&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Backup to external drive&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Backup to network drive&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Wireless backup (after initial setup)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Unpack backup to iTunes/Finder for restore&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic backup when device is connected&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic backup when device is connected to power&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Backup notifications (needs setup with provider)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notifications&lt;/h2&gt; &#xA;&lt;p&gt;While you wait for the backup, we will send you notifications at beginning and end of the backup process. We will also send you a notification if the backup failed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lakr233/BBackupp/main/Resource/Demo/Notification.jpeg&#34; alt=&#34;Demo of notifications&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently we support the following notification providers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bark (&lt;a href=&#34;https://github.com/Finb/Bark&#34;&gt;https://github.com/Finb/Bark&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Lakr233/BBackupp/main/LICENSE&#34;&gt;License&lt;/a&gt; for details. May change over time.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;We are not responsible for any consequences resulting from the use of this program. Below, we list some potential occurrences for your awareness.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;App crashes.&lt;/li&gt; &#xA; &lt;li&gt;None-working backups.&lt;/li&gt; &#xA; &lt;li&gt;Computer crashes, freezes, or restarts.&lt;/li&gt; &#xA; &lt;li&gt;Computer chip damage.&lt;/li&gt; &#xA; &lt;li&gt;Screen glitches, white screens, black screens, flashing screens.&lt;/li&gt; &#xA; &lt;li&gt;Arriving late to work.&lt;/li&gt; &#xA; &lt;li&gt;Being scolded by your wife or daughter for something you wrote.&lt;/li&gt; &#xA; &lt;li&gt;Getting caught by your boss while slacking off.&lt;/li&gt; &#xA; &lt;li&gt;Facing dismissal from your job.&lt;/li&gt; &#xA; &lt;li&gt;Handling of leaked confidential information by the security department.&lt;/li&gt; &#xA; &lt;li&gt;Unfortunate events.&lt;/li&gt; &#xA; &lt;li&gt;Transforming into a cat.&lt;/li&gt; &#xA; &lt;li&gt;Earth exploding.&lt;/li&gt; &#xA; &lt;li&gt;Universe rebooting.&lt;/li&gt; &#xA; &lt;li&gt;Anything else that you can think of.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Copyright Â© 2023 Lakr Aream. All Rights Reserved.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Whisky-App/Whisky</title>
    <updated>2023-08-22T01:41:26Z</updated>
    <id>tag:github.com,2023-08-22:/Whisky-App/Whisky</id>
    <link href="https://github.com/Whisky-App/Whisky" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern Wine wrapper for macOS built with SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Whisky ðŸ¥ƒ&lt;/h1&gt; &#xA; &lt;p&gt;&lt;em&gt;Wine but a bit stronger&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/IsaacMarovitz/Whisky/SwiftLint.yml?style=for-the-badge&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://discord.gg/CsqAfs9CnM&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1115955071549702235?style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;img width=&#34;650&#34; alt=&#34;Screenshot 2023-03-31 at 17 14 00&#34; src=&#34;https://user-images.githubusercontent.com/42140194/229232488-dbad85f4-cecb-45e1-a182-f737fe9d2b1f.png&#34;&gt; &#xA;&lt;p&gt;Familiar UI that integrates seamlessly with macOS&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;img width=&#34;650&#34; alt=&#34;Screenshot 2023-03-31 at 17 14 22&#34; src=&#34;https://user-images.githubusercontent.com/42140194/229232557-07f78a79-f695-45f6-be45-15a5b2f3c053.png&#34;&gt; &#xA; &lt;p&gt;One-click bottle creation and management&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;img width=&#34;650&#34; alt=&#34;debug&#34; src=&#34;https://user-images.githubusercontent.com/42140194/229176642-57b80801-d29b-4123-b1c2-f3b31408ffc6.png&#34;&gt; &#xA;&lt;p&gt;Debug and profile with ease&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Whisky provides a clean and easy to use graphical wrapper for Wine built in native SwiftUI. You can make and manage bottles, install and run Windows apps and games, and unlock the full potential of your Mac with no technical knowledge required. Whisky is built on top of CrossOver 22.1.1, and Apple&#39;s own &lt;code&gt;Game Porting Toolkit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://github.com/Gcenx&#34;&gt;Gcenx&lt;/a&gt;, without your amazing work Whisky wouldn&#39;t be possible.&lt;/p&gt; &#xA;&lt;p&gt;Translated on &lt;a href=&#34;https://crowdin.com/project/whisky&#34;&gt;Crowdin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Homebrew&lt;/h1&gt; &#xA;&lt;p&gt;Whisky is on homebrew! Install with &lt;code&gt;brew install --cask whisky&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h3&gt;The direct download link for the toolkit doesn&#39;t work&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you&#39;re logged in to the Apple Developer website. If it still won&#39;t work use an &lt;a href=&#34;https://developer.apple.com/download/all/?q=game%20porting%20toolkit&#34;&gt;indirect link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Do I need to follow the steps in the toolkit&#39;s README?&lt;/h3&gt; &#xA;&lt;p&gt;No, you don&#39;t, in fact you shouldn&#39;t follow them.&lt;/p&gt; &#xA;&lt;h3&gt;My game isn&#39;t working&lt;/h3&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/IsaacMarovitz/Whisky/wiki/Game-Support&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hylo-lang/hylo</title>
    <updated>2023-08-22T01:41:26Z</updated>
    <id>tag:github.com,2023-08-22:/hylo-lang/hylo</id>
    <link href="https://github.com/hylo-lang/hylo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Hylo programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hylo&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; Val is getting renamed to Hylo. We apologize for any broken links and confusion this may cause. We&#39;re working on it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Hylo is a programming language that leverages &lt;a href=&#34;https://www.jot.fm/issues/issue_2022_02/article2.pdf&#34;&gt;mutable value semantics&lt;/a&gt; and &lt;a href=&#34;https://fm2gp.com&#34;&gt;generic programming&lt;/a&gt; for high-level systems programming.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the sources of the reference implementation of Hylo. Please visit our &lt;a href=&#34;https://hylo-lang.org&#34;&gt;website&lt;/a&gt; to get more information about the language itself.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This project is written in &lt;a href=&#34;https://swift.org&#34;&gt;Swift&lt;/a&gt; and distributed in the form of a package, built with &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt;. You will need Swift 5.7 or higher to build the compiler from sources.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note to Windows users: although this project is &lt;strong&gt;not&lt;/strong&gt; Unix-specific, Windows support is not guaranteed due to the instability of continuous integration (see &lt;a href=&#34;https://github.com/hylo-lang/hylo/issues/252&#34;&gt;https://github.com/hylo-lang/hylo/issues/252&lt;/a&gt; and &lt;a href=&#34;https://github.com/hylo-lang/hylo/issues/805&#34;&gt;https://github.com/hylo-lang/hylo/issues/805&lt;/a&gt;).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;You can skip directly to step 3 if you&#39;re doing development exclusively in a &lt;a href=&#34;https://raw.githubusercontent.com/hylo-lang/hylo/main/#building-a-hylo-devcontainer-with-vscode&#34;&gt;devcontainer&lt;/a&gt;. Otherwise:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install LLVM 15 or later on your system (e.g. &lt;code&gt;brew install llvm&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Have the above installation&#39;s &lt;code&gt;llvm-config&lt;/code&gt; in your &lt;code&gt;PATH&lt;/code&gt; (homebrew doesn&#39;t do that automatically; you&#39;d need &lt;code&gt;export PATH=&#34;$HOMEBREW_PREFIX/opt/llvm/bin:$PATH&#34;&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;In this project&#39;s root directory. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;swift package resolve&lt;/code&gt; to get the &lt;code&gt;make-pkgconfig&lt;/code&gt; tool.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;.build/checkouts/Swifty-LLVM/Tools/make-pkgconfig.sh llvm.pc&lt;/code&gt; to generate LLVM&#39;s library description&lt;/li&gt; &#xA;   &lt;li&gt;Either &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;code&gt;sudo mkdir -p /usr/local/lib/pkgconfig &amp;amp;&amp;amp; sudo mv llvm.pc /usr/local/lib/pkgconfig/&lt;/code&gt; (if you want to use Xcode)&lt;/li&gt; &#xA;     &lt;li&gt;or, &lt;code&gt;export PKG_CONFIG_PATH=$PWD&lt;/code&gt; in any shell where you want to work on this project&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Building the compiler&lt;/h3&gt; &#xA;&lt;p&gt;You may compile Hylo&#39;s compiler with the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;swift build -c release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That command will create an executable named &lt;code&gt;hc&lt;/code&gt; in &lt;code&gt;.build/release&lt;/code&gt;. That&#39;s Hylo&#39;s compiler!&lt;/p&gt; &#xA;&lt;h3&gt;Running the tests&lt;/h3&gt; &#xA;&lt;p&gt;To test your compiler,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;swift test -c release --parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building a Hylo Devcontainer with VSCode&lt;/h3&gt; &#xA;&lt;p&gt;While Hylo supports Linux natively, it also provides a &lt;a href=&#34;https://containers.dev/&#34;&gt;Devcontainer&lt;/a&gt; specification to develop for Linux on other platforms through a Docker container. Our &lt;a href=&#34;https://raw.githubusercontent.com/hylo-lang/hylo/main/.github/workflows/build-and-test.yml&#34;&gt;Linux CI&lt;/a&gt; uses this specification; this makes it possible to run Linux CI locally on other operating systems like macOS. While this specification should work for any IDE that supports devcontainers, keep in mind this team only uses VSCode.&lt;/p&gt; &#xA;&lt;p&gt;When opening the Hylo project in VSCode for the first time, you should be prompted to install the extension &lt;code&gt;recommendations&lt;/code&gt; in &lt;code&gt;.vscode/extensions.json&lt;/code&gt;. If you are not prompted, manually install the extensions by searching for the extension identifiers in the Extensions Marketplace.&lt;/p&gt; &#xA;&lt;p&gt;Then, build the Devcontainer with the VSCode command: &lt;code&gt;&amp;gt; Dev Containers: Rebuild and Reopen in Container&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, open a new integrated terminal in VSCode and confirm that the shell user is &lt;code&gt;vscode&lt;/code&gt;. You can run &lt;code&gt;whoami&lt;/code&gt; to check this.&lt;/p&gt; &#xA;&lt;p&gt;That integrated terminal is connected to the Devcontainer, as if by ssh. Use the &lt;code&gt;make-pkgconfig&lt;/code&gt; tool to configure LLVM&#39;s library description (see steps 3 in &lt;a href=&#34;https://raw.githubusercontent.com/hylo-lang/hylo/main/#prerequisites&#34;&gt;prerequisites&lt;/a&gt;). You can now run &lt;code&gt;swift test -c release&lt;/code&gt; to build and test for Linux.&lt;/p&gt; &#xA;&lt;p&gt;The Hylo repository files are mounted into the container, so any changes made locally (in VSCode or in other editors) will be automatically propagated into the Devcontainer. However, if you need to modifiy any of the files in the &lt;code&gt;.devcontainer&lt;/code&gt; directory, you will need to rebuild the container with &lt;code&gt;&amp;gt; Dev Containers: Rebuild and Reopen in Container&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Implementation status&lt;/h2&gt; &#xA;&lt;p&gt;This project is under active development; expect things to break and APIs to change.&lt;/p&gt; &#xA;&lt;p&gt;The compiler pipeline is organized as below. Incidentally, early stages of this pipeline are more stable than later ones. &lt;em&gt;(Note: completion percentages are very rough estimations.)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Parsing (100%)&lt;/li&gt; &#xA; &lt;li&gt;Type checking (50%)&lt;/li&gt; &#xA; &lt;li&gt;IR lowering (30%)&lt;/li&gt; &#xA; &lt;li&gt;IR analysis and transformations (30%)&lt;/li&gt; &#xA; &lt;li&gt;Machine code generation (20%)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can select how deep the compiler should go through the pipeline with the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--emit raw-ast&lt;/code&gt;: Only parse the input files and output an untyped AST as a JSON file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--typecheck&lt;/code&gt;: Run the type checker on the input.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--emit raw-ir&lt;/code&gt;: Lower the typed AST into Hylo IR and output the result in a file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--emit ir&lt;/code&gt;: Run mandatory IR passes and output the result in a file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--emit llvm&lt;/code&gt;: Transpile the program to LLVM and output LLVM IR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--emit intel-asm&lt;/code&gt;: Output Intel assembly for all user module(s).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--emit binary&lt;/code&gt; (default): Produce an executable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;hc --emit raw-ast -o main.json main.hylo&lt;/code&gt; will parse &lt;code&gt;main.hylo&lt;/code&gt;, write the untyped AST in &lt;code&gt;main.json&lt;/code&gt;, and exit the pipeline.&lt;/p&gt; &#xA;&lt;p&gt;A more detailed description of the current implementation status is available on our &lt;a href=&#34;https://www.hylo-lang.org/pages/implementation-status.html&#34;&gt;roadmap page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related video and audio&lt;/h2&gt; &#xA;&lt;h3&gt;Conference Talks&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Conference&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Year&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Speaker&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Title&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;C++Now&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022-05&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dave Abrahams&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=4Ri8bly-dJs&#34;&gt;Keynote: A Future of Value Semantics and Generic Programming Part 1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;C++Now&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022-05&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dave Abrahams &amp;amp; Dimi Racordon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=GsxYnEAZoNI&#34;&gt;Keynote: A Future of Value Semantics and Generic Programming Part 2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CppNorth&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022-07&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dave Abrahams&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KGL02mSaplE&#34;&gt;Lightning Talk: An Object Model for Safety and Efficiency by Definition&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CppCon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022-09&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dave Abrahams&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=QthAU-t3PQ4&#34;&gt;Value Semantics: Safety, Independence, Projection, &amp;amp; Future of Programming&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CppCon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022-09&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dimi Racordon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ws-Z8xKbP4w&#34;&gt;Val: A Safe Language to Interoperate with C++&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ACCU&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023-03&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lucian Radu Teodorescu&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uSG240pJGPM&#34;&gt;Concurrency Approaches: Past, Present, and Future&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Podcasts&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Podcast&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Episode&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Date&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Guest&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Title&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CppCast&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;352&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023-01-20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dimi Racordon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://cppcast.com/val-and-mutable-value-semantics&#34;&gt;Val and Mutable Value Semantics&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ADSP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;137&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023-07-07&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sean Parent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://adspthepodcast.com/2023/07/07/Episode-137.html&#34;&gt;Sean Parent on Hylo (vs Rust)!&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ADSP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;138&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023-07-14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sean Parent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://adspthepodcast.com/2023/07/14/Episode-138.html&#34;&gt;Sean Parent on Hylo! (Part 2)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to Hylo. Please read through &lt;a href=&#34;https://raw.githubusercontent.com/hylo-lang/hylo/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on how to get started.&lt;/p&gt; &#xA;&lt;p&gt;You can also get in touch with the community by joining our &lt;a href=&#34;https://join.slack.com/t/val-qs97696/shared_invite/zt-1z3dsblrq-y4qXfEE6wr6uMEJSN9uFyg&#34;&gt;Slack&lt;/a&gt; or one of our &lt;a href=&#34;https://teams.microsoft.com/l/meetup-join/19%3ameeting_YjZmOTJiMjUtNDZhNy00MTcxLWJjY2YtMTQ0ZGEzY2RkY2E4%40thread.v2/0?context=%7b%22Tid%22%3a%22fa7b1b5a-7b34-4387-94ae-d2c178decee1%22%2c%22Oid%22%3a%22a102b458-98db-4c5e-acad-cfa08a096ae3%22%7d&#34;&gt;Teams Meetings&lt;/a&gt; (ID: 298 158 296 273, Passcode: D2beKF) on Tuesdays and Thursdays, 12:30-1:00 Pacific time.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Hylo is distributed under the terms of the Apache-2.0 license. See &lt;a href=&#34;https://raw.githubusercontent.com/hylo-lang/hylo/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>