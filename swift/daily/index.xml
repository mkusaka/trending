<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-21T01:42:12Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>grofers/Squircles</title>
    <updated>2024-02-21T01:42:12Z</updated>
    <id>tag:github.com,2024-02-21:/grofers/Squircles</id>
    <link href="https://github.com/grofers/Squircles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Squircles&lt;/h1&gt; &#xA;&lt;h2&gt;Integration&lt;/h2&gt; &#xA;&lt;p&gt;To integrate Squircles into your app, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Import &lt;code&gt;ZSquirclesView&lt;/code&gt; folder into your project.&lt;/li&gt; &#xA; &lt;li&gt;For any view you wish to support a squircle shape, inherit it from &lt;code&gt;ZSquircleView&lt;/code&gt;. ZSquircleView is a subclass of UIView, providing all the functionalities of a standard UIView.&lt;/li&gt; &#xA; &lt;li&gt;Instead of using the traditional view.addSubview(...), utilize the following approach:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;view.squircleContentView.addSubview(containerView)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;When setting the corner radius, instead of &lt;code&gt;view.layer.cornerRadius = x&lt;/code&gt;, use the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;view.squircleCornerRadius = 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Voila, you implemented your first squicle view.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;In the case you are wondering how can one spot the difference between a normal view and squircle view, the following is an example.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/ZKanishkaGrofers/ZSquircleView/assets/135613655/36aa82e7-82f6-44cd-ba0c-acdc3fed5343&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Styling&lt;/h2&gt; &#xA;&lt;h3&gt;Border Configuration&lt;/h3&gt; &#xA;&lt;p&gt;To set the border of the squircle view, employ the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;view.borderConfig = ZSquircleView.BorderConfig(width: 1.0, color: .green)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shadow Configurations&lt;/h3&gt; &#xA;&lt;p&gt;To add shadow of the squircle view, employ the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;view.shadowConfig = ZSquircleView.ShadowConfig(color: .black, offset: CGSize(width: 0, height: 1), radius: 2, opacity: 0.08)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing Specific Corners&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to apply these properties to a specific corners, use the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Swift&#34;&gt;view.squircleCorners = .topCorners // in case of top corners &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available options for corners:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Top corners &lt;code&gt;.topCorners&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Top left &lt;code&gt;.topLeft&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Top right &lt;code&gt;.topRight&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bottom corners &lt;code&gt;.bottomCorners&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bottom left &lt;code&gt;.bottomLeft&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bottom right &lt;code&gt;.bottomRight&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;No corners &lt;code&gt;noCorners&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;All corners &lt;code&gt;allCorners&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have any feedback or suggestions, please create an issue or raise a pull request.&lt;/p&gt;</summary>
  </entry>
</feed>