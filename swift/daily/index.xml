<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-11T01:38:42Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>adamrushy/OpenAISwift</title>
    <updated>2022-12-11T01:38:42Z</updated>
    <id>tag:github.com,2022-12-11:/adamrushy/OpenAISwift</id>
    <link href="https://github.com/adamrushy/OpenAISwift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a wrapper library around the ChatGPT and OpenAI HTTP API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI API Client Library in Swift&lt;/h1&gt; &#xA;&lt;p&gt;This is a community-maintained library to access OpenAI HTTP API&#39;s. The full API docs can be found here: &lt;a href=&#34;https://beta.openai.com/api-docs&#34;&gt;https://beta.openai.com/api-docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation üíª&lt;/h2&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;Copy source files into your own project&lt;/p&gt; &#xA;&lt;h3&gt;Swift Package Manager (Preferred)&lt;/h3&gt; &#xA;&lt;p&gt;You can use Swift Package Manager to integrate the library by adding the following dependency in your Package.swift file or by adding directly within Xcode&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;.Package(url: &#34;https://github.com/adamrushy/OpenAISwift.git&#34;, majorVersion: 1)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example Usage ü§©&lt;/h2&gt; &#xA;&lt;p&gt;Import the module in your application.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;import OpenAISwift&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Set your API token from creating one &lt;a href=&#34;https://beta.openai.com/account/api-keys&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;let openAPI = OpenAISwift(authToken: &#34;TOKEN&#34;)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a call to the completions API, passing in a text prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;openAPI.sendCompletion(with: &#34;A random emoji&#34;) { result in // Result&amp;lt;OpenAI, OpenAIError&amp;gt;&#xA;    // switch on result to get the response or error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The API will return an &lt;code&gt;OpenAPI&lt;/code&gt; object containing the corresponding text items.&lt;/p&gt; &#xA;&lt;p&gt;You can also specify a different model to use for the completions. The &lt;code&gt;sendCompletion&lt;/code&gt; method uses the &lt;code&gt;text-davinci-003&lt;/code&gt; model by default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;openAPI.sendCompletion(with: &#34;A random emoji&#34;, model: .gpt3(.ada)) { result in // Result&amp;lt;OpenAI, OpenAIError&amp;gt;&#xA;    // switch on result to get the response or error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a full list of the supported models see &lt;a href=&#34;https://github.com/adamrushy/OpenAISwift/raw/main/Sources/OpenAISwift/Models/OpenAIModelType.swift&#34;&gt;OpenAIModelType.swift&lt;/a&gt;. For more information on the models see the &lt;a href=&#34;https://beta.openai.com/docs/models&#34;&gt;OpenAI API Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenAISwift also supports Swift concurrency so you can use Swift‚Äôs async/await syntax to fetch completions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;do {&#xA;&#x9;let result = try await openAPI.sendCompletion(with: &#34;A random emoji&#34;)&#xA;} catch {&#xA;&#x9;print(error.localizedDescription)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribute ‚ù§Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;I created this mainly for fun, we can add more endpoints and explore the library even further. Feel free to raise a PR to help grow the library.&lt;/p&gt; &#xA;&lt;h2&gt;Licence üì•&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT)&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2022 Adam Rush&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
</feed>