<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-12T01:47:06Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apple/swift-http-types</title>
    <updated>2023-07-12T01:47:06Z</updated>
    <id>tag:github.com,2023-07-12:/apple/swift-http-types</id>
    <link href="https://github.com/apple/swift-http-types" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Version-independent HTTP currency types for Swift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift HTTP Types&lt;/h1&gt; &#xA;&lt;p&gt;Swift HTTP Types are version-independent HTTP currency types designed for both clients and servers. They provide a common set of representations for HTTP requests and responses, focusing on modern HTTP features.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Add the following dependency clause to your Package.swift:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/apple/swift-http-types.git&#34;, from: &#34;0.1.0&#34;)&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;HTTPTypes&lt;/code&gt; library exposes the core HTTP currency types, including &lt;code&gt;HTTPRequest&lt;/code&gt;, &lt;code&gt;HTTPResponse&lt;/code&gt;, and &lt;code&gt;HTTPFields&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;HTTPTypesFoundation&lt;/code&gt; library provides conveniences for using new HTTP types with Foundation, including bidirectional convertors between the new types and Foundation URL types, and URLSession convenience methods with the new types.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;NIOHTTPTypes&lt;/code&gt;, &lt;code&gt;NIOHTTPTypesHTTP1&lt;/code&gt;, and &lt;code&gt;NIOHTTPTypesHTTP2&lt;/code&gt; libraries provide channel handlers for translating the version-specific NIO HTTP types with the new HTTP types. They can be found in &lt;a href=&#34;https://github.com/apple/swift-nio-extras&#34;&gt;&lt;code&gt;swift-nio-extras&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h4&gt;Create a request&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let request = HTTPRequest(method: .get, scheme: &#34;https&#34;, authority: &#34;www.example.com&#34;, path: &#34;/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create a request from a Foundation URL&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;var request = HTTPRequest(method: .get, url: URL(string: &#34;https://www.example.com/&#34;)!)&#xA;request.method = .post&#xA;request.path = &#34;/upload&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create a response&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let response = HTTPResponse(status: .ok)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Access and modify header fields&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;extension HTTPField.Name {&#xA;    static let myCustomHeader = Self(&#34;My-Custom-Header&#34;)!&#xA;}&#xA;&#xA;// Set&#xA;request.headerFields[.userAgent] = &#34;MyApp/1.0&#34;&#xA;request.headerFields[.myCustomHeader] = &#34;custom-value&#34;&#xA;request.headerFields[raw: .acceptLanguage] = [&#34;en-US&#34;, &#34;zh-Hans-CN&#34;]&#xA;&#xA;// Get&#xA;request.headerFields[.userAgent] // &#34;MyApp/1.0&#34;&#xA;request.headerFields[.myCustomHeader] // &#34;custom-value&#34;&#xA;request.headerFields[.acceptLanguage] // &#34;en-US, zh-Hans-CN&#34;&#xA;request.headerFields[raw: .acceptLanguage] // [&#34;en-US&#34;, &#34;zh-Hans-CN&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use with URLSession&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;var request = HTTPRequest(method: .post, url: URL(string: &#34;https://www.example.com/upload&#34;)!)&#xA;request.headerFields[.userAgent] = &#34;MyApp/1.0&#34;&#xA;let (responseBody, response) = try await URLSession.shared.upload(for: request, from: requestBody)&#xA;guard response.status == .created else {&#xA;    // Handle error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use with SwiftNIO&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;channel.configureHTTP2Pipeline(mode: .server) { channel in&#xA;    channel.pipeline.addHandlers([&#xA;        HTTP2FramePayloadToHTTPServerCodec(),&#xA;        ExampleChannelHandler()&#xA;    ])&#xA;}.map { _ in () }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;final class ExampleChannelHandler: ChannelDuplexHandler {&#xA;    typealias InboundIn = HTTPTypeServerRequestPart&#xA;    typealias OutboundOut = HTTPTypeServerResponsePart&#xA;&#xA;    func channelRead(context: ChannelHandlerContext, data: NIOAny) {&#xA;        switch unwrapInboundIn(data) {&#xA;        case .head(let request):&#xA;            // Handle request headers&#xA;        case .body(let body):&#xA;            // Handle request body&#xA;        case .end(let trailers):&#xA;            // Handle complete request&#xA;            let response = HTTPResponse(status: .ok)&#xA;            context.write(wrapOutboundOut(.head(response)), promise: nil)&#xA;            context.writeAndFlush(wrapOutboundOut(.end(nil)), promise: nil)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Developing HTTP Types&lt;/h2&gt; &#xA;&lt;p&gt;For the most part, HTTP Types development is as straightforward as any other SwiftPM project. With that said, we do have a few processes that are worth understanding before you contribute. For details, please see &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; in this repository.&lt;/p&gt; &#xA;&lt;p&gt;Please note that all work on HTTP Types is covered by the &lt;a href=&#34;https://github.com/apple/swift-http-types/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Swift HTTP Types Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mazzzystar/Queryable</title>
    <updated>2023-07-12T01:47:06Z</updated>
    <id>tag:github.com,2023-07-12:/mazzzystar/Queryable</id>
    <link href="https://github.com/mazzzystar/Queryable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run CLIP on iPhone to Search Photos.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Queryable&lt;/h1&gt; &#xA;&lt;p&gt;The open-source code of Queryable, an iOS app, utilizes the CLIP model to conduct offline searches in the &lt;code&gt;Photos&lt;/code&gt; album.&lt;/p&gt; &#xA;&lt;p&gt;Unlike the object recognition-based search feature built into the iOS gallery, Queryable allows you to use natural language statements, such as &lt;code&gt;a brown dog sitting on a bench&lt;/code&gt;, to search your gallery. It operates offline, ensuring that your album privacy won&#39;t be leaked to anyone, including Apple/Google.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://queryable.app/&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://apps.apple.com/us/app/queryable-find-photo-by-text/id1661598353?platform=iphone&#34;&gt;App Store&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mazzzystar/Queryable/assets/6824141/4f3611a3-4fa6-4a06-8079-57d82e4c8bdd&#34;&gt;https://github.com/mazzzystar/Queryable/assets/6824141/4f3611a3-4fa6-4a06-8079-57d82e4c8bdd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Process all photos in your album through the CLIP Image Encoder to create a set of local image vectors.&lt;/li&gt; &#xA; &lt;li&gt;When a new text query is inputted, convert the text into a text vector using the Text Encoder.&lt;/li&gt; &#xA; &lt;li&gt;Compare the text vector with all the stored image vectors, evaluating the level of similarity between the text query and each image.&lt;/li&gt; &#xA; &lt;li&gt;Sort and return the top K most similar results.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The process is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mazzzystar.github.io/images/2022-12-28/Queryable-flow-chart.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more details, please refer to my article &lt;a href=&#34;https://mazzzystar.github.io/2022/12/29/Run-CLIP-on-iPhone-to-Search-Photos/&#34;&gt;Run CLIP on iPhone to Search Photos&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run on Xcode&lt;/h2&gt; &#xA;&lt;p&gt;Download the &lt;code&gt;ImageEncoder_float32.mlmodelc&lt;/code&gt; and &lt;code&gt;TextEncoder_float32.mlmodelc&lt;/code&gt; from &lt;a href=&#34;https://drive.google.com/drive/folders/12ze3UcqrXt9qeySGh_j_zWE-PWRDTzJv?usp=drive_link&#34;&gt;Google Drive&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Clone this repo, put the downloaded models below &lt;code&gt;CoreMLModels/&lt;/code&gt; path and run Xcode, it should work.&lt;/p&gt; &#xA;&lt;h2&gt;Core ML Export&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to run Queryable, you can skip this step and directly use the export model from &lt;a href=&#34;https://drive.google.com/drive/folders/12ze3UcqrXt9qeySGh_j_zWE-PWRDTzJv?usp=drive_link&#34;&gt;Google Drive&lt;/a&gt;. If you wish to implement Queryable that supports your own native language, or do some model quantization/acceleration work, here are some guidelines.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The trick is to separate the &lt;code&gt;TextEncoder&lt;/code&gt; and &lt;code&gt;ImageEncoder&lt;/code&gt; at the architecture level, and then load the model weights individually. Queryable uses the OpenAI &lt;a href=&#34;https://github.com/openai/CLIP&#34;&gt;ViT-B/32&lt;/a&gt; model, and I wrote a &lt;a href=&#34;https://github.com/mazzzystar/Queryable/raw/main/PyTorch2CoreML.ipynb&#34;&gt;Jupyter notebook&lt;/a&gt; to demonstrate how to separate, load, and export the Core ML model. The export results of the ImageEncoder&#39;s Core ML have a certain level of precision error, and more appropriate normalization parameters may be needed.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Disclaimer: I am not a professional iOS engineer, please forgive my poor Swift code. You may focus only on the loading, computation, storage, and sorting of the model.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can apply Queryable to your own business product, but I don&#39;t recommend modifying the appearance directly and then listing it on the App Store. If you are interested in optimizing certain aspects, feel free to submit a PR (Pull Request).&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions/suggestions, here are some contact methods: &lt;a href=&#34;https://discord.com/invite/R3wNsqq3v5&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/immazzystar&#34;&gt;Twitter&lt;/a&gt; | &lt;a href=&#34;https://www.reddit.com/r/Queryable/&#34;&gt;Reddit: r/Queryable&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2023 Ke Fang&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>baronha/ting</title>
    <updated>2023-07-12T01:47:06Z</updated>
    <id>tag:github.com,2023-07-12:/baronha/ting</id>
    <link href="https://github.com/baronha/ting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🍞 Flexible and customizable React Native toast/alert notifications with support for positioning, custom rendering, click handlers, and duration control. Written in Swift and Kotlin&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%8D%9E_Ting-FDC753?style=for-the-badge&#34; alt=&#34;Logo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E2%9A%A1%EF%B8%8F_1.0.3-333333?style=for-the-badge&#34; alt=&#34;1.0.3&#34;&gt; &lt;a href=&#34;https://buymeacoffee.com/baronha&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Buy_Me_A_Coffee-FFDD00?style=for-the-badge&amp;amp;logo=buy-me-a-coffee&amp;amp;logoColor=black&#34; alt=&#34;BuyMeACoffee&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ko-fi.com/baoha&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Ko--fi-F16061?style=for-the-badge&amp;amp;logo=ko-fi&amp;amp;logoColor=white&#34; alt=&#34;Kofi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/baronha/ting/main/resources/Ting.png&#34; width=&#34;100%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Turbo_Native_Modules-0052CC?style=for-the-badge&#34; alt=&#34;Turbo Native Modules&#34;&gt; &lt;a href=&#34;https://developer.apple.com/swift/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift-FA7343?style=for-the-badge&amp;amp;logo=swift&amp;amp;logoColor=white&#34; alt=&#34;Swift&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Kotlin-0095D5?&amp;amp;style=for-the-badge&amp;amp;logo=kotlin&amp;amp;logoColor=white&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/ting-4?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-ting-4&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=403758&amp;amp;theme=light&#34; alt=&#34;Ting - React Native Toast | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🍞 Flexible and customizable React toast notifications with support for positioning, custom rendering, click handlers, and duration control.&lt;/p&gt; &#xA;&lt;h2&gt;Video Demo 📺&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://img.shields.io/badge/iOS-000000?style=for-the-badge&amp;amp;logo=ios&amp;amp;logoColor=white&#34; alt=&#34;ios&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://img.shields.io/badge/Android-3DDC84?style=for-the-badge&amp;amp;logo=android&amp;amp;logoColor=white&#34; alt=&#34;android&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Modal&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;video src=&#34;https://github.com/baronha/ting/assets/23580920/15f5677a-d041-499b-99e8-75c9c9c511c9&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;video src=&#34;https://github.com/baronha/ting/assets/23580920/751a7559-0150-46a2-a573-b2b3423e6e29&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;video src=&#34;https://github.com/baronha/ting/assets/23580920/b5f4d555-8fb1-4ffe-901c-268099f16f03&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add @baronha/ting&#xA;or&#xA;npm i @baronha/ting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to use Expo. &lt;a href=&#34;https://github.com/nandorojo/burnt&#34;&gt;Burnt&lt;/a&gt; is the solution for you.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.apple.com/ios&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/iOS-000000?style=for-the-badge&amp;amp;logo=ios&amp;amp;logoColor=white&#34; alt=&#34;iOS&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;New Architecture&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ios &amp;amp;&amp;amp; RCT_NEW_ARCH_ENABLED=1 bundle exec pod install --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Older&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ios &amp;amp;&amp;amp; pod install --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%8D%9E_Toast-A0E7B0?style=for-the-badge&#34; alt=&#34;Toast&#34;&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { toast } from &#39;@baronha/ting&#39;;&#xA;// ...&#xA;const options = {&#xA;  title: &#39;Done 😎&#39;,&#xA;  message: &#39;Successful!!&#39;,&#xA;};&#xA;&#xA;toast(options); // easy to use&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Customize Icon&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { toast } from &#39;@baronha/ting&#39;;&#xA;// ...&#xA;const options = {&#xA;  // ...&#xA;  title: &#34;Vietnamese Gangz 😎&#34;,&#xA;  message: &#34;Anh em tao là Vietnamese Gangz&#34;,&#xA;  titleColor: &#39;#D60A2E&#39;,&#xA;  icon: {&#xA;    uri: require(&#39;./vietnam.png&#39;), // or remote&#xA;    size: 24,&#xA;  },&#xA;};&#xA;&#xA;toast(options); // icon is 🇻🇳&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%8C%AD_Alert-7C64F1?style=for-the-badge&#34; alt=&#34;Alert&#34;&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { alert } from &#39;@baronha/ting&#39;;&#xA;// ...&#xA;const options = {&#xA;  title: &#39;Done 😎&#39;,&#xA;  message: &#39;Successful!!&#39;,&#xA;};&#xA;&#xA;alert(options); // easy to use&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default value&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Platform&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Toast&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Alert&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;message&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;titleColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;messageColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;See &lt;a href=&#34;###Icon&#34;&gt;Icon&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;preset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;done&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Toast&lt;/strong&gt;: &lt;code&gt;done, error, none&lt;/code&gt;.&lt;br&gt;&lt;strong&gt;Alert&lt;/strong&gt;: &lt;code&gt;done, error, none, spinner&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;duration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The lifetime of the toast (seconds)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;titleColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;shouldDismissByDrag&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;true&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The behavior on &lt;code&gt;Android&lt;/code&gt; is click&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;position&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;top&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Toast&lt;/strong&gt; is displayed from &lt;code&gt;top&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;haptic&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/iOS-000000?style=for-the-badge&amp;amp;logo=ios&amp;amp;logoColor=white&#34; alt=&#34;iOS&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;success, warning, error, none&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;shouldDismissByTap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;true&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;borderRadius&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;blurBackdrop&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android-3DDC84?style=for-the-badge&amp;amp;logo=android&amp;amp;logoColor=white&#34; alt=&#34;Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;backdropOpacity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android-3DDC84?style=for-the-badge&amp;amp;logo=android&amp;amp;logoColor=white&#34; alt=&#34;Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;backgroundColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;#ffffff&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E2%9C%A8_New_Feature-D40A2E?style=for-the-badge&#34; alt=&#34;New_Feature&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Icon&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;icon&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default value&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;size&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Both-61DAFB?style=for-the-badge&#34; alt=&#34;Both&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;To Do&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;shouldDismissByDrag&lt;/code&gt; on &lt;strong&gt;Android&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;callback&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Initialize for the first time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;tintColor&lt;/code&gt; for icon&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;backgroundColor&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re trying to improve performance. If you have a better solution, please open a &lt;a href=&#34;https://github.com/baronha/ting/issues&#34;&gt;issue&lt;/a&gt; or &lt;a href=&#34;https://github.com/baronha/ting/pulls&#34;&gt;pull request&lt;/a&gt;. Best regards!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/baronha/ting/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn how to contribute to the repository and the development workflow.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT &lt;a href=&#34;https://github.com/sparrowcode/AlertKit/raw/v5/LICENSE&#34;&gt;AlertKit&lt;/a&gt; &lt;a href=&#34;https://github.com/ivanvorobei/SPIndicator/raw/main/LICENSE&#34;&gt;SPIndicator&lt;/a&gt; &lt;a href=&#34;https://github.com/getActivity/EasyWindow/raw/master/LICENSE&#34;&gt;EasyWindow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- Badge for README --&gt;</summary>
  </entry>
</feed>