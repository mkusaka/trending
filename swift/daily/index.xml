<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-24T01:38:14Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>loopwork-ai/iMCP</title>
    <updated>2025-06-24T01:38:14Z</updated>
    <id>tag:github.com,2025-06-24:/loopwork-ai/iMCP</id>
    <link href="https://github.com/loopwork-ai/iMCP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A macOS app that provides an MCP server to your Messages, Contacts, Reminders and more&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;Assets/hero-dark.svg&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;Assets/hero-light.svg&#34;&gt; &#xA; &lt;img alt=&#34;iMCP&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;iMCP is a macOS app for connecting your digital life with AI. It works with &lt;a href=&#34;https://claude.ai/download&#34;&gt;Claude Desktop&lt;/a&gt; and a &lt;a href=&#34;https://modelcontextprotocol.io/clients&#34;&gt;growing list of clients&lt;/a&gt; that support the &lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34;&gt;Model Context Protocol (MCP)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Capabilities&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/calendar.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;&#34; role=&#34;presentation&#34;&gt; &lt;/th&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Calendar&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;View and manage calendar events, including creating new events with customizable settings like recurrence, alarms, and availability status.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/contacts.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;&#34; role=&#34;presentation&#34;&gt; &lt;/th&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Contacts&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Access contact information about yourself and search your contacts by name, phone number, or email address.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/location.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;&#34; role=&#34;presentation&#34;&gt; &lt;/th&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Location&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Access current location data and convert between addresses and geographic coordinates.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/maps.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;&#34; role=&#34;presentation&#34;&gt; &lt;/th&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Maps&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provides location services including place search, directions, points of interest lookup, travel time estimation, and static map image generation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/messages.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;&#34; role=&#34;presentation&#34;&gt; &lt;/th&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Messages&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Access message history with specific participants within customizable date ranges.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/reminders.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;&#34; role=&#34;presentation&#34;&gt; &lt;/th&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Reminders&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;View and create reminders with customizable due dates, priorities, and alerts across different reminder lists.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/weather.svg?sanitize=true&#34; width=&#34;48&#34; height=&#34;48&#34; alt=&#34;&#34; role=&#34;presentation&#34;&gt; &lt;/th&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Weather&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Access current weather conditions including temperature, wind speed, and weather conditions for any location.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Have a suggestion for a new capability? Reach out to us at &lt;a href=&#34;mailto:imcp@loopwork.com&#34;&gt;imcp@loopwork.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Download and open the app&lt;/h3&gt; &#xA;&lt;p&gt;First, &lt;a href=&#34;https://iMCP.app/download&#34;&gt;download the iMCP app&lt;/a&gt; (requires macOS 15.3 or later).&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;344&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/imcp-screenshot-first-launch.png&#34; alt=&#34;Screenshot of iMCP on first launch&#34;&gt; &#xA;&lt;p&gt;When you open the app, you&#39;ll see a &lt;img style=&#34;display: inline&#34; width=&#34;20&#34; height=&#34;16&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/icon.svg?sanitize=true&#34;&gt; icon in your menu bar.&lt;/p&gt; &#xA;&lt;p&gt;Clicking on this icon reveals the iMCP menu, which displays all available services. Initially, all services will appear in gray, indicating they&#39;re inactive.&lt;/p&gt; &#xA;&lt;p&gt;The blue toggle switch at the top indicates that the MCP server is running and ready to connect with MCP-compatible clients.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;372&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/imcp-screenshot-grant-permission.png&#34; alt=&#34;Screenshot of macOS permission dialog&#34;&gt; &#xA;&lt;h3&gt;Activate services&lt;/h3&gt; &#xA;&lt;p&gt;To activate a service, click on its icon. The system will prompt you with a permission dialog. For example, when activating Calendar access, you&#39;ll see a dialog asking &lt;code&gt;&#34;iMCP&#34; Would Like Full Access to Your Calendar&lt;/code&gt;. Click &lt;kbd&gt;Allow Full Access&lt;/kbd&gt; to continue.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] iMCP &lt;strong&gt;does not&lt;/strong&gt; collect or store any of your data. Clients like Claude Desktop &lt;em&gt;do&lt;/em&gt; send your data off device as part of tool calls.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;344&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/imcp-screenshot-all-services-active.png&#34; alt=&#34;Screenshot of iMCP with all services enabled&#34;&gt; &#xA;&lt;p&gt;Once activated, each service icons goes from gray to their distinctive colors — red for Calendar, green for Messages, blue for Location, and so on.&lt;/p&gt; &#xA;&lt;p&gt;Repeat this process for all of the capabilities you&#39;d like to enable. These permissions follow Apple&#39;s standard security model, giving you complete control over what information iMCP can access.&lt;/p&gt; &#xA;&lt;!-- &lt;br clear=&#34;all&#34;&gt; --&gt; &#xA;&lt;!-- &lt;img align=&#34;right&#34; width=&#34;344&#34; src=&#34;/Assets/imcp-screenshot-configure-claude-desktop.png&#34; /&gt; --&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h3&gt;Connect to Claude Desktop&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t have Claude Desktop installed, you can &lt;a href=&#34;https://claude.ai/download&#34;&gt;download it here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Open Claude Desktop and go to &#34;Settings... (&lt;kbd&gt;⌘&lt;/kbd&gt;&lt;kbd&gt;,&lt;/kbd&gt;)&#34;. Click on &#34;Developer&#34; in the sidebar of the Settings pane, and then click on &#34;Edit Config&#34;. This will create a configuration file at &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;To connect iMCP to Claude Desktop, click &lt;img style=&#34;display: inline&#34; width=&#34;20&#34; height=&#34;16&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/icon.svg?sanitize=true&#34;&gt; &amp;gt; &#34;Configure Claude Desktop&#34;.&lt;/p&gt; &#xA;&lt;p&gt;This will add or update the MCP server configuration to use the &lt;code&gt;imcp-server&lt;/code&gt; executable bundled in the application. Other MCP server configurations in the file will be preserved.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You can also configure Claude Desktop manually&lt;/summary&gt; &#xA; &lt;p&gt;Click &lt;img style=&#34;display: inline&#34; width=&#34;20&#34; height=&#34;16&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/icon.svg?sanitize=true&#34;&gt; &amp;gt; &#34;Copy server command to clipboard&#34;. Then open &lt;code&gt;claude_desktop_config.json&lt;/code&gt; in your editor and enter the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34; : {&#xA;    &#34;iMCP&#34; : {&#xA;      &#34;command&#34; : &#34;{paste iMCP server command}&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;372&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/imcp-screenshot-approve-connection.png&#34;&gt; &#xA;&lt;h3&gt;Call iMCP tools from Claude Desktop&lt;/h3&gt; &#xA;&lt;p&gt;Quit and reopen the Claude Desktop app. You&#39;ll be prompted to approve the connection.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;p&gt;After approving the connection, you should now see 🔨12 in the bottom right corner of your chat box. Click on that to see a list of all the tools made available to Claude by iMCP.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;694&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/claude-desktop-screenshot-tools-enabled.png&#34; alt=&#34;Screenshot of Claude Desktop with tools enabled&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Now you can ask Claude questions that require access to your personal data, such as:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;How&#39;s the weather where I am?&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Claude will use the appropriate tools to retrieve this information, providing you with accurate, personalized responses without requiring you to manually share this data during your conversation.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;738&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/claude-desktop-screenshot-message.png&#34; alt=&#34;Screenshot of Claude response to user message &#39;How&#39;s the weather where I am?&#39;&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Technical Details&lt;/h2&gt; &#xA;&lt;h3&gt;App &amp;amp; CLI&lt;/h3&gt; &#xA;&lt;p&gt;iMCP is a macOS app that bundles a command-line executable, &lt;code&gt;imcp-server&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/App/&#34;&gt;&lt;code&gt;iMCP.app&lt;/code&gt;&lt;/a&gt; provides UI for configuring services and — most importantly — a means of interacting with macOS system permissions, so that it can access Contacts, Calendar, and other information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/CLI/&#34;&gt;&lt;code&gt;imcp-server&lt;/code&gt;&lt;/a&gt; provides an MCP server that uses standard input/output for communication (&lt;a href=&#34;https://modelcontextprotocol.io/docs/concepts/architecture#transport-layer&#34;&gt;stdio transport&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The app and CLI communicate with each other on the local network using &lt;a href=&#34;https://developer.apple.com/bonjour/&#34;&gt;Bonjour&lt;/a&gt; for automatic discovery. Both advertise a service with type &#34;_mcp._tcp&#34; and domain &#34;local&#34;. Requests from MCP clients are read by the CLI from &lt;code&gt;stdin&lt;/code&gt; and relayed to the app; responses from the app are received by the CLI and written to &lt;code&gt;stdout&lt;/code&gt;. See &lt;a href=&#34;https://github.com/loopwork-ai/iMCP/raw/8cf9d250286288b06bf5d3dda78f5905ad0d7729/CLI/main.swift#L47&#34;&gt;&lt;code&gt;StdioProxy&lt;/code&gt;&lt;/a&gt; for implementation details.&lt;/p&gt; &#xA;&lt;p&gt;For this project, we created what became &lt;a href=&#34;https://github.com/modelcontextprotocol/swift-sdk&#34;&gt;the official Swift SDK&lt;/a&gt; for Model Context Protocol servers and clients. The app uses this package to handle proxied requests from MCP clients.&lt;/p&gt; &#xA;&lt;h3&gt;iMessage Database Access&lt;/h3&gt; &#xA;&lt;p&gt;Apple doesn&#39;t provide public APIs for accessing your messages. However, the Messages app on macOS stores data in a SQLite database located at &lt;code&gt;~/Library/Messages/chat.db&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;iMCP runs in &lt;a href=&#34;https://developer.apple.com/documentation/security/app-sandbox&#34;&gt;App Sandbox&lt;/a&gt;, which limits its access to user data and system resources. When you go to enable the Messages service, you&#39;ll be prompted to open the &lt;code&gt;chat.db&lt;/code&gt; file through the standard file picker. When you do, macOS adds that file to the app&#39;s sandbox. &lt;a href=&#34;https://developer.apple.com/documentation/appkit/nsopenpanel&#34;&gt;&lt;code&gt;NSOpenPanel&lt;/code&gt;&lt;/a&gt; is magic like that.&lt;/p&gt; &#xA;&lt;p&gt;But opening the iMessage database is just half the battle. Over the past few years, Apple has moved away from storing messages in plain text and instead toward a proprietary &lt;code&gt;typedstream&lt;/code&gt; format.&lt;/p&gt; &#xA;&lt;p&gt;For this project, we created &lt;a href=&#34;https://github.com/loopwork-ai/Madrid&#34;&gt;Madrid&lt;/a&gt;: a Swift package for reading your iMessage database. It includes a Swift implementation for decoding Apple&#39;s &lt;code&gt;typedstream&lt;/code&gt; format, adapted from Christopher Sardegna&#39;s &lt;a href=&#34;https://github.com/ReagentX/imessage-exporter&#34;&gt;imessage-exporter&lt;/a&gt; project and &lt;a href=&#34;https://chrissardegna.com/blog/reverse-engineering-apples-typedstream-format/&#34;&gt;blog post about reverse-engineering &lt;code&gt;typedstream&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;JSON-LD for Tool Results&lt;/h3&gt; &#xA;&lt;p&gt;The tools provided by iMCP return results as &lt;a href=&#34;https://json-ld.org&#34;&gt;JSON-LD&lt;/a&gt; documents. For example, the &lt;code&gt;fetchContacts&lt;/code&gt; tool uses the &lt;a href=&#34;https://developer.apple.com/documentation/contacts&#34;&gt;Contacts framework&lt;/a&gt;, which represents people and organizations with the &lt;a href=&#34;https://developer.apple.com/documentation/contacts/cncontact&#34;&gt;&lt;code&gt;CNContact&lt;/code&gt;&lt;/a&gt; type. Here&#39;s how an object of that type is encoded as JSON-LD:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;@context&#34;: &#34;https://schema.org&#34;,&#xA;  &#34;@type&#34;: &#34;Organization&#34;,&#xA;  &#34;name&#34;: &#34;Loopwork Limited&#34;,&#xA;  &#34;url&#34;: &#34;https://loop.work&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://schema.org&#34;&gt;Schema.org&lt;/a&gt; provides standard vocabularies for people, postal addresses, events, and many other objects we want to represent. And JSON-LD is a convenient encoding format for humans, AI, and conventional software alike.&lt;/p&gt; &#xA;&lt;p&gt;For this project, we created &lt;a href=&#34;https://github.com/loopwork-ai/Ontology&#34;&gt;Ontology&lt;/a&gt;: a Swift package for working with structured data. It includes convenience initializers for types from Apple frameworks, such as those returned by iMCP tools.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;h3&gt;Using the MCP Inspector&lt;/h3&gt; &#xA;&lt;p&gt;To debug interactions between iMCP and clients, you can use the &lt;a href=&#34;https://github.com/modelcontextprotocol/inspector&#34;&gt;inspector tool&lt;/a&gt; (requires Node.js):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click &lt;img style=&#34;display: inline&#34; width=&#34;20&#34; height=&#34;16&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/icon.svg?sanitize=true&#34;&gt; &amp;gt; &#34;Copy server command to clipboard&#34;&lt;/li&gt; &#xA; &lt;li&gt;Open a terminal and run the following commands: &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Download and run inspector package on imcp-server&#xA;npx @modelcontextprotocol/inspector [paste-copied-command]&#xA;&#xA;# Open inspector web app running locally&#xA;open http://127.0.0.1:6274&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Inspector lets you see all requests and responses between the client and the iMCP server, which is helpful for understanding how the protocol works.&lt;/p&gt; &#xA;&lt;h3&gt;Using Companion&lt;/h3&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;284&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/companion-screenshot-add-server.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/loopwork-ai/Companion&#34;&gt;Companion&lt;/a&gt; is a utility for testing and debugging your MCP servers (requires macOS 15 or later). It gives you an easy way to browse and interact with a server&#39;s prompts, resources, and tools. Here&#39;s how to connect it to iMCP:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click &lt;img style=&#34;display: inline&#34; width=&#34;20&#34; height=&#34;16&#34; src=&#34;https://raw.githubusercontent.com/loopwork-ai/iMCP/main/Assets/icon.svg?sanitize=true&#34;&gt; &amp;gt; &#34;Copy server command to clipboard&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/loopwork-ai/Companion/releases/latest/download/Companion.zip&#34;&gt;Download&lt;/a&gt; and open the Companion app&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;kbd&gt;+&lt;/kbd&gt; button in the toolbar to add an MCP server&lt;/li&gt; &#xA; &lt;li&gt;Fill out the form: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enter &#34;iMCP&#34; as the name&lt;/li&gt; &#xA;   &lt;li&gt;Select &#34;STDIO&#34; as the transport&lt;/li&gt; &#xA;   &lt;li&gt;Paste the copied iMCP server command&lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Add Server&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jspahrsummers.com/&#34;&gt;Justin Spahr-Summers&lt;/a&gt; (&lt;a href=&#34;https://github.com/jspahrsummers&#34;&gt;@jspahrsummers&lt;/a&gt;), David Soria Parra (&lt;a href=&#34;https://github.com/dsp-ant&#34;&gt;@dsp-ant&lt;/a&gt;), and Ashwin Bhat (&lt;a href=&#34;https://github.com/ashwin-ant&#34;&gt;@ashwin-ant&lt;/a&gt;) for their work on MCP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chrissardegna.com&#34;&gt;Christopher Sardegna&lt;/a&gt; (&lt;a href=&#34;https://github.com/ReagentX&#34;&gt;@ReagentX&lt;/a&gt;) for reverse-engineering the &lt;code&gt;typedstream&lt;/code&gt; format used by the Messages app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache License, Version 2.0.&lt;/p&gt; &#xA;&lt;h2&gt;Legal&lt;/h2&gt; &#xA;&lt;p&gt;iMessage® is a registered trademark of Apple Inc.&lt;br&gt; This project is not affiliated with, endorsed, or sponsored by Apple Inc.&lt;/p&gt;</summary>
  </entry>
</feed>