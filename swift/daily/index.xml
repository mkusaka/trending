<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-24T01:46:08Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ginsudev/WDBFontOverwrite</title>
    <updated>2023-01-24T01:46:08Z</updated>
    <id>tag:github.com,2023-01-24:/ginsudev/WDBFontOverwrite</id>
    <link href="https://github.com/ginsudev/WDBFontOverwrite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Proof-of-concept app to overwrite fonts on iOS using CVE-2022-46689.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Proof-of-concept app to overwrite fonts on iOS using &lt;a href=&#34;https://support.apple.com/en-us/HT213530&#34;&gt;CVE-2022-46689&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Works on iOS 16.1.2 and below (tested on iOS 16.1) on unjailbroken devices.&lt;/p&gt; &#xA;&lt;p&gt;IPA available in the &lt;a href=&#34;https://github.com/ginsudev/WDBFontOverwrite/releases&#34;&gt;Releases&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;Fonts included:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DejaVu Sans Condensed&lt;/li&gt; &#xA; &lt;li&gt;DejaVu Serif&lt;/li&gt; &#xA; &lt;li&gt;DejaVu Sans Mono&lt;/li&gt; &#xA; &lt;li&gt;Go Regular&lt;/li&gt; &#xA; &lt;li&gt;Go Mono&lt;/li&gt; &#xA; &lt;li&gt;Fira Sans&lt;/li&gt; &#xA; &lt;li&gt;Segoe UI&lt;/li&gt; &#xA; &lt;li&gt;Comic Sans MS&lt;/li&gt; &#xA; &lt;li&gt;Choco Cooky&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also import custom fonts that were ported for iOS.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;DejaVu Sans Condensed | DejaVu Serif | DejaVu Sans Mono | Choco Cooky&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/704768/209511898-a1477b66-28e4-471a-87d9-36c1c2eb25ca.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Go Regular | Go Mono | Segoe UI | Comic Sans MS&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/704768/209606970-a382c273-bdcb-425c-bca1-1b6f9b31862f.png&#34; alt=&#34;Another screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hanna Soft + JoyPixels | Bronkoh | Noto Serif SC | Fira Sans&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/704768/209753262-b8204c92-b873-41a7-8127-38bf86096470.png&#34; alt=&#34;Another screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Screenshot credit: &lt;a href=&#34;https://twitter.com/ev_ynw&#34;&gt;@ev_ynw&lt;/a&gt; for the ported &lt;a href=&#34;https://app.box.com/s/g4uk1yyqxm36sl9ovbwkpbbpn9isol8h/file/997004671334&#34;&gt;Hanna Soft&lt;/a&gt; and &lt;a href=&#34;https://app.box.com/s/g4uk1yyqxm36sl9ovbwkpbbpn9isol8h/file/915757902297&#34;&gt;Bronkoh&lt;/a&gt; fonts, &lt;a href=&#34;https://joypixels.com/download&#34;&gt;JoyPixels&lt;/a&gt; for the emoji font&lt;/p&gt; &#xA;&lt;h2&gt;Where to find ported fonts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ev_ynw&#34;&gt;@ev_ynw&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PoomSmart/EmojiFonts/releases&#34;&gt;@PoomSmart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The built-in fonts are not properly ported (I don&#39;t know how to port fonts). For best results, use a custom font. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;with the built-in fonts:&lt;/li&gt; &#xA;   &lt;li&gt;Only regular text uses the changed font: thin/medium/bold text falls back to Helvetica instead.&lt;/li&gt; &#xA;   &lt;li&gt;If the font doesn&#39;t show up at all, &lt;a href=&#34;https://twitter.com/m7mdabu7assan/status/1607609484901289985&#34;&gt;disable &#34;Bold Text&#34;&lt;/a&gt; in accessibility settings.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;File pickers in apps will fail to open with the error &#34;Something went wrong while displaying documents.&#34; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This happens if you replace the emoji font, or install fonts with &lt;a href=&#34;https://twitter.com/Gu3hi/status/1607986473198026752&#34;&gt;multiple weights&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try the experimental .ttc fix by using &#34;Import custom &lt;font&gt; with fix for .ttc&#34;&lt;/font&gt;&lt;/li&gt;&#xA;   &lt;font&gt; &lt;/font&gt;&#xA;  &lt;/ul&gt;&lt;font&gt; &lt;/font&gt;&lt;/li&gt;&#xA; &lt;font&gt; &lt;li&gt;iOS 14.x devices which are jailbroken / were jailbroken before will not be able to revert to the original font. &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Workaround: do not use this app if you&#39;re on iOS 14.x and have previously jailbroken. Instead, just jailbreak and replace fonts normally.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &lt;/font&gt;&#xA;&lt;/ul&gt;&#xA;&lt;font&gt; &lt;h2&gt;Font conversion&lt;/h2&gt; &lt;p&gt;The CVE-2022-46689 issue - as far as I know - only lets you overwrite 16383 bytes out of every 16384 bytes: the last byte of the page can&#39;t be written.&lt;/p&gt; &lt;p&gt;(I could be wrong)&lt;/p&gt; &lt;p&gt;To work around this, I package the font using the &lt;a href=&#34;https://www.w3.org/TR/WOFF2/&#34;&gt;WOFF2&lt;/a&gt; webfont format, which is &lt;a href=&#34;https://twitter.com/myunderpants/status/1503745380365877252&#34;&gt;supported on iOS&lt;/a&gt;. WOFF2 uses &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7932&#34;&gt;Brotli&lt;/a&gt; for compression, which lets me insert padding to skip over the last byte.&lt;/p&gt; &lt;p&gt;See &lt;code&gt;repackfonts/make_woff2src.sh&lt;/code&gt; for details: this script:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;renames the font to .SFUI-Regular with &lt;a href=&#34;https://github.com/fonttools/fonttools&#34;&gt;TTX&lt;/a&gt; following &lt;a href=&#34;https://superuser.com/a/694452&#34;&gt;this answer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;rebuilds the font to .woff2&lt;/li&gt; &#xA;  &lt;li&gt;runs &lt;code&gt;repackfonts/BrotliPadding.swift&lt;/code&gt; to decompress the WOFF2 file and insert padding to skip past the 16384th byte&lt;/li&gt; &#xA; &lt;/ul&gt; &lt;h2&gt;Credits&lt;/h2&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Ian Beer of &lt;a href=&#34;https://googleprojectzero.blogspot.com&#34;&gt;Project Zero&lt;/a&gt; for finding CVE-2022-46689.&lt;/li&gt; &#xA;  &lt;li&gt;Apple for the &lt;a href=&#34;https://github.com/apple-oss-distributions/xnu/raw/xnu-8792.61.2/tests/vm/vm_unaligned_copy_switch_race.c&#34;&gt;test case&lt;/a&gt; and &lt;a href=&#34;https://github.com/apple-oss-distributions/xnu/raw/xnu-8792.61.2/osfmk/vm/vm_map.c#L10150&#34;&gt;patch&lt;/a&gt;. (I didn&#39;t change anything: I only wrapped the test case in a library.)&lt;/li&gt; &#xA;  &lt;li&gt;Everyone on Twitter who helped out and experimented with CVE-2022-46689, especially &lt;a href=&#34;https://twitter.com/dedbeddedbed&#34;&gt;@dedbeddedbed&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/AppleDry05&#34;&gt;@AppleDry05&lt;/a&gt;, and &lt;a href=&#34;https://twitter.com/haxi0sm&#34;&gt;@haxi0sm&lt;/a&gt; for exploring what can be done with this issue..&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/google/woff2&#34;&gt;WOFF2 compressor&lt;/a&gt; by Google&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/LIJI32/ttcpad&#34;&gt;ttcpad&lt;/a&gt; by LIJI32&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/fontforge/fontforge/raw/master/contrib/fonttools/stripttc.c&#34;&gt;Fontforge stripttc&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;The &lt;a href=&#34;https://dejavu-fonts.github.io&#34;&gt;DejaVu fonts&lt;/a&gt; are distributed according to their &lt;a href=&#34;https://dejavu-fonts.github.io/License.html&#34;&gt;license&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;The &lt;a href=&#34;https://go.dev/blog/go-fonts&#34;&gt;Go fonts&lt;/a&gt; are distributed according to their license.&lt;/li&gt; &#xA;  &lt;li&gt;The &lt;a href=&#34;https://mozilla.github.io/Fira/&#34;&gt;Fira Sans&lt;/a&gt; font is converted by &lt;a href=&#34;https://twitter.com/jonpalmisc/status/1607570871421468678&#34;&gt;@jonpalmisc&lt;/a&gt; - thanks!&lt;/li&gt; &#xA;  &lt;li&gt;Segoe UI and Comic Sans MS are the property of Microsoft.&lt;/li&gt; &#xA;  &lt;li&gt;Choco Cooky is the property of Samsung.&lt;/li&gt; &#xA;  &lt;li&gt;I don&#39;t have any rights to redistribute these, but I&#39;m posting them anyways because #yolo.&lt;/li&gt; &#xA; &lt;/ul&gt; &lt;/font&gt;</summary>
  </entry>
  <entry>
    <title>vapor/core</title>
    <updated>2023-01-24T01:46:08Z</updated>
    <id>tag:github.com,2023-01-24:/vapor/core</id>
    <link href="https://github.com/vapor/core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸŒŽ Utility package containing tools for byte manipulation, Codable, OS APIs, and debugging.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1342803/36574488-0288efec-1814-11e8-9091-6e79553dca3d.png&#34; height=&#34;64&#34; alt=&#34;Core&#34;&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://docs.vapor.codes/3.0/&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/read_the-docs-2196f3.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/vapor&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/431917998102675485.svg?sanitize=true&#34; alt=&#34;Team Chat&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/vapor/core/main/LICENSE&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/license-MIT-brightgreen.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/vapor/core&#34;&gt; &lt;img src=&#34;https://circleci.com/gh/vapor/core.svg?style=shield&#34; alt=&#34;Continuous Integration&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://swift.org&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/swift-4.1-brightgreen.svg?sanitize=true&#34; alt=&#34;Swift 4.1&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>appbrewery/Magic-8-Ball-iOS13</title>
    <updated>2023-01-24T01:46:08Z</updated>
    <id>tag:github.com,2023-01-24:/appbrewery/Magic-8-Ball-iOS13</id>
    <link href="https://github.com/appbrewery/Magic-8-Ball-iOS13" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn to Code While Building Apps - The Complete iOS Development Bootcamp&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appbrewery/Magic-8-Ball-iOS13/master/Documentation/AppBreweryBanner.png&#34; alt=&#34;App Brewery Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Magic 8 Ball&lt;/h1&gt; &#xA;&lt;h2&gt;Our Goal&lt;/h2&gt; &#xA;&lt;p&gt;The objective of this challenge is to apply the skills you learned in the Dicee tutorial and get you making an app with functionality all by yourself. Thereâ€™s no new concepts here. But youâ€™re flyinâ€™ solo this time! Most of the programming skills are gained in the challenges rather than the tutorials. Itâ€™s when youâ€™re using your new-found programming skills to bend the app to your will that youâ€™re truly levelling up as a developer.&lt;/p&gt; &#xA;&lt;h2&gt;What you will create&lt;/h2&gt; &#xA;&lt;p&gt;Weâ€™re going to make a Magic 8 Ball app. You can ask the app to make all your hard decisions! With this app in your pocket, youâ€™ll always have an answer to lifeâ€™s many conundrums!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a companion project to The App Brewery&#39;s Complete App Development Bootcamp, check out the full course at &lt;a href=&#34;https://www.appbrewery.co/&#34;&gt;www.appbrewery.co&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appbrewery/Magic-8-Ball-iOS13/master/Documentation/readme-end-banner.png&#34; alt=&#34;End Banner&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>