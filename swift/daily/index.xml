<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-29T01:40:09Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gonzalezreal/MarkdownUI</title>
    <updated>2022-09-29T01:40:09Z</updated>
    <id>tag:github.com,2022-09-29:/gonzalezreal/MarkdownUI</id>
    <link href="https://github.com/gonzalezreal/MarkdownUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Render Markdown text in SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MarkdownUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gonzalezreal/MarkdownUI/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/gonzalezreal/MarkdownUI/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/gonzalezreal/MarkdownUI&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgonzalezreal%2FMarkdownUI%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/gonzalezreal/MarkdownUI&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgonzalezreal%2FMarkdownUI%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/gonzalezreal&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contact-@gonzalezreal-blue.svg?style=flat&#34; alt=&#34;contact: @gonzalezreal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MarkdownUI is a Swift package for rendering Markdown in SwiftUI, fully compliant with the &lt;a href=&#34;https://spec.commonmark.org/current/&#34;&gt;CommonMark Spec&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;You can use MarkdownUI in the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 11.0+&lt;/li&gt; &#xA; &lt;li&gt;iOS 14.0+&lt;/li&gt; &#xA; &lt;li&gt;tvOS 14.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can create a &lt;code&gt;Markdown&lt;/code&gt; view by providing a Markdown-formatted string.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#34;You can try **CommonMark** [here](https://spec.commonmark.org/dingus/).&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/MarkdownFormattedString.1.png&#34; alt=&#34;Markdown text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have already parsed a Markdown-formatted string into a CommonMark document, you can initialize a &lt;code&gt;Markdown&lt;/code&gt; view with it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let document = try! Document(&#xA;  markdown: &#34;You can try **CommonMark** [here](https://spec.commonmark.org/dingus/).&#34;&#xA;)&#xA;&#xA;var body: some View {&#xA;  Markdown(document)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use an embedded DSL to describe the content of a Markdown view.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown {&#xA;  Heading(level: 2) {&#xA;    &#34;Markdown lists&#34;&#xA;  }&#xA;  OrderedList {&#xA;    &#34;One&#34;&#xA;    &#34;Two&#34;&#xA;    &#34;Three&#34;&#xA;  }&#xA;  BulletList {&#xA;    &#34;Start a line with a star&#34;&#xA;    &#34;Profit!&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/BlockArrayBuilder.1.png&#34; alt=&#34;Markdown embedded DSL&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Relative URLs&lt;/h3&gt; &#xA;&lt;p&gt;When creating a &lt;code&gt;Markdown&lt;/code&gt; view, specify a base URL if you want to use relative URLs in your Markdown content.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  You can explore all the capabilities of this package in the&#xA;  [companion demo project](Examples/MarkdownUIDemo).&#xA;  &#34;&#34;&#34;#,&#xA;  baseURL: URL(string: &#34;https://github.com/gonzalezreal/MarkdownUI/raw/main/&#34;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Loading asset images&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;Markdown&lt;/code&gt; view downloads and presents the images it finds in the Markdown-formatted content. You may want to store some of your content&#39;s images locally. In that case, you can configure a &lt;code&gt;Markdown&lt;/code&gt; view to load images with a given URL scheme from the asset catalog.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  The Markdown view loads this image from the network:&#xA;  ![](https://picsum.photos/id/223/100/150)&#xA;&#xA;  And looks for this other image in the app&#39;s bundle:&#xA;  ![](asset:///puppy)&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;.setImageHandler(.assetImage(), forURLScheme: &#34;asset&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing appearance&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;Markdown&lt;/code&gt; view renders its content with a default base font, color, and measurements appropriate for the current environment. You can customize some or all of these values by passing a new &lt;code&gt;MarkdownStyle&lt;/code&gt; to the &lt;code&gt;markdownStyle(_:)&lt;/code&gt; view modifier.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  ## Inline code&#xA;  If you have inline code blocks, wrap them in backticks: `var example = true`.&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;.markdownStyle(&#xA;  MarkdownStyle(&#xA;    font: .system(.body, design: .serif),&#xA;    foregroundColor: .indigo,&#xA;    measurements: .init(&#xA;      codeFontScale: 0.8,&#xA;      headingSpacing: 0.3&#xA;    )&#xA;  )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/MarkdownStyle.1.png&#34; alt=&#34;Markdown style&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Customizing link handling&lt;/h3&gt; &#xA;&lt;p&gt;By default, a &lt;code&gt;Markdown&lt;/code&gt; view opens the links in its content using the appropriate system service. However, you can provide a custom Markdown link handler using the &lt;code&gt;onOpenMarkdownLink&lt;/code&gt; modifier.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {&#xA;  @State private var url: URL? = nil&#xA;  @State private var showingAlert = false&#xA;&#xA;  var body: some View {&#xA;    Markdown(&#xA;      #&#34;&#34;&#34;&#xA;      **MarkdownUI** is a library for rendering Markdown in *SwiftUI*, fully compliant with the&#xA;      [CommonMark Spec](https://spec.commonmark.org/current/).&#xA;      &#34;&#34;&#34;#&#xA;    )&#xA;    .onOpenMarkdownLink { url in&#xA;      self.url = url&#xA;      self.showingAlert = true&#xA;    }&#xA;    .alert(isPresented: $showingAlert) {&#xA;      Alert(&#xA;        title: Text(&#34;Open Link&#34;),&#xA;        message: Text(self.url?.absoluteString ?? &#34;nil&#34;)&#xA;      )&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, if your deployment target is macOS 12.0+ or iOS 15.0+, you can customize Markdown link handling by setting the &lt;code&gt;openURL&lt;/code&gt; environment value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  **MarkdownUI** is a library for rendering Markdown in *SwiftUI*, fully compliant with the&#xA;  [CommonMark Spec](https://spec.commonmark.org/current/).&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;.environment(&#xA;  \.openURL,&#xA;  OpenURLAction { url in&#xA;    self.url = url&#xA;    self.showingAlert = true&#xA;    return .handled&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Markdown Elements&lt;/h2&gt; &#xA;&lt;p&gt;MarkdownUI uses the &lt;a href=&#34;https://github.com/commonmark/cmark&#34;&gt;CommonMark&lt;/a&gt; reference parser and fully complies with the &lt;a href=&#34;https://spec.commonmark.org/current/&#34;&gt;CommonMark Spec&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Below you can see a few examples of how MarkdownUI renders Markdown elements. Additionally, you can explore the full MarkdownUI capabilities in the &lt;a href=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Demo/&#34;&gt;companion demo project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Demo/Screenshot.png&#34; alt=&#34;Demo app screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Block Quotes&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  &amp;gt; “I sent the club a wire stating,&#xA;  &amp;gt; **PLEASE ACCEPT MY RESIGNATION. I DON&#39;T&#xA;  &amp;gt; WANT TO BELONG TO ANY CLUB THAT WILL ACCEPT ME AS A MEMBER**.”&#xA;&#xA;  ― Groucho Marx&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/BlockQuote.1.png&#34; alt=&#34;Block quotes&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lists&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  List of humorous units of measurement:&#xA;&#xA;  1. Systems&#xA;     - FFF units&#xA;     - Great Underground Empire (Zork)&#xA;     - Potrzebie&#xA;  1. Quantity&#xA;     - Sagan&#xA;  1. Length&#xA;     - Altuve&#xA;     - Attoparsec&#xA;     - Beard-second&#xA;&#xA;  ― From Wikipedia, the free encyclopedia&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/List.1.png&#34; alt=&#34;Lists&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Code Blocks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  Use a group to collect multiple views into a single instance,&#xA;  without affecting the layout of those views. After creating a&#xA;  group, any modifier you apply to the group affects all of that&#xA;  group’s members.&#xA;&#xA;      Group {&#xA;          Text(&#34;SwiftUI&#34;)&#xA;          Text(&#34;Combine&#34;)&#xA;          Text(&#34;Swift System&#34;)&#xA;      }&#xA;      .font(.headline)&#xA;&#xA;  ― From Apple Developer Documentation&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/CodeBlock.1.png&#34; alt=&#34;Code blocks&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Headings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  # Heading 1&#xA;  A paragraph of text.&#xA;  ## Heading 2&#xA;  A paragraph of text.&#xA;  ### Heading 3&#xA;  A paragraph of text.&#xA;  #### Heading 4&#xA;  A paragraph of text.&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/Headings.1.png&#34; alt=&#34;Headings&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Thematic Breaks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  # SwiftUI&#xA;&#xA;  Declare the user interface and behavior for your app&#xA;  on every platform.&#xA;&#xA;  ---&#xA;&#xA;  ## Overview&#xA;&#xA;  SwiftUI provides views, controls, and layout structures&#xA;  for declaring your app’s user interface.&#xA;&#xA;  ---&#xA;&#xA;  ― From Apple Developer Documentation&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/ThematicBreak.1.png&#34; alt=&#34;Thematic breaks&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Images&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  ![Puppy](https://picsum.photos/id/237/200/300)&#xA;&#xA;  ― Photo by André Spieker&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/Image.1.png&#34; alt=&#34;Images&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Emphasized Text&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Markdown(&#xA;  #&#34;&#34;&#34;&#xA;  It&#39;s very easy to make some words **bold** and other words *italic* with Markdown.&#xA;&#xA;  **Want to experiment with Markdown?** Play with the [reference CommonMark&#xA;  implementation](https://spec.commonmark.org/dingus/).&#xA;  &#34;&#34;&#34;#&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gonzalezreal/MarkdownUI/main/Images/EmphasizedText.1.png&#34; alt=&#34;Emphasized text&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can add MarkdownUI to an Xcode project by adding it as a package dependency.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;From the &lt;strong&gt;File&lt;/strong&gt; menu, select &lt;strong&gt;Add Packages…&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;https://github.com/gonzalezreal/MarkdownUI&lt;/code&gt; into the &lt;em&gt;Search or Enter Package URL&lt;/em&gt; search field&lt;/li&gt; &#xA; &lt;li&gt;Link &lt;strong&gt;MarkdownUI&lt;/strong&gt; to your application target&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Other Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mattt/CommonMarkAttributedString&#34;&gt;CommonMarkAttributedString&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/johnxnguyen/Down&#34;&gt;Down&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonzalezreal/AttributedText&#34;&gt;AttributedText&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>