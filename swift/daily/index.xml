<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-13T02:09:54Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>0xTim/Vapor-PasskeyDemo</title>
    <updated>2022-06-13T02:09:54Z</updated>
    <id>tag:github.com,2022-06-13:/0xTim/Vapor-PasskeyDemo</id>
    <link href="https://github.com/0xTim/Vapor-PasskeyDemo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vapor Passkey Demo&lt;/h1&gt; &#xA;&lt;p&gt;Proof of concept app for trying to integrate passkeys and WebAuthn into Vapor&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/0xTim/Vapor-PasskeyDemo/main/images/demo.png&#34; alt=&#34;Screenshot of app&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Clone the project, then in Terminal run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;swift run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your browser go to &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; and follow the steps!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is proof of concept code to scope out the work to build a Swift Server library for WebAuthn. I do not advise using it in production until it&#39;s had some eyes on it. Many things are unimplemented and untested so be warned! Only tested on macOS 12.4 with Safari 15.5&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>jackhumbert/let_there_be_flight</title>
    <updated>2022-06-13T02:09:54Z</updated>
    <id>tag:github.com,2022-06-13:/jackhumbert/let_there_be_flight</id>
    <link href="https://github.com/jackhumbert/let_there_be_flight" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A flight mod for Cyberpunk 2077&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Let There Be Flight&lt;/h1&gt; &#xA;&lt;p&gt;This is a mod (currently in a beta state) for Cyberpunk 2077 that adds a flying mechanism to all cars, with a couple different modes and options.&lt;/p&gt; &#xA;&lt;p&gt;Other features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In-world navigation for quests and player-selected destinations (with appropriate colors)&lt;/li&gt; &#xA; &lt;li&gt;Imminent explosion audio indicator&lt;/li&gt; &#xA; &lt;li&gt;Visual explosions happen more readily with other cars&lt;/li&gt; &#xA; &lt;li&gt;Quick-eject in flight mode (hold exit)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=U9t2JWMY1-k&#34;&gt;Video preview of the Drone/Acrobat mode&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jackhumbert/let_there_be_flight/main/preview.jpg&#34; alt=&#34;preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jackhumbert/let_there_be_flight/releases&#34;&gt;Get the latest release here&lt;/a&gt; - &lt;code&gt;packed-v*.zip&lt;/code&gt; in the release contains all of the requirements listed below at their most up-to-date versions (at the time of release). Simply extract it and copy the contents in your game&#39;s installation folder. If you&#39;re upgrading, you may want to delete the contents of the &lt;code&gt;r6/scripts/flight_control&lt;/code&gt; folder, since files may have been renamed/removed.&lt;/p&gt; &#xA;&lt;p&gt;If you want to install the mod outside of a release (not recommended), the &lt;code&gt;build/&lt;/code&gt; folder in the repo contains all of the mod-specific files that you can drag into your game&#39;s installation folder.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WopsS/RED4ext&#34;&gt;RED4ext&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/psiberx/cp2077-tweak-xl&#34;&gt;TweakXL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackhumbert/cyberpunk2077-input-loader&#34;&gt;Input Loader&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jac3km4/redscript&#34;&gt;Redscript&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bugs&lt;/h2&gt; &#xA;&lt;p&gt;If you come across something that doesn&#39;t work quite right, or interferes with another mod, &lt;a href=&#34;https://github.com/jackhumbert/let_there_be_flight/issues&#34;&gt;search for or create an issue!&lt;/a&gt; I have a lot of things on a private TODO list still, but can start to move things to Github issues.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to @psiberx for &lt;a href=&#34;https://github.com/psiberx/cp2077-codeware/&#34;&gt;Codeware Lib&lt;/a&gt;, &lt;a href=&#34;https://github.com/psiberx/cp2077-playground&#34;&gt;InkPlayground Demo&lt;/a&gt;, and Redscript &amp;amp; CET examples on Discord, @WopsS for &lt;a href=&#34;https://github.com/WopsS/RED4ext&#34;&gt;RED4ext&lt;/a&gt;, @jac3km4 for &lt;a href=&#34;https://github.com/jac3km4/redscript&#34;&gt;Redscript toolkit&lt;/a&gt;, @yamashi for &lt;a href=&#34;https://github.com/yamashi/CyberEngineTweaks&#34;&gt;CET&lt;/a&gt; and the &lt;a href=&#34;https://www.nexusmods.com/cyberpunk2077/mods/3207?tab=description&#34;&gt;E-mode mod&lt;/a&gt; (very helpful in figuring out how to work with FMOD), @rfuzzo &amp;amp; team (especially @seberoth!) for &lt;a href=&#34;https://github.com/WolvenKit/WolvenKit&#34;&gt;WolvenKit&lt;/a&gt;, and all of them for being helpful on Discord.&lt;/p&gt; &#xA;&lt;p&gt;Interested in adding flying vehicles or a similar mechanic to an existing game? Let me know!&lt;/p&gt; &#xA;&lt;p&gt;Audio system made with &lt;a href=&#34;https://www.fmod.com/&#34;&gt;FMOD Studio&lt;/a&gt; by Firelight Technologies Pty Ltd.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SwiftUIX/SwiftUIX</title>
    <updated>2022-06-13T02:09:54Z</updated>
    <id>tag:github.com,2022-06-13:/SwiftUIX/SwiftUIX</id>
    <link href="https://github.com/SwiftUIX/SwiftUIX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extensions and additions to the standard SwiftUI library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img align=&#34;top&#34; src=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/Assets/logo.png&#34; width=&#34;36&#34; height=&#34;36&#34;&gt; SwiftUIX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SwiftUIX/SwiftUIX/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;SwiftUIX attempts to fill the gaps of the still nascent SwiftUI framework, providing an extensive suite of components, extensions and utilities to complement the standard library. This project is &lt;strong&gt;by far&lt;/strong&gt; the most complete port of missing UIKit/AppKit functionality, striving to deliver it in the most Apple-like fashion possible.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/#why&#34;&gt;Why&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/#contents&#34;&gt;Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Why&lt;/h1&gt; &#xA;&lt;p&gt;The goal of this project is to &lt;strong&gt;complement&lt;/strong&gt; the SwiftUI standard library, offering hundreds of extensions and views that empower you, the developer, to build applications with the ease promised by the revolution that is SwiftUI.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 13, macOS 10.15, tvOS 13, or watchOS 6&lt;/li&gt; &#xA; &lt;li&gt;Swift 5.5+&lt;/li&gt; &#xA; &lt;li&gt;Xcode 13.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;The preferred way of installing SwiftUIX is via the &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Xcode 11 integrates with libSwiftPM to provide support for iOS, watchOS, macOS and tvOS platforms.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In Xcode, open your project and navigate to &lt;strong&gt;File&lt;/strong&gt; → &lt;strong&gt;Swift Packages&lt;/strong&gt; → &lt;strong&gt;Add Package Dependency...&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paste the repository URL (&lt;code&gt;https://github.com/SwiftUIX/SwiftUIX&lt;/code&gt;) and click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For &lt;strong&gt;Rules&lt;/strong&gt;, select &lt;strong&gt;Branch&lt;/strong&gt; (with branch set to &lt;code&gt;master&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Finish&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open the Project settings, add &lt;strong&gt;SwiftUI.framework&lt;/strong&gt; to the &lt;strong&gt;Linked Frameworks and Libraries&lt;/strong&gt;, set &lt;strong&gt;Status&lt;/strong&gt; to &lt;strong&gt;Optional&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Contents&lt;/h1&gt; &#xA;&lt;p&gt;All documentation is available via the &lt;a href=&#34;https://github.com/SwiftUIX/SwiftUIX/wiki&#34;&gt;repository wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;While the project itself is stable and heavily being used in production, its documentation is &lt;strong&gt;work-in-progress&lt;/strong&gt;. Contributions are encouraged and welcomed.&lt;/p&gt; &#xA;&lt;h3&gt;UIKit → SwiftUI&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;UIKit&lt;/th&gt; &#xA;   &lt;th&gt;SwiftUI&lt;/th&gt; &#xA;   &lt;th&gt;SwiftUIX&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LPLinkView&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;LinkPresentationView&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIActivityIndicatorView&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ActivityIndicator&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIActivityViewController&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;AppActivityView&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIBlurEffect&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;BlurEffectView&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UICollectionView&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIDeviceOrientation&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;DeviceLayoutOrientation&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIImagePickerController&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ImagePicker&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIPageViewController&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PaginationView&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIScreen&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Screen&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UISearchBar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SearchBar&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIScrollView&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ScrollView&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CocoaScrollView&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UISwipeGestureRecognizer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SwipeGestureOverlay&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UITableView&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;List&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CocoaList&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UITextField&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CocoaTextField&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIModalPresentationStyle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModalPresentationStyle&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIViewControllerTransitioningDelegate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIHostingControllerTransitioningDelegate&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIVisualEffectView&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;VisualEffectView&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UIWindow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;WindowOverlay&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Activity&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ActivityIndicator&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ActivityIndicator()&#xA;    .animated(true)&#xA;    .style(.large)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;AppActivityView&lt;/code&gt; - a SwiftUI port for &lt;code&gt;UIActivityViewController&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;AppActivityView(activityItems: [...])&#xA;    .excludeActivityTypes([...])&#xA;    .onCancel { }&#xA;    .onComplete { result in&#xA;        foo(result)&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Appearance&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;View/visible(_:)&lt;/code&gt; - Sets a view&#39;s visibility.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Error Handling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;TryButton&lt;/code&gt; - A button capable of performing throwing functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Geometry&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;flip3D(_:axis:reverse:)&lt;/code&gt; - Flips this view.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RectangleCorner&lt;/code&gt; - A corner of a Rectangle.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ZeroSizeView&lt;/code&gt; - A zero-size view for when &lt;code&gt;EmptyView&lt;/code&gt; just doesn&#39;t work.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Keyboard&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Keyboard&lt;/code&gt; - An object representing the keyboard.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;View/padding(.keyboard) &lt;/code&gt;- Pads this view with the active system height of the keyboard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Link Presentation:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;LinkPresentationView&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;LinkPresentationView(url: url)&#xA;    .frame(height: 192)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Navigation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;View/navigationBarColor(_:)&lt;/code&gt; - Configures the color of the navigation bar for this view.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;View/navigationBarTranslucent(_:)&lt;/code&gt; - Configures the translucency of the navigation bar for this view.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;View/navigationBarTransparent(_:)&lt;/code&gt; - Configures the transparency of the navigation bar for this view.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pagination&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;PaginationView&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;PaginationView(axis: .horizontal) {&#xA;    ForEach(0..&amp;lt;10, id: \.hashValue) { index in&#xA;        Text(String(index))&#xA;    }&#xA;}&#xA;.currentPageIndex($...)&#xA;.pageIndicatorAlignment(...)&#xA;.pageIndicatorTintColor(...)&#xA;.currentPageIndicatorTintColor(...)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Scrolling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;View/isScrollEnabled(_:)&lt;/code&gt; - Adds a condition that controls whether users can scroll within this view. Works with:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;CocoaList&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;CocoaScrollView&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;TextView&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Does not work with SwiftUI&#39;s &lt;code&gt;ScrollView&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Search&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;SearchBar&lt;/code&gt; - A SwiftUI port for &lt;code&gt;UISearchBar&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;struct ContentView: View {&#xA;    @State var isEditing: Bool = false&#xA;    @State var searchText: String = &#34;&#34;&#xA;    &#xA;    var body: some View {&#xA;        SearchBar(&#34;Search...&#34;, text: $searchText, isEditing: $isEditing)&#xA;            .showsCancelButton(isEditing)&#xA;            .onCancel { print(&#34;Canceled!&#34;) }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;View/navigationSearchBar(_:)&lt;/code&gt; - Sets the navigation search bar for this view.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Text(&#34;Hello, world!&#34;)&#xA;    .navigationSearchBar {&#xA;        SearchBar(&#34;Placeholder&#34;, text: $text)&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;View/navigationSearchBarHiddenWhenScrolling(_:)&lt;/code&gt; - Hides the integrated search bar when scrolling any underlying content.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Screen&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Screen&lt;/code&gt; - A representation of the device&#39;s screen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UserInterfaceIdiom&lt;/code&gt; - A SwiftUI port for &lt;code&gt;UIUserInterfaceIdiom&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UserInterfaceOrientation&lt;/code&gt; - A SwiftUI port for &lt;code&gt;UserInterfaceOrientation&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Scroll&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ScrollIndicatorStyle&lt;/code&gt; - A type that specifies the appearance and interaction of all scroll indicators within a view hierarchy &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;HiddenScrollViewIndicatorStyle&lt;/code&gt; - A scroll indicator style that hides all scroll view indicators within a view hierarchy.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Status Bar&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;View/statusItem(id:image:&lt;/code&gt;) - Adds a status bar item configured to present a popover when clicked&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;Text(&#34;Hello, world!&#34;)&#xA;    .statusItem(id: &#34;foo&#34;, image: .system(.exclamationmark)) {&#xA;        Text(&#34;Popover!&#34;)&#xA;            .padding()&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Text&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;TextView&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;TextView(&#34;placeholder text&#34;, text: $text, onEditingChanged: { editing in&#xA;    print(editing)&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Visual Effects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;VisualEffectBlurView&lt;/code&gt; - A blur effect view that expands to fill.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;VisualEffectBlurView(blurStyle: .dark)&#xA;    .edgesIgnoringSafeArea(.all)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Window&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;View/windowOverlay(isKeyAndVisible:content:)&lt;/code&gt; - Makes a window key and visible when a given condition is true.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;SwiftUIX welcomes contributions in the form of GitHub issues and pull-requests. Please refer the &lt;a href=&#34;https://github.com/SwiftUIX/SwiftUIX/projects&#34;&gt;projects&lt;/a&gt; section before raising a bug or feature request, as it may already be under progress.&lt;/p&gt; &#xA;&lt;p&gt;To create an Xcode project for SwiftUIX run &lt;code&gt;bundle install; bundle exec fastlane generate_xcodeproj&lt;/code&gt;. To check the automated builds for SwiftUIX run &lt;code&gt;bundle install; bundle exec fastlane build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;SwiftUIX is licensed under the &lt;a href=&#34;https://vmanot.mit-license.org&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;SwiftUIX is and will always be free and open. Maintaining SwiftUIX, however, is a time-consuming endeavour. If you&#39;re reliant on SwiftUIX for your app/project and would like to see it grow, consider contributing/donating as way to help.&lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;SwiftUIX is a project of &lt;a href=&#34;https://github.com/vmanot&#34;&gt;@vmanot&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>