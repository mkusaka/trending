<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-13T01:39:46Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apple/swift-distributed-tracing</title>
    <updated>2025-08-13T01:39:46Z</updated>
    <id>tag:github.com,2025-08-13:/apple/swift-distributed-tracing</id>
    <link href="https://github.com/apple/swift-distributed-tracing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Instrumentation library for Swift server applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Distributed Tracing&lt;/h1&gt; &#xA;&lt;p&gt;A Distributed Tracing API for Swift.&lt;/p&gt; &#xA;&lt;p&gt;This is a collection of Swift libraries enabling the instrumentation of server side applications using tools such as tracers. Our goal is to provide a common foundation that allows to freely choose how to instrument systems with minimal changes to your actual code.&lt;/p&gt; &#xA;&lt;p&gt;While Swift Distributed Tracing allows building all kinds of &lt;em&gt;instruments&lt;/em&gt;, which can co-exist in applications transparently, its primary use is instrumenting multi-threaded and distributed systems with Distributed Traces.&lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;p&gt;This project uses the context propagation type defined independently in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apple/swift-service-context&#34;&gt;swift-service-context&lt;/a&gt; -- &lt;a href=&#34;https://swiftpackageindex.com/apple/swift-service-context/main/documentation/servicecontextmodule/servicecontext&#34;&gt;&lt;code&gt;ServiceContext&lt;/code&gt;&lt;/a&gt; (zero dependencies)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;This project is designed in a very open and extensible manner, such that various instrumentation and tracing systems can be built on top of it.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of the tracing package is to serve as common API for all tracer and instrumentation implementations. Thanks to this, libraries may only need to be instrumented once, and then be used with any tracer which conforms to this API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;backends&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tracing Backends&lt;/h3&gt; &#xA;&lt;p&gt;Compatible &lt;code&gt;Tracer&lt;/code&gt; implementations:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swift-otel&#34;&gt;@swift-otel&lt;/a&gt; / &lt;a href=&#34;https://github.com/swift-otel/swift-otel&#34;&gt;Swift &lt;strong&gt;OTel&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ðŸŸ¢ Updated for 1.0&lt;/td&gt; &#xA;   &lt;td&gt;Exports spans to &lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34;&gt;&lt;strong&gt;OpenTelemetry Collector&lt;/strong&gt;&lt;/a&gt;; Compatible with &lt;strong&gt;Zipkin&lt;/strong&gt;, &lt;strong&gt;X-Ray&lt;/strong&gt; &lt;strong&gt;Jaeger&lt;/strong&gt;, and more.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;Your library?&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;...&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://forums.swift.org/c/server/43&#34;&gt;Get in touch!&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you know of any other library please send in a &lt;a href=&#34;https://github.com/apple/swift-distributed-tracing/compare&#34;&gt;pull request&lt;/a&gt; to add it to the list, thank you!&lt;/p&gt; &#xA;&lt;h3&gt;Libraries &amp;amp; Frameworks&lt;/h3&gt; &#xA;&lt;p&gt;As this API package was just released, no projects have yet fully adopted it, the following table for not serves as reference to prior work in adopting tracing work. As projects move to adopt tracing completely, the table will be used to track adoption phases of the various libraries.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;HTTP Servers/Frameworks&lt;/th&gt; &#xA;   &lt;th&gt;Integrates&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hummingbird-project/hummingbird&#34;&gt;Hummingbird&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tracing&lt;/td&gt; &#xA;   &lt;td&gt;ðŸŸ¢ Built-in support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vapor/vapor&#34;&gt;Vapor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tracing&lt;/td&gt; &#xA;   &lt;td&gt;ðŸŸ¢ Built-in support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;Your library?&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;...&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://forums.swift.org/c/server/43&#34;&gt;Get in touch!&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you know of any other library please send in a &lt;a href=&#34;https://github.com/apple/swift-distributed-tracing/compare&#34;&gt;pull request&lt;/a&gt; to add it to the list, thank you!&lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;Reference Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;strong&gt;&lt;a href=&#34;https://swiftpackageindex.com/apple/swift-distributed-tracing/documentation/tracing&#34;&gt;reference documentation&lt;/a&gt;&lt;/strong&gt; for detailed guides about adopting distributed tracing in your applications, libraries and frameworks.&lt;/p&gt;</summary>
  </entry>
</feed>