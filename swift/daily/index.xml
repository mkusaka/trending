<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-12T02:00:05Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>matteozappia/DynamicCowTS</title>
    <updated>2023-12-12T02:00:05Z</updated>
    <id>tag:github.com,2023-12-12:/matteozappia/DynamicCowTS</id>
    <link href="https://github.com/matteozappia/DynamicCowTS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Enable Dynamic Island on every device that is running iOS 16.0 - 16.6.1 / 17.0 using TrollStore.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matteozappia/DynamicCowTS/main/Images/dynamiccowiconpreview.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &#xA;&lt;h1&gt;DynamicCowTS&lt;/h1&gt; &#xA;&lt;p&gt;Enable Dynamic Island on every device that is running iOS 16.0 - 16.6.1 / 17.0 using TrollStore.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://buymeacoffee.com/aboutzeph&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matteozappia/DynamicCowTS/main/Images/buymeacoffeebutton.png&#34; width=&#34;200&#34; height=&#34;56&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ko-fi.com/aboutzeph&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matteozappia/DynamicCowTS/main/Images/kofibutton.png&#34; width=&#34;358&#34; height=&#34;56&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matteozappia/DynamicCowTS/main/Images/IMG_0101.PNG&#34; width=&#34;300&#34; height=&#34;650&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/matteozappia/DynamicCowTS/main/Images/IMG_0102.PNG&#34; width=&#34;300&#34; height=&#34;650&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/matteozappia/DynamicCowTS/main/Images/IMG_0105.PNG&#34; width=&#34;300&#34; height=&#34;650&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/matteozappia/DynamicCowTS/main/Images/IMG_0106.PNG&#34; width=&#34;300&#34; height=&#34;650&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshoot&lt;/h2&gt; &#xA;&lt;p&gt;DynamicCowTS has a troubleshoot section to restore the plist file, but if you want you can also use &lt;a href=&#34;https://routinehub.co/shortcut/4920/&#34;&gt;this shortcut&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The shortcut will &#34;reset&#34; the plist file to an initial state solving any kind of problem.&lt;/p&gt; &#xA;&lt;p&gt;If the app somehow broke completely and you are an advanced user you can also manually copy and paste in mobile gestalt cache path and eventually, if you are on iPhone XR or 11 in iokit graphics family path, the two plist files located in &lt;code&gt;/var/mobile/Documents/.DynamicCowBackups&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How to use the shortcut&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Simply start it and wait for a drop-down menu to appear.&lt;/li&gt; &#xA; &lt;li&gt;Then click on &#34;View it in Quick View&#34;.&lt;/li&gt; &#xA; &lt;li&gt;You should see some writing, if the file is empty restart the shortcut.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;iOS 16.7.x / iOS 17.0.1 or newer it will never be supported as it rely on TrollStore.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;iOS 15/14/13 etc. are &lt;strong&gt;NOT&lt;/strong&gt; and will never be supported, as this is &lt;strong&gt;NOT&lt;/strong&gt; a tweak. If you have one of the above listed iOS versions, please stay away from it cause it can bootloop your device.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;I will keep you updated on &lt;a href=&#34;https://x.com/aboutzeph&#34;&gt;X / Twitter&lt;/a&gt; and on this readme about new features and bug fixes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Halo-Michael&#34;&gt;Halo-Michael&lt;/a&gt; for killAll binary.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>alienator88/Pearcleaner</title>
    <updated>2023-12-12T02:00:05Z</updated>
    <id>tag:github.com,2023-12-12:/alienator88/Pearcleaner</id>
    <link href="https://github.com/alienator88/Pearcleaner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source mac app cleaner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pearcleaner&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/e6829883-894e-49a1-bc75-2c4550593b98&#34; align=&#34;left&#34; width=&#34;128&#34; height=&#34;128&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Status: &lt;/strong&gt;Maintained &lt;br&gt; &lt;strong&gt;Version: &lt;/strong&gt;1.8 &lt;br&gt; &lt;a href=&#34;https://github.com/alienator88/Pearcleaner/releases&#34;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt; Â· &lt;a href=&#34;https://github.com/alienator88/Pearcleaner/commits&#34;&gt;Commits&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;An open-source mac app cleaner inspired by &lt;a href=&#34;https://freemacsoft.net/appcleaner/&#34;&gt;Freemacsoft&#39;s AppCleaner&lt;/a&gt; and &lt;a href=&#34;https://sunknudsen.com/privacy-guides/how-to-clean-uninstall-macos-apps-using-appcleaner-open-source-alternative&#34;&gt;Sun Knudsen&#39;s Privacy Guides&lt;/a&gt; post on his app-cleaner script. This project was born out of wanting to learn more. There&#39;s probably parts of the code that could be done better as I&#39;m fairly new to Swift, if you have suggestions I&#39;m open to hearing them!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;100% Swift/SwiftUI&lt;/li&gt; &#xA; &lt;li&gt;Super small app size (~2MB)&lt;/li&gt; &#xA; &lt;li&gt;Quick file search&lt;/li&gt; &#xA; &lt;li&gt;Optional Sentinel monitor helper that can be enabled to watch Trash folder for deleted apps&lt;/li&gt; &#xA; &lt;li&gt;Sentinel monitor is extremely small (210KB) and uses ~2mb of ram to run in the background and file watch. Communicates to app via custom url scheme instead of xpc to keep things even lighter&lt;/li&gt; &#xA; &lt;li&gt;Mini mode which can be enabled from Settings&lt;/li&gt; &#xA; &lt;li&gt;Can drop apps to uninstall directly on the Pearcleaner Dock icon itself or the drop target in the app window&lt;/li&gt; &#xA; &lt;li&gt;Will differentiate between regular apps and Safari web-apps with a &#34;web&#34; label next to each item in the list&lt;/li&gt; &#xA; &lt;li&gt;Will differentiate between regular apps and wrapped iOS apps with an &#34;iOS&#34; label next to each item in the list&lt;/li&gt; &#xA; &lt;li&gt;Has clean uninstall menu option for the Pearcleaner app itself if you want to stop using it and get rid of all files and launch items&lt;/li&gt; &#xA; &lt;li&gt;Requires Full Disk permission to search for files and also Accessibility to delete/restore files&lt;/li&gt; &#xA; &lt;li&gt;Built-in auto-updater that pulls latest release notes and binaries from GitHub Releases (Might not work well if app is not in /Applications folder because of permissions)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Regular Mode&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/db6aae06-be0d-42af-bcab-cdb8e5bda42a&#34; align=&#34;left&#34; width=&#34;400&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/70066a2a-fb33-40e5-b328-8fc2253e25ff&#34; align=&#34;center&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/a9cec1e2-1a13-42aa-a3e5-3cb8c448dd3e&#34; align=&#34;left&#34; width=&#34;400&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/5249d735-f87b-41c7-83da-b84a21ac9552&#34; align=&#34;center&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mini Mode&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/62f72204-5f13-49a8-8956-cd56ef52acdf&#34; align=&#34;center&#34; width=&#34;400&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/9cf8e848-1efe-4475-8f4b-cd89a51ec10e&#34; align=&#34;left&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/238dfeb7-2841-4ada-bbbf-35cdda46fde1&#34; align=&#34;center&#34; width=&#34;400&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/alienator88/Pearcleaner/assets/6263626/b593564b-8c7e-42a2-a25b-124a0efb6a24&#34; align=&#34;left&#34; width=&#34;400&#34;&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MacOS 13.0+&lt;/li&gt; &#xA; &lt;li&gt;Using some newer SwiftUI code which requires 13.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Pearcleaner&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Releases&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Pre-compiled, always up-to-date versions are available from my releases page. You might need to open this with right click-open since I don&#39;t have a paid developer account.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Homebrew&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since I don&#39;t have a paid developer account, I can&#39;t submit to the main Homebrew cask repo. You can still add the app via Homebrew by tapping my repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew tap alienator88/homebrew-cask&#xA;brew install --cask pearcleaner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Much appreciation to &lt;a href=&#34;https://freemacsoft.net/appcleaner/&#34;&gt;Freemacsoft&#39;s AppCleaner&lt;/a&gt; and &lt;a href=&#34;https://sunknudsen.com/privacy-guides/how-to-clean-uninstall-macos-apps-using-appcleaner-open-source-alternative&#34;&gt;Sun Knudsen&#39;s app-cleaner script&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>appbrewery/EggTimer-iOS13</title>
    <updated>2023-12-12T02:00:05Z</updated>
    <id>tag:github.com,2023-12-12:/appbrewery/EggTimer-iOS13</id>
    <link href="https://github.com/appbrewery/EggTimer-iOS13" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn to Code While Building Apps - The Complete iOS Development Bootcamp&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appbrewery/EggTimer-iOS13/master/Documentation/AppBreweryBanner.png&#34; alt=&#34;App Brewery Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Egg Timer&lt;/h1&gt; &#xA;&lt;h2&gt;Our Goal&lt;/h2&gt; &#xA;&lt;p&gt;This module will be a mix of tutorials and challenges. Most importantly, we want you to get comfortable with looking up how to do something you&#39;ve never done before. In certain places of this module, youâll need to follow the 5 step process you learnt in the Xylophone module and use Google search, StackOverflow and Apple Documentation to make your code do what you want it to. But there are also other parts where weâll take you step-by-step through new Swift programming concepts.&lt;/p&gt; &#xA;&lt;h2&gt;What You&#39;ll Make&lt;/h2&gt; &#xA;&lt;p&gt;Youâll be building a beautiful egg timer app to boil your eggs to perfection depending on how you prefer your eggs.&lt;/p&gt; &#xA;&lt;h2&gt;What you will learn&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift Collection types - Dictionaries&lt;/li&gt; &#xA; &lt;li&gt;The Swift Timer API&lt;/li&gt; &#xA; &lt;li&gt;Conditional statements - IF/ELSE&lt;/li&gt; &#xA; &lt;li&gt;Conditional statements - Switch&lt;/li&gt; &#xA; &lt;li&gt;Functions with outputs&lt;/li&gt; &#xA; &lt;li&gt;How to use the ProgressView&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a companion project to The App Brewery&#39;s Complete App Development Bootcamp, check out the full course at &lt;a href=&#34;https://www.appbrewery.co/&#34;&gt;www.appbrewery.co&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appbrewery/EggTimer-iOS13/master/Documentation/readme-end-banner.png&#34; alt=&#34;End Banner&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>