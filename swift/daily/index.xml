<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-21T01:46:50Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AvdLee/appstoreconnect-swift-sdk</title>
    <updated>2023-03-21T01:46:50Z</updated>
    <id>tag:github.com,2023-03-21:/AvdLee/appstoreconnect-swift-sdk</id>
    <link href="https://github.com/AvdLee/appstoreconnect-swift-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Swift SDK to work with the App Store Connect API from Apple.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;App Store Connect Swift SDK&lt;/h1&gt; &#xA;&lt;p&gt;The Swift SDK to work with the App Store Connect API from Apple.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://app.bitrise.io/app/af49e5de1f935d23.svg?token=3lWTmdlNhbHtdG9KsuR9gw&#34; alt=&#34;Bitrise Status&#34;&gt; &lt;a href=&#34;https://swiftpackageindex.com/AvdLee/appstoreconnect-swift-sdk&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2FAvdLee%2Fappstoreconnect-swift-sdk%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;Swift Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/AvdLee/appstoreconnect-swift-sdk&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2FAvdLee%2Fappstoreconnect-swift-sdk%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;Platform Compatibility&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Supports-_Swift_Package_Manager-F16D39.svg?style=flat&#34; alt=&#34;Dependency frameworks&#34;&gt; &lt;a href=&#34;https://twitter.com/twannl&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@Twannl-blue.svg?style=flat&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Kickstart information on the API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/app-store-connect/api/&#34;&gt;Automate your workflow with the App Store Connect API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/documentation/appstoreconnectapi&#34;&gt;Official Apple Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WWDC 2018 Talk &lt;a href=&#34;https://developer.apple.com/videos/play/wwdc2018/303/&#34;&gt;Automating App Store Connect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.avanderlee.com/general/app-store-connect-api-adoption/&#34;&gt;App Store Connect API adoption with use case examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Included in this SDK&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Configuration with API Key&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; APIProvider with endpoints structure&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add models for all endpoints&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; JWT Logic to sign requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get started section in the readme&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for Mac&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Supports &lt;em&gt;all&lt;/em&gt; requests due to OpenAPI generated requests and entities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requesting API Access&lt;/h2&gt; &#xA;&lt;p&gt;To request access, go to the new API Keys section in Users and Access in App Store Connect. Please note that you must be the Team Agent (Legal role) of a development team enrolled as an organization. Access for developers enrolled as an individual is coming soon.&lt;/p&gt; &#xA;&lt;h2&gt;How to use the SDK?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Not all endpoints are available yet, we&#39;re working hard to implement them all (see &lt;a href=&#34;https://raw.githubusercontent.com/AvdLee/appstoreconnect-swift-sdk/master/Sources/Endpoints&#34;&gt;Endpoints&lt;/a&gt;).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1. Import the framework:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import AppStoreConnect_Swift_SDK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Create your API Configuration&lt;/h4&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://appstoreconnect.apple.com/access/api&#34;&gt;https://appstoreconnect.apple.com/access/api&lt;/a&gt; and create your own key. This is also the page to find your private key ID and the issuer ID.&lt;/p&gt; &#xA;&lt;p&gt;After downloading your private key, you can open the .p8 file containing the private key in a text editor which will show like the following content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-----BEGIN PRIVATE KEY-----&#xA;FDFDGgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwQgPaXyFvZfNydDEjxgjUCUxyGjXcQxiulEdGxoVbasV3GgCgYIKomokDj0DAQehRANCAAASffd/DU3TUWAoLmqE6hZL9A7i0DWpXtmIDCDiITRznC6K4/WjdIcuMcixy+m6O0IrffxJOablIX2VM8sHRpoiuy&#xA;-----END PRIVATE KEY-----&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy the contents and remove the whitelines, &lt;code&gt;-----BEGIN PRIVATE KEY-----&lt;/code&gt; and &lt;code&gt;-----END PRIVATE KEY-----&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use this private key together with the issuer ID and the private key ID to create your configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let configuration = APIConfiguration(issuerID: &#34;&amp;lt;YOUR ISSUER ID&amp;gt;&#34;, privateKeyID: &#34;&amp;lt;YOUR PRIVATE KEY ID&amp;gt;&#34;, privateKey: &#34;&amp;lt;YOUR PRIVATE KEY&amp;gt;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Create an APIProvider and perform a request&lt;/h4&gt; &#xA;&lt;p&gt;After creating an &lt;code&gt;APIProvider&lt;/code&gt; instance with your &lt;code&gt;APIConfiguration&lt;/code&gt; you can start performing your first request.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let request = APIEndpoint&#xA;    .v1&#xA;    .apps&#xA;    .get(parameters: .init(&#xA;        sort: [.bundleID],&#xA;        fieldsApps: [.appInfos, .name, .bundleID],&#xA;        limit: 5&#xA;    ))&#xA;let apps = try await self.provider.request(request).data&#xA;print(&#34;Did fetch \(apps.count) apps&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Handling paged responses&lt;/h3&gt; &#xA;&lt;p&gt;If the responses from the API request can be delivered in multiple pages, you can iterate over all of them using an AsyncSequence or individually request the next page following the current one.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let request = APIEndpoint&#xA;    .v1&#xA;    .apps&#xA;    .get(parameters: .init(&#xA;        sort: [.bundleID],&#xA;        fieldsApps: [.appInfos, .name, .bundleID],&#xA;        limit: 2&#xA;    ))&#xA;&#xA;// Demonstration of AsyncSequence result of APIProvider.paged(_)&#xA;var allApps: [App] = []&#xA;for try await pagedResult in provider.paged(request) {&#xA;    allApps.append(contentsOf: pagedResult.data)&#xA;}&#xA;print(&#34;There are \(allApps.count) apps in total&#34;)&#xA;&#xA;// Demonstration of APIProvider.request(_:isPagedResponse:) and APIProvider.request(_: pageAfter:)&#xA;let firstPageResult = try await provider.request(request)&#xA;let firstPageApps = firstPageResult.data&#xA;print(&#34;The first page of results has \(firstPageApps.count) apps&#34;)&#xA;&#xA;if provider.request(request, isPagedResponse: firstPageResult) {&#xA;    if let nextPage = try await provider.request(request, pageAfter: firstPageResult) {&#xA;        let secondPageApps = nextPage.data&#xA;        print(&#34;The second page of results has \(secondPageApps.count) apps&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Handling errors&lt;/h3&gt; &#xA;&lt;p&gt;Whenever an error is returned from a request, you can get the details by catching the error as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;do {&#xA;    print(try await self.provider.request(requestWithError).data)&#xA;} catch APIProvider.Error.requestFailure(let statusCode, let errorResponse, _) {&#xA;    print(&#34;Request failed with statuscode: \(statusCode) and the following errors:&#34;)&#xA;    errorResponse?.errors?.forEach({ error in&#xA;        print(&#34;Error code: \(error.code)&#34;)&#xA;        print(&#34;Error title: \(error.title)&#34;)&#xA;        print(&#34;Error detail: \(error.detail)&#34;)&#xA;    })&#xA;} catch {&#xA;    print(&#34;Something went wrong fetching the apps: \(error.localizedDescription)&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The error title and detail should help you solve the failure. For more info regarding errors, see: &lt;a href=&#34;https://developer.apple.com/documentation/appstoreconnectapi/interpreting_and_handling_errors/parsing_the_error_response_code&#34;&gt;Parsing the Error Response Code&lt;/a&gt; as documented by Apple.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler. It is in early development, but this SDK does support its use on supported platforms.&lt;/p&gt; &#xA;&lt;p&gt;Once you have your Swift package set up, adding the SDK as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/AvdLee/appstoreconnect-swift-sdk.git&#34;, .upToNextMajor(from: &#34;2.0.0&#34;))&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To help with the development of this repository you need to follow the next steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;clone this repository&lt;/li&gt; &#xA; &lt;li&gt;download the submodules dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;you should be able to run the tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle exec fastlane test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update OpenAPI generated code&lt;/h3&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install jq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will attempt to download the App Store Connect &lt;a href=&#34;https://developer.apple.com/sample-code/app-store-connect/app-store-connect-openapi-specification.zip&#34;&gt;OpenAPI specification&lt;/a&gt; from Apple, and re-run the &lt;a href=&#34;https://github.com/CreateAPI/CreateAPI&#34;&gt;CreateAPI&lt;/a&gt; generator to produce the updated source code.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can run &lt;code&gt;make download&lt;/code&gt; and &lt;code&gt;make generate&lt;/code&gt; individually.&lt;/p&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an &lt;a href=&#34;https://github.com/AvdLee/appstoreconnect-swift-sdk/issues&#34;&gt;issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;have a feature request&lt;/strong&gt;, open an &lt;a href=&#34;https://github.com/AvdLee/appstoreconnect-swift-sdk/issues&#34;&gt;issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a &lt;a href=&#34;https://github.com/AvdLee/appstoreconnect-swift-sdk/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Applications that use the SDK&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://apps.apple.com/app/id1644699015&#34;&gt;Starly: reviews, reply to apps&lt;/a&gt; developed by &lt;a href=&#34;https://twitter.com/Viktorianec&#34;&gt;Viktor Grushevskiy&lt;/a&gt;. The Starly app is a project that will allow developers to manage reviews on the App Store with ease. You can reply to them, translate them to the language you want, filter them, and create templates. iOS and macOS versions available.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://apps.apple.com/us/app/superstar-respond-to-reviews/id1635833987&#34;&gt;🌟 Superstar: App Store Review manager&lt;/a&gt; developed by &lt;a href=&#34;https://twitter.com/jordibruin&#34;&gt;Jordi Bruin&lt;/a&gt;. Superstar uses the App Store Connect API to help you respond to your App Store customer reviews in seconds. Use custom templates to quickly reply with professional responses. Translate reviews and your responses directly with free DeepL integration. Available for free for a limited time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://apps.apple.com/app/id6443788342&#34;&gt;AppsMan: Manage app metada globally&lt;/a&gt; developed by &lt;a href=&#34;https://twitter.com/CodeWithKarma&#34;&gt;Karmjit Singh&lt;/a&gt;. The AppsMan app is a project that will allow developers to manage apps localisable data on the App Store with ease. You can easily update the data for one language and copy over to other and save. You can see the previous versions details as well. Only macOS versions available.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;App Store Connect Swift SDK&lt;/strong&gt; is available under the MIT license, and uses source code from open source projects. See the &lt;a href=&#34;https://github.com/AvdLee/appstoreconnect-swift-sdk/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;This project is originally created by &lt;a href=&#34;https://www.twitter.com/twannl&#34;&gt;Antoine van der Lee&lt;/a&gt; but has a lot of &lt;a href=&#34;https://github.com/AvdLee/appstoreconnect-swift-sdk/graphs/contributors&#34;&gt;great contributors&lt;/a&gt;. We&#39;re open for contributions of any kind to make this project even better.&lt;/p&gt;</summary>
  </entry>
</feed>