<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-11T01:39:48Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>devxoul/Then</title>
    <updated>2022-10-11T01:39:48Z</updated>
    <id>tag:github.com,2022-10-11:/devxoul/Then</id>
    <link href="https://github.com/devxoul/Then" rel="alternate"></link>
    <summary type="html">&lt;p&gt;✨ Super sweet syntactic sugar for Swift initializers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Then&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift-5.0-orange.svg?sanitize=true&#34; alt=&#34;Swift&#34;&gt; &lt;a href=&#34;https://cocoapods.org/pods/Then&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/v/Then.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/devxoul/Then&#34;&gt;&lt;img src=&#34;https://travis-ci.org/devxoul/Then.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;✨ Super sweet syntactic sugar for Swift initializers.&lt;/p&gt; &#xA;&lt;h2&gt;At a Glance&lt;/h2&gt; &#xA;&lt;p&gt;Initialize UILabel &lt;strong&gt;then&lt;/strong&gt; set its properties.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let label = UILabel().then {&#xA;  $0.textAlignment = .center&#xA;  $0.textColor = .black&#xA;  $0.text = &#34;Hello, World!&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is equivalent to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let label: UILabel = {&#xA;  let label = UILabel()&#xA;  label.textAlignment = .center&#xA;  label.textColor = .black&#xA;  label.text = &#34;Hello, World!&#34;&#xA;  return label&#xA;}()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tips and Tricks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can use &lt;code&gt;then()&lt;/code&gt; to all of &lt;code&gt;NSObject&lt;/code&gt; subclasses.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let queue = OperationQueue().then {&#xA;  $0.maxConcurrentOperationCount = 1&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Want to use with your own types? Just make extensions.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;extension MyType: Then {}&#xA;&#xA;let instance = MyType().then {&#xA;  $0.really = &#34;awesome!&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;with()&lt;/code&gt; when copying the value types.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let newFrame = oldFrame.with {&#xA;  $0.size.width = 200&#xA;  $0.size.height = 100&#xA;}&#xA;newFrame.width // 200&#xA;newFrame.height // 100&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;do()&lt;/code&gt; to do something with less typing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;UserDefaults.standard.do {&#xA;  $0.set(&#34;devxoul&#34;, forKey: &#34;username&#34;)&#xA;  $0.set(&#34;devxoul@gmail.com&#34;, forKey: &#34;email&#34;)&#xA;  $0.synchronize()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Real World Example&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s an example usage in an UIViewController subclass.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;final class MyViewController: UIViewController {&#xA;&#xA;  let titleLabel = UILabel().then {&#xA;    $0.textColor = .black&#xA;    $0.textAlignment = .center&#xA;  }&#xA;&#xA;  let tableView = UITableView().then {&#xA;    $0.backgroundColor = .clear&#xA;    $0.separatorStyle = .none&#xA;    $0.register(MyCell.self, forCellReuseIdentifier: &#34;myCell&#34;)&#xA;  }&#xA;&#xA;  override func viewDidLoad() {&#xA;    super.viewDidLoad()&#xA;    self.view.addSubview(self.titleLabel)&#xA;    self.view.addSubview(self.tableView)&#xA;  }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Then&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using &lt;a href=&#34;https://swift.org/package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import PackageDescription&#xA;&#xA;let package = Package(&#xA;  name: &#34;MyAwesomeApp&#34;,&#xA;  dependencies: [&#xA;    .Package(url: &#34;https://github.com/devxoul/Then&#34;, majorVersion: 2),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Then&lt;/strong&gt; is under MIT license. See the &lt;a href=&#34;https://raw.githubusercontent.com/devxoul/Then/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FluidGroup/Brightroom</title>
    <updated>2022-10-11T01:39:48Z</updated>
    <id>tag:github.com,2022-10-11:/FluidGroup/Brightroom</id>
    <link href="https://github.com/FluidGroup/Brightroom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📷 A composable image editor using Core Image and Metal.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Brightroom&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;i&gt;A full-featured composable image editor with a customizable UI -- all backed by the power of Metal.&lt;/i&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Image Editor&lt;/th&gt; &#xA;   &lt;th&gt;Photo Cropping&lt;/th&gt; &#xA;   &lt;th&gt;Face Detection&lt;/th&gt; &#xA;   &lt;th&gt;Masking&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/1888355/112865486-c9154880-90f3-11eb-89eb-bc55f924f517.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/1888355/112720381-4ea4c700-8f41-11eb-8ec3-2446518ded1b.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/1888355/112720303-cde5cb00-8f40-11eb-941f-c134368b87c5.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/1888355/112927084-6487d700-914f-11eb-86a5-28f9373285e6.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create your own image editor UI&lt;/strong&gt; by composing components. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Components are built separately and run standalone using an &lt;code&gt;EditingStack&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;EditingStacks&lt;/code&gt; &lt;strong&gt;manage editing history&lt;/strong&gt; and render images. &lt;em&gt;It&#39;s like a headless browser!&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Edit and render using &lt;a href=&#34;https://instagram-engineering.com/bringing-wide-color-to-instagram-5a5481802d7d&#34;&gt;&lt;strong&gt;P3 Wide Color&lt;/strong&gt; Gamut&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;a href=&#34;https://eoimages.gsfc.nasa.gov/images/imagerecords/78000/78314/VIIRS_3Feb2012_lrg.jpg&#34;&gt;Super Large Photos™ (≤ 12000 pixels)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Previews and rendering backed with the power of &lt;strong&gt;Metal&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create custom-drawn &lt;strong&gt;masks&lt;/strong&gt; on photos.&lt;/li&gt; &#xA; &lt;li&gt;Drop-in support for your own &lt;strong&gt;custom filters using LUTs&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Load and download &lt;strong&gt;remote images&lt;/strong&gt; for editing with a &lt;code&gt;URL&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Support for both UIKit and SwiftUI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS Target&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Xcode Version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Swift Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS 12.0+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Xcode 12.4+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Swift 5.3+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Support the Project&lt;/h2&gt; &#xA;&lt;p&gt;Buy me a coffee or support me on &lt;a href=&#34;https://github.com/sponsors/muukii?frequency=one-time&amp;amp;sponsor=muukii&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.buymeacoffee.com/muukii&#34;&gt; &lt;img width=&#34;25%&#34; alt=&#34;yellow-button&#34; src=&#34;https://user-images.githubusercontent.com/1888355/146226808-eb2e9ee0-c6bd-44a2-a330-3bbc8a6244cf.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;🎉 v2 Now Available!&lt;/h2&gt; &#xA;&lt;p&gt;There are a few important housekeeping notes for those coming from v1.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚒ Issues are managed in the &lt;a href=&#34;https://github.com/muukii/Brightroom/projects/2&#34;&gt;v2 Project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📌 Pixel has been renamed &lt;strong&gt;Brightroom&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;📖 Detailed documentation is available &lt;a href=&#34;https://www.notion.so/muukii/Brightroom-d4c59b37610a49de8a14131d24cd6162&#34;&gt;on Notion&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🎈 &lt;strong&gt;Help Wanted&lt;/strong&gt;: CoreImage and Metal professionals!&lt;/li&gt; &#xA; &lt;li&gt;⭐️ If you&#39;re interested in v2, &lt;strong&gt;star the project&lt;/strong&gt; to motivate us! 🤠&lt;/li&gt; &#xA; &lt;li&gt;🪐 Brightroom&#39;s state management is now powered by &lt;a href=&#34;https://github.com/VergeGroup/Verge&#34;&gt;Verge&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;CocoaPods&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Brightroom/Engine&#39;&#xA;pod &#39;Brightroom/UI-Classic&#39;&#xA;pod &#39;Brightroom/UI-Crop&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Swift Package Manager&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dependencies: [&#xA;    .package(url: &#34;https://github.com/muukii/Brightroom.git&#34;, upToNextMajor: &#34;2.2.0&#34;)&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://www.notion.so/muukii/Brightroom-d4c59b37610a49de8a14131d24cd6162&#34;&gt;full documentation&lt;/a&gt; on Notion.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;PhotosCropViewController&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Create an image provider&#xA;let imageProvider = ImageProvider(image: uiImage) // URL, Data are also supported.&#xA;&#xA;// Create a Photo Crop View Controller&#xA;let controller = PhotosCropViewController(imageProvider: imageProvider)&#xA;&#xA;// Set up handlers when editing finishes&#xA;controller.handers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SwiftUI Support (BETA)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;The SwiftUI API is still in-progress and may not be production ready. We&#39;re looking for help! 🤲&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let editingStack: EditingStack&#xA;&#xA;SwiftUIPhotosCropView(editingStack: editingStack) {&#xA;  let image = try! editingStack.makeRenderer().render().swiftUIImage&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Demo &amp;amp; Full App&lt;/h1&gt; &#xA;&lt;p&gt;There is an entire open-source and production-ready app available on the App Store that uses Brightroom. It&#39;s called &lt;a href=&#34;https://github.com/muukii/Drip.app&#34;&gt;Drip&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository also contains a demo app which demonstrates what Brightroom can perform and showcases some easy experiments. Clone this repo and build the project to try it out!&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Brightroom is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt; &#xA;&lt;h1&gt;Status&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fmuukii%2FPixel?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmuukii%2FPixel.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>