<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-15T01:42:40Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>swiftlang/swift-package-manager</title>
    <updated>2024-07-15T01:42:40Z</updated>
    <id>tag:github.com,2024-07-15:/swiftlang/swift-package-manager</id>
    <link href="https://github.com/swiftlang/swift-package-manager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Package Manager for the Swift Programming Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Package Manager Project&lt;/h1&gt; &#xA;&lt;p&gt;The Swift Package Manager is a tool for managing distribution of source code, aimed at making it easy to share your code and reuse others‚Äô code. The tool directly addresses the challenges of compiling and linking Swift packages, managing dependencies, versioning, and supporting flexible distribution and collaboration models.&lt;/p&gt; &#xA;&lt;p&gt;We‚Äôve designed the system to make it easy to share packages on services like GitHub, but packages are also great for private personal development, sharing code within a team, or at any other granularity.&lt;/p&gt; &#xA;&lt;p&gt;Swift Package Manager includes a build system that can build for macOS and Linux. Starting with Xcode 11, Xcode integrates with SwiftPM to provide support for including packages in iOS, macOS, watchOS, and tvOS applications.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/swiftlang/sourcekit-lsp&#34;&gt;SourceKit-LSP&lt;/a&gt; project leverages libSwiftPM and provides &lt;a href=&#34;https://langserver.org/&#34;&gt;Language Server Protocol&lt;/a&gt; implementation for editors that support LSP.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#system-requirements&#34;&gt;System Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#reporting-issues&#34;&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please use &lt;a href=&#34;https://swift.org/getting-started/#using-the-package-manager&#34;&gt;this guide&lt;/a&gt; for learning package manager basics.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For Quick Help use the &lt;code&gt;swift package --help&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;For documentation on using Swift Package Manager, creating packages, and more, see the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/Documentation/README.md&#34;&gt;documentation directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For documentation on developing the Swift Package Manager itself, see the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For detailed documentation on the package manifest API, see &lt;a href=&#34;https://docs.swift.org/package-manager/PackageDescription/index.html&#34;&gt;PackageDescription API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For release notes with information about changes between versions, see the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/Documentation/ReleaseNotes&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The package manager‚Äôs system requirements are the same as &lt;a href=&#34;https://github.com/swiftlang/swift/raw/main/docs/HowToGuides/GettingStarted.md#system-requirements&#34;&gt;those for Swift&lt;/a&gt; with the caveat that the package manager requires Git at runtime as well as build-time.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The package manager is available as part the Swift toolchains available on &lt;a href=&#34;https://swift.org/download/&#34;&gt;Swift.org&lt;/a&gt;) including snapshots for the latest versions built from &lt;code&gt;main&lt;/code&gt; branch. For installation instructions for downloaded snapshots, please see the &lt;a href=&#34;https://swift.org/getting-started/#installing-swift&#34;&gt;Getting Started&lt;/a&gt; section of &lt;a href=&#34;https://swift.org&#34;&gt;Swift.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Swift Package Manager is also included in Xcode 8.0 and all subsequent releases.&lt;/p&gt; &#xA;&lt;p&gt;You can verify your installation by typing &lt;code&gt;swift package --version&lt;/code&gt; in a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ swift package --version&#xA;Apple Swift Package Manager - ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;There are several ways to contribute to Swift Package Manager. To learn about the policies, best practices that govern contributions to the Swift project and instructions for setting up the development environment please read the &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md&#34;&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Swift package manager uses &lt;a href=&#34;https://github.com/apple/swift-llbuild&#34;&gt;llbuild&lt;/a&gt; as the underlying build system for compiling source files. It is also open source and part of the Swift project.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Reporting issues&lt;/h2&gt; &#xA;&lt;p&gt;If you have any trouble with the package manager, help is available. We recommend:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://forums.swift.org/c/development/swiftpm/&#34;&gt;Swift Forums&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;SwiftPM&#39;s &lt;a href=&#34;https://github.com/swiftlang/swift-package-manager/issues&#34;&gt;bug tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When reporting an issue please follow the bug reporting guidelines, they can be found in &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md#reporting-issues&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you‚Äôre not comfortable sharing your question with the list, contact details for the code owners can be found in &lt;a href=&#34;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CODEOWNERS&#34;&gt;CODEOWNERS&lt;/a&gt;; however, Swift Forums is usually the best place to go for help.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2015 - 2023 Apple Inc. and the Swift project authors. Licensed under Apache License v2.0 with Runtime Library Exception.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://swift.org/LICENSE.txt&#34;&gt;https://swift.org/LICENSE.txt&lt;/a&gt; for license information.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://swift.org/CONTRIBUTORS.txt&#34;&gt;https://swift.org/CONTRIBUTORS.txt&lt;/a&gt; for Swift project authors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uias/Pageboy</title>
    <updated>2024-07-15T01:42:40Z</updated>
    <id>tag:github.com,2024-07-15:/uias/Pageboy</id>
    <link href="https://github.com/uias/Pageboy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üìñ A simple, highly informative page view controller&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/uias/Pageboy/main/Artwork/logo.png&#34; width=&#34;890&#34; alt=&#34;Pageboy&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/uias/Pageboy&#34;&gt; &lt;img src=&#34;https://github.com/uias/Pageboy/workflows/Build/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Swift-5-orange?logo=Swift&amp;amp;logoColor=white&#34;&gt; &lt;a href=&#34;https://github.com/uias/Pageboy/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/uias/Pageboy.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/SwiftPM-compatible-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; &lt;em&gt;UIPageViewController done properly.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚≠êÔ∏è Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Simplified data source management &amp;amp; enhanced delegation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamically insert &amp;amp; remove pages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Infinite scrolling support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic timer-based page transitioning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for custom animated page transitions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìã Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Pageboy requires iOS 12 / tvOS 12; and is compatible with Swift 5.&lt;/p&gt; &#xA;&lt;h2&gt;üì≤ Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Pageboy is compatible with &lt;a href=&#34;https://swift.org/package-manager&#34;&gt;Swift Package Manager&lt;/a&gt; and can be integrated via Xcode.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;Pageboy is also available through &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;Pageboy&#39;, &#39;~&amp;gt; 4.2&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;Pageboy is also available through &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ogdl&#34;&gt;github &#34;uias/Pageboy&#34; ~&amp;gt; 4.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/uias/Pageboy/main/#the-basics&#34;&gt;The Basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/uias/Pageboy/main/#pageboyViewControllerDelegate&#34;&gt;PageboyViewControllerDelegate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/uias/Pageboy/main/#navigation&#34;&gt;Navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/uias/Pageboy/main/#insertion-&amp;amp;-deletion&#34;&gt;Insertion &amp;amp; Deletion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;The Basics&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create an instance of a &lt;code&gt;PageboyViewController&lt;/code&gt; and provide it with a &lt;code&gt;PageboyViewControllerDataSource&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;class PageViewController: PageboyViewController, PageboyViewControllerDataSource {&#xA;&#xA;    override func viewDidLoad() {&#xA;        super.viewDidLoad()&#xA;        &#xA;&#x9;self.dataSource = self&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Implement the &lt;code&gt;PageboyViewControllerDataSource&lt;/code&gt; functions.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func numberOfViewControllers(in pageboyViewController: PageboyViewController) -&amp;gt; Int {&#xA;    return viewControllers.count&#xA;}&#xA;&#xA;func viewController(for pageboyViewController: PageboyViewController,&#xA;                    at index: PageboyViewController.PageIndex) -&amp;gt; UIViewController? {&#xA;    return viewControllers[index]&#xA;}&#xA;&#xA;func defaultPage(for pageboyViewController: PageboyViewController) -&amp;gt; PageboyViewController.Page? {&#xA;    return nil&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;PageboyViewControllerDelegate&lt;/h3&gt; &#xA;&lt;p&gt;The delegate functions provided by a &lt;code&gt;PageboyViewController&lt;/code&gt; are much more reliable and useful than what a raw &lt;code&gt;UIPageViewController&lt;/code&gt; provides. You can use them to find out exactly where the current page is, and when it&#39;s moved, where it&#39;s headed.&lt;/p&gt; &#xA;&lt;h4&gt;willScrollToPageAtIndex&lt;/h4&gt; &#xA;&lt;p&gt;About to embark on a transition to a new page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func pageboyViewController(_ pageboyViewController: PageboyViewController,&#xA;                           willScrollToPageAt index: Int,&#xA;                           direction: PageboyViewController.NavigationDirection,&#xA;                           animated: Bool)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;didScrollToPosition&lt;/h4&gt; &#xA;&lt;p&gt;Scrolled to a relative position along the way transitioning to a new page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func pageboyViewController(_ pageboyViewController: PageboyViewController,&#xA;                           didScrollTo position: CGPoint,&#xA;                           direction: PageboyViewController.NavigationDirection,&#xA;                           animated: Bool)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;didScrollToPage&lt;/h4&gt; &#xA;&lt;p&gt;Successfully completed a scroll transition to a page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func pageboyViewController(_ pageboyViewController: PageboyViewController,&#xA;                           didScrollToPageAt index: Int,&#xA;                           direction: PageboyViewController.NavigationDirection,&#xA;                           animated: Bool)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;didReload&lt;/h4&gt; &#xA;&lt;p&gt;Child view controllers have been reloaded.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func pageboyViewController(_ pageboyViewController: PageboyViewController,&#xA;                           didReloadWith currentViewController: UIViewController,&#xA;                           currentPageIndex: PageIndex)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Navigation&lt;/h3&gt; &#xA;&lt;p&gt;You can navigate programmatically through a &lt;code&gt;PageboyViewController&lt;/code&gt; using &lt;code&gt;scrollToPage()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;pageViewController.scrollToPage(.next, animated: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Infinite scrolling can be enabled with &lt;code&gt;.isInfiniteScrollEnabled&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Interactive scrolling can also be controlled with &lt;code&gt;.isScrollEnabled&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Insertion &amp;amp; Deletion&lt;/h3&gt; &#xA;&lt;p&gt;Pageboy provides the ability to insert and delete pages dynamically in the &lt;code&gt;PageboyViewController&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func insertPage(at index: PageIndex, then updateBehavior: PageUpdateBehavior)&#xA;func deletePage(at index: PageIndex, then updateBehavior: PageUpdateBehavior)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;This behaves similarly to the insertion of rows in &lt;code&gt;UITableView&lt;/code&gt;, in the fact that you have to update the data source prior to calling any of the update functions.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let index = 2&#xA;viewControllers.insert(UIViewController(), at: index)&#xA;pageViewController.insertPage(at: index)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;The default behavior after inserting or deleting a page is to scroll to the update location, this however can be configured by passing a &lt;code&gt;PageUpdateBehavior&lt;/code&gt; value other than &lt;code&gt;.scrollToUpdate&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Other Extras&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;reloadData()&lt;/code&gt; - Reload the view controllers in the page view controller. (Reloads the data source).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.navigationOrientation&lt;/code&gt; - Whether to orientate the pages horizontally or vertically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.currentViewController&lt;/code&gt; - The currently visible view controller if it exists.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.currentPosition&lt;/code&gt; - The exact current relative position of the page view controller.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.currentIndex&lt;/code&gt; - The index of the currently visible page.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.parentPageboy&lt;/code&gt; - Access the immediate parent &lt;code&gt;PageboyViewController&lt;/code&gt; from any child view controller.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Animated Transitions&lt;/h3&gt; &#xA;&lt;p&gt;Pageboy also provides custom transition support for &lt;strong&gt;animated transitions&lt;/strong&gt;. This can be customized via the &lt;code&gt;.transition&lt;/code&gt; property on &lt;code&gt;PageboyViewController&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;pageboyViewController.transition = Transition(style: .push, duration: 1.0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: By default this is set to &lt;code&gt;nil&lt;/code&gt;, which uses the standard animation provided by &lt;code&gt;UIPageViewController&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Auto Scrolling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;PageboyAutoScroller&lt;/code&gt; is available to set up timer based automatic scrolling of the &lt;code&gt;PageboyViewController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;pageboyViewController.autoScroller.enable()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Support for custom intermission duration and other scroll behaviors is also available.&lt;/p&gt; &#xA;&lt;h2&gt;üë®üèª‚Äçüíª About&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Created by &lt;a href=&#34;https://github.com/msaps&#34;&gt;Merrick Sapsford&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/MerrickSapsford&#34;&gt;@MerrickSapsford&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Contributed to by a growing &lt;a href=&#34;https://github.com/uias/Pageboy/graphs/contributors&#34;&gt;list of others&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports and pull requests are welcome on GitHub at &lt;a href=&#34;https://github.com/uias/Pageboy&#34;&gt;https://github.com/uias/Pageboy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üëÆüèª‚Äç‚ôÇÔ∏è License&lt;/h2&gt; &#xA;&lt;p&gt;The library is available as open source under the terms of the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>