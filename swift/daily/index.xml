<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-06T02:00:42Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yichengchen/clashX</title>
    <updated>2022-06-06T02:00:42Z</updated>
    <id>tag:github.com,2022-06-06:/yichengchen/clashX</id>
    <link href="https://github.com/yichengchen/clashX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/Dreamacro/clash/raw/master/docs/logo.png&#34; alt=&#34;Clash&#34; width=&#34;200&#34;&gt; &lt;br&gt; ClashX &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p&gt;A rule based proxy For Mac base on &lt;a href=&#34;https://github.com/Dreamacro/clash&#34;&gt;Clash&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ClashX 旨在提供一个简单轻量化的代理客户端，如果需要更多的定制化，可以考虑使用 &lt;a href=&#34;https://github.com/Fndroid/clash_for_windows_pkg/releases&#34;&gt;CFW Mac 版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTTP/HTTPS and SOCKS protocol&lt;/li&gt; &#xA; &lt;li&gt;Surge like configuration&lt;/li&gt; &#xA; &lt;li&gt;GeoIP rule support&lt;/li&gt; &#xA; &lt;li&gt;Support Vmess/Shadowsocks/Socks5/Trojan&lt;/li&gt; &#xA; &lt;li&gt;Support for Netfilter TCP redirect&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;You can download from &lt;a href=&#34;https://github.com/yichengchen/clashX/releases&#34;&gt;Release&lt;/a&gt; page&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Download ClashX Pro With enhanced mode and Native Apple Silicon support at &lt;a href=&#34;https://install.appcenter.ms/users/clashx/apps/clashx-pro/distribution_groups/public&#34;&gt;AppCenter&lt;/a&gt; for free permanently.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure have python3 and golang installed in your computer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Golang&lt;/p&gt; &lt;pre&gt;&lt;code&gt;brew install golang&#xA;&#xA;or download from https://golang.org&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download deps&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bash install_dependency.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and run.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Config&lt;/h2&gt; &#xA;&lt;p&gt;The default configuration directory is &lt;code&gt;$HOME/.config/clash&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The default name of the configuration file is &lt;code&gt;config.yaml&lt;/code&gt;. You can use your custom config name and switch config in menu &lt;code&gt;Config&lt;/code&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;Checkout &lt;a href=&#34;https://github.com/Dreamacro/clash&#34;&gt;Clash&lt;/a&gt; or &lt;a href=&#34;https://github.com/Hackl0us/SS-Rule-Snippet/raw/master/LAZY_RULES/clash.yaml&#34;&gt;SS-Rule-Snippet for Clash&lt;/a&gt; or &lt;a href=&#34;https://lancellc.gitbook.io/clash/&#34;&gt;lancellc&#39;s gitbook&lt;/a&gt; for more detail.&lt;/p&gt; &#xA;&lt;h2&gt;Advance Config&lt;/h2&gt; &#xA;&lt;h3&gt;Change the ports of ClashX&lt;/h3&gt; &#xA;&lt;p&gt;Please modify the &lt;code&gt;config.yaml&lt;/code&gt; file generated by ClashX, not the other config file you created or downloaded. The &lt;code&gt;General&lt;/code&gt; section settings in your custom config file would be ignored. Then relaunch ClashX to apply changes.&lt;/p&gt; &#xA;&lt;h3&gt;Change your status menu icon&lt;/h3&gt; &#xA;&lt;p&gt;Place your icon file in the &lt;code&gt;~/.config/clash/menuImage.png&lt;/code&gt; then restart ClashX&lt;/p&gt; &#xA;&lt;h3&gt;Change default system ignore list.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Download sample plist in the &lt;a href=&#34;https://raw.githubusercontent.com/yichengchen/clashX/master/proxyIgnoreList.plist&#34;&gt;Here&lt;/a&gt; and place in the&lt;/p&gt; &lt;pre&gt;&lt;code&gt;~/.config/clash/proxyIgnoreList.plist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit the &lt;code&gt;proxyIgnoreList.plist&lt;/code&gt; to set up your own proxy ignore list&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;URL Schemes.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Using url scheme to import remote config.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;clash://install-config?url=http%3A%2F%2Fexample.com&amp;amp;name=example&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using url scheme to reload current config.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;clash://update-config&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Get process name&lt;/h3&gt; &#xA;&lt;p&gt;You can add the follow config in your config file, and set your proxy mode to rule. Then open the log via help menu in ClashX.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;script:&#xA;  code: |&#xA;    def main(ctx, metadata):&#xA;      # Log ProcessName&#xA;      ctx.log(&#39;Process Name: &#39; + ctx.resolve_process_name(metadata))&#xA;      return &#39;DIRECT&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Q: How to get shell command with external IP?&lt;br&gt; A: Click the clashX menu icon and then press &lt;code&gt;Option-Command-C&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;关闭ClashX的通知&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在系统设置中关闭 clashx 的推送权限&lt;/li&gt; &#xA; &lt;li&gt;执行&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;defaults write com.west2online.ClashX disableNoti -bool true&#xA;defaults write com.west2online.ClashXPro disableNoti -bool true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note：强烈不推荐这么做，这可能导致clashx的很多重要错误提醒无法显示。&lt;/p&gt; &#xA;&lt;h3&gt;全局快捷键&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;设置详情点击 &lt;a href=&#34;https://raw.githubusercontent.com/yichengchen/clashX/master/Shortcuts.md&#34;&gt;全局快捷键&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>simonbs/Runestone</title>
    <updated>2022-06-06T02:00:42Z</updated>
    <id>tag:github.com,2022-06-06:/simonbs/Runestone</id>
    <link href="https://github.com/simonbs/Runestone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📝 Performant plain text editor for iOS with syntax highlighting, line numbers, invisible characters and much more.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/simonbs/Runestone/raw/main/Sources/Runestone/Documentation.docc/Resources/hero.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;👋 Welcome to Runestone - a performant plain text editor for iOS with code editing features&lt;/h3&gt; &#xA;&lt;p&gt;Runestone uses GitHub&#39;s &lt;a href=&#34;https://tree-sitter.github.io/tree-sitter/&#34;&gt;Tree-sitter&lt;/a&gt; to parse code to a syntax tree which is used for features that require an understanding of the code in the editor, for example syntax highlighting.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swiftpackageindex.com/simonbs/Runestone&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fsimonbs%2FRunestone%2Fbadge%3Ftype%3Dswift-versions&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swiftpackageindex.com/simonbs/Runestone&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fsimonbs%2FRunestone%2Fbadge%3Ftype%3Dplatforms&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/simonbs/Runestone/actions/workflows/build_and_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/simonbs/Runestone/actions/workflows/build_and_test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build and Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/simonbs/Runestone/actions/workflows/swiftlint.yml&#34;&gt;&lt;img src=&#34;https://github.com/simonbs/Runestone/actions/workflows/swiftlint.yml/badge.svg?sanitize=true&#34; alt=&#34;SwiftLint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/simonbs/Runestone/main/%5Bhttps://swiftpackageindex.com/simonbs/Runestone%5D(https://twitter.com/simonbs)&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@simonbs-blue.svg?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Syntax highlighting.&lt;/li&gt; &#xA; &lt;li&gt;Line numbers.&lt;/li&gt; &#xA; &lt;li&gt;Highlight the selected line.&lt;/li&gt; &#xA; &lt;li&gt;Show invisible characters (tabs, spaces and line breaks).&lt;/li&gt; &#xA; &lt;li&gt;Insertion of character pairs, e.g. inserting the trailing quotation mark when inserting the leading.&lt;/li&gt; &#xA; &lt;li&gt;Customization of colors and fonts.&lt;/li&gt; &#xA; &lt;li&gt;Toggle line wrapping on and off.&lt;/li&gt; &#xA; &lt;li&gt;Adjust height of lines.&lt;/li&gt; &#xA; &lt;li&gt;Add a page guide.&lt;/li&gt; &#xA; &lt;li&gt;Add vertical and horizontal overscroll.&lt;/li&gt; &#xA; &lt;li&gt;Highlight ranges in the text view.&lt;/li&gt; &#xA; &lt;li&gt;Search the text using regular expressions.&lt;/li&gt; &#xA; &lt;li&gt;Automatically detects if a file is using spaces or tabs for indentation.&lt;/li&gt; &#xA; &lt;li&gt;Specify line endings (CR, LF, CRLF) to use when inserting a line break.&lt;/li&gt; &#xA; &lt;li&gt;Automatically detect line endings in a text.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://docs.runestone.app/documentation/runestone/gettingstarted&#34;&gt;Getting Started&lt;/a&gt; article in the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation of all public types is available at &lt;a href=&#34;https://docs.runestone.app&#34;&gt;docs.runestone.app&lt;/a&gt;. The documentation is generated from the Swift code using Apple&#39;s &lt;a href=&#34;https://developer.apple.com/documentation/docc&#34;&gt;DocC documentation compiler&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🏎 Performance&lt;/h2&gt; &#xA;&lt;p&gt;Runestone was built to be fast. Its good performance is by far mostly thanks to Tree-sitter&#39;s incremental parsing and &lt;a href=&#34;https://github.com/icsharpcode/AvalonEdit/raw/master/ICSharpCode.AvalonEdit/Document/DocumentLineTree.cs&#34;&gt;AvalonEdit&#39;s approach for managing lines in a document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When judging the performance of Runestone, it is key to build your app in the release configuration. The optimizations applied by the compiler when using the release configuration becomes very apparent when opening large documents.&lt;/p&gt; &#xA;&lt;h2&gt;🖥 Catalyst&lt;/h2&gt; &#xA;&lt;p&gt;The project should mostly work with Catalyst on the Mac, however, it isn&#39;t fully tested and the implementation isn&#39;t considered done. The focus is currently on the iPhone and iPad.&lt;/p&gt; &#xA;&lt;h2&gt;📱 Projects&lt;/h2&gt; &#xA;&lt;p&gt;The Runestone framework is used by an app of the same name. The Runestone app is a plain text editor for iPhone and iPad that uses all the features of this framework.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/us/app/runestone-editor/id1548193893&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;150&#34; alt=&#34;Runestone app icon&#34; src=&#34;https://raw.githubusercontent.com/simonbs/Runestone/main/Assets/runestone-editor-app-icon.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/us/app/runestone-editor/id1548193893&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;150&#34; alt=&#34;Download on the App Store&#34; src=&#34;https://developer.apple.com/assets/elements/badges/download-on-the-app-store.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;❤️ Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tree-sitter.github.io/tree-sitter&#34;&gt;Tree-sitter&lt;/a&gt; is used to parse code incrementally.&lt;/li&gt; &#xA; &lt;li&gt;Line management is translated to Swift from &lt;a href=&#34;https://github.com/icsharpcode/AvalonEdit&#34;&gt;AvalonEdit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/viktorstrate/swift-tree-sitter&#34;&gt;swift-tree-sitter&lt;/a&gt; and &lt;a href=&#34;https://github.com/ChimeHQ/SwiftTreeSitter&#34;&gt;SwiftTreeSitter&lt;/a&gt; which have served as inspiration for the Tree-sitter bindings.&lt;/li&gt; &#xA; &lt;li&gt;Detection of indent strategy inspired by &lt;a href=&#34;https://github.com/jtokoph/auto-detect-indentation&#34;&gt;auto-detect-indentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;And last (but not least!), thanks a ton to &lt;a href=&#34;https://twitter.com/Lextar&#34;&gt;Alexander Blach&lt;/a&gt; (developer of &lt;a href=&#34;https://www.textasticapp.com&#34;&gt;Textastic&lt;/a&gt;), &lt;a href=&#34;https://twitter.com/knutknatter&#34;&gt;Till Konitzer&lt;/a&gt; (developer of &lt;a href=&#34;https://www.essayist.app&#34;&gt;Essayist&lt;/a&gt;), &lt;a href=&#34;https://twitter.com/agiletortoise&#34;&gt;Greg Pierce&lt;/a&gt; (developer of &lt;a href=&#34;https://getdrafts.com&#34;&gt;Drafts&lt;/a&gt;) and &lt;a href=&#34;https://twitter.com/maxbrunsfeld&#34;&gt;Max Brunsfeld&lt;/a&gt; (developer of &lt;a href=&#34;https://tree-sitter.github.io/tree-sitter/&#34;&gt;Tree-sitter&lt;/a&gt;) for pointing me in the right direction when I got stuck.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>vincentneo/LosslessSwitcher</title>
    <updated>2022-06-06T02:00:42Z</updated>
    <id>tag:github.com,2022-06-06:/vincentneo/LosslessSwitcher</id>
    <link href="https://github.com/vincentneo/LosslessSwitcher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated Apple Music Lossless Sample Rate Switching for Audio Devices on Macs.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;550&#34; alt=&#34;header image with app icon&#34; src=&#34;https://user-images.githubusercontent.com/23420208/164895903-1c95fe89-6198-433a-9100-8d9af32ca24f.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;p&gt;LosslessSwitcher switches your current audio device&#39;s sample rate to match the currently playing lossless song on your Apple Music app, automatically.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s say if the next song that you are playing, is a Hi-Res Lossless track with a sample rate of 192kHz, LosslessSwitcher will switch your device to that sample rate as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;The opposite happens, when the next track happens to have a lower sample rate.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Simply go to the Releases page of this repository. &lt;a href=&#34;https://github.com/vincentneo/LosslessSwitcher/releases/latest&#34;&gt;(Link to latest release)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternatively, try the beta! &lt;a href=&#34;https://github.com/vincentneo/LosslessSwitcher/releases/tag/1.1.0-beta1&#34;&gt;(link)&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Drag the app to your Applications folder. If you wish to have it running when logging in, you should be able to add LosslessSwitcher in System Preferences:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; User &amp;amp; Groups &amp;gt; Login Items &amp;gt; Add LosslessSwitcher app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;App details&lt;/h2&gt; &#xA;&lt;p&gt;There isn&#39;t much going on, when it comes to the UI of the app, as most of the logic is to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Read Apple Music&#39;s logs to know the song&#39;s sample rate.&lt;/li&gt; &#xA; &lt;li&gt;Set the sample rate to the device that you are currently playing to.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;As such, the app lives on your menu bar. The screenshot above shows it&#39;s only UI component that it offers, which is to show the sample rate that it has parsed from Apple Music&#39;s logs.&lt;/p&gt; &#xA;&lt;img width=&#34;252&#34; alt=&#34;app screenshot, with music note icon shown as UI button&#34; src=&#34;https://user-images.githubusercontent.com/23420208/164895657-35a6d8a3-7e85-4c7c-bcba-9d03bfd88b4d.png&#34;&gt; &#xA;&lt;p&gt;If you wish, the sample rate can also be directly visible as the menu bar item.&lt;/p&gt; &#xA;&lt;img width=&#34;252&#34; alt=&#34;app screenshot with sample rate shown as UI button&#34; src=&#34;https://user-images.githubusercontent.com/23420208/164896404-c6d27328-47e5-4eb3-bd8b-71e3c9013c46.png&#34;&gt; &#xA;&lt;p&gt;Do also note that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There may be short interuptions to your audio playback, during the time where the app attempts to switch the sample rates.&lt;/li&gt; &#xA; &lt;li&gt;Prolonged use on MacBooks may accelerate battery usages, due to the frequent querying of the latest sample rate.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Why make this?&lt;/h3&gt; &#xA;&lt;p&gt;Ever since Apple Music Lossless launched along with macOS 11.4, the app would never switch the sample rates according to the song that was playing. A trip down to the Audio MIDI Setup app was required. This still happens today, with macOS 12.3.1, despite iOS&#39;s Music app having such an ability.&lt;/p&gt; &#xA;&lt;p&gt;I think this improvement might be well appreciated by many, hence this project is here, free and open source.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Due to how the app works, this app is not, and cannot be sandboxed. It also has the following requirement, due to the use of &lt;code&gt;OSLog&lt;/code&gt; API:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The user running LosslessSwitcher must be an admin. This is not tested and assumed due to this &lt;a href=&#34;https://developer.apple.com/forums/thread/677068&#34;&gt;Apple Developer Forums thread&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Apple Music app must have Lossless mode on. (well, of course)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other than that, it should run on any Mac running macOS 11.4 or later.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;By using LosslessSwitcher, you agree that under no circumstances will the developer or any contributors be held responsible or liable in any way for any claims, damages, losses, expenses, costs or liabilities whatsoever or any other consequences suffered by you or incurred by you directly or indirectly in connection with any form of usages of LosslessSwitcher.&lt;/p&gt; &#xA;&lt;h2&gt;Devices tested&lt;/h2&gt; &#xA;&lt;p&gt;I did not test on any Macs running macOS 11, &lt;del&gt;or any Apple Silicon based Macs (I don&#39;t have one 😢)&lt;/del&gt; Use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;UPDATE: A &lt;a href=&#34;https://www.reddit.com/r/audiophile/comments/t6l3pb/comment/i69v5fe/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;reddit user&lt;/a&gt; has updated to me that LosslessSwitcher is working on Apple Silicon Macs! Thanks!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CPU&lt;/th&gt; &#xA;   &lt;th&gt;Mac Model&lt;/th&gt; &#xA;   &lt;th&gt;macOS Version&lt;/th&gt; &#xA;   &lt;th&gt;Audio Device&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Intel&lt;/td&gt; &#xA;   &lt;td&gt;Mac Mini (2018)&lt;/td&gt; &#xA;   &lt;td&gt;12.2&lt;/td&gt; &#xA;   &lt;td&gt;Denon PMA-50&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Intel&lt;/td&gt; &#xA;   &lt;td&gt;MacBook Pro 13 inch (2018)&lt;/td&gt; &#xA;   &lt;td&gt;12.3.1&lt;/td&gt; &#xA;   &lt;td&gt;Denon PMA-50&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Intel&lt;/td&gt; &#xA;   &lt;td&gt;MacBook Pro 13 inch, four Thunderbolt 3 ports (2016)&lt;/td&gt; &#xA;   &lt;td&gt;12.3.1&lt;/td&gt; &#xA;   &lt;td&gt;Topping DX7 Pro&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Silicon&lt;/td&gt; &#xA;   &lt;td&gt;MacBook Pro 13 inch (M1, 2020)&lt;/td&gt; &#xA;   &lt;td&gt;12.3.1&lt;/td&gt; &#xA;   &lt;td&gt;FX Audio DAC-X6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can add to this list by modifying this README and opening a new pull request!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;LosslessSwitcher is licensed under GPL-3.0.&lt;/p&gt; &#xA;&lt;h2&gt;Love the idea of this?&lt;/h2&gt; &#xA;&lt;p&gt;If you appreciate the development of this application, feel free to spread the word around so more people get to know about LosslessSwitcher. You can also show your support by &lt;a href=&#34;https://github.com/sponsors/vincentneo&#34;&gt;sponsoring&lt;/a&gt; this project!&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JohnSundell/Sweep&#34;&gt;Sweep&lt;/a&gt;, by @JohnSundell, a easy to use Swift &lt;code&gt;String&lt;/code&gt; scanner.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rnine/SimplyCoreAudio&#34;&gt;SimplyCoreAudio&lt;/a&gt;, by @rnine, a framework that makes &lt;code&gt;CoreAudio&lt;/code&gt; so much easier to use.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>