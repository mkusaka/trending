<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-05T01:58:27Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BohdanOrlov/iOS-Developer-Roadmap</title>
    <updated>2022-06-05T01:58:27Z</updated>
    <id>tag:github.com,2022-06-05:/BohdanOrlov/iOS-Developer-Roadmap</id>
    <link href="https://github.com/BohdanOrlov/iOS-Developer-Roadmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Roadmap to becoming an iOS developer in 2018.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BohdanOrlov/iOS-Developer-Roadmap/master/headerImage.png&#34; alt=&#34;Header image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;üöÄ iOS Developer Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;Roadmap to becoming an iOS developer in 2020.&lt;/p&gt; &#xA;&lt;h2&gt;‚òùÔ∏è What is it?&lt;/h2&gt; &#xA;&lt;p&gt;This is a tree-like compilation of topics highly relevant to iOS development. Both image and text version are generated from human readable content file.&lt;/p&gt; &#xA;&lt;h2&gt;‚úåÔ∏è Who is it for?&lt;/h2&gt; &#xA;&lt;p&gt;The roadmap will be helpul for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;anyone who wants to become an iOS developer&lt;/li&gt; &#xA; &lt;li&gt;iOS developers who desire to become experts&lt;/li&gt; &#xA; &lt;li&gt;iOS developers who are preparing for interviews and need to brush up knowledge&lt;/li&gt; &#xA; &lt;li&gt;iOS developers who need to compile own set of interview questions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üëå Why these topics?&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://medium.com/@borlov/c9a24f413457&#34;&gt;this article&lt;/a&gt; explaining selection of topics.&lt;/p&gt; &#xA;&lt;h2&gt;üë®‚Äçüéì How to use this roadmap&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find a topic you want to study.&lt;/li&gt; &#xA; &lt;li&gt;Go to corresponding resources section.&lt;/li&gt; &#xA; &lt;li&gt;Study until you can confidently explain the topic to your cat.&lt;/li&gt; &#xA; &lt;li&gt;(Optional) tick the checkbox next to the topic. &lt;a href=&#34;https://raw.githubusercontent.com/BohdanOrlov/iOS-Developer-Roadmap/master/HowTo/HOWTOCHECKBOX.md&#34;&gt;How to tick a checkbox&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Go to step 1.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;Essential topics&lt;/code&gt; are topics which significantly contribute to understanding of iOS development. Consequently, it is a good idea to study them first as they are often encountered on interviews.&lt;/p&gt; &#xA;&lt;p&gt;Start from &lt;code&gt;Getting started&lt;/code&gt; section if you haven&#39;t done any iOS development yet.&lt;/p&gt; &#xA;&lt;h2&gt;üó∫ Image version&lt;/h2&gt; &#xA;&lt;p&gt;Roadmap of essential topics. Roadmap for all topics is &lt;a href=&#34;https://raw.githubusercontent.com/BohdanOrlov/iOS-Developer-Roadmap/master/RoadmapProject/Script/Generated/ROADMAP.png&#34;&gt;here.&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/BohdanOrlov/iOS-Developer-Roadmap/master/RoadmapProject/Script/Generated/ESSENTIALROADMAP.png&#34; alt=&#34;Header image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìù Text version&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BohdanOrlov/iOS-Developer-Roadmap/master/RoadmapProject/Script/Generated/ROADMAP.md&#34;&gt;Text version with materials to study.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü§ù How to contribute&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;add new topics to &lt;code&gt;Content.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;add missing study materials to &lt;code&gt;Content.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;throw ideas at me on &lt;a href=&#34;https://twitter.com/bohdan_orlov&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@Bohdan_Orlov-4d66b3.svg?style=flat&#34; alt=&#34;Twitter: @Bohdan_Orlov&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BohdanOrlov/iOS-Developer-Roadmap/master/HowTo/HOWTOPR.md&#34;&gt;The complete contribution guide.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚òëÔ∏è TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; content file with topics and materials&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ability to generate README.md from the content file&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ability to generate Roadmap tree image from the content file&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; make generation script less miserable: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; make it readable ü§¶&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; output Yaml format violation errors&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; handle errors of parsing Yaml into Topics and Resources&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; handle file read/write errors&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; handle image generation errors&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; automatic regeneration of roadmap after every commit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; automatic validation of content format on PR&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; make sure Travis doesn&#39;t deploy if generation script fails&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Generation status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/BohdanOrlov/iOS-Developer-Roadmap&#34;&gt;&lt;img src=&#34;https://travis-ci.org/BohdanOrlov/iOS-Developer-Roadmap.svg?branch=master&#34; alt=&#34;Travis&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìÉ License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY%204.0-lightgrey.svg?sanitize=true&#34; alt=&#34;License: CC BY 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìä Skills Matrix&lt;/h2&gt; &#xA;&lt;p&gt;You might also like the &lt;a href=&#34;https://github.com/BohdanOrlov/ios-skills-matrix&#34;&gt;iOS Developer Skills Matrix&lt;/a&gt;. &lt;img src=&#34;https://github.com/BohdanOrlov/ios-skills-matrix/raw/master/matrix.png&#34; alt=&#34;Skills matrix&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìö iOS and Swift Tutorials and Courses&lt;/h2&gt; &#xA;&lt;p&gt;Learn iOS development &amp;amp; Swift online from the best iOS Swift tutorials and courses recommended by the programming community. &lt;a href=&#34;https://hackr.io/tutorials/learn-ios-swift&#34;&gt;https://hackr.io/tutorials/learn-ios-swift&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>iVoider/PlayCover</title>
    <updated>2022-06-05T01:58:27Z</updated>
    <id>tag:github.com,2022-06-05:/iVoider/PlayCover</id>
    <link href="https://github.com/iVoider/PlayCover" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PlayCover is a project that allows you to sideload iOS apps on macOS (currently arm, Intel support will be tested)&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;p&gt;‚Äé&lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/iVoider/PlayCover/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/iVoider/PlayCover.svg?style=for-the-badge&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iVoider/PlayCover/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/iVoider/PlayCover.svg?style=for-the-badge&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iVoider/PlayCover/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/iVoider/PlayCover.svg?style=for-the-badge&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iVoider/PlayCover/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/iVoider/PlayCover.svg?style=for-the-badge&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iVoider/PlayCover/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/iVoider/PlayCover.svg?style=for-the-badge&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;p&gt;&lt;/p&gt; &lt;/h1&gt; &#xA;&lt;!-- PROJECT LOGO --&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/iVoider/PlayCover&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/images/logo.png&#34; alt=&#34;Logo&#34; width=&#34;80&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;PlayCover&lt;/h3&gt; &#xA; &lt;p align=&#34;center&#34;&gt; Run iOS apps &amp;amp; games on M1 Mac with mouse, keyboard and controller support. &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=grY63FBJ6N4&#34;&gt;Showcase&lt;/a&gt; ¬∑ &lt;a href=&#34;https://github.com/iVoider/PlayCover/pulls&#34;&gt;Contribute&lt;/a&gt; ¬∑ &lt;a href=&#34;https://discord.gg/rMv5qxGTGC&#34;&gt;Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- ABOUT THE PROJECT --&gt; &#xA;&lt;h2&gt;About The Project&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to PlayCover! This software is all about allowing you to run apps &amp;amp; games on your M1 device runnnig macOS 12.0 or newer.&lt;/p&gt; &#xA;&lt;p&gt;It does this by putting the applications through a wrapper which imitates an iPad. This allows the apps to perform very well and run natively, because the M1 chip is essentially a glorified mobile chip. Another advantage to the software is that you can insert and manipulate custom controls with your keyboard, which is not possible in alternative sideloading methods such as Sideloadly. These controls include all the essentials, from WASD, Camera movement, Left and Right clicks, and individual keymapping, similar to a popular Android emulator‚Äôs keymapping system called Bluestacks.&lt;/p&gt; &#xA;&lt;p&gt;While this software was originally created to allow you to run Genshin Impact on your M1 device, it grew to allow many more applications to run. Although support for all games is not promised and bugs with games are expected.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/images/dark.png#gh-dark-mode-only&#34; alt=&#34;Fancy logo&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/images/light.png#gh-light-mode-only&#34; alt=&#34;Fancy logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/#top&#34;&gt;‚¨ÜÔ∏è Back to topÔ∏è&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- GETTING STARTED --&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Following the installation instructions will get Genshin Impact you up and running in no time. The steps can be repeated if you want to try out other games or apps.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;At the moment, PlayCover can only be installed and executed on M1 MacBooks. Devices with the following chips are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;M1&lt;/li&gt; &#xA; &lt;li&gt;M1 Pro&lt;/li&gt; &#xA; &lt;li&gt;M1 Max&lt;/li&gt; &#xA; &lt;li&gt;M1 Ultra&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unfortunately, it cannot run on any Intel chips, so you are forced to use Bootcamp or other emulators.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Disable SIP&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This can be done by shutting down your mac, holding down power button&lt;/li&gt; &#xA;   &lt;li&gt;After this, click on your username/ssd, then keep going until you can see &lt;code&gt;Utilities&lt;/code&gt; at the top&lt;/li&gt; &#xA;   &lt;li&gt;When you see this, click on it and click on &lt;code&gt;Terminal&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;After this, you should be in a terminal window&lt;/li&gt; &#xA;   &lt;li&gt;Type &lt;code&gt;csrutil disable&lt;/code&gt; in that terminal window&lt;/li&gt; &#xA;   &lt;li&gt;Put your password and everything, then restart your mac&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify nvram boot-args&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When you have SIP disabled, type the following: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;Command + Space&lt;/code&gt;, type &lt;code&gt;Terminal&lt;/code&gt; in the search box&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;It should open a normal terminal window&lt;/li&gt; &#xA;   &lt;li&gt;Type the following in this window (or copy paste it) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;sudo nvram boot-args=&#34;amfi_get_out_of_my_way=1&#34;&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;If it appears that nothing has happened, this is correct.&lt;/li&gt; &#xA;   &lt;li&gt;Now restart your mac once again&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Login to Genshin&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open Genshin Impact with PlayCover, and you should be greeted with a Login button&lt;/li&gt; &#xA;   &lt;li&gt;Login to your account, then wait until the door appears and quit the game with &lt;code&gt;Command + Q&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Thats all which is required in Genshin for now&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable SIP&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Shut down your mac again&lt;/li&gt; &#xA;   &lt;li&gt;Hold down the power button until you get to recovery options&lt;/li&gt; &#xA;   &lt;li&gt;Click on your username and your storage disk respectively like you did for step 1.&lt;/li&gt; &#xA;   &lt;li&gt;You should see &lt;code&gt;Utilities&lt;/code&gt; at the top&lt;/li&gt; &#xA;   &lt;li&gt;Click on it, and Click on &lt;code&gt;Terminal&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;In terminal, type the following: &lt;code&gt;csrutil enable&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;csrutil clear&lt;/code&gt; should also work&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Reboot your mac by going to &lt;code&gt;Apple Logo&lt;/code&gt; &amp;gt; &lt;code&gt;Restart&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Genshin&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You&#39;re done! Enjoy playing genshin!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Video Instructions&lt;/h3&gt; &#xA;&lt;p&gt;The above steps are shown in the following video:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZRmCjkS3UZE&#34;&gt;How to play Genshin Impact using Playcover on your M1 Mac (2020 or newer)!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/#top&#34;&gt;‚¨ÜÔ∏è Back to topÔ∏è&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- USAGE EXAMPLES --&gt; &#xA;&lt;h2&gt;Keymapping&lt;/h2&gt; &#xA;&lt;h3&gt;Button Events&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Opens a menu to add a button element &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clicking on the screen&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Edit keymapping binding &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click on a keymap and press the key you want binded&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bind left mouse button &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clicking on &lt;strong&gt;&#39;LB&#39;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bind right mouse button &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clicking on &lt;strong&gt;&#39;RB&#39;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bind middle mouse button &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clicking on &lt;strong&gt;&#39;üñ±Ô∏è&#39;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Adds a W/A/S/D joystick &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clicking on the &lt;strong&gt;&#39;‚ûï&#39;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Adds a mouse area for mouse control &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clicking on the &lt;strong&gt;&#39;üîÅ&#39;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Flow Control&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Increase the selected buttons size &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Menu Bar &amp;gt; &lt;code&gt;Keymapping&lt;/code&gt; &amp;gt; Upsize Selected Element OR &lt;code&gt;Cmd + &#39;‚Üë&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Decrease the selected buttons size &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Menu Bar &amp;gt; &lt;code&gt;Keymapping&lt;/code&gt; &amp;gt; Upsize Selected Element OR &lt;code&gt;Cmd + &#39;‚Üì&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Delete the selected keymapping &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CMD + delete (backspace)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Toggle between show/hide cursor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press option (‚å•)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Importing Keybinds&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;.playmap&lt;/code&gt; file from &lt;a href=&#34;https://discord.com/channels/871829896492642387/922068254569160745&#34;&gt;#üìù„Éªkeymap-showcase&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open PlayCover and right click the app you wish to import the keybinds to&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on &lt;code&gt;Import Keymapping&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select the previously downloaded &lt;code&gt;.playmap&lt;/code&gt; file&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Quit and reopen the app&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This step is required for the newly imported keymapping to work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;For additional help, please join the &lt;a href=&#34;https://discord.gg/rMv5qxGTGC&#34;&gt;Discord server&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/#top&#34;&gt;‚¨ÜÔ∏è Back to topÔ∏è&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- CONTRIBUTING --&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you have a suggestion that would make this better, please fork the repo and create a pull request. Don&#39;t forget to give the project a star! Thanks again!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/#top&#34;&gt;‚¨ÜÔ∏è Back to topÔ∏è&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- LICENSE --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the AGPLv3 License. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/#top&#34;&gt;‚¨ÜÔ∏è Back to topÔ∏è&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- CONTACT --&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Alexandr Dorofeev - &lt;a href=&#34;mailto:business@playcover.me&#34;&gt;business@playcover.me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project Link: &lt;a href=&#34;https://github.com/iVoider/PlayCover&#34;&gt;https://github.com/iVoider/PlayCover&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/#top&#34;&gt;‚¨ÜÔ∏è Back to topÔ∏è&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ACKNOWLEDGMENTS --&gt; &#xA;&lt;h2&gt;Libraries Used&lt;/h2&gt; &#xA;&lt;p&gt;These open source libraries were used to create this project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paradiseduo/appdecrypt/tree/main/Sources/appdecrypt&#34;&gt;appdecrypt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alexzielenski/optool&#34;&gt;optool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ret70/PTFakeTouch&#34;&gt;PTFakeTouch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iVoider/PlayCover/main/#top&#34;&gt;‚¨ÜÔ∏è Back to topÔ∏è&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;</summary>
  </entry>
  <entry>
    <title>httpswift/swifter</title>
    <updated>2022-06-05T01:58:27Z</updated>
    <id>tag:github.com,2022-06-05:/httpswift/swifter</id>
    <link href="https://github.com/httpswift/swifter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tiny http server engine written in Swift programming language.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Platform-Linux%20&amp;amp;%20OSX%20&amp;amp;%20tvOS-4BC51D.svg?style=flat&#34; alt=&#34;Platform&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Swift-4.x,_5.0-4BC51D.svg?style=flat&#34; alt=&#34;Swift&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Protocols-HTTP%201.1%20&amp;amp;%20WebSockets-4BC51D.svg?style=flat&#34; alt=&#34;Protocols&#34;&gt; &lt;a href=&#34;https://cocoapods.org/pods/Swifter&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Swifter.svg?style=flat&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;What is Swifter?&lt;/h3&gt; &#xA;&lt;p&gt;Tiny http server engine written in &lt;a href=&#34;https://developer.apple.com/swift/&#34;&gt;Swift&lt;/a&gt; programming language.&lt;/p&gt; &#xA;&lt;h3&gt;Branches&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;* stable&lt;/code&gt; - lands on CocoaPods and others. Supports the latest non-beta Xcode and SPM. Stable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;* master&lt;/code&gt; - stable branch plus experimental web-framework layer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;* 2.0 &lt;/code&gt; - next version of Swifter (async IO). Experimental.&lt;/p&gt; &#xA;&lt;h3&gt;How to start?&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let server = HttpServer()&#xA;server[&#34;/hello&#34;] = { .ok(.htmlBody(&#34;You asked for \($0)&#34;))  }&#xA;server.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to load HTML by string?&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let server = HttpServer()&#xA;server[path] = { request in&#xA;    return HttpResponse.ok(.text(&#34;&amp;lt;html string&amp;gt;&#34;))&#xA;}&#xA;server.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to share files?&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let server = HttpServer()&#xA;server[&#34;/desktop/:path&#34;] = shareFilesFromDirectory(&#34;/Users/me/Desktop&#34;)&#xA;server.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to redirect?&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let server = HttpServer()&#xA;server[&#34;/redirect&#34;] = { request in&#xA;  return .movedPermanently(&#34;http://www.google.com&#34;)&#xA;}&#xA;server.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to HTML ?&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let server = HttpServer()&#xA;server[&#34;/my_html&#34;] = scopes { &#xA;  html {&#xA;    body {&#xA;      h1 { inner = &#34;hello&#34; }&#xA;    }&#xA;  }&#xA;}&#xA;server.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to WebSockets ?&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let server = HttpServer()&#xA;server[&#34;/websocket-echo&#34;] = websocket(text: { session, text in&#xA;  session.writeText(text)&#xA;}, binary: { session, binary in&#xA;  session.writeBinary(binary)&#xA;})&#xA;server.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CocoaPods? Yes.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;use_frameworks!&#xA;&#xA;pod &#39;Swifter&#39;, &#39;~&amp;gt; 1.5.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage? Also yes.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;httpswift/swifter&#34; ~&amp;gt; 1.5.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package Manager.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import PackageDescription&#xA;&#xA;let package = Package(&#xA;    name: &#34;MyServer&#34;,&#xA;    dependencies: [&#xA;        .package(url: &#34;https://github.com/httpswift/swifter.git&#34;, .upToNextMajor(from: &#34;1.5.0&#34;))&#xA;    ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -p 9080:9080 -v `pwd`:/Swifter -w /Swifter --name Swifter swift bash -c &#34;swift run&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>