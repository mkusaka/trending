<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Swift Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-24T01:39:20Z</updated>
  <subtitle>Daily Trending of Swift in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JohnSundell/ShellOut</title>
    <updated>2022-10-24T01:39:20Z</updated>
    <id>tag:github.com,2022-10-24:/JohnSundell/ShellOut</id>
    <link href="https://github.com/JohnSundell/ShellOut" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easily run shell commands from a Swift script or command line tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üêö ShellOut&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to ShellOut, a simple package that enables you to easily ‚Äúshell out‚Äù from a Swift script or command line tool.&lt;/p&gt; &#xA;&lt;p&gt;Even though you can accomplish most of the tasks you need to do in native Swift code, sometimes you need to invoke the power of the command line from a script or tool - and this is exactly what ShellOut makes so simple.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Just call &lt;code&gt;shellOut()&lt;/code&gt;, and specify what command you want to run, along with any arguments you want to pass:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let output = try shellOut(to: &#34;echo&#34;, arguments: [&#34;Hello world&#34;])&#xA;print(output) // Hello world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also easily run a series of commands at once, optionally at a given path:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;try shellOut(to: [&#34;mkdir NewFolder&#34;, &#34;echo \&#34;Hello again\&#34; &amp;gt; NewFolder/File&#34;], at: &#34;~/CurrentFolder&#34;)&#xA;let output = try shellOut(to: &#34;cat File&#34;, at: &#34;~/CurrentFolder/NewFolder&#34;)&#xA;print(output) // Hello again&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case of an error, ShellOut will automatically read &lt;code&gt;STDERR&lt;/code&gt; and format it nicely into a typed Swift error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;do {&#xA;    try shellOut(to: &#34;totally-invalid&#34;)&#xA;} catch {&#xA;    let error = error as! ShellOutError&#xA;    print(error.message) // Prints STDERR&#xA;    print(error.output) // Prints STDOUT&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pre-defined commands&lt;/h2&gt; &#xA;&lt;p&gt;Another way to use ShellOut is by executing pre-defined commands, that enable you to easily perform common tasks without having to construct commands using strings. It also ships with a set of such pre-defined commands for common tasks, such as using Git, manipulating the file system and using tools like &lt;a href=&#34;https://github.com/JohnSundell/Marathon&#34;&gt;Marathon&lt;/a&gt;, &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt; and &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Use Git&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;try shellOut(to: .gitInit())&#xA;try shellOut(to: .gitClone(url: repositoryURL))&#xA;try shellOut(to: .gitCommit(message: &#34;A scripted commit!&#34;))&#xA;try shellOut(to: .gitPush())&#xA;try shellOut(to: .gitPull(remote: &#34;origin&#34;, branch: &#34;release&#34;))&#xA;try shellOut(to: .gitSubmoduleUpdate())&#xA;try shellOut(to: .gitCheckout(branch: &#34;my-feature&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Handle files, folders and symlinks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;try shellOut(to: .createFolder(named: &#34;folder&#34;))&#xA;try shellOut(to: .createFile(named: &#34;file&#34;, contents: &#34;Hello world&#34;))&#xA;try shellOut(to: .moveFile(from: &#34;path/a&#34;, to: &#34;path/b&#34;))&#xA;try shellOut(to: .copyFile(from: &#34;path/a&#34;, to: &#34;path/b&#34;))&#xA;try shellOut(to: .openFile(at: &#34;Project.xcodeproj&#34;))&#xA;try shellOut(to: .readFile(at: &#34;Podfile&#34;))&#xA;try shellOut(to: .removeFile(from: &#34;path/a&#34;))&#xA;try shellOut(to: .createSymlink(to: &#34;target&#34;, at: &#34;link&#34;))&#xA;try shellOut(to: .expandSymlink(at: &#34;link&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;For a more powerful and object-oriented way to handle Files &amp;amp; Folders in Swift, check out &lt;a href=&#34;https://github.com/JohnSundell/Files&#34;&gt;Files&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use &lt;a href=&#34;https://github.com/JohnSundell/Marathon&#34;&gt;Marathon&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;try shellOut(to: .runMarathonScript(at: &#34;~/scripts/MyScript&#34;, arguments: [&#34;One&#34;, &#34;Two&#34;]))&#xA;try shellOut(to: .updateMarathonPackages())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use &lt;a href=&#34;https://github.com/apple/swift-package-manager&#34;&gt;The Swift Package Manager&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;try shellOut(to: .createSwiftPackage(withType: .executable))&#xA;try shellOut(to: .updateSwiftPackages())&#xA;try shellOut(to: .generateSwiftPackageXcodeProject())&#xA;try shellOut(to: .buildSwiftPackage())&#xA;try shellOut(to: .testSwiftPackage())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;try shellOut(to: .runFastlane(usingLane: &#34;appstore&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;try shellOut(to: .updateCocoaPods())&#xA;try shellOut(to: .installCocoaPods())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t see what you&#39;re looking for in the list above? You can easily define your own commands using &lt;code&gt;ShellOutCommand&lt;/code&gt;. If you&#39;ve made a command you think should be included among the built-in ones, feel free to &lt;a href=&#34;https://github.com/JohnSundell/ShellOut/pull/new/master&#34;&gt;open a PR&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;For scripts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/johnsundell/marathon&#34;&gt;Marathon&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add ShellOut to Marathon using &lt;code&gt;$ marathon add https://github.com/JohnSundell/ShellOut.git&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Alternatively, add &lt;code&gt;https://github.com/JohnSundell/ShellOut.git&lt;/code&gt; to your &lt;code&gt;Marathonfile&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Write your script, then run it using &lt;code&gt;$ marathon run yourScript.swift&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For command line tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;code&gt;.package(url: &#34;https://github.com/JohnSundell/ShellOut.git&#34;, from: &#34;2.0.0&#34;)&lt;/code&gt; to your &lt;code&gt;Package.swift&lt;/code&gt; file&#39;s &lt;code&gt;dependencies&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Update your packages using &lt;code&gt;$ swift package update&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help, feedback or suggestions?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JohnSundell/ShellOut/issues/new&#34;&gt;Open an issue&lt;/a&gt; if you need help, if you found a bug, or if you want to discuss a feature request.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JohnSundell/ShellOut/pull/new/master&#34;&gt;Open a PR&lt;/a&gt; if you want to make some change to ShellOut.&lt;/li&gt; &#xA; &lt;li&gt;Contact &lt;a href=&#34;https://twitter.com/johnsundell&#34;&gt;@johnsundell on Twitter&lt;/a&gt; for discussions, news &amp;amp; announcements about ShellOut &amp;amp; other projects.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>fermoya/SwiftUIPager</title>
    <updated>2022-10-24T01:39:20Z</updated>
    <id>tag:github.com,2022-10-24:/fermoya/SwiftUIPager</id>
    <link href="https://github.com/fermoya/SwiftUIPager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Native Pager in SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SwiftUIPager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/fermoya/SwiftUIPager/workflows/Unit%20Tests/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/fermoya/SwiftUIPager&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/fermoya/SwiftUIPager/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apple/swift-package-manager&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;Swift Package Manager compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/SwiftUIPager&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/SwiftUIPager.svg?sanitize=true&#34; alt=&#34;Cocoapods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/SwiftUIPager&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/SwiftUIPager.svg?sanitize=true&#34; alt=&#34;CocoaPods platforms&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;SwiftUIPager&lt;/em&gt; provides a &lt;code&gt;Pager&lt;/code&gt; component built with SwiftUI native components. &lt;code&gt;Pager&lt;/code&gt; is a view that renders a scrollable container to display a handful of pages. These pages are recycled on scroll, so you don&#39;t have to worry about memory issues. &lt;code&gt;Pager&lt;/code&gt; will load just a handful of items, enough to beatifully scroll along.&lt;/p&gt; &#xA;&lt;p&gt;Create vertical or horizontal pagers, align the cards, change the direction of the scroll, animate the pagination... &lt;code&gt;Pager&lt;/code&gt; lets you do anything you want.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#cocoapods&#34;&gt;Cocoapods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#manually&#34;&gt;Manually&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Legacy.md&#34;&gt;Legacy projects support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#initialization&#34;&gt;Initialization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#ui-customization&#34;&gt;UI customization&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#configure-your-page-size&#34;&gt;Configure your page size&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#pagination-sensitivity&#34;&gt;Pagination sensitivity&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#orientation-and-direction&#34;&gt;Orientation and direction&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#constrain-direction&#34;&gt;Constrain direction&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#alignment&#34;&gt;Alignment&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#partial-pagination&#34;&gt;Partial pagination&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#multiple-pagination&#34;&gt;Multiple pagination&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#more-modifiers&#34;&gt;More modifiers&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#paging-priority&#34;&gt;Paging Priority&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#animations&#34;&gt;Animations&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#scale&#34;&gt;Scale&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#rotation&#34;&gt;Rotation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#opacity&#34;&gt;Opacity&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#loop&#34;&gt;Loop&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#page-transitions&#34;&gt;Page Transitions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#add-pages-on-demand&#34;&gt;Add pages on demand&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#content-loading-policy&#34;&gt;Content Loading Policy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/Documentation/Usage.md#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#known-issues&#34;&gt;Known Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#feedback&#34;&gt;Feedback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#support-open-source&#34;&gt;Support Open Source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/resources/usage/example-of-usage.gif&#34; alt=&#34;Example of usage&#34;&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 13.0+&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.15+&lt;/li&gt; &#xA; &lt;li&gt;watchOS 6.0+&lt;/li&gt; &#xA; &lt;li&gt;tvOS 13.0+&lt;/li&gt; &#xA; &lt;li&gt;Swift 5.1+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;SwiftUIPager&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;In Xcode:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File ‚≠¢ Swift Packages ‚≠¢ Add Package Dependency...&lt;/li&gt; &#xA; &lt;li&gt;Use the URL &lt;a href=&#34;https://github.com/fermoya/SwiftUIPager.git&#34;&gt;https://github.com/fermoya/SwiftUIPager.git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;github &#34;fermoya/SwiftUIPager&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download &lt;em&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/SwiftUIPager.xcframework&#34;&gt;SwiftUIPager.xcframework&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a group &lt;em&gt;Frameworks&lt;/em&gt; inside your project and drag and drop &lt;em&gt;SwiftUIPager.xcframework&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/resources/installation/manual-installation-step-1.png&#34; alt=&#34;Manual Installation Step 1&#34; width=&#34;229&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure in your target&#39;s build phases that the option &lt;em&gt;Embed &amp;amp; Sign&lt;/em&gt; is selected:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/resources/installation/manual-installation-step-2.png&#34; alt=&#34;Manual Installation Step 2&#34; width=&#34;755&#34;&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NavigationLink&lt;/code&gt; and &lt;code&gt;Button&lt;/code&gt; might work oddly with &lt;code&gt;Pager&lt;/code&gt; if &lt;code&gt;pagingPriority(.simultaneous)&lt;/code&gt; is used in &lt;em&gt;SwiftUI 1.0&lt;/em&gt; and &lt;em&gt;iOS 13&lt;/em&gt;. This issue isn&#39;t reproducible in &lt;em&gt;iOS 14 beta&lt;/em&gt;. For more information, follow this &lt;a href=&#34;https://stackoverflow.com/questions/58440469/swiftui-navigationlink-and-scrollview-drag-gesture-colliding&#34;&gt;link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Depending on the &lt;em&gt;Xcode&lt;/em&gt; version, you might run into a precondition failure affecting &lt;em&gt;SwiftUI 1.0&lt;/em&gt; and &lt;em&gt;iOS 13&lt;/em&gt;. This issue doesn&#39;t occur on &lt;em&gt;Xcode 12 beta&lt;/em&gt;. For more information about workarounds, see &lt;em&gt;Precondition failure: invalid value type for attribute &lt;a href=&#34;https://github.com/fermoya/SwiftUIPager/issues/60&#34;&gt;#60&lt;/a&gt;&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you happen to encounter any problem or you have any suggestion, please, don&#39;t hesitate to open an issue or reach out to me at &lt;a href=&#34;mailto:fmdr.ct@gmail.com&#34;&gt;fmdr.ct@gmail.com&lt;/a&gt;.&lt;br&gt; This is an open source code project, so feel free to collaborate by raising a pull-request or sharing your feedback.&lt;/p&gt; &#xA;&lt;h2&gt;Support Open Source&lt;/h2&gt; &#xA;&lt;p&gt;If you love this library, understand all the effort it takes to maintain it and would like to support me, you can buy me a coffee by following this &lt;a href=&#34;https://www.buymeacoffee.com/fermoya&#34;&gt;link&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/fermoya&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 51px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also sponsor me by hitting the &lt;a href=&#34;https://github.com/sponsors/fermoya&#34;&gt;&lt;em&gt;GitHub Sponsor&lt;/em&gt;&lt;/a&gt; button. All help is very much appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;SwiftUIPager&lt;/code&gt; is available under the MIT license. See the &lt;a href=&#34;https://raw.githubusercontent.com/fermoya/SwiftUIPager/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sourcelocation/TrollTools</title>
    <updated>2022-10-24T01:39:20Z</updated>
    <id>tag:github.com,2022-10-24:/sourcelocation/TrollTools</id>
    <link href="https://github.com/sourcelocation/TrollTools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TrollTools - Revolutionizing iOS 15 customisation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TrollTools&lt;/h1&gt; &#xA;&lt;p&gt;TrollTools - Revolutionizing iOS 15 customisation&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7yDOF0a8Q6A&#34;&gt;https://www.youtube.com/watch?v=7yDOF0a8Q6A&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>