<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-24T01:35:05Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nfdi4plants/arc-validate</title>
    <updated>2023-02-24T01:35:05Z</updated>
    <id>tag:github.com,2023-02-24:/nfdi4plants/arc-validate</id>
    <link href="https://github.com/nfdi4plants/arc-validate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Test project and docker container for the arc validation workflow&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;arc-validate&lt;/h1&gt; &#xA;&lt;p&gt;Test project and docker container for the arc validation workflow&lt;/p&gt; &#xA;&lt;h2&gt;build docker container&lt;/h2&gt; &#xA;&lt;p&gt;In the repo root, run &lt;code&gt;docker build -t arc-validate .&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;use the container&lt;/h2&gt; &#xA;&lt;h3&gt;running arc validation&lt;/h3&gt; &#xA;&lt;p&gt;The container will contain a &lt;code&gt;arc-validate.sh&lt;/code&gt; script that will execute the test project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;arc-validate.sh&lt;/code&gt; In the working directory of the container&lt;/li&gt; &#xA; &lt;li&gt;The test project will currently look for a &lt;code&gt;test.txt&lt;/code&gt; file in the working directory and run these 2 tests on the file: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;does it exist?&lt;/li&gt; &#xA;   &lt;li&gt;does it contain the text &#34;yes&#34;?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The test results are then written to &lt;code&gt;arc-validate-results.xml&lt;/code&gt; (in the container)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So there are 2 easy ways to use the container:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mount a local directory with &lt;code&gt;test.txt&lt;/code&gt; into the container and run &lt;code&gt;arc-validate.sh&lt;/code&gt;, e.g.: &lt;code&gt;docker run -d --mount type=bind,source={YOUR_ARC_FOLDER_HERE},target=/arc arc-validate arc-validate.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;use it as a base image and use &lt;code&gt;arc-validate.sh&lt;/code&gt; directly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;creating the badge&lt;/h3&gt; &#xA;&lt;p&gt;The container will contain a &lt;code&gt;create-badge.py&lt;/code&gt; script that will create the arc quality badge:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the script will parse &lt;code&gt;arc-validate-results.xml&lt;/code&gt; in the working directory&lt;/li&gt; &#xA; &lt;li&gt;the script will create a badge displaying passed/failed tests in the working directory as &lt;code&gt;arc-quality.svg&lt;/code&gt;, e.g: &lt;img src=&#34;https://raw.githubusercontent.com/nfdi4plants/arc-validate/main/test/arc-quality.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So there are 2 easy ways to use the script in the container:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mount a local directory with &lt;code&gt;arc-validate-results.xml&lt;/code&gt; (e.g. after runnning &lt;code&gt;arc-validate.sh&lt;/code&gt; as specified above) into the container and run &lt;code&gt;create-badge.py&lt;/code&gt;, e.g.: &lt;code&gt;docker run -d --mount type=bind,source={YOUR_ARC_FOLDER_HERE},target=/arc arc-validate create-badge.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;use it as a base image and use &lt;code&gt;create-badge.py&lt;/code&gt; directly.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>