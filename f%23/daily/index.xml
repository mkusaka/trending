<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-19T01:34:15Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jet/kafunk</title>
    <updated>2023-06-19T01:34:15Z</updated>
    <id>tag:github.com,2023-06-19:/jet/kafunk</id>
    <link href="https://github.com/jet/kafunk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kafunk: F# Kafka client&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NOTICE: SUPPORT FOR THIS PROJECT ENDED ON 18 November 2020&lt;/p&gt; &#xA;&lt;p&gt;This projected was owned and maintained by Jet.com (Walmart). This project has reached its end of life and Walmart no longer supports this project.&lt;/p&gt; &#xA;&lt;p&gt;We will no longer be monitoring the issues for this project or reviewing pull requests. You are free to continue using this project under the license terms or forks of this project at your own risk. This project is no longer subject to Jet.com/Walmart&#39;s bug bounty program or other security monitoring.&lt;/p&gt; &#xA;&lt;h2&gt;Actions you can take&lt;/h2&gt; &#xA;&lt;p&gt;We recommend you take the following action:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Review any configuration files used for build automation and make appropriate updates to remove or replace this project&lt;/li&gt; &#xA; &lt;li&gt;Notify other members of your team and/or organization of this change&lt;/li&gt; &#xA; &lt;li&gt;Notify your security team to help you evaluate alternative options&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Forking and transition of ownership&lt;/h2&gt; &#xA;&lt;p&gt;For &lt;a href=&#34;https://www.theregister.co.uk/2018/11/26/npm_repo_bitcoin_stealer/&#34;&gt;security reasons&lt;/a&gt;, Walmart does not transfer the ownership of our primary repos on Github or other platforms to other individuals/organizations. Further, we do not transfer ownership of packages for public package management systems.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to fork this package and continue development, you should choose a new name for the project and create your own packages, build automation, etc.&lt;/p&gt; &#xA;&lt;p&gt;Please review the licensing terms of this project, which continue to be in effect even after decommission.&lt;/p&gt; &#xA;&lt;p&gt;ORIGINAL README BELOW&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;UPDATE&lt;/h1&gt; &#xA;&lt;p&gt;We found a bug in the implementation of the v0.11+ protocol wherein messages were skipped during consumption. The bug only manifests when using the newer protocol version (the default). Due to this bug and for long term maintenance, we&#39;ve started investing into the Confluent.Kafka client: &lt;a href=&#34;https://github.com/jet/confluent-kafka-fsharp&#34;&gt;https://github.com/jet/confluent-kafka-fsharp&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Kafunk&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/kafunk/&#34;&gt;&lt;img src=&#34;http://img.shields.io/nuget/v/kafunk.svg?style=flat&#34; alt=&#34;NuGet Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/Jet/kafunk/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/j61df5g4tbxrmfg5/branch/master?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/jet/kafunk&#34;&gt;&lt;img src=&#34;https://travis-ci.org/jet/kafunk.svg?branch=master&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kafunk&lt;/strong&gt; is a &lt;a href=&#34;https://kafka.apache.org/&#34;&gt;Kafka&lt;/a&gt; client written in F#.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://jet.github.io/kafunk&#34;&gt;the home page&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Please also join the &lt;a href=&#34;http://fsharp.github.com&#34;&gt;F# Open Source Group&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Version Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.9.0&lt;/td&gt; &#xA;   &lt;td&gt;Complete&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.10.0&lt;/td&gt; &#xA;   &lt;td&gt;Complete&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.10.1&lt;/td&gt; &#xA;   &lt;td&gt;Complete&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.11+auto&lt;/td&gt; &#xA;   &lt;td&gt;Protocol&lt;/td&gt; &#xA;   &lt;td&gt;Protocol implementation bug found (skipped messages)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Feature Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GZip&lt;/td&gt; &#xA;   &lt;td&gt;Complete&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Snappy&lt;/td&gt; &#xA;   &lt;td&gt;Complete&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LZ4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jet/kafunk/issues/125&#34;&gt;https://github.com/jet/kafunk/issues/125&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TLS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jet/kafunk/issues/66&#34;&gt;https://github.com/jet/kafunk/issues/66&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SASL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jet/kafunk/issues/139&#34;&gt;https://github.com/jet/kafunk/issues/139&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ACL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jet/kafunk/issues/140&#34;&gt;https://github.com/jet/kafunk/issues/140&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TXNS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jet/kafunk/issues/214&#34;&gt;https://github.com/jet/kafunk/issues/214&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Hello World&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;#r &#34;kafunk.dll&#34;&#xA;#r &#34;FSharp.Control.AsyncSeq.dll&#34;&#xA;&#xA;open Kafunk&#xA;open System&#xA;&#xA;let conn = Kafka.connHost &#34;existential-host&#34;&#xA;&#xA;// metadata&#xA;&#xA;let metadata = &#xA;  Kafka.metadata conn (MetadataRequest([|&#34;absurd-topic&#34;|])) &#xA;  |&amp;gt; Async.RunSynchronously&#xA;&#xA;for b in metadata.brokers do&#xA;  printfn &#34;broker|host=%s port=%i nodeId=%i&#34; b.host b.port b.nodeId&#xA;&#xA;for t in metadata.topicMetadata do&#xA;  printfn &#34;topic|topic_name=%s topic_error_code=%i&#34; t.topicName t.topicErrorCode&#xA;  for p in t.partitionMetadata do&#xA;    printfn &#34;topic|topic_name=%s|partition|partition_id=%i&#34; t.topicName p.partitionId&#xA;&#xA;&#xA;// producer&#xA;&#xA;let producerCfg =&#xA;  ProducerConfig.create (&#xA;    topic = &#34;absurd-topic&#34;, &#xA;    partition = Partitioner.roundRobin, &#xA;    requiredAcks = RequiredAcks.Local)&#xA;&#xA;let producer =&#xA;  Producer.createAsync conn producerCfg&#xA;  |&amp;gt; Async.RunSynchronously&#xA;&#xA;// produce single message&#xA;&#xA;let prodRes =&#xA;  Producer.produce producer (ProducerMessage.ofBytes (&#34;hello world&#34;B))&#xA;  |&amp;gt; Async.RunSynchronously&#xA;&#xA;printfn &#34;partition=%i offset=%i&#34; prodRes.partition prodRes.offset&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;// consumer&#xA;&#xA;let consumerCfg = &#xA;  ConsumerConfig.create (&#34;consumer-group&#34;, &#34;absurd-topic&#34;)&#xA;&#xA;let consumer =&#xA;  Consumer.create conn consumerCfg&#xA;&#xA;// commit on every message set&#xA;&#xA;Consumer.consume consumer &#xA;  (fun (s:ConsumerState) (ms:ConsumerMessageSet) -&amp;gt; async {&#xA;    printfn &#34;member_id=%s topic=%s partition=%i&#34; s.memberId ms.topic ms.partition&#xA;    do! Consumer.commitOffsets consumer (ConsumerMessageSet.commitPartitionOffsets ms) })&#xA;|&amp;gt; Async.RunSynchronously&#xA;&#xA;&#xA;// commit periodically&#xA;&#xA;&#xA;Consumer.consumePeriodicCommit consumer&#xA;  (TimeSpan.FromSeconds 10.0) &#xA;  (fun (s:ConsumerState) (ms:ConsumerMessageSet) -&amp;gt; async {&#xA;    printfn &#34;member_id=%s topic=%s partition=%i&#34; s.memberId ms.topic ms.partition })&#xA;|&amp;gt; Async.RunSynchronously&#xA;&#xA;&#xA;// commit consumer offsets explicitly&#xA;&#xA;Consumer.commitOffsets consumer [| 0, 1L |]&#xA;|&amp;gt; Async.RunSynchronously&#xA;&#xA;// commit consumer offsets explicitly to a relative time&#xA;&#xA;Consumer.commitOffsetsToTime consumer Time.EarliestOffset&#xA;|&amp;gt; Async.RunSynchronously&#xA;&#xA;&#xA;// get current consumer state&#xA;&#xA;let consumerState = &#xA;  Consumer.state consumer&#xA;  |&amp;gt; Async.RunSynchronously&#xA;&#xA;printfn &#34;generation_id=%i member_id=%s leader_id=%s assignment_stratgey=%s partitions=%A&#34; &#xA;  consumerState.generationId consumerState.memberId consumerState.leaderId &#xA;  consumerState.assignmentStrategy consumerState.assignments &#xA;&#xA;&#xA;&#xA;// fetch offsets of a consumer group for all topics&#xA;&#xA;let consumerOffsets =&#xA;  Consumer.fetchOffsets conn &#34;consumer-group&#34; [||]&#xA;  |&amp;gt; Async.RunSynchronously&#xA;&#xA;for (t,os) in consumerOffsets do&#xA;  for (p,o) in os do&#xA;    printfn &#34;topic=%s partition=%i offset=%i&#34; t p o&#xA;&#xA;&#xA;// fetch topic offset information&#xA;&#xA;let offsets = &#xA;  Offsets.offsets conn &#34;absurd-topic&#34; [] [ Time.EarliestOffset ; Time.LatestOffset ] 1&#xA;  |&amp;gt; Async.RunSynchronously&#xA;&#xA;for kvp in offsets do&#xA;  for (tn,offsets) in kvp.Value.topics do&#xA;    for p in offsets do&#xA;      printfn &#34;time=%i topic=%s partition=%i offsets=%A&#34; kvp.Key tn p.partition p.offsets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eulerfx&#34;&gt;@eulerfx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>