<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-10T01:39:41Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PragmaticFlow/NBomber</title>
    <updated>2022-06-10T01:39:41Z</updated>
    <id>tag:github.com,2022-06-10:/PragmaticFlow/NBomber</id>
    <link href="https://github.com/PragmaticFlow/NBomber" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern and flexible load testing framework for Pull and Push scenarios, designed to test any system regardless a protocol (HTTP/WebSockets/AMQP etc) or a semantic model (Pull/Push).&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/PragmaticFlow/NBomber/raw/dev/assets/nbomber_logo.png&#34; alt=&#34;NBomber logo&#34; width=&#34;600px&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PragmaticFlow/NBomber/actions/workflows/dotnet.yml/badge.svg?branch=dev&#34; alt=&#34;Build status&#34;&gt; &lt;a href=&#34;https://www.nuget.org/packages/nbomber/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/nbomber.svg?sanitize=true&#34; alt=&#34;NuGet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/nbomber/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/nbomber/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Very simple load testing framework for Pull and Push scenarios. It&#39;s 100% written in F# and targeting .NET Core and full .NET Framework.&lt;/p&gt; &#xA;&lt;h3&gt;How to install&lt;/h3&gt; &#xA;&lt;p&gt;To install NBomber via NuGet, run this command in NuGet package manager console:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-code&#34;&gt;PM&amp;gt; Install-Package NBomber&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Documentation is located &lt;a href=&#34;https://nbomber.com/docs/overview/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Run test scenario&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://nbomber.com/assets/images/nbomber_v2_console-6a596abc247223cefefa397c62e620f4.gif&#34; alt=&#34;how to run a scenario gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;View report&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PragmaticFlow/NBomber/dev/assets/nbomber_report.jpg&#34; alt=&#34;view report&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Analyze trends&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PragmaticFlow/NBomber/raw/dev/assets/influx_trends.png&#34; alt=&#34;analyze trends&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Why we build NBomber and what you can do with it?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The main reason behind NBomber is to provide a &lt;strong&gt;lightweight&lt;/strong&gt; framework for writing load tests which you can use to test literally &lt;strong&gt;any&lt;/strong&gt; system and simulate &lt;strong&gt;any&lt;/strong&gt; production workload. We wanted to provide only a few abstractions so that we could describe any type of load and still have a simple, intuitive API.&lt;/li&gt; &#xA; &lt;li&gt;Another goal is to provide building blocks to validate your POC (proof of concept) projects by applying any complex load distribution.&lt;/li&gt; &#xA; &lt;li&gt;With NBomber you can test any PULL or PUSH system (HTTP, WebSockets, GraphQl, gRPC, SQL Databse, MongoDb, Redis etc).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NBomber as a modern framework provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zero dependencies on protocol (HTTP/WebSockets/AMQP/SQL)&lt;/li&gt; &#xA; &lt;li&gt;Zero dependencies on semantic model (Pull/Push)&lt;/li&gt; &#xA; &lt;li&gt;Very flexible configuration and dead simple API&lt;/li&gt; &#xA; &lt;li&gt;Cluster support&lt;/li&gt; &#xA; &lt;li&gt;Reporting sinks&lt;/li&gt; &#xA; &lt;li&gt;CI/CD integration&lt;/li&gt; &#xA; &lt;li&gt;Plugins/extensions support&lt;/li&gt; &#xA; &lt;li&gt;Data feed support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What makes it very simple?&lt;/h3&gt; &#xA;&lt;p&gt;NBomber is a foundation of building blocks which you can use to describe your test scenario, run it and get reports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;// FSharp example&#xA;&#xA;let step = Step.create(&#34;step&#34;, fun context -&amp;gt; task {&#xA;&#xA;    // you can do any logic here: go to http, websocket etc&#xA;    do! Task.Delay(seconds 1)&#xA;    return Response.Ok()&#xA;})&#xA;&#xA;Scenario.create &#34;scenario&#34; [step]&#xA;|&amp;gt; NBomberRunner.registerScenario&#xA;|&amp;gt; NBomberRunner.run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// CSharp example&#xA;&#xA;var step = Step.Create(&#34;step&#34;, async context =&amp;gt;&#xA;{&#xA;    // you can do any logic here: go to http, websocket etc&#xA;&#xA;    await Task.Delay(TimeSpan.FromSeconds(1));&#xA;    return Response.Ok();&#xA;});&#xA;&#xA;var scenario = ScenarioBuilder.CreateScenario(&#34;scenario&#34;, step);&#xA;&#xA;NBomberRunner&#xA;    .RegisterScenarios(scenario)&#xA;    .Run();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PragmaticFlow/NBomber/tree/dev/examples/FSharpProd&#34;&gt;link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PragmaticFlow/NBomber/tree/dev/examples/CSharpProd&#34;&gt;link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Would you like to help make NBomber even better? We keep a list of issues that are approachable for newcomers under the &lt;a href=&#34;https://github.com/PragmaticFlow/NBomber/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&#34;&gt;good-first-issue&lt;/a&gt; label.&lt;/p&gt;</summary>
  </entry>
</feed>