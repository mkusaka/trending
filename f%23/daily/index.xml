<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-16T01:27:23Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jonas1ara/Numerical-methods-fs</title>
    <updated>2024-02-16T01:27:23Z</updated>
    <id>tag:github.com,2024-02-16:/jonas1ara/Numerical-methods-fs</id>
    <link href="https://github.com/jonas1ara/Numerical-methods-fs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fsharp makes it easy to use numerical methods&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Numerical methods using fsharp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonas1ara/Numerical-methods-fs/main/img/VG.jpeg&#34; alt=&#34;VG using F#&#34;&gt; &lt;em&gt;Fsharp makes it easy to use numerical methods even for Van Gogh&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Methods&lt;/h1&gt; &#xA;&lt;h2&gt;Calculus:&lt;/h2&gt; &#xA;&lt;h3&gt;[x] Bisection Method&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Another technique to find roots of equations, especially useful when working with continuous functions on closed intervals.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Newton-Raphson Method&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Used to find roots of nonlinear equations. It is a popular technique for solving optimization problems.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Numerical differentiation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Numerical differentiation is a technique used to approximate the derivative of a function at a specific point by employing finite differences.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Numerical integration (Rectangle rule)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The rectangle rule is the simplest method of approximating the value of a definite integral. It approximates the region under the graph of the function &lt;code&gt;f(x)&lt;/code&gt; as a single rectangle.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Numerical integration (Trapezoidal rule)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The trapezoidal rule is a technique for approximating the definite integral. It approximates the region under the graph of the function &lt;code&gt;f(x)&lt;/code&gt; as a trapezoid and calculating its area.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Numerical integration (Simpson&#39;s rule)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simpson&#39;s rule is a technique for approximating the definite integral. It approximates the region under the graph of the function &lt;code&gt;f(x)&lt;/code&gt; as a series of parabolic curves and calculating their areas.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Numerical integration (Monte Carlo)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Monte Carlo integration is a technique for approximating the definite integral. It approximates the region under the graph of the function &lt;code&gt;f(x)&lt;/code&gt; as a series of random points and calculating their areas.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Linear algebra:&lt;/h2&gt; &#xA;&lt;h3&gt;[x] Jacobi Method&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Iterative methods for solving systems of linear equations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Gauss-Seidel Method&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Iterative methods for solving systems of linear equations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Gaussian Elimination&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Used to solve systems of linear equations, especially useful for large matrices.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] LU Decomposition&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Used to solve systems of linear equations, especially useful for large matrices.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Differential equations:&lt;/h2&gt; &#xA;&lt;h3&gt;[x] Euler&#39;s Method&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Used to solve ordinary differential equations, which model changes in variables over time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Runge-Kutta Methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A family of methods for solving ordinary differential equations and systems of differential equations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Probability and statistics:&lt;/h2&gt; &#xA;&lt;h3&gt;[x] Linear interpolation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Techniques to estimate intermediate values between known data points (interpolation) or to fit a curve to a dataset (regression).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Linear regression&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Techniques to estimate intermediate values between known data points (interpolation) or to fit a curve to a dataset (regression).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Monte Carlo Method integration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A statistical-numerical approach for simulation and problem-solving through the generation of random numbers for integration. Monte Carlo integration is a technique for approximating the definite integral. It approximates the region under the graph of the function &lt;code&gt;f(x)&lt;/code&gt; as a series of random points and calculating their areas.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Monte Carlo Method PI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A statistical-numerical approach for simulation and problem-solving through the generation of random numbers for approximating the value of Ï€.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Optimization:&lt;/h2&gt; &#xA;&lt;h3&gt;[x] Fourier Transform&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Used to transform signals between the time domain and the frequency domain, essential in signal processing and dynamic systems analysis.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;[x] Gradient descent&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gradient descent to find minima or maxima of functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributions&lt;/h1&gt; &#xA;&lt;p&gt;Feel free to contribute! If you have additional methods you&#39;d like to add or improve existing descriptions, create a pull request, and I&#39;ll be happy to review it but try to keep your solution in the programming style of F#.&lt;/p&gt;</summary>
  </entry>
</feed>