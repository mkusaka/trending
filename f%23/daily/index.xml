<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-13T01:29:31Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>datarisk-io/Datapi-DevOps-Challenge</title>
    <updated>2023-11-13T01:29:31Z</updated>
    <id>tag:github.com,2023-11-13:/datarisk-io/Datapi-DevOps-Challenge</id>
    <link href="https://github.com/datarisk-io/Datapi-DevOps-Challenge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datapi DevOps Challenge&lt;/h1&gt; &#xA;&lt;p&gt;Para melhor entendermos o seu nível técnico, nós preparamos este desafio como parte do nosso processo de contratação. Por isso, tenha em mente que não é necessário cumprir com todos os pontos mencionados, nem cumpri-los em uma ordem específica.&lt;/p&gt; &#xA;&lt;p&gt;O importante é entregar o que você conseguir fazer, com a devida documentação.&lt;/p&gt; &#xA;&lt;h1&gt;Desafios&lt;/h1&gt; &#xA;&lt;p&gt;Segue abaixo uma lista de desafios abrangendo várias áreas de responsabilidade para um DevOps no time do Datapi. Nossa sugestão é tentar seguir cada item na ordem apresentada, porém você está livre para atuar nos pontos que quiser e tiver mais familiaridade.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Instanciar uma VM numa cloud provider. Recomendação: Microsoft Azure. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Criar a configuração dessa VM usando uma ferramenta de IaC (Infrastructure as Code). Recomendação: Terraform.&lt;/li&gt; &#xA;   &lt;li&gt;Criar um job de CI (Continuous Integration) para aplicar a configuração da ferramenta de provisionamento. Recomendação: GitHub Actions.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Adicionar um Dockerfile à aplicação disponibilizada na pasta &lt;code&gt;projeto-fsharp/&lt;/code&gt; para containerizar o mesmo. Note que foi utilizada a linguagem F# (.NET) para escrever a aplicação. Para facilitar o entendimento do projeto, adicionamos um README.md com instruções de teste e uso do mesmo localmente. Você deverá ser capaz de traduzir essas instruções para a criação do Dockerfile. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Criar um job de CI para enviar a imagem gerada para um Docker Registry. Recomendação: GitHub Container Registry.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Criar os manifestos YAML para hospedar a aplicação usando Kubernetes. Nesse ponto os testes podem ser realizados apenas localmente, porém devem ser apresentados os arquivos YAML criados. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Utilizar IaC para configurar o Kubernetes. Recomendação: Terraform.&lt;/li&gt; &#xA;   &lt;li&gt;Configurar a hospedagem a partir do registry gerado na tarefa anterior.&lt;/li&gt; &#xA;   &lt;li&gt;Caso possua mais familiaridade, sinta-se motivado a customizar mais as configurações (secrets, ingress, etc.).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Adicionar um README ao projeto detalhando o processo e justificando as decisões tomadas. Recomendação: Markdown. Todos os refinamentos adicionados nos tópicos mencionados anteriormente, e demais ideias que possam melhorar o projeto serão considerados na avaliação da solução.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Faça um fork e envie um PR com a sua solução, o tempo de entrega é de no máximo 4 dias e será contabilizado a partir da data do fork.&lt;/p&gt; &#xA;&lt;h2&gt;Será avaliado:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;% do que foi entregue em relação ao que foi pedido.&lt;/li&gt; &#xA; &lt;li&gt;Qualidade dos aquivos Terraform.&lt;/li&gt; &#xA; &lt;li&gt;Boas práticas de infra e uso do Kubernetes.&lt;/li&gt; &#xA; &lt;li&gt;Corretude das tarefas.&lt;/li&gt; &#xA; &lt;li&gt;Uso eficiente em relação ao custo de máquina.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>