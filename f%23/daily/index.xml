<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-08T01:35:01Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yazeedobaid/openai-fsharp</title>
    <updated>2023-02-08T01:35:01Z</updated>
    <id>tag:github.com,2023-02-08:/yazeedobaid/openai-fsharp</id>
    <link href="https://github.com/yazeedobaid/openai-fsharp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenAI - F# - A library that allows you to interact with OpenAI API in an easy, fluent, and typed way!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/yazeedobaid/openai-fsharp/main/art/example-snippet.png&#34; alt=&#34;OpenAI F#&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/yazeedobaid/openai-fsharp/actions&#34;&gt;&lt;img alt=&#34;GitHub Workflow Status (main)&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/yazeedobaid/openai-fsharp/build.yml?branch=main&amp;amp;label=build&amp;amp;style=round-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yazeedobaid/openai-fsharp/raw/main/LICENSE&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/yazeedobaid/openai-fsharp&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/OpenAI.Client&#34;&gt;&lt;img alt=&#34;NuGet Version&#34; src=&#34;https://img.shields.io/nuget/v/openai.client?color=blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/OpenAI.Client&#34;&gt;&lt;img alt=&#34;NuGet Version&#34; src=&#34;https://img.shields.io/nuget/dt/openai.client?color=green&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;OpenAI F#&lt;/strong&gt; is a library that allows you to interact with &lt;a href=&#34;https://beta.openai.com/docs/api-reference/introduction&#34;&gt;Open AI API&lt;/a&gt; in an easy, fluent, and typed way!&lt;/p&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;Add the library to your project using DotNet CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet add package OpenAI.Client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Paket:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paket add OpenAI.Client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The library provide two styles to consume the APIs, either a methods calls through pipe operator as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;open OpenAI&#xA;open OpenAI.Client&#xA;open OpenAI.Models&#xA;&#xA;let client =&#xA;    Config(&#xA;        { Endpoint = &#34;https://api.openai.com/v1&#34;&#xA;          ApiKey = &#34;your-api-key&#34; },&#xA;        HttpRequester()&#xA;    )&#xA;    &#xA;let result = client |&amp;gt; models |&amp;gt; list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder object as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        models&#xA;        list&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check OpenAI API reference at &lt;a href=&#34;https://platform.openai.com/docs/api-reference&#34;&gt;API reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;Models&lt;/code&gt; Resource&lt;/h3&gt; &#xA;&lt;p&gt;List and describe the various models available in the API. You can refer to the Models documentation to understand what models are available and the differences between them.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;list&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Lists the currently available models, and provides basic information about each one such as the owner and availability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; models |&amp;gt; list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        models&#xA;        list&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;retrieve&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Retrieves a model instance, providing basic information about the model such as the owner and permissioning.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; models |&amp;gt; retrieve &#34;text-davinci-003&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        models&#xA;        retrieve &#34;text-davinci-003&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Delete a fine-tuned model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; models |&amp;gt; delete &#34;curie:ft-acmeco-2021-03-03-21-44-20&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        models&#xA;        delete &#34;curie:ft-acmeco-2021-03-03-21-44-20&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;code&gt;Completions&lt;/code&gt; Resource&lt;/h3&gt; &#xA;&lt;p&gt;Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;create&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Creates a completion for the provided prompt and parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; completions&#xA;    |&amp;gt; Completions.create&#xA;        { Model = &#34;text-davinci-003&#34;&#xA;          Prompt = &#34;What is the meaning of living?&#34;&#xA;          Temperature = 0.5&#xA;          Stop = &#34;.&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;     endPoint &#34;https://api.openai.com/v1&#34;&#xA;     apiKey &#34;your-api-key&#34;&#xA;     completions&#xA;     create&#xA;        { Model = &#34;text-davinci-003&#34;&#xA;          Prompt = &#34;What is the meaning of living?&#34;&#xA;          Temperature = 0.5&#xA;          Stop = &#34;.&#34; }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;code&gt;Edits&lt;/code&gt; Resource&lt;/h3&gt; &#xA;&lt;p&gt;Given a prompt and an instruction, the model will return an edited version of the prompt.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;create&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Creates a new edit for the provided input, instruction, and parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; edits&#xA;    |&amp;gt; Edits.create&#xA;           { Model = &#34;text-davinci-edit-001&#34;&#xA;             Input = &#34;What day of the wek is it?&#34;&#xA;             Instruction = &#34;Fix the spelling mistakes&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;     endPoint &#34;https://api.openai.com/v1&#34;&#xA;     apiKey &#34;your-api-key&#34;&#xA;     edits&#xA;     create&#xA;        { Model = &#34;text-davinci-edit-001&#34;&#xA;         Input = &#34;What day of the wek is it?&#34;&#xA;         Instruction = &#34;Fix the spelling mistakes&#34; }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;code&gt;Images&lt;/code&gt; Resource&lt;/h3&gt; &#xA;&lt;p&gt;Given a prompt and/or an input image, the model will generate a new image.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;create&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Creates an image given a prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; images&#xA;    |&amp;gt; create&#xA;         { Prompt = &#34;A cute baby sea otter&#34;&#xA;           N = 2&#xA;           Size = &#34;1024x1024&#34;&#xA;           responseFormat = &#34;url&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        images&#xA;        create&#xA;            { Prompt = &#34;A cute baby sea otter&#34;&#xA;              N = 2&#xA;              Size = &#34;1024x1024&#34;&#xA;              responseFormat = &#34;url&#34; }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;edit&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Creates an edited or extended image given an original image and a prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; images&#xA;    |&amp;gt; edit&#xA;        { Image = &#34;sample.png&#34;&#xA;          Mask = &#34;sample.png&#34;&#xA;          Prompt = &#34;A cute baby sea otter wearing a beret&#34;&#xA;          N = 2&#xA;          Size = &#34;1024x1024&#34;&#xA;          responseFormat = &#34;url&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        images&#xA;        edit&#xA;            { Image = &#34;sample.png&#34;&#xA;              Mask = &#34;sample.png&#34;&#xA;              Prompt = &#34;A cute baby sea otter wearing a beret&#34;&#xA;              N = 2&#xA;              Size = &#34;1024x1024&#34;&#xA;              responseFormat = &#34;url&#34; }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;variation&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Creates a variation of a given image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; images&#xA;    |&amp;gt; variation&#xA;        { Image = &#34;sample.png&#34;&#xA;          N = 2&#xA;          Size = &#34;1024x1024&#34;&#xA;          responseFormat = &#34;url&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;     endPoint &#34;https://api.openai.com/v1&#34;&#xA;     apiKey &#34;your-api-key&#34;&#xA;     images&#xA;     variation&#xA;        { Image = &#34;sample.png&#34;&#xA;          N = 2&#xA;          Size = &#34;1024x1024&#34;&#xA;          responseFormat = &#34;url&#34; }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;code&gt;Embeddings&lt;/code&gt; Resource&lt;/h3&gt; &#xA;&lt;p&gt;Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;create&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Creates an embedding vector representing the input text.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; embeddings&#xA;    |&amp;gt; create&#xA;        { Model = &#34;text-embedding-ada-002&#34;&#xA;          Input = &#34;The food was delicious and the waiter...&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        embeddings&#xA;        create&#xA;             { Model = &#34;text-embedding-ada-002&#34;&#xA;               Input = &#34;The food was delicious and the waiter...&#34; }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;code&gt;Files&lt;/code&gt; Resource&lt;/h3&gt; &#xA;&lt;p&gt;Files are used to upload documents that can be used with features like Fine-tuning.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;list&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns a list of files that belong to the user&#39;s organization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; files |&amp;gt; list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;     openAI {&#xA;         endPoint &#34;https://api.openai.com/v1&#34;&#xA;         apiKey &#34;your-api-key&#34;&#xA;         files&#xA;         list&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;upload&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Upload a file that contains document(s) to be used across various endpoints/features.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; files&#xA;    |&amp;gt; upload&#xA;        { File = @&#34;sample-json.txt&#34;&#xA;          Purpose = &#34;fine-tune&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        files&#xA;        upload&#xA;             { File = @&#34;sample-json.txt&#34;&#xA;               Purpose = &#34;fine-tune&#34; }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Delete a file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; files&#xA;    |&amp;gt; delete &#34;file-qtUwySute1Zf2yT6mWIGTCwq&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;         endPoint &#34;https://api.openai.com/v1&#34;&#xA;         apiKey &#34;your-api-key&#34;&#xA;         files&#xA;         delete &#34;file-qtUwySute1Zf2yT6mWIGTCwq&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;retrieve&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns information about a specific file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; files |&amp;gt; retrieve &#34;file-Lpe0n5tOHtoG6OVVbk5d4iXA&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;         endPoint &#34;https://api.openai.com/v1&#34;&#xA;         apiKey &#34;your-api-key&#34;&#xA;         files&#xA;         retrieve &#34;file-Lpe0n5tOHtoG6OVVbk5d4iXA&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;download&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns the contents of the specified file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; files |&amp;gt; download &#34;file-Lpe0n5tOHtoG6OVVbk5d4iXA&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;         endPoint &#34;https://api.openai.com/v1&#34;&#xA;         apiKey &#34;your-api-key&#34;&#xA;         files&#xA;         download &#34;file-Lpe0n5tOHtoG6OVVbk5d4iXA&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;code&gt;FineTunes&lt;/code&gt; Resource&lt;/h3&gt; &#xA;&lt;p&gt;Manage fine-tuning jobs to tailor a model to your specific training data.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;create&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Creates a job that fine-tunes a specified model from a given dataset.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    client&#xA;    |&amp;gt; fineTunes&#xA;    |&amp;gt; create { CreateRequest.Default with TrainingFile = &#34;file-Lpe0n5tOHtoG6OVVbk5d4iXA&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = &#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        fineTunes&#xA;        create { CreateRequest.Default with TrainingFile = &#34;file-Lpe0n5tOHtoG6OVVbk5d4iXA&#34; }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;list&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;List your organization&#39;s fine-tuning jobs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; fineTunes |&amp;gt; list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        fineTunes&#xA;        list&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;retrieve&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Gets info about the fine-tune job.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; fineTunes |&amp;gt; retrieve &#34;ft-kNJeZjAhlmFLdCuIzcpkrmNI&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        retrieve&#xA;        retrieve &#34;ft-kNJeZjAhlmFLdCuIzcpkrmNI&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Immediately cancel a fine-tune job.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; fineTunes |&amp;gt; cancel &#34;ft-kNJeZjAhlmFLdCuIzcpkrmNI&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA; openAI {&#xA;     endPoint &#34;https://api.openai.com/v1&#34;&#xA;     apiKey &#34;your-api-key&#34;&#xA;     fineTunes&#xA;     cancel &#34;ft-kNJeZjAhlmFLdCuIzcpkrmNI&#34;&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;list events&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Get fine-grained status updates for a fine-tune job.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result = client |&amp;gt; fineTunes |&amp;gt; listEvents &#34;ft-kNJeZjAhlmFLdCuIzcpkrmNI&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA;    openAI {&#xA;        endPoint &#34;https://api.openai.com/v1&#34;&#xA;        apiKey &#34;your-api-key&#34;&#xA;        fineTunes&#xA;        listEvents &#34;ft-kNJeZjAhlmFLdCuIzcpkrmNI&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;code&gt;Moderations&lt;/code&gt; Resource&lt;/h3&gt; &#xA;&lt;p&gt;Given a input text, outputs if the model classifies it as violating OpenAI&#39;s content policy.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;create&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Classifies if text violates OpenAI&#39;s Content Policy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA; client&#xA; |&amp;gt; moderations&#xA; |&amp;gt; create&#xA;     { Model = &#34;text-moderation-latest&#34;&#xA;       Input = &#34;I want to kill them.&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using a computation expression builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;let result =&#xA; openAI {&#xA;     endPoint &#34;https://api.openai.com/v1&#34;&#xA;     apiKey &#34;your-api-key&#34;&#xA;     moderations&#xA;     create&#xA;         { Model = &#34;text-moderation-latest&#34;&#xA;           Input = &#34;I want to kill them.&#34; }&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This library was inspired from &lt;a href=&#34;https://github.com/openai-php/client&#34;&gt;openai-php&lt;/a&gt; and &lt;a href=&#34;https://github.com/fsprojects/FsHttp&#34;&gt;FsHttp&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>