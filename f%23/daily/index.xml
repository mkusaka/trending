<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-02T01:41:22Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iyyel/fio</title>
    <updated>2022-08-02T01:41:22Z</updated>
    <id>tag:github.com,2022-08-02:/iyyel/fio</id>
    <link href="https://github.com/iyyel/fio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ”§ A type-safe, highly concurrent library for F# based on pure functional programming&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;!-- PROJECT SHIELDS --&gt; &#xA;&lt;!--&#xA;*** I&#39;m using markdown &#34;reference style&#34; links for readability.&#xA;*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).&#xA;*** See the bottom of this document for the declaration of the reference variables&#xA;*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.&#xA;*** https://www.markdownguide.org/basic-syntax/#reference-style-links&#xA;--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iyyel/fio/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/iyyel/fio.svg?style=for-the-badge&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iyyel/fio/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/iyyel/fio.svg?style=for-the-badge&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iyyel/fio/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/iyyel/fio.svg?style=for-the-badge&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iyyel/fio/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/iyyel/fio.svg?style=for-the-badge&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iyyel/fio/raw/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/iyyel/fio.svg?style=for-the-badge&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- PROJECT LOGO --&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/iyyel/fio&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iyyel/fio/main/images/fio_logo_wide.png&#34; width=&#34;auto&#34; height=&#34;300&#34; alt=&#34;FIO Logo&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- &lt;h3 align=&#34;center&#34;&gt;Title&lt;/h3&gt; --&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;span&gt;ðŸ”§&lt;/span&gt; A type-safe, highly concurrent and asynchronous library for F# based on pure functional programming &lt;br&gt; &#xA;  &lt;!--&#xA;    &lt;a href=&#34;https://github.com/othneildrew/Best-README-Template&#34;&gt;&lt;strong&gt;Explore the docs Â»&lt;/strong&gt;&lt;/a&gt;&#xA;    &lt;br /&gt;&#xA;    &lt;br /&gt;&#xA;    &lt;a href=&#34;https://github.com/othneildrew/Best-README-Template&#34;&gt;View Demo&lt;/a&gt;&#xA;    Â·&#xA;    &lt;a href=&#34;https://github.com/othneildrew/Best-README-Template/issues&#34;&gt;Report Bug&lt;/a&gt;&#xA;    Â·&#xA;    &lt;a href=&#34;https://github.com/othneildrew/Best-README-Template/issues&#34;&gt;Request Feature&lt;/a&gt;&#xA;    --&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- TABLE OF CONTENTS --&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Table of Contents&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#about-the-project&#34;&gt;About FIO&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#built-with&#34;&gt;Built With&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#benchmarks&#34;&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#acknowledgments&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- ABOUT THE PROJECT --&gt; &#xA;&lt;h2&gt;About The Project&lt;/h2&gt; &#xA;&lt;!-- [![FIO][product-screenshot]](https://github.com/iyyel/fio) --&gt; &#xA;&lt;p&gt;&lt;strong&gt;FIO&lt;/strong&gt; is a type-safe, highly concurrent and asynchronous library for F# that is based on principles from pure functional programming. It provides a construct known as the IO monad for handling expressions with side effects. It uses the concept of &#34;green threads&#34; also known as &#34;fibers&#34; to provide scalable and efficient concurrency.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;FIO&lt;/strong&gt; is an attempt at creating a similar environment to that of &lt;a href=&#34;https://zio.dev/&#34;&gt;ZIO&lt;/a&gt; for Scala. &lt;strong&gt;FIO&lt;/strong&gt; is both inspired by &lt;a href=&#34;https://zio.dev/&#34;&gt;ZIO&lt;/a&gt; and &lt;a href=&#34;https://typelevel.org/cats-effect/&#34;&gt;Cats Effect&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; &lt;strong&gt;FIO&lt;/strong&gt; is in early development stages and a lot of improvements and enhancements can be made. This README might be lackluster.&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Built With&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;FIO&lt;/strong&gt; is built using the following technologies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fsharp.org/&#34;&gt;F#&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6&#34;&gt;.NET 6.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;!-- GETTING STARTED --&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;It is easy to get started with &lt;strong&gt;FIO&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and install &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/6.0&#34;&gt;.NET 6.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download and install a compatible IDE such as &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio&lt;/a&gt; or &lt;a href=&#34;https://www.jetbrains.com/rider/download/&#34;&gt;Rider&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download or clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Open it in your IDE of choice&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the &lt;em&gt;Examples&lt;/em&gt; project and check out the example programs or create a new file to start using &lt;strong&gt;FIO&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Create a new class and import the library using &#34;open FSharp.FIO&#34;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;open FSharp.FIO&#xA;&#xA;[&amp;lt;EntryPoint&amp;gt;]&#xA;let main _ =&#xA;  let askForName =&#xA;    fio (fun () -&amp;gt; printfn &#34;%s&#34; &#34;Hello! What is your name?&#34;)&#xA;    &amp;gt;&amp;gt; fun _ -&amp;gt;&#xA;    fio (fun () -&amp;gt; Console.ReadLine())&#xA;    &amp;gt;&amp;gt; fun name -&amp;gt;&#xA;    fio (fun () -&amp;gt; printfn $&#34;Hello, %s{name}, welcome to FIO!&#34;)&#xA;&#xA;  let fiber = Advanced.Runtime().Run askForName&#xA;  let result = fiber.Await()&#xA;  printfn $&#34;%A{result}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains five benchmarks that each tests an aspect of concurrent computing. All benchmarks reside from the &lt;a href=&#34;http://soft.vub.ac.be/AGERE14/papers/ageresplash2014_submission_19.pdf&#34;&gt;Savina - An Actor Benchmark Suite&lt;/a&gt; paper.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pingpong (Message sending and retrieval)&lt;/li&gt; &#xA; &lt;li&gt;ThreadRing (Message sending and retrieval, context switching between fibers)&lt;/li&gt; &#xA; &lt;li&gt;Big (Contention on channel, many-to-many message passing)&lt;/li&gt; &#xA; &lt;li&gt;Bang (Many-to-one messaging)&lt;/li&gt; &#xA; &lt;li&gt;Spawn (Spawning time of fibers)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The benchmarks can be through the following command line options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPTIONS:&#xA;&#xA;    --naive-runtime       specify naive runtime. (specify only one runtime)&#xA;    --intermediate-runtime &amp;lt;evalworkercount&amp;gt; &amp;lt;blockingworkercount&amp;gt; &amp;lt;evalstepcount&amp;gt;&#xA;                          specify eval worker count, blocking worker count and eval step count for intermediate&#xA;                          runtime. (specify only one runtime)&#xA;    --advanced-runtime &amp;lt;evalworkercount&amp;gt; &amp;lt;blockingworkercount&amp;gt; &amp;lt;evalstepcount&amp;gt;&#xA;                          specify eval worker count, blocking worker count and eval step count for advanced runtime.&#xA;                          (specify only one runtime)&#xA;    --deadlocking-runtime &amp;lt;evalworkercount&amp;gt; &amp;lt;blockingworkercount&amp;gt; &amp;lt;evalstepcount&amp;gt;&#xA;                          specify eval worker count, blocking worker count and eval step count for deadlocking&#xA;                          runtime. (specify only one runtime)&#xA;    --runs &amp;lt;runs&amp;gt;         specify the number of runs for each benchmark.&#xA;    --process-increment &amp;lt;processcountinc&amp;gt; &amp;lt;inctimes&amp;gt;&#xA;                          specify the value of process count increment and how many times.&#xA;    --pingpong &amp;lt;roundcount&amp;gt;&#xA;                          specify round count for pingpong benchmark.&#xA;    --threadring &amp;lt;processcount&amp;gt; &amp;lt;roundcount&amp;gt;&#xA;                          specify process count and round count for threadring benchmark.&#xA;    --big &amp;lt;processcount&amp;gt; &amp;lt;roundcount&amp;gt;&#xA;                          specify process count and round count for big benchmark.&#xA;    --bang &amp;lt;processcount&amp;gt; &amp;lt;roundcount&amp;gt;&#xA;                          specify process count and round count for bang benchmark.&#xA;    --spawn &amp;lt;processcount&amp;gt;&#xA;                          specify process count for spawn benchmark.&#xA;    --help                display this list of options.           display this list of options.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, running 30 runs of each benchmark using the advanced runtime with 7 evaluation workers, 1 blocking worker and 15 evaluation steps would look as so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--advanced-runtime 7 1 15 --runs 30 --pingpong 120000 --threadring 2000 1 --big 500 1 --bang 3000 1 --spawn 3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, the &lt;strong&gt;FIO&lt;/strong&gt; project supports two conditional compilation options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;DETECT_DEADLOCK:&lt;/strong&gt; Enables a naive deadlock detecting thread that attempts to detect if a deadlock has occurred when running FIO programs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MONITOR:&lt;/strong&gt; Enables a monitoring thread that prints out data structure content during when running FIO programs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;!-- PERFORMANCE --&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Below the scalability of each interpreter can be seen for each benchmark. &lt;strong&gt;I&lt;/strong&gt; is denoting the intermediate runtime and &lt;strong&gt;A&lt;/strong&gt; the advanced. To give some insight into the interpreters, the naive interpreter uses operating system threads, the intermediate uses fibers with handling of blocked FIO programs in linear time, and the advanced uses fibers with constant time handling.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Threadring&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iyyel/fio/main/images/threadring_scalability_plot.png&#34; width=&#34;auto&#34; height=&#34;500&#34; alt=&#34;Threadring scalability plot&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Big&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iyyel/fio/main/images/big_scalability_plot.png&#34; width=&#34;auto&#34; height=&#34;500&#34; alt=&#34;Threadring scalability plot&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bang&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iyyel/fio/main/images/bang_scalability_plot.png&#34; width=&#34;auto&#34; height=&#34;500&#34; alt=&#34;Threadring scalability plot&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spawn&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/iyyel/fio/main/images/spawn_scalability_plot.png&#34; width=&#34;auto&#34; height=&#34;500&#34; alt=&#34;Threadring scalability plot&#34;&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;!-- LICENSE --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the GNU General Public License v3.0. See &lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;!-- CONTACT --&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Daniel Larsen (iyyel) - &lt;a href=&#34;https://iyyel.io&#34;&gt;iyyel.io&lt;/a&gt; - &lt;a href=&#34;mailto:mail@iyyel.io&#34;&gt;mail@iyyel.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;!-- ACKNOWLEDGMENTS --&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alceste Scalas - &lt;a href=&#34;https://people.compute.dtu.dk/alcsc/&#34;&gt;alcsc&lt;/a&gt; - &lt;a href=&#34;https://github.com/alcestes&#34;&gt;github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/iyyel/fio/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; &#xA;&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt; &#xA;&lt;!-- [linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&amp;logo=linkedin&amp;colorB=555&#xA;[linkedin-url]: https://linkedin.com/in/ &#xA;[product-screenshot]: images/main_menu.png&#xA;--&gt;</summary>
  </entry>
</feed>