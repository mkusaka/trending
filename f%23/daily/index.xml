<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-15T01:32:15Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Lee-WonJun/LolChatLang</title>
    <updated>2022-12-15T01:32:15Z</updated>
    <id>tag:github.com,2022-12-15:/Lee-WonJun/LolChatLang</id>
    <link href="https://github.com/Lee-WonJun/LolChatLang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;롤채팅식 프로그래밍 언어 [롤챙]&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LolChatLang&lt;/h1&gt; &#xA;&lt;p&gt;LolChatLang (LOLCHatlANG / 롤챙 으로 발음) 은 정수 계산에 딱히 최적화 되지 않은 프로그래밍 언어로 친숙한 자연어 구문을 이용하여 프로그램을 작성 할 수 있습니다.&lt;/p&gt; &#xA;&lt;h1&gt;Spec&lt;/h1&gt; &#xA;&lt;h2&gt;Value&lt;/h2&gt; &#xA;&lt;p&gt;Value 의 경우 정수형 자료형만 사용 가능합니다&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Namespace / Variable / Properties&lt;/h2&gt; &#xA;&lt;h3&gt;Namespace / Variable&lt;/h3&gt; &#xA;&lt;p&gt;사용자 정의 변수가 없이, 지정된 변수만 사용할 수 있습니다.&lt;/p&gt; &#xA;&lt;p&gt;X::Y::Z 형식으로 구조화된 변수와 특수변수 시발이 있습니다.&lt;/p&gt; &#xA;&lt;p&gt;X::Y::Z 구성은 다음과같습니다.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;X = 우리, 상대&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Y = 탑,정글, 미드, 서폿, 봇&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Z = 딜량, CS, 레벨, 킬, 데스, 어시&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;X::Y::Z 변수를 사용하기위해서는 space 로 분리하여 사용합니다&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;우리 탑 딜량&lt;/code&gt;, &lt;code&gt;상대 미드 어시&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;모든 변수는 기본값 0을 가지고있습니다.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Print&lt;/h3&gt; &#xA;&lt;p&gt;변수 출력은 &lt;code&gt;보소&lt;/code&gt; 또는 &lt;code&gt;봐라&lt;/code&gt; 구문을 이용하여 출력합니다.&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;우리 탑 딜량 봐라&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Properties&lt;/h3&gt; &#xA;&lt;p&gt;값 할당은 불가능 하지만 조건문 혹은 출력을 위한 Properties 가 존재합니다&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;다해도&lt;/code&gt; 는 &lt;code&gt;{X} {Z} 다해도&lt;/code&gt; 구문으로 모든 Y 에 대한 합을 반환합니다.&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;우리 딜량 다해도&lt;/code&gt; - 우리::Y:딜량 을 전부 더한 값&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;차이&lt;/code&gt; 는 &lt;code&gt;{X::Y::Z}차이&lt;/code&gt; 구문으로 {X::Y::Z} - {다른X::Y::Z} 값을 반환합니다&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;우리 정글 딜량차이&lt;/code&gt; : 우리::정글::딜량 - 상대::정글::딜량&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;상대 정글 딜량차이&lt;/code&gt; : 상대::정글::딜량 - 우리::정글::딜량&lt;/p&gt; &#xA;&lt;h3&gt;Operator&lt;/h3&gt; &#xA;&lt;p&gt;오직 {X::Y::데스} 변수에 대하여 1을 더하는 연산자만 가능합니다.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;{X::Y} 솔킬 따이네&lt;/code&gt; 로 {X::Y::데스} 값을 1 상승시킵니다.&lt;/p&gt; &#xA;&lt;p&gt;음수 값에 대한 Operator 를 사용하고 싶은 경우, &lt;code&gt;솔킬 따이네&lt;/code&gt; 연산으로 더하기 1을 얻고 이에 대한 &lt;code&gt;차이&lt;/code&gt; 프로퍼티를 사용하여야 합니다&lt;/p&gt; &#xA;&lt;p&gt;예)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;우리 탑 솔킬 따이네&#xA;근데 진짜 우리 탑 데스차이 1 실화냐?&#xA; 답이없네&#xA;근데 진짜 상대 탑 데스차이 -1 실화냐?&#xA; 답이없네&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;초기화&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;실화냐?&lt;/code&gt; 구문을 이용하여 변수를 초기화 합니다&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;{varialbe} {value} 실화냐?&lt;/code&gt; 로 초기화 합니다&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;우리 정글 딜량 15 실화냐?&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;단 특수 변수 &lt;code&gt;시발&lt;/code&gt;은 아래와 같이 초기화 합니다&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;{variable|properties} 시발&lt;/code&gt; : 시발의 값을 {variable} 또는 {properties} 과 동일한 값으로 초기화 합니다&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;우리 탑 딜량 시발&lt;/code&gt;, &lt;code&gt;우리 데스 다해도 시발&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;반환&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;{variable} 니네는 지는게 맞다&lt;/code&gt; 구문으로 &lt;code&gt;{variable}&lt;/code&gt; 값을 최종적으로 반환합니다.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;시발&lt;/code&gt; 변수를 사용하는것을 추천합니다&lt;/p&gt; &#xA;&lt;p&gt;예)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;우리 정글 딜량 시발&#xA;시발 니네는 지는게 맞다&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;조건문&lt;/h1&gt; &#xA;&lt;p&gt;조건문을 위한 구문은 아래와 같습니다&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;근데 진짜 {variable|properties} {value} 실화냐?&lt;/code&gt; : IF 문의 시작입니다. {variable|properties} == {value} 인 경우 Body 가 실행됩니다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;근데 아니 {variable|properties} {value} 실화냐?&lt;/code&gt; : IF not 문의 시작입니다. {variable|properties} != {value} 인 경우 Body 가 실행됩니다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;아니 근데 {variable|properties} {value} 실화냐?&lt;/code&gt; : IF not 문의 시작입니다. {variable|properties} != {value} 인 경우 Body 가 실행됩니다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;답이 없네&lt;/code&gt; : BREAK 문으로 조건문을 빠저나갑니다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;조건문을 사용하게되면 해당 조건문에 해당하는 식은 Depth가 한단계 늘어납니다. Depth 는 스페이스바로 구분합니다.&lt;/p&gt; &#xA;&lt;p&gt;예)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;근데 진짜 우리 정글 딜량 15 실화냐?&#xA; 상대 미드 정글 딜량 5 실화냐?&#xA; 답이없네&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flow Control&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ㅅㄱ 던짐 {line} 서렌 ㄱㄱ&lt;/code&gt; 구문을 통하여 해당 line 가는 GOTO 문을 지원합니다.&lt;/p&gt; &#xA;&lt;p&gt;제약 조건으로는 {line} 번째 의 Line 의 경우 Depth 가 0 이어 야 합니다. 또한 line 은 0번 부터 시작합니다&lt;/p&gt; &#xA;&lt;p&gt;예) &lt;code&gt;ㅅㄱ 던짐 7 서렌 ㄱㄱ&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Spcial Form 으로 18/28 번째 라인으로 가는 GOTO 문은 아래와 같이 작성할수있습니다&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;18 년아 라인 쳐 가라고&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;28 년아 라인 쳐 가라고&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;반복문이 지원되지 않지만, GOTO 문으로 반복문을 구현 할 수 있습니다.&lt;/p&gt; &#xA;&lt;h2&gt;Reflection&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;@ㅐ미&lt;/code&gt; &lt;code&gt;@ㅐ비&lt;/code&gt; 구문을 통한 리플렉션 기능을 지원합니다.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;@ㅐ미 {variable}&lt;/code&gt; : {variable} 에 대한 {X::Y::Z} 값을 출력합니다&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;@ㅐ비 {variable}&lt;/code&gt; : {variable} 에 대한 값 변경 히스토리를 출력합니다&lt;/p&gt; &#xA;&lt;p&gt;예)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;상대 탑 데스 20 실화냐?&#xA;@ㅐ미 상대 탑 데스&#xA;@ㅐ비 상대 탑 데스&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;위 코드의 결과는 다음과 같습니다&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;상대::탑::데스&#34;&#xA;[20; 0]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;주석&lt;/h2&gt; &#xA;&lt;p&gt;주석 기능은 존재하지 않습니다.&lt;/p&gt; &#xA;&lt;p&gt;다만 인터프리터를 대충 만들어서 구문오류가 나면 그냥 아무것도 하지 않기때문에, 파싱안되는 모든 구문이 주석입니다.&lt;/p&gt; &#xA;&lt;p&gt;그냥 Line 을 따와서 수동 파싱했으므로 구문 뒤에 주석을 달수 없습니다.&lt;/p&gt; &#xA;&lt;p&gt;예)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;소환사의 협곡에 오신것을 환엽합니다&lt;/code&gt; 는 아무 구문으로도 파싱되지 않으므로 무시됩니다.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;아니 근데 우리 탑 데스 5 실화냐?&lt;/code&gt; 는 파싱이 되어 구문인식이 되지만 &lt;code&gt;아니 근데 우리 탑 데스 5 실화냐? // 검사&lt;/code&gt; 는 파싱 되지 않아 무시됩니다.&lt;/p&gt; &#xA;&lt;h2&gt;이디엄&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;파일 확장자는 &lt;code&gt;*.lol&lt;/code&gt; 를 추천합니다&lt;/li&gt; &#xA; &lt;li&gt;첫 라인은 &lt;code&gt;소환사의 협곡에 오신것을 환엽합니다&lt;/code&gt; 으로 작성하는것을 추천합니다&lt;/li&gt; &#xA; &lt;li&gt;마지막 라인은 &lt;code&gt;시발 니네는 지는게 맞다&lt;/code&gt; 로 작성하는것을 추천합니다&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;예시 코드 및 결과&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;소환사의 협곡에 오신것을 환엽합니다&#xA;&#xA;우리 미드 데스 1 실화냐?&#xA;우리 정글 데스 10 실화냐?&#xA;우리 탑 데스 1 실화냐?&#xA;상대 탑 데스 20 실화냐?&#xA;&#xA;아니 근데 우리 탑 데스 5 실화냐?&#xA; 우리 탑 솔킬 따이네&#xA; @ㅐ미 우리 탑 데스&#xA; 우리 탑 데스 보소&#xA; @ㅐ비 우리 탑 데스&#xA; ㅅㄱ 던짐 7 서렌 ㄱㄱ&#xA;&#xA;근데 진짜 우리 탑 데스차이 -15 실화냐?&#xA; @ㅐ미 상대 탑 데스&#xA; @ㅐ비 상대 탑 데스&#xA; 답이없네&#xA; @ㅐ미 상대 미드 데스&#xA;&#xA;&#xA;우리 미드 데스 보소&#xA;우리 정글 데스 보소&#xA;우리 탑 데스 보소&#xA;우리 데스 다해도 시발&#xA;시발 보소&#xA;시발 니네는 지는게 맞다&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;콘솔 출력&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;우리::탑::데스&#34;&#xA;2&#xA;[2; 1; 0]&#xA;&#34;우리::탑::데스&#34;&#xA;3&#xA;[3; 2; 1; 0]&#xA;&#34;우리::탑::데스&#34;&#xA;4&#xA;[4; 3; 2; 1; 0]&#xA;&#34;우리::탑::데스&#34;&#xA;5&#xA;[5; 4; 3; 2; 1; 0]&#xA;&#34;상대::탑::데스&#34;&#xA;[20; 0]&#xA;1&#xA;10&#xA;5&#xA;16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;프로그램 반환값 16&lt;/p&gt;</summary>
  </entry>
</feed>