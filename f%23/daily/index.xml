<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-23T01:39:20Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SilkyFowl/Avalonia.FuncUI.LiveView</title>
    <updated>2022-06-23T01:39:20Z</updated>
    <id>tag:github.com,2022-06-23:/SilkyFowl/Avalonia.FuncUI.LiveView</id>
    <link href="https://github.com/SilkyFowl/Avalonia.FuncUI.LiveView" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Live fs/fsx previewer for Avalonia.FuncUI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Avalonia.FuncUI.LiveView&lt;/h1&gt; &#xA;&lt;p&gt;Live fs/fsx previewer for Avalonia.FuncUI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/README.ja.md&#34;&gt;日本語(Javanese language)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is this ?&lt;/h2&gt; &#xA;&lt;p&gt;Avalonia.FuncUI.LiveView is an experimental FsAutoComplete extension that aims to provide a real-time preview of the UI of Avalonia.FuncUI. Analyzers.SDK, it displays a real-time preview of the content of the F# file you are editing in the editor. &lt;strong&gt;No need to save the file to update the preview.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; Avalonia.FuncUI.LiveView is incomplete. It has not been fully tested and is not intended for use in a production environment. Please use this tool at your own risk.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The following is a case of using VScode and Paket.&lt;/p&gt; &#xA;&lt;h3&gt;Preliminary Preparation&lt;/h3&gt; &#xA;&lt;h4&gt;Network&lt;/h4&gt; &#xA;&lt;p&gt;Use &lt;code&gt;localhost:8080&lt;/code&gt; for communication between Analyzer and LivePreview. Communication method will be improved in the future.&lt;/p&gt; &#xA;&lt;h4&gt;VScode&lt;/h4&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Ionide.Ionide-fsharp&#34;&gt;Ionide.Ionide-fsharp&lt;/a&gt; in VScode.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/github/img/README.ja/install-Ionide.Ionide-fsharp.png&#34; alt=&#34;install extension&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FuncUI Setup&lt;/h3&gt; &#xA;&lt;p&gt;Create a working directory and launch VScode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir YourFuncUIApp&#xA;code YourFuncUIApp/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install FuncUI template and create a project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet new -i JaggerJo.Avalonia.FuncUI.Templates&#xA;dotnet new funcUI.basic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set up Paket.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet new tool-manifest&#xA;dotnet tool install paket&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now create and edit the file as follows&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;paket.dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-paket.dependencies&#34;&gt;source https://api.nuget.org/v3/index.json&#xA;&#xA;storage: none&#xA;framework: net6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.vscode/launch.json&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;version&#34;: &#34;0.2.0&#34;,&#xA;    &#34;configurations&#34;: [&#xA;        {&#xA;            &#34;name&#34;: &#34;FunUI Launch&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/bin/Debug/net6.0/YourFuncUIApp.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false,&#xA;            &#34;linux&#34;: {&#xA;                &#34;env&#34;: {&#xA;                    &#34;LANG&#34;: &#34;en_US.UTF-8&#34;&#xA;                }&#xA;            }&#xA;        },&#xA;        {&#xA;            &#34;name&#34;: &#34;FuncUI Launch(Live Preview)&#34;,&#xA;            &#34;type&#34;: &#34;coreclr&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;preLaunchTask&#34;: &#34;build&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/bin/Debug/net6.0/YourFuncUIApp.dll&#34;,&#xA;            &#34;args&#34;: [],&#xA;            &#34;cwd&#34;: &#34;${workspaceFolder}&#34;,&#xA;            &#34;console&#34;: &#34;internalConsole&#34;,&#xA;            &#34;stopAtEntry&#34;: false,&#xA;            &#34;env&#34;: {&#xA;                &#34;FUNCUI_LIVEPREVIEW&#34;: &#34;1&#34;&#xA;            },&#xA;            &#34;linux&#34;: {&#xA;                &#34;env&#34;: {&#xA;                    &#34;LANG&#34;: &#34;en_US.UTF-8&#34;,&#xA;                    &#34;FUNCUI_LIVEPREVIEW&#34;: &#34;1&#34;&#xA;                }&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.vscode/tasks.json&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;version&#34;: &#34;2.0.0&#34;,&#xA;    &#34;tasks&#34;: [&#xA;        {&#xA;            &#34;type&#34;: &#34;msbuild&#34;,&#xA;            &#34;problemMatcher&#34;: [&#xA;                &#34;$msCompile&#34;&#xA;            ],&#xA;            &#34;group&#34;: &#34;build&#34;,&#xA;            &#34;label&#34;: &#34;build&#34;,&#xA;            &#34;detail&#34;: &#34;Build fsproj project using dotnet build&#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now start the debugger and make sure it works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/github/img/README.ja/First-Debug.png&#34; alt=&#34;First-Debug&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;When launched, proceed to the next step.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/github/img/README.ja/First-Debug-success.png&#34; alt=&#34;First-Debug-success&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FuncUI Analyzer setup&lt;/h3&gt; &#xA;&lt;p&gt;Run the following commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet paket convert-from-nuget --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When command is complete, edit as follows&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;paket.dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-paket.dependencies&#34;&gt;source https://api.nuget.org/v3/index.json&#xA;&#xA;storage: none&#xA;framework: net6.0&#xA;nuget Avalonia.Desktop &amp;gt;= 0.10.12&#xA;nuget Avalonia.Diagnostics &amp;gt;= 0.10.12&#xA;nuget FSharp.Core content: none&#xA;nuget JaggerJo.Avalonia.FuncUI &amp;gt;= 0.5.0&#xA;nuget JaggerJo.Avalonia.FuncUI.DSL &amp;gt;= 0.5.0&#xA;nuget JaggerJo.Avalonia.FuncUI.Elmish &amp;gt;= 0.5.0&#xA;nuget Avalonia.Angle.Windows.Natives &amp;lt;= 2.1.0.2020091801 // If you don&#39;t do this, it won&#39;t start in a Windows environment.&#xA;nuget SilkyFowl.Avalonia.FuncUI.LiveView&#xA;&#xA;// [ Analyzers Group ]&#xA;group Analyzers&#xA;    framework: net6.0&#xA;    source https://api.nuget.org/v3/index.json&#xA;    storage: storage&#xA;    nuget SilkyFowl.Avalonia.FuncUI.LiveView.Analyzer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;paket.references&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;--- a/paket.references&#xA;+++ b/paket.references&#xA;@@ -3,4 +3,5 @@ Avalonia.Diagnostics&#xA; JaggerJo.Avalonia.FuncUI&#xA; JaggerJo.Avalonia.FuncUI.DSL&#xA; JaggerJo.Avalonia.FuncUI.Elmish&#xA;-FSharp.Core&#xA;\ No newline at end of file&#xA;+FSharp.Core&#xA;+SilkyFowl.Avalonia.FuncUI.LiveView&#xA;\ No newline at end of file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then update paket with the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet paket update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add a configuration file here.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.vscode/settings.json&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;FSharp.enableAnalyzers&#34;: true,&#xA;    &#34;FSharp.analyzersPath&#34;: [&#xA;        &#34;packages/analyzers&#34;&#xA;    ],&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;FSharp.enableAnalyzers&lt;/code&gt; is true&lt;/li&gt; &#xA; &lt;li&gt;Analyzer Dll exists in &lt;code&gt;FSharp.analyzersPath&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With these conditions, editing &lt;strong&gt;the F# code recognized in the &lt;code&gt;Solution Explorer&lt;/code&gt; of Ionide for F#&lt;/strong&gt; will start the &lt;code&gt;FuncUi Analyzer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/github/img/README.ja/funcUi-analyzer.png&#34; alt=&#34;Active Analyzer&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; You can analyze &lt;code&gt;fsx&lt;/code&gt; scripts, etc. that are not recognized by the &lt;code&gt;Solution Explorer&lt;/code&gt;, but you cannot start the &lt;code&gt;FuncUi Analyzer&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/github/img/README.ja/fsx-in-explorer.png&#34; alt=&#34;fsx-in-explorer&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/github/img/README.ja/there-is-no-fsx-in-fs-explorer.png&#34; alt=&#34;there-is-no-fsx-in-fs-explorer&#34;&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;LivePreview Setup&lt;/h3&gt; &#xA;&lt;p&gt;Change the code as follows. Functions with the &lt;code&gt;[&amp;lt;LivePreview&amp;gt;]&lt;/code&gt; attribute are subject to LivePreview.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;diff --git a/Counter.fs b/Counter.fs&#xA;index efce7d1..9aea401 100644&#xA;--- a/Counter.fs&#xA;+++ b/Counter.fs&#xA;@@ -5,6 +5,7 @@ module Counter =&#xA;     open Avalonia.FuncUI&#xA;     open Avalonia.FuncUI.DSL&#xA;     open Avalonia.Layout&#xA;+    open Avalonia.FuncUI.LiveView.Core.Types&#xA;&#xA;     let view =&#xA;         Component(fun ctx -&amp;gt;&#xA;@@ -46,3 +47,13 @@ module Counter =&#xA;                 ]&#xA;             ]&#xA;         )&#xA;+&#xA;+    [&amp;lt;LivePreview&amp;gt;]&#xA;+    let preview() =&#xA;+          DockPanel.create [&#xA;+            DockPanel.children [&#xA;+                TextBlock.create [&#xA;+                    TextBlock.text &#34;live preview!!&#34;&#xA;+                ]&#xA;+            ]&#xA;+          ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enables the &lt;code&gt;LiveViewWindow&lt;/code&gt; to be activated. In this case, LiveView is enabled when the environment variable &lt;code&gt;FUNCUI_LIVEPREVIEW&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;diff --git a/Program.fs b/Program.fs&#xA;index 00ef90f..4d22a95 100644&#xA;--- a/Program.fs&#xA;+++ b/Program.fs&#xA;@@ -1,10 +1,24 @@&#xA; ﻿namespace YourFuncUIApp&#xA;&#xA;+open System&#xA;+&#xA; open Avalonia&#xA;+open Avalonia.Controls&#xA; open Avalonia.Controls.ApplicationLifetimes&#xA; open Avalonia.Input&#xA; open Avalonia.Themes.Fluent&#xA; open Avalonia.FuncUI.Hosts&#xA;+open Avalonia.FuncUI.LiveView&#xA;+&#xA;+module LiveView =&#xA;+    [&amp;lt;Literal&amp;gt;]&#xA;+    let FUNCUI_LIVEPREVIEW = &#34;FUNCUI_LIVEPREVIEW&#34;&#xA;+&#xA;+    let enabled =&#xA;+        match Environment.GetEnvironmentVariable FUNCUI_LIVEPREVIEW with&#xA;+        | null -&amp;gt; false&#xA;+        | &#34;1&#34; -&amp;gt; true&#xA;+        | _ -&amp;gt; false&#xA;&#xA; type MainWindow() as this =&#xA;     inherit HostWindow()&#xA;@@ -14,10 +28,10 @@ type MainWindow() as this =&#xA;         base.Height &amp;lt;- 400.0&#xA;         this.Content &amp;lt;- Counter.view&#xA;&#xA;-        //this.VisualRoot.VisualRoot.Renderer.DrawFps &amp;lt;- true&#xA;-        //this.VisualRoot.VisualRoot.Renderer.DrawDirtyRects &amp;lt;- true&#xA;+#if DEBUG&#xA;+        this.AttachDevTools()&#xA;+#endif&#xA;&#xA;-&#xA; type App() =&#xA;     inherit Application()&#xA;&#xA;@@ -27,7 +41,11 @@ type App() =&#xA;     override this.OnFrameworkInitializationCompleted() =&#xA;         match this.ApplicationLifetime with&#xA;         | :? IClassicDesktopStyleApplicationLifetime as desktopLifetime -&amp;gt;&#xA;-            desktopLifetime.MainWindow &amp;lt;- MainWindow()&#xA;+            desktopLifetime.MainWindow &amp;lt;-&#xA;+                if LiveView.enabled then&#xA;+                    LiveViewWindow() :&amp;gt; Window&#xA;+                else&#xA;+                    MainWindow()&#xA;         | _ -&amp;gt; ()&#xA;&#xA; module Program =&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Launch LivePreview&lt;/h3&gt; &#xA;&lt;h4&gt;When using debugger&lt;/h4&gt; &#xA;&lt;p&gt;Change the debugger setting to &lt;code&gt;FuncUI Launch(Live Preview)&lt;/code&gt; and start it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/16532218/174063805-0d8db77d-f408-4639-aced-d38a38145685.mp4&#34;&gt;Enjoy-It!!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;When not using debugger&lt;/h4&gt; &#xA;&lt;p&gt;Set environment variables.&lt;/p&gt; &#xA;&lt;p&gt;bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export FUNCUI_LIVEPREVIEW=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;cmd&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;set FUNCUI_LIVEPREVIEW=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;powershell&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$env:FUNCUI_LIVEPREVIEW = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Without the debugger, response to code changes is improved.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dotnet build -c Release&#xA;dotnet ./bin/Release/net6.0/PreviewApp.dll&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Known Issues, Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Write quickly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;If there is a DU in the file that consists entirely of valued case labels, it cannot be previewed&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/github/img/README.ja/cant-analyze-du.png&#34; alt=&#34;cant...&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;workaround&lt;/h3&gt; &#xA;&lt;h4&gt;Make it a DU that includes one or more cases with no value&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SilkyFowl/Avalonia.FuncUI.LiveView/master/github/img/README.ja/DU-with-any-no-value-case.png&#34; alt=&#34;DU-with-any-no-value-case&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;DU are defined in a separate file&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;// TypesDefinition.fs&#xA;module ElmishModule =&#xA;    type State = { watermark: string }&#xA;    let init = { watermark = &#34;&#34; }&#xA;&#xA;    type Msg =&#xA;        | SetWatermark of string&#xA;&#xA;    let update msg state =&#xA;        match msg with&#xA;        | SetWatermark test -&amp;gt; { state with watermark = test }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;// OtherFile.fs&#xA;open Sample.ElmishModule&#xA;&#xA;let view (state:State) dispatch =&#xA;&#xA;    StackPanel.create [&#xA;        StackPanel.spacing 10.0&#xA;        StackPanel.children [&#xA;            TextBox.create [&#xA;                TextBox.watermark state.watermark&#xA;                TextBox.horizontalAlignment HorizontalAlignment.Stretch&#xA;            ]&#xA;            Button.create [&#xA;                Button.background &#34;DarkBlue&#34;&#xA;                Button.content &#34;Set Watermark&#34;&#xA;                Button.onClick (fun _ -&amp;gt; SetWatermark &#34;test&#34; |&amp;gt; dispatch)&#xA;                Button.horizontalAlignment HorizontalAlignment.Stretch&#xA;            ]&#xA;&#xA;&#xA;            Button.create [&#xA;                Button.content &#34;Unset Watermark&#34;&#xA;                Button.onClick (fun _ -&amp;gt; SetWatermark &#34;&#34; |&amp;gt; dispatch)&#xA;                Button.horizontalAlignment HorizontalAlignment.Stretch&#xA;            ]&#xA;        ]&#xA;    ]&#xA;&#xA;&#xA;type Host() as this =&#xA;    inherit Hosts.HostControl()&#xA;&#xA;    do&#xA;        Elmish.Program.mkSimple (fun () -&amp;gt; init) update view&#xA;        |&amp;gt; Program.withHost this&#xA;        |&amp;gt; Elmish.Program.run&#xA;&#xA;[&amp;lt;LivePreview&amp;gt;]&#xA;let preview () = ViewBuilder.Create&amp;lt;Host&amp;gt; []&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;mechanism&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Write quickly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plan&lt;/h2&gt; &#xA;&lt;p&gt;-&amp;gt; SilkyFowl/Avalonia.FuncUI.LiveView#4&lt;/p&gt;</summary>
  </entry>
</feed>