<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-30T01:34:24Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dev-cycles/contextive</title>
    <updated>2023-06-30T01:34:24Z</updated>
    <id>tag:github.com,2023-06-30:/dev-cycles/contextive</id>
    <link href="https://github.com/dev-cycles/contextive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get on the same page.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Contextive&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dev-cycles/contextive/main/images/contextive_banner.png&#34; alt=&#34;Contextive Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dev-cycles/contextive/actions/workflows/contextive-vscode.yml&#34;&gt;&lt;img src=&#34;https://github.com/dev-cycles/contextive/actions/workflows/contextive-vscode.yml/badge.svg?sanitize=true&#34; alt=&#34;Contextive&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=contextive_tech&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/contextive_tech?label=Follow%20Contextive&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contextive is a suite of tools to immerse developers in the language of their users&#39; domains.&lt;/p&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;p&gt;Contextive is inspired by the concept of the &lt;a href=&#34;https://martinfowler.com/bliki/UbiquitousLanguage.html&#34;&gt;Ubiquitous Language&lt;/a&gt; from the practice of &lt;a href=&#34;https://martinfowler.com/bliki/DomainDrivenDesign.html&#34;&gt;Domain Driven Design (DDD)&lt;/a&gt; and is intended to support ubiquitous language management practices on DDD projects.&lt;/p&gt; &#xA;&lt;p&gt;Even if you&#39;re not using Domain Driven Design, Contextive should still be very helpful in any software project where it&#39;s important that developers are aligned on the meaning of terms.&lt;/p&gt; &#xA;&lt;p&gt;By defining terms in a central definitions file, Contextive can surface definitions and usage examples in auto-complete suggestions &amp;amp; hover panels wherever the terms are used - in code (of any language across the stack), comments, config, and documentation (e.g. markdown).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dev-cycles/contextive/main/src/vscode/contextive/images/simple-auto-complete-demo.gif&#34; alt=&#34;Example of Contextive in action.&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Proposed Features&lt;/h2&gt; &#xA;&lt;p&gt;The following list of features is a draft proposal of the vision at the start of the project. It&#39;s expected that the list will evolve as a prototype is developed and experimented with and lessons are learnt.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Ubiquitous Language Definition &amp;amp; Storage: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Classify terms as aggregates/entities, attributes, commands and events&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; For each term, include a definition, and examples of usage in normal sentences&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Link terms to each other (e.g. commands to the aggregates/entities they apply to; events to the aggregates/entities that publish them)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Store Ubiquitous Language term definitions in a file in the repository (e.g. yml format)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support a monorepo with multiple Bounded Contexts in one repo - identify which paths relate to each Bounded Context&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support a Bounded Context distributed across multiple repos (#36)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support aliases of terms, hovering over the alias shows the term definition &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add details of the alias in the hover&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add ability to define an alias as deprecated and warn as such&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; IDE Support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Visual Studio Code &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support single-root workspaces&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support multi-root workspaces with a shared definitions file&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support multi-root workspaces with a definitions file per root&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Visual Studio (2019/2022)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Eclipse&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; NetBeans&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; JetBrains&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; vim&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; emacs&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Code-editing Features &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Show the term definitions &amp;amp; usage examples when hovering over the word in the editor &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Also when the word being hovered over is plural of the defined singular term&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Also when the word being hovered over is singular of the defined plural term&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Also when the combined word being hovered over is contains singular or plural of a word in a defined multi-word term&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Ubiquitous Language terms to the auto-complete list&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Codelens to identify the number of Ubiquitous Language terms in a method or class&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Problems/warnings if misuse of the Ubiquitous Language - e.g. use of Command/Event and aggregate in the same class or method name when they are not linked, or use of extra words next to an Aggregate that &lt;em&gt;isn&#39;t&lt;/em&gt; defined&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; In relevant places (e.g. hover), note the use of the term in other contexts to highlight the contrast and ensure clarity of which definition applies in the current context (e.g. &#39;&lt;em&gt;THIS&lt;/em&gt; definition, &lt;em&gt;NOT&lt;/em&gt; that other definition that you might have been thinking of&#39;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Ubiquitous Language Management Features &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Go To term definition (right-click menu, keyboard shortcut)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; A UI widget to view the language terms in a TreeView and offer facilities for adding, updating &amp;amp; removing terms&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make it easy to add terms to the Ubiquitous Language from existing code e.g. by highlighting and using the right-click menu&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Ubiquitous Language Sharing Features &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Render definitions into a human readable format - e.g. html, markdown etc.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Sync definitions into a cloud storage, e.g. Notion database, or confluence page&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Above features might be well packaged as a CLI as well as extension features, for running in CI/CD&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Visual Studio Code&lt;/h3&gt; &#xA;&lt;p&gt;Open Visual Studio Code, launch the quick open (&lt;code&gt;Ctrl+P&lt;/code&gt;) and then enter &lt;code&gt;ext install devcycles.contextive&lt;/code&gt;. OR, search &lt;code&gt;contextive&lt;/code&gt; in the extensions side-bar.&lt;/p&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=devcycles.contextive&#34;&gt;Contextive Marketplace&lt;/a&gt; page for details.&lt;/p&gt; &#xA;&lt;p&gt;Check the extension &lt;a href=&#34;https://raw.githubusercontent.com/dev-cycles/contextive/main/src/vscode/contextive/README.md&#34;&gt;README&lt;/a&gt; for usage instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Others&lt;/h3&gt; &#xA;&lt;p&gt;Coming soon!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you have ideas for features or implementation, please open an issue to record your thoughts.&lt;/p&gt; &#xA;&lt;p&gt;PRs welcome, but as things are evolving rapidly, a conversation before any major changes is probably worthwhile.&lt;/p&gt; &#xA;&lt;p&gt;Key architectural decisions are tracked using ADRs (Architectural Decision Records) which can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/dev-cycles/contextive/main/docs/adr&#34;&gt;docs/adr&lt;/a&gt; folder. The &lt;a href=&#34;https://adr.github.io/madr/&#34;&gt;MADR&lt;/a&gt; format is the current default.&lt;/p&gt; &#xA;&lt;p&gt;Development is being done using &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34;&gt;Visual Studio Code Dev Containers&lt;/a&gt;. After cloning the repository and opening in Visual Studio Code, choose the &#34;Reopen in Container&#34; option to work in the dev environment. See the Visual Studio Code documentation for more details on setting up your docker environment.&lt;/p&gt; &#xA;&lt;h2&gt;Logo&lt;/h2&gt; &#xA;&lt;p&gt;The Contextive logo is based (with extreme gratitude!) on the &lt;code&gt;Bibliophile&lt;/code&gt; image from &lt;a href=&#34;https://undraw.co&#34;&gt;https://undraw.co&lt;/a&gt; - an amazing resource of free images and illustrations.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fsharp/fsharp.github.io</title>
    <updated>2023-06-30T01:34:24Z</updated>
    <id>tag:github.com,2023-06-30:/fsharp/fsharp.github.io</id>
    <link href="https://github.com/fsharp/fsharp.github.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;F# Core Engineering Group&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;F# Core Engineering Group Web&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://fsharp.github.io&#34;&gt;http://fsharp.github.io&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>