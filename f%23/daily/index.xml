<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-04T01:34:31Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kaashyapan/Regx</title>
    <updated>2023-02-04T01:34:31Z</updated>
    <id>tag:github.com,2023-02-04:/kaashyapan/Regx</id>
    <link href="https://github.com/kaashyapan/Regx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Declarative Regex for humans&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Regx - Declarative Regex for humans&lt;/h1&gt; &#xA;&lt;h2&gt;F# DSL for Regex &lt;a href=&#34;https://www.nuget.org/packages/Regx&#34;&gt;nuget&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;#r &#34;nuget: Regx&#34;&#xA;open Regx&#xA;&#xA;// Compose a regex for url &#xA;&#xA;let protocol =&#xA;    group {&#xA;        capture {&#xA;            oneOf {&#xA;                verbatimString &#34;http&#34;&#xA;                verbatimString &#34;https&#34;&#xA;            }&#xA;        }&#xA;        verbatimString &#34;://&#34;&#xA;    }&#xA;&#xA;let subdomain =&#xA;    group {&#xA;        oneOrMore { wordChar }&#xA;        verbatimString &#34;.&#34;&#xA;    }&#xA;&#xA;let domain =&#xA;    group {&#xA;        captureAs &#34;domain&#34; { occursBetween 2 256 { wordChar } }&#xA;        verbatimString &#34;.&#34;&#xA;    }&#xA;&#xA;let ending = group { occursBetween 1 8 { wordChar } }&#xA;&#xA;let port =&#xA;    group {&#xA;        verbatimString &#34;:&#34;&#xA;        occursMoreThan 2 { digit }&#xA;    }&#xA;&#xA;let path =&#xA;    zeroOrMore {&#xA;        capture {&#xA;            verbatimString &#34;/&#34;&#xA;            oneOrMore { wordChar }&#xA;        }&#xA;    }&#xA;&#xA;let pattern =&#xA;    regex {&#xA;        mayHave { protocol }&#xA;        mayHave { subdomain }&#xA;        domain&#xA;        ending&#xA;        mayHave { port }&#xA;        path&#xA;    }&#xA;    |&amp;gt; Regx.make&#xA;&#xA;// Generates - (?:(http|https):\/\/)?(?:\w+\.)?(?:(?&amp;lt;domain&amp;gt;\w{2,256})\.)(?:\w{1,8})(?::\d{2,})?(\/\w+)*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples in tests&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;DSL&lt;/th&gt; &#xA;   &lt;th&gt;What it means&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;any&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dot - Matches any character except linebreaks. Equivalent to [^\n\r].&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;anyChar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Match any - A character set that can be used to match any character, including line breaks, without the dotall flag. Represents [\s\S]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;wordChar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches any word character (alphanumeric &amp;amp; underscore). Only matches low-ascii characters (no accented or non-roman characters). Equivalent to [A-Za-z0-9_]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;notWordChar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches any character that is not a word character (alphanumeric &amp;amp; underscore). Equivalent to [^A-Za-z0-9_]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;digit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches any digit character (0-9). Equivalent to [0-9].&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;notDigit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches any character that is not a digit character (0-9). Equivalent to [^0-9].&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;whiteSpace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches any whitespace character (spaces, tabs, line breaks).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;notWhiteSpace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches any character that is not a whitespace character (spaces, tabs, line breaks).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;charIn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Match any character in the set&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;charNotIn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Negate character set - Match any character that is not in the set.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;inRange&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches a character having a character code between the two specified characters inclusive.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;inList&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches characters in list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;beginsWith&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enclosed expression occurs in the beginning of the fragment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;endsWith&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enclosed expression occurs in the end of the fragment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;beginsWithString&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enclosed expression occurs in the beginning of the fragment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;endsWithString&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enclosed expression occurs in the end of the fragment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;wordBoundary&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches a word boundary position between a word character and non-word character or position (start / end of string).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;notWordBoundary&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches any position that is not a word boundary. This matches a position, not a character.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;mayHave&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches 0 or 1 of the enclosed fragment, effectively making it optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;fewest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Makes the enclosed fragment lazy, causing it to match as few characters as possible.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;longest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Makes the enclosed fragment Greedily, causing it to match as many characters as possible.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;oneOf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Acts like a boolean OR. Matches the expression before or after the&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;oneOrMore&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches 1 or more of the enclosed fragment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;zeroOrMore&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches 0 or more of the enclosed fragment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;occurs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches the exact quantity of the enclosed token.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;occursMoreThan&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches the specified quantity or more of the enclosed token.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;occursBetween&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matches a quantity of the enclosed toke in the specified range.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;between&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Match between an open and a closing tag- for balanced captures&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;capture&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Grouped capture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;captureAs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Named group capture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;group&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Non-capturing group&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;refGroupNo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;\1 - Numeric reference - Matches the results of a capture group.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;refGroupName&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;\k&#xA;    &lt;name&gt;&#xA;      - Group name reference - Matches the results of a named capture group.&#xA;    &lt;/name&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;positiveLookAhead&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;\d(?=px) - Matches a group after the main expression without including it in the result.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;negativeLookAhead&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;\d(?!px) - Specifies a group that can not match after the main expression (if it matches, the result is discarded).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;positiveLookBehind&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(?&amp;lt;=ABC) - Matches a group before the main expression without including it in the result.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;negativeLookBehind&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(?&amp;lt;!ABC) - Specifies a group that can not match before the main expression (if it matches, the result is discarded).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;verbatimString&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unescaped string literal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tab&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;lineFeed&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;verticalTab&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;formFeed&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;carriageReturn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;nullCharacter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Additional custom builders&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;DSL&lt;/th&gt; &#xA;   &lt;th&gt;What it means&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;word&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Represents an actual word. Equivalent to /(?:\w+)/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;email&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English email&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English url&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;guid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GUID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;UUID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ip4Address&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IPv4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ip6Address&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IPv6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ipAddress&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IPV4 or IPv6 (does not support embedded IPv4 address)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>