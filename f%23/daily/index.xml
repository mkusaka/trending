<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-02T01:24:47Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rdipardo/Fornax.Seo</title>
    <updated>2024-03-02T01:24:47Z</updated>
    <id>tag:github.com,2024-03-02:/rdipardo/Fornax.Seo</id>
    <link href="https://github.com/rdipardo/Fornax.Seo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A SEO meta tag generator for Fornax&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fornax.Seo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/Fornax.Seo&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Fornax.Seo?color=blueviolet&amp;amp;logo=nuget&#34; alt=&#34;Nuget version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rdipardo/Fornax.Seo/actions/workflows/nuget.yml&#34;&gt;&lt;img src=&#34;https://github.com/rdipardo/Fornax.Seo/actions/workflows/nuget.yml/badge.svg?sanitize=true&#34; alt=&#34;NuGet workflow status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rdipardo/Fornax.Seo/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/rdipardo/Fornax.Seo/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Test workflow status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A SEO meta tag generator for &lt;a href=&#34;https://ionide.io/Tools/fornax.html&#34;&gt;Fornax&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;enhance the search engine visibility of Fornax-generated websites with:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developers.google.com/search/docs/guides/intro-structured-data&#34;&gt;structured data&lt;/a&gt; in &lt;a href=&#34;https://json-ld.org&#34;&gt;JSON-LD&lt;/a&gt; format&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ogp.me&#34;&gt;OpenGraph&lt;/a&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags&lt;/li&gt; &#xA;   &lt;li&gt;personalized social media links&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;try to enforce some SEO best practises, e.g. requiring &lt;a href=&#34;https://stackoverflow.com/a/64830732&#34;&gt;absolute URLs&lt;/a&gt; to all content items&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The following requires &lt;code&gt;fornax&lt;/code&gt; &lt;a href=&#34;https://www.nuget.org/packages/Fornax&#34;&gt;0.15.1 or newer&lt;/a&gt;. Visit &lt;a href=&#34;https://github.com/rdipardo/Fornax.Seo/wiki/FAQ#faq&#34;&gt;the wiki&lt;/a&gt; to learn how to use this package with earlier &lt;code&gt;fornax&lt;/code&gt; versions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Change into a project directory and scaffold a new website&lt;/p&gt; &lt;pre&gt;&lt;code&gt;fornax new&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install and set up &lt;a href=&#34;https://fsprojects.github.io/Paket/index.html&#34;&gt;&lt;code&gt;paket&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dotnet tool install paket&#xA;dotnet paket init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure dependencies, e.g. at minimum:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# paket.dependencies&#xA;&#xA;source https://api.nuget.org/v3/index.json&#xA;framework: net8.0, netstandard2.0, netstandard2.1&#xA;generate_load_scripts: true&#xA;storage: none&#xA;&#xA;# . . .&#xA;nuget Fornax.Seo      &amp;gt;= 1.2.0  # pulls in the Fornax.Core package&#xA;nuget Markdig&#xA;#  . . .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the packages:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dotnet paket install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Provide the root domain of your website:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;// loaders/globalloader.fsx&#xA;#load @&#34;../.paket/load/net8.0/Fornax.Core.fsx&#34;&#xA;&#xA;type SiteInfo = {&#xA;    title: string&#xA;    /// The root domain of your website - must be an absolute URL&#xA;    baseUrl: string&#xA;    description: string&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add personal authorship details, e.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;// loaders/globalloader.fsx&#xA;#load @&#34;../.paket/load/net8.0/Fornax.Seo.fsx&#34;&#xA;&#xA;open Fornax.Seo&#xA;&#xA;let loader (projectRoot: string) (siteContent: SiteContents) =&#xA;    let siteInfo =&#xA;        { title = &#34;Sample Fornax blog&#34;&#xA;          baseUrl = &#34;http://example.com&#34;&#xA;          description = &#34;Just a simple blog&#34; }&#xA;&#xA;    let onTheWeb =&#xA;        [ &#34;linkedin.com/in/username&#34;&#xA;          &#34;github.com/username&#34;&#xA;          &#34;bitbucket.org/username&#34;&#xA;          &#34;facebook.com/username&#34; ]&#xA;&#xA;    let siteAuthor: ContentCreator =&#xA;        { Name = &#34;Moi-mÃªme&#34;&#xA;          Email = &#34;info@example.com&#34;&#xA;          SocialMedia = onTheWeb }&#xA;&#xA;    siteContent.Add(siteInfo)&#xA;    siteContent.Add(siteAuthor)&#xA;&#xA;    siteContent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Collect metadata from a content item (e.g., a blog posting)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;// generators/post.fsx&#xA;#load @&#34;../.paket/load/net8.0/Fornax.Seo.fsx&#34;&#xA;#load @&#34;layout.fsx&#34;&#xA;&#xA;open Html&#xA;open Fornax.Seo&#xA;&#xA;let generate&#39; (ctx: SiteContents) (page: string) =&#xA;    let siteInfo = ctx.TryGetValue&amp;lt;Globalloader.SiteInfo&amp;gt;()&#xA;    let siteName = siteInfo |&amp;gt; Option.map (fun si -&amp;gt; si.title)&#xA;&#xA;    let tagline =&#xA;        siteInfo&#xA;        |&amp;gt; Option.map (fun si -&amp;gt; si.description)&#xA;        |&amp;gt; Option.defaultValue &#34;&#34;&#xA;&#xA;    let siteAuthor =&#xA;        ctx.TryGetValue&amp;lt;ContentCreator&amp;gt;()&#xA;        |&amp;gt; Option.defaultValue ContentCreator.Default&#xA;&#xA;    let siteRoot =&#xA;        siteInfo&#xA;        |&amp;gt; Option.map (fun si -&amp;gt; si.baseUrl)&#xA;        |&amp;gt; Option.defaultValue ContentObject.Default.BaseUrl&#xA;&#xA;    let post =&#xA;        ctx.TryGetValues&amp;lt;Postloader.Post&amp;gt;()&#xA;        |&amp;gt; Option.defaultValue Seq.empty&#xA;        |&amp;gt; Seq.find (fun p -&amp;gt; p.file = page)&#xA;&#xA;    let postMeta: ContentObject =&#xA;        { Title = post.title&#xA;          BaseUrl = siteRoot&#xA;          Url = post.file.Replace(System.IO.Path.GetExtension post.file, &#34;.html&#34;)&#xA;          Description = tagline&#xA;          Author = { siteAuthor with Name = defaultArg post.author siteAuthor.Name }&#xA;          SiteName = siteName&#xA;          Headline = Some post.summary&#xA;          ObjectType = Some &#34;Blog&#34;&#xA;          ContentType = Some &#34;BlogPosting&#34;&#xA;          OpenGraphType = Some &#34;article&#34;&#xA;          Locale = Some &#34;en-us&#34;&#xA;          Published = post.published&#xA;          Modified = post.modified&#xA;          Tags = Some post.tags&#xA;          Meta =&#xA;              Some [ (&#34;Image&#34;, defaultArg post.image $&#34;{siteRoot}/images/avatar.jpg&#34;)&#xA;                     (&#34;Publisher&#34;, defaultArg siteName siteAuthor.Name) ] }&#xA;&#xA;    ctx.Add(postMeta)&#xA;    // . . .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Render SEO metadata in your page layout&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;// generators/layout.fsx&#xA;#load @&#34;../.paket/load/net8.0/Fornax.Seo.fsx&#34;&#xA;&#xA;open Html&#xA;open Fornax.Seo&#xA;&#xA;// . . .&#xA;&#xA;let layout (ctx: SiteContents) (active: string) (content: HtmlElement seq) =&#xA;    let siteAuthor =&#xA;        ctx.TryGetValue&amp;lt;ContentCreator&amp;gt;()&#xA;        |&amp;gt; Option.defaultValue ContentCreator.Default&#xA;&#xA;    let seoData =&#xA;        ctx.TryGetValues&amp;lt;ContentObject&amp;gt;()&#xA;        |&amp;gt; Option.defaultValue Seq.empty&#xA;&#xA;    let pageMeta =&#xA;        seoData&#xA;        |&amp;gt; Seq.tryFind (fun p -&amp;gt; p.Title.Contains(active))&#xA;        |&amp;gt; function&#xA;        | Some info -&amp;gt; info&#xA;        | _ -&amp;gt; { ContentObject.Default with Author = siteAuthor }&#xA;&#xA;    html [] [&#xA;        head [] [&#xA;            meta [ CharSet &#34;utf-8&#34; ]&#xA;            meta [ Name &#34;viewport&#34;; Content &#34;width=device-width, initial-scale=1&#34; ]&#xA;            // . . .&#xA;            yield! seo pageMeta&#xA;        ]&#xA;        body [] [&#xA;            // . . .&#xA;            footer [] [ yield! socialMedia siteAuthor ]&#xA;        ]&#xA;    ]&#xA;&#xA;    // . . .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Similar NuGet libraries (by framework)&lt;/h2&gt; &#xA;&lt;h3&gt;.NET&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linked-data-dotnet/json-ld.net&#34;&gt;json-ld.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ghorsey.github.io/OpenGraph-Net&#34;&gt;OpenGraph-Net&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ASP.NET&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wintoncode/Winton.AspNetCore.Seo&#34;&gt;Winton.AspNetCore.Seo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Definux/Seo&#34;&gt;Definux.Seo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://umbraco.com&#34;&gt;Umbraco&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/Wavenet.Umbraco8.Seo&#34;&gt;Wavenet.Umbraco8.Seo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;A guide to building the project and making pull requests can be found &lt;a href=&#34;https://github.com/rdipardo/Fornax.Seo/raw/main/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the terms of the &lt;a href=&#34;https://github.com/rdipardo/Fornax.Seo/raw/main/LICENSE&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>