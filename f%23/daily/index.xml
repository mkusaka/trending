<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-30T01:34:28Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>davedawkins/sutil-oxide</title>
    <updated>2022-12-30T01:34:28Z</updated>
    <id>tag:github.com,2022-12-30:/davedawkins/sutil-oxide</id>
    <link href="https://github.com/davedawkins/sutil-oxide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A toolkit for building IDE-style web applications, using Sutil.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sutil Oxide&lt;/h1&gt; &#xA;&lt;p&gt;A toolkit for building IDE-style web applications, using &lt;a href=&#34;https://sutil.dev&#34;&gt;Sutil&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;The demo is best viewed on desktop, though it does try and be basically responsive.&lt;/p&gt; &#xA;&lt;p&gt;Click on the &lt;code&gt;Help&lt;/code&gt; button for details on how the &lt;a href=&#34;https://davedawkins.github.io/sutil-oxide/&#34;&gt;demo&lt;/a&gt; works. Repository located at &lt;a href=&#34;https://github.com/davedawkins/sutil-oxide&#34;&gt;https://github.com/davedawkins/sutil-oxide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;My own projects frequently need a UI toolkit, and my latest project needed dockable windows. Sutil Oxide is intended to be where I develop any reusable UI code and components.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Very much still in development. My focus is on the main project that consumes this toolkit, and so I add functionality, make fixes etc as and when I need to according to the needs of that driving project. In fact, mostly I&#39;m refactoring out of the main project into this toolkit.&lt;/p&gt; &#xA;&lt;p&gt;The main reason you&#39;re seeing it at this early stage is that I wanted to contribute to the F# Advent, and a couple of people I&#39;d already shown it to thought it was cool in its own right.&lt;/p&gt; &#xA;&lt;p&gt;You will find many niggles and annoyances, but nonetheless I&#39;ve found it valuable for getting my main project off the ground. I can more easily focus on the business logic and then categorise issues as either being UI/presentation or application based. It&#39;s a useful separation.&lt;/p&gt; &#xA;&lt;h2&gt;Scope&lt;/h2&gt; &#xA;&lt;p&gt;Any reusable UI component that might be generally useful for other Sutil projects. It may be possible to wrap as &lt;code&gt;web components&lt;/code&gt;, such that non-Sutil projects can use this toolkit.&lt;/p&gt; &#xA;&lt;p&gt;##&amp;nbsp;Features&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;9 docking locations&lt;/li&gt; &#xA; &lt;li&gt;Resizable panes&lt;/li&gt; &#xA; &lt;li&gt;Drag and drop pane&#39;s tab to relocate panes&lt;/li&gt; &#xA; &lt;li&gt;Also relocate panes with &#34;cog&#34; drop-down menu&lt;/li&gt; &#xA; &lt;li&gt;Minimize pane with &#34;-&#34; button or click on tab&lt;/li&gt; &#xA; &lt;li&gt;Theming support&lt;/li&gt; &#xA; &lt;li&gt;Functionally reactive thanks to &lt;a href=&#34;https://sutil.dev&#34;&gt;Sutil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Toolbar&lt;/li&gt; &#xA; &lt;li&gt;Statusbar&lt;/li&gt; &#xA; &lt;li&gt;File Explorer (and basic IFileSystem interface with LocalStorage implementation)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No drag &lt;em&gt;to&lt;/em&gt; centre pane. Use &#34;cog&#34; menu to send panes to centre&lt;/li&gt; &#xA; &lt;li&gt;Submenu placement janky, would prefer a CSS-only solution but may have to resort to code&lt;/li&gt; &#xA; &lt;li&gt;No persistence of layout&lt;/li&gt; &#xA; &lt;li&gt;Very basic mobile support, currently best experience desktop&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docking Layout&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;+-----------------------------+---------------------------+&#xA;| TopLeft                     |                  TopRight |&#xA;+------------+----------------+-------------+-------------+&#xA;| LeftTop    |                              |    RightTop |&#xA;|            |          CentreCentre        |             |&#xA;|            |                              |             |&#xA;+------------+                              +-------------+&#xA;| LeftBottom |                              | RightBottom |&#xA;|            |                              |             |&#xA;|            |                              |             |&#xA;+------------+----------------+-------------+-------------+&#xA;| BottomLeft                  |               BottomRight |&#xA;+-----------------------------+---------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Creating a Dock Layout&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;src/App/App.fs&lt;/code&gt; for a full example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;    open SutilOxide&#xA;    open SutilOxide.Dock&#xA;    open SutilOxide.Types&#xA;&#xA;    let initPanes (dc : DockContainer) =&#xA;        dc.AddPane( &#34;Test&#34;, LeftTop, Html.div &#34;This is the Test pane&#34; )&#xA;        dc.AddPane( &#34;Main&#34;, CentreCentre, Html.div &#34;This is the Main pane&#34; )&#xA;&#xA;&#xA;    let mainView() =&#xA;        Html.div [&#xA;            Attr.className &#34;main-container&#34;&#xA;            DockContainer.Create initPanes&#xA;        ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Top-level Styling&lt;/h2&gt; &#xA;&lt;p&gt;A suggested style for &lt;code&gt;div.main-container&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;    .dock-container {&#xA;        /* Occupy all of browser viewport */&#xA;        height: 100vh;&#xA;        width: 100vw;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can either use a regular &lt;code&gt;main.css&lt;/code&gt; file for this, or apply the style within Sutil:&lt;/p&gt; &#xA;&lt;p&gt;Using inline styles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;&#xA;    open type Feliz.length&#xA;&#xA;    // 1. Apply style inline&#xA;&#xA;    let mainView() =&#xA;        Html.div [&#xA;            Attr.style [&#xA;                Css.width (vw 100)&#xA;                Css.height (vh 100)&#xA;            ]&#xA;            DockContainer.Create initPanes&#xA;        ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using &lt;code&gt;withStyle&lt;/code&gt; to apply a private stylesheet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;    open Sutil.Style&#xA;    open type Feliz.length&#xA;&#xA;    let mainStyle = [&#xA;        rule &#34;.main-container&#34; [&#xA;            Css.width (vw 100)&#xA;            Css.height (vh 100)&#xA;        ]&#xA;    ]&#xA;&#xA;    let mainView() =&#xA;        Html.div [&#xA;            Attr.className &#34;main-container&#34;&#xA;            DockContainer.Create initPanes&#xA;        ] |&amp;gt; withStyle mainStyle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you plan to add a toolbar or a statusbar then you may want to make the top-level div into a &lt;code&gt;flex column&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;    open Sutil.Style&#xA;    open type Feliz.length&#xA;&#xA;    let mainStyle = [&#xA;        rule &#34;.main-container&#34; [&#xA;            Css.width (vw 100)&#xA;            Css.height (vh 100)&#xA;            Css.displayFlex&#xA;            Css.flexDirectionColumn&#xA;        ]&#xA;    ]&#xA;&#xA;    let mainView() =&#xA;        Html.div [&#xA;            Attr.className &#34;main-container&#34;&#xA;            DockContainer.Create initPanes&#xA;        ] |&amp;gt; withStyle mainStyle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adding Panes&lt;/h2&gt; &#xA;&lt;p&gt;Method &lt;code&gt;AddPane&lt;/code&gt; takes the following arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;    member _.AddPane (name : string, initLoc : DockLocation, content : SutilElement )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Name of pane, as a &lt;code&gt;string&lt;/code&gt;. This should be unique, and will also be the default label shown in the pane header&lt;/li&gt; &#xA; &lt;li&gt;Initial location of pane, as a &lt;code&gt;DockLocation&lt;/code&gt; (see below)&lt;/li&gt; &#xA; &lt;li&gt;Pane content, as a &lt;code&gt;SutilElement&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Another overload of &lt;code&gt;AddPane&lt;/code&gt; will allow the header to be given as a &lt;code&gt;SutilElement&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;    member __.AddPane (name : string, initLoc : DockLocation, header : SutilElement, content : SutilElement, show : bool ) =&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parameters are as before, but with the addition of &lt;code&gt;show : bool&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Initial visibility of pane as a boolean&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Another overload of &lt;code&gt;AddPane&lt;/code&gt; will allow the header to be given as a &lt;code&gt;SutilElement&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;    member __.AddPane (name : string, initLoc : DockLocation, header : SutilElement, content : SutilElement, show : bool ) =&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parameters are as before, but with the addition of &lt;code&gt;header : SutilElement&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Content of header, as a &lt;code&gt;SutilElement&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Possible dock locations are defined by &lt;code&gt;DockLocation&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fs&#34;&gt;type DockLocation =&#xA;    | LeftTop&#xA;    | LeftBottom&#xA;    | BottomLeft&#xA;    | CentreCentre&#xA;    | BottomRight&#xA;    | RightTop&#xA;    | RightBottom&#xA;    | TopLeft&#xA;    | TopRight&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...more to come&lt;/p&gt;</summary>
  </entry>
</feed>