<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-23T01:32:22Z</updated>
  <subtitle>Daily Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tomcl/eepAssembler</title>
    <updated>2024-01-23T01:32:22Z</updated>
    <id>tag:github.com,2024-01-23:/tomcl/eepAssembler</id>
    <link href="https://github.com/tomcl/eepAssembler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple assembler for EEP1 CPU as taught at Imperial College 2022&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eepAssembler&lt;/h1&gt; &#xA;&lt;p&gt;A simple assembler for EEP1 CPU as taught at Imperial College 2023&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;This code is written by Tom Clarke with no guarantee as to its correctness: please e-mail me if you find errors&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use issues on this repo for feature requests&lt;/p&gt; &#xA;&lt;p&gt;The F# source is in &lt;code&gt;./src/Program.fs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;To run the assembler on any system (Windows/Macos/Linux)&lt;/h2&gt; &#xA;&lt;p&gt;Before you start:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and unzip the latest release source code or fork and clone this repo.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download&#34;&gt;.NET 64 bit SDK 8&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run the assembler on any system (see nicer option via Windows Powershell below):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;start a command line terminal running in this directory (the one containing the downloaded README file).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dotnet run dir&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;replace &lt;code&gt;dir&lt;/code&gt; by the directory you want to watch&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dotnet run&lt;/code&gt; will watch &lt;code&gt;.&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The downloaded &lt;code&gt;.&lt;/code&gt; directory has a file &lt;code&gt;assem.txt&lt;/code&gt; which will be correctly assembled into &lt;code&gt;assem.ram&lt;/code&gt; with a success message as below.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\GitHub\eepAssembler&amp;gt;dotnet run&#xA;Watching &#39;.&#39;&#xA;Successful assembly of &#39;.\assem.txt&#39;&#xA;7 lines written to &#39;.\assem.ram&#39;   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;On Windows systems only via Powershell&lt;/h3&gt; &#xA;&lt;p&gt;Double-click &lt;code&gt;chooser.bat&lt;/code&gt; from this directory to use file selection GUI - the whole directory of file selected will be watched.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The assembler will watch a directory and turn any &lt;code&gt;.txt&lt;/code&gt; file of EEP1 assembly language into a &lt;code&gt;.ram&lt;/code&gt; file of machine code suitable for use by Issie.&lt;/li&gt; &#xA; &lt;li&gt;If assembly errors exist they will be printed out&lt;/li&gt; &#xA; &lt;li&gt;Files that change will get re-assembled, so you can edit a file and save it with auto-assembly on save.&lt;/li&gt; &#xA; &lt;li&gt;Lines can be labelled (see &lt;code&gt;assembler.txt&lt;/code&gt;) and labels used in jump or memory instructions as Imm8 operands.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting your installation&lt;/h2&gt; &#xA;&lt;p&gt;Uptodate as of Feb 2023.&lt;/p&gt; &#xA;&lt;p&gt;If this program does not run it will likely be because you have the wrong version of dotnet installed. You need 64 bit 7 SDK. Check you have this as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run a commande prompt (Windows key-r -&amp;gt; cmd, or equiv on other systems)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dotnet --info&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should get something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\Users\tomcl&amp;gt;dotnet --info&#xA;.NET SDK:&#xA; Version:   7.0.101&#xA; Commit:    bb24aafa11&#xA;&#xA;Runtime Environment:&#xA; OS Name:     Windows&#xA; OS Version:  10.0.19044&#xA; OS Platform: Windows&#xA; RID:         win10-x64&#xA; Base Path:   C:\Program Files\dotnet\sdk\7.0.101\&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The important bits are: .NET SDK, Version: 7, RID xxxx-x64&lt;/p&gt; &#xA;&lt;p&gt;What can go wrong:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Even though you have installed 64 bit dotnet SDK, you have a previous 32 bit install that was done earlier and dotnet on a command line always finds that one - change your path&lt;/li&gt; &#xA; &lt;li&gt;You have dotnet 7 installed - but not the SDK&lt;/li&gt; &#xA; &lt;li&gt;You have dotnet 6 intsalled, but not dotnet 7&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For more insight&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run a command prompt in the eepassembler directory (then one containing chooser.bat).&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dotnet run&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check the messages tehre, e.g. which version, is tehre an error.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;To develop&lt;/h2&gt; &#xA;&lt;p&gt;On windows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;em&gt;Visual Studio 2022&lt;/em&gt; with F# desktop&lt;/li&gt; &#xA; &lt;li&gt;(if needed) install &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/visual-studio-sdks&#34;&gt;.NET SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;load &lt;code&gt;./eepassem.sln&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://intranet.ee.ic.ac.uk/t.clarke/hlp/install-notes.html&#34;&gt;HLP setup&lt;/a&gt; for more details of different dev environments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dawedawe/fsih</title>
    <updated>2024-01-23T01:32:22Z</updated>
    <id>tag:github.com,2024-01-23:/dawedawe/fsih</id>
    <link href="https://github.com/dawedawe/fsih" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fsih&lt;/h1&gt; &#xA;&lt;p&gt;Fsih provides you with the &lt;code&gt;h&lt;/code&gt; function, meant to be used in the F# REPL &lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/fsharp/tools/fsharp-interactive/&#34;&gt;fsi&lt;/a&gt;.&lt;br&gt; It&#39;s modeled after the &lt;code&gt;h&lt;/code&gt; function in the Elixir &lt;a href=&#34;https://hexdocs.pm/iex/1.16.0/IEx.html&#34;&gt;iex&lt;/a&gt; REPL.&lt;/p&gt; &#xA;&lt;p&gt;To use it, just start an fsi session with &lt;code&gt;dotnet fsi&lt;/code&gt;.&lt;br&gt; Load the package and open the namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;#r &#34;nuget: Fsih&#34;;;&#xA;open Fsih;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apply h to any expression to get its documentation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;h fst;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Description:&#xA;Return the first element of a tuple, fst (a,b) = a.&#xA;&#xA;Parameters:&#xA;- tuple: The input tuple.&#xA;Returns:&#xA;The first value.&#xA;&#xA;Examples:&#xA;fst (&#34;first&#34;, 2)  //  Evaluates to &#34;first&#34;&#xA;&#xA;Full name: Microsoft.FSharp.Core.Operators.fst&#xA;Assembly: FSharp.Core.dll&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>