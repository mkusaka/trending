<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-01T02:12:02Z</updated>
  <subtitle>Monthly Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>locaisolutions/LibPlcTag.FSharp</title>
    <updated>2023-04-01T02:12:02Z</updated>
    <id>tag:github.com,2023-04-01:/locaisolutions/LibPlcTag.FSharp</id>
    <link href="https://github.com/locaisolutions/LibPlcTag.FSharp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Thin F# wrapper around libplctag, the C library for PLC communication&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LibPlcTag.FSharp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;LibPlcTag.FSharp&lt;/strong&gt; is a thin F# wrapper around &lt;a href=&#34;https://github.com/libplctag/libplctag&#34;&gt;libplctag&lt;/a&gt;, the C library for PLC communication. It is designed to enable simple and efficient PLC communication from F#.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Event-driven&lt;/em&gt; - True asynchronous I/0 via independent &lt;a href=&#34;https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html&#34;&gt;MailboxProcessor&lt;/a&gt; instances&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Minimalist&lt;/em&gt; - Directly exposes much of the C API for maximum flexibility&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Plug and play&lt;/em&gt; - Define your own &lt;code&gt;TagMapper&lt;/code&gt; instances to control data marshalling behavior&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Coming soon...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Get it&lt;/h3&gt; &#xA;&lt;p&gt;.NET CLI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dotnet add package LibPlcTag.FSharp --version 1.0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Paket CLI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paket add LibPlcTag.FSharp --version 1.0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Help wanted&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation (using &lt;a href=&#34;https://fsprojects.github.io/FSharp.Formatting/&#34;&gt;FSharp.Formatting&lt;/a&gt;, see docs folder) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;examples&lt;/li&gt; &#xA;   &lt;li&gt;web hosting&lt;/li&gt; &#xA;   &lt;li&gt;logo (doesn&#39;t need to be fancy)&lt;/li&gt; &#xA;   &lt;li&gt;nuget package metadata&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Testing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ability to spin up multiple simulators at runtime for parallel test cases&lt;/li&gt; &#xA;   &lt;li&gt;building out the unit test suite&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Automation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;keep wrapper up to date with libplctag&lt;/li&gt; &#xA;   &lt;li&gt;build pipeline (with unit tests)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>