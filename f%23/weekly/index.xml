<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-07T01:53:22Z</updated>
  <subtitle>Weekly Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>waf/firebrand</title>
    <updated>2024-04-07T01:53:22Z</updated>
    <id>tag:github.com,2024-04-07:/waf/firebrand</id>
    <link href="https://github.com/waf/firebrand" rel="alternate"></link>
    <summary type="html">&lt;p&gt;F# IRC Library and Bot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;firebrand&lt;/h1&gt; &#xA;&lt;p&gt;F# IRC Library and Bot&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>plotly/Plotly.NET</title>
    <updated>2024-04-07T01:53:22Z</updated>
    <id>tag:github.com,2024-04-07:/plotly/Plotly.NET</id>
    <link href="https://github.com/plotly/Plotly.NET" rel="alternate"></link>
    <summary type="html">&lt;p&gt;interactive graphing library for .NET programming languages ðŸ“ˆ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/docs/img/logo_title.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plotly/Plotly.NET/actions/workflows/build-and-test.yml&#34;&gt;&lt;img src=&#34;https://github.com/plotly/Plotly.NET/actions/workflows/build-and-test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build and test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/packages/Plotly.NET/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Plotly.NET&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/k3kUtFY8DB&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/836161044501889064?color=purple&amp;amp;label=Join%20our%20Discord%21&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/supported%20plotly.js%20version-2.27.1-blue&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://doi.org/10.12688/f1000research.123971.1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/DOI-10.12688%2Ff1000research.123971.1-brightgreen&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Table of contents&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#what-is-plotlynet&#34;&gt;What is Plotly.NET?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#documentation&#34;&gt;Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#quick-starts&#34;&gt;Quick starts&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#f&#34;&gt;F#&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#c&#34;&gt;C#&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#samples-and-tutorials&#34;&gt;Samples and tutorials&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#full-library-reference&#34;&gt;Full library reference&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#development&#34;&gt;Development&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#build&#34;&gt;build&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#running-and-writing-tests&#34;&gt;running and writing tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#docs&#34;&gt;docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#library-license&#34;&gt;Library license&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What is Plotly.NET?&lt;/h1&gt; &#xA;&lt;p&gt;Plotly.NET is an Interactive charting library for &lt;strong&gt;.NET&lt;/strong&gt; programming languages ðŸ“ˆðŸš€.&lt;/p&gt; &#xA;&lt;p&gt;It is built on top of plotly.js and provides several API layers for creating, styling and rendering âœ¨&lt;strong&gt;beautiful data visualizations&lt;/strong&gt;âœ¨.&lt;/p&gt; &#xA;&lt;p&gt;To get a deep-dive into the rationale behind the design choices of Plotly.NET, check out our &lt;a href=&#34;https://doi.org/10.12688/f1000research.123971.1&#34;&gt;F1000Research paper&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/docs/img/showcase.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In short, Plotly.NET consists of multiple API layers and packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Plotly.NET&lt;/code&gt; - The core API is written in F# and provides multiple API layers to create and style charts - from the high-level, type-safe &lt;code&gt;Chart&lt;/code&gt; API to low-level direct chart object manipulation. It is the foundation for all other packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Plotly.NET.Interactive&lt;/code&gt; - This package provides interactive formatting extensions for .NET interactive notebooks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Plotly.NET.ImageExport&lt;/code&gt; - This package provides extensions for Plotly.NET to render charts as static images programmatically.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Plotly.NET.CSharp&lt;/code&gt; - This package provides an idiomatic C# API. Note that you can use the core API in C#, this package just removes some friction at some places.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;You can get all Plotly.NET packages via nuget:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package Name&lt;/th&gt; &#xA;   &lt;th&gt;Nuget&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Plotly.NET&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Plotly.NET/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Plotly.NET&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Plotly.NET.Interactive&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Plotly.NET.Interactive/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Plotly.NET.Interactive&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Plotly.NET.ImageExport&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Plotly.NET.ImageExport/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Plotly.NET.ImageExport&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Plotly.NET.CSharp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nuget.org/packages/Plotly.NET.CSharp/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Plotly.NET.CSharp&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;h2&gt;Quick starts&lt;/h2&gt; &#xA;&lt;h3&gt;F#&lt;/h3&gt; &#xA;&lt;p&gt;In F# projects, just add the &lt;code&gt;Plotly.NET&lt;/code&gt; package to your project and you are ready to go!&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸ“– Polyglot Notebook ðŸ“– Quick start&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;To enable Plotly.NET in a polyglot notebook, reference the &lt;code&gt;Plotly.NET.Interactive&lt;/code&gt; package:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;#r &#34;nuget: Plotly.NET.Interactive&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To display a chart, just end a F# cell with it:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;open Plotly.NET&#xA;&#xA;Chart.Point(&#xA;    x = [0 .. 10],&#xA;    y = [0 .. 10]&#xA;)&#xA;|&amp;gt; Chart.withTitle &#34;Hello World!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/docs/img/notebook_quickstart_fsharp.png&#34; alt=&#34;notebook quichstart in F#&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; .fsx Scripting quickstart&lt;/summary&gt; &#xA; &lt;p&gt;To enable Plotly.NET in a .fsx script, reference the &lt;code&gt;Plotly.NET&lt;/code&gt; package:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;#r &#34;nuget: Plotly.NET&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To display a chart in your browser, use the &lt;code&gt;Chart.show&lt;/code&gt; function:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-fsharp&#34;&gt;open Plotly.NET&#xA;&#xA;Chart.Point(&#xA;    x = [0 .. 10],&#xA;    y = [0 .. 10]&#xA;)&#xA;|&amp;gt; Chart.withTitle &#34;Hello World!&#34;&#xA;|&amp;gt; Chart.show&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;C#&lt;/h3&gt; &#xA;&lt;p&gt;In C# projects, just add the &lt;code&gt;Plotly.NET.CSharp&lt;/code&gt; package to your project and you are ready to go!&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸ“– Polyglot Notebook ðŸ“– Quick start&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;To enable Plotly.NET in a polyglot notebook for C#, reference the &lt;code&gt;Plotly.NET.Interactive&lt;/code&gt; and &lt;code&gt;Plotly.NET.CSharp&lt;/code&gt; packages:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;#r &#34;nuget: Plotly.NET.Interactive&#34;&#xA;#r &#34;nuget: Plotly.NET.CSharp&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To display a chart, just end a C# cell with it:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;using Plotly.NET.CSharp;&#xA;&#xA;Chart.Point&amp;lt;int, int, string&amp;gt;(&#xA;    x: Enumerable.Range(0,11),&#xA;    y: Enumerable.Range(0,11)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/docs/img/notebook_quickstart_csharp.png&#34; alt=&#34;notebook quichstart in C#&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Samples and tutorials&lt;/h2&gt; &#xA;&lt;p&gt;You can find extensive documentation with samples and tutorials of the core &lt;code&gt;Plotly.NET&lt;/code&gt; library &lt;a href=&#34;http://plotly.github.io/Plotly.NET/&#34;&gt;ðŸ“– here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Full library reference&lt;/h2&gt; &#xA;&lt;p&gt;The API reference for all packages is available &lt;a href=&#34;http://plotly.github.io/Plotly.NET/reference/index.html&#34;&gt;ðŸ“š here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The documentation for this library is automatically generated (using FSharp.Formatting) from *.fsx and *.md files in the docs folder. If you find a typo, please submit a pull request!&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; The &lt;code&gt;release&lt;/code&gt; and &lt;code&gt;prerelease&lt;/code&gt; build targets assume that there is a &lt;code&gt;NUGET_KEY&lt;/code&gt; environment variable that contains a valid Nuget.org API key.&lt;/p&gt; &#xA;&lt;h3&gt;build&lt;/h3&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/plotly/Plotly.NET/raw/dev/build&#34;&gt;build project&lt;/a&gt; to take a look at the build targets. Here are some examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Windows&#xA;&#xA;# Build only&#xA;./build.cmd&#xA;&#xA;# Full release buildchain: build, test, pack, build the docs, push a git tag, publish the nuget package, release the docs&#xA;./build.cmd release&#xA;&#xA;# The same for prerelease versions:&#xA;./build.cmd prerelease&#xA;&#xA;&#xA;# Linux/mac&#xA;&#xA;# Build only&#xA;build.sh&#xA;&#xA;# Full release buildchain: build, test, pack, build the docs, push a git tag, publÃ­sh the nuget package, release the docs&#xA;build.sh release&#xA;&#xA;# The same for prerelease versions:&#xA;build.sh prerelease&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;running and writing tests&lt;/h3&gt; &#xA;&lt;p&gt;please refer to the detailed readme in the &lt;a href=&#34;https://raw.githubusercontent.com/plotly/Plotly.NET/dev/tests/README.md&#34;&gt;tests folder&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;docs&lt;/h3&gt; &#xA;&lt;p&gt;The docs are contained in &lt;code&gt;.fsx&lt;/code&gt; and &lt;code&gt;.md&lt;/code&gt; files in the &lt;code&gt;docs&lt;/code&gt; folder. To develop docs on a local server with hot reload, run the following in the root of the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Windows&#xA;./build.cmd watchdocs&#xA;&#xA;# Linux/mac&#xA;./build.sh watchdocs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Plotly.NET is a community maintained open source project. Big thanks to all contributors!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/plotly/Plotly.NET/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=plotly/Plotly.NET&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Library license&lt;/h2&gt; &#xA;&lt;p&gt;The library is available under the &lt;a href=&#34;https://github.com/plotly/Plotly.NET/raw/dev/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why are there two separate packages for C# and F#?&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;These packages are not separate, Plotly.NET.CSharp is built &lt;strong&gt;on top&lt;/strong&gt; of Plotly.NET.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;Plotly.NET&lt;/code&gt; (written in F#) is the main project. It is designed with interoperability in mind, and it is possible to use it from C#.&lt;/p&gt; &#xA; &lt;p&gt;Over the years, some friction between F# and C# have surfaced that cannot be overcome in the F# codebase. For more info, take a look at this issue where we discuss the topic: &lt;a href=&#34;https://github.com/plotly/Plotly.NET/issues/285&#34;&gt;https://github.com/plotly/Plotly.NET/issues/285&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;The &lt;code&gt;Plotly.NET.CSharp&lt;/code&gt; package (written in C#, using the F# API internally) is a thin wrapper around the core API. It is not necessary to use it, but it can make the API more idiomatic and ergonomic for C# users.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can I use Plotly.NET in [insert your UI library here]?&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;It depends. Plotly.NET creates JSON for consumption by the plotly.js library. The actual rendering is done by plotly.js, in an environment where javascript can be run.&lt;/p&gt; &#xA; &lt;p&gt;This means that your UI libs needs some way of displaying html and executing javascript to be compatible with Plotly.NET. That is true for most UI libs though, &lt;a href=&#34;&#34;&gt;here for example is a POC for Blazor&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;For Windows Forms and WPF you could use a WebView control to display the charts.&lt;/p&gt; &#xA; &lt;p&gt;You could also use Plotly.NET.ImageExport in your backend to create static images of your charts and serve those in your UI.&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>