<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-09T01:54:25Z</updated>
  <subtitle>Weekly Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ScottArbeit/Grace</title>
    <updated>2023-07-09T01:54:25Z</updated>
    <id>tag:github.com,2023-07-09:/ScottArbeit/Grace</id>
    <link href="https://github.com/ScottArbeit/Grace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Grace Version Control System&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Grace Version Control System&lt;/h1&gt; &#xA;&lt;p&gt;grace &lt;em&gt;(n)&lt;/em&gt; -&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;elegance and beauty of movement, form, or expression&lt;/li&gt; &#xA; &lt;li&gt;a pleasing or charming quality&lt;/li&gt; &#xA; &lt;li&gt;goodwill or favor&lt;/li&gt; &#xA; &lt;li&gt;a sense of propriety and consideration for others [^grace]&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Welcome to Grace.&lt;/h2&gt; &#xA;&lt;p&gt;Grace is a &lt;strong&gt;new&lt;/strong&gt;, &lt;strong&gt;modern&lt;/strong&gt;, &lt;strong&gt;cloud-native&lt;/strong&gt; &lt;strong&gt;version control system&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Grace is &lt;strong&gt;easy to use&lt;/strong&gt;, &lt;strong&gt;easy to understand&lt;/strong&gt;, and &lt;strong&gt;consistently fast&lt;/strong&gt;. And it&#39;s &lt;strong&gt;powerful&lt;/strong&gt;, ready to handle large repositories and large file sizes.&lt;/p&gt; &#xA;&lt;p&gt;Grace Server &lt;strong&gt;scales up&lt;/strong&gt; by running on Kubernetes and &lt;strong&gt;massive PaaS services&lt;/strong&gt; from large cloud providers.&lt;/p&gt; &#xA;&lt;p&gt;Grace Client runs in the background, making it &lt;strong&gt;ambient&lt;/strong&gt;, &lt;strong&gt;faster&lt;/strong&gt;, and &lt;strong&gt;more valuable to your everyday work&lt;/strong&gt; as a developer.&lt;/p&gt; &#xA;&lt;p&gt;Grace &lt;strong&gt;connects you with others&lt;/strong&gt; working in your repository, &lt;strong&gt;across the globe&lt;/strong&gt;, &lt;strong&gt;in real-time&lt;/strong&gt;, enabling &lt;strong&gt;new experiences&lt;/strong&gt; and &lt;strong&gt;new ways of sharing&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;to be clear:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Grace is &lt;strong&gt;new&lt;/strong&gt; üßëüèº‚Äçüî¨ and &lt;strong&gt;alpha-level&lt;/strong&gt; right now. üî•üßØ The parts that &lt;strong&gt;are&lt;/strong&gt; implemented work, but there&#39;s much more to do. Grace is not ready to be relied on as a production version control system yet. It should not be used for anything other than its own design, development and testing, and for feedback.[^git]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hi friends from On .NET Live!&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;08-Mar-2023&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks for stopping by. I really do appreciate it.&lt;/p&gt; &#xA;&lt;p&gt;I owe you some videos with the demos of Grace, and stuff in Grace&#39;s code, that I wanted to show you.&lt;/p&gt; &#xA;&lt;p&gt;To make those videos, I just bought a new computer (yeah, yeah...), with a serious GPU (of course...), and I&#39;m learning a bit about recording and editing so they don&#39;t suck. I expect to publish them later this month. I appreciate your patience.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to be notified when each video is published, please subscribe to &lt;a href=&#34;https://github.com/ScottArbeit/Grace/issues/12&#34;&gt;this issue&lt;/a&gt;. I&#39;ll update it to let you know.&lt;/p&gt; &#xA;&lt;p&gt;In the meantime, please feel free to comment or ask questions in the Discussions here. I&#39;d love to know what you&#39;re curious about.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;For a list of (mostly imagined) frequently asked questions, please see the &lt;a href=&#34;https://raw.githubusercontent.com/ScottArbeit/Grace/main/docs/Frequently%20asked%20questions.md&#34;&gt;Frequently Asked Questions&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Design and Motivations&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to read about some of the design thinking and motivations behind Grace - topics like UX, performance, scalability, monorepos, Git, why F#, and more - please read &lt;a href=&#34;https://raw.githubusercontent.com/ScottArbeit/Grace/main/docs/Design%20and%20Motivations.md&#34;&gt;Design and Motivations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Vision&lt;/h2&gt; &#xA;&lt;h4&gt;A lot of this remains to be built, but here&#39;s the vision for Grace v1.0:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;No more fear&lt;/h3&gt; &#xA;&lt;p&gt;Stop being afraid of your version control system, and start &lt;em&gt;enjoying&lt;/em&gt; it instead.&lt;/p&gt; &#xA;&lt;p&gt;Grace is easy-to-use, easy-to-understand, and fast, with cool new features that let version control fade into the background while you&#39;re working, and help you remember where you were when you get interrupted.&lt;/p&gt; &#xA;&lt;p&gt;There are fewer concepts to understand in Grace, so learning it is easy, and understanding what it&#39;s doing is simple. There&#39;s a simple-to-understand grammar, built-in aliases for common gestures, and common-sense defaults.&lt;/p&gt; &#xA;&lt;p&gt;Grace is powerful source control, minus the fear.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Yes, it&#39;s fast&lt;/h3&gt; &#xA;&lt;p&gt;Great UX requires great speed. And Grace is fast.&lt;/p&gt; &#xA;&lt;p&gt;Grace Server is designed to run on fast, cloud-based PaaS services for incredible scale and performance. Grace uses virtual actors as networked, in-memory data caches to maximize performance.&lt;/p&gt; &#xA;&lt;p&gt;Grace CLI adds just milliseconds to the server response time for each command.&lt;/p&gt; &#xA;&lt;p&gt;Grace&#39;s GUI apps will be platform-native, with all of the performance and stick-to-your-finger-ness that native apps have always had.&lt;/p&gt; &#xA;&lt;p&gt;Grace Server can even precompute views and projections that you&#39;re likely to want, like diffs and directory contents, and garbage-collect them when they&#39;re no longer needed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;grace watch&lt;/h3&gt; &#xA;&lt;p&gt;Grace CLI includes a command - &lt;code&gt;grace watch&lt;/code&gt; - that watches your working directory for changes, and keeps a live connection to Grace Server, connecting you in real-time to your team around the world.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;grace watch&lt;/code&gt; takes action for you, whether that&#39;s automatically uploading and downloading new file versions, processing notifications from other repo users, or running custom actions that you create.&lt;/p&gt; &#xA;&lt;p&gt;And don&#39;t worry about having yet-another application running in the background. &lt;code&gt;grace watch&lt;/code&gt; is small and very quiet when nothing is going on.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Commits... and saves, checkpoints, and promotions&lt;/h3&gt; &#xA;&lt;p&gt;In Git, &lt;code&gt;commit&lt;/code&gt; is an overloaded concept. It can mean:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;I&#39;m partially done&#34; - local commit after each unit of work is done&lt;/li&gt; &#xA; &lt;li&gt;&#34;I&#39;m really done&#34; - ready for the pull request&lt;/li&gt; &#xA; &lt;li&gt;&#34;Merge&#34; - merges are called &lt;code&gt;commits&lt;/code&gt;, even if they&#39;re not.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And then you get the &#34;squash&#34; vs. &#34;don&#39;t squash&#34; debate. Sigh.&lt;/p&gt; &#xA;&lt;p&gt;Grace simplifies this by breaking these usages out into their own gestures and events:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;grace checkpoint&lt;/code&gt; - this means &#34;I&#39;m partially done&#34;, for you to keep track of your own progress&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;grace commit&lt;/code&gt; - this is &#34;I&#39;m really done&#34; or &#34;This version is a candidate for promotion&#34;; you&#39;d use a commit for a PR&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;grace promote&lt;/code&gt; - this is sort-of a merge; it&#39;s what you&#39;d get after approving a PR, which Grace calls a &lt;em&gt;promotion request&lt;/em&gt;[^pr]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and, introducing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;grace save&lt;/code&gt; - this is used by &lt;code&gt;grace watch&lt;/code&gt; for saving versions of files between checkpoints, because...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Every save is uploaded, automatically&lt;/h3&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;grace watch&lt;/code&gt; uploads new file versions after every save-on-disk, along with a new snapshot of the entire directory structure of the repo, including new SHA-256 hashes.&lt;/p&gt; &#xA;&lt;p&gt;It happens so quickly you don&#39;t even notice it.&lt;/p&gt; &#xA;&lt;p&gt;And it gives you some very cool things, like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;file-level undo&lt;/strong&gt; for as far back as your repository allows,&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;very fast&lt;/strong&gt; &lt;code&gt;grace checkpoint&lt;/code&gt;, &lt;code&gt;grace commit&lt;/code&gt;, and &lt;code&gt;grace promote&lt;/code&gt; commands, and,&lt;/li&gt; &#xA; &lt;li&gt;a &lt;strong&gt;Version History view&lt;/strong&gt; that will let you to flip through your versions, helping you get remember where you were when you get interrupted, and enabling easy, instant restoration of any of your past changes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Every change recorded&lt;/h3&gt; &#xA;&lt;p&gt;Grace is event-sourced. That means that everything that changes the state of the repository - every &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt;, every &lt;code&gt;branch name change&lt;/code&gt;, every &lt;em&gt;everything&lt;/em&gt;, is stored as a separate event.&lt;/p&gt; &#xA;&lt;p&gt;As they&#39;re handled, they&#39;re sent to an event processor, which can log them in your choice of format and system. You can see the &lt;em&gt;who / what / where / when&lt;/em&gt; of everything that happens in your repository, using your favorite event analytics and stream analytics tools, and even set up custom auditing and automation based on those events.[^stream]&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Live, two-way client-server communication&lt;/h3&gt; &#xA;&lt;p&gt;When running &lt;code&gt;grace watch&lt;/code&gt;, Grace uses &lt;a href=&#34;https://dotnet.microsoft.com/en-us/apps/aspnet/signalr&#34;&gt;SignalR&lt;/a&gt; to create a live, two-way communication channel between client and server.&lt;/p&gt; &#xA;&lt;p&gt;This connection allows Grace to do All The Cool Things. Things like connecting you in real-time to everyone else working in your repository. Things like auto-rebasing. Things like watching for events in your repository, notifying you when you want to be notified, and running custom local actions if you want.&lt;/p&gt; &#xA;&lt;p&gt;Imagine: there&#39;s a promotion to &lt;code&gt;main&lt;/code&gt;, your branch gets auto-rebased on those latest changes, and then your local unit test suite gets run automatically so you immediately know if there&#39;s a problem.&lt;/p&gt; &#xA;&lt;p&gt;Grace lets you share your code with team members effortlessly, around the world, for those times when you need another set of eyes on it, or just want to show them something cool.&lt;/p&gt; &#xA;&lt;p&gt;Auto-rebasing keeps you up-to-date and ready to go, because...&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Grace reduces merge conflicts&lt;/h3&gt; &#xA;&lt;p&gt;Merge conflicts suck. Finding out that you have one, when you thought you were already done with your work, is one of the most anxiety-inducing parts of using source control. Grace helps you eliminate them by keeping your branch up-to-date.&lt;/p&gt; &#xA;&lt;p&gt;When your parent branch gets updated, by default, &lt;code&gt;grace watch&lt;/code&gt; will auto-rebase your branch on those changes, so you&#39;re always coding against the latest version that you&#39;ll have to promote to.&lt;/p&gt; &#xA;&lt;p&gt;Almost all of the time, when you rebase, nothing bad happens. You don&#39;t even notice it. The rest of the time, auto-rebase lets you find out right away, fix it while you&#39;re in flow, and skip the conflict later.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s shift left on promotion conflicts. Grace can&#39;t eliminate all of them, but it should reduce how often they happen.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Personal branches, not forks&lt;/h3&gt; &#xA;&lt;p&gt;With Grace, there&#39;s no need for forking entire repositories just to make contributions. In open-source repos, you&#39;ll just create a personal branch against the repo.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll own your personal branch, and you can make it public or private. When your change is ready you can submit PR&#39;s to get your personal branch&#39;s version promoted to a parent branch in the repo.&lt;/p&gt; &#xA;&lt;p&gt;This is how I expect a large, open-source project in Grace to be: dozens of contributors, each with personal branches, working on a public project that remains securely controlled with ACL&#39;s. Everyone auto-rebased with every update to their parent branch, so there are no surprises later. No networks of forks to manage, no multiple entire copies of the repo. Just individuals working on the same repo, securely, together.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Simplified branching strategy&lt;/h3&gt; &#xA;&lt;p&gt;Grace&#39;s default branching strategy is called &lt;em&gt;single-step&lt;/em&gt; and is designed to help reduce merge conflicts, and to make it easier to work on and promote code to shipping branches (like &lt;code&gt;main&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Single-step branching is, we hope, both easy-to-use and powerful enough to be all that you need to run your projects.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a &lt;a href=&#34;https://raw.githubusercontent.com/ScottArbeit/Grace/main/docs/Branching%20strategy.md&#34;&gt;separate page&lt;/a&gt; that describes it in more detail.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Run large repositories&lt;/h3&gt; &#xA;&lt;p&gt;Got a lot of files? a lot of users? a lot of versions?&lt;/p&gt; &#xA;&lt;p&gt;In short... got a monorepo?&lt;/p&gt; &#xA;&lt;p&gt;No problem, Grace is ready for it. So far, Grace has been tested on repositories as large as 100,000 files with 15,000 directories, with excellent performance (if you&#39;re running &lt;code&gt;grace watch&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Store large files&lt;/h3&gt; &#xA;&lt;p&gt;Grace has no problem storing large files. Really large files. It&#39;s been tested with 10GB files - not that I think files that large belong in version control - and it should handle even larger files well.&lt;/p&gt; &#xA;&lt;p&gt;Grace will let you specify how to handle those files, like only downloading them for the Design department, but not for Engineering. It&#39;s up to you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Native GUI&lt;/h3&gt; &#xA;&lt;p&gt;Yeah, I said it.&lt;/p&gt; &#xA;&lt;p&gt;Grace will have a native GUI app for Windows, Mac, Android, and iOS. (And probably Linux.)&lt;/p&gt; &#xA;&lt;p&gt;Take Grace with you wherever you go. Merge conflict UI, Version History view, repository browsing, current status and more... all running at full native speed on your devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Web UI&lt;/h3&gt; &#xA;&lt;p&gt;Shipping a native app doesn&#39;t mean that we don&#39;t also need a great web UI.&lt;/p&gt; &#xA;&lt;p&gt;Sometimes the best way to share information is using a URL.&lt;/p&gt; &#xA;&lt;p&gt;CLI + Web UI + GUI... use Grace the way you want to.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ACL&#39;s, down to the file level&lt;/h3&gt; &#xA;&lt;p&gt;Grace goes way beyond just repository-level permissions. Grace uses OpenID and OAuth2 to integrate with your AuthN and AuthZ providers. Want to lock down specific paths in your repository to specific users and groups? With Grace, you&#39;ll be able to.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;No stashing&lt;/h3&gt; &#xA;&lt;p&gt;Because &lt;code&gt;grace watch&lt;/code&gt; automatically uploads new file versions after every save, and commands like &lt;code&gt;grace switch&lt;/code&gt; ensure that everything in your working directory is preserved before switching to another branch or reference, there&#39;s no need to stash anything. Just &lt;code&gt;switch&lt;/code&gt; and go.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Branch-level control of reference types&lt;/h3&gt; &#xA;&lt;p&gt;Plan your branching strategy in greater detail than ever before. Grace lets you decide which kinds of references are enabled in each branch.&lt;/p&gt; &#xA;&lt;p&gt;For instance, &lt;code&gt;main&lt;/code&gt; might enable promotions and tags, and disable commits, checkpoints, and saves.&lt;/p&gt; &#xA;&lt;p&gt;Ordinary user branches might disable promotions, but enable everything else.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s up to you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ephemeral checkpoints and saves&lt;/h3&gt; &#xA;&lt;p&gt;Checkpoints and saves are features to help &lt;strong&gt;you&lt;/strong&gt; be more productive, but we don&#39;t need to keep them forever. Grace allows you to control how long they&#39;re kept are kept in each repository. 72 hours? One week? A month? Or maybe just &#34;keep the last 1,000 saves&#34;. It&#39;s up to you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Delete versions if you need to&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes you need to delete a version, whether it&#39;s because a secret or password was accidentally checked in, or because of some other security issue. With the right permissions, you&#39;ll be able to remove bad versions of your code - with a permanent reference that says that you did.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pre-rendered diffs&lt;/h3&gt; &#xA;&lt;p&gt;Every time you run &lt;code&gt;grace promote&lt;/code&gt;, &lt;code&gt;grace commit&lt;/code&gt;, or &lt;code&gt;grace checkpoint&lt;/code&gt;, and every time &lt;code&gt;grace watch&lt;/code&gt; uploads a new version of a file, Grace Server can optionally pre-render diffs for you to see, either in the CLI or in the Version History view. This makes seeing your ongoing changes in the Version History view instantaneous.&lt;/p&gt; &#xA;&lt;p&gt;They&#39;re automatically aged out and deleted after a configurable length of time, so they don&#39;t just sit there wasting resources forever.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Optional file locking&lt;/h3&gt; &#xA;&lt;p&gt;If your repository includes large binary files, like edited video, graphics, or game artifacts, you need to make sure that only one person at a time edits each file. Grace will support optional file locking at the directory level to ensure that you don&#39;t have to re-do work.&lt;/p&gt; &#xA;&lt;p&gt;(Don&#39;t worry... if you don&#39;t need file locking, you don&#39;t have to turn it on.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;A simple Web API&lt;/h3&gt; &#xA;&lt;p&gt;Grace Server is a modern Web API application. Like Grace&#39;s CLI, the Web API is easy to use, and easy to understand.&lt;/p&gt; &#xA;&lt;p&gt;Grace ships with a .NET SDK, which is simply a projection of the Web API into .NET (and which Grace itself uses). SDK&#39;s for other platforms are welcomed as community contributions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SHA-256 hashes&lt;/h3&gt; &#xA;&lt;p&gt;Grace uses SHA-256 hashes to verify that the files you uploaded, and the directory versions that went with them, are exactly the ones that get retrieved by clients. Grace will include a command to verify the SHA-256 hashes of all downloaded files and directory versions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Local file cache&lt;/h3&gt; &#xA;&lt;p&gt;Grace repositories have a local cache of file versions that have been uploaded and downloaded. When running &lt;code&gt;grace watch&lt;/code&gt;, Grace can download new file versions from multiple branches in the background so your &lt;code&gt;grace switch&lt;/code&gt; commands run nearly instantly.&lt;/p&gt; &#xA;&lt;p&gt;The local file cache is pruned regularly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2048 characters&lt;/h3&gt; &#xA;&lt;p&gt;When you&#39;re running &lt;code&gt;grace promote/commit/checkpoint/save/tag -m &amp;lt;some message&amp;gt;&lt;/code&gt;, the &lt;em&gt;&amp;lt;some message&amp;gt;&lt;/em&gt; part can be up to 2048 characters.&lt;/p&gt; &#xA;&lt;p&gt;50 characters... I don&#39;t think so. Feel free to share details. The person you help might be future you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Import from Git / Export to Git&lt;/h3&gt; &#xA;&lt;p&gt;Yes, we know... it&#39;s hard to let go. Grace will perform an initial import from a Git repo, and will export to a Git repo.[^gitexport]&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Operations (if you&#39;re thinking about hosting your own server)&lt;/h3&gt; &#xA;&lt;p&gt;Grace Server is a modern, cloud-native Web API application. It will ship in a container on Docker Hub. (Of course.)&lt;/p&gt; &#xA;&lt;p&gt;Grace Server is designed to be easy to deploy and operate. It runs on your choice of dozens of cloud-native databases, components and services, using &lt;a href=&#34;https://dapr.io&#34;&gt;Dapr&lt;/a&gt;, making it flexible and inherently scalable. Grace Server is stateless and scales up and down well using basic &lt;a href=&#34;https://keda.sh/&#34;&gt;KEDA&lt;/a&gt; counters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;p&gt;Grace is written primarily in &lt;a href=&#34;https://learn.microsoft.com/en-us/dotnet/fsharp/what-is-fsharp&#34;&gt;F#&lt;/a&gt;, and is organized into nine .NET projects.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grace.CLI&lt;/strong&gt; is the command-line interface for Grace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grace.Server&lt;/strong&gt; is an ASP.NET Core project that defines the Web API for Grace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grace.SDK&lt;/strong&gt; is a .NET class library that is a platform-specific projection of the Web API; it is used by Grace.CLI and wraps the HTTPS calls to Grace Server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grace.Actors&lt;/strong&gt; holds the code for the Actors in the system; it is used exclusively by Grace.Server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grace.Shared&lt;/strong&gt; is where all common code goes; it is used by all of the other &lt;strong&gt;Grace.&lt;/strong&gt;* projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(future)&lt;/em&gt; &lt;strong&gt;Grace.MAUI&lt;/strong&gt; will contain a native GUI for Grace for Windows, Android, MacOS, and iOS (and hopefully Linux).&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(future)&lt;/em&gt; &lt;strong&gt;Grace.Blazor&lt;/strong&gt; will be an ASP.NET Core project containing a web UI for Grace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CosmosJsonSerializer&lt;/strong&gt; is a custom JSON serializer class, used when deploying Grace with Azure Cosmos DB.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;An additional project, &lt;strong&gt;Grace.Load&lt;/strong&gt;, is an experiment to create a load test for Grace.Server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Project diagram&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Solid lines indicate a .NET project reference. Dotted lines indicate network requests.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart LR&#xA;    subgraph Server&#xA;    Grace.Server--&amp;gt;Grace.Actors&#xA;    Grace.Server--&amp;gt;CosmosJsonSerializer&#xA;    end&#xA;&#xA;    subgraph Clients&#xA;    Grace.CLI--&amp;gt;Grace.SDK&#xA;    Grace.SDK-.-&amp;gt;|HTTPS|Grace.Server&#xA;    MAUI[&#34;(future) Grace.MAUI&#34;]--&amp;gt;|&#34;(just started)&#34;|Grace.SDK&#xA;    Blazor[&#34;(future) Grace.Blazor&#34;]--&amp;gt;|&#34;(not yet started)&#34;|Grace.SDK&#xA;    end&#xA;&#xA;    subgraph Utilities&#xA;    Grace.Load--&amp;gt;Grace.SDK&#xA;    end&#xA;&#xA;    subgraph Tests&#xA;    Grace.Server.Tests--&amp;gt;Grace.Server&#xA;    end&#xA;&#xA;    Grace.Actors--&amp;gt;Grace.Shared&#xA;    Grace.Server--&amp;gt;Grace.Shared&#xA;    Grace.CLI--&amp;gt;Grace.Shared&#xA;    Grace.SDK--&amp;gt;Grace.Shared&#xA;    MAUI[&#34;(future) Grace.MAUI&#34;]--&amp;gt;|&#34;(just started)&#34;|Grace.Shared&#xA;    Blazor[&#34;(future) Grace.Blazor&#34;]--&amp;gt;|&#34;(not yet started)&#34;|Grace.Shared&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Our Code of Conduct is available &lt;a href=&#34;https://raw.githubusercontent.com/ScottArbeit/Grace/main/code_of_conduct.md&#34;&gt;here&lt;/a&gt;. The tl;dr is:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;The name of this project is Grace&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Be &lt;strong&gt;graceful&lt;/strong&gt; in your interactions.&lt;/p&gt; &#xA; &lt;p&gt;Give &lt;strong&gt;grace&lt;/strong&gt; to everyone participating with us.&lt;/p&gt; &#xA; &lt;p&gt;Create something together that embodies &lt;strong&gt;grace&lt;/strong&gt; in its design and form.&lt;/p&gt; &#xA; &lt;p&gt;When in doubt, &lt;strong&gt;&lt;em&gt;remember the name of the project.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Grace Server will be shipped as a container, which will be made available on Docker Hub. Dapr&#39;s sidecar and actor placement processes are shipped as containers and are available on Docker Hub.&lt;/p&gt; &#xA;&lt;p&gt;We intend to provide a Docker Compose template, as well as Kubernetes configuration for deployment, allowing for deployment to any major public cloud provider, as well as on-premises hardware.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gracevcsdevelopment.blob.core.windows.net/static/Orange3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;[^grace]: Definition excerpted from &lt;a href=&#34;https://www.thefreedictionary.com/grace&#34;&gt;https://www.thefreedictionary.com/grace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;[^git]: Grace currently uses Git for its source control, and runs Grace in the same directory as a means of testing. Officially self-hosting Grace&#39;s source code on Grace will, of course, happen when it&#39;s safe to.&lt;/p&gt; &#xA;&lt;p&gt;[^pr]: They&#39;re not really &#34;pull requests&#34; because there isn&#39;t a &#34;pull&#34; gesture in Grace. It&#39;s still a &#34;PR&#34;, though.&lt;/p&gt; &#xA;&lt;p&gt;[^stream]: One thing I&#39;d like to do with the event log as a stream: detect invalid sequences and frequencies of events in Grace that would indicate bugs or attacks.&lt;/p&gt; &#xA;&lt;p&gt;[^gitexport]: Grace will export the latest state of each branch into a &lt;code&gt;git bundle&lt;/code&gt; file. Exporting an entire Grace repository, including history, to a Git repository probably won&#39;t be supported, but maybe someone else will write it. (There are, no doubt, a lot of edge cases to be found the hard way in that translation, and it&#39;s a very low priority item for me.) Live two-way synchronization between Grace and Git is a non-goal, for the same reason.&lt;/p&gt;</summary>
  </entry>
</feed>