<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub F# Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-13T01:39:07Z</updated>
  <subtitle>Weekly Trending of F# in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/fsharplu</title>
    <updated>2025-07-13T01:39:07Z</updated>
    <id>tag:github.com,2025-07-13:/microsoft/fsharplu</id>
    <link href="https://github.com/microsoft/fsharplu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This library provides a set of F# helpers for string manipulations, logging, collection data structures, file operations, text processing, security, async, parsing, diagnostics, configuration files and Json serialization.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FSharpLu F# library&lt;/h1&gt; &#xA;&lt;p&gt;This library provides F# lightweight utilities for string manipulations, logging, collection data structures, file operations, text processing, security, async, parsing, diagnostics, configuration files and Json serialization.&lt;/p&gt; &#xA;&lt;p&gt;This is by no means a full-fledged utility library for F#, but rather a small collection of utilities and other thin wrappers accumulated throughout the development of various internal projects at Microsoft and meant to facilitate development with the .Net framework using the F# programming language.&lt;/p&gt; &#xA;&lt;p&gt;Some of the provided utilities are just thin &lt;code&gt;let&lt;/code&gt;-bindings wrappers around existing .Net libraries (e.g. module &lt;code&gt;FSharpLu.Text&lt;/code&gt; or &lt;code&gt;FSharpLu.Parsing&lt;/code&gt;) whereas some provide additional features (e.g. Json serialization in module &lt;code&gt;FSharpLu.Json&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Build status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;main&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/fslu/public/_build/latest?definitionId=1&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/fslu/public/_apis/build/status/fslu-builds-CI?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/microsoft/fsharplu/workflows/GitHub%20Action%20CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub Action CI&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Build requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;F# compiler. See &lt;a href=&#34;https://fsharp.org/use/Windows&#34;&gt;https://fsharp.org/use/Windows&lt;/a&gt; and &lt;a href=&#34;https://fsharp.org/use/linux/&#34;&gt;https://fsharp.org/use/linux/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install .NET Core SDK 6.0 from &lt;a href=&#34;https://dotnet.microsoft.com/download/visual-studio-sdks&#34;&gt;https://dotnet.microsoft.com/download/visual-studio-sdks&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To build project run &lt;code&gt;dotnet build&lt;/code&gt; under the top-level directory or run the script &lt;code&gt;scripts\build.ps1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For the documentation please visit the &lt;a href=&#34;https://github.com/Microsoft/fsharplu/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/LICENSE.MD&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;FSharpLu&lt;/code&gt;: The core set of utilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FSharpLu.Json&lt;/code&gt;: Json serialization of F# data types implemented as JSon.Net converters and providing more succinct serialization for option types and discriminate unions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FSharpLu.Windows&lt;/code&gt;: Windows-specific utility functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FSharpLu.Azure&lt;/code&gt;: Azure Resource Manager helpers&lt;/li&gt; &#xA; &lt;li&gt;Test libraries &lt;code&gt;FSharpLu.*.Tests&lt;/code&gt;: Unit tests for a specific module&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FSharpLu modules&lt;/h2&gt; &#xA;&lt;p&gt;Here is a list of helper modules provided by FSharpLu.&lt;/p&gt; &#xA;&lt;h3&gt;Main module&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Async.fs&#34;&gt;FSharpLu.Async&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/AsyncSeq.fs&#34;&gt;FSharpLu.AsyncSeq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/CacheMap.fs&#34;&gt;FSharpLu.CacheMap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Configuration.fs&#34;&gt;FSharpLu.Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Collections.fs&#34;&gt;FSharpLu.Collection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Diagnostics.fs&#34;&gt;FSharpLu.Diagnostics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Disposable.fs&#34;&gt;FSharpLu.Disposable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/ErrorHandling.fs&#34;&gt;FSharpLu.ErrorHandling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/ExecutableInfo.fs&#34;&gt;FSharpLu.ExecutableInfo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/File.fs&#34;&gt;FSharpLu.File&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/FSharpFromCSharp.fs&#34;&gt;FSharpLu.FSharpFromCSharp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Ini.fs&#34;&gt;FSharpLu.Ini&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Logger.fs&#34;&gt;FSharpLu.Logger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/MachineOperations.fs&#34;&gt;FSharpLu.MachineOperations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Option.fs&#34;&gt;FSharpLu.Option&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Parsing.fs&#34;&gt;FSharpLu.Parsing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Platform.fs&#34;&gt;FSharpLu.Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/QueueScheduler.fs&#34;&gt;FSharpLu.QueueScheduler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Security.fs&#34;&gt;FSharpLu.Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/ServiceRequest.fs&#34;&gt;FSharpLu.ServiceRequest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/StateMachine.fs&#34;&gt;FSharpLu.StateMachine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Sysprep.fs&#34;&gt;FSharpLu.Sysprep&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/Text.fs&#34;&gt;FSharpLu.Text&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu/TraceLogging.fs&#34;&gt;FSharpLu.TraceLogging&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Json&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Json/&#34;&gt;FSharpLu.Json&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Azure&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Azure/&#34;&gt;FSharpLu.Azure&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/Hyperv.fs&#34;&gt;FSharpLu.Windows.Hyperv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/Security.fs&#34;&gt;FSHarpLu.Windows.Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/Certificate.fs&#34;&gt;FSHarpLu.Windows.Certificate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/Registry.fs&#34;&gt;FSHarpLu.Windows.Registry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/TraceLoggingConsole.fs&#34;&gt;FSHarpLu.Windows.TraceLoggingConsole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/Smb.fs&#34;&gt;FSHarpLu.Windows.Smb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/EtwListener.fs&#34;&gt;FSHarpLu.Windows.EtwListener&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/DirectoryServices.fs&#34;&gt;FSHarpLu.Windows.DirectoryServices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/Wmi.fs&#34;&gt;FSHarpLu.Windows.Wmi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/ManagementWin32.fs&#34;&gt;FSHarpLu.Windows.ManagementWin32&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/ManagementHypervisor.fs&#34;&gt;FSHarpLu.Windows.ManagementHypervisor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/fsharplu/main/FSharpLu.Windows/HyperV.fs&#34;&gt;FSHarpLu.Windows.HyperV&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/Angara</title>
    <updated>2025-07-13T01:39:07Z</updated>
    <id>tag:github.com,2025-07-13:/microsoft/Angara</id>
    <link href="https://github.com/microsoft/Angara" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Angara: the modelling environment https://www.microsoft.com/en-us/research/project/distribution-modeller&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Angara&lt;/h1&gt; &#xA;&lt;p&gt;A cross-platform framework for composing, evaluating, inspecting and persisting computation experiments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/Angara.Chart</title>
    <updated>2025-07-13T01:39:07Z</updated>
    <id>tag:github.com,2025-07-13:/microsoft/Angara.Chart</id>
    <link href="https://github.com/microsoft/Angara.Chart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Allows to define and display a chart as a collection of plots such as line, band, markers, heatmap. Supports visualization of uncertain values represented as quantiles.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Angara.Chart&lt;/h1&gt; &#xA;&lt;p&gt;An F# library that allows to define and display a chart as a collection of plots such as line, band, markers, heatmap. Supports visualization of uncertain values represented as quantiles.&lt;/p&gt; &#xA;&lt;p&gt;Also, there is a similar TypeScript component &lt;a href=&#34;https://github.com/predictionmachines/InteractiveDataDisplay/raw/master/ChartViewer.md&#34;&gt;ChartViewer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Samples gallery&lt;/h2&gt; &#xA;&lt;p&gt;Each sample is represented as an F# module containing function &lt;code&gt;samples: unit -&amp;gt; Chart list&lt;/code&gt;. It builds the list of sample charts, so that then all the charts can be rendered using &lt;a href=&#34;https://github.com/Microsoft/Angara&#34;&gt;Angara.Html&lt;/a&gt; library to an html file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-F#&#34;&gt;module Program&#xA;&#xA;open Angara.Charting&#xA;&#xA;type SampleCharts = &#xA;    { Lines: Chart list &#xA;    ; Band: Chart list&#xA;    ; Markers: Chart list &#xA;    ; Heatmap: Chart list }&#xA;&#xA;[&amp;lt;EntryPoint&amp;gt;]&#xA;let main argv = &#xA;    let samples = &#xA;        { Lines = Line.samples() &#xA;        ; Band = Band.samples()&#xA;        ; Markers = Markers.samples() &#xA;        ; Heatmap = Heatmap.samples() }&#xA;    Angara.Html.Save &#34;Angara.Chart.SampleGallery.html&#34; samples    &#xA;    0 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Loading data using Angara.Table&lt;/h3&gt; &#xA;&lt;p&gt;All the samples below will use the &lt;code&gt;Data&lt;/code&gt; module to get sample data series. We use &lt;a href=&#34;https://github.com/Microsoft/Angara.Table&#34;&gt;Angara.Table&lt;/a&gt; library to read data from CSV file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-F#&#34;&gt;module Data&#xA;&#xA;open Angara.Charting&#xA;&#xA;let wheat = Table.ReadFile(&#34;wheat.csv&#34;)&#xA;let uwheat = Table.ReadFile(&#34;uwheat.csv&#34;)&#xA;let site = Table.ReadFile(&#34;site.csv&#34;)&#xA;let npz = Table.ReadFile(&#34;npz.csv&#34;)&#xA;let grid = Table.ReadFile(&#34;grid.csv&#34;)&#xA;let ugrid = Table.ReadFile(&#34;ugrid.csv&#34;)&#xA;&#xA;let col colName = Tables.ToArray&amp;lt;float[]&amp;gt; colName&#xA;let quantiles prefix table = &#xA;    { median = table |&amp;gt; col (prefix + &#34;_median&#34;)&#xA;      lower68 = table |&amp;gt; col (prefix + &#34;_lb68&#34;)&#xA;      upper68 = table |&amp;gt; col (prefix + &#34;_ub68&#34;)&#xA;      lower95 = table |&amp;gt; col (prefix + &#34;_lb95&#34;)&#xA;      upper95 = table |&amp;gt; col (prefix + &#34;_ub95&#34;) }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Line&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-F#&#34;&gt;module Line&#xA;&#xA;open Angara.Charting&#xA;&#xA;&#xA;let samples() =&#xA;    let t = Data.site |&amp;gt; Data.col &#34;t&#34;&#xA;    let p = Data.site |&amp;gt; Data.col &#34;p&#34;&#xA;    let p_uncertain = Data.npz |&amp;gt; Data.quantiles &#34;p&#34;&#xA;&#xA;    [&#xA;        [ Plot.line(t, p) ] |&amp;gt; Chart.ofList&#xA;&#xA;        [ Plot.line(Array.init 100 (fun i -&amp;gt; let x = float(i)/10.0 in x*x), stroke = &#34;#7F7F7F&#34;, thickness = 3.0) ] |&amp;gt; Chart.ofList&#xA;&#xA;        [ Plot.line(LineX.Values t, LineY.UncertainValues p_uncertain) ] |&amp;gt; Chart.ofList&#xA;    ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Markers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-F#&#34;&gt;module Markers&#xA;&#xA;open Angara.Charting&#xA;&#xA;&#xA;let samples() =&#xA;    let lon = Data.wheat |&amp;gt; Data.col &#34;Lon&#34;&#xA;    let lat = Data.wheat |&amp;gt; Data.col &#34;Lat&#34;&#xA;    let wheat = Data.wheat |&amp;gt; Data.col &#34;wheat&#34;&#xA;    let wheat_uncertain = Data.uwheat |&amp;gt; Data.quantiles &#34;w&#34;&#xA;    [&#xA;        [ Plot.markers(lon, lat, displayName = &#34;Lat/lon&#34;) ] |&amp;gt; Chart.ofList&#xA;        &#xA;        [ Plot.markers(lon, lat, &#xA;            color = MarkersColor.Values wheat, colorPalette = &#34;0=Red=Green=Yellow=Blue=10&#34;, &#xA;            shape = MarkersShape.Circle, displayName = &#34;Lat/lon/color&#34;)] |&amp;gt; Chart.ofList&#xA;        &#xA;        [ Plot.markers(lon, lat, &#xA;            color = MarkersColor.Values wheat, colorPalette = &#34;0=Red=Green=Yellow=Blue=10&#34;, &#xA;            size = MarkersSize.Values wheat, sizeRange = (5.0, 25.0),&#xA;            shape = MarkersShape.Diamond, displayName = &#34;Lat/lon/color/size&#34;)] |&amp;gt; Chart.ofList&#xA;        &#xA;        [ Plot.markers(lon, lat, &#xA;            color = MarkersColor.UncertainValues wheat_uncertain,&#xA;            size = MarkersSize.Value 15.0,&#xA;            shape = MarkersShape.Circle, displayName = &#34;uncertain color&#34;)] |&amp;gt; Chart.ofList&#xA;        &#xA;        [ Plot.markers(lon, lat, &#xA;            color = MarkersColor.Values wheat_uncertain.median,&#xA;            size = MarkersSize.UncertainValues wheat_uncertain, sizeRange = (5.0, 25.0),&#xA;            displayName = &#34;uncertain size&#34;)] |&amp;gt; Chart.ofList&#xA;&#xA;        [ Plot.markers(MarkersX.Values lat, MarkersY.UncertainValues wheat_uncertain,&#xA;            displayName = &#34;uncertain y&#34;)] |&amp;gt; Chart.ofList&#xA;    ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Band&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-F#&#34;&gt;module Band&#xA;&#xA;open Angara.Charting&#xA;&#xA;&#xA;let samples() =&#xA;    let t = Data.site |&amp;gt; Data.col &#34;t&#34;&#xA;    let p_lb95 = Data.npz |&amp;gt; Data.col &#34;p_lb95&#34;&#xA;    let p_ub95 = Data.npz |&amp;gt; Data.col &#34;p_ub95&#34;&#xA;&#xA;    [&#xA;        [ Plot.band(t, p_lb95, p_ub95) ] |&amp;gt; Chart.ofList&#xA;    ]&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Heatmap&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-F#&#34;&gt;module Heatmap&#xA;&#xA;open Angara.Charting&#xA;&#xA;&#xA;let samples() =&#xA;    let lon = Data.grid |&amp;gt; Data.col &#34;lon&#34;&#xA;    let lat = Data.grid |&amp;gt; Data.col &#34;lat&#34;&#xA;    let value = Data.grid |&amp;gt; Data.col &#34;value&#34;&#xA;&#xA;    let lon2 = Data.ugrid |&amp;gt; Data.col &#34;lon&#34;&#xA;    let lat2 = Data.ugrid |&amp;gt; Data.col &#34;lat&#34;&#xA;    let value_uncertain = Data.ugrid |&amp;gt; Data.quantiles &#34;value&#34;&#xA;&#xA;    [&#xA;        [ Plot.heatmap(lon, lat, value) ] |&amp;gt; Chart.ofList&#xA;&#xA;        [ Plot.heatmap(lon, lat, value, treatAs = HeatmapTreatAs.Discrete) ] |&amp;gt; Chart.ofList&#xA;&#xA;        [ Plot.heatmap(lon2, lat2, HeatmapValues.TabularUncertainValues value_uncertain, colorPalette = &#34;blue,white,yellow,orange&#34;) ] |&amp;gt; Chart.ofList&#xA;    ]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>