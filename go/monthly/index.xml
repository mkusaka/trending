<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-01T01:48:56Z</updated>
  <subtitle>Monthly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>navidrome/navidrome</title>
    <updated>2025-01-01T01:48:56Z</updated>
    <id>tag:github.com,2025-01-01:/navidrome/navidrome</id>
    <link href="https://github.com/navidrome/navidrome" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üéß‚òÅÔ∏è Your Personal Streaming Service&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.navidrome.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/resources/logo-192x192.png&#34; alt=&#34;Navidrome logo&#34; title=&#34;navidrome&#34; align=&#34;right&#34; height=&#34;60px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Navidrome Music Server &amp;nbsp;&lt;a href=&#34;https://twitter.com/intent/tweet?text=Tired%20of%20paying%20for%20music%20subscriptions%2C%20and%20not%20finding%20what%20you%20really%20like%3F%20Roll%20your%20own%20streaming%20service%21&amp;amp;url=https://navidrome.org&amp;amp;via=navidrome&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/navidrome/navidrome/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/navidrome/navidrome?logo=github&amp;amp;label=latest&amp;amp;style=flat-square&#34; alt=&#34;Last Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nightly.link/navidrome/navidrome/workflows/pipeline/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/navidrome/navidrome/pipeline.yml?branch=master&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/navidrome/navidrome/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/navidrome/navidrome/total?logo=github&amp;amp;style=flat-square&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/deluan/navidrome&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/deluan/navidrome?logo=docker&amp;amp;label=pulls&amp;amp;style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/xh7j7yF&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/671335427726114836?logo=discord&amp;amp;label=discord&amp;amp;style=flat-square&#34; alt=&#34;Dev Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/navidrome/&#34;&gt;&lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/navidrome?logo=reddit&amp;amp;label=/r/navidrome&amp;amp;style=flat-square&#34; alt=&#34;Subreddit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0-ff69b4.svg?style=flat-square&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gurubase.io/g/navidrome&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gurubase-Ask%20Navidrome%20Guru-006BFF?style=flat-square&#34; alt=&#34;Gurubase&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Navidrome is an open source web-based music collection server and streamer. It gives you freedom to listen to your music collection from any browser or mobile device. It&#39;s like your personal Spotify!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;master&lt;/code&gt; branch may be in an unstable or even broken state during development. Please use &lt;a href=&#34;https://github.com/navidrome/navidrome/releases&#34;&gt;releases&lt;/a&gt; instead of the &lt;code&gt;master&lt;/code&gt; branch in order to get a stable set of binaries.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.navidrome.org/demo/&#34;&gt;Check out our Live Demo!&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Any feedback is welcome!&lt;/strong&gt; If you need/want a new feature, find a bug or think of any way to improve Navidrome, please file a &lt;a href=&#34;https://github.com/navidrome/navidrome/issues&#34;&gt;GitHub issue&lt;/a&gt; or join the discussion in our &lt;a href=&#34;https://www.reddit.com/r/navidrome/&#34;&gt;Subreddit&lt;/a&gt;. If you want to contribute to the project in any other way (&lt;a href=&#34;https://www.navidrome.org/docs/developers/&#34;&gt;ui/backend dev&lt;/a&gt;, &lt;a href=&#34;https://www.navidrome.org/docs/developers/translations/&#34;&gt;translations&lt;/a&gt;, &lt;a href=&#34;https://www.navidrome.org/docs/developers/creating-themes&#34;&gt;themes&lt;/a&gt;), please join the chat in our &lt;a href=&#34;https://discord.gg/xh7j7yF&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See instructions on the &lt;a href=&#34;https://www.navidrome.org/docs/installation/&#34;&gt;project&#39;s website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cloud Hosting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.pikapods.com&#34;&gt;PikaPods&lt;/a&gt; has partnered with us to offer you an &lt;a href=&#34;https://www.navidrome.org/docs/installation/managed/#pikapods&#34;&gt;officially supported, cloud-hosted solution&lt;/a&gt;. A share of the revenue helps fund the development of Navidrome at no additional cost for you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.pikapods.com/pods?run=navidrome&#34;&gt;&lt;img src=&#34;https://www.pikapods.com/static/run-button.svg?sanitize=true&#34; alt=&#34;PikaPods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handles very &lt;strong&gt;large music collections&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Streams virtually &lt;strong&gt;any audio format&lt;/strong&gt; available&lt;/li&gt; &#xA; &lt;li&gt;Reads and uses all your beautifully curated &lt;strong&gt;metadata&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Great support for &lt;strong&gt;compilations&lt;/strong&gt; (Various Artists albums) and &lt;strong&gt;box sets&lt;/strong&gt; (multi-disc albums)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt;, each user has their own play counts, playlists, favourites, etc...&lt;/li&gt; &#xA; &lt;li&gt;Very &lt;strong&gt;low resource usage&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-platform&lt;/strong&gt;, runs on macOS, Linux and Windows. &lt;strong&gt;Docker&lt;/strong&gt; images are also provided&lt;/li&gt; &#xA; &lt;li&gt;Ready to use binaries for all major platforms, including &lt;strong&gt;Raspberry Pi&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatically &lt;strong&gt;monitors your library&lt;/strong&gt; for changes, importing new files and reloading new metadata&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Themeable&lt;/strong&gt;, modern and responsive &lt;strong&gt;Web interface&lt;/strong&gt; based on &lt;a href=&#34;https://material-ui.com&#34;&gt;Material UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compatible&lt;/strong&gt; with all Subsonic/Madsonic/Airsonic &lt;a href=&#34;https://www.navidrome.org/docs/overview/#apps&#34;&gt;clients&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Transcoding&lt;/strong&gt; on the fly. Can be set per user/player. &lt;strong&gt;Opus encoding is supported&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Translated to &lt;strong&gt;various languages&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;Navidrome uses &lt;a href=&#34;https://poeditor.com/&#34;&gt;POEditor&lt;/a&gt; for translations, and we are always looking for &lt;a href=&#34;https://www.navidrome.org/docs/developers/translations/&#34;&gt;more contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://poeditor.com/&#34;&gt; &lt;img height=&#34;32&#34; src=&#34;https://github.com/user-attachments/assets/c19b1d2b-01e1-4682-a007-12356c42147c&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All documentation can be found in the project&#39;s website: &lt;a href=&#34;https://www.navidrome.org/docs&#34;&gt;https://www.navidrome.org/docs&lt;/a&gt;. Here are some useful direct links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/overview/&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/installation/&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/installation/docker/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/installation/pre-built-binaries/&#34;&gt;Binaries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/installation/build-from-source/&#34;&gt;Build from source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/developers/&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/developers/subsonic-api/&#34;&gt;Subsonic API Compatibility&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img height=&#34;550&#34; src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-login.png&#34;&gt; &lt;img height=&#34;550&#34; src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-player.png&#34;&gt; &lt;img height=&#34;550&#34; src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-album-view.png&#34;&gt; &lt;img width=&#34;550&#34; src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-desktop-player.png&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>junegunn/fzf</title>
    <updated>2025-01-01T01:48:56Z</updated>
    <id>tag:github.com,2025-01-01:/junegunn/fzf</id>
    <link href="https://github.com/junegunn/fzf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üå∏ A command-line fuzzy finder&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;sup&gt;Special thanks to:&lt;/sup&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fzf_20240209&#34;&gt; &#xA;  &lt;div&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/junegunn/i/master/warp.png&#34; width=&#34;300&#34; alt=&#34;Warp&#34;&gt; &#xA;  &lt;/div&gt; &lt;b&gt;Warp is a modern, Rust-based terminal with AI built in so you and your team can build great software, faster.&lt;/b&gt; &#xA;  &lt;div&gt; &#xA;   &lt;sup&gt;Visit warp.dev to learn more.&lt;/sup&gt; &#xA;  &lt;/div&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/junegunn/i/master/fzf.png&#34; height=&#34;170&#34; alt=&#34;fzf - a command-line fuzzy finder&#34;&gt; &lt;a href=&#34;https://github.com/junegunn/fzf/actions&#34;&gt;&lt;img src=&#34;https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg?sanitize=true&#34; alt=&#34;github-actions&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;fzf is a general-purpose command-line fuzzy finder.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/junegunn/i/master/fzf-preview.png&#34; width=&#34;640&#34;&gt; &#xA;&lt;p&gt;It&#39;s an interactive filter program for any kind of list; files, command history, processes, hostnames, bookmarks, git commits, etc. It implements a &#34;fuzzy&#34; matching algorithm, so you can quickly type in patterns with omitted characters and still get the results you want.&lt;/p&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üì¶ &lt;strong&gt;Portable&lt;/strong&gt; ‚Äî Distributed as a single binary for easy installation&lt;/li&gt; &#xA; &lt;li&gt;‚ö° &lt;strong&gt;Blazingly fast&lt;/strong&gt; ‚Äî Highly optimized code instantly processes millions of items&lt;/li&gt; &#xA; &lt;li&gt;üõ†Ô∏è &lt;strong&gt;Extremely versatile&lt;/strong&gt; ‚Äî Fully customizable via an event-action binding mechanism&lt;/li&gt; &#xA; &lt;li&gt;üîã &lt;strong&gt;Batteries included&lt;/strong&gt; ‚Äî Includes integration with bash, zsh, fish, Vim, and Neovim&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors ‚ù§Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;I would like to thank all the sponsors of this project who make it possible for me to continue to improve fzf.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to sponsor this project, please visit &lt;a href=&#34;https://github.com/sponsors/junegunn&#34;&gt;https://github.com/sponsors/junegunn&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- sponsors --&gt;&#xA;&lt;a href=&#34;https://github.com/miyanokomiya&#34;&gt;&lt;img src=&#34;https://github.com/miyanokomiya.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: miyanokomiya&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jonhoo&#34;&gt;&lt;img src=&#34;https://github.com/jonhoo.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Jon Gjengset&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/AceofSpades5757&#34;&gt;&lt;img src=&#34;https://github.com/AceofSpades5757.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Kyle L. Davis&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/Frederick888&#34;&gt;&lt;img src=&#34;https://github.com/Frederick888.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Frederick Zhang&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/moritzdietz&#34;&gt;&lt;img src=&#34;https://github.com/moritzdietz.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Moritz Dietz&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/mikker&#34;&gt;&lt;img src=&#34;https://github.com/mikker.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Mikkel Malmberg&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/pldubouilh&#34;&gt;&lt;img src=&#34;https://github.com/pldubouilh.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Pierre Dubouilh&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/trantor&#34;&gt;&lt;img src=&#34;https://github.com/trantor.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Fulvio Scapin&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/rcorre&#34;&gt;&lt;img src=&#34;https://github.com/rcorre.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Ryan Roden-Corrent&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/blissdev&#34;&gt;&lt;img src=&#34;https://github.com/blissdev.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Jordan Arentsen&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/aexvir&#34;&gt;&lt;img src=&#34;https://github.com/aexvir.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Alex Viscreanu&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/dbalatero&#34;&gt;&lt;img src=&#34;https://github.com/dbalatero.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: David Balatero&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/moobar&#34;&gt;&lt;img src=&#34;https://github.com/moobar.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: &#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/benelan&#34;&gt;&lt;img src=&#34;https://github.com/benelan.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Ben Elan&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/pawelduda&#34;&gt;&lt;img src=&#34;https://github.com/pawelduda.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Pawe≈Ç Duda&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/slezica&#34;&gt;&lt;img src=&#34;https://github.com/slezica.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Santiago Lezica&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/pbwn&#34;&gt;&lt;img src=&#34;https://github.com/pbwn.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: &#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/pyrho&#34;&gt;&lt;img src=&#34;https://github.com/pyrho.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Damien Rajon&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/ArtBIT&#34;&gt;&lt;img src=&#34;https://github.com/ArtBIT.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: ArtBIT&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/da-moon&#34;&gt;&lt;img src=&#34;https://github.com/da-moon.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: &#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/hovissimo&#34;&gt;&lt;img src=&#34;https://github.com/hovissimo.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Hovis&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/Yarden-zamir&#34;&gt;&lt;img src=&#34;https://github.com/Yarden-zamir.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Yarden zamir&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/dariusjonda&#34;&gt;&lt;img src=&#34;https://github.com/dariusjonda.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Darius Jonda&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/cristiand391&#34;&gt;&lt;img src=&#34;https://github.com/cristiand391.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Cristian Dominguez&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/eliangcs&#34;&gt;&lt;img src=&#34;https://github.com/eliangcs.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Chang-Hung Liang&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/asphaltbuffet&#34;&gt;&lt;img src=&#34;https://github.com/asphaltbuffet.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Ben Lechlitner&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/looshch&#34;&gt;&lt;img src=&#34;https://github.com/looshch.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: george looshch&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/kg8m&#34;&gt;&lt;img src=&#34;https://github.com/kg8m.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Takumi KAGIYAMA&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/polm&#34;&gt;&lt;img src=&#34;https://github.com/polm.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Paul OLeary McCann&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/rbeeger&#34;&gt;&lt;img src=&#34;https://github.com/rbeeger.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Robert Beeger&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/yowayb&#34;&gt;&lt;img src=&#34;https://github.com/yowayb.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Yoway Buorn&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/scalisi&#34;&gt;&lt;img src=&#34;https://github.com/scalisi.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Josh Scalisi&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/alecbcs&#34;&gt;&lt;img src=&#34;https://github.com/alecbcs.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Alec Scott&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/thnxdev&#34;&gt;&lt;img src=&#34;https://github.com/thnxdev.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: thanks.dev&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/artursapek&#34;&gt;&lt;img src=&#34;https://github.com/artursapek.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Artur Sapek&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/ramnes&#34;&gt;&lt;img src=&#34;https://github.com/ramnes.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Guillaume Gelin&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jyc&#34;&gt;&lt;img src=&#34;https://github.com/jyc.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: &#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/roblevy&#34;&gt;&lt;img src=&#34;https://github.com/roblevy.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Rob Levy&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/glozow&#34;&gt;&lt;img src=&#34;https://github.com/glozow.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Gloria Zhao&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/toupeira&#34;&gt;&lt;img src=&#34;https://github.com/toupeira.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Markus Koller&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/rkpatel33&#34;&gt;&lt;img src=&#34;https://github.com/rkpatel33.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: &#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jamesob&#34;&gt;&lt;img src=&#34;https://github.com/jamesob.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: jamesob&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jlebray&#34;&gt;&lt;img src=&#34;https://github.com/jlebray.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Johan Le Bray&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/panosl1&#34;&gt;&lt;img src=&#34;https://github.com/panosl1.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Panos Lampropoulos&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/bespinian&#34;&gt;&lt;img src=&#34;https://github.com/bespinian.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: bespinian&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/scosu&#34;&gt;&lt;img src=&#34;https://github.com/scosu.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Markus Schneider-Pargmann&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/smithbm2316&#34;&gt;&lt;img src=&#34;https://github.com/smithbm2316.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Ben Smith&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/charlieegan3&#34;&gt;&lt;img src=&#34;https://github.com/charlieegan3.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Charlie Egan&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/thobbs&#34;&gt;&lt;img src=&#34;https://github.com/thobbs.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Tyler Hobbs&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/neilparikh&#34;&gt;&lt;img src=&#34;https://github.com/neilparikh.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Neil Parikh&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/shkm&#34;&gt;&lt;img src=&#34;https://github.com/shkm.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Jamie Schembri&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/BasedScience&#34;&gt;&lt;img src=&#34;https://github.com/BasedScience.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: dockien&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/RussellGilmore&#34;&gt;&lt;img src=&#34;https://github.com/RussellGilmore.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Russell Gilmore&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/meribold&#34;&gt;&lt;img src=&#34;https://github.com/meribold.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Lukas Waymann&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/terminaldweller&#34;&gt;&lt;img src=&#34;https://github.com/terminaldweller.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Farzad Sadeghi&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/jaydee-coder&#34;&gt;&lt;img src=&#34;https://github.com/jaydee-coder.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: &#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/kazuhideoki&#34;&gt;&lt;img src=&#34;https://github.com/kazuhideoki.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Kazuhide Oki&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/TaNorbs&#34;&gt;&lt;img src=&#34;https://github.com/TaNorbs.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Norbs&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/iveteran&#34;&gt;&lt;img src=&#34;https://github.com/iveteran.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Yu&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/fvalasiad&#34;&gt;&lt;img src=&#34;https://github.com/fvalasiad.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Fotios Valasiadis&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/chillax&#34;&gt;&lt;img src=&#34;https://github.com/chillax.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Joonas Korhonen&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/brpaz&#34;&gt;&lt;img src=&#34;https://github.com/brpaz.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Bruno Paz&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/flanaras&#34;&gt;&lt;img src=&#34;https://github.com/flanaras.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Filippos Lanaras&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/freshleafmedia&#34;&gt;&lt;img src=&#34;https://github.com/freshleafmedia.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Freshleaf Media&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/Unambiguous&#34;&gt;&lt;img src=&#34;https://github.com/Unambiguous.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: &#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/timobenn&#34;&gt;&lt;img src=&#34;https://github.com/timobenn.png&#34; width=&#34;60px&#34; alt=&#34;User avatar: Timothy Bennett&#34;&gt;&lt;/a&gt;&#xA;&lt;!-- sponsors --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- vim-markdown-toc GFM --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#using-homebrew&#34;&gt;Using Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#linux-packages&#34;&gt;Linux packages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#windows-packages&#34;&gt;Windows packages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#using-git&#34;&gt;Using git&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#binary-releases&#34;&gt;Binary releases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration&#34;&gt;Setting up shell integration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#vimneovim-plugin&#34;&gt;Vim/Neovim plugin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#upgrading-fzf&#34;&gt;Upgrading fzf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#building-fzf&#34;&gt;Building fzf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#using-the-finder&#34;&gt;Using the finder&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#display-modes&#34;&gt;Display modes&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#--height-mode&#34;&gt;&lt;code&gt;--height&lt;/code&gt; mode&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#--tmux-mode&#34;&gt;&lt;code&gt;--tmux&lt;/code&gt; mode&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#search-syntax&#34;&gt;Search syntax&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#environment-variables&#34;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#key-bindings-for-command-line&#34;&gt;Key bindings for command-line&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#fuzzy-completion-for-bash-and-zsh&#34;&gt;Fuzzy completion for bash and zsh&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#files-and-directories&#34;&gt;Files and directories&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#process-ids&#34;&gt;Process IDs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#host-names&#34;&gt;Host names&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#environment-variables--aliases&#34;&gt;Environment variables / Aliases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-fzf-options-for-completion&#34;&gt;Customizing fzf options for completion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-completion-source-for-paths-and-directories&#34;&gt;Customizing completion source for paths and directories&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#supported-commands&#34;&gt;Supported commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#custom-fuzzy-completion&#34;&gt;Custom fuzzy completion&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#vim-plugin&#34;&gt;Vim plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#advanced-topics&#34;&gt;Advanced topics&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#executing-external-programs&#34;&gt;Executing external programs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#turning-into-a-different-process&#34;&gt;Turning into a different process&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#reloading-the-candidate-list&#34;&gt;Reloading the candidate list&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#1-update-the-list-of-processes-by-pressing-ctrl-r&#34;&gt;1. Update the list of processes by pressing CTRL-R&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#2-switch-between-sources-by-pressing-ctrl-d-or-ctrl-f&#34;&gt;2. Switch between sources by pressing CTRL-D or CTRL-F&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#3-interactive-ripgrep-integration&#34;&gt;3. Interactive ripgrep integration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#preview-window&#34;&gt;Preview window&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#previewing-an-image&#34;&gt;Previewing an image&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#tips&#34;&gt;Tips&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#respecting-gitignore&#34;&gt;Respecting &lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#fish-shell&#34;&gt;Fish shell&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#fzf-theme-playground&#34;&gt;fzf Theme Playground&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#related-projects&#34;&gt;Related projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- vim-markdown-toc --&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Using Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; (on macOS or Linux) to install fzf.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install fzf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] To set up shell integration (key bindings and fuzzy completion), see &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration&#34;&gt;the instructions below&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;fzf is also available &lt;a href=&#34;https://github.com/macports/macports-ports/raw/master/sysutils/fzf/Portfile&#34;&gt;via MacPorts&lt;/a&gt;: &lt;code&gt;sudo port install fzf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux packages&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package Manager&lt;/th&gt; &#xA;   &lt;th&gt;Linux Distribution&lt;/th&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;APK&lt;/td&gt; &#xA;   &lt;td&gt;Alpine Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo apk add fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;APT&lt;/td&gt; &#xA;   &lt;td&gt;Debian 9+/Ubuntu 19.10+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo apt install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Conda&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;conda install -c conda-forge fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DNF&lt;/td&gt; &#xA;   &lt;td&gt;Fedora&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo dnf install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nix&lt;/td&gt; &#xA;   &lt;td&gt;NixOS, etc.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nix-env -iA nixpkgs.fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pacman&lt;/td&gt; &#xA;   &lt;td&gt;Arch Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo pacman -S fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pkg&lt;/td&gt; &#xA;   &lt;td&gt;FreeBSD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pkg install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pkgin&lt;/td&gt; &#xA;   &lt;td&gt;NetBSD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pkgin install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pkg_add&lt;/td&gt; &#xA;   &lt;td&gt;OpenBSD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pkg_add fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Portage&lt;/td&gt; &#xA;   &lt;td&gt;Gentoo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;emerge --ask app-shells/fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spack&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;spack install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XBPS&lt;/td&gt; &#xA;   &lt;td&gt;Void Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo xbps-install -S fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Zypper&lt;/td&gt; &#xA;   &lt;td&gt;openSUSE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo zypper install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] To set up shell integration (key bindings and fuzzy completion), see &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration&#34;&gt;the instructions below&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/fzf/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/fzf.svg?columns=3&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Windows packages&lt;/h3&gt; &#xA;&lt;p&gt;On Windows, fzf is available via &lt;a href=&#34;https://chocolatey.org/packages/fzf&#34;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&#34;https://github.com/ScoopInstaller/Main/raw/master/bucket/fzf.json&#34;&gt;Scoop&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/winget-pkgs/tree/master/manifests/j/junegunn/fzf&#34;&gt;Winget&lt;/a&gt;, and &lt;a href=&#34;https://packages.msys2.org/base/mingw-w64-fzf&#34;&gt;MSYS2&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package manager&lt;/th&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chocolatey&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;choco install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scoop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;scoop install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Winget&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;winget install fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MSYS2 (pacman)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pacman -S $MINGW_PACKAGE_PREFIX-fzf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Using git&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, you can &#34;git clone&#34; this repository to any directory and run &lt;a href=&#34;https://github.com/junegunn/fzf/raw/master/install&#34;&gt;install&lt;/a&gt; script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf&#xA;~/.fzf/install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The install script will add lines to your shell configuration file to modify &lt;code&gt;$PATH&lt;/code&gt; and set up shell integration.&lt;/p&gt; &#xA;&lt;h3&gt;Binary releases&lt;/h3&gt; &#xA;&lt;p&gt;You can download the official fzf binaries from the releases page.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/junegunn/fzf/releases&#34;&gt;https://github.com/junegunn/fzf/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setting up shell integration&lt;/h3&gt; &#xA;&lt;p&gt;Add the following line to your shell configuration file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bash &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Set up fzf key bindings and fuzzy completion&#xA;eval &#34;$(fzf --bash)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;zsh &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Set up fzf key bindings and fuzzy completion&#xA;source &amp;lt;(fzf --zsh)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;fish &lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;# Set up fzf key bindings&#xA;fzf --fish | source&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;code&gt;--bash&lt;/code&gt;, &lt;code&gt;--zsh&lt;/code&gt;, and &lt;code&gt;--fish&lt;/code&gt; options are only available in fzf 0.48.0 or later. If you have an older version of fzf, or want finer control, you can source individual script files in the &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/shell&#34;&gt;/shell&lt;/a&gt; directory. The location of the files may vary depending on the package manager you use. Please refer to the package documentation for more information. (e.g. &lt;code&gt;apt show fzf&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You can disable CTRL-T or ALT-C binding by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; or &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to an empty string when sourcing the script. For example, to disable ALT-C binding:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;bash: &lt;code&gt;FZF_ALT_C_COMMAND= eval &#34;$(fzf --bash)&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;zsh: &lt;code&gt;FZF_ALT_C_COMMAND= source &amp;lt;(fzf --zsh)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;fish: &lt;code&gt;fzf --fish | FZF_ALT_C_COMMAND= source&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Setting the variables after sourcing the script will have no effect.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Vim/Neovim plugin&lt;/h3&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;, add this to your Vim configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;junegunn/fzf&#39;, { &#39;do&#39;: { -&amp;gt; fzf#install() } }&#xA;Plug &#39;junegunn/fzf.vim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;junegunn/fzf&lt;/code&gt; provides the basic library functions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;fzf#install()&lt;/code&gt; makes sure that you have the latest binary&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;junegunn/fzf.vim&lt;/code&gt; is &lt;a href=&#34;https://github.com/junegunn/fzf.vim&#34;&gt;a separate project&lt;/a&gt; that provides a variety of useful commands&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To learn more about the Vim integration, see &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/README-VIM.md&#34;&gt;README-VIM.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] If you use Neovim and prefer Lua-based plugins, check out &lt;a href=&#34;https://github.com/ibhagwan/fzf-lua&#34;&gt;fzf-lua&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Upgrading fzf&lt;/h2&gt; &#xA;&lt;p&gt;fzf is being actively developed, and you might want to upgrade it once in a while. Please follow the instruction below depending on the installation method used.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git: &lt;code&gt;cd ~/.fzf &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; ./install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;brew: &lt;code&gt;brew update; brew upgrade fzf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;macports: &lt;code&gt;sudo port upgrade fzf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;chocolatey: &lt;code&gt;choco upgrade fzf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;vim-plug: &lt;code&gt;:PlugUpdate fzf&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building fzf&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;fzf will launch interactive finder, read the list from STDIN, and write the selected item to STDOUT.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;find * -type f | fzf &amp;gt; selected&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Without STDIN pipe, fzf will traverse the file system under the current directory to get the list of files.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;vim $(fzf)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] You can override the default behavior&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Either by setting &lt;code&gt;$FZF_DEFAULT_COMMAND&lt;/code&gt; to a command that generates the desired list&lt;/li&gt; &#xA;  &lt;li&gt;Or by setting &lt;code&gt;--walker&lt;/code&gt;, &lt;code&gt;--walker-root&lt;/code&gt;, and &lt;code&gt;--walker-skip&lt;/code&gt; options in &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] A more robust solution would be to use &lt;code&gt;xargs&lt;/code&gt; but we&#39;ve presented the above as it&#39;s easier to grasp&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;fzf --print0 | xargs -0 -o vim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] fzf also has the ability to turn itself into a different process.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;fzf --bind &#39;enter:become(vim {})&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#turning-into-a-different-process&#34;&gt;Turning into a different process&lt;/a&gt; for more information.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Using the finder&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CTRL-K&lt;/code&gt; / &lt;code&gt;CTRL-J&lt;/code&gt; (or &lt;code&gt;CTRL-P&lt;/code&gt; / &lt;code&gt;CTRL-N&lt;/code&gt;) to move cursor up and down&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Enter&lt;/code&gt; key to select the item, &lt;code&gt;CTRL-C&lt;/code&gt; / &lt;code&gt;CTRL-G&lt;/code&gt; / &lt;code&gt;ESC&lt;/code&gt; to exit&lt;/li&gt; &#xA; &lt;li&gt;On multi-select mode (&lt;code&gt;-m&lt;/code&gt;), &lt;code&gt;TAB&lt;/code&gt; and &lt;code&gt;Shift-TAB&lt;/code&gt; to mark multiple items&lt;/li&gt; &#xA; &lt;li&gt;Emacs style key bindings&lt;/li&gt; &#xA; &lt;li&gt;Mouse: scroll, click, double-click; shift-click and shift-scroll on multi-select mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Display modes&lt;/h3&gt; &#xA;&lt;p&gt;fzf by default runs in fullscreen mode, but there are other display modes.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;--height&lt;/code&gt; mode&lt;/h4&gt; &#xA;&lt;p&gt;With &lt;code&gt;--height HEIGHT[%]&lt;/code&gt;, fzf will start below the cursor with the given height.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;fzf --height 40%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;reverse&lt;/code&gt; layout and &lt;code&gt;--border&lt;/code&gt; goes well with this option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;fzf --height 40% --layout reverse --border&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By prepending &lt;code&gt;~&lt;/code&gt; to the height, you&#39;re setting the maximum height.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Will take as few lines as possible to display the list&#xA;seq 3 | fzf --height ~100%&#xA;seq 3000 | fzf --height ~100%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Height value can be a negative number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Screen height - 3&#xA;fzf --height -3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;--tmux&lt;/code&gt; mode&lt;/h4&gt; &#xA;&lt;p&gt;With &lt;code&gt;--tmux&lt;/code&gt; option, fzf will start in a tmux popup.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# --tmux [center|top|bottom|left|right][,SIZE[%]][,SIZE[%]]&#xA;&#xA;fzf --tmux center         # Center, 50% width and height&#xA;fzf --tmux 80%            # Center, 80% width and height&#xA;fzf --tmux 100%,50%       # Center, 100% width and 50% height&#xA;fzf --tmux left,40%       # Left, 40% width&#xA;fzf --tmux left,40%,90%   # Left, 40% width, 90% height&#xA;fzf --tmux top,40%        # Top, 40% height&#xA;fzf --tmux bottom,80%,40% # Bottom, 80% height, 40% height&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;--tmux&lt;/code&gt; is silently ignored when you&#39;re not on tmux.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] If you&#39;re stuck with an old version of tmux that doesn&#39;t support popup, or if you want to open fzf in a regular tmux pane, check out &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/bin/fzf-tmux&#34;&gt;fzf-tmux&lt;/a&gt; script.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You can add these options to &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt; so that they&#39;re applied by default. For example,&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Open in tmux popup if on tmux, otherwise use --height mode&#xA;export FZF_DEFAULT_OPTS=&#39;--height 40% --tmux bottom,40% --layout reverse --border top&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Search syntax&lt;/h3&gt; &#xA;&lt;p&gt;Unless otherwise specified, fzf starts in &#34;extended-search mode&#34; where you can type in multiple search terms delimited by spaces. e.g. &lt;code&gt;^music .mp3$ sbtrkt !fire&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Token&lt;/th&gt; &#xA;   &lt;th&gt;Match type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sbtrkt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fuzzy-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that match &lt;code&gt;sbtrkt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;wild&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;exact-match (quoted)&lt;/td&gt; &#xA;   &lt;td&gt;Items that include &lt;code&gt;wild&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;wild&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;exact-boundary-match (quoted both ends)&lt;/td&gt; &#xA;   &lt;td&gt;Items that include &lt;code&gt;wild&lt;/code&gt; at word boundaries&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;^music&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;prefix-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that start with &lt;code&gt;music&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;.mp3$&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;suffix-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that end with &lt;code&gt;.mp3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;!fire&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;inverse-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that do not include &lt;code&gt;fire&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;!^music&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;inverse-prefix-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that do not start with &lt;code&gt;music&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;!.mp3$&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;inverse-suffix-exact-match&lt;/td&gt; &#xA;   &lt;td&gt;Items that do not end with &lt;code&gt;.mp3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you don&#39;t prefer fuzzy matching and do not wish to &#34;quote&#34; every word, start fzf with &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--exact&lt;/code&gt; option. Note that when &lt;code&gt;--exact&lt;/code&gt; is set, &lt;code&gt;&#39;&lt;/code&gt;-prefix &#34;unquotes&#34; the term.&lt;/p&gt; &#xA;&lt;p&gt;A single bar character term acts as an OR operator. For example, the following query matches entries that start with &lt;code&gt;core&lt;/code&gt; and end with either &lt;code&gt;go&lt;/code&gt;, &lt;code&gt;rb&lt;/code&gt;, or &lt;code&gt;py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;^core go$ | rb$ | py$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;FZF_DEFAULT_COMMAND&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default command to use when input is tty&lt;/li&gt; &#xA;   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_COMMAND=&#39;fd --type f&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FZF_DEFAULT_OPTS&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default options&lt;/li&gt; &#xA;   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_OPTS=&#34;--layout=reverse --inline-info&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FZF_DEFAULT_OPTS_FILE&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you prefer to manage default options in a file, set this variable to point to the location of the file&lt;/li&gt; &#xA;   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_OPTS_FILE=~/.fzfrc&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;code&gt;FZF_DEFAULT_COMMAND&lt;/code&gt; is not used by shell integration due to the slight difference in requirements.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;CTRL-T&lt;/code&gt; runs &lt;code&gt;$FZF_CTRL_T_COMMAND&lt;/code&gt; to get a list of files and directories&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;ALT-C&lt;/code&gt; runs &lt;code&gt;$FZF_ALT_C_COMMAND&lt;/code&gt; to get a list of directories&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;vim ~/**&amp;lt;tab&amp;gt;&lt;/code&gt; runs &lt;code&gt;fzf_compgen_path()&lt;/code&gt; with the prefix (&lt;code&gt;~/&lt;/code&gt;) as the first argument&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;cd foo**&amp;lt;tab&amp;gt;&lt;/code&gt; runs &lt;code&gt;fzf_compgen_dir()&lt;/code&gt; with the prefix (&lt;code&gt;foo&lt;/code&gt;) as the first argument&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;The available options are described later in this document.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;See the man page (&lt;code&gt;man fzf&lt;/code&gt;) for the full list of options.&lt;/p&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;If you learn by watching videos, check out this screencast by &lt;a href=&#34;https://github.com/samoshkin&#34;&gt;@samoshkin&lt;/a&gt; to explore &lt;code&gt;fzf&lt;/code&gt; features.&lt;/p&gt; &#xA;&lt;a title=&#34;fzf - command-line fuzzy finder&#34; href=&#34;https://www.youtube.com/watch?v=qgG5Jhi_Els&#34;&gt; &lt;img src=&#34;https://i.imgur.com/vtG8olE.png&#34; width=&#34;640&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/junegunn/fzf/wiki/examples&#34;&gt;Wiki page of examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Disclaimer: The examples on this page are maintained by the community and are not thoroughly tested&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/junegunn/fzf/raw/master/ADVANCED.md&#34;&gt;Advanced fzf examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Key bindings for command-line&lt;/h2&gt; &#xA;&lt;p&gt;By &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration&#34;&gt;setting up shell integration&lt;/a&gt;, you can use the following key bindings in bash, zsh, and fish.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CTRL-T&lt;/code&gt; - Paste the selected files and directories onto the command-line &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The list is generated using &lt;code&gt;--walker file,dir,follow,hidden&lt;/code&gt; option &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can override the behavior by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; to a custom command that generates the desired list&lt;/li&gt; &#xA;     &lt;li&gt;Or you can set &lt;code&gt;--walker*&lt;/code&gt; options in &lt;code&gt;FZF_CTRL_T_OPTS&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;FZF_CTRL_T_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Preview file content using bat (https://github.com/sharkdp/bat)&#xA;export FZF_CTRL_T_OPTS=&#34;&#xA;  --walker-skip .git,node_modules,target&#xA;  --preview &#39;bat -n --color=always {}&#39;&#xA;  --bind &#39;ctrl-/:change-preview-window(down|hidden|)&#39;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Can be disabled by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; to an empty string when sourcing the script&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CTRL-R&lt;/code&gt; - Paste the selected command from history onto the command-line &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you want to see the commands in chronological order, press &lt;code&gt;CTRL-R&lt;/code&gt; again which toggles sorting by relevance&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;code&gt;CTRL-/&lt;/code&gt; or &lt;code&gt;ALT-/&lt;/code&gt; to toggle line wrapping&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;FZF_CTRL_R_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# CTRL-Y to copy the command into clipboard using pbcopy&#xA;export FZF_CTRL_R_OPTS=&#34;&#xA;  --bind &#39;ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort&#39;&#xA;  --color header:italic&#xA;  --header &#39;Press CTRL-Y to copy command into clipboard&#39;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ALT-C&lt;/code&gt; - cd into the selected directory &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The list is generated using &lt;code&gt;--walker dir,follow,hidden&lt;/code&gt; option&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to override the default command &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Or you can set &lt;code&gt;--walker-*&lt;/code&gt; options in &lt;code&gt;FZF_ALT_C_OPTS&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;FZF_ALT_C_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Print tree structure in the preview window&#xA;export FZF_ALT_C_OPTS=&#34;&#xA;  --walker-skip .git,node_modules,target&#xA;  --preview &#39;tree -C {}&#39;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Can be disabled by setting &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to an empty string when sourcing the script&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Display modes for these bindings can be separately configured via &lt;code&gt;FZF_{CTRL_T,CTRL_R,ALT_C}_OPTS&lt;/code&gt; or globally via &lt;code&gt;FZF_DEFAULT_OPTS&lt;/code&gt;. (e.g. &lt;code&gt;FZF_CTRL_R_OPTS=&#39;--tmux bottom,60% --height 60% --border top&#39;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;More tips can be found on &lt;a href=&#34;https://github.com/junegunn/fzf/wiki/Configuring-shell-key-bindings&#34;&gt;the wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Fuzzy completion for bash and zsh&lt;/h2&gt; &#xA;&lt;h3&gt;Files and directories&lt;/h3&gt; &#xA;&lt;p&gt;Fuzzy completion for files and directories can be triggered if the word before the cursor ends with the trigger sequence, which is by default &lt;code&gt;**&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;COMMAND [DIRECTORY/][FUZZY_PATTERN]**&amp;lt;TAB&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Files under the current directory&#xA;# - You can select multiple items with TAB key&#xA;vim **&amp;lt;TAB&amp;gt;&#xA;&#xA;# Files under parent directory&#xA;vim ../**&amp;lt;TAB&amp;gt;&#xA;&#xA;# Files under parent directory that match `fzf`&#xA;vim ../fzf**&amp;lt;TAB&amp;gt;&#xA;&#xA;# Files under your home directory&#xA;vim ~/**&amp;lt;TAB&amp;gt;&#xA;&#xA;&#xA;# Directories under current directory (single-selection)&#xA;cd **&amp;lt;TAB&amp;gt;&#xA;&#xA;# Directories under ~/github that match `fzf`&#xA;cd ~/github/fzf**&amp;lt;TAB&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Process IDs&lt;/h3&gt; &#xA;&lt;p&gt;Fuzzy completion for PIDs is provided for kill command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Can select multiple processes with &amp;lt;TAB&amp;gt; or &amp;lt;Shift-TAB&amp;gt; keys&#xA;kill -9 **&amp;lt;TAB&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Host names&lt;/h3&gt; &#xA;&lt;p&gt;For ssh and telnet commands, fuzzy completion for hostnames is provided. The names are extracted from /etc/hosts and ~/.ssh/config.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ssh **&amp;lt;TAB&amp;gt;&#xA;telnet **&amp;lt;TAB&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment variables / Aliases&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;unset **&amp;lt;TAB&amp;gt;&#xA;export **&amp;lt;TAB&amp;gt;&#xA;unalias **&amp;lt;TAB&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing fzf options for completion&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Use ~~ as the trigger sequence instead of the default **&#xA;export FZF_COMPLETION_TRIGGER=&#39;~~&#39;&#xA;&#xA;# Options to fzf command&#xA;export FZF_COMPLETION_OPTS=&#39;--border --info=inline&#39;&#xA;&#xA;# Options for path completion (e.g. vim **&amp;lt;TAB&amp;gt;)&#xA;export FZF_COMPLETION_PATH_OPTS=&#39;--walker file,dir,follow,hidden&#39;&#xA;&#xA;# Options for directory completion (e.g. cd **&amp;lt;TAB&amp;gt;)&#xA;export FZF_COMPLETION_DIR_OPTS=&#39;--walker dir,follow&#39;&#xA;&#xA;# Advanced customization of fzf options via _fzf_comprun function&#xA;# - The first argument to the function is the name of the command.&#xA;# - You should make sure to pass the rest of the arguments ($@) to fzf.&#xA;_fzf_comprun() {&#xA;  local command=$1&#xA;  shift&#xA;&#xA;  case &#34;$command&#34; in&#xA;    cd)           fzf --preview &#39;tree -C {} | head -200&#39;   &#34;$@&#34; ;;&#xA;    export|unset) fzf --preview &#34;eval &#39;echo \$&#39;{}&#34;         &#34;$@&#34; ;;&#xA;    ssh)          fzf --preview &#39;dig {}&#39;                   &#34;$@&#34; ;;&#xA;    *)            fzf --preview &#39;bat -n --color=always {}&#39; &#34;$@&#34; ;;&#xA;  esac&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing completion source for paths and directories&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Use fd (https://github.com/sharkdp/fd) for listing path candidates.&#xA;# - The first argument to the function ($1) is the base path to start traversal&#xA;# - See the source code (completion.{bash,zsh}) for the details.&#xA;_fzf_compgen_path() {&#xA;  fd --hidden --follow --exclude &#34;.git&#34; . &#34;$1&#34;&#xA;}&#xA;&#xA;# Use fd to generate the list for directory completion&#xA;_fzf_compgen_dir() {&#xA;  fd --type d --hidden --follow --exclude &#34;.git&#34; . &#34;$1&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Supported commands&lt;/h3&gt; &#xA;&lt;p&gt;On bash, fuzzy completion is enabled only for a predefined set of commands (&lt;code&gt;complete | grep _fzf&lt;/code&gt; to see the list). But you can enable it for other commands as well by using &lt;code&gt;_fzf_setup_completion&lt;/code&gt; helper function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# usage: _fzf_setup_completion path|dir|var|alias|host COMMANDS...&#xA;_fzf_setup_completion path ag git kubectl&#xA;_fzf_setup_completion dir tree&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom fuzzy completion&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;(Custom completion API is experimental and subject to change)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;For a command named &lt;em&gt;&#34;COMMAND&#34;&lt;/em&gt;, define &lt;code&gt;_fzf_complete_COMMAND&lt;/code&gt; function using &lt;code&gt;_fzf_complete&lt;/code&gt; helper.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Custom fuzzy completion for &#34;doge&#34; command&#xA;#   e.g. doge **&amp;lt;TAB&amp;gt;&#xA;_fzf_complete_doge() {&#xA;  _fzf_complete --multi --reverse --prompt=&#34;doge&amp;gt; &#34; -- &#34;$@&#34; &amp;lt; &amp;lt;(&#xA;    echo very&#xA;    echo wow&#xA;    echo such&#xA;    echo doge&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The arguments before &lt;code&gt;--&lt;/code&gt; are the options to fzf.&lt;/li&gt; &#xA; &lt;li&gt;After &lt;code&gt;--&lt;/code&gt;, simply pass the original completion arguments unchanged (&lt;code&gt;&#34;$@&#34;&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Then, write a set of commands that generates the completion candidates and feed its output to the function using process substitution (&lt;code&gt;&amp;lt; &amp;lt;(...)&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;zsh will automatically pick up the function using the naming convention but in bash you have to manually associate the function with the command using the &lt;code&gt;complete&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;[ -n &#34;$BASH&#34; ] &amp;amp;&amp;amp; complete -F _fzf_complete_doge -o default -o bashdefault doge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to post-process the output from fzf, define &lt;code&gt;_fzf_complete_COMMAND_post&lt;/code&gt; as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;_fzf_complete_foo() {&#xA;  _fzf_complete --multi --reverse --header-lines=3 -- &#34;$@&#34; &amp;lt; &amp;lt;(&#xA;    ls -al&#xA;  )&#xA;}&#xA;&#xA;_fzf_complete_foo_post() {&#xA;  awk &#39;{print $NF}&#39;&#xA;}&#xA;&#xA;[ -n &#34;$BASH&#34; ] &amp;amp;&amp;amp; complete -F _fzf_complete_foo -o default -o bashdefault foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Vim plugin&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/README-VIM.md&#34;&gt;README-VIM.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced topics&lt;/h2&gt; &#xA;&lt;h3&gt;Performance&lt;/h3&gt; &#xA;&lt;p&gt;fzf is fast. Performance should not be a problem in most use cases. However, you might want to be aware of the options that can affect performance.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--ansi&lt;/code&gt; tells fzf to extract and parse ANSI color codes in the input, and it makes the initial scanning slower. So it&#39;s not recommended that you add it to your &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--nth&lt;/code&gt; makes fzf slower because it has to tokenize each line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--with-nth&lt;/code&gt; makes fzf slower as fzf has to tokenize and reassemble each line.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Executing external programs&lt;/h3&gt; &#xA;&lt;p&gt;You can set up key bindings for starting external processes without leaving fzf (&lt;code&gt;execute&lt;/code&gt;, &lt;code&gt;execute-silent&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Press F1 to open the file with less without leaving fzf&#xA;# Press CTRL-Y to copy the line to clipboard and aborts fzf (requires pbcopy)&#xA;fzf --bind &#39;f1:execute(less -f {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;em&gt;KEY BINDINGS&lt;/em&gt; section of the man page for details.&lt;/p&gt; &#xA;&lt;h3&gt;Turning into a different process&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;become(...)&lt;/code&gt; is similar to &lt;code&gt;execute(...)&lt;/code&gt;/&lt;code&gt;execute-silent(...)&lt;/code&gt; described above, but instead of executing the command and coming back to fzf on complete, it turns fzf into a new process for the command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;fzf --bind &#39;enter:become(vim {})&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compared to the seemingly equivalent command substitution &lt;code&gt;vim &#34;$(fzf)&#34;&lt;/code&gt;, this approach has several advantages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vim will not open an empty file when you terminate fzf with &lt;kbd&gt;CTRL-C&lt;/kbd&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vim will not open an empty file when you press &lt;kbd&gt;ENTER&lt;/kbd&gt; on an empty result&lt;/li&gt; &#xA; &lt;li&gt;Can handle multiple selections even when they have whitespaces &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;fzf --multi --bind &#39;enter:become(vim {+})&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To be fair, running &lt;code&gt;fzf --print0 | xargs -0 -o vim&lt;/code&gt; instead of &lt;code&gt;vim &#34;$(fzf)&#34;&lt;/code&gt; resolves all of the issues mentioned. Nonetheless, &lt;code&gt;become(...)&lt;/code&gt; still offers additional benefits in different scenarios.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can set up multiple bindings to handle the result in different ways without any wrapping script &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;fzf --bind &#39;enter:become(vim {}),ctrl-e:become(emacs {})&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Previously, you would have to use &lt;code&gt;--expect=ctrl-e&lt;/code&gt; and check the first line of the output of fzf&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can easily build the subsequent command using the field index expressions of fzf &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Open the file in Vim and go to the line&#xA;git grep --line-number . |&#xA;    fzf --delimiter : --nth 3.. --bind &#39;enter:become(vim {1} +{2})&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reloading the candidate list&lt;/h3&gt; &#xA;&lt;p&gt;By binding &lt;code&gt;reload&lt;/code&gt; action to a key or an event, you can make fzf dynamically reload the candidate list. See &lt;a href=&#34;https://github.com/junegunn/fzf/issues/1750&#34;&gt;https://github.com/junegunn/fzf/issues/1750&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h4&gt;1. Update the list of processes by pressing CTRL-R&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ps -ef |&#xA;  fzf --bind &#39;ctrl-r:reload(ps -ef)&#39; \&#xA;      --header &#39;Press CTRL-R to reload&#39; --header-lines=1 \&#xA;      --height=50% --layout=reverse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Switch between sources by pressing CTRL-D or CTRL-F&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;FZF_DEFAULT_COMMAND=&#39;find . -type f&#39; \&#xA;  fzf --bind &#39;ctrl-d:reload(find . -type d),ctrl-f:reload(eval &#34;$FZF_DEFAULT_COMMAND&#34;)&#39; \&#xA;      --height=50% --layout=reverse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Interactive ripgrep integration&lt;/h4&gt; &#xA;&lt;p&gt;The following example uses fzf as the selector interface for ripgrep. We bound &lt;code&gt;reload&lt;/code&gt; action to &lt;code&gt;change&lt;/code&gt; event, so every time you type on fzf, the ripgrep process will restart with the updated query string denoted by the placeholder expression &lt;code&gt;{q}&lt;/code&gt;. Also, note that we used &lt;code&gt;--disabled&lt;/code&gt; option so that fzf doesn&#39;t perform any secondary filtering.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;: | rg_prefix=&#39;rg --column --line-number --no-heading --color=always --smart-case&#39; \&#xA;    fzf --bind &#39;start:reload:$rg_prefix &#34;&#34;&#39; \&#xA;        --bind &#39;change:reload:$rg_prefix {q} || true&#39; \&#xA;        --bind &#39;enter:become(vim {1} +{2})&#39; \&#xA;        --ansi --disabled \&#xA;        --height=50% --layout=reverse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If ripgrep doesn&#39;t find any matches, it will exit with a non-zero exit status, and fzf will warn you about it. To suppress the warning message, we added &lt;code&gt;|| true&lt;/code&gt; to the command, so that it always exits with 0.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/junegunn/fzf/raw/master/ADVANCED.md#using-fzf-as-interactive-ripgrep-launcher&#34;&gt;&#34;Using fzf as interactive Ripgrep launcher&#34;&lt;/a&gt; for more sophisticated examples.&lt;/p&gt; &#xA;&lt;h3&gt;Preview window&lt;/h3&gt; &#xA;&lt;p&gt;When the &lt;code&gt;--preview&lt;/code&gt; option is set, fzf automatically starts an external process with the current line as the argument and shows the result in the split window. Your &lt;code&gt;$SHELL&lt;/code&gt; is used to execute the command with &lt;code&gt;$SHELL -c COMMAND&lt;/code&gt;. The window can be scrolled using the mouse or custom key bindings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# {} is replaced with the single-quoted string of the focused line&#xA;fzf --preview &#39;cat {}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Preview window supports ANSI colors, so you can use any program that syntax-highlights the content of a file, such as &lt;a href=&#34;https://github.com/sharkdp/bat&#34;&gt;Bat&lt;/a&gt; or &lt;a href=&#34;https://gitlab.com/saalen/highlight&#34;&gt;Highlight&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fzf --preview &#39;bat --color=always {}&#39; --preview-window &#39;~3&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can customize the size, position, and border of the preview window using &lt;code&gt;--preview-window&lt;/code&gt; option, and the foreground and background color of it with &lt;code&gt;--color&lt;/code&gt; option. For example,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fzf --height 40% --layout reverse --info inline --border \&#xA;    --preview &#39;file {}&#39; --preview-window up,1,border-horizontal \&#xA;    --bind &#39;ctrl-/:change-preview-window(50%|hidden|)&#39; \&#xA;    --color &#39;fg:#bbccdd,fg+:#ddeeff,bg:#334455,preview-bg:#223344,border:#778899&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the man page (&lt;code&gt;man fzf&lt;/code&gt;) for the full list of options.&lt;/p&gt; &#xA;&lt;p&gt;More advanced examples can be found &lt;a href=&#34;https://github.com/junegunn/fzf/raw/master/ADVANCED.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Since fzf is a general-purpose text filter rather than a file finder, &lt;strong&gt;it is not a good idea to add &lt;code&gt;--preview&lt;/code&gt; option to your &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# *********************&#xA;# ** DO NOT DO THIS! **&#xA;# *********************&#xA;export FZF_DEFAULT_OPTS=&#39;--preview &#34;bat --style=numbers --color=always --line-range :500 {}&#34;&#39;&#xA;&#xA;# bat doesn&#39;t work with any input other than the list of files&#xA;ps -ef | fzf&#xA;seq 100 | fzf&#xA;history | fzf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Previewing an image&lt;/h3&gt; &#xA;&lt;p&gt;fzf can display images in the preview window using one of the following protocols:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sw.kovidgoyal.net/kitty/graphics-protocol/&#34;&gt;Kitty graphics protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iterm2.com/documentation-images.html&#34;&gt;iTerm2 inline images protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Sixel&#34;&gt;Sixel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/bin/fzf-preview.sh&#34;&gt;bin/fzf-preview.sh&lt;/a&gt; script for more information.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;fzf --preview &#39;fzf-preview.sh {}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;h3&gt;Respecting &lt;code&gt;.gitignore&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/sharkdp/fd&#34;&gt;fd&lt;/a&gt;, &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt;, or &lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;the silver searcher&lt;/a&gt; to traverse the file system while respecting &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Feed the output of fd into fzf&#xA;fd --type f --strip-cwd-prefix | fzf&#xA;&#xA;# Setting fd as the default source for fzf&#xA;export FZF_DEFAULT_COMMAND=&#39;fd --type f --strip-cwd-prefix&#39;&#xA;&#xA;# Now fzf (w/o pipe) will use the fd command to generate the list&#xA;fzf&#xA;&#xA;# To apply the command to CTRL-T as well&#xA;export FZF_CTRL_T_COMMAND=&#34;$FZF_DEFAULT_COMMAND&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want the command to follow symbolic links and don&#39;t want it to exclude hidden files, use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export FZF_DEFAULT_COMMAND=&#39;fd --type f --strip-cwd-prefix --hidden --follow --exclude .git&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fish shell&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;CTRL-T&lt;/code&gt; key binding of fish, unlike those of bash and zsh, will use the last token on the command-line as the root directory for the recursive search. For instance, hitting &lt;code&gt;CTRL-T&lt;/code&gt; at the end of the following command-line&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ls /var/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will list all files and directories under &lt;code&gt;/var/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When using a custom &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt;, use the unexpanded &lt;code&gt;$dir&lt;/code&gt; variable to make use of this feature. &lt;code&gt;$dir&lt;/code&gt; defaults to &lt;code&gt;.&lt;/code&gt; when the last token is not a valid directory. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set -g FZF_CTRL_T_COMMAND &#34;command find -L \$dir -type f 2&amp;gt; /dev/null | sed &#39;1d; s#^\./##&#39;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;fzf Theme Playground&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vitormv.github.io/fzf-themes/&#34;&gt;fzf Theme Playground&lt;/a&gt; created by &lt;a href=&#34;https://github.com/vitormv&#34;&gt;Vitor Mello&lt;/a&gt; is a webpage where you can interactively create fzf themes.&lt;/p&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/junegunn/fzf/wiki/Related-projects&#34;&gt;https://github.com/junegunn/fzf/wiki/Related-projects&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf/master/LICENSE&#34;&gt;License&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT)&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2013-2024 Junegunn Choi&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Calcium-Ion/new-api</title>
    <updated>2025-01-01T01:48:56Z</updated>
    <id>tag:github.com,2025-01-01:/Calcium-Ion/new-api</id>
    <link href="https://github.com/Calcium-Ion/new-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AIÊ®°ÂûãÊé•Âè£ÁÆ°ÁêÜ‰∏éÂàÜÂèëÁ≥ªÁªüÔºåÊîØÊåÅÂ∞ÜÂ§öÁßçÂ§ßÊ®°ÂûãËΩ¨‰∏∫OpenAIÊ†ºÂºèË∞ÉÁî®„ÄÅÊîØÊåÅMidjourney Proxy„ÄÅSuno„ÄÅRerankÔºåÂÖºÂÆπÊòìÊîØ‰ªòÂçèËÆÆÔºåÂèØ‰æõ‰∏™‰∫∫ÊàñËÄÖ‰ºÅ‰∏öÂÜÖÈÉ®ÁÆ°ÁêÜ‰∏éÂàÜÂèëÊ∏†ÈÅì‰ΩøÁî®ÔºåÊú¨È°πÁõÆÂü∫‰∫éOne API‰∫åÊ¨°ÂºÄÂèë„ÄÇüç• The next-generation LLM gateway and AI asset management system supports multiple languages.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;right&#34;&gt; &lt;strong&gt;‰∏≠Êñá&lt;/strong&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/README.en.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/web/public/logo.png&#34; alt=&#34;new-api&#34;&gt;&lt;/p&gt; &#xA; &lt;h1&gt;New API&lt;/h1&gt; &#xA; &lt;p&gt;üç•Êñ∞‰∏Ä‰ª£Â§ßÊ®°ÂûãÁΩëÂÖ≥‰∏éAIËµÑ‰∫ßÁÆ°ÁêÜÁ≥ªÁªü&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/8227&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/8227&#34; alt=&#34;Calcium-Ion%2Fnew-api | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/Calcium-Ion/new-api?color=brightgreen&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Calcium-Ion/new-api/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/Calcium-Ion/new-api?color=brightgreen&amp;amp;include_prereleases&#34; alt=&#34;release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/users/Calcium-Ion/packages/container/package/new-api&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docker-ghcr.io-blue&#34; alt=&#34;docker&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/CalciumIon/new-api&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docker-dockerHub-blue&#34; alt=&#34;docker&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/Calcium-Ion/new-api&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/Calcium-Ion/new-api&#34; alt=&#34;GoReportCard&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;üìù È°πÁõÆËØ¥Êòé&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; Êú¨È°πÁõÆ‰∏∫ÂºÄÊ∫êÈ°πÁõÆÔºåÂú®&lt;a href=&#34;https://github.com/songquanpeng/one-api&#34;&gt;One API&lt;/a&gt;ÁöÑÂü∫Á°Ä‰∏äËøõË°å‰∫åÊ¨°ÂºÄÂèë&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;‰ΩøÁî®ËÄÖÂøÖÈ°ªÂú®ÈÅµÂæ™ OpenAI ÁöÑ&lt;a href=&#34;https://openai.com/policies/terms-of-use&#34;&gt;‰ΩøÁî®Êù°Ê¨æ&lt;/a&gt;‰ª•Âèä&lt;strong&gt;Ê≥ïÂæãÊ≥ïËßÑ&lt;/strong&gt;ÁöÑÊÉÖÂÜµ‰∏ã‰ΩøÁî®Ôºå‰∏çÂæóÁî®‰∫éÈùûÊ≥ïÁî®ÈÄî„ÄÇ&lt;/li&gt; &#xA;  &lt;li&gt;Êú¨È°πÁõÆ‰ªÖ‰æõ‰∏™‰∫∫Â≠¶‰π†‰ΩøÁî®Ôºå‰∏ç‰øùËØÅÁ®≥ÂÆöÊÄßÔºå‰∏î‰∏çÊèê‰æõ‰ªª‰ΩïÊäÄÊúØÊîØÊåÅ„ÄÇ&lt;/li&gt; &#xA;  &lt;li&gt;Ê†πÊçÆ&lt;a href=&#34;http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm&#34;&gt;„ÄäÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°ÁÆ°ÁêÜÊöÇË°åÂäûÊ≥ï„Äã&lt;/a&gt;ÁöÑË¶ÅÊ±ÇÔºåËØ∑ÂãøÂØπ‰∏≠ÂõΩÂú∞Âå∫ÂÖ¨‰ºóÊèê‰æõ‰∏ÄÂàáÊú™ÁªèÂ§áÊ°àÁöÑÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°„ÄÇ&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‚ú® ‰∏ªË¶ÅÁâπÊÄß&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;üé® ÂÖ®Êñ∞ÁöÑUIÁïåÈù¢ÔºàÈÉ®ÂàÜÁïåÈù¢ËøòÂæÖÊõ¥Êñ∞Ôºâ&lt;/li&gt; &#xA; &lt;li&gt;üåç Â§öËØ≠Ë®ÄÊîØÊåÅÔºàÂæÖÂÆåÂñÑÔºâ&lt;/li&gt; &#xA; &lt;li&gt;üé® Ê∑ªÂä†&lt;a href=&#34;https://github.com/novicezk/midjourney-proxy&#34;&gt;Midjourney-Proxy(Plus)&lt;/a&gt;Êé•Âè£ÊîØÊåÅÔºå&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Midjourney.md&#34;&gt;ÂØπÊé•ÊñáÊ°£&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üí∞ ÊîØÊåÅÂú®Á∫øÂÖÖÂÄºÂäüËÉΩÔºåÂèØÂú®Á≥ªÁªüËÆæÁΩÆ‰∏≠ËÆæÁΩÆÔºö &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÊòìÊîØ‰ªò&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;üîç ÊîØÊåÅÁî®keyÊü•ËØ¢‰ΩøÁî®È¢ùÂ∫¶Ôºö &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ÈÖçÂêàÈ°πÁõÆ&lt;a href=&#34;https://github.com/Calcium-Ion/neko-api-key-tool&#34;&gt;neko-api-key-tool&lt;/a&gt;ÂèØÂÆûÁé∞Áî®keyÊü•ËØ¢‰ΩøÁî®&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;üìë ÂàÜÈ°µÊîØÊåÅÈÄâÊã©ÊØèÈ°µÊòæÁ§∫Êï∞Èáè&lt;/li&gt; &#xA; &lt;li&gt;üîÑ ÂÖºÂÆπÂéüÁâàOne APIÁöÑÊï∞ÊçÆÂ∫ìÔºåÂèØÁõ¥Êé•‰ΩøÁî®ÂéüÁâàÊï∞ÊçÆÂ∫ìÔºàone-api.dbÔºâ&lt;/li&gt; &#xA; &lt;li&gt;üíµ ÊîØÊåÅÊ®°ÂûãÊåâÊ¨°Êï∞Êî∂Ë¥πÔºåÂèØÂú® Á≥ªÁªüËÆæÁΩÆ-ËøêËê•ËÆæÁΩÆ ‰∏≠ËÆæÁΩÆ&lt;/li&gt; &#xA; &lt;li&gt;‚öñÔ∏è ÊîØÊåÅÊ∏†ÈÅì&lt;strong&gt;Âä†ÊùÉÈöèÊú∫&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìà Êï∞ÊçÆÁúãÊùøÔºàÊéßÂà∂Âè∞Ôºâ&lt;/li&gt; &#xA; &lt;li&gt;üîí ÂèØËÆæÁΩÆ‰ª§ÁâåËÉΩË∞ÉÁî®ÁöÑÊ®°Âûã&lt;/li&gt; &#xA; &lt;li&gt;ü§ñ ÊîØÊåÅTelegramÊéàÊùÉÁôªÂΩïÔºö &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Á≥ªÁªüËÆæÁΩÆ-ÈÖçÁΩÆÁôªÂΩïÊ≥®ÂÜå-ÂÖÅËÆ∏ÈÄöËøáTelegramÁôªÂΩï&lt;/li&gt; &#xA;   &lt;li&gt;ÂØπ&lt;a href=&#34;https://t.me/botfather&#34;&gt;@Botfather&lt;/a&gt;ËæìÂÖ•Êåá‰ª§/setdomain&lt;/li&gt; &#xA;   &lt;li&gt;ÈÄâÊã©‰Ω†ÁöÑbotÔºåÁÑ∂ÂêéËæìÂÖ•http(s)://‰Ω†ÁöÑÁΩëÁ´ôÂú∞ÂùÄ/login&lt;/li&gt; &#xA;   &lt;li&gt;Telegram Bot ÂêçÁß∞ÊòØbot username ÂéªÊéâ@ÂêéÁöÑÂ≠óÁ¨¶‰∏≤&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;üéµ Ê∑ªÂä† &lt;a href=&#34;https://github.com/Suno-API/Suno-API&#34;&gt;Suno API&lt;/a&gt;Êé•Âè£ÊîØÊåÅÔºå&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Suno.md&#34;&gt;ÂØπÊé•ÊñáÊ°£&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîÑ ÊîØÊåÅRerankÊ®°ÂûãÔºåÁõÆÂâçÂÖºÂÆπCohereÂíåJinaÔºåÂèØÊé•ÂÖ•DifyÔºå&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Rerank.md&#34;&gt;ÂØπÊé•ÊñáÊ°£&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚ö° &lt;strong&gt;&lt;a href=&#34;https://platform.openai.com/docs/guides/realtime/integration&#34;&gt;OpenAI Realtime API&lt;/a&gt;&lt;/strong&gt; - ÊîØÊåÅOpenAIÁöÑRealtime APIÔºåÊîØÊåÅAzureÊ∏†ÈÅì&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅ‰ΩøÁî®Ë∑ØÁî±/chat2link ËøõÂÖ•ËÅäÂ§©ÁïåÈù¢&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Ê®°ÂûãÊîØÊåÅ&lt;/h2&gt; &#xA;&lt;p&gt;Ê≠§ÁâàÊú¨È¢ùÂ§ñÊîØÊåÅ‰ª•‰∏ãÊ®°ÂûãÔºö&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Á¨¨‰∏âÊñπÊ®°Âûã &lt;strong&gt;gps&lt;/strong&gt; Ôºàgpt-4-gizmo-*Ôºâ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/novicezk/midjourney-proxy&#34;&gt;Midjourney-Proxy(Plus)&lt;/a&gt;Êé•Âè£Ôºå&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Midjourney.md&#34;&gt;ÂØπÊé•ÊñáÊ°£&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ëá™ÂÆö‰πâÊ∏†ÈÅìÔºåÊîØÊåÅÂ°´ÂÖ•ÂÆåÊï¥Ë∞ÉÁî®Âú∞ÂùÄ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Suno-API/Suno-API&#34;&gt;Suno API&lt;/a&gt; Êé•Âè£Ôºå&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Suno.md&#34;&gt;ÂØπÊé•ÊñáÊ°£&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RerankÊ®°ÂûãÔºåÁõÆÂâçÊîØÊåÅ&lt;a href=&#34;https://cohere.ai/&#34;&gt;Cohere&lt;/a&gt;Âíå&lt;a href=&#34;https://jina.ai/&#34;&gt;Jina&lt;/a&gt;Ôºå&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Rerank.md&#34;&gt;ÂØπÊé•ÊñáÊ°£&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dify&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;ÊÇ®ÂèØ‰ª•Âú®Ê∏†ÈÅì‰∏≠Ê∑ªÂä†Ëá™ÂÆö‰πâÊ®°Âûãgpt-4-gizmo-*ÔºåÊ≠§Ê®°ÂûãÂπ∂ÈùûOpenAIÂÆòÊñπÊ®°ÂûãÔºåËÄåÊòØÁ¨¨‰∏âÊñπÊ®°ÂûãÔºå‰ΩøÁî®ÂÆòÊñπkeyÊó†Ê≥ïË∞ÉÁî®„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÊØîÂéüÁâàOne APIÂ§öÂá∫ÁöÑÈÖçÁΩÆ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GENERATE_DEFAULT_TOKEN&lt;/code&gt;ÔºöÊòØÂê¶‰∏∫Êñ∞Ê≥®ÂÜåÁî®Êà∑ÁîüÊàêÂàùÂßã‰ª§ÁâåÔºåÈªòËÆ§‰∏∫ &lt;code&gt;false&lt;/code&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STREAMING_TIMEOUT&lt;/code&gt;ÔºöËÆæÁΩÆÊµÅÂºè‰∏ÄÊ¨°ÂõûÂ§çÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÈªòËÆ§‰∏∫ 60 Áßí„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DIFY_DEBUG&lt;/code&gt;ÔºöËÆæÁΩÆ Dify Ê∏†ÈÅìÊòØÂê¶ËæìÂá∫Â∑•‰ΩúÊµÅÂíåËäÇÁÇπ‰ø°ÊÅØÂà∞ÂÆ¢Êà∑Á´ØÔºåÈªòËÆ§‰∏∫ &lt;code&gt;true&lt;/code&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FORCE_STREAM_OPTION&lt;/code&gt;ÔºöÊòØÂê¶Ë¶ÜÁõñÂÆ¢Êà∑Á´Østream_optionsÂèÇÊï∞ÔºåËØ∑Ê±Ç‰∏äÊ∏∏ËøîÂõûÊµÅÊ®°ÂºèusageÔºåÈªòËÆ§‰∏∫ &lt;code&gt;true&lt;/code&gt;ÔºåÂª∫ËÆÆÂºÄÂêØÔºå‰∏çÂΩ±ÂìçÂÆ¢Êà∑Á´Ø‰º†ÂÖ•stream_optionsÂèÇÊï∞ËøîÂõûÁªìÊûú„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET_MEDIA_TOKEN&lt;/code&gt;ÔºöÊòØÂê¶ÁªüËÆ°ÂõæÁâátokenÔºåÈªòËÆ§‰∏∫ &lt;code&gt;true&lt;/code&gt;ÔºåÂÖ≥Èó≠ÂêéÂ∞Ü‰∏çÂÜçÂú®Êú¨Âú∞ËÆ°ÁÆóÂõæÁâátokenÔºåÂèØËÉΩ‰ºöÂØºËá¥Âíå‰∏äÊ∏∏ËÆ°Ë¥π‰∏çÂêåÔºåÊ≠§È°πË¶ÜÁõñ &lt;code&gt;GET_MEDIA_TOKEN_NOT_STREAM&lt;/code&gt; ÈÄâÈ°π‰ΩúÁî®„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET_MEDIA_TOKEN_NOT_STREAM&lt;/code&gt;ÔºöÊòØÂê¶Âú®ÈùûÊµÅÔºà&lt;code&gt;stream=false&lt;/code&gt;ÔºâÊÉÖÂÜµ‰∏ãÁªüËÆ°ÂõæÁâátokenÔºåÈªòËÆ§‰∏∫ &lt;code&gt;true&lt;/code&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UPDATE_TASK&lt;/code&gt;ÔºöÊòØÂê¶Êõ¥Êñ∞ÂºÇÊ≠•‰ªªÂä°ÔºàMidjourney„ÄÅSunoÔºâÔºåÈªòËÆ§‰∏∫ &lt;code&gt;true&lt;/code&gt;ÔºåÂÖ≥Èó≠ÂêéÂ∞Ü‰∏ç‰ºöÊõ¥Êñ∞‰ªªÂä°ËøõÂ∫¶„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GEMINI_MODEL_MAP&lt;/code&gt;ÔºöGeminiÊ®°ÂûãÊåáÂÆöÁâàÊú¨(v1/v1beta)Ôºå‰ΩøÁî®‚ÄúÊ®°Âûã:ÁâàÊú¨‚ÄùÊåáÂÆöÔºå&#34;,&#34;ÂàÜÈöîÔºå‰æãÂ¶ÇÔºö-e GEMINI_MODEL_MAP=&#34;gemini-1.5-pro-latest:v1beta,gemini-1.5-pro-001:v1beta&#34;Ôºå‰∏∫Á©∫Âàô‰ΩøÁî®ÈªòËÆ§ÈÖçÁΩÆ(v1beta)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COHERE_SAFETY_SETTING&lt;/code&gt;ÔºöCohereÊ®°Âûã&lt;a href=&#34;https://docs.cohere.com/docs/safety-modes#overview&#34;&gt;ÂÆâÂÖ®ËÆæÁΩÆ&lt;/a&gt;ÔºåÂèØÈÄâÂÄº‰∏∫ &lt;code&gt;NONE&lt;/code&gt;, &lt;code&gt;CONTEXTUAL&lt;/code&gt;Ôºå&lt;code&gt;STRICT&lt;/code&gt;ÔºåÈªòËÆ§‰∏∫ &lt;code&gt;NONE&lt;/code&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GEMINI_VISION_MAX_IMAGE_NUM&lt;/code&gt;ÔºöGeminiÊ®°ÂûãÊúÄÂ§ßÂõæÁâáÊï∞ÈáèÔºåÈªòËÆ§‰∏∫ &lt;code&gt;16&lt;/code&gt;ÔºåËÆæÁΩÆ‰∏∫ &lt;code&gt;-1&lt;/code&gt; Âàô‰∏çÈôêÂà∂„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MAX_FILE_DOWNLOAD_MB&lt;/code&gt;: ÊúÄÂ§ßÊñá‰ª∂‰∏ãËΩΩÂ§ßÂ∞èÔºåÂçï‰Ωç MBÔºåÈªòËÆ§‰∏∫ &lt;code&gt;20&lt;/code&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CRYPTO_SECRET&lt;/code&gt;ÔºöÂä†ÂØÜÂØÜÈí•ÔºåÁî®‰∫éÂä†ÂØÜÊï∞ÊçÆÂ∫ìÂÜÖÂÆπ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÈÉ®ÁΩ≤&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] ÊúÄÊñ∞ÁâàDockerÈïúÂÉèÔºö&lt;code&gt;calciumion/new-api:latest&lt;/code&gt;&lt;br&gt; ÈªòËÆ§Ë¥¶Âè∑root ÂØÜÁ†Å123456&lt;br&gt; Êõ¥Êñ∞Êåá‰ª§Ôºö&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Â§öÊú∫ÈÉ®ÁΩ≤&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂøÖÈ°ªËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè &lt;code&gt;SESSION_SECRET&lt;/code&gt;ÔºåÂê¶Âàô‰ºöÂØºËá¥Â§öÊú∫ÈÉ®ÁΩ≤Êó∂ÁôªÂΩïÁä∂ÊÄÅ‰∏ç‰∏ÄËá¥„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Â¶ÇÊûúÂÖ¨Áî®RedisÔºåÂøÖÈ°ªËÆæÁΩÆ &lt;code&gt;CRYPTO_SECRET&lt;/code&gt;ÔºåÂê¶Âàô‰ºöÂØºËá¥Â§öÊú∫ÈÉ®ÁΩ≤Êó∂RedisÂÜÖÂÆπÊó†Ê≥ïËé∑Âèñ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ÈÉ®ÁΩ≤Ë¶ÅÊ±Ç&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êú¨Âú∞Êï∞ÊçÆÂ∫ìÔºàÈªòËÆ§ÔºâÔºöSQLiteÔºàDocker ÈÉ®ÁΩ≤ÈªòËÆ§‰ΩøÁî® SQLiteÔºåÂøÖÈ°ªÊåÇËΩΩ &lt;code&gt;/data&lt;/code&gt; ÁõÆÂΩïÂà∞ÂÆø‰∏ªÊú∫Ôºâ&lt;/li&gt; &#xA; &lt;li&gt;ËøúÁ®ãÊï∞ÊçÆÂ∫ìÔºöMySQL ÁâàÊú¨ &amp;gt;= 5.7.8ÔºåPgSQL ÁâàÊú¨ &amp;gt;= 9.6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;‰ΩøÁî®ÂÆùÂ°îÈù¢ÊùøDockerÂäüËÉΩÈÉ®ÁΩ≤&lt;/h3&gt; &#xA;&lt;p&gt;ÂÆâË£ÖÂÆùÂ°îÈù¢Êùø (&lt;strong&gt;9.2.0ÁâàÊú¨&lt;/strong&gt;Âèä‰ª•‰∏ä)ÔºåÂâçÂæÄ &lt;a href=&#34;https://www.bt.cn/new/download.html&#34;&gt;ÂÆùÂ°îÈù¢Êùø&lt;/a&gt; ÂÆòÁΩëÔºåÈÄâÊã©Ê≠£ÂºèÁâàÁöÑËÑöÊú¨‰∏ãËΩΩÂÆâË£Ö&lt;br&gt; ÂÆâË£ÖÂêéÁôªÂΩïÂÆùÂ°îÈù¢ÊùøÔºåÂú®ËèúÂçïÊ†è‰∏≠ÁÇπÂáª Docker ÔºåÈ¶ñÊ¨°ËøõÂÖ•‰ºöÊèêÁ§∫ÂÆâË£Ö Docker ÊúçÂä°ÔºåÁÇπÂáªÁ´ãÂç≥ÂÆâË£ÖÔºåÊåâÊèêÁ§∫ÂÆåÊàêÂÆâË£Ö&lt;br&gt; ÂÆâË£ÖÂÆåÊàêÂêéÂú®Â∫îÁî®ÂïÜÂ∫ó‰∏≠ÊâæÂà∞ &lt;strong&gt;New-API&lt;/strong&gt; ÔºåÁÇπÂáªÂÆâË£ÖÔºåÈÖçÁΩÆÂü∫Êú¨ÈÄâÈ°π Âç≥ÂèØÂÆåÊàêÂÆâË£Ö&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/BT.md&#34;&gt;ÂõæÊñáÊïôÁ®ã&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Âü∫‰∫é Docker ËøõË°åÈÉ®ÁΩ≤&lt;/h3&gt; &#xA;&lt;h3&gt;‰ΩøÁî® Docker Compose ÈÉ®ÁΩ≤ÔºàÊé®ËçêÔºâ&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ‰∏ãËΩΩÈ°πÁõÆ&#xA;git clone https://github.com/Calcium-Ion/new-api.git&#xA;cd new-api&#xA;# ÊåâÈúÄÁºñËæë docker-compose.yml&#xA;# ÂêØÂä®&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Áõ¥Êé•‰ΩøÁî® Docker ÈïúÂÉè&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ‰ΩøÁî® SQLite ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§Ôºö&#xA;docker run --name new-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/new-api:/data calciumion/new-api:latest&#xA;# ‰ΩøÁî® MySQL ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÔºåÂú®‰∏äÈù¢ÁöÑÂü∫Á°Ä‰∏äÊ∑ªÂä† `-e SQL_DSN=&#34;root:123456@tcp(localhost:3306)/oneapi&#34;`ÔºåËØ∑Ëá™Ë°å‰øÆÊîπÊï∞ÊçÆÂ∫ìËøûÊé•ÂèÇÊï∞„ÄÇ&#xA;# ‰æãÂ¶ÇÔºö&#xA;docker run --name new-api -d --restart always -p 3000:3000 -e SQL_DSN=&#34;root:123456@tcp(localhost:3306)/oneapi&#34; -e TZ=Asia/Shanghai -v /home/ubuntu/data/new-api:/data calciumion/new-api:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ê∏†ÈÅìÈáçËØï&lt;/h2&gt; &#xA;&lt;p&gt;Ê∏†ÈÅìÈáçËØïÂäüËÉΩÂ∑≤ÁªèÂÆûÁé∞ÔºåÂèØ‰ª•Âú®&lt;code&gt;ËÆæÁΩÆ-&amp;gt;ËøêËê•ËÆæÁΩÆ-&amp;gt;ÈÄöÁî®ËÆæÁΩÆ&lt;/code&gt;ËÆæÁΩÆÈáçËØïÊ¨°Êï∞Ôºå&lt;strong&gt;Âª∫ËÆÆÂºÄÂêØÁºìÂ≠ò&lt;/strong&gt;ÂäüËÉΩ„ÄÇ&lt;br&gt; Â¶ÇÊûúÂºÄÂêØ‰∫ÜÈáçËØïÂäüËÉΩÔºåÁ¨¨‰∏ÄÊ¨°ÈáçËØï‰ΩøÁî®Âêå‰ºòÂÖàÁ∫ßÔºåÁ¨¨‰∫åÊ¨°ÈáçËØï‰ΩøÁî®‰∏ã‰∏Ä‰∏™‰ºòÂÖàÁ∫ßÔºå‰ª•Ê≠§Á±ªÊé®„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;ÁºìÂ≠òËÆæÁΩÆÊñπÊ≥ï&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;REDIS_CONN_STRING&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî® Redis ‰Ωú‰∏∫ÁºìÂ≠ò‰ΩøÁî®„ÄÇ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;REDIS_CONN_STRING=redis://default:redispw@localhost:49153&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MEMORY_CACHE_ENABLED&lt;/code&gt;ÔºöÂêØÁî®ÂÜÖÂ≠òÁºìÂ≠òÔºàÂ¶ÇÊûúËÆæÁΩÆ‰∫Ü&lt;code&gt;REDIS_CONN_STRING&lt;/code&gt;ÔºåÂàôÊó†ÈúÄÊâãÂä®ËÆæÁΩÆÔºâÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÔºåÂèØÈÄâÂÄº‰∏∫ &lt;code&gt;true&lt;/code&gt; Âíå &lt;code&gt;false&lt;/code&gt;ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ &lt;code&gt;false&lt;/code&gt;„ÄÇ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;MEMORY_CACHE_ENABLED=true&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;‰∏∫‰ªÄ‰πàÊúâÁöÑÊó∂ÂÄôÊ≤°ÊúâÈáçËØï&lt;/h3&gt; &#xA;&lt;p&gt;Ëøô‰∫õÈîôËØØÁ†Å‰∏ç‰ºöÈáçËØïÔºö400Ôºå504Ôºå524&lt;/p&gt; &#xA;&lt;h3&gt;ÊàëÊÉ≥ËÆ©400‰πüÈáçËØï&lt;/h3&gt; &#xA;&lt;p&gt;Âú®&lt;code&gt;Ê∏†ÈÅì-&amp;gt;ÁºñËæë&lt;/code&gt;‰∏≠ÔºåÂ∞Ü&lt;code&gt;Áä∂ÊÄÅÁ†ÅÂ§çÂÜô&lt;/code&gt;Êîπ‰∏∫&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;400&#34;: &#34;500&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂèØ‰ª•ÂÆûÁé∞400ÈîôËØØËΩ¨‰∏∫500ÈîôËØØÔºå‰ªéËÄåÈáçËØï&lt;/p&gt; &#xA;&lt;h2&gt;MidjourneyÊé•Âè£ËÆæÁΩÆÊñáÊ°£&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Midjourney.md&#34;&gt;ÂØπÊé•ÊñáÊ°£&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;SunoÊé•Âè£ËÆæÁΩÆÊñáÊ°£&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Suno.md&#34;&gt;ÂØπÊé•ÊñáÊ°£&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ÁïåÈù¢Êà™Âõæ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/a0dcd349-5df8-4dc8-9acf-ca272b239919&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/c7d0f7e1-729c-43e2-ac7c-2cb73b0afc8e&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/29f81de5-33fc-4fc5-a5ff-f9b54b653c7c&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/4fa53e18-d2c5-477a-9b26-b86e44c71e35&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‰∫§ÊµÅÁæ§&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/user-attachments/assets/9ca0bc82-e057-4230-a28d-9f198fa022e3&#34; width=&#34;200&#34;&gt; &#xA;&lt;h2&gt;Áõ∏ÂÖ≥È°πÁõÆ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/songquanpeng/one-api&#34;&gt;One API&lt;/a&gt;ÔºöÂéüÁâàÈ°πÁõÆ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/novicezk/midjourney-proxy&#34;&gt;Midjourney-Proxy&lt;/a&gt;ÔºöMidjourneyÊé•Âè£ÊîØÊåÅ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Deeptrain-Community/chatnio&#34;&gt;chatnio&lt;/a&gt;Ôºö‰∏ã‰∏Ä‰ª£ AI ‰∏ÄÁ´ôÂºè B/C Á´ØËß£ÂÜ≥ÊñπÊ°à&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Calcium-Ion/neko-api-key-tool&#34;&gt;neko-api-key-tool&lt;/a&gt;ÔºöÁî®keyÊü•ËØ¢‰ΩøÁî®È¢ùÂ∫¶&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ÂÖ∂‰ªñÂü∫‰∫éNew APIÁöÑÈ°πÁõÆÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Calcium-Ion/new-api-horizon&#34;&gt;new-api-horizon&lt;/a&gt;ÔºöNew APIÈ´òÊÄßËÉΩ‰ºòÂåñÁâàÔºåÂπ∂ÊîØÊåÅClaudeÊ†ºÂºè&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VoAPI/VoAPI&#34;&gt;VoAPI&lt;/a&gt;ÔºöÂü∫‰∫éNew APIÁöÑÈó≠Ê∫êÈ°πÁõÆ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üåü Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Calcium-Ion/new-api&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Calcium-Ion/new-api&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>