<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-01T02:41:12Z</updated>
  <subtitle>Monthly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zricethezav/gitleaks</title>
    <updated>2022-08-01T02:41:12Z</updated>
    <id>tag:github.com,2022-08-01:/zricethezav/gitleaks</id>
    <link href="https://github.com/zricethezav/gitleaks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Protect and discover secrets using Gitleaks üîë&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gitleaks&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;‚îå‚îÄ‚óã‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ ‚îÇ‚ï≤  ‚îÇ&#xA;‚îÇ ‚îÇ ‚óã ‚îÇ&#xA;‚îÇ ‚óã ‚ñë ‚îÇ&#xA;‚îî‚îÄ‚ñë‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://github.com/zricethezav/gitleaks/actions/workflows/test.yml&#34;&gt; &lt;img alt=&#34;Github Test&#34; src=&#34;https://github.com/zricethezav/gitleaks/actions/workflows/test.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/zricethezav/gitleaks&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/zricethezav/gitleaks.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.jit.io/jit-open-source-gitleaks?utm_source=github&amp;amp;utm_medium=badge&amp;amp;utm_campaign=GitleaksReadme&amp;amp;utm_id=oss&amp;amp;items=item-secret-detection&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Secured%20by-Jit-B8287F?style=?style=plastic&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/zricethezav/gitleaks-action&#34;&gt; &lt;img alt=&#34;gitleaks badge&#34; src=&#34;https://img.shields.io/badge/protected%20by-gitleaks-blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=zricethezav&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/zricethezav?label=Follow%20zricethezav&amp;amp;style=social&amp;amp;color=blue&#34; alt=&#34;Follow @zricethezav&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Gitleaks is a SAST tool for &lt;strong&gt;detecting&lt;/strong&gt; and &lt;strong&gt;preventing&lt;/strong&gt; hardcoded secrets like passwords, api keys, and tokens in git repos. Gitleaks is an &lt;strong&gt;easy-to-use, all-in-one solution&lt;/strong&gt; for detecting secrets, past or present, in your code.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demos&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CLI &lt;a href=&#34;https://asciinema.org/a/455683&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/455683.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gitleaks/gitleaks-action&#34;&gt;Github-Action&lt;/a&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/15034943/178513034-de5a1906-b71d-454a-a792-47b7ac0e21e6.gif&#34; alt=&#34;gitleaks-demo-fast-cropped&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Gitleaks can be installed using Homebrew, Docker, or Go. Gitleaks is also available in binary form for many popular platforms and OS types on the &lt;a href=&#34;https://github.com/zricethezav/gitleaks/releases&#34;&gt;releases page&lt;/a&gt;. In addition, Gitleaks can be implemented as a pre-commit hook directly in your repo or as a GitHub action using &lt;a href=&#34;https://github.com/gitleaks/gitleaks-action&#34;&gt;Gitleaks-Action&lt;/a&gt; (see demo above).&lt;/p&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install gitleaks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;h4&gt;DockerHub&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull zricethezav/gitleaks:latest&#xA;docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] --source=&#34;/path&#34; [OPTIONS]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ghcr.io&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull ghcr.io/zricethezav/gitleaks:latest&#xA;docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] --source=&#34;/path&#34; [OPTIONS]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From Source&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and install Go from &lt;a href=&#34;https://golang.org/dl/&#34;&gt;https://golang.org/dl/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/zricethezav/gitleaks.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Build the binary&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd gitleaks&#xA;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Github Action&lt;/h3&gt; &#xA;&lt;p&gt;Check out the official &lt;a href=&#34;https://github.com/gitleaks/gitleaks-action&#34;&gt;Gitleaks GitHub Action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;name: gitleaks&#xA;on: [pull_request, push, workflow_dispatch]&#xA;jobs:&#xA;  scan:&#xA;    name: gitleaks&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;        with:&#xA;          fetch-depth: 0&#xA;      - uses: gitleaks/gitleaks-action@v2&#xA;        env:&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pre-Commit&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install pre-commit from &lt;a href=&#34;https://pre-commit.com/#install&#34;&gt;https://pre-commit.com/#install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; file at the root of your repository with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;repos:&#xA;  - repo: https://github.com/zricethezav/gitleaks&#xA;    rev: v8.2.0&#xA;    hooks:&#xA;      - id: gitleaks&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;for a &lt;a href=&#34;https://github.com/zricethezav/gitleaks/releases&#34;&gt;native execution of GitLeaks&lt;/a&gt; or use the &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/master/.pre-commit-hooks.yaml&#34;&gt;&lt;code&gt;gitleaks-docker&lt;/code&gt; pre-commit ID&lt;/a&gt; for executing GitLeaks using the &lt;a href=&#34;https://raw.githubusercontent.com/zricethezav/gitleaks/master/#docker&#34;&gt;official Docker images&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install with &lt;code&gt;pre-commit install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now you&#39;re all set!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;‚ûú git commit -m &#34;this commit contains a secret&#34;&#xA;Detect hardcoded secrets.................................................Failed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: to disable the gitleaks pre-commit hook you can prepend &lt;code&gt;SKIP=gitleaks&lt;/code&gt; to the commit command and it will skip running gitleaks&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;‚ûú SKIP=gitleaks git commit -m &#34;skip gitleaks check&#34;&#xA;Detect hardcoded secrets................................................Skipped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  gitleaks [command]&#xA;&#xA;Available Commands:&#xA;  completion  generate the autocompletion script for the specified shell&#xA;  detect      Detect secrets in code&#xA;  help        Help about any command&#xA;  protect     Protect secrets in code&#xA;  version     Display gitleaks version&#xA;&#xA;Flags:&#xA;  -c, --config string          config file path&#xA;                               order of precedence:&#xA;                               1. --config/-c&#xA;                               2. env var GITLEAKS_CONFIG&#xA;                               3. (--source/-s)/.gitleaks.toml&#xA;                               If none of the three options are used, then gitleaks will use the default config&#xA;      --exit-code string       exit code when leaks have been encountered (default: 1)&#xA;  -h, --help                   help for gitleaks&#xA;  -l, --log-level string       log level (debug, info, warn, error, fatal) (default &#34;info&#34;)&#xA;      --redact                 redact secrets from logs and stdout&#xA;  -f, --report-format string   output format (json, csv, sarif)&#xA;  -r, --report-path string     report file&#xA;  -s, --source string          path to source (git repo, directory, file)&#xA;  -v, --verbose                show verbose output from scan&#xA;&#xA;Use &#34;gitleaks [command] --help&#34; for more information about a command.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;There are two commands you will use to detect secrets; &lt;code&gt;detect&lt;/code&gt; and &lt;code&gt;protect&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Detect&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;detect&lt;/code&gt; command is used to scan repos, directories, and files. This command can be used on developer machines and in CI environments.&lt;/p&gt; &#xA;&lt;p&gt;When running &lt;code&gt;detect&lt;/code&gt; on a git repository, gitleaks will parse the output of a &lt;code&gt;git log -p&lt;/code&gt; command (you can see how this executed &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/7240e16769b92d2a1b137c17d6bf9d55a8562899/git/git.go#L17-L25&#34;&gt;here&lt;/a&gt;). &lt;a href=&#34;https://git-scm.com/docs/git-log#_generating_patch_text_with_p&#34;&gt;&lt;code&gt;git log -p&lt;/code&gt; generates patches&lt;/a&gt; which gitleaks will use to detect secrets. You can configure what commits &lt;code&gt;git log&lt;/code&gt; will range over by using the &lt;code&gt;--log-opts&lt;/code&gt; flag. &lt;code&gt;--log-opts&lt;/code&gt; accepts any option for &lt;code&gt;git log -p&lt;/code&gt;. For example, if you wanted to run gitleaks on a range of commits you could use the following command: &lt;code&gt;gitleaks detect --source . --log-opts=&#34;--all commitA..commitB&#34;&lt;/code&gt;. See the &lt;code&gt;git log&lt;/code&gt; &lt;a href=&#34;https://git-scm.com/docs/git-log&#34;&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;You can scan files and directories by using the &lt;code&gt;--no-git&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h4&gt;Protect&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;protect&lt;/code&gt; command is used to uncommitted changes in a git repo. This command should be used on developer machines in accordance with &lt;a href=&#34;https://cloud.google.com/architecture/devops/devops-tech-shifting-left-on-security&#34;&gt;shifting left on security&lt;/a&gt;. When running &lt;code&gt;protect&lt;/code&gt; on a git repository, gitleaks will parse the output of a &lt;code&gt;git diff&lt;/code&gt; command (you can see how this executed &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/7240e16769b92d2a1b137c17d6bf9d55a8562899/git/git.go#L48-L49&#34;&gt;here&lt;/a&gt;). You can set the &lt;code&gt;--staged&lt;/code&gt; flag to check for changes in commits that have been &lt;code&gt;git add&lt;/code&gt;ed. The &lt;code&gt;--staged&lt;/code&gt; flag should be used when running Gitleaks as a pre-commit.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: the &lt;code&gt;protect&lt;/code&gt; command can only be used on git repos, running &lt;code&gt;protect&lt;/code&gt; on files or directories will result in an error message.&lt;/p&gt; &#xA;&lt;h3&gt;Verify Findings&lt;/h3&gt; &#xA;&lt;p&gt;You can verify a finding found by gitleaks using a &lt;code&gt;git log&lt;/code&gt; command. Example output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;        &#34;Description&#34;: &#34;AWS&#34;,&#xA;        &#34;StartLine&#34;: 37,&#xA;        &#34;EndLine&#34;: 37,&#xA;        &#34;StartColumn&#34;: 19,&#xA;        &#34;EndColumn&#34;: 38,&#xA;        &#34;Match&#34;: &#34;\t\t\&#34;aws_secret= \\\&#34;AKIAIMNOJVGFDXXXE4OA\\\&#34;\&#34;:          true,&#34;,&#xA;        &#34;Secret&#34;: &#34;AKIAIMNOJVGFDXXXE4OA&#34;,&#xA;        &#34;File&#34;: &#34;checks_test.go&#34;,&#xA;        &#34;Commit&#34;: &#34;ec2fc9d6cb0954fb3b57201cf6133c48d8ca0d29&#34;,&#xA;        &#34;Entropy&#34;: 0,&#xA;        &#34;Author&#34;: &#34;zricethezav&#34;,&#xA;        &#34;Email&#34;: &#34;thisispublicanyways@gmail.com&#34;,&#xA;        &#34;Date&#34;: &#34;2018-01-28 17:39:00 -0500 -0500&#34;,&#xA;        &#34;Message&#34;: &#34;[update] entropy check&#34;,&#xA;        &#34;Tags&#34;: [],&#xA;        &#34;RuleID&#34;: &#34;aws-access-token&#34;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can use the following format to verify the leak:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git log -L {StartLine,EndLine}:{File} {Commit}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So in this example it would look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git log -L 37,37:checks_test.go ec2fc9d6cb0954fb3b57201cf6133c48d8ca0d29&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which gives us:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;commit ec2fc9d6cb0954fb3b57201cf6133c48d8ca0d29&#xA;Author: zricethezav &amp;lt;thisispublicanyways@gmail.com&amp;gt;&#xA;Date:   Sun Jan 28 17:39:00 2018 -0500&#xA;&#xA;    [update] entropy check&#xA;&#xA;diff --git a/checks_test.go b/checks_test.go&#xA;--- a/checks_test.go&#xA;+++ b/checks_test.go&#xA;@@ -28,0 +37,1 @@&#xA;+               &#34;aws_secret= \&#34;AKIAIMNOJVGFDXXXE4OA\&#34;&#34;:          true,&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pre-Commit hook&lt;/h2&gt; &#xA;&lt;p&gt;You can run Gitleaks as a pre-commit hook by copying the example &lt;code&gt;pre-commit.py&lt;/code&gt; script into your &lt;code&gt;.git/hooks/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Gitleaks offers a configuration format you can follow to write your own secret detection rules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;# Title for the gitleaks configuration file.&#xA;title = &#34;Gitleaks title&#34;&#xA;&#xA;# Extend the base (this) configuration. When you extend a configuration&#xA;# the base rules take precendence over the extended rules. I.e, if there are&#xA;# duplicate rules in both the base configuration and the extended configuration&#xA;# the base rules will override the extended rules.&#xA;# Another thing to know with extending configurations is you can chain together&#xA;# multiple configuration files to a depth of 2. Allowlist arrays are appended&#xA;# and can contain duplicates.&#xA;# useDefault and path can NOT be used at the same time. Choose one.&#xA;[extend]&#xA;# useDefault will extend the base configuration with the default gitleaks config:&#xA;# https://github.com/zricethezav/gitleaks/blob/master/config/gitleaks.toml&#xA;useDefault = true&#xA;# or you can supply a path to a configuration. Path is relative to where gitleaks&#xA;# was invoked, not the location of the base config.&#xA;path = &#34;common_config.toml&#34;&#xA;&#xA;# An array of tables that contain information that define instructions&#xA;# on how to detect secrets&#xA;[[rules]]&#xA;&#xA;# Unique identifier for this rule&#xA;id = &#34;awesome-rule-1&#34;&#xA;&#xA;# Short human readable description of the rule.&#xA;description = &#34;awesome rule 1&#34;&#xA;&#xA;# Golang regular expression used to detect secrets. Note Golang&#39;s regex engine&#xA;# does not support lookaheads.&#xA;regex = &#39;&#39;&#39;one-go-style-regex-for-this-rule&#39;&#39;&#39;&#xA;&#xA;# Golang regular expression used to match paths. This can be used as a standalone rule or it can be used&#xA;# in conjunction with a valid `regex` entry.&#xA;path = &#39;&#39;&#39;a-file-path-regex&#39;&#39;&#39;&#xA;&#xA;# Array of strings used for metadata and reporting purposes.&#xA;tags = [&#34;tag&#34;,&#34;another tag&#34;]&#xA;&#xA;# Int used to extract secret from regex match and used as the group that will have&#xA;# its entropy checked if `entropy` is set.&#xA;secretGroup = 3&#xA;&#xA;# Float representing the minimum shannon entropy a regex group must have to be considered a secret.&#xA;entropy = 3.5&#xA;&#xA;# Keywords are used for pre-regex check filtering. Rules that contain&#xA;# keywords will perform a quick string compare check to make sure the&#xA;# keyword(s) are in the content being scanned. Ideally these values should&#xA;# either be part of the idenitifer or unique strings specific to the rule&#39;s regex&#xA;# (introduced in v8.6.0)&#xA;keywords = [&#xA;  &#34;auth&#34;,&#xA;  &#34;password&#34;,&#xA;  &#34;token&#34;,&#xA;]&#xA;&#xA;# You can include an allowlist table for a single rule to reduce false positives or ignore commits&#xA;# with known/rotated secrets&#xA;[rules.allowlist]&#xA;description = &#34;ignore commit A&#34;&#xA;commits = [ &#34;commit-A&#34;, &#34;commit-B&#34;]&#xA;paths = [&#xA;  &#39;&#39;&#39;go\.mod&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;go\.sum&#39;&#39;&#39;&#xA;]&#xA;regexes = [&#xA;  &#39;&#39;&#39;process&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;getenv&#39;&#39;&#39;,&#xA;]&#xA;# note: stopwords targets the extracted secret, not the entire regex match&#xA;# like &#39;regexes&#39; does. (stopwords introduced in 8.8.0)&#xA;stopwords = [&#xA;  &#39;&#39;&#39;client&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;endpoint&#39;&#39;&#39;,&#xA;]&#xA;&#xA;&#xA;# This is a global allowlist which has a higher order of precedence than rule-specific allowlists.&#xA;# If a commit listed in the `commits` field below is encountered then that commit will be skipped and no&#xA;# secrets will be detected for said commit. The same logic applies for regexes and paths.&#xA;[allowlist]&#xA;description = &#34;global allow list&#34;&#xA;commits = [ &#34;commit-A&#34;, &#34;commit-B&#34;, &#34;commit-C&#34;]&#xA;paths = [&#xA;  &#39;&#39;&#39;gitleaks\.toml&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;(.*?)(jpg|gif|doc)&#39;&#39;&#39;&#xA;]&#xA;regexes = [&#xA;  &#39;&#39;&#39;219-09-9999&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;078-05-1120&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;(9[0-9]{2}|666)-\d{2}-\d{4}&#39;&#39;&#39;,&#xA;]&#xA;# note: stopwords targets the extracted secret, not the entire regex match&#xA;# like &#39;regexes&#39; does. (stopwords introduced in 8.8.0)&#xA;stopwords = [&#xA;  &#39;&#39;&#39;client&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;endpoint&#39;&#39;&#39;,&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the default &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/master/config/gitleaks.toml&#34;&gt;gitleaks config&lt;/a&gt; for examples or follow the &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/master/README.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Secured by Jit&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://www.jit.io/jit-open-source-gitleaks?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=GitleaksReadme&amp;amp;utm_id=oss&amp;amp;items=item-secret-detection&#34;&gt;Jit&lt;/a&gt; to secure our codebase, to achieve fully automated, full-stack continuous security using the world&#39;s best OSS security tools.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsorships&lt;/h2&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://www.tines.com/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks&#34;&gt; &lt;img alt=&#34;Tines Sponsorship&#34; src=&#34;https://user-images.githubusercontent.com/15034943/146411864-4878f936-b4f7-49a0-b625-f9f40c704bfa.png&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Exit Codes&lt;/h2&gt; &#xA;&lt;p&gt;You can always set the exit code when leaks are encountered with the --exit-code flag. Default exit codes below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0 - no leaks present&#xA;1 - leaks or error encountered&#xA;126 - unknown flag&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>kevwan/tproxy</title>
    <updated>2022-08-01T02:41:12Z</updated>
    <id>tag:github.com,2022-08-01:/kevwan/tproxy</id>
    <link href="https://github.com/kevwan/tproxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cli tool to proxy and analyze TCP connections.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tproxy&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/kevwan/tproxy/main/readme-cn.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kevwan/tproxy/actions&#34;&gt;&lt;img src=&#34;https://github.com/kevwan/tproxy/workflows/Go/badge.svg?branch=main&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/kevwan/tproxy&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/kevwan/tproxy&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kevwan/tproxy&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/kevwan/tproxy.svg?style=flat-square&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/kevwan&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why I wrote this tool&lt;/h2&gt; &#xA;&lt;p&gt;When I develop backend services and write &lt;a href=&#34;https://github.com/zeromicro/go-zero&#34;&gt;go-zero&lt;/a&gt;, I often need to monitor the network traffic. For example:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;monitoring gRPC connections, when to connect and when to reconnect&lt;/li&gt; &#xA; &lt;li&gt;monitoring MySQL connection pools, how many connections and figure out the lifetime policy&lt;/li&gt; &#xA; &lt;li&gt;monitoring any TCP connections on the fly&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ go install github.com/kevwan/tproxy@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use docker images:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run --rm -it -p &amp;lt;listen-port&amp;gt;:&amp;lt;listen-port&amp;gt; -p &amp;lt;remote-port&amp;gt;:&amp;lt;remote-port&amp;gt; kevinwan/tproxy:v1 tproxy -l 0.0.0.0 -p &amp;lt;listen-port&amp;gt; -r host.docker.internal:&amp;lt;remote-port&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For arm64:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run --rm -it -p &amp;lt;listen-port&amp;gt;:&amp;lt;listen-port&amp;gt; -p &amp;lt;remote-port&amp;gt;:&amp;lt;remote-port&amp;gt; kevinwan/tproxy:v1-arm64 tproxy -l 0.0.0.0 -p &amp;lt;listen-port&amp;gt; -r host.docker.internal:&amp;lt;remote-port&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows, you can use &lt;a href=&#34;https://scoop.sh/&#34;&gt;scoop&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ scoop install tproxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usages&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tproxy --help&#xA;Usage of tproxy:&#xA;  -d duration&#xA;    &#x9;the delay to relay packets&#xA;  -l string&#xA;    &#x9;Local address to listen on (default &#34;localhost&#34;)&#xA;  -p int&#xA;    &#x9;Local port to listen on, default to pick a random port&#xA;  -q&#x9;Quiet mode, only prints connection open/close and stats, default false&#xA;  -r string&#xA;    &#x9;Remote address (host:port) to connect&#xA;  -s&#x9;Enable statistics&#xA;  -t string&#xA;    &#x9;The type of protocol, currently support grpc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Monitor gRPC connections&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tproxy -p 8088 -r localhost:8081 -t grpc -d 100ms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;listen on localhost and port 8088&lt;/li&gt; &#xA; &lt;li&gt;redirect the traffic to &lt;code&gt;localhost:8081&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;protocol type to be gRPC&lt;/li&gt; &#xA; &lt;li&gt;delay 100ms for each packets&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;579&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/1918356/181794530-5b25f75f-0c1a-4477-8021-56946903830a.png&#34;&gt; &#xA;&lt;h3&gt;Monitor MySQL connections&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tproxy -p 3307 -r localhost:3306&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;600&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/1918356/173970130-944e4265-8ba6-4d2e-b091-1f6a5de81070.png&#34;&gt; &#xA;&lt;h3&gt;Check the connection reliability (Retrans rate and RTT)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tproxy -p 3307 -r remotehost:3306 -s -q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;548&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/1918356/180252614-7cf4d1f9-9ba8-4aa4-a964-6f37cf991749.png&#34;&gt; &#xA;&lt;h2&gt;Give a Star! ‚≠ê&lt;/h2&gt; &#xA;&lt;p&gt;If you like or are using this project, please give it a &lt;strong&gt;star&lt;/strong&gt;. Thanks!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>iawia002/lux</title>
    <updated>2022-08-01T02:41:12Z</updated>
    <id>tag:github.com,2022-08-01:/iawia002/lux</id>
    <link href="https://github.com/iawia002/lux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üëæ Fast and simple video download library and CLI tool written in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Lux&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://codecov.io/gh/iawia002/lux&#34;&gt; &lt;img src=&#34;https://img.shields.io/codecov/c/github/iawia002/lux.svg?style=flat-square&#34; alt=&#34;Codecov&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/iawia002/lux/actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/iawia002/lux/ci?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://goreportcard.com/report/github.com/iawia002/lux&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/iawia002/lux?style=flat-square&#34; alt=&#34;Go Report Card&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/iawia002/lux/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/iawia002/lux.svg?style=flat-square&#34; alt=&#34;GitHub release&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://formulae.brew.sh/formula/lux&#34;&gt; &lt;img src=&#34;https://img.shields.io/homebrew/v/lux.svg?style=flat-square&#34; alt=&#34;Homebrew&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;üëæ Lux is a fast and simple video downloader built with Go.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#install-via-go-install&#34;&gt;Install via &lt;code&gt;go install&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#homebrew-macos-only&#34;&gt;Homebrew (macOS only)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#arch-linux&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#void-linux&#34;&gt;Void Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#scoop-on-windows&#34;&gt;Scoop on Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#chocolatey-on-windows&#34;&gt;Chocolatey on Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#cask-on-windowsmacoslinux&#34;&gt;Cask on Windows/macOS/Linux&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#download-a-video&#34;&gt;Download a video&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#download-anything-else&#34;&gt;Download anything else&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#download-playlist&#34;&gt;Download playlist&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#multiple-inputs&#34;&gt;Multiple inputs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#resume-a-download&#34;&gt;Resume a download&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#auto-retry&#34;&gt;Auto retry&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#cookies&#34;&gt;Cookies&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#proxy&#34;&gt;Proxy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#multi-thread&#34;&gt;Multi-Thread&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#short-link&#34;&gt;Short link&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#bilibili&#34;&gt;bilibili&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#use-specified-referrer&#34;&gt;Use specified Referrer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#specify-the-output-path-and-name&#34;&gt;Specify the output path and name&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#debug-mode&#34;&gt;Debug Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#reuse-extracted-data&#34;&gt;Reuse extracted data&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#options&#34;&gt;Options&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#download&#34;&gt;Download:&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#network&#34;&gt;Network:&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#playlist&#34;&gt;Playlist:&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#filesystem&#34;&gt;Filesystem:&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#subtitle&#34;&gt;Subtitle:&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#youku&#34;&gt;Youku:&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#aria2&#34;&gt;aria2:&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#supported-sites&#34;&gt;Supported Sites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#known-issues&#34;&gt;Known issues&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#%E4%BC%98%E9%85%B7&#34;&gt;‰ºòÈÖ∑&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#similar-projects&#34;&gt;Similar projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;The following dependencies are required and must be installed separately.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ffmpeg.org&#34;&gt;FFmpeg&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: FFmpeg does not affect the download, only affects the final file merge.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Install via &lt;code&gt;go install&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To install Lux, use &lt;code&gt;go install&lt;/code&gt;, or download the binary file from &lt;a href=&#34;https://github.com/iawia002/lux/releases&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go install github.com/iawia002/lux@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew (macOS only)&lt;/h3&gt; &#xA;&lt;p&gt;For macOS users, you can install &lt;code&gt;lux&lt;/code&gt; via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install lux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;For Arch Users &lt;a href=&#34;https://aur.archlinux.org/packages/lux-dl/&#34;&gt;AUR&lt;/a&gt; package is available.&lt;/p&gt; &#xA;&lt;h3&gt;Void Linux&lt;/h3&gt; &#xA;&lt;p&gt;For Void linux users, you can install &lt;code&gt;lux&lt;/code&gt; via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ xbps-install -S lux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt; on Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ scoop install lux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt; on Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ choco install lux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/axetroy/cask.rs&#34;&gt;Cask&lt;/a&gt; on Windows/macOS/Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cask install github.com/iawia002/lux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lux [OPTIONS] URL [URL...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download a video&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux &#34;https://www.youtube.com/watch?v=dQw4w9WgXcQ&#34;&#xA;&#xA; Site:      YouTube youtube.com&#xA; Title:     Rick Astley - Never Gonna Give You Up (Video)&#xA; Type:      video&#xA; Stream:&#xA;     [248]  -------------------&#xA;     Quality:         1080p video/webm; codecs=&#34;vp9&#34;&#xA;     Size:            63.93 MiB (67038963 Bytes)&#xA;     # download with: lux -f 248 ...&#xA;&#xA; 41.88 MiB / 63.93 MiB [=================&amp;gt;-------------]  65.51% 4.22 MiB/s 00m05s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;-i&lt;/code&gt; option displays all available quality of video without downloading.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -i &#34;https://www.youtube.com/watch?v=dQw4w9WgXcQ&#34;&#xA;&#xA; Site:      YouTube youtube.com&#xA; Title:     Rick Astley - Never Gonna Give You Up (Video)&#xA; Type:      video&#xA; Streams:   # All available quality&#xA;     [248]  -------------------&#xA;     Quality:         1080p video/webm; codecs=&#34;vp9&#34;&#xA;     Size:            49.29 MiB (51687554 Bytes)&#xA;     # download with: lux -f 248 ...&#xA;&#xA;     [137]  -------------------&#xA;     Quality:         1080p video/mp4; codecs=&#34;avc1.640028&#34;&#xA;     Size:            43.45 MiB (45564306 Bytes)&#xA;     # download with: lux -f 137 ...&#xA;&#xA;     [398]  -------------------&#xA;     Quality:         720p video/mp4; codecs=&#34;av01.0.05M.08&#34;&#xA;     Size:            37.12 MiB (38926432 Bytes)&#xA;     # download with: lux -f 398 ...&#xA;&#xA;     [136]  -------------------&#xA;     Quality:         720p video/mp4; codecs=&#34;avc1.4d401f&#34;&#xA;     Size:            31.34 MiB (32867324 Bytes)&#xA;     # download with: lux -f 136 ...&#xA;&#xA;     [247]  -------------------&#xA;     Quality:         720p video/webm; codecs=&#34;vp9&#34;&#xA;     Size:            31.03 MiB (32536181 Bytes)&#xA;     # download with: lux -f 247 ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;lux -f stream &#34;URL&#34;&lt;/code&gt; to download a specific stream listed in the output of &lt;code&gt;-i&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h3&gt;Download anything else&lt;/h3&gt; &#xA;&lt;p&gt;If Lux is provided the URL of a specific resource, then it will be downloaded directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux &#34;https://img9.bcyimg.com/drawer/15294/post/1799t/1f5a87801a0711e898b12b640777720f.jpg&#34;&#xA;&#xA;lux doesn&#39;t support this URL right now, but it will try to download it directly&#xA;&#xA; Site:      Universal&#xA; Title:     1f5a87801a0711e898b12b640777720f&#xA; Type:      image/jpeg&#xA; Stream:&#xA;     [default]  -------------------&#xA;     Size:            1.00 MiB (1051042 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&#xA; 1.00 MiB / 1.00 MiB [===================================] 100.00% 1.21 MiB/s 0s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download playlist&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;-p&lt;/code&gt; option downloads an entire playlist instead of a single video.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -i -p &#34;https://www.bilibili.com/bangumi/play/ep198061&#34;&#xA;&#xA; Site:      ÂìîÂì©ÂìîÂì© bilibili.com&#xA; Title:     Doctor X Á¨¨ÂõõÂ≠£ÔºöÁ¨¨‰∏ÄÈõÜ&#xA; Type:      video&#xA; Streams:   # All available quality&#xA;     [default]  -------------------&#xA;     Quality:         È´òÊ∏Ö 1080P&#xA;     Size:            845.66 MiB (886738354 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&#xA;&#xA; Site:      ÂìîÂì©ÂìîÂì© bilibili.com&#xA; Title:     Doctor X Á¨¨ÂõõÂ≠£ÔºöÁ¨¨‰∫åÈõÜ&#xA; Type:      video&#xA; Streams:   # All available quality&#xA;     [default]  -------------------&#xA;     Quality:         È´òÊ∏Ö 1080P&#xA;     Size:            930.71 MiB (975919195 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&#xA;......&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;-start&lt;/code&gt;, &lt;code&gt;-end&lt;/code&gt; or &lt;code&gt;-items&lt;/code&gt; option to specify the download range of the list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-start&#xA;    &#x9;Playlist video to start at (default 1)&#xA;-end&#xA;    &#x9;Playlist video to end at&#xA;-items&#xA;    &#x9;Playlist video items to download. Separated by commas like: 1,5,6,8-10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For bilibili playlists only:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-eto&#xA;  File name of each bilibili episode doesn&#39;t include the playlist title&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multiple inputs&lt;/h3&gt; &#xA;&lt;p&gt;You can also download multiple URLs at once:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -i &#34;https://www.bilibili.com/video/av21877586&#34; &#34;https://www.bilibili.com/video/av21990740&#34;&#xA;&#xA; Site:      ÂìîÂì©ÂìîÂì© bilibili.com&#xA; Title:     „ÄêËéìÊú∫‰ºö‰∫Ü„ÄëÁîúÂà∞ËôêÂì≠ÁöÑ13ÈõÜÂçïÈõÜMAD„ÄåÊàëÁé∞Âú®‰ªÄ‰πàÈÉΩ‰∏çÊÉ≥Âπ≤,Êõ¥‰∏çÊÉ≥Áúã14ÈõÜ„Äç&#xA; Type:      video&#xA; Streams:   # All available quality&#xA;     [default]  -------------------&#xA;     Quality:         È´òÊ∏Ö 1080P&#xA;     Size:            51.88 MiB (54403767 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&#xA;&#xA; Site:      ÂìîÂì©ÂìîÂì© bilibili.com&#xA; Title:     „ÄêËéìÊïë‰∫Ü„ÄëÁîúÂà∞ËôêÂì≠ÔºÅÔºÅÔºÅÂõΩÂÆ∂ÈòüÂçïÈõÜMAD-ÂΩìÁÜüÊÇâÁöÑbgmÂìçËµ∑ÔºåÁúºÊ≥™‰ªéËÑ∏È¢äÊªë‰∏ã&#xA; Type:      video&#xA; Streams:   # All available quality&#xA;     [default]  -------------------&#xA;     Quality:         È´òÊ∏Ö 1080P&#xA;     Size:            77.63 MiB (81404093 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These URLs will be downloaded one by one.&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;-F&lt;/code&gt; option to read URLs from file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -F ~/Desktop/u.txt&#xA;&#xA; Site:      ÂæÆÂçö weibo.com&#xA; Title:     Âú®GoogleÔºåÊàë‰ª¨ËÆæËÆ°‰ªÄ‰πàÔºü via@ÈòëÂ§ï&#xA; Type:      video&#xA; Stream:&#xA;     [default]  -------------------&#xA;     Size:            19.19 MiB (20118196 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&#xA; 19.19 MiB / 19.19 MiB [=================================] 100.00% 9.69 MiB/s 1s&#xA;&#xA;......&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;-start&lt;/code&gt;, &lt;code&gt;-end&lt;/code&gt; or &lt;code&gt;-items&lt;/code&gt; option to specify the download range of the list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-start&#xA;    &#x9;File line to start at (default 1)&#xA;-end&#xA;    &#x9;File line to end at&#xA;-items&#xA;    &#x9;File lines to download. Separated by commas like: 1,5,6,8-10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Resume a download&lt;/h3&gt; &#xA;&lt;p&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt; interrupts a download.&lt;/p&gt; &#xA;&lt;p&gt;A temporary &lt;code&gt;.download&lt;/code&gt; file is kept in the output directory. If &lt;code&gt;lux&lt;/code&gt; is ran with the same arguments, then the download progress will resume from the last session.&lt;/p&gt; &#xA;&lt;h3&gt;Auto retry&lt;/h3&gt; &#xA;&lt;p&gt;lux will auto retry when the download failed, you can specify the retry times by &lt;code&gt;-retry&lt;/code&gt; option (default is 100).&lt;/p&gt; &#xA;&lt;h3&gt;Cookies&lt;/h3&gt; &#xA;&lt;p&gt;Cookies can be provided to &lt;code&gt;lux&lt;/code&gt; with the &lt;code&gt;-c&lt;/code&gt; option if they are required for accessing the video.&lt;/p&gt; &#xA;&lt;p&gt;Cookies can be the following format or &lt;a href=&#34;https://curl.haxx.se/rfc/cookie_spec.html&#34;&gt;Netscape Cookie&lt;/a&gt; format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;name=value; name2=value2; ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Cookies can be a string or a text file, supply cookies in one of the two following ways.&lt;/p&gt; &#xA;&lt;p&gt;As a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -c &#34;name=value; name2=value2&#34; &#34;https://www.bilibili.com/video/av20203945&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As a text file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -c cookies.txt &#34;https://www.bilibili.com/video/av20203945&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Proxy&lt;/h3&gt; &#xA;&lt;p&gt;You can set the HTTP/SOCKS5 proxy using environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ HTTP_PROXY=&#34;http://127.0.0.1:1087/&#34; lux -i &#34;https://www.youtube.com/watch?v=Gnbch2osEeo&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ HTTP_PROXY=&#34;socks5://127.0.0.1:1080/&#34; lux -i &#34;https://www.youtube.com/watch?v=Gnbch2osEeo&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multi-Thread&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;-n&lt;/code&gt; option to set the number of download threads(default is 10, only works for multiple-parts video).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Special Tips:&lt;/strong&gt; Use too many threads in &lt;strong&gt;mgtv&lt;/strong&gt; download will cause HTTP 403 error, we recommend setting the number of threads to &lt;strong&gt;1&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Short link&lt;/h3&gt; &#xA;&lt;h4&gt;bilibili&lt;/h4&gt; &#xA;&lt;p&gt;You can just use &lt;code&gt;av&lt;/code&gt; or &lt;code&gt;ep&lt;/code&gt; number to download bilibili&#39;s video:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -i ep198381 av21877586&#xA;&#xA; Site:      ÂìîÂì©ÂìîÂì© bilibili.com&#xA; Title:     ÁãêÂ¶ñÂ∞èÁ∫¢Â®òÔºöÁ¨¨79ËØù ÂçóÂõΩÂÖ¨‰∏ªÁöÑÂêÉË¥ßÊú¨Ëâ≤&#xA; Type:      video&#xA; Streams:   # All available quality&#xA;     [default]  -------------------&#xA;     Quality:         È´òÊ∏Ö 1080P&#xA;     Size:            485.23 MiB (508798478 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&#xA;&#xA; Site:      ÂìîÂì©ÂìîÂì© bilibili.com&#xA; Title:     „ÄêËéìÊú∫‰ºö‰∫Ü„ÄëÁîúÂà∞ËôêÂì≠ÁöÑ13ÈõÜÂçïÈõÜMAD„ÄåÊàëÁé∞Âú®‰ªÄ‰πàÈÉΩ‰∏çÊÉ≥Âπ≤,Êõ¥‰∏çÊÉ≥Áúã14ÈõÜ„Äç&#xA; Type:      video&#xA; Streams:   # All available quality&#xA;     [default]  -------------------&#xA;     Quality:         È´òÊ∏Ö 1080P&#xA;     Size:            51.88 MiB (54403767 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use specified Referrer&lt;/h3&gt; &#xA;&lt;p&gt;A Referrer can be used for the request with the &lt;code&gt;-r&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -r &#34;https://www.bilibili.com/video/av20383055/&#34; &#34;http://cn-scnc1-dx.acgvideo.com/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify the output path and name&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;-o&lt;/code&gt; option sets the path, and &lt;code&gt;-O&lt;/code&gt; option sets the name of the downloaded file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -o ../ -O &#34;hello&#34; &#34;https://example.com&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debug Mode&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;-d&lt;/code&gt; option outputs network request messages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -i -d &#34;http://www.bilibili.com/video/av20088587&#34;&#xA;&#xA;URL:         http://www.bilibili.com/video/av20088587&#xA;Method:      GET&#xA;Headers:     http.Header{&#xA;    &#34;Referer&#34;:         {&#34;http://www.bilibili.com/video/av20088587&#34;},&#xA;    &#34;Accept&#34;:          {&#34;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#34;},&#xA;    &#34;Accept-Charset&#34;:  {&#34;UTF-8,*;q=0.5&#34;},&#xA;    &#34;Accept-Encoding&#34;: {&#34;gzip,deflate,sdch&#34;},&#xA;    &#34;Accept-Language&#34;: {&#34;en-US,en;q=0.8&#34;},&#xA;    &#34;User-Agent&#34;:      {&#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36&#34;},&#xA;}&#xA;Status Code: 200&#xA;&#xA;URL:         https://interface.bilibili.com/v2/playurl?appkey=84956560bc028eb7&amp;amp;cid=32782944&amp;amp;otype=json&amp;amp;qn=116&amp;amp;quality=116&amp;amp;type=&amp;amp;sign=fb2e3f261fec398652f96d358517e535&#xA;Method:      GET&#xA;Headers:     http.Header{&#xA;    &#34;Accept-Charset&#34;:  {&#34;UTF-8,*;q=0.5&#34;},&#xA;    &#34;Accept-Encoding&#34;: {&#34;gzip,deflate,sdch&#34;},&#xA;    &#34;Accept-Language&#34;: {&#34;en-US,en;q=0.8&#34;},&#xA;    &#34;User-Agent&#34;:      {&#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36&#34;},&#xA;    &#34;Referer&#34;:         {&#34;https://interface.bilibili.com/v2/playurl?appkey=84956560bc028eb7&amp;amp;cid=32782944&amp;amp;otype=json&amp;amp;qn=116&amp;amp;quality=116&amp;amp;type=&amp;amp;sign=fb2e3f261fec398652f96d358517e535&#34;},&#xA;    &#34;Accept&#34;:          {&#34;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#34;},&#xA;}&#xA;Status Code: 200&#xA;&#xA; Site:      ÂìîÂì©ÂìîÂì© bilibili.com&#xA; Title:     ÁáÉÊ≤πÂä®ÂäõÁöÑÈÅ•ÊéßÂ••Ëø™R8Ë∑ëËµõÈÅì&#xA; Type:      video&#xA; Streams:   # All available quality&#xA;     [default]  -------------------&#xA;     Quality:         È´òÊ∏Ö 1080P&#xA;     Size:            64.38 MiB (67504795 Bytes)&#xA;     # download with: lux -f default &#34;URL&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reuse extracted data&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;-j&lt;/code&gt; option will print the extracted data in JSON format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lux -j &#34;https://www.bilibili.com/video/av20203945&#34;&#xA;&#xA;{&#xA;    &#34;site&#34;: &#34;ÂìîÂì©ÂìîÂì© bilibili.com&#34;,&#xA;    &#34;title&#34;: &#34;„Äê2018ÊãúÂπ¥Á•≠ÂçïÂìÅ„ÄëÁõ∏ÈÅáday by day&#34;,&#xA;    &#34;type&#34;: &#34;video&#34;,&#xA;    &#34;streams&#34;: {&#xA;        &#34;15&#34;: {&#xA;            &#34;urls&#34;: [&#xA;                {&#xA;                    &#34;url&#34;: &#34;...&#34;,&#xA;                    &#34;size&#34;: 18355205,&#xA;                    &#34;ext&#34;: &#34;flv&#34;&#xA;                }&#xA;            ],&#xA;            &#34;quality&#34;: &#34;ÊµÅÁïÖ 360P&#34;,&#xA;            &#34;size&#34;: 18355205&#xA;        },&#xA;        &#34;32&#34;: {&#xA;            &#34;urls&#34;: [&#xA;                {&#xA;                    &#34;url&#34;: &#34;...&#34;,&#xA;                    &#34;size&#34;: 40058632,&#xA;                    &#34;ext&#34;: &#34;flv&#34;&#xA;                }&#xA;            ],&#xA;            &#34;quality&#34;: &#34;Ê∏ÖÊô∞ 480P&#34;,&#xA;            &#34;size&#34;: 40058632&#xA;        },&#xA;        &#34;64&#34;: {&#xA;            &#34;urls&#34;: [&#xA;                {&#xA;                    &#34;url&#34;: &#34;...&#34;,&#xA;                    &#34;size&#34;: 82691087,&#xA;                    &#34;ext&#34;: &#34;flv&#34;&#xA;                }&#xA;            ],&#xA;            &#34;quality&#34;: &#34;È´òÊ∏Ö 720P&#34;,&#xA;            &#34;size&#34;: 82691087&#xA;        },&#xA;        &#34;80&#34;: {&#xA;            &#34;urls&#34;: [&#xA;                {&#xA;                    &#34;url&#34;: &#34;...&#34;,&#xA;                    &#34;size&#34;: 121735559,&#xA;                    &#34;ext&#34;: &#34;flv&#34;&#xA;                }&#xA;            ],&#xA;            &#34;quality&#34;: &#34;È´òÊ∏Ö 1080P&#34;,&#xA;            &#34;size&#34;: 121735559&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -i&#x9;Information only&#xA;  -F string&#xA;    &#x9;URLs file path&#xA;  -d&#x9;Debug mode&#xA;  -j&#x9;Print extracted data&#xA;  -s&#x9;Minimum outputs&#xA;  -v&#x9;Show version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -f string&#xA;    &#x9;Select specific stream to download&#xA;  -p&#x9;Download playlist&#xA;  -n int&#xA;    &#x9;The number of download thread (only works for multiple-parts video) (default 10)&#xA;  -c string&#xA;    &#x9;Cookie&#xA;  -r string&#xA;    &#x9;Use specified Referrer&#xA;  -cs int&#xA;    &#x9;HTTP chunk size for downloading (in MB) (default 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Network:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -retry int&#xA;    &#x9;How many times to retry when the download failed (default 10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Playlist:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -start int&#xA;    &#x9;Playlist video to start at (default 1)&#xA;  -end int&#xA;    &#x9;Playlist video to end at&#xA;  -items string&#xA;    &#x9;Playlist video items to download. Separated by commas like: 1,5,6,8-10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Filesystem:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -o string&#xA;    &#x9;Specify the output path&#xA;  -O string&#xA;    &#x9;Specify the output file name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Subtitle:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -C&#x9;Download captions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Youku:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -ccode string&#xA;    &#x9;Youku ccode (default &#34;0590&#34;)&#xA;  -ckey string&#xA;    &#x9;Youku ckey (default &#34;7B19C0AB12633B22E7FE81271162026020570708D6CC189E4924503C49D243A0DE6CD84A766832C2C99898FC5ED31F3709BB3CDD82C96492E721BDD381735026&#34;)&#xA;  -password string&#xA;    &#x9;Youku password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;aria2:&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you use aria2 to download, you need to merge the multi-part videos yourself.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -aria2&#xA;    &#x9;Use Aria2 RPC to download&#xA;  -aria2addr string&#xA;    &#x9;Aria2 Address (default &#34;localhost:6800&#34;)&#xA;  -aria2method string&#xA;    &#x9;Aria2 Method (default &#34;http&#34;)&#xA;  -aria2token string&#xA;    &#x9;Aria2 RPC Token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Sites&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Site&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;   &lt;th&gt;üé¨ Videos&lt;/th&gt; &#xA;   &lt;th&gt;üåÅ Images&lt;/th&gt; &#xA;   &lt;th&gt;üîä Audio&lt;/th&gt; &#xA;   &lt;th&gt;üìö Playlist&lt;/th&gt; &#xA;   &lt;th&gt;üç™ VIP adaptation&lt;/th&gt; &#xA;   &lt;th&gt;Build Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÊäñÈü≥&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.douyin.com&#34;&gt;https://www.douyin.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_douyin.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_douyin.yml/badge.svg?sanitize=true&#34; alt=&#34;douyin&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂìîÂì©ÂìîÂì©&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.bilibili.com&#34;&gt;https://www.bilibili.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_bilibili.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_bilibili.yml/badge.svg?sanitize=true&#34; alt=&#34;bilibili&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂçäÊ¨°ÂÖÉ&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bcy.net&#34;&gt;https://bcy.net&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_bcy.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_bcy.yml/badge.svg?sanitize=true&#34; alt=&#34;bcy&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pixivision&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pixivision.net&#34;&gt;https://www.pixivision.net&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_pixivision.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_pixivision.yml/badge.svg?sanitize=true&#34; alt=&#34;pixivision&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;‰ºòÈÖ∑&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youku.com&#34;&gt;https://www.youku.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_youku.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_youku.yml/badge.svg?sanitize=true&#34; alt=&#34;youku&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YouTube&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com&#34;&gt;https://www.youtube.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_youtube.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_youtube.yml/badge.svg?sanitize=true&#34; alt=&#34;youtube&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ë•øÁìúËßÜÈ¢ëÔºàÂ§¥Êù°Ôºâ&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://m.toutiao.com&#34;&gt;https://m.toutiao.com&lt;/a&gt;, &lt;a href=&#34;https://v.ixigua.com&#34;&gt;https://v.ixigua.com&lt;/a&gt;, &lt;a href=&#34;https://www.ixigua.com&#34;&gt;https://www.ixigua.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_ixigua.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_ixigua.yml/badge.svg?sanitize=true&#34; alt=&#34;ixigua&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Áà±Â•áËâ∫&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.iqiyi.com&#34;&gt;https://www.iqiyi.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_iqiyi.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_iqiyi.yml/badge.svg?sanitize=true&#34; alt=&#34;iqiyi&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Êñ∞ÁâáÂú∫&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xinpianchang.com&#34;&gt;https://www.xinpianchang.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_xinpianchang.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_xinpianchang.yml/badge.svg?sanitize=true&#34; alt=&#34;xinpianchang&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ËäíÊûú TV&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mgtv.com&#34;&gt;https://www.mgtv.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_mgtv.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_mgtv.yml/badge.svg?sanitize=true&#34; alt=&#34;mgtv&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Á≥ñË±ÜÂπøÂú∫Ëàû&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tangdou.com&#34;&gt;https://www.tangdou.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_tangdou.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_tangdou.yml/badge.svg?sanitize=true&#34; alt=&#34;tangdou&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tumblr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tumblr.com&#34;&gt;https://www.tumblr.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_tumblr.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_tumblr.yml/badge.svg?sanitize=true&#34; alt=&#34;tumblr&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vimeo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://vimeo.com&#34;&gt;https://vimeo.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_vimeo.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_vimeo.yml/badge.svg?sanitize=true&#34; alt=&#34;vimeo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Facebook&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://facebook.com&#34;&gt;https://facebook.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_facebook.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_facebook.yml/badge.svg?sanitize=true&#34; alt=&#34;facebook&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÊñóÈ±ºËßÜÈ¢ë&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://v.douyu.com&#34;&gt;https://v.douyu.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_douyu.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_douyu.yml/badge.svg?sanitize=true&#34; alt=&#34;douyu&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÁßíÊãç&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.miaopai.com&#34;&gt;https://www.miaopai.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_miaopai.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_miaopai.yml/badge.svg?sanitize=true&#34; alt=&#34;miaopai&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂæÆÂçö&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://weibo.com&#34;&gt;https://weibo.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_weibo.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_weibo.yml/badge.svg?sanitize=true&#34; alt=&#34;weibo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Instagram&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.instagram.com&#34;&gt;https://www.instagram.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_instagram.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_instagram.yml/badge.svg?sanitize=true&#34; alt=&#34;instagram&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Twitter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com&#34;&gt;https://twitter.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_twitter.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_twitter.yml/badge.svg?sanitize=true&#34; alt=&#34;twitter&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ËÖæËÆØËßÜÈ¢ë&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://v.qq.com&#34;&gt;https://v.qq.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_qq.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_qq.yml/badge.svg?sanitize=true&#34; alt=&#34;qq&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÁΩëÊòì‰∫ëÈü≥‰πê&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://music.163.com&#34;&gt;https://music.163.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_netease.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_netease.yml/badge.svg?sanitize=true&#34; alt=&#34;netease&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Èü≥ÊÇ¶Âè∞&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://yinyuetai.com&#34;&gt;https://yinyuetai.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_yinyuetai.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_yinyuetai.yml/badge.svg?sanitize=true&#34; alt=&#34;yinyuetai&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÊûÅÂÆ¢Êó∂Èó¥&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://time.geekbang.org&#34;&gt;https://time.geekbang.org&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_geekbang.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_geekbang.yml/badge.svg?sanitize=true&#34; alt=&#34;geekbang&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pornhub&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pornhub.com&#34;&gt;https://pornhub.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_pornhub.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_pornhub.yml/badge.svg?sanitize=true&#34; alt=&#34;pornhub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XVIDEOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://xvideos.com&#34;&gt;https://xvideos.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_xvideos.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_xvideos.yml/badge.svg?sanitize=true&#34; alt=&#34;xvideos&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ËÅØÂêàÊñ∞ËÅûÁ∂≤&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://udn.com&#34;&gt;https://udn.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_udn.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_udn.yml/badge.svg?sanitize=true&#34; alt=&#34;udn&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TikTok&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tiktok.com&#34;&gt;https://www.tiktok.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_tiktok.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_tiktok.yml/badge.svg?sanitize=true&#34; alt=&#34;tiktok&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Â•ΩÁúãËßÜÈ¢ë&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://haokan.baidu.com&#34;&gt;https://haokan.baidu.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_haokan.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_haokan.yml/badge.svg?sanitize=true&#34; alt=&#34;haokan&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AcFun&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.acfun.cn&#34;&gt;https://www.acfun.cn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_acfun.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_acfun.yml/badge.svg?sanitize=true&#34; alt=&#34;acfun&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Eporner&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eporner.com&#34;&gt;https://eporner.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_eporner.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_eporner.yml/badge.svg?sanitize=true&#34; alt=&#34;eporner&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StreamTape&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://streamtape.com&#34;&gt;https://streamtape.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_streamtape.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_streamtape.yml/badge.svg?sanitize=true&#34; alt=&#34;streamtape&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ËôéÊâë&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hupu.com&#34;&gt;https://hupu.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_hupu.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_hupu.yml/badge.svg?sanitize=true&#34; alt=&#34;hupu&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ËôéÁâôËßÜÈ¢ë&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://v.huya.com&#34;&gt;https://v.huya.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_huya.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_huya.yml/badge.svg?sanitize=true&#34; alt=&#34;huya&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂñúÈ©¨ÊãâÈõÖ&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ximalaya.com&#34;&gt;https://www.ximalaya.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_ximalaya.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_ximalaya.yml/badge.svg?sanitize=true&#34; alt=&#34;ximalaya&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Âø´Êâã&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.kuaishou.com&#34;&gt;https://www.kuaishou.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_kuaishou.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_kuaishou.yml/badge.svg?sanitize=true&#34; alt=&#34;kuaishou&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reddit&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.reddit.com&#34;&gt;https://www.reddit.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_reddit.yml&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_reddit.yml/badge.svg?sanitize=true&#34; alt=&#34;reddit&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VKontakte&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://vk.com&#34;&gt;https://vk.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úì&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iawia002/lux/actions/workflows/stream_vk.yml/&#34;&gt;&lt;img src=&#34;https://github.com/iawia002/lux/actions/workflows/stream_vk.yml/badge.svg?sanitize=true&#34; alt=&#34;vk&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;h3&gt;‰ºòÈÖ∑&lt;/h3&gt; &#xA;&lt;p&gt;‰ºòÈÖ∑ÁöÑ &lt;code&gt;ccode&lt;/code&gt; ÁªèÂ∏∏ÂèòÂåñÂØºËá¥ lux ‰∏çÂèØÁî®ÔºåÂ¶ÇÊûú‰Ω†Áü•ÈÅìÊúâÊñ∞ÁöÑÂèØÁî®ÁöÑ &lt;code&gt;ccode&lt;/code&gt;ÔºåÂèØ‰ª•Áõ¥Êé•‰ΩøÁî® &lt;code&gt;lux -ccode ...&lt;/code&gt; ËÄå‰∏çÁî®Á≠âÂæÖ lux Êõ¥Êñ∞ÔºàÂΩìÁÑ∂Ôºå‰πüÊ¨¢Ëøé‰Ω†ÁªôÊàë‰ª¨Êèê‰∏Ä‰∏™ Pull request Êù•Êõ¥Êñ∞ÈªòËÆ§ÁöÑ &lt;code&gt;ccode&lt;/code&gt;Ôºâ&lt;/p&gt; &#xA;&lt;p&gt;ÊúÄÂ•ΩÊòØÊØèÊ¨°‰∏ãËΩΩÈÉΩÈôÑÂ∏¶ÁôªÂΩïËøáÁöÑ Cookie ‰ª•ÈÅøÂÖçÈÉ®ÂàÜ &lt;code&gt;ccode&lt;/code&gt; ÁöÑÈóÆÈ¢ò&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Lux is an open source project and built on the top of open-source projects. Check out the &lt;a href=&#34;https://raw.githubusercontent.com/iawia002/lux/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;p&gt;Thanks for &lt;a href=&#34;https://www.jetbrains.com/?from=lux&#34;&gt;JetBrains&lt;/a&gt; for the wonderful IDE.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=lux&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iawia002/lux/master/static/jetbrains-variant-3.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;Code with ‚ù§Ô∏è by &lt;a href=&#34;https://github.com/iawia002&#34;&gt;iawia002&lt;/a&gt; and lovely &lt;a href=&#34;https://github.com/iawia002/lux/graphs/contributors&#34;&gt;contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Similar projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rg3/youtube-dl&#34;&gt;youtube-dl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soimort/you-get&#34;&gt;you-get&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rylio/ytdl&#34;&gt;ytdl&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2018-present, iawia002&lt;/p&gt;</summary>
  </entry>
</feed>