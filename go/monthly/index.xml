<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-01T02:01:57Z</updated>
  <subtitle>Monthly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>evcc-io/evcc</title>
    <updated>2024-02-01T02:01:57Z</updated>
    <id>tag:github.com,2024-02-01:/evcc-io/evcc</id>
    <link href="https://github.com/evcc-io/evcc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sonne tanken ‚òÄÔ∏èüöò&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;evcc üöò‚òÄÔ∏è&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/evcc-io/evcc/actions?query=workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/evcc-io/evcc/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/evcc-io/evcc&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/evcc-io/evcc&#34; alt=&#34;Code Quality&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/evcc/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/evcc/-/evcc/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://open.vscode.dev/evcc-io/evcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?logo=visualstudiocode&amp;amp;label=&amp;amp;message=Open%20in%20VS%20Code&amp;amp;labelColor=2c2c32&amp;amp;color=007acc&amp;amp;logoColor=007acc&#34; alt=&#34;Open in Visual Studio Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloudsmith.io/~evcc/packages/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith&#34; alt=&#34;OSS hosting by cloudsmith&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/evcc-io/evcc/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/evcc-io/evcc.svg?sanitize=true&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;evcc is an extensible EV Charge Controller with PV integration implemented in &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt;. Featured in &lt;a href=&#34;https://www.pv-magazine.de/2021/01/15/selbst-ist-der-groeoenlandhof-wallbox-ladesteuerung-selbst-gebaut/&#34;&gt;PV magazine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/evcc-io/evcc/master/docs/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;simple and clean user interface&lt;/li&gt; &#xA; &lt;li&gt;wide range of supported &lt;a href=&#34;https://docs.evcc.io/docs/devices/chargers&#34;&gt;chargers&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ABL eMH1, Alfen (Eve), Bender (CC612/613), cFos (PowerBrain), Daheimladen, Ebee (Wallbox), Ensto (Chago Wallbox), &lt;a href=&#34;https://www.evse-wifi.de&#34;&gt;EVSEWifi/ smartWB&lt;/a&gt;, Garo (GLB, GLB+, LS4), go-eCharger, HardyBarth (eCB1, cPH1, cPH2), Heidelberg (Energy Control), Innogy (eBox), Juice (Charger Me), KEBA/BMW, Menneckes (Amedio, Amtron Premium/Xtra, Amtron ChargeConrol), older NRGkicks (before 2022/2023), &lt;a href=&#34;https://openwb.de/&#34;&gt;openWB (includes Pro)&lt;/a&gt;, Optec (Mobility One), PC Electric (includes Garo), Siemens, TechniSat (Technivolt), &lt;a href=&#34;https://www.warp-charger.com&#34;&gt;Tinkerforge Warp Charger&lt;/a&gt;, Ubitricity (Heinz), Vestel, Wallbe, Webasto (Live), Mobile Charger Connect and many more&lt;/li&gt; &#xA;   &lt;li&gt;experimental EEBus support (Elli, PMCC)&lt;/li&gt; &#xA;   &lt;li&gt;experimental OCPP support&lt;/li&gt; &#xA;   &lt;li&gt;Build-your-own: Phoenix Contact (includes ESL Walli), &lt;a href=&#34;http://evracing.cz/simple-evse-wallbox&#34;&gt;EVSE DIN&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Smart-Home outlets: FritzDECT, Shelly, Tasmota, TP-Link&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;wide range of supported &lt;a href=&#34;https://docs.evcc.io/docs/devices/meters&#34;&gt;meters&lt;/a&gt; for grid, pv, battery and charger: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ModBus: Eastron SDM, MPM3PM, ORNO WE, SBC ALE3 and many more, see &lt;a href=&#34;https://github.com/volkszaehler/mbmd#supported-devices&#34;&gt;https://github.com/volkszaehler/mbmd#supported-devices&lt;/a&gt; for a complete list&lt;/li&gt; &#xA;   &lt;li&gt;Integrated systems: SMA Sunny Home Manager and Energy Meter, KOSTAL Smart Energy Meter (KSEM, EMxx)&lt;/li&gt; &#xA;   &lt;li&gt;Sunspec-compatible inverter or home battery devices: Fronius, SMA, SolarEdge, KOSTAL, STECA, E3DC, ...&lt;/li&gt; &#xA;   &lt;li&gt;and various others: Discovergy, Tesla PowerWall, LG ESS HOME, OpenEMS (FENECON)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.evcc.io/docs/devices/vehicles&#34;&gt;vehicle&lt;/a&gt; integration (state of charge, remote charge, battery and preconditioning status): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Audi, BMW, Citro√´n, Dacia, Fiat, Ford, Hyundai, Jaguar, Kia, Landrover, &lt;del&gt;Mercedes&lt;/del&gt;, Mini, Nissan, Opel, Peugeot, Porsche, Renault, Seat, Smart, Skoda, Tesla, Volkswagen, Volvo, ...&lt;/li&gt; &#xA;   &lt;li&gt;Services: OVMS, Tronity&lt;/li&gt; &#xA;   &lt;li&gt;Scooters: Niu, &lt;del&gt;Silence&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.evcc.io/docs/reference/plugins&#34;&gt;plugins&lt;/a&gt; for integrating with any charger/ meter/ vehicle: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Modbus, HTTP, MQTT, Javascript, WebSockets and shell scripts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;status &lt;a href=&#34;https://docs.evcc.io/docs/reference/configuration/messaging&#34;&gt;notifications&lt;/a&gt; using &lt;a href=&#34;https://telegram.org&#34;&gt;Telegram&lt;/a&gt;, &lt;a href=&#34;https://pushover.net&#34;&gt;PushOver&lt;/a&gt; and &lt;a href=&#34;https://containrrr.dev/shoutrrr/&#34;&gt;many more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;logging using &lt;a href=&#34;https://www.influxdata.com&#34;&gt;InfluxDB&lt;/a&gt; and &lt;a href=&#34;https://grafana.com/grafana/&#34;&gt;Grafana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;granular charge power control down to mA steps with supported chargers (labeled by e.g. smartWB as &lt;a href=&#34;https://board.evse-wifi.de/viewtopic.php?f=16&amp;amp;t=187&#34;&gt;OLC&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;REST and MQTT &lt;a href=&#34;https://docs.evcc.io/docs/reference/api&#34;&gt;APIs&lt;/a&gt; for integration with home automation systems&lt;/li&gt; &#xA; &lt;li&gt;Add-ons for &lt;a href=&#34;https://github.com/evcc-io/evcc-hassio-addon&#34;&gt;HomeAssistant&lt;/a&gt; and &lt;a href=&#34;https://www.openhab.org/addons/bindings/evcc&#34;&gt;OpenHAB&lt;/a&gt; (not maintained by the evcc core team)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll find everything you need in our &lt;a href=&#34;https://docs.evcc.io/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;To build evcc from source, &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt; 1.21 and &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node&lt;/a&gt; 18 are required.&lt;/p&gt; &#xA;&lt;p&gt;Build and run go backend. The UI becomes available at &lt;a href=&#34;http://127.0.0.1:7070/&#34;&gt;http://127.0.0.1:7070/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make install-ui&#xA;make ui&#xA;make install&#xA;make&#xA;./evcc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cross Compile&lt;/h3&gt; &#xA;&lt;p&gt;To compile a version for an ARM device like a Raspberry Pi set GO command variables as needed, eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;GOOS=linux GOARCH=arm GOARM=6 make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;UI development&lt;/h3&gt; &#xA;&lt;p&gt;For frontend development start the Vue toolchain in dev-mode. Open &lt;a href=&#34;http://127.0.0.1:7071/&#34;&gt;http://127.0.0.1:7071/&lt;/a&gt; to get to the livelreloading development server. It pulls its data from port 7070 (see above).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration tests&lt;/h3&gt; &#xA;&lt;p&gt;We use Playwright for end-to-end integration tests. They start a local evcc instance with different configuration yamls and prefilled databases. To run them, you have to do a local build first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make ui build&#xA;npm run playwright&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Simulating device state&lt;/h4&gt; &#xA;&lt;p&gt;Since we dont want to run tests agains real devices or cloud services we&#39;ve build a simple simulator that lets you emulated meters, vehicles and loadpoints. The simulators web interface runs on &lt;a href=&#34;http://localhost:7072&#34;&gt;http://localhost:7072&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run simulator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run an evcc instance that uses simulator data. This configuration runs with a very high refresh interval to speed up testing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make ui build&#xA;./evcc --config tests/simulator.evcc.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code formatting&lt;/h3&gt; &#xA;&lt;p&gt;We use linters (golangci-lint, Prettier) to keep a coherent source code formatting. It&#39;s recommended to use the format-on-save feature of your editor. For VSCode use the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=golang.Go&#34;&gt;Go&lt;/a&gt;, &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&#34;&gt;Prettier&lt;/a&gt; and &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=octref.vetur&#34;&gt;Veture&lt;/a&gt; extension. You can manually reformat your code by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make lint&#xA;make lint-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changing templates&lt;/h3&gt; &#xA;&lt;p&gt;evcc supports a massive amount of different devices. To keep our documentation and website in sync with the latest software the core project (this repo) generates meta-data that&#39;s pushed to the &lt;code&gt;docs&lt;/code&gt; and &lt;code&gt;evcc.io&lt;/code&gt; repository. Make sure to update this meta-data every time you make changes to a templates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you miss one of the above steps Gitub Actions will likely trigger a &lt;strong&gt;Porcelain&lt;/strong&gt; error.&lt;/p&gt; &#xA;&lt;h3&gt;Adding or modifying translations&lt;/h3&gt; &#xA;&lt;p&gt;evcc already includes many translations for the UI. Weblate Hosted is used to maintain all languages. Feel free to add more languages or verify and edit existing translations. Weblate will automatically push all modifications on a regular base to the evcc repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hosted.weblate.org/engage/evcc/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/evcc/-/evcc/287x66-grey.png&#34; alt=&#34;Weblate Hosted&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/evcc/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/evcc/-/evcc/multi-auto.svg?sanitize=true&#34; alt=&#34;Languages&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hosted.weblate.org/projects/evcc/evcc/&#34;&gt;https://hosted.weblate.org/projects/evcc/evcc/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsorship&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/evcc-io/evcc/master/docs/logo.png&#34; align=&#34;right&#34; width=&#34;150&#34;&gt; &#xA;&lt;p&gt;evcc believes in open source software. We&#39;re committed to provide best in class EV charging experience. Maintaining evcc consumes time and effort. With the vast amount of different devices to support, we depend on community and vendor support to keep evcc alive.&lt;/p&gt; &#xA;&lt;p&gt;While evcc is open source, we would also like to encourage vendors to provide open source hardware devices, public documentation and support open source projects like ours that provide additional value to otherwise closed hardware. Where this is not the case, evcc requires &#34;sponsor token&#34; to finance ongoing development and support of evcc.&lt;/p&gt; &#xA;&lt;p&gt;The personal sponsor token requires a &lt;a href=&#34;https://github.com/sponsors/evcc-io&#34;&gt;Github Sponsorship&lt;/a&gt; and can be requested at &lt;a href=&#34;https://sponsor.evcc.io/&#34;&gt;sponsor.evcc.io&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wagoodman/dive</title>
    <updated>2024-02-01T02:01:57Z</updated>
    <id>tag:github.com,2024-02-01:/wagoodman/dive</id>
    <link href="https://github.com/wagoodman/dive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for exploring each layer in a docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dive&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/wagoodman/dive.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wagoodman/dive/actions/workflows/validations.yaml&#34;&gt;&lt;img src=&#34;https://github.com/wagoodman/dive/actions/workflows/validations.yaml/badge.svg?sanitize=true&#34; alt=&#34;Validations&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/wagoodman/dive&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/wagoodman/dive&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wagoodman/dive/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT%202.0-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/wagoodman&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?style=flat&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A tool for exploring a docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagoodman/dive/main/.data/demo.gif&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To analyze a Docker image simply run dive with an image tag/id/digest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;your-image-tag&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or you can dive with docker command directly&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;alias dive=&#34;docker run -ti --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive&#34;&#xA;dive &amp;lt;your-image-tag&amp;gt;&#xA;&#xA;# for example&#xA;dive nginx:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you want to build your image then jump straight into analyzing it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive build -t &amp;lt;some-tag&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building on Macbook (supporting only the Docker container engine)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;      -v /var/run/docker.sock:/var/run/docker.sock \&#xA;      -v  &#34;$(pwd)&#34;:&#34;$(pwd)&#34; \&#xA;      -w &#34;$(pwd)&#34; \&#xA;      -v &#34;$HOME/.dive.yaml&#34;:&#34;$HOME/.dive.yaml&#34; \&#xA;      wagoodman/dive:latest build -t &amp;lt;some-tag&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally you can run this in your CI pipeline to ensure you&#39;re keeping wasted space to a minimum (this skips the UI):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CI=true dive &amp;lt;your-image&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagoodman/dive/main/.data/demo-ci.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is beta quality!&lt;/strong&gt; &lt;em&gt;Feel free to submit an issue if you want a new feature or find a bug :)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Show Docker image contents broken down by layer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Indicate what&#39;s changed in each layer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Files that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Estimate &#34;image efficiency&#34;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage &#34;score&#34; and total wasted file space is provided.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quick build/analysis cycles&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can build a Docker image and do an immediate analysis with one command: &lt;code&gt;dive build -t some-tag .&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You only need to replace your &lt;code&gt;docker build&lt;/code&gt; command with the same &lt;code&gt;dive build&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CI Integration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Analyze an image and get a pass/fail result based on the image efficiency and wasted space. Simply set &lt;code&gt;CI=true&lt;/code&gt; in the environment when invoking any valid dive command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multiple Image Sources and Container Engines Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;With the &lt;code&gt;--source&lt;/code&gt; option, you can select where to fetch the container image from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;your-image&amp;gt; --source &amp;lt;source&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;source&amp;gt;://&amp;lt;your-image&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With valid &lt;code&gt;source&lt;/code&gt; options as such:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt;: Docker engine (the default option)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-archive&lt;/code&gt;: A Docker Tar Archive from disk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;podman&lt;/code&gt;: Podman engine (linux only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu/Debian&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export DIVE_VERSION=$(curl -sL &#34;https://api.github.com/repos/wagoodman/dive/releases/latest&#34; | grep &#39;&#34;tag_name&#34;:&#39; | sed -E &#39;s/.*&#34;v([^&#34;]+)&#34;.*/\1/&#39;)&#xA;curl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.deb&#xA;sudo apt install ./dive_${DIVE_VERSION}_linux_amd64.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;RHEL/Centos&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export DIVE_VERSION=$(curl -sL &#34;https://api.github.com/repos/wagoodman/dive/releases/latest&#34; | grep &#39;&#34;tag_name&#34;:&#39; | sed -E &#39;s/.*&#34;v([^&#34;]+)&#34;.*/\1/&#39;)&#xA;curl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.rpm&#xA;rpm -i dive_${DIVE_VERSION}_linux_amd64.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Available in the &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/dive/&#34;&gt;extra repository&lt;/a&gt; and can be installed via &lt;a href=&#34;https://wiki.archlinux.org/title/Pacman&#34;&gt;pacman&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -S dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo port install dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or download the latest Darwin build from the &lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Download the &lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;latest release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Go tools&lt;/strong&gt; Requires Go version 1.10 or higher.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get github.com/wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: installing in this way you will not see a proper version when running &lt;code&gt;dive -v&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Nix/NixOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;On NixOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -iA nixos.dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On non-NixOS (Linux, Mac)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -iA nixpkgs.dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull quay.io/wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When running you&#39;ll need to include the docker socket file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker for Windows (showing PowerShell compatible line breaks; collapse to a single line for Command Prompt compatibility)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; depending on the version of docker you are running locally you may need to specify the docker API version as an environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;   DOCKER_API_VERSION=1.37 dive ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you are running with a docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    -e DOCKER_API_VERSION=1.37 \&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CI Integration&lt;/h2&gt; &#xA;&lt;p&gt;When running dive with the environment variable &lt;code&gt;CI=true&lt;/code&gt; then the dive UI will be bypassed and will instead analyze your docker image, giving it a pass/fail indication via return code. Currently there are three metrics supported via a &lt;code&gt;.dive-ci&lt;/code&gt; file that you can put at the root of your repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rules:&#xA;  # If the efficiency is measured below X%, mark as failed.&#xA;  # Expressed as a ratio between 0-1.&#xA;  lowestEfficiency: 0.95&#xA;&#xA;  # If the amount of wasted space is at least X or larger than X, mark as failed.&#xA;  # Expressed in B, KB, MB, and GB.&#xA;  highestWastedBytes: 20MB&#xA;&#xA;  # If the amount of wasted space makes up for X% or more of the image, mark as failed.&#xA;  # Note: the base image layer is NOT included in the total image size.&#xA;  # Expressed as a ratio between 0-1; fails if the threshold is met or crossed.&#xA;  highestUserWastedPercent: 0.20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can override the CI config path with the &lt;code&gt;--ci-config&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h2&gt;KeyBindings&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key Binding&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + C&lt;/kbd&gt; or &lt;kbd&gt;Q&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switch between the layer and filetree views&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + F&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filter files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll up a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll down a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Layer view: see aggregated image modifications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + L&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Layer view: see current layer modifications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Space&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: collapse/uncollapse a directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + Space&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: collapse/uncollapse all directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide added files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + R&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide removed files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + M&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide modified files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + U&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide unmodified files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + B&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide file attributes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: scroll up a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: scroll down a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;UI Configuration&lt;/h2&gt; &#xA;&lt;p&gt;No configuration is necessary, however, you can create a config file and override values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# supported options are &#34;docker&#34; and &#34;podman&#34;&#xA;container-engine: docker&#xA;# continue with analysis even if there are errors parsing the image archive&#xA;ignore-errors: false&#xA;log:&#xA;  enabled: true&#xA;  path: ./dive.log&#xA;  level: info&#xA;&#xA;# Note: you can specify multiple bindings by separating values with a comma.&#xA;# Note: UI hinting is derived from the first binding&#xA;keybinding:&#xA;  # Global bindings&#xA;  quit: ctrl+c&#xA;  toggle-view: tab&#xA;  filter-files: ctrl+f, ctrl+slash&#xA;&#xA;  # Layer view specific bindings&#xA;  compare-all: ctrl+a&#xA;  compare-layer: ctrl+l&#xA;&#xA;  # File view specific bindings&#xA;  toggle-collapse-dir: space&#xA;  toggle-collapse-all-dir: ctrl+space&#xA;  toggle-added-files: ctrl+a&#xA;  toggle-removed-files: ctrl+r&#xA;  toggle-modified-files: ctrl+m&#xA;  toggle-unmodified-files: ctrl+u&#xA;  toggle-filetree-attributes: ctrl+b&#xA;  page-up: pgup&#xA;  page-down: pgdn&#xA;&#xA;diff:&#xA;  # You can change the default files shown in the filetree (right pane). All diff types are shown by default.&#xA;  hide:&#xA;    - added&#xA;    - removed&#xA;    - modified&#xA;    - unmodified&#xA;&#xA;filetree:&#xA;  # The default directory-collapse state&#xA;  collapse-dir: false&#xA;&#xA;  # The percentage of screen width the filetree should take on the screen (must be &amp;gt;0 and &amp;lt;1)&#xA;  pane-width: 0.5&#xA;&#xA;  # Show the file attributes next to the filetree&#xA;  show-attributes: true&#xA;&#xA;layer:&#xA;  # Enable showing all changes from this layer and every previous layer&#xA;  show-aggregated-changes: false&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;dive will search for configs in the following locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_DIRS/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.config/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.dive.yaml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;.yml&lt;/code&gt; can be used instead of &lt;code&gt;.yaml&lt;/code&gt; if desired.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>containers/podman</title>
    <updated>2024-02-01T02:01:57Z</updated>
    <id>tag:github.com,2024-02-01:/containers/podman</id>
    <link href="https://github.com/containers/podman" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Podman: A tool for managing OCI containers and pods.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/containers/common/main/logos/podman-logo-full-vert.png&#34; alt=&#34;PODMAN logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Podman: A tool for managing OCI containers and pods&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/containers/podman&#34; alt=&#34;GitHub release (latest SemVer)&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/containers/libpod&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/containers/libpod&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Podman (the POD MANager) is a tool for managing containers and images, volumes mounted into those containers, and pods made from groups of containers. Podman runs containers on Linux, but can also be used on Mac and Windows systems using a Podman-managed virtual machine. Podman is based on libpod, a library for container lifecycle management that is also contained in this repository. The libpod library provides APIs for managing containers, pods, container images, and volumes.&lt;/p&gt; &#xA;&lt;p&gt;All releases are GPG signed. Public keys of members of the team approved to make releases are located &lt;a href=&#34;https://github.com/containers/release-keys/tree/main/podman&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Continuous Integration: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://cirrus-ci.com/github/containers/podman/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/containers/podman.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://godoc.org/github.com/containers/podman/libpod&#34;&gt;GoDoc: &lt;img src=&#34;https://godoc.org/github.com/containers/podman/libpod?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/DOWNLOADS.md&#34;&gt;Downloads&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview and scope&lt;/h2&gt; &#xA;&lt;p&gt;At a high level, the scope of Podman and libpod is the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for multiple container image formats, including OCI and Docker images.&lt;/li&gt; &#xA; &lt;li&gt;Full management of those images, including pulling from various sources (including trust and verification), creating (built via Containerfile or Dockerfile or committed from a container), and pushing to registries and other storage backends.&lt;/li&gt; &#xA; &lt;li&gt;Full management of container lifecycle, including creation (both from an image and from an exploded root filesystem), running, checkpointing and restoring (via CRIU), and removal.&lt;/li&gt; &#xA; &lt;li&gt;Full management of container networking, using Netavark.&lt;/li&gt; &#xA; &lt;li&gt;Support for pods, groups of containers that share resources and are managed together.&lt;/li&gt; &#xA; &lt;li&gt;Support for running containers and pods without root or other elevated privileges.&lt;/li&gt; &#xA; &lt;li&gt;Resource isolation of containers and pods.&lt;/li&gt; &#xA; &lt;li&gt;Support for a Docker-compatible CLI interface, which can both run containers locally and on remote systems.&lt;/li&gt; &#xA; &lt;li&gt;No manager daemon, for improved security and lower resource utilization at idle.&lt;/li&gt; &#xA; &lt;li&gt;Support for a REST API providing both a Docker-compatible interface and an improved interface exposing advanced Podman functionality.&lt;/li&gt; &#xA; &lt;li&gt;Support for running on Windows and Mac via virtual machines run by &lt;code&gt;podman machine&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;A fully-featured GUI frontend for &lt;code&gt;podman machine&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Further improvements to &lt;code&gt;podman generate kube&lt;/code&gt; and &lt;code&gt;podman play kube&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Improvements to Pods, including the addition of pod-level resource limits&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Communications&lt;/h2&gt; &#xA;&lt;p&gt;If you think you&#39;ve identified a security issue in the project, please &lt;em&gt;DO NOT&lt;/em&gt; report the issue publicly via the GitHub issue tracker, mailing list, or IRC. Instead, send an email with as many details as possible to &lt;code&gt;security@lists.podman.io&lt;/code&gt;. This is a private mailing list for the core maintainers.&lt;/p&gt; &#xA;&lt;p&gt;For general questions and discussion, please use Podman&#39;s &lt;a href=&#34;https://podman.io/community/#slack-irc-matrix-and-discord&#34;&gt;channels&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For discussions around issues/bugs and features, you can use the GitHub &lt;a href=&#34;https://github.com/containers/podman/issues&#34;&gt;issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/containers/podman/pulls&#34;&gt;PRs&lt;/a&gt; tracking system.&lt;/p&gt; &#xA;&lt;p&gt;There is also a &lt;a href=&#34;https://lists.podman.io/archives/&#34;&gt;mailing list&lt;/a&gt; at &lt;code&gt;lists.podman.io&lt;/code&gt;. You can subscribe by sending a message to &lt;code&gt;podman-join@lists.podman.io&lt;/code&gt; with the subject &lt;code&gt;subscribe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Rootless&lt;/h2&gt; &#xA;&lt;p&gt;Podman can be easily run as a normal user, without requiring a setuid binary. When run without root, Podman containers use user namespaces to set root in the container to the user running Podman. Rootless Podman runs locked-down containers with no privileges that the user running the container does not have. Some of these restrictions can be lifted (via &lt;code&gt;--privileged&lt;/code&gt;, for example), but rootless containers will never have more privileges than the user that launched them. If you run Podman as your user and mount in &lt;code&gt;/etc/passwd&lt;/code&gt; from the host, you still won&#39;t be able to change it, since your user doesn&#39;t have permission to do so.&lt;/p&gt; &#xA;&lt;p&gt;Almost all normal Podman functionality is available, though there are some &lt;a href=&#34;https://github.com/containers/podman/raw/main/rootless.md&#34;&gt;shortcomings&lt;/a&gt;. Any recent Podman release should be able to run rootless without any additional configuration, though your operating system may require some additional configuration detailed in the &lt;a href=&#34;https://podman.io/getting-started/installation&#34;&gt;install guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A little configuration by an administrator is required before rootless Podman can be used, the necessary setup is documented &lt;a href=&#34;https://github.com/containers/podman/raw/main/docs/tutorials/rootless_tutorial.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Podman Desktop&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://podman-desktop.io/&#34;&gt;Podman Desktop&lt;/a&gt; is a new project under the container organization built to help the developers working with containers from their local environment with a desktop UI. Podman Desktop is still in its early days, but already provides capabilities to list your images, interact with containers (access logs, get a terminal), connect to registries (pull private images, push your images) and configure podman settings (proxies). The project develops on &lt;a href=&#34;https://github.com/containers/podman-desktop&#34;&gt;GitHub&lt;/a&gt; and contributors are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Out of scope&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Specialized signing and pushing of images to various storage backends. See &lt;a href=&#34;https://github.com/containers/skopeo/&#34;&gt;Skopeo&lt;/a&gt; for those tasks.&lt;/li&gt; &#xA; &lt;li&gt;Support for the Kubernetes CRI interface for container management. The &lt;a href=&#34;https://github.com/cri-o/cri-o&#34;&gt;CRI-O&lt;/a&gt; daemon specializes in that.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;OCI Projects Plans&lt;/h2&gt; &#xA;&lt;p&gt;Podman uses OCI projects and best of breed libraries for different aspects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Runtime: We use the &lt;a href=&#34;https://github.com/opencontainers/runtime-tools&#34;&gt;OCI runtime tools&lt;/a&gt; to generate OCI runtime configurations that can be used with any OCI-compliant runtime, like &lt;a href=&#34;https://github.com/containers/crun/&#34;&gt;crun&lt;/a&gt; and &lt;a href=&#34;https://github.com/opencontainers/runc/&#34;&gt;runc&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Images: Image management uses the &lt;a href=&#34;https://github.com/containers/image&#34;&gt;containers/image&lt;/a&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;Storage: Container and image storage is managed by &lt;a href=&#34;https://github.com/containers/storage&#34;&gt;containers/storage&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Networking: Networking support through use of &lt;a href=&#34;https://github.com/containers/netavark&#34;&gt;Netavark&lt;/a&gt; and &lt;a href=&#34;https://github.com/containers/aardvark-dns&#34;&gt;Aardvark&lt;/a&gt;. Rootless networking is handled via &lt;a href=&#34;https://github.com/rootless-containers/slirp4netns&#34;&gt;slirp4netns&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Builds: Builds are supported via &lt;a href=&#34;https://github.com/containers/buildah&#34;&gt;Buildah&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Conmon: &lt;a href=&#34;https://github.com/containers/conmon&#34;&gt;Conmon&lt;/a&gt; is a tool for monitoring OCI runtimes, used by both Podman and CRI-O.&lt;/li&gt; &#xA; &lt;li&gt;Seccomp: A unified &lt;a href=&#34;https://github.com/containers/common/raw/main/pkg/seccomp/seccomp.json&#34;&gt;Seccomp&lt;/a&gt; policy for Podman, Buildah, and CRI-O.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Podman Information for Developers&lt;/h2&gt; &#xA;&lt;p&gt;For blogs, release announcements and more, please checkout the &lt;a href=&#34;https://podman.io&#34;&gt;podman.io&lt;/a&gt; website!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/install.md&#34;&gt;Installation notes&lt;/a&gt;&lt;/strong&gt; Information on how to install Podman in your environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/containers/common/raw/main/pkg/hooks/README.md&#34;&gt;OCI Hooks Support&lt;/a&gt;&lt;/strong&gt; Information on how Podman configures &lt;a href=&#34;https://github.com/opencontainers/runtime-spec/raw/v1.0.2/config.md#posix-platform-hooks&#34;&gt;OCI Hooks&lt;/a&gt; to run when launching a container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.podman.io/en/latest/_static/api.html&#34;&gt;Podman API&lt;/a&gt;&lt;/strong&gt; Documentation on the Podman REST API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://podman.readthedocs.io/en/latest/Commands.html&#34;&gt;Podman Commands&lt;/a&gt;&lt;/strong&gt; A list of the Podman commands with links to their man pages and in many cases videos showing the commands in use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/troubleshooting.md&#34;&gt;Podman Troubleshooting Guide&lt;/a&gt;&lt;/strong&gt; A list of common issues and solutions for Podman.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/transfer.md&#34;&gt;Podman Usage Transfer&lt;/a&gt;&lt;/strong&gt; Useful information for ops and dev transfer as it relates to infrastructure that utilizes Podman. This page includes tables showing Docker commands and their Podman equivalent commands.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/docs/tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/strong&gt; Tutorials on using Podman.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/containers/podman/raw/main/docs/tutorials/remote_client.md&#34;&gt;Remote Client&lt;/a&gt;&lt;/strong&gt; A brief how-to on using the Podman remote client.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/containers/podman/raw/main/docs/tutorials/rootless_tutorial.md&#34;&gt;Basic Setup and Use of Podman in a Rootless environment&lt;/a&gt;&lt;/strong&gt; A tutorial showing the setup and configuration necessary to run Rootless Podman.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/RELEASE_NOTES.md&#34;&gt;Release Notes&lt;/a&gt;&lt;/strong&gt; Release notes for recent Podman versions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/strong&gt; Information about contributing to this project.&lt;/p&gt; &#xA;&lt;h2&gt;Buildah and Podman relationship&lt;/h2&gt; &#xA;&lt;p&gt;Buildah and Podman are two complementary open-source projects that are available on most Linux platforms and both projects reside at &lt;a href=&#34;https://github.com&#34;&gt;GitHub.com&lt;/a&gt; with Buildah &lt;a href=&#34;https://github.com/containers/buildah&#34;&gt;here&lt;/a&gt; and Podman &lt;a href=&#34;https://github.com/containers/podman&#34;&gt;here&lt;/a&gt;. Both, Buildah and Podman are command line tools that work on Open Container Initiative (OCI) images and containers. The two projects differentiate in their specialization.&lt;/p&gt; &#xA;&lt;p&gt;Buildah specializes in building OCI images. Buildah&#39;s commands replicate all of the commands that are found in a Dockerfile. This allows building images with and without Dockerfiles while not requiring any root privileges. Buildah‚Äôs ultimate goal is to provide a lower-level coreutils interface to build images. The flexibility of building images without Dockerfiles allows for the integration of other scripting languages into the build process. Buildah follows a simple fork-exec model and does not run as a daemon but it is based on a comprehensive API in golang, which can be vendored into other tools.&lt;/p&gt; &#xA;&lt;p&gt;Podman specializes in all of the commands and functions that help you to maintain and modify OCI images, such as pulling and tagging. It also allows you to create, run, and maintain those containers created from those images. For building container images via Dockerfiles, Podman uses Buildah&#39;s golang API and can be installed independently from Buildah.&lt;/p&gt; &#xA;&lt;p&gt;A major difference between Podman and Buildah is their concept of a container. Podman allows users to create &#34;traditional containers&#34; where the intent of these containers is to be long lived. While Buildah containers are really just created to allow content to be added back to the container image. An easy way to think of it is the &lt;code&gt;buildah run&lt;/code&gt; command emulates the RUN command in a Dockerfile while the &lt;code&gt;podman run&lt;/code&gt; command emulates the &lt;code&gt;docker run&lt;/code&gt; command in functionality. Because of this and their underlying storage differences, you can not see Podman containers from within Buildah or vice versa.&lt;/p&gt; &#xA;&lt;p&gt;In short, Buildah is an efficient way to create OCI images while Podman allows you to manage and maintain those images and containers in a production environment using familiar container cli commands. For more details, see the &lt;a href=&#34;https://github.com/containers/buildah/tree/main/docs/containertools&#34;&gt;Container Tools Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Podman Hello&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ podman run quay.io/podman/hello&#xA;Trying to pull quay.io/podman/hello:latest...&#xA;Getting image source signatures&#xA;Copying blob a6b3126f3807 done&#xA;Copying config 25c667d086 done&#xA;Writing manifest to image destination&#xA;Storing signatures&#xA;!... Hello Podman World ...!&#xA;&#xA;         .--&#34;--.&#xA;       / -     - \&#xA;      / (O)   (O) \&#xA;   ~~~| -=(,Y,)=- |&#xA;    .---. /`  \   |~~&#xA; ~/  o  o \~~~~.----. ~~&#xA;  | =(X)= |~  / (O (O) \&#xA;   ~~~~~~~  ~| =(Y_)=-  |&#xA;  ~~~~    ~~~|   U      |~~&#xA;&#xA;Project:   https://github.com/containers/podman&#xA;Website:   https://podman.io&#xA;Documents: https://docs.podman.io&#xA;Twitter:   @Podman_io&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>