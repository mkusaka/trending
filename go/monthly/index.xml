<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-01T02:04:17Z</updated>
  <subtitle>Monthly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>danielgtaylor/huma</title>
    <updated>2024-04-01T02:04:17Z</updated>
    <id>tag:github.com,2024-04-01:/danielgtaylor/huma</id>
    <link href="https://github.com/danielgtaylor/huma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Huma REST/HTTP API Framework for Golang with OpenAPI 3.1&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgtaylor/huma/main/#&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://huma.rocks/huma-dark.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://huma.rocks/huma.png&#34;&gt; &#xA;  &lt;img alt=&#34;Huma Logo&#34; src=&#34;https://huma.rocks/huma.png&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huma.rocks/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20By-HUMA-f40273&#34; alt=&#34;HUMA Powered&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/danielgtaylor/huma/actions?query=workflow%3ACI+branch%3Amain++&#34;&gt;&lt;img src=&#34;https://github.com/danielgtaylor/huma/workflows/CI/badge.svg?branch=main&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/danielgtaylor/huma&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/danielgtaylor/huma/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/danielgtaylor/huma/v2?tab=doc&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/danielgtaylor/huma/v2?status.svg?sanitize=true&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/danielgtaylor/huma/v2&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/danielgtaylor/huma/v2&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgtaylor/huma/main/#intro&#34;&gt;What is huma?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgtaylor/huma/main/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgtaylor/huma/main/#example&#34;&gt;Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielgtaylor/huma/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;intro&#34;&gt;&lt;/a&gt; A modern, simple, fast &amp;amp; flexible micro framework for building HTTP REST/RPC APIs in Go backed by OpenAPI 3 and JSON Schema. Pronounced IPA: &lt;a href=&#34;https://en.wiktionary.org/wiki/Wiktionary:International_Phonetic_Alphabet&#34;&gt;/&#39;hjuːmɑ/&lt;/a&gt;. The goals of this project are to provide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Incremental adoption for teams with existing services &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Bring your own router (including Go 1.22+), middleware, and logging/metrics&lt;/li&gt; &#xA;   &lt;li&gt;Extensible OpenAPI &amp;amp; JSON Schema layer to document existing routes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A modern REST or HTTP RPC API backend framework for Go developers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Described by &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification/raw/master/versions/3.1.0.md&#34;&gt;OpenAPI 3.1&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://json-schema.org/&#34;&gt;JSON Schema&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Guard rails to prevent common mistakes&lt;/li&gt; &#xA; &lt;li&gt;Documentation that can&#39;t get out of date&lt;/li&gt; &#xA; &lt;li&gt;High-quality generated developer tooling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Declarative interface on top of your router of choice: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Operation &amp;amp; model documentation&lt;/li&gt; &#xA;   &lt;li&gt;Request params (path, query, header, or cookie)&lt;/li&gt; &#xA;   &lt;li&gt;Request body&lt;/li&gt; &#xA;   &lt;li&gt;Responses (including errors)&lt;/li&gt; &#xA;   &lt;li&gt;Response headers&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;JSON Errors using &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9457&#34;&gt;RFC9457&lt;/a&gt; and &lt;code&gt;application/problem+json&lt;/code&gt; by default (but can be changed)&lt;/li&gt; &#xA; &lt;li&gt;Per-operation request size limits with sane defaults&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation&#34;&gt;Content negotiation&lt;/a&gt; between server and client &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support for JSON (&lt;a href=&#34;https://tools.ietf.org/html/rfc8259&#34;&gt;RFC 8259&lt;/a&gt;) and CBOR (&lt;a href=&#34;https://tools.ietf.org/html/rfc7049&#34;&gt;RFC 7049&lt;/a&gt;) content types via the &lt;code&gt;Accept&lt;/code&gt; header with the default config.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Conditional requests support, e.g. &lt;code&gt;If-Match&lt;/code&gt; or &lt;code&gt;If-Unmodified-Since&lt;/code&gt; header utilities.&lt;/li&gt; &#xA; &lt;li&gt;Optional automatic generation of &lt;code&gt;PATCH&lt;/code&gt; operations that support: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc7386&#34;&gt;RFC 7386&lt;/a&gt; JSON Merge Patch&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc6902&#34;&gt;RFC 6902&lt;/a&gt; JSON Patch&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/danielgtaylor/shorthand&#34;&gt;Shorthand&lt;/a&gt; patches&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Annotated Go types for input and output models &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Generates JSON Schema from Go types&lt;/li&gt; &#xA;   &lt;li&gt;Static typing for path/query/header params, bodies, response headers, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Automatic input model validation &amp;amp; error handling&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Documentation generation using &lt;a href=&#34;https://stoplight.io/open-source/elements&#34;&gt;Stoplight Elements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Optional CLI built-in, configured via arguments or environment variables &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set via e.g. &lt;code&gt;-p 8000&lt;/code&gt;, &lt;code&gt;--port=8000&lt;/code&gt;, or &lt;code&gt;SERVICE_PORT=8000&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Startup actions &amp;amp; graceful shutdown built-in&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Generates OpenAPI for access to a rich ecosystem of tools &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Mocks with &lt;a href=&#34;https://github.com/danielgtaylor/apisprout&#34;&gt;API Sprout&lt;/a&gt; or &lt;a href=&#34;https://stoplight.io/open-source/prism&#34;&gt;Prism&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;SDKs with &lt;a href=&#34;https://github.com/OpenAPITools/openapi-generator&#34;&gt;OpenAPI Generator&lt;/a&gt; or &lt;a href=&#34;https://github.com/deepmap/oapi-codegen&#34;&gt;oapi-codegen&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;CLI with &lt;a href=&#34;https://rest.sh/&#34;&gt;Restish&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;And &lt;a href=&#34;https://openapi.tools/&#34;&gt;plenty&lt;/a&gt; &lt;a href=&#34;https://apis.guru/awesome-openapi3/category.html&#34;&gt;more&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Generates JSON Schema for each resource using optional &lt;code&gt;describedby&lt;/code&gt; link relation headers as well as optional &lt;code&gt;$schema&lt;/code&gt; properties in returned objects that integrate into editors for validation &amp;amp; completion.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project was inspired by &lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt;. Logo &amp;amp; branding designed by Kari Taylor.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;A big thank you to our sponsors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bclements&#34;&gt;@bclements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bekabaz&#34;&gt;@bekabaz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testimonials&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is by far my favorite web framework for Go. It is inspired by FastAPI, which is also amazing, and conforms to many RFCs for common web things ... I really like the feature set, the fact that it [can use] Chi, and the fact that it is still somehow relatively simple to use. I&#39;ve tried other frameworks and they do not spark joy for me. - &lt;a href=&#34;https://www.reddit.com/r/golang/comments/zhitcg/comment/izmg6vk/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;Jeb_Jenky&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;After working with #Golang for over a year, I stumbled upon Huma, the #FastAPI-inspired web framework. It’s the Christmas miracle I’ve been hoping for! This framework has everything! - &lt;a href=&#34;https://twitter.com/unamashana/status/1733088066053583197&#34;&gt;Hana Mohan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I love Huma. Thank you, sincerely, for this awesome package. I’ve been using it for some time now and it’s been great! - &lt;a href=&#34;https://www.reddit.com/r/golang/comments/1aoshey/comment/kq6hcpd/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;plscott&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Thank you Daniel for Huma. Superbly useful project and saves us a lot of time and hassle thanks to the OpenAPI gen — similar to FastAPI in Python. - &lt;a href=&#34;https://www.reddit.com/r/golang/comments/1aqj99d/comment/kqfqcml/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;WolvesOfAllStreets&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Huma is wonderful, I&#39;ve started working with it recently, and it&#39;s a pleasure, so thank you very much for your efforts 🙏 - &lt;a href=&#34;https://www.reddit.com/r/golang/comments/1b32ts4/comment/ksvr9h7/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;callmemicah&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;p&gt;Install via &lt;code&gt;go get&lt;/code&gt;. Note that Go 1.20 or newer is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# After: go mod init ...&#xA;go get -u github.com/danielgtaylor/huma/v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;p&gt;Here is a complete basic hello world example in Huma, that shows how to initialize a Huma app complete with CLI, declare a resource operation, and define its handler function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;context&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;net/http&#34;&#xA;&#xA;&#x9;&#34;github.com/danielgtaylor/huma/v2&#34;&#xA;&#x9;&#34;github.com/danielgtaylor/huma/v2/adapters/humachi&#34;&#xA;&#x9;&#34;github.com/danielgtaylor/huma/v2/humacli&#34;&#xA;&#x9;&#34;github.com/go-chi/chi/v5&#34;&#xA;)&#xA;&#xA;// Options for the CLI. Pass `--port` or set the `SERVICE_PORT` env var.&#xA;type Options struct {&#xA;&#x9;Port int `help:&#34;Port to listen on&#34; short:&#34;p&#34; default:&#34;8888&#34;`&#xA;}&#xA;&#xA;// GreetingOutput represents the greeting operation response.&#xA;type GreetingOutput struct {&#xA;&#x9;Body struct {&#xA;&#x9;&#x9;Message string `json:&#34;message&#34; example:&#34;Hello, world!&#34; doc:&#34;Greeting message&#34;`&#xA;&#x9;}&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;// Create a CLI app which takes a port option.&#xA;&#x9;cli := humacli.New(func(hooks humacli.Hooks, options *Options) {&#xA;&#x9;&#x9;// Create a new router &amp;amp; API&#xA;&#x9;&#x9;router := chi.NewMux()&#xA;&#x9;&#x9;api := humachi.New(router, huma.DefaultConfig(&#34;My API&#34;, &#34;1.0.0&#34;))&#xA;&#xA;&#x9;&#x9;// Add the operation handler to the API.&#xA;&#x9;&#x9;huma.Get(api, &#34;/greeting/{name}&#34;, func(ctx context.Context, input *struct{&#xA;&#x9;&#x9;&#x9;Name string `path:&#34;name&#34; maxLength:&#34;30&#34; example:&#34;world&#34; doc:&#34;Name to greet&#34;`&#xA;&#x9;&#x9;}) (*GreetingOutput, error) {&#xA;&#x9;&#x9;&#x9;resp := &amp;amp;GreetingOutput{}&#xA;&#x9;&#x9;&#x9;resp.Body.Message = fmt.Sprintf(&#34;Hello, %s!&#34;, input.Name)&#xA;&#x9;&#x9;&#x9;return resp, nil&#xA;&#x9;&#x9;})&#xA;&#xA;&#x9;&#x9;// Tell the CLI how to start your router.&#xA;&#x9;&#x9;hooks.OnStart(func() {&#xA;&#x9;&#x9;&#x9;http.ListenAndServe(fmt.Sprintf(&#34;:%d&#34;, options.Port), router)&#xA;&#x9;&#x9;})&#xA;&#x9;})&#xA;&#xA;&#x9;// Run the CLI. When passed no commands, it starts the server.&#xA;&#x9;cli.Run()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Replace &lt;code&gt;chi.NewMux()&lt;/code&gt; → &lt;code&gt;http.NewServeMux()&lt;/code&gt; and &lt;code&gt;humachi.New&lt;/code&gt; → &lt;code&gt;humago.New&lt;/code&gt; to use the standard library router from Go 1.22+. Just make sure your &lt;code&gt;go.mod&lt;/code&gt; has &lt;code&gt;go 1.22&lt;/code&gt; or newer listed in it. Everything else stays the same! Switch whenever you are ready.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can test it with &lt;code&gt;go run greet.go&lt;/code&gt; (optionally pass &lt;code&gt;--port&lt;/code&gt; to change the default) and make a sample request using &lt;a href=&#34;https://rest.sh/&#34;&gt;Restish&lt;/a&gt; (or &lt;code&gt;curl&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Get the message from the server&#xA;$ restish :8888/greeting/world&#xA;HTTP/1.1 200 OK&#xA;...&#xA;{&#xA;&#x9;$schema: &#34;http://localhost:8888/schemas/GreetingOutputBody.json&#34;,&#xA;&#x9;message: &#34;Hello, world!&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Even though the example is tiny you can also see some generated documentation at &lt;a href=&#34;http://localhost:8888/docs&#34;&gt;http://localhost:8888/docs&lt;/a&gt;. The generated OpenAPI is available at &lt;a href=&#34;http://localhost:8888/openapi.json&#34;&gt;http://localhost:8888/openapi.json&lt;/a&gt; or &lt;a href=&#34;http://localhost:8888/openapi.yaml&#34;&gt;http://localhost:8888/openapi.yaml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://huma.rocks/tutorial/installation/&#34;&gt;Huma tutorial&lt;/a&gt; for a step-by-step guide to get started.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://huma.rocks/&#34;&gt;https://huma.rocks/&lt;/a&gt; website for full documentation in a presentation that&#39;s easier to navigate and search then this README. You can find the source for the site in the &lt;code&gt;docs&lt;/code&gt; directory of this repo.&lt;/p&gt; &#xA;&lt;p&gt;Official Go package documentation can always be found at &lt;a href=&#34;https://pkg.go.dev/github.com/danielgtaylor/huma/v2&#34;&gt;https://pkg.go.dev/github.com/danielgtaylor/huma/v2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Articles &amp;amp; Mentions&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dgt.hashnode.dev/apis-in-go-with-huma-20&#34;&gt;APIs in Go with Huma 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dgt.hashnode.dev/reducing-go-dependencies&#34;&gt;Reducing Go Dependencies: A case study of dependency reduction in Huma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/golangch/status/1752175499701264532&#34;&gt;Golang News &amp;amp; Libs &amp;amp; Jobs shared on Twitter/X&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Featured in Go Weekly &lt;a href=&#34;https://golangweekly.com/issues/495&#34;&gt;#495&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://golangweekly.com/issues/498&#34;&gt;#498&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.bump.sh/guides/bump-sh-tutorials/huma/&#34;&gt;Bump.sh Deploying Docs from Huma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mentioned in &lt;a href=&#34;https://www.willem.dev/articles/generic-http-handlers/&#34;&gt;Composable HTTP Handlers Using Generics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Be sure to star the project if you find it useful!&lt;/p&gt; &#xA;&lt;a href=&#34;https://star-history.com/#danielgtaylor/huma&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=danielgtaylor/huma&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=danielgtaylor/huma&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=danielgtaylor/huma&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>jackc/pgx</title>
    <updated>2024-04-01T02:04:17Z</updated>
    <id>tag:github.com,2024-04-01:/jackc/pgx</id>
    <link href="https://github.com/jackc/pgx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PostgreSQL driver and toolkit for Go&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/jackc/pgx/v5&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/jackc/pgx/v5.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jackc/pgx/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/jackc/pgx/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;pgx - PostgreSQL Driver and Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;pgx is a pure Go driver and toolkit for PostgreSQL.&lt;/p&gt; &#xA;&lt;p&gt;The pgx driver is a low-level, high performance interface that exposes PostgreSQL-specific features such as &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt;. It also includes an adapter for the standard &lt;code&gt;database/sql&lt;/code&gt; interface.&lt;/p&gt; &#xA;&lt;p&gt;The toolkit component is a related set of packages that implement PostgreSQL functionality such as parsing the wire protocol and type mapping between PostgreSQL and Go. These underlying packages can be used to implement alternative drivers, proxies, load balancers, logical replication clients, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;context&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;os&#34;&#xA;&#xA;&#x9;&#34;github.com/jackc/pgx/v5&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;// urlExample := &#34;postgres://username:password@localhost:5432/database_name&#34;&#xA;&#x9;conn, err := pgx.Connect(context.Background(), os.Getenv(&#34;DATABASE_URL&#34;))&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;fmt.Fprintf(os.Stderr, &#34;Unable to connect to database: %v\n&#34;, err)&#xA;&#x9;&#x9;os.Exit(1)&#xA;&#x9;}&#xA;&#x9;defer conn.Close(context.Background())&#xA;&#xA;&#x9;var name string&#xA;&#x9;var weight int64&#xA;&#x9;err = conn.QueryRow(context.Background(), &#34;select name, weight from widgets where id=$1&#34;, 42).Scan(&amp;amp;name, &amp;amp;weight)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;fmt.Fprintf(os.Stderr, &#34;QueryRow failed: %v\n&#34;, err)&#xA;&#x9;&#x9;os.Exit(1)&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(name, weight)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/jackc/pgx/wiki/Getting-started-with-pgx&#34;&gt;getting started guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for approximately 70 different PostgreSQL types&lt;/li&gt; &#xA; &lt;li&gt;Automatic statement preparation and caching&lt;/li&gt; &#xA; &lt;li&gt;Batch queries&lt;/li&gt; &#xA; &lt;li&gt;Single-round trip query mode&lt;/li&gt; &#xA; &lt;li&gt;Full TLS connection control&lt;/li&gt; &#xA; &lt;li&gt;Binary format support for custom types (allows for much quicker encoding/decoding)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COPY&lt;/code&gt; protocol support for faster bulk data loads&lt;/li&gt; &#xA; &lt;li&gt;Tracing and logging support&lt;/li&gt; &#xA; &lt;li&gt;Connection pool with after-connect hook for arbitrary connection setup&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Conversion of PostgreSQL arrays to Go slice mappings for integers, floats, and strings&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hstore&lt;/code&gt; support&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Maps &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;cidr&lt;/code&gt; PostgreSQL types to &lt;code&gt;netip.Addr&lt;/code&gt; and &lt;code&gt;netip.Prefix&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Large object support&lt;/li&gt; &#xA; &lt;li&gt;NULL mapping to pointer to pointer&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;code&gt;database/sql.Scanner&lt;/code&gt; and &lt;code&gt;database/sql/driver.Valuer&lt;/code&gt; interfaces for custom types&lt;/li&gt; &#xA; &lt;li&gt;Notice response handling&lt;/li&gt; &#xA; &lt;li&gt;Simulated nested transactions with savepoints&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Choosing Between the pgx and database/sql Interfaces&lt;/h2&gt; &#xA;&lt;p&gt;The pgx interface is faster. Many PostgreSQL specific features such as &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt; are not available through the &lt;code&gt;database/sql&lt;/code&gt; interface.&lt;/p&gt; &#xA;&lt;p&gt;The pgx interface is recommended when:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The application only targets PostgreSQL.&lt;/li&gt; &#xA; &lt;li&gt;No other libraries that require &lt;code&gt;database/sql&lt;/code&gt; are in use.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;It is also possible to use the &lt;code&gt;database/sql&lt;/code&gt; interface and convert a connection to the lower-level pgx interface as needed.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;See CONTRIBUTING.md for setup instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;See the presentation at Golang Estonia, &lt;a href=&#34;https://www.youtube.com/watch?v=sXMSWhcHCf8&#34;&gt;PGX Top to Bottom&lt;/a&gt; for a description of pgx architecture.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Go and PostgreSQL Versions&lt;/h2&gt; &#xA;&lt;p&gt;pgx supports the same versions of Go and PostgreSQL that are supported by their respective teams. For &lt;a href=&#34;https://golang.org/doc/devel/release.html#policy&#34;&gt;Go&lt;/a&gt; that is the two most recent major releases and for &lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;PostgreSQL&lt;/a&gt; the major releases in the last 5 years. This means pgx supports Go 1.20 and higher and PostgreSQL 12 and higher. pgx also is tested against the latest version of &lt;a href=&#34;https://www.cockroachlabs.com/product/&#34;&gt;CockroachDB&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Version Policy&lt;/h2&gt; &#xA;&lt;p&gt;pgx follows semantic versioning for the documented public API on stable releases. &lt;code&gt;v5&lt;/code&gt; is the latest stable major version.&lt;/p&gt; &#xA;&lt;h2&gt;PGX Family Libraries&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/jackc/pglogrepl&#34;&gt;github.com/jackc/pglogrepl&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;pglogrepl provides functionality to act as a client for PostgreSQL logical replication.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/jackc/pgmock&#34;&gt;github.com/jackc/pgmock&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;pgmock offers the ability to create a server that mocks the PostgreSQL wire protocol. This is used internally to test pgx by purposely inducing unusual errors. pgproto3 and pgmock together provide most of the foundational tooling required to implement a PostgreSQL proxy or MitM (such as for a custom connection pooler).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/jackc/tern&#34;&gt;github.com/jackc/tern&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;tern is a stand-alone SQL migration system.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/jackc/pgerrcode&#34;&gt;github.com/jackc/pgerrcode&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;pgerrcode contains constants for the PostgreSQL error codes.&lt;/p&gt; &#xA;&lt;h2&gt;Adapters for 3rd Party Types&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackc/pgx-gofrs-uuid&#34;&gt;github.com/jackc/pgx-gofrs-uuid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackc/pgx-shopspring-decimal&#34;&gt;github.com/jackc/pgx-shopspring-decimal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twpayne/pgx-geos&#34;&gt;github.com/twpayne/pgx-geos&lt;/a&gt; (&lt;a href=&#34;https://postgis.net/&#34;&gt;PostGIS&lt;/a&gt; and &lt;a href=&#34;https://libgeos.org/&#34;&gt;GEOS&lt;/a&gt; via &lt;a href=&#34;https://github.com/twpayne/go-geos&#34;&gt;go-geos&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vgarvardt/pgx-google-uuid&#34;&gt;github.com/vgarvardt/pgx-google-uuid&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adapters for 3rd Party Tracers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackhopner/pgx-xray-tracer&#34;&gt;https://github.com/jackhopner/pgx-xray-tracer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adapters for 3rd Party Loggers&lt;/h2&gt; &#xA;&lt;p&gt;These adapters can be used with the tracelog package.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackc/pgx-go-kit-log&#34;&gt;github.com/jackc/pgx-go-kit-log&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackc/pgx-log15&#34;&gt;github.com/jackc/pgx-log15&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackc/pgx-logrus&#34;&gt;github.com/jackc/pgx-logrus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackc/pgx-zap&#34;&gt;github.com/jackc/pgx-zap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jackc/pgx-zerolog&#34;&gt;github.com/jackc/pgx-zerolog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mcosta74/pgx-slog&#34;&gt;github.com/mcosta74/pgx-slog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kataras/pgx-golog&#34;&gt;github.com/kataras/pgx-golog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3rd Party Libraries with PGX Support&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/pashagolub/pgxmock&#34;&gt;github.com/pashagolub/pgxmock&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;pgxmock is a mock library implementing pgx interfaces. pgxmock has one and only purpose - to simulate pgx behavior in tests, without needing a real database connection.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/georgysavva/scany&#34;&gt;github.com/georgysavva/scany&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Library for scanning data from a database into Go structs and more.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/vingarcia/ksql&#34;&gt;github.com/vingarcia/ksql&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A carefully designed SQL client for making using SQL easier, more productive, and less error-prone on Golang.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/otan/gopgkrb5&#34;&gt;https://github.com/otan/gopgkrb5&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Adds GSSAPI / Kerberos authentication support.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/wcamarao/pmx&#34;&gt;github.com/wcamarao/pmx&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Explicit data mapping and scanning library for Go structs and slices.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/stephenafamo/scan&#34;&gt;github.com/stephenafamo/scan&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type safe and flexible package for scanning database data into Go types. Supports, structs, maps, slices and custom mapping functions.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/z0ne-dev/mgx&#34;&gt;https://github.com/z0ne-dev/mgx&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Code first migration library for native pgx (no database/sql abstraction).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lionsoul2014/ip2region</title>
    <updated>2024-04-01T02:04:17Z</updated>
    <id>tag:github.com,2024-04-01:/lionsoul2014/ip2region</id>
    <link href="https://github.com/lionsoul2014/ip2region" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ip2region (2.0 - xdb) is a offline IP address manager framework and locator, support billions of data segments, ten microsecond searching performance. xdb engine implementation for many programming languages&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ip2region 是什么&lt;/h1&gt; &#xA;&lt;p&gt;ip2region - 是一个离线IP地址定位库和IP定位数据管理框架，10微秒级别的查询效率，提供了众多主流编程语言的 &lt;code&gt;xdb&lt;/code&gt; 数据生成和查询客户端实现。&lt;/p&gt; &#xA;&lt;h1&gt;Ip2region 特性&lt;/h1&gt; &#xA;&lt;h3&gt;1、IP 数据管理框架&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xdb&lt;/code&gt; 支持亿级别的 IP 数据段行数，默认的 region 信息都固定了格式：&lt;code&gt;国家|区域|省份|城市|ISP&lt;/code&gt;，缺省的地域信息默认是0。 region 信息支持完全自定义，例如：你可以在 region 中追加特定业务需求的数据，例如：GPS信息/国际统一地域信息编码/邮编等。也就是你完全可以使用 ip2region 来管理你自己的 IP 定位数据。&lt;/p&gt; &#xA;&lt;h3&gt;2、数据去重和压缩&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xdb&lt;/code&gt; 格式生成程序会自动去重和压缩部分数据，默认的全部 IP 数据，生成的 ip2region.xdb 数据库是 11MiB，随着数据的详细度增加数据库的大小也慢慢增大。&lt;/p&gt; &#xA;&lt;h3&gt;3、极速查询响应&lt;/h3&gt; &#xA;&lt;p&gt;即使是完全基于 &lt;code&gt;xdb&lt;/code&gt; 文件的查询，单次查询响应时间在十微秒级别，可通过如下两种方式开启内存加速查询：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;vIndex&lt;/code&gt; 索引缓存 ：使用固定的 &lt;code&gt;512KiB&lt;/code&gt; 的内存空间缓存 vector index 数据，减少一次 IO 磁盘操作，保持平均查询效率稳定在10-20微秒之间。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xdb&lt;/code&gt; 整个文件缓存：将整个 &lt;code&gt;xdb&lt;/code&gt; 文件全部加载到内存，内存占用等同于 &lt;code&gt;xdb&lt;/code&gt; 文件大小，无磁盘 IO 操作，保持微秒级别的查询效率。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据查询&lt;/h1&gt; &#xA;&lt;p&gt;API 介绍，使用文档和测试程序请参考对应 &lt;code&gt;searcher&lt;/code&gt; 查询客户端下的 ReadMe 介绍，全部查询 binding 实现情况如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php&#34;&gt;php&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua&#34;&gt;lua&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;纯 lua xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ANSC c xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua_c&#34;&gt;lua_c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;lua c 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/rust&#34;&gt;rust&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rust xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/gongzhengyang&#34;&gt;gongzhengyang&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;python xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/luckydog6132&#34;&gt;厉害的花花&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nodejs&#34;&gt;nodejs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nodejs xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/wujjpp&#34;&gt;Wu Jian Ping&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;csharp xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/malus2077&#34;&gt;Alen Lee&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/erlang&#34;&gt;erlang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;erlang xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/leihua996&#34;&gt;leihua996&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php7_ext&#34;&gt;php_ext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php c 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nginx&#34;&gt;nginx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nginx 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/wujjpp&#34;&gt;Wu Jian Ping&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/cpp&#34;&gt;C++&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;C++ xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/liuyunbin&#34;&gt;Yunbin Liu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;以下工具链实现由社区开发者通过第三方仓库贡献：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/jicheng1014/ruby-ip2region&#34;&gt;ruby-ip2region&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ruby xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/jicheng1014&#34;&gt;jicheng1014&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/orestonce/Ip2regionTool&#34;&gt;Ip2regionTool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ip2region数据转换工具&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/orestonce&#34;&gt;orestonce&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据生成&lt;/h1&gt; &#xA;&lt;p&gt;API 介绍，使用文档和测试程序请参考如下 &lt;code&gt;maker&lt;/code&gt; 生成程序下的 ReadMe 文档：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ANSC c xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;python xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/leolin49&#34;&gt;leolin49&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;csharp xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/malus2077&#34;&gt;Alan Lee&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/rust&#34;&gt;rust&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rust xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/KevinWL&#34;&gt;KevinWang&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/cpp&#34;&gt;C++&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;C++ xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/liuyunbin&#34;&gt;Yunbin Liu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据更新&lt;/h1&gt; &#xA;&lt;p&gt;ip2region 旨在于 &lt;b&gt;研究 IP 数据的存储和快速查询的设计和实现&lt;/b&gt;，并没有原始 IP 数据的支撑，也不会有商用版本。 本项目的自带的 &lt;code&gt;./data/ip.merge.txt&lt;/code&gt; 原始数据已经很久没有更新，也不会再更新，对于数据精度和更新频率要求很高的使用场景建议购买第三方商用数据，你可以使用如下几种方式来尝试自己更新数据：&lt;/p&gt; &#xA;&lt;h3&gt;手动编辑更新&lt;/h3&gt; &#xA;&lt;p&gt;你可以基于 ip2region 自带的 &lt;code&gt;./data/ip.merge.txt&lt;/code&gt; 原始 IP 数据用 ip2region 提供的编辑工具来自己修改，目前数据源有如下几种方式：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ip2region 社区提供的数据（请参考地底部的公众号关注社区通知）&lt;/li&gt; &#xA; &lt;li&gt;ip2region Github/Gitee 中带有 &lt;code&gt;[数据源补充]&lt;/code&gt; 标签的 Issue&lt;/li&gt; &#xA; &lt;li&gt;其他自定义数据：例如客户提供的数据，或者通过 GPS 和 WIFI 定位得到的数据，或者来自其他平台的合法合规的数据&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;原始 IP 数据编辑工具使用方法请参考如下的 &lt;code&gt;maker&lt;/code&gt; 生成程序下的 ReadMe 文档：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/golang#xdb-%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang 原始 IP 数据编辑器&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/java#xdb-%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java 原始 IP 数据编辑器&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/cpp#xdb-%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91&#34;&gt;C++&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;C++ 原始 IP 数据编辑器&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/liuyunbin&#34;&gt;Yunbin Liu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;检测自动更新&lt;/h3&gt; &#xA;&lt;p&gt;如果你想通过你自己的 API 或数据源来更新数据，你可以参考以下视频分享的 &lt;code&gt;基于检测算法&lt;/code&gt; 的更新算法来自己编写一个更新程序：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1934y1E7Q5/&#34;&gt;数据更新实现视频分享 - part1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1pF411j7Aw/&#34;&gt;数据更新实现视频分享 - part2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;相关备注&lt;/h1&gt; &#xA;&lt;h3&gt;1、并发查询必读&lt;/h3&gt; &#xA;&lt;p&gt;全部查询客户端的 search 接口都 &lt;b&gt;不是&lt;/b&gt; 并发安全的实现，不同进程/线程/协程需要通过创建不同的查询对象来安全使用，并发量很大的情况下，基于文件查询的方式可能会导致打开文件数过多的错误，请修改内核的最大允许打开文件数(fs.file-max=一个更高的值)，或者将整个xdb加载到内存进行安全并发使用。&lt;/p&gt; &#xA;&lt;h3&gt;2、技术资源分享&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;xdb 数据结构分析：&lt;a href=&#34;https://mp.weixin.qq.com/s/ndjzu0BgaeBmDOCw5aqHUg&#34;&gt;“ip2region xdb 数据结构和查询过程详解“&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xdb 查询过程分析：&lt;a href=&#34;https://mp.weixin.qq.com/s/ndjzu0BgaeBmDOCw5aqHUg&#34;&gt;“ip2region xdb 数据结构和查询过程详解”&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xdb 生成过程分析：&lt;a href=&#34;https://mp.weixin.qq.com/s/HEAc7WKzAjH5oTwgxojPUg&#34;&gt;“ip2region xdb 二进制数据生成过程详解”&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xdb 数据更新方法：&lt;a href=&#34;https://mp.weixin.qq.com/s/cZH5qIn4E5rQFy6N32RCzA&#34;&gt;“ip2region 数据更新和 xdb 数据编辑器的使用”&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;3、技术信息博客&lt;/h3&gt; &#xA;&lt;p&gt;请先关注微信公众号 lionsoul-org (狮子的魂)&lt;/p&gt;</summary>
  </entry>
</feed>