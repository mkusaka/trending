<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-01T01:49:21Z</updated>
  <subtitle>Monthly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DiceDB/dice</title>
    <updated>2024-09-01T01:49:21Z</updated>
    <id>tag:github.com,2024-09-01:/DiceDB/dice</id>
    <link href="https://github.com/DiceDB/dice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A drop-in replacement of Redis with SQL-based realtime reactivity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DiceDB&lt;/h1&gt; &#xA;&lt;p&gt;DiceDB is a drop-in replacement of Redis with SQL-based real-time reactivity baked in.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: DiceDB is still in development and it supports a subset of Redis commands. So, please do not use it in production. But, feel free to go through the &lt;a href=&#34;https://github.com/DiceDB/dice/issues&#34;&gt;open issues&lt;/a&gt; and contribute to help us speed up the development.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;How is it different from Redis?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;DiceDB is multi-threaded and follows &lt;a href=&#34;https://en.wikipedia.org/wiki/Shared-nothing_architecture&#34;&gt;shared-nothing architecture&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;DiceDB supports a new command called &lt;code&gt;QWATCH&lt;/code&gt; that lets clients listen to a SQL query and get notified in real-time whenever something changes.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to get started with DiceDB is using &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; by running the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run dicedb/dice-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above command will start the DiceDB server running locally on the port &lt;code&gt;7379&lt;/code&gt; and you can connect to it using DiceDB CLI and SDKs, or even Redis CLIs and SDKs.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Given it is a drop-in replacement of Redis, you can also use any Redis CLI and SDK to connect to DiceDB.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Setting up DiceDB from source for development and contributions&lt;/h3&gt; &#xA;&lt;p&gt;To run DiceDB for local development or running from source, you will need&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any of the below supported platform environment: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_Linux_distributions&#34;&gt;Linux based environment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/MacOS&#34;&gt;OSX (Darwin) based environment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;WSL under Windows&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/dicedb/dice&#xA;$ cd dice&#xA;$ go run main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install GoLangCI&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo su&#xA;$ curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /bin v1.60.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Live Development Server&lt;/h3&gt; &#xA;&lt;p&gt;DiceDB provides a hot-reloading development environment, which allows you to instantly view your code changes in a live server. This functionality is supported by &lt;a href=&#34;https://github.com/air-verse/air&#34;&gt;Air&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To Install Air on your system you have following options.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you&#39;re on go 1.22+&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/air-verse/air@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install the Air binary&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# binary will be installed at $(go env GOPATH)/bin/air&#xA;curl -sSfL https://raw.githubusercontent.com/air-verse/air/master/install.sh | sh -s -- -b $(go env GOPATH)/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once &lt;code&gt;air&lt;/code&gt; is installed you can verify the installation using the command &lt;code&gt;air -v&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run the live DiceDB server for local development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone https://github.com/dicedb/dice&#xA;$ cd dice&#xA;$ air&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setting up CLI&lt;/h2&gt; &#xA;&lt;p&gt;The best way to connect to DiceDB is using DiceDB CLI and you can install it by running the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install dicedb-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Because DiceDB speaks Redis dialect, you can connect to it with any Redis Client and SDK also. But if you are planning to use the &lt;code&gt;QWATCH&lt;/code&gt; feature then you need to use the DiceDB CLI.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;Unit tests and integration tests are essential for ensuring correctness and in the case of DiceDB, both types of tests are available to validate its functionality.&lt;/p&gt; &#xA;&lt;p&gt;For unit testing, you can execute individual unit tests by specifying the name of the test function using the &lt;code&gt;TEST_FUNC&lt;/code&gt; environment variable and running the &lt;code&gt;make unittest-one&lt;/code&gt; command. Alternatively, running &lt;code&gt;make unittest&lt;/code&gt; will execute all unit tests.&lt;/p&gt; &#xA;&lt;h3&gt;Executing one unit test&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ TEST_FUNC=&amp;lt;name of the test function&amp;gt; make unittest-one&#xA;$ TEST_FUNC=TestByteList make unittest-one&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running all unit tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make unittest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Integration tests, on the other hand, involve starting up the DiceDB server and running a series of commands to verify the expected end state and output. To execute a single integration test, you can set the &lt;code&gt;TEST_FUNC&lt;/code&gt; environment variable to the name of the test function and run &lt;code&gt;make test-one&lt;/code&gt;. Running &lt;code&gt;make test&lt;/code&gt; will execute all integration tests.&lt;/p&gt; &#xA;&lt;h3&gt;Executing a single integration test&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ TEST_FUNC=&amp;lt;name of the test function&amp;gt; make test-one&#xA;$ TEST_FUNC=TestSet make test-one&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running all integration tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Work to add more tests in DiceDB is in progress and we will soon port the test &lt;a href=&#34;https://github.com/redis/redis/tree/f60370ce28b946c1146dcea77c9c399d39601aaa&#34;&gt;Redis suite&lt;/a&gt; to this codebase to ensure full compatibility.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Running Benchmark&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ go test -test.bench &amp;lt;pattern&amp;gt;&#xA;$ go test -test.bench BenchmarkListRedis -benchmem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with building and contributing to DiceDB, please refer to the &lt;a href=&#34;https://github.com/DiceDB/dice/issues&#34;&gt;issues&lt;/a&gt; created in this repository.&lt;/p&gt; &#xA;&lt;h2&gt;The story&lt;/h2&gt; &#xA;&lt;p&gt;DiceDB started as a re-implementation of Redis in Golang and the idea was to - build a DB from scratch and understand the micro-nuances that come with its implementation. The database does not aim to replace Redis, instead, it will fit in and optimize itself for multi-core computations running on a single-threaded event loop.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;The Code Contribution Guidelines are published at &lt;a href=&#34;https://raw.githubusercontent.com/DiceDB/dice/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;; please read them before you start making any changes. This would allow us to have a consistent standard of coding practices and developer experience.&lt;/p&gt; &#xA;&lt;p&gt;Contributors can join the &lt;a href=&#34;https://discord.gg/6r8uXWtXh7&#34;&gt;Discord Server&lt;/a&gt; for quick collaboration.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/dicedb/dice/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=dicedb/dice&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Troubleshoot&lt;/h2&gt; &#xA;&lt;h3&gt;Forcefully killing the process&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo netstat -atlpn | grep :7379&#xA;$ sudo kill -9 &amp;lt;process_id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>v2fly/domain-list-community</title>
    <updated>2024-09-01T01:49:21Z</updated>
    <id>tag:github.com,2024-09-01:/v2fly/domain-list-community</id>
    <link href="https://github.com/v2fly/domain-list-community" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Community managed domain list. Generate geosite.dat for V2Ray.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Domain list community&lt;/h1&gt; &#xA;&lt;p&gt;This project manages a list of domains, to be used as geosites for routing purpose in Project V.&lt;/p&gt; &#xA;&lt;h2&gt;Purpose of this project&lt;/h2&gt; &#xA;&lt;p&gt;This project is not opinionated. In other words, it does NOT endorse, claim or imply that a domain should be blocked or proxied. It can be used to generate routing rules on demand.&lt;/p&gt; &#xA;&lt;h2&gt;Download links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;dlc.dat&lt;/strong&gt;：&lt;a href=&#34;https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat&#34;&gt;https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;dlc.dat.sha256sum&lt;/strong&gt;：&lt;a href=&#34;https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat.sha256sum&#34;&gt;https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat.sha256sum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage example&lt;/h2&gt; &#xA;&lt;p&gt;Each file in the &lt;code&gt;data&lt;/code&gt; directory can be used as a rule in this format: &lt;code&gt;geosite:filename&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;routing&#34;: {&#xA;  &#34;domainStrategy&#34;: &#34;IPIfNonMatch&#34;,&#xA;  &#34;rules&#34;: [&#xA;    {&#xA;      &#34;type&#34;: &#34;field&#34;,&#xA;      &#34;outboundTag&#34;: &#34;Reject&#34;,&#xA;      &#34;domain&#34;: [&#xA;        &#34;geosite:category-ads-all&#34;,&#xA;        &#34;geosite:category-porn&#34;&#xA;      ]&#xA;    },&#xA;    {&#xA;      &#34;type&#34;: &#34;field&#34;,&#xA;      &#34;outboundTag&#34;: &#34;Direct&#34;,&#xA;      &#34;domain&#34;: [&#xA;        &#34;domain:icloud.com&#34;,&#xA;        &#34;domain:icloud-content.com&#34;,&#xA;        &#34;domain:cdn-apple.com&#34;,&#xA;        &#34;geosite:cn&#34;,&#xA;        &#34;geosite:private&#34;&#xA;      ]&#xA;    },&#xA;    {&#xA;      &#34;type&#34;: &#34;field&#34;,&#xA;      &#34;outboundTag&#34;: &#34;Proxy-1&#34;,&#xA;      &#34;domain&#34;: [&#xA;        &#34;geosite:category-anticensorship&#34;,&#xA;        &#34;geosite:category-media&#34;,&#xA;        &#34;geosite:category-vpnservices&#34;&#xA;      ]&#xA;    },&#xA;    {&#xA;      &#34;type&#34;: &#34;field&#34;,&#xA;      &#34;outboundTag&#34;: &#34;Proxy-2&#34;,&#xA;      &#34;domain&#34;: [&#xA;        &#34;geosite:category-dev&#34;&#xA;      ]&#xA;    },&#xA;    {&#xA;      &#34;type&#34;: &#34;field&#34;,&#xA;      &#34;outboundTag&#34;: &#34;Proxy-3&#34;,&#xA;      &#34;domain&#34;: [&#xA;        &#34;geosite:geolocation-!cn&#34;&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Generate &lt;code&gt;dlc.dat&lt;/code&gt; manually&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;code&gt;golang&lt;/code&gt; and &lt;code&gt;git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone project code: &lt;code&gt;git clone https://github.com/v2fly/domain-list-community.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Navigate to project root directory: &lt;code&gt;cd domain-list-community&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install project dependencies: &lt;code&gt;go mod download&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate &lt;code&gt;dlc.dat&lt;/code&gt; (without &lt;code&gt;datapath&lt;/code&gt; option means to use domain lists in &lt;code&gt;data&lt;/code&gt; directory of current working directory): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;go run ./&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;go run ./ --datapath=/path/to/your/custom/data/directory&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run &lt;code&gt;go run ./ --help&lt;/code&gt; for more usage information.&lt;/p&gt; &#xA;&lt;h2&gt;Structure of data&lt;/h2&gt; &#xA;&lt;p&gt;All data are under &lt;code&gt;data&lt;/code&gt; directory. Each file in the directory represents a sub-list of domains, named by the file name. File content is in the following format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# comments&#xA;include:another-file&#xA;domain:google.com @attr1 @attr2&#xA;keyword:google&#xA;regexp:www\.google\.com$&#xA;full:www.google.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The following types of rules are &lt;strong&gt;NOT&lt;/strong&gt; fully compatible with the ones that defined by user in V2Ray config file. Do &lt;strong&gt;Not&lt;/strong&gt; copy and paste directly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Comment begins with &lt;code&gt;#&lt;/code&gt;. It may begin anywhere in the file. The content in the line after &lt;code&gt;#&lt;/code&gt; is treated as comment and ignored in production.&lt;/li&gt; &#xA; &lt;li&gt;Inclusion begins with &lt;code&gt;include:&lt;/code&gt;, followed by the file name of an existing file in the same directory.&lt;/li&gt; &#xA; &lt;li&gt;Subdomain begins with &lt;code&gt;domain:&lt;/code&gt;, followed by a valid domain name. The prefix &lt;code&gt;domain:&lt;/code&gt; may be omitted.&lt;/li&gt; &#xA; &lt;li&gt;Keyword begins with &lt;code&gt;keyword:&lt;/code&gt;, followed by a string.&lt;/li&gt; &#xA; &lt;li&gt;Regular expression begins with &lt;code&gt;regexp:&lt;/code&gt;, followed by a valid regular expression (per Golang&#39;s standard).&lt;/li&gt; &#xA; &lt;li&gt;Full domain begins with &lt;code&gt;full:&lt;/code&gt;, followed by a complete and valid domain name.&lt;/li&gt; &#xA; &lt;li&gt;Domains (including &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;keyword&lt;/code&gt;, &lt;code&gt;regexp&lt;/code&gt; and &lt;code&gt;full&lt;/code&gt;) may have one or more attributes. Each attribute begins with &lt;code&gt;@&lt;/code&gt; and followed by the name of the attribute.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The entire &lt;code&gt;data&lt;/code&gt; directory will be built into an external &lt;code&gt;geosite&lt;/code&gt; file for Project V. Each file in the directory represents a section in the generated file.&lt;/p&gt; &#xA;&lt;p&gt;To generate a section:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Remove all the comments in the file.&lt;/li&gt; &#xA; &lt;li&gt;Replace &lt;code&gt;include:&lt;/code&gt; lines with the actual content of the file.&lt;/li&gt; &#xA; &lt;li&gt;Omit all empty lines.&lt;/li&gt; &#xA; &lt;li&gt;Generate each &lt;code&gt;domain:&lt;/code&gt; line into a &lt;a href=&#34;https://github.com/v2fly/v2ray-core/raw/master/app/router/config.proto#L21&#34;&gt;sub-domain routing rule&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Generate each &lt;code&gt;keyword:&lt;/code&gt; line into a &lt;a href=&#34;https://github.com/v2fly/v2ray-core/raw/master/app/router/config.proto#L17&#34;&gt;plain domain routing rule&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Generate each &lt;code&gt;regexp:&lt;/code&gt; line into a &lt;a href=&#34;https://github.com/v2fly/v2ray-core/raw/master/app/router/config.proto#L19&#34;&gt;regex domain routing rule&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Generate each &lt;code&gt;full:&lt;/code&gt; line into a &lt;a href=&#34;https://github.com/v2fly/v2ray-core/raw/master/app/router/config.proto#L23&#34;&gt;full domain routing rule&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to organize domains&lt;/h2&gt; &#xA;&lt;h3&gt;File name&lt;/h3&gt; &#xA;&lt;p&gt;Theoretically any string can be used as the name, as long as it is a valid file name. In practice, we prefer names for determinic group of domains, such as the owner (usually a company name) of the domains, e.g., &#34;google&#34;, &#34;netflix&#34;. Names with unclear scope are generally unrecommended, such as &#34;evil&#34;, or &#34;local&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;p&gt;Attribute is useful for sub-group of domains, especially for filtering purpose. For example, the list of &lt;code&gt;google&lt;/code&gt; domains may contains its main domains, as well as domains that serve ads. The ads domains may be marked by attribute &lt;code&gt;@ads&lt;/code&gt;, and can be used as &lt;code&gt;geosite:google@ads&lt;/code&gt; in V2Ray routing.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution guideline&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork this repo, make modifications to your own repo, file a PR.&lt;/li&gt; &#xA; &lt;li&gt;Please begin with small size PRs, say modification in a single file.&lt;/li&gt; &#xA; &lt;li&gt;A PR must be reviewed and approved by another member.&lt;/li&gt; &#xA; &lt;li&gt;A script will verify your pull request to test whether your PR is correct or not every time you update the PR. Only the PR which passes the test will be merged. Please go to the Action label to get detailed information if you didn&#39;t pass it. We also provide the file which has been generated to make you test.&lt;/li&gt; &#xA; &lt;li&gt;After a few successful PRs, you may apply for manager access to this repository.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>thanos-io/thanos</title>
    <updated>2024-09-01T01:49:21Z</updated>
    <id>tag:github.com,2024-09-01:/thanos-io/thanos</id>
    <link href="https://github.com/thanos-io/thanos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Highly available Prometheus setup with long term storage capabilities. A CNCF Incubating project.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/docs/img/Thanos-logo_fullmedium.png&#34; alt=&#34;Thanos Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/thanos-io/thanos/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/thanos-io/thanos.svg?style=flat-square&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/thanos-io/thanos&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/thanos-io/thanos&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/thanos-io/thanos?tab=subdirectories&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20reference-go.dev-darkblue.svg?sanitize=true&#34; alt=&#34;Go Code reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join%20slack-%23thanos-brightgreen.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.netlify.com/sites/thanos-io/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/664a5091-934c-4b0e-a7b6-bc12f822a590/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3048&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3048/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/thanos-io/thanos/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/thanos-io/thanos/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/thanos-io/thanos&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/thanos-io/thanos.svg?style=svg&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/thanos-io/thanos/actions?query=workflow%3Ago&#34;&gt;&lt;img src=&#34;https://github.com/thanos-io/thanos/workflows/go/badge.svg?sanitize=true&#34; alt=&#34;go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/thanos-io/thanos/actions?query=workflow%3Areact&#34;&gt;&lt;img src=&#34;https://github.com/thanos-io/thanos/workflows/react/badge.svg?sanitize=true&#34; alt=&#34;react&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/thanos-io/thanos/actions?query=workflow%3Adocs&#34;&gt;&lt;img src=&#34;https://github.com/thanos-io/thanos/workflows/docs/badge.svg?sanitize=true&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/thanos-io/thanos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/codespaces/new?hide_repo_select=true&amp;amp;ref=main&amp;amp;repo=109162639&#34;&gt;&lt;img src=&#34;https://github.com/codespaces/badge.svg?sanitize=true&#34; alt=&#34;Open in GitHub Codespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;📢 &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/co-located-events/thanoscon/&#34;&gt;ThanosCon&lt;/a&gt; happened on 19th March 2024 as a co-located half-day on KubeCon EU in Paris.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Thanos is a set of components that can be composed into a highly available metric system with unlimited storage capacity, which can be added seamlessly on top of existing Prometheus deployments.&lt;/p&gt; &#xA;&lt;p&gt;Thanos is a &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt; Incubating project.&lt;/p&gt; &#xA;&lt;p&gt;Thanos leverages the Prometheus 2.0 storage format to cost-efficiently store historical metric data in any object storage while retaining fast query latencies. Additionally, it provides a global query view across all Prometheus installations and can merge data from Prometheus HA pairs on the fly.&lt;/p&gt; &#xA;&lt;p&gt;Concretely the aims of the project are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Global query view of metrics.&lt;/li&gt; &#xA; &lt;li&gt;Unlimited retention of metrics.&lt;/li&gt; &#xA; &lt;li&gt;High availability of components, including Prometheus.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://thanos.io/tip/thanos/getting-started.md/&#34;&gt;Getting Started&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thanos.io/tip/thanos/design.md/&#34;&gt;Design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/docs/getting-started.md#blog-posts&#34;&gt;Blog posts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/docs/getting-started.md#talks&#34;&gt;Talks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/docs/proposals-done&#34;&gt;Proposals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/docs/integrations.md&#34;&gt;Integrations&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Global querying view across all connected Prometheus servers&lt;/li&gt; &#xA; &lt;li&gt;Deduplication and merging of metrics collected from Prometheus HA pairs&lt;/li&gt; &#xA; &lt;li&gt;Seamless integration with existing Prometheus setups&lt;/li&gt; &#xA; &lt;li&gt;Any object storage as its only, optional dependency&lt;/li&gt; &#xA; &lt;li&gt;Downsampling historical data for massive query speedup&lt;/li&gt; &#xA; &lt;li&gt;Cross-cluster federation&lt;/li&gt; &#xA; &lt;li&gt;Fault-tolerant query routing&lt;/li&gt; &#xA; &lt;li&gt;Simple gRPC &#34;Store API&#34; for unified data access across all metric data&lt;/li&gt; &#xA; &lt;li&gt;Easy integration points for custom metric providers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture Overview&lt;/h2&gt; &#xA;&lt;p&gt;Deployment with Sidecar for Kubernetes:&lt;/p&gt; &#xA;&lt;!--&#xA;Source file to copy and edit: https://docs.google.com/drawings/d/1AiMc1qAjASMbtqL6PNs0r9-ynGoZ9LIAtf0b9PjILxw/edit?usp=sharing&#xA;--&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.google.com/drawings/d/e/2PACX-1vSJd32gPh8-MC5Ko0-P-v1KQ0Xnxa0qmsVXowtkwVGlczGfVW-Vd415Y6F129zvh3y0vHLBZcJeZEoz/pub?w=960&amp;amp;h=720&#34; alt=&#34;Sidecar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Deployment with Receive in order to scale out or implement with other remote write compatible sources:&lt;/p&gt; &#xA;&lt;!--&#xA;Source file to copy and edit: https://docs.google.com/drawings/d/1iimTbcicKXqz0FYtSfz04JmmVFLVO9BjAjEzBm5538w/edit?usp=sharing&#xA;--&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.google.com/drawings/d/e/2PACX-1vRdYP__uDuygGR5ym1dxBzU6LEx5v7Rs1cAUKPsl5BZrRGVl5YIj5lsD_FOljeIVOGWatdAI9pazbCP/pub?w=960&amp;amp;h=720&#34; alt=&#34;Receive&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanos Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;The philosophy of Thanos and our community is borrowing much from UNIX philosophy and the golang programming language.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Each subcommand should do one thing and do it well &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;e.g. thanos query proxies incoming calls to known store API endpoints merging the result&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Write components that work together &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;e.g. blocks should be stored in native prometheus format&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Make it easy to read, write, and, run components &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;e.g. reduce complexity in system design and implementation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Main branch should be stable and usable. Every commit to main builds docker image named &lt;code&gt;main-&amp;lt;date&amp;gt;-&amp;lt;sha&amp;gt;&lt;/code&gt; in &lt;a href=&#34;https://quay.io/repository/thanos/thanos&#34;&gt;quay.io/thanos/thanos&lt;/a&gt; and &lt;a href=&#34;https://hub.docker.com/r/thanosio/thanos&#34;&gt;thanosio/thanos dockerhub (mirror)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We also perform minor releases every 6 weeks.&lt;/p&gt; &#xA;&lt;p&gt;During that, we build tarballs for major platforms and release docker images.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/docs/release-process.md&#34;&gt;release process docs&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are very welcome! See our &lt;a href=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Thanos is an open source project and we value and welcome new contributors and members of the community. Here are ways to get in touch with the community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;#thanos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issue Tracker: &lt;a href=&#34;https://github.com/thanos-io/thanos/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/website/data/adopters.yml&#34;&gt;&lt;code&gt;Adopters List&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/thanos-io/thanos/main/MAINTAINERS.md&#34;&gt;MAINTAINERS.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>