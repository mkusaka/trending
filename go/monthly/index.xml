<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-01T01:46:12Z</updated>
  <subtitle>Monthly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nats-io/nats-server</title>
    <updated>2025-05-01T01:46:12Z</updated>
    <id>tag:github.com,2025-05-01:/nats-io/nats-server</id>
    <link href="https://github.com/nats-io/nats-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High-Performance server for NATS.io, the cloud and edge native messaging system.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nats-io/nats-server/main/logos/nats-horizontal-color.png&#34; width=&#34;300&#34; alt=&#34;NATS Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nats.io&#34;&gt;NATS&lt;/a&gt; is a simple, secure and performant communications system for digital systems, services and devices. NATS is part of the Cloud Native Computing Foundation (&lt;a href=&#34;https://cncf.io&#34;&gt;CNCF&lt;/a&gt;). NATS has over &lt;a href=&#34;https://nats.io/download/&#34;&gt;40 client language implementations&lt;/a&gt;, and its server can run on-premise, in the cloud, at the edge, and even on a Raspberry Pi. NATS can secure and simplify design and operation of modern distributed systems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache2-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/github/nats-io/nats-server&#34;&gt;&lt;img src=&#34;https://travis-ci.org/nats-io/nats-server.svg?branch=main&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nats-io/nats-server/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/nats-io/nats-server&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slack.nats.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20slack-green&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/nats-io/nats-server?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/nats-io/nats-server/badge.svg?branch=main&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/_/nats&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/_/nats.svg?sanitize=true&#34; alt=&#34;Docker Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://somsubhra.github.io/github-release-stats/?username=nats-io&amp;amp;repository=nats-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/nats-io/nats-server/total.svg?logo=github&#34; alt=&#34;GitHub Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1895&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1895/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/helm/nats/nats&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/nats&#34; alt=&#34;Artifact Hub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nats.io&#34;&gt;Official Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.nats.io&#34;&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.nats.io/reference/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://rethink.synadia.com/episodes/1/&#34;&gt;a video overview&lt;/a&gt; of NATS.&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://www.youtube.com/watch?v=sm63oAVPqAM&#34;&gt;this video from SCALE 13x&lt;/a&gt; to learn more about its origin story and design philosophy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/nats_io&#34;&gt;Twitter&lt;/a&gt;: Follow us on Twitter!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/natsio&#34;&gt;Google Groups&lt;/a&gt;: Where you can ask questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://natsio.slack.com&#34;&gt;Slack&lt;/a&gt;: Click &lt;a href=&#34;https://slack.nats.io&#34;&gt;here&lt;/a&gt; to join. You can ask questions to our maintainers and to the rich and active community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in contributing to NATS, read about our...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nats-io/nats-server/main/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nats-io&#34;&gt;Report issues or propose Pull Requests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The NATS product roadmap can be found &lt;a href=&#34;https://nats.io/about/#roadmap&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;Who uses NATS? See our &lt;a href=&#34;https://nats.io/#who-uses-nats&#34;&gt;list of users&lt;/a&gt; on &lt;a href=&#34;https://nats.io&#34;&gt;https://nats.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;h3&gt;Security Audit&lt;/h3&gt; &#xA;&lt;p&gt;A third party security audit was performed by Cure53, you can see the full report &lt;a href=&#34;https://github.com/nats-io/nats-general/raw/main/reports/Cure53_NATS_Audit.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Reporting Security Vulnerabilities&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve found a vulnerability or a potential vulnerability in the NATS server, please let us know at &lt;a href=&#34;mailto:security@nats.io&#34;&gt;nats-security&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Unless otherwise noted, the NATS source files are distributed under the Apache Version 2.0 license found in the LICENSE file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>plandex-ai/plandex</title>
    <updated>2025-05-01T01:46:12Z</updated>
    <id>tag:github.com,2025-05-01:/plandex-ai/plandex</id>
    <link href="https://github.com/plandex-ai/plandex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source AI coding agent. Designed for large projects and real world tasks.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://plandex.ai&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;images/plandex-logo-dark-v2.png&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;images/plandex-logo-light-v2.png&#34;&gt; &#xA;   &lt;img width=&#34;400&#34; src=&#34;https://raw.githubusercontent.com/plandex-ai/plandex/main/images/plandex-logo-dark-bg-v2.png&#34;&gt; &#xA;  &lt;/picture&gt;&lt;/a&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &#xA;  &lt;!-- Call to Action Links --&gt; &lt;a href=&#34;https://raw.githubusercontent.com/plandex-ai/plandex/main/#install&#34;&gt; &lt;b&gt;30-Second Install&lt;/b&gt; &lt;/a&gt; · &lt;a href=&#34;https://plandex.ai&#34;&gt; &lt;b&gt;Website&lt;/b&gt; &lt;/a&gt; · &lt;a href=&#34;https://docs.plandex.ai/&#34;&gt; &lt;b&gt;Docs&lt;/b&gt; &lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/plandex-ai/plandex/main/#examples-&#34;&gt; &lt;b&gt;Examples&lt;/b&gt; &lt;/a&gt; · &lt;a href=&#34;https://docs.plandex.ai/hosting/self-hosting/local-mode-quickstart&#34;&gt; &lt;b&gt;Local Self-Hosted Mode&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/plandex-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1214825831973785600.svg?style=flat&amp;amp;logo=discord&amp;amp;label=Discord&amp;amp;refresh=1&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plandex-ai/plandex&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/plandex-ai/plandex?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/PlandexAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/PlandexAI?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- Badges --&gt; &lt;a href=&#34;https://github.com/plandex-ai/plandex/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plandex-ai/plandex/releases?q=cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/plandex-ai/plandex?filter=cli*&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plandex-ai/plandex/releases?q=server&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/plandex-ai/plandex?filter=server*&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- &lt;a href=&#34;https://github.com/your_username/your_project/issues&#34;&gt;&#xA;    &lt;img src=&#34;https://img.shields.io/github/issues-closed/your_username/your_project.svg&#34; alt=&#34;Issues Closed&#34; /&gt;&#xA;  &lt;/a&gt; --&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://trendshift.io/repositories/8994&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/8994&#34; alt=&#34;plandex-ai%2Fplandex | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; An AI coding agent designed for large tasks and real world projects.&lt;br&gt;&lt;br&gt; &lt;/h1&gt; &#xA;&lt;!-- &lt;h2 align=&#34;center&#34;&gt;&#xA;  Designed for large tasks and real world projects.&lt;br/&gt;&lt;br/&gt;&#xA;  &lt;/h2&gt; --&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.youtube.com/watch?v=SFSu2vNmlLk&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/plandex-ai/plandex/main/images/plandex-v2-yt.png&#34; alt=&#34;Plandex v2 Demo Video&#34; width=&#34;800&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;💻&amp;nbsp; Plandex is a terminal-based AI development tool that can &lt;strong&gt;plan and execute&lt;/strong&gt; large coding tasks that span many steps and touch dozens of files. It can handle up to 2M tokens of context directly (~100k per file), and can index directories with 20M tokens or more using tree-sitter project maps.&lt;/p&gt; &#xA;&lt;p&gt;🔬&amp;nbsp; &lt;strong&gt;A cumulative diff review sandbox&lt;/strong&gt; keeps AI-generated changes separate from your project files until they are ready to go. Command execution is controlled so you can easily roll back and debug. Plandex helps you get the most out of AI without leaving behind a mess in your project.&lt;/p&gt; &#xA;&lt;p&gt;🧠&amp;nbsp; &lt;strong&gt;Combine the best models&lt;/strong&gt; from Anthropic, OpenAI, Google, and open source providers to build entire features and apps with a robust terminal-based workflow.&lt;/p&gt; &#xA;&lt;p&gt;🚀&amp;nbsp; Plandex is capable of &lt;strong&gt;full autonomy&lt;/strong&gt;—it can load relevant files, plan and implement changes, execute commands, and automatically debug—but it&#39;s also highly flexible and configurable, giving developers fine-grained control and a step-by-step review process when needed.&lt;/p&gt; &#xA;&lt;p&gt;💪&amp;nbsp; Plandex is designed to be resilient to &lt;strong&gt;large projects and files&lt;/strong&gt;. If you&#39;ve found that others tools struggle once your project gets past a certain size or the changes are too complex, give Plandex a shot.&lt;/p&gt; &#xA;&lt;h2&gt;Smart context management that works in big projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🐘 &lt;strong&gt;2M token effective context window&lt;/strong&gt; with default model pack. Plandex loads only what&#39;s needed for each step.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🗄️ &lt;strong&gt;Reliable in large projects and files.&lt;/strong&gt; Easily generate, review, revise, and apply changes spanning dozens of files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🗺️ &lt;strong&gt;Fast project map generation&lt;/strong&gt; and syntax validation with tree-sitter. Supports 30+ languages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;💰 &lt;strong&gt;Context caching&lt;/strong&gt; is used across the board for OpenAI, Anthropic, and Google models, reducing costs and latency.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tight control or full autonomy—it&#39;s up to you&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🚦 &lt;strong&gt;Configurable autonomy:&lt;/strong&gt; go from full auto mode to fine-grained control depending on the task.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🐞 &lt;strong&gt;Automated debugging&lt;/strong&gt; of terminal commands (like builds, linters, tests, deployments, and scripts). If you have Chrome installed, you can also automatically debug browser applications.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tools that help you get production-ready results&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;💬 &lt;strong&gt;A project-aware chat mode&lt;/strong&gt; that helps you flesh out ideas before moving to implementation. Also great for asking questions and learning about a codebase.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🧠 &lt;strong&gt;Easily try + combine models&lt;/strong&gt; from multiple providers. Curated model packs offer different tradeoffs of capability, cost, and speed, as well as open source and provider-specific packs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🛡️ &lt;strong&gt;Reliable file edits&lt;/strong&gt; that prioritize correctness. While most edits are quick and cheap, Plandex validates both syntax and logic as needed, with multiple fallback layers when there are problems.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🔀 &lt;strong&gt;Full-fledged version control&lt;/strong&gt; for every update to the plan, including branches for exploring multiple paths or comparing different models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;📂 &lt;strong&gt;Git integration&lt;/strong&gt; with commit message generation and optional automatic commits.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dev-friendly, easy to install&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🧑‍💻 &lt;strong&gt;REPL mode&lt;/strong&gt; with fuzzy auto-complete for commands and file loading. Just run &lt;code&gt;plandex&lt;/code&gt; in any project to get started.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🛠️ &lt;strong&gt;CLI interface&lt;/strong&gt; for scripting or piping data into context.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;📦 &lt;strong&gt;One-line, zero dependency CLI install&lt;/strong&gt;. Dockerized local mode for easily self-hosting the server. Cloud-hosting options for extra reliability and convenience.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Workflow&amp;nbsp;&amp;nbsp;🔄&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/plandex-ai/plandex/main/images/plandex-workflow.png&#34; alt=&#34;Plandex workflow&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Examples&amp;nbsp; 🎥&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.youtube.com/watch?v=g-_76U_nK0Y&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/plandex-ai/plandex/main/images/plandex-browser-debug-yt.png&#34; alt=&#34;Plandex Browser Debugging Example&#34; width=&#34;800&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Install&amp;nbsp;&amp;nbsp;📥&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL https://plandex.ai/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Windows is supported via &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt;. Plandex only works correctly on Windows in the WSL shell. It doesn&#39;t work in the Windows CMD prompt or PowerShell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.plandex.ai/install&#34;&gt;More installation options.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hosting&amp;nbsp;&amp;nbsp;⚖️&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Plandex Cloud (Integrated Models)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;• No separate accounts or API keys.&lt;br&gt;• Easy multi-device usage.&lt;br&gt;• Centralized billing, budgeting, usage tracking, and cost reporting.&lt;br&gt;• Quickest way to &lt;a href=&#34;https://app.plandex.ai/start?modelsMode=integrated&#34;&gt;get started.&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Plandex Cloud (BYO API Key)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;• Use Plandex Cloud with your own &lt;a href=&#34;https://openrouter.ai&#34;&gt;OpenRouter.ai&lt;/a&gt; key (and &lt;strong&gt;optionally&lt;/strong&gt; your own &lt;a href=&#34;https://platform.openai.com&#34;&gt;OpenAI&lt;/a&gt; key).&lt;br&gt;• &lt;a href=&#34;https://app.plandex.ai/start?modelsMode=byo&#34;&gt;Get started&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Self-hosted/Local Mode&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;• Run Plandex locally with Docker or host on your own server.&lt;br&gt;• Use your own &lt;a href=&#34;https://openrouter.ai&#34;&gt;OpenRouter.ai&lt;/a&gt; key (and &lt;strong&gt;optionally&lt;/strong&gt; your own &lt;a href=&#34;https://platform.openai.com&#34;&gt;OpenAI&lt;/a&gt; key).&lt;br&gt;• Follow the &lt;a href=&#34;https://raw.githubusercontent.com/plandex-ai/plandex/main/hosting/self-hosting.md&#34;&gt;local-mode quickstart&lt;/a&gt; to get started.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Provider keys&amp;nbsp; 🔑&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re going with a &#39;BYO API Key&#39; option above (whether cloud or self-hosted), you&#39;ll need to set the &lt;code&gt;OPENROUTER_API_KEY&lt;/code&gt; environment variable before continuing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENROUTER_API_KEY=...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also &lt;strong&gt;optionally&lt;/strong&gt; set a &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable if you want OpenAI models to use the OpenAI API directly instead of OpenRouter (for slightly lower latency and costs):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Get started&amp;nbsp; 🚀&lt;/h2&gt; &#xA;&lt;p&gt;First, &lt;code&gt;cd&lt;/code&gt; into a &lt;strong&gt;project directory&lt;/strong&gt; where you want to get something done or chat about the project. Make a new directory first with &lt;code&gt;mkdir your-project-dir&lt;/code&gt; if you&#39;re starting on a new project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd your-project-dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a new project, you might also want to initialize a git repo. Plandex doesn&#39;t require that your project is in a git repo, but it does integrate well with git if you use it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now start the Plandex REPL in your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;plandex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for short:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pdx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;☁️ &lt;em&gt;If you&#39;re using Plandex Cloud, you&#39;ll be prompted at this point to start a trial.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then just give the REPL help text a quick read, and you&#39;re ready go. The REPL starts in &lt;em&gt;chat mode&lt;/em&gt; by default, which is good for fleshing out ideas before moving to implementation. Once the task is clear, Plandex will prompt you to switch to &lt;em&gt;tell mode&lt;/em&gt; to make a detailed plan and start writing code.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Docs&amp;nbsp; 🛠️&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://docs.plandex.ai/&#34;&gt;👉&amp;nbsp;&amp;nbsp;Full documentation.&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Discussion and discord &amp;nbsp;💬&lt;/h2&gt; &#xA;&lt;p&gt;Please feel free to give your feedback, ask questions, report a bug, or just hang out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/plandex-ai&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/plandex-ai/plandex/discussions&#34;&gt;Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/plandex-ai/plandex/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Follow and subscribe&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://x.com/PlandexAI&#34;&gt;Follow @PlandexAI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://x.com/Danenania&#34;&gt;Follow @Danenania&lt;/a&gt; (Plandex&#39;s creator)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://x.com/PlandexAI&#34;&gt;Subscribe on YouTube&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contributors &amp;nbsp;👥&lt;/h2&gt; &#xA;&lt;p&gt;⭐️&amp;nbsp;&amp;nbsp;Please star, fork, explore, and contribute to Plandex. There&#39;s a lot of work to do and so much that can be improved.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.plandex.ai/development&#34;&gt;Here&#39;s an overview on setting up a development environment.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gofiber/fiber</title>
    <updated>2025-05-01T01:46:12Z</updated>
    <id>tag:github.com,2025-05-01:/gofiber/fiber</id>
    <link href="https://github.com/gofiber/fiber" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚡️ Express inspired web framework written in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://gofiber.io&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source height=&#34;125&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/gofiber/docs/master/static/img/logo-dark.svg&#34;&gt; &#xA;   &lt;img height=&#34;125&#34; alt=&#34;Fiber&#34; src=&#34;https://raw.githubusercontent.com/gofiber/docs/master/static/img/logo.svg?sanitize=true&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/gofiber/fiber/v3#pkg-overview&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/%F0%9F%93%9A%20godoc-pkg-00ACD7.svg?color=00ACD7&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/gofiber/fiber/v3&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/%F0%9F%93%9D%20goreport-A%2B-75C46B?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/gofiber/fiber&#34;&gt; &lt;img alt=&#34;Codecov&#34; src=&#34;https://img.shields.io/codecov/c/github/gofiber/fiber?token=3Cr92CwaPQ&amp;amp;style=flat-square&amp;amp;logo=codecov&amp;amp;label=codecov&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/gofiber/fiber/actions?query=workflow%3ATest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/gofiber/fiber/test.yml?branch=master&amp;amp;label=%F0%9F%A7%AA%20tests&amp;amp;style=flat-square&amp;amp;color=75C46B&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://docs.gofiber.io&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/%F0%9F%92%A1%20fiber-docs-00ACD7.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://gofiber.io/discord&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/704680098577514527?style=flat-square&amp;amp;label=%F0%9F%92%AC%20discord&amp;amp;color=00ACD7&#34;&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;&lt;b&gt;Fiber&lt;/b&gt; is an &lt;a href=&#34;https://github.com/expressjs/express&#34;&gt;Express&lt;/a&gt; inspired &lt;b&gt;web framework&lt;/b&gt; built on top of &lt;a href=&#34;https://github.com/valyala/fasthttp&#34;&gt;Fasthttp&lt;/a&gt;, the &lt;b&gt;fastest&lt;/b&gt; HTTP engine for &lt;a href=&#34;https://go.dev/doc/&#34;&gt;Go&lt;/a&gt;. Designed to &lt;b&gt;ease&lt;/b&gt; things up for &lt;b&gt;fast&lt;/b&gt; development with &lt;a href=&#34;https://docs.gofiber.io/#zero-allocation&#34;&gt;&lt;b&gt;zero memory allocation&lt;/b&gt;&lt;/a&gt; and &lt;b&gt;performance&lt;/b&gt; in mind.&lt;/em&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;⚠️ &lt;strong&gt;Attention&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Fiber v3 is currently in beta and under active development. While it offers exciting new features, please note that it may not be stable for production use. We recommend sticking to the latest stable release (v2.x) for mission-critical applications. If you choose to use v3, be prepared for potential bugs and breaking changes. Always check the official documentation and release notes for updates and proceed with caution. Happy coding! 🚀&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;⚙️ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Fiber requires &lt;strong&gt;Go version &lt;code&gt;1.23&lt;/code&gt; or higher&lt;/strong&gt; to run. If you need to install or upgrade Go, visit the &lt;a href=&#34;https://go.dev/dl/&#34;&gt;official Go download page&lt;/a&gt;. To start setting up your project, create a new directory for your project and navigate into it. Then, initialize your project with Go modules by executing the following command in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go mod init github.com/your/repo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To learn more about Go modules and how they work, you can check out the &lt;a href=&#34;https://go.dev/blog/using-go-modules&#34;&gt;Using Go Modules&lt;/a&gt; blog post.&lt;/p&gt; &#xA;&lt;p&gt;After setting up your project, you can install Fiber with the &lt;code&gt;go get&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -u github.com/gofiber/fiber/v3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command fetches the Fiber package and adds it to your project&#39;s dependencies, allowing you to start building your web applications with Fiber.&lt;/p&gt; &#xA;&lt;h2&gt;⚡️ Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Getting started with Fiber is easy. Here&#39;s a basic example to create a simple web server that responds with &#34;Hello, World 👋!&#34; on the root path. This example demonstrates initializing a new Fiber app, setting up a route, and starting the server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    // Initialize a new Fiber app&#xA;    app := fiber.New()&#xA;&#xA;    // Define a route for the GET method on the root path &#39;/&#39;&#xA;    app.Get(&#34;/&#34;, func(c fiber.Ctx) error {&#xA;        // Send a string response to the client&#xA;        return c.SendString(&#34;Hello, World 👋!&#34;)&#xA;    })&#xA;&#xA;    // Start the server on port 3000&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This simple server is easy to set up and run. It introduces the core concepts of Fiber: app initialization, route definition, and starting the server. Just run this Go program, and visit &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser to see the message.&lt;/p&gt; &#xA;&lt;h2&gt;Zero Allocation&lt;/h2&gt; &#xA;&lt;p&gt;Fiber is optimized for &lt;strong&gt;high-performance&lt;/strong&gt;, meaning values returned from &lt;strong&gt;fiber.Ctx&lt;/strong&gt; are &lt;strong&gt;not&lt;/strong&gt; immutable by default and &lt;strong&gt;will&lt;/strong&gt; be re-used across requests. As a rule of thumb, you &lt;strong&gt;must&lt;/strong&gt; only use context values within the handler and &lt;strong&gt;must not&lt;/strong&gt; keep any references. Once you return from the handler, any values obtained from the context will be re-used in future requests. Visit our &lt;a href=&#34;https://docs.gofiber.io/#zero-allocation&#34;&gt;documentation&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;🤖 Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;These tests are performed by &lt;a href=&#34;https://www.techempower.com/benchmarks/#section=data-r19&amp;amp;hw=ph&amp;amp;test=plaintext&#34;&gt;TechEmpower&lt;/a&gt;. If you want to see all the results, please visit our &lt;a href=&#34;https://docs.gofiber.io/extra/benchmarks&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34; align=&#34;middle&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gofiber/docs/master/static/img/plaintext.png&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gofiber/docs/master/static/img/json.png&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;🎯 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Robust &lt;a href=&#34;https://docs.gofiber.io/guide/routing&#34;&gt;Routing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Serve &lt;a href=&#34;https://docs.gofiber.io/api/app#static&#34;&gt;Static Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extreme &lt;a href=&#34;https://docs.gofiber.io/extra/benchmarks&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.gofiber.io/extra/benchmarks&#34;&gt;Low Memory&lt;/a&gt; footprint&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.gofiber.io/api/ctx&#34;&gt;API Endpoints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.gofiber.io/category/-middleware&#34;&gt;Middleware&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://docs.gofiber.io/api/ctx#next&#34;&gt;Next&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/koddr/welcome-to-fiber-an-express-js-styled-fastest-web-framework-written-with-on-golang-497&#34;&gt;Rapid&lt;/a&gt; server-side programming&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gofiber/template&#34;&gt;Template Engines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gofiber/contrib/tree/main/websocket&#34;&gt;WebSocket Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gofiber/contrib/tree/main/socketio&#34;&gt;Socket.io Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gofiber/recipes/tree/master/sse&#34;&gt;Server-Sent Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.gofiber.io/api/middleware/limiter&#34;&gt;Rate Limiter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;And much more, &lt;a href=&#34;https://docs.gofiber.io/&#34;&gt;explore Fiber&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💡 Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;New gophers that make the switch from &lt;a href=&#34;https://nodejs.org/en/about/&#34;&gt;Node.js&lt;/a&gt; to &lt;a href=&#34;https://go.dev/doc/&#34;&gt;Go&lt;/a&gt; are dealing with a learning curve before they can start building their web applications or microservices. Fiber, as a &lt;strong&gt;web framework&lt;/strong&gt;, was created with the idea of &lt;strong&gt;minimalism&lt;/strong&gt; and follows the &lt;strong&gt;UNIX way&lt;/strong&gt;, so that new gophers can quickly enter the world of Go with a warm and trusted welcome.&lt;/p&gt; &#xA;&lt;p&gt;Fiber is &lt;strong&gt;inspired&lt;/strong&gt; by Express, the most popular web framework on the Internet. We combined the &lt;strong&gt;ease&lt;/strong&gt; of Express and &lt;strong&gt;raw performance&lt;/strong&gt; of Go. If you have ever implemented a web application in Node.js (&lt;em&gt;using Express or similar&lt;/em&gt;), then many methods and principles will seem &lt;strong&gt;very common&lt;/strong&gt; to you.&lt;/p&gt; &#xA;&lt;p&gt;We &lt;strong&gt;listen&lt;/strong&gt; to our users in &lt;a href=&#34;https://github.com/gofiber/fiber/issues&#34;&gt;issues&lt;/a&gt;, Discord &lt;a href=&#34;https://gofiber.io/discord&#34;&gt;channel&lt;/a&gt; &lt;em&gt;and all over the Internet&lt;/em&gt; to create a &lt;strong&gt;fast&lt;/strong&gt;, &lt;strong&gt;flexible&lt;/strong&gt; and &lt;strong&gt;friendly&lt;/strong&gt; Go web framework for &lt;strong&gt;any&lt;/strong&gt; task, &lt;strong&gt;deadline&lt;/strong&gt; and developer &lt;strong&gt;skill&lt;/strong&gt;! Just like Express does in the JavaScript world.&lt;/p&gt; &#xA;&lt;h2&gt;⚠️ Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Due to Fiber&#39;s usage of unsafe, the library may not always be compatible with the latest Go version. Fiber v3 has been tested with Go version 1.23 or higher.&lt;/li&gt; &#xA; &lt;li&gt;Fiber is not compatible with net/http interfaces. This means you will not be able to use projects like gqlgen, go-swagger, or any others which are part of the net/http ecosystem.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👀 Examples&lt;/h2&gt; &#xA;&lt;p&gt;Listed below are some of the common examples. If you want to see more code examples, please visit our &lt;a href=&#34;https://github.com/gofiber/recipes&#34;&gt;Recipes repository&lt;/a&gt; or visit our hosted &lt;a href=&#34;https://docs.gofiber.io&#34;&gt;API documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/#basic-routing&#34;&gt;&lt;strong&gt;Basic Routing&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;fmt&#34;&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // GET /api/register&#xA;    app.Get(&#34;/api/*&#34;, func(c fiber.Ctx) error {&#xA;        msg := fmt.Sprintf(&#34;✋ %s&#34;, c.Params(&#34;*&#34;))&#xA;        return c.SendString(msg) // =&amp;gt; ✋ register&#xA;    })&#xA;&#xA;    // GET /flights/LAX-SFO&#xA;    app.Get(&#34;/flights/:from-:to&#34;, func(c fiber.Ctx) error {&#xA;        msg := fmt.Sprintf(&#34;💸 From: %s, To: %s&#34;, c.Params(&#34;from&#34;), c.Params(&#34;to&#34;))&#xA;        return c.SendString(msg) // =&amp;gt; 💸 From: LAX, To: SFO&#xA;    })&#xA;&#xA;    // GET /dictionary.txt&#xA;    app.Get(&#34;/:file.:ext&#34;, func(c fiber.Ctx) error {&#xA;        msg := fmt.Sprintf(&#34;📃 %s.%s&#34;, c.Params(&#34;file&#34;), c.Params(&#34;ext&#34;))&#xA;        return c.SendString(msg) // =&amp;gt; 📃 dictionary.txt&#xA;    })&#xA;&#xA;    // GET /john/75&#xA;    app.Get(&#34;/:name/:age/:gender?&#34;, func(c fiber.Ctx) error {&#xA;        msg := fmt.Sprintf(&#34;👴 %s is %s years old&#34;, c.Params(&#34;name&#34;), c.Params(&#34;age&#34;))&#xA;        return c.SendString(msg) // =&amp;gt; 👴 john is 75 years old&#xA;    })&#xA;&#xA;    // GET /john&#xA;    app.Get(&#34;/:name&#34;, func(c fiber.Ctx) error {&#xA;        msg := fmt.Sprintf(&#34;Hello, %s 👋!&#34;, c.Params(&#34;name&#34;))&#xA;        return c.SendString(msg) // =&amp;gt; Hello john 👋!&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/app#name&#34;&gt;&lt;strong&gt;Route Naming&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;encoding/json&#34;&#xA;    &#34;fmt&#34;&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    app.Get(&#34;/api/*&#34;, func(c fiber.Ctx) error {&#xA;        msg := fmt.Sprintf(&#34;✋ %s&#34;, c.Params(&#34;*&#34;))&#xA;        return c.SendString(msg) // =&amp;gt; ✋ register&#xA;    }).Name(&#34;api&#34;)&#xA;&#xA;    route := app.GetRoute(&#34;api&#34;)&#xA;&#xA;    data, _ := json.MarshalIndent(route, &#34;&#34;, &#34;  &#34;)&#xA;    fmt.Println(string(data))&#xA;    // Prints:&#xA;    // {&#xA;    //    &#34;method&#34;: &#34;GET&#34;,&#xA;    //    &#34;name&#34;: &#34;api&#34;,&#xA;    //    &#34;path&#34;: &#34;/api/*&#34;,&#xA;    //    &#34;params&#34;: [&#xA;    //      &#34;*1&#34;&#xA;    //    ]&#xA;    // }&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/app#static&#34;&gt;&lt;strong&gt;Serving Static Files&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;    &#34;github.com/gofiber/fiber/v3/middleware/static&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Serve static files from the &#34;./public&#34; directory&#xA;    app.Get(&#34;/*&#34;, static.New(&#34;./public&#34;))&#xA;    // =&amp;gt; http://localhost:3000/js/script.js&#xA;    // =&amp;gt; http://localhost:3000/css/style.css&#xA;&#xA;    app.Get(&#34;/prefix*&#34;, static.New(&#34;./public&#34;))&#xA;    // =&amp;gt; http://localhost:3000/prefix/js/script.js&#xA;    // =&amp;gt; http://localhost:3000/prefix/css/style.css&#xA;&#xA;    // Serve a single file for any unmatched routes&#xA;    app.Get(&#34;*&#34;, static.New(&#34;./public/index.html&#34;))&#xA;    // =&amp;gt; http://localhost:3000/any/path/shows/index.html&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/ctx#next&#34;&gt;&lt;strong&gt;Middleware &amp;amp; Next&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;fmt&#34;&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Middleware that matches any route&#xA;    app.Use(func(c fiber.Ctx) error {&#xA;        fmt.Println(&#34;🥇 First handler&#34;)&#xA;        return c.Next()&#xA;    })&#xA;&#xA;    // Middleware that matches all routes starting with /api&#xA;    app.Use(&#34;/api&#34;, func(c fiber.Ctx) error {&#xA;        fmt.Println(&#34;🥈 Second handler&#34;)&#xA;        return c.Next()&#xA;    })&#xA;&#xA;    // GET /api/list&#xA;    app.Get(&#34;/api/list&#34;, func(c fiber.Ctx) error {&#xA;        fmt.Println(&#34;🥉 Last handler&#34;)&#xA;        return c.SendString(&#34;Hello, World 👋!&#34;)&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;📚 Show more code examples&lt;/summary&gt; &#xA; &lt;h3&gt;Views Engines&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/fiber#config&#34;&gt;Config&lt;/a&gt; 📖 &lt;a href=&#34;https://github.com/gofiber/template&#34;&gt;Engines&lt;/a&gt; 📖 &lt;a href=&#34;https://docs.gofiber.io/api/ctx#render&#34;&gt;Render&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Fiber defaults to the &lt;a href=&#34;https://pkg.go.dev/html/template/&#34;&gt;html/template&lt;/a&gt; when no view engine is set.&lt;/p&gt; &#xA; &lt;p&gt;If you want to execute partials or use a different engine like &lt;a href=&#34;https://github.com/eknkc/amber&#34;&gt;amber&lt;/a&gt;, &lt;a href=&#34;https://github.com/aymerick/raymond&#34;&gt;handlebars&lt;/a&gt;, &lt;a href=&#34;https://github.com/cbroglie/mustache&#34;&gt;mustache&lt;/a&gt;, or &lt;a href=&#34;https://github.com/Joker/jade&#34;&gt;pug&lt;/a&gt;, etc., check out our &lt;a href=&#34;https://github.com/gofiber/template&#34;&gt;Template&lt;/a&gt; package that supports multiple view engines.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;    &#34;github.com/gofiber/template/pug&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    // Initialize a new Fiber app with Pug template engine&#xA;    app := fiber.New(fiber.Config{&#xA;        Views: pug.New(&#34;./views&#34;, &#34;.pug&#34;),&#xA;    })&#xA;&#xA;    // Define a route that renders the &#34;home.pug&#34; template&#xA;    app.Get(&#34;/&#34;, func(c fiber.Ctx) error {&#xA;        return c.Render(&#34;home&#34;, fiber.Map{&#xA;            &#34;title&#34;: &#34;Homepage&#34;,&#xA;            &#34;year&#34;:  1999,&#xA;        })&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Grouping Routes into Chains&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/app#group&#34;&gt;Group&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;)&#xA;&#xA;func middleware(c fiber.Ctx) error {&#xA;    log.Println(&#34;Middleware executed&#34;)&#xA;    return c.Next()&#xA;}&#xA;&#xA;func handler(c fiber.Ctx) error {&#xA;    return c.SendString(&#34;Handler response&#34;)&#xA;}&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Root API group with middleware&#xA;    api := app.Group(&#34;/api&#34;, middleware) // /api&#xA;&#xA;    // API v1 routes&#xA;    v1 := api.Group(&#34;/v1&#34;, middleware) // /api/v1&#xA;    v1.Get(&#34;/list&#34;, handler)           // /api/v1/list&#xA;    v1.Get(&#34;/user&#34;, handler)           // /api/v1/user&#xA;&#xA;    // API v2 routes&#xA;    v2 := api.Group(&#34;/v2&#34;, middleware) // /api/v2&#xA;    v2.Get(&#34;/list&#34;, handler)           // /api/v2/list&#xA;    v2.Get(&#34;/user&#34;, handler)           // /api/v2/user&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Middleware Logger&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/middleware/logger&#34;&gt;Logger&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;    &#34;github.com/gofiber/fiber/v3/middleware/logger&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Use Logger middleware&#xA;    app.Use(logger.New())&#xA;&#xA;    // Define routes&#xA;    app.Get(&#34;/&#34;, func(c fiber.Ctx) error {&#xA;        return c.SendString(&#34;Hello, Logger!&#34;)&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Cross-Origin Resource Sharing (CORS)&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/middleware/cors&#34;&gt;CORS&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;    &#34;github.com/gofiber/fiber/v3/middleware/cors&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Use CORS middleware with default settings&#xA;    app.Use(cors.New())&#xA;&#xA;    // Define routes&#xA;    app.Get(&#34;/&#34;, func(c fiber.Ctx) error {&#xA;        return c.SendString(&#34;CORS enabled!&#34;)&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Check CORS by passing any domain in &lt;code&gt;Origin&lt;/code&gt; header:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -H &#34;Origin: http://example.com&#34; --verbose http://localhost:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Custom 404 Response&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/ctx#status&#34;&gt;HTTP Methods&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Define routes&#xA;    app.Get(&#34;/&#34;, static.New(&#34;./public&#34;))&#xA;&#xA;    app.Get(&#34;/demo&#34;, func(c fiber.Ctx) error {&#xA;        return c.SendString(&#34;This is a demo page!&#34;)&#xA;    })&#xA;&#xA;    app.Post(&#34;/register&#34;, func(c fiber.Ctx) error {&#xA;        return c.SendString(&#34;Registration successful!&#34;)&#xA;    })&#xA;&#xA;    // Middleware to handle 404 Not Found&#xA;    app.Use(func(c fiber.Ctx) error {&#xA;        return c.SendStatus(fiber.StatusNotFound) // =&amp;gt; 404 &#34;Not Found&#34;&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;JSON Response&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/ctx#json&#34;&gt;JSON&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;)&#xA;&#xA;type User struct {&#xA;    Name string `json:&#34;name&#34;`&#xA;    Age  int    `json:&#34;age&#34;`&#xA;}&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Route that returns a JSON object&#xA;    app.Get(&#34;/user&#34;, func(c fiber.Ctx) error {&#xA;        return c.JSON(&amp;amp;User{&#34;John&#34;, 20})&#xA;        // =&amp;gt; {&#34;name&#34;:&#34;John&#34;, &#34;age&#34;:20}&#xA;    })&#xA;&#xA;    // Route that returns a JSON map&#xA;    app.Get(&#34;/json&#34;, func(c fiber.Ctx) error {&#xA;        return c.JSON(fiber.Map{&#xA;            &#34;success&#34;: true,&#xA;            &#34;message&#34;: &#34;Hi John!&#34;,&#xA;        })&#xA;        // =&amp;gt; {&#34;success&#34;:true, &#34;message&#34;:&#34;Hi John!&#34;}&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;WebSocket Upgrade&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://github.com/gofiber/websocket&#34;&gt;Websocket&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;    &#34;github.com/gofiber/fiber/v3/middleware/websocket&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // WebSocket route&#xA;    app.Get(&#34;/ws&#34;, websocket.New(func(c *websocket.Conn) {&#xA;        defer c.Close()&#xA;        for {&#xA;            // Read message from client&#xA;            mt, msg, err := c.ReadMessage()&#xA;            if err != nil {&#xA;                log.Println(&#34;read:&#34;, err)&#xA;                break&#xA;            }&#xA;            log.Printf(&#34;recv: %s&#34;, msg)&#xA;&#xA;            // Write message back to client&#xA;            err = c.WriteMessage(mt, msg)&#xA;            if err != nil {&#xA;                log.Println(&#34;write:&#34;, err)&#xA;                break&#xA;            }&#xA;        }&#xA;    }))&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;    // Connect via WebSocket at ws://localhost:3000/ws&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Server-Sent Events&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events&#34;&gt;More Info&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;bufio&#34;&#xA;    &#34;fmt&#34;&#xA;    &#34;log&#34;&#xA;    &#34;time&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;    &#34;github.com/valyala/fasthttp&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Server-Sent Events route&#xA;    app.Get(&#34;/sse&#34;, func(c fiber.Ctx) error {&#xA;        c.Set(&#34;Content-Type&#34;, &#34;text/event-stream&#34;)&#xA;        c.Set(&#34;Cache-Control&#34;, &#34;no-cache&#34;)&#xA;        c.Set(&#34;Connection&#34;, &#34;keep-alive&#34;)&#xA;        c.Set(&#34;Transfer-Encoding&#34;, &#34;chunked&#34;)&#xA;&#xA;        c.Context().SetBodyStreamWriter(func(w *bufio.Writer) {&#xA;            var i int&#xA;            for {&#xA;                i++&#xA;                msg := fmt.Sprintf(&#34;%d - the time is %v&#34;, i, time.Now())&#xA;                fmt.Fprintf(w, &#34;data: Message: %s\n\n&#34;, msg)&#xA;                fmt.Println(msg)&#xA;&#xA;                w.Flush()&#xA;                time.Sleep(5 * time.Second)&#xA;            }&#xA;        })&#xA;&#xA;        return nil&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Recover Middleware&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/middleware/recover&#34;&gt;Recover&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;    &#34;github.com/gofiber/fiber/v3/middleware/recover&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New()&#xA;&#xA;    // Use Recover middleware to handle panics gracefully&#xA;    app.Use(recover.New())&#xA;&#xA;    // Route that intentionally panics&#xA;    app.Get(&#34;/&#34;, func(c fiber.Ctx) error {&#xA;        panic(&#34;normally this would crash your app&#34;)&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Using Trusted Proxy&lt;/h3&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://docs.gofiber.io/api/fiber#config&#34;&gt;Config&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;&#xA;    &#34;github.com/gofiber/fiber/v3&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := fiber.New(fiber.Config{&#xA;        // Configure trusted proxies - WARNING: Only trust proxies you control&#xA;        // Using TrustProxy: true with unrestricted IPs can lead to IP spoofing&#xA;        TrustProxy: true,&#xA;        TrustProxyConfig: fiber.TrustProxyConfig{&#xA;            Proxies: []string{&#34;10.0.0.0/8&#34;, &#34;172.16.0.0/12&#34;}, // Example: Internal network ranges only&#xA;        },&#xA;        ProxyHeader: fiber.HeaderXForwardedFor,&#xA;    })&#xA;&#xA;    // Define routes&#xA;    app.Get(&#34;/&#34;, func(c fiber.Ctx) error {&#xA;        return c.SendString(&#34;Trusted Proxy Configured!&#34;)&#xA;    })&#xA;&#xA;    log.Fatal(app.Listen(&#34;:3000&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🧬 Internal Middleware&lt;/h2&gt; &#xA;&lt;p&gt;Here is a list of middleware that are included within the Fiber framework.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Middleware&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/adaptor&#34;&gt;adaptor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Converter for net/http handlers to/from Fiber request handlers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/basicauth&#34;&gt;basicauth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provides HTTP basic authentication. It calls the next handler for valid credentials and 401 Unauthorized for missing or invalid credentials.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/cache&#34;&gt;cache&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Intercept and cache HTTP responses.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/compress&#34;&gt;compress&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Compression middleware for Fiber, with support for &lt;code&gt;deflate&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt;, &lt;code&gt;brotli&lt;/code&gt; and &lt;code&gt;zstd&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/cors&#34;&gt;cors&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable cross-origin resource sharing (CORS) with various options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/csrf&#34;&gt;csrf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Protect from CSRF exploits.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/earlydata&#34;&gt;earlydata&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds support for TLS 1.3&#39;s early data (&#34;0-RTT&#34;) feature.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/encryptcookie&#34;&gt;encryptcookie&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Encrypt middleware which encrypts cookie values.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/envvar&#34;&gt;envvar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Expose environment variables with providing an optional config.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/etag&#34;&gt;etag&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allows for caches to be more efficient and save bandwidth, as a web server does not need to resend a full response if the content has not changed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/expvar&#34;&gt;expvar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serves via its HTTP server runtime exposed variables in the JSON format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/favicon&#34;&gt;favicon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ignore favicon from logs or serve from memory if a file path is provided.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/healthcheck&#34;&gt;healthcheck&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Liveness and Readiness probes for Fiber.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/helmet&#34;&gt;helmet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Helps secure your apps by setting various HTTP headers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/idempotency&#34;&gt;idempotency&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allows for fault-tolerant APIs where duplicate requests do not erroneously cause the same action performed multiple times on the server-side.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/keyauth&#34;&gt;keyauth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds support for key based authentication.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/limiter&#34;&gt;limiter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds Rate-limiting support to Fiber. Use to limit repeated requests to public APIs and/or endpoints such as password reset.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/logger&#34;&gt;logger&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP request/response logger.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/pprof&#34;&gt;pprof&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serves runtime profiling data in pprof format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/proxy&#34;&gt;proxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allows you to proxy requests to multiple servers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/recover&#34;&gt;recover&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Recovers from panics anywhere in the stack chain and handles the control to the centralized ErrorHandler.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/redirect&#34;&gt;redirect&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redirect middleware.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/requestid&#34;&gt;requestid&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds a request ID to every request.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/rewrite&#34;&gt;rewrite&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rewrites the URL path based on provided rules. It can be helpful for backward compatibility or just creating cleaner and more descriptive links.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/session&#34;&gt;session&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Session middleware. NOTE: This middleware uses our Storage package.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/skip&#34;&gt;skip&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Skip middleware that skips a wrapped handler if a predicate is true.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/static&#34;&gt;static&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Static middleware for Fiber that serves static files such as &lt;strong&gt;images&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt;, and &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gofiber/fiber/tree/main/middleware/timeout&#34;&gt;timeout&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds a max time for a request and forwards to ErrorHandler if it is exceeded.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🧬 External Middleware&lt;/h2&gt; &#xA;&lt;p&gt;List of externally hosted middleware modules and maintained by the &lt;a href=&#34;https://github.com/orgs/gofiber/people&#34;&gt;Fiber team&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Middleware&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/gofiber/contrib&#34;&gt;contrib&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Third-party middlewares&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/gofiber/storage&#34;&gt;storage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Premade storage drivers that implement the Storage interface, designed to be used with various Fiber middlewares.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/gofiber/template&#34;&gt;template&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;This package contains 9 template engines that can be used with Fiber.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🕶️ Awesome List&lt;/h2&gt; &#xA;&lt;p&gt;For more articles, middlewares, examples, or tools, check our &lt;a href=&#34;https://github.com/gofiber/awesome-fiber&#34;&gt;awesome list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;👍 Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you want to say &lt;strong&gt;Thank You&lt;/strong&gt; and/or support the active development of &lt;code&gt;Fiber&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add a &lt;a href=&#34;https://github.com/gofiber/fiber/stargazers&#34;&gt;GitHub Star&lt;/a&gt; to the project.&lt;/li&gt; &#xA; &lt;li&gt;Tweet about the project &lt;a href=&#34;https://x.com/intent/tweet?text=Fiber%20is%20an%20Express%20inspired%20%23web%20%23framework%20built%20on%20top%20of%20Fasthttp%2C%20the%20fastest%20HTTP%20engine%20for%20%23Go.%20Designed%20to%20ease%20things%20up%20for%20%23fast%20development%20with%20zero%20memory%20allocation%20and%20%23performance%20in%20mind%20%F0%9F%9A%80%20https%3A%2F%2Fgithub.com%2Fgofiber%2Ffiber&#34;&gt;on your 𝕏 (Twitter)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Write a review or tutorial on &lt;a href=&#34;https://medium.com/&#34;&gt;Medium&lt;/a&gt;, &lt;a href=&#34;https://dev.to/&#34;&gt;Dev.to&lt;/a&gt; or your personal blog.&lt;/li&gt; &#xA; &lt;li&gt;Support the project by donating a &lt;a href=&#34;https://buymeacoff.ee/fenny&#34;&gt;cup of coffee&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;💻 Development&lt;/h2&gt; &#xA;&lt;p&gt;To ensure your contributions are ready for a Pull Request, please use the following &lt;code&gt;Makefile&lt;/code&gt; commands. These tools help maintain code quality and consistency.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;make help&lt;/strong&gt;: Display available commands.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;make audit&lt;/strong&gt;: Conduct quality checks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;make benchmark&lt;/strong&gt;: Benchmark code performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;make coverage&lt;/strong&gt;: Generate test coverage report.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;make format&lt;/strong&gt;: Automatically format code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;make lint&lt;/strong&gt;: Run lint checks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;make test&lt;/strong&gt;: Execute all tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;make tidy&lt;/strong&gt;: Tidy dependencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run these commands to ensure your code adheres to project standards and best practices.&lt;/p&gt; &#xA;&lt;h2&gt;☕ Supporters&lt;/h2&gt; &#xA;&lt;p&gt;Fiber is an open-source project that runs on donations to pay the bills, e.g., our domain name, GitBook, Netlify, and serverless hosting. If you want to support Fiber, you can ☕ &lt;a href=&#34;https://buymeacoff.ee/fenny&#34;&gt;&lt;strong&gt;buy a coffee here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;User&lt;/th&gt; &#xA;   &lt;th&gt;Donation&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/204341?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/destari&#34;&gt;@destari&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/63164982?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dembygenesis&#34;&gt;@dembygenesis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/56607882?s=25&#34; alt=&#34;thomasvvugt&#34; style=&#34;width: 25px; height: 25px;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/thomasvvugt&#34;&gt;@thomasvvugt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/27820675?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hendratommy&#34;&gt;@hendratommy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1094221?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ekaputra07&#34;&gt;@ekaputra07&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/194590?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jorgefuertes&#34;&gt;@jorgefuertes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/186637?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/candidosales&#34;&gt;@candidosales&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/29659953?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/l0nax&#34;&gt;@l0nax&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/635852?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bihe&#34;&gt;@bihe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/307334?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/justdave&#34;&gt;@justdave&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11155743?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/koddr&#34;&gt;@koddr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/29042462?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lapolinar&#34;&gt;@lapolinar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2978730?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/diegowifi&#34;&gt;@diegowifi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/44171355?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ssimk0&#34;&gt;@ssimk0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5638101?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/raymayemir&#34;&gt;@raymayemir&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/619996?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/melkorm&#34;&gt;@melkorm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/31022056?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/marvinjwendt&#34;&gt;@marvinjwendt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/31921460?s=25&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/toishy&#34;&gt;@toishy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☕ x 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;💻 Code Contributors&lt;/h2&gt; &#xA;&lt;img src=&#34;https://opencollective.com/fiber/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Code Contributors&#34; style=&#34;max-width:100%;&#34;&gt; &#xA;&lt;h2&gt;⭐️ Stargazers&lt;/h2&gt; &#xA;&lt;img src=&#34;https://starchart.cc/gofiber/fiber.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34; style=&#34;max-width: 100%&#34;&gt; &#xA;&lt;h2&gt;🧾 License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2019-present &lt;a href=&#34;https://github.com/fenny&#34;&gt;Fenny&lt;/a&gt; and &lt;a href=&#34;https://github.com/gofiber/fiber/graphs/contributors&#34;&gt;Contributors&lt;/a&gt;. &lt;code&gt;Fiber&lt;/code&gt; is free and open-source software licensed under the &lt;a href=&#34;https://github.com/gofiber/fiber/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;. Official logo was created by &lt;a href=&#34;https://github.com/koddr&#34;&gt;Vic Shóstak&lt;/a&gt; and distributed under &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons&lt;/a&gt; license (CC BY-SA 4.0 International).&lt;/p&gt;</summary>
  </entry>
</feed>