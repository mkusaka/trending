<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-16T01:30:00Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NVIDIA/dcgm-exporter</title>
    <updated>2024-08-16T01:30:00Z</updated>
    <id>tag:github.com,2024-08-16:/NVIDIA/dcgm-exporter</id>
    <link href="https://github.com/NVIDIA/dcgm-exporter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NVIDIA GPU metrics exporter for Prometheus leveraging DCGM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DCGM-Exporter&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the DCGM-Exporter project. It exposes GPU metrics exporter for &lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt; leveraging &lt;a href=&#34;https://developer.nvidia.com/dcgm&#34;&gt;NVIDIA DCGM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Official documentation for DCGM-Exporter can be found on &lt;a href=&#34;https://docs.nvidia.com/datacenter/cloud-native/gpu-telemetry/dcgm-exporter.html&#34;&gt;docs.nvidia.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Quickstart&lt;/h3&gt; &#xA;&lt;p&gt;To gather metrics on a GPU node, simply start the &lt;code&gt;dcgm-exporter&lt;/code&gt; container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -d --gpus all --rm -p 9400:9400 nvcr.io/nvidia/k8s/dcgm-exporter:3.3.7-3.5.0-ubuntu22.04&#xA;curl localhost:9400/metrics&#xA;# HELP DCGM_FI_DEV_SM_CLOCK SM clock frequency (in MHz).&#xA;# TYPE DCGM_FI_DEV_SM_CLOCK gauge&#xA;# HELP DCGM_FI_DEV_MEM_CLOCK Memory clock frequency (in MHz).&#xA;# TYPE DCGM_FI_DEV_MEM_CLOCK gauge&#xA;# HELP DCGM_FI_DEV_MEMORY_TEMP Memory temperature (in C).&#xA;# TYPE DCGM_FI_DEV_MEMORY_TEMP gauge&#xA;...&#xA;DCGM_FI_DEV_SM_CLOCK{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;} 139&#xA;DCGM_FI_DEV_MEM_CLOCK{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;} 405&#xA;DCGM_FI_DEV_MEMORY_TEMP{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;} 9223372036854775794&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quickstart on Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;Note: Consider using the &lt;a href=&#34;https://github.com/NVIDIA/gpu-operator&#34;&gt;NVIDIA GPU Operator&lt;/a&gt; rather than DCGM-Exporter directly.&lt;/p&gt; &#xA;&lt;p&gt;Ensure you have already setup your cluster with the &lt;a href=&#34;https://github.com/NVIDIA/nvidia-container-runtime#docker-engine-setup&#34;&gt;default runtime as NVIDIA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The recommended way to install DCGM-Exporter is to use the Helm chart:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm repo add gpu-helm-charts \&#xA;  https://nvidia.github.io/dcgm-exporter/helm-charts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update the repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm repo update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And install the chart:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm install \&#xA;    --generate-name \&#xA;    gpu-helm-charts/dcgm-exporter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the &lt;code&gt;dcgm-exporter&lt;/code&gt; pod is deployed, you can use port forwarding to obtain metrics quickly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubectl create -f https://raw.githubusercontent.com/NVIDIA/dcgm-exporter/master/dcgm-exporter.yaml&#xA;&#xA;# Let&#39;s get the output of a random pod:&#xA;NAME=$(kubectl get pods -l &#34;app.kubernetes.io/name=dcgm-exporter&#34; \&#xA;                         -o &#34;jsonpath={ .items[0].metadata.name}&#34;)&#xA;&#xA;kubectl port-forward $NAME 8080:9400 &amp;amp;&#xA;&#xA;curl -sL http://127.0.0.1:8080/metrics&#xA;# HELP DCGM_FI_DEV_SM_CLOCK SM clock frequency (in MHz).&#xA;# TYPE DCGM_FI_DEV_SM_CLOCK gauge&#xA;# HELP DCGM_FI_DEV_MEM_CLOCK Memory clock frequency (in MHz).&#xA;# TYPE DCGM_FI_DEV_MEM_CLOCK gauge&#xA;# HELP DCGM_FI_DEV_MEMORY_TEMP Memory temperature (in C).&#xA;# TYPE DCGM_FI_DEV_MEMORY_TEMP gauge&#xA;...&#xA;DCGM_FI_DEV_SM_CLOCK{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;,container=&#34;&#34;,namespace=&#34;&#34;,pod=&#34;&#34;} 139&#xA;DCGM_FI_DEV_MEM_CLOCK{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;,container=&#34;&#34;,namespace=&#34;&#34;,pod=&#34;&#34;} 405&#xA;DCGM_FI_DEV_MEMORY_TEMP{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;,container=&#34;&#34;,namespace=&#34;&#34;,pod=&#34;&#34;} 9223372036854775794&#xA;...&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To integrate DCGM-Exporter with Prometheus and Grafana, see the full instructions in the &lt;a href=&#34;https://docs.nvidia.com/datacenter/cloud-native/gpu-telemetry/latest/&#34;&gt;user guide&lt;/a&gt;. &lt;code&gt;dcgm-exporter&lt;/code&gt; is deployed as part of the GPU Operator. To get started with integrating with Prometheus, check the Operator &lt;a href=&#34;https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/getting-started.html#gpu-telemetry&#34;&gt;user guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;TLS and Basic Auth&lt;/h3&gt; &#xA;&lt;p&gt;Exporter supports TLS and basic auth using &lt;a href=&#34;https://github.com/prometheus/exporter-toolkit&#34;&gt;exporter-toolkit&lt;/a&gt;. To use TLS and/or basic auth, users need to use &lt;code&gt;--web-config-file&lt;/code&gt; CLI flag as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dcgm-exporter --web-config-file=web-config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A sample &lt;code&gt;web-config.yaml&lt;/code&gt; file can be fetched from &lt;a href=&#34;https://github.com/prometheus/exporter-toolkit/raw/master/docs/web-config.yml&#34;&gt;exporter-toolkit repository&lt;/a&gt;. The reference of the &lt;code&gt;web-config.yaml&lt;/code&gt; file can be consulted in the &lt;a href=&#34;https://github.com/prometheus/exporter-toolkit/raw/master/docs/web-configuration.md&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How to include HPC jobs in metric labels&lt;/h3&gt; &#xA;&lt;p&gt;The DCGM-exporter can include High-Performance Computing (HPC) job information into its metric labels. To achieve this, HPC environment administrators must configure their HPC environment to generate files that map GPUs to HPC jobs.&lt;/p&gt; &#xA;&lt;h4&gt;File Conventions&lt;/h4&gt; &#xA;&lt;p&gt;These mapping files follow a specific format:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Each file is named after a unique GPU ID (e.g., 0, 1, 2, etc.).&lt;/li&gt; &#xA; &lt;li&gt;Each line in the file contains JOB IDs that run on the corresponding GPU.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Enabling HPC Job Mapping on DCGM-Exporter&lt;/h4&gt; &#xA;&lt;p&gt;To enable GPU-to-job mapping on the DCGM-exporter side, users must run the DCGM-exporter with the --hpc-job-mapping-dir command-line parameter, pointing to a directory where the HPC cluster creates job mapping files. Or, users can set the environment variable DCGM_HPC_JOB_MAPPING_DIR to achieve the same result.&lt;/p&gt; &#xA;&lt;h3&gt;Building from Source&lt;/h3&gt; &#xA;&lt;p&gt;In order to build dcgm-exporter ensure you have the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Golang &amp;gt;= 1.21 installed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.nvidia.com/dcgm&#34;&gt;DCGM installed&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/NVIDIA/dcgm-exporter.git&#xA;cd dcgm-exporter&#xA;make binary&#xA;sudo make install&#xA;...&#xA;dcgm-exporter &amp;amp;&#xA;curl localhost:9400/metrics&#xA;# HELP DCGM_FI_DEV_SM_CLOCK SM clock frequency (in MHz).&#xA;# TYPE DCGM_FI_DEV_SM_CLOCK gauge&#xA;# HELP DCGM_FI_DEV_MEM_CLOCK Memory clock frequency (in MHz).&#xA;# TYPE DCGM_FI_DEV_MEM_CLOCK gauge&#xA;# HELP DCGM_FI_DEV_MEMORY_TEMP Memory temperature (in C).&#xA;# TYPE DCGM_FI_DEV_MEMORY_TEMP gauge&#xA;...&#xA;DCGM_FI_DEV_SM_CLOCK{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;} 139&#xA;DCGM_FI_DEV_MEM_CLOCK{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;} 405&#xA;DCGM_FI_DEV_MEMORY_TEMP{gpu=&#34;0&#34;, UUID=&#34;GPU-604ac76c-d9cf-fef3-62e9-d92044ab6e52&#34;} 9223372036854775794&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changing Metrics&lt;/h3&gt; &#xA;&lt;p&gt;With &lt;code&gt;dcgm-exporter&lt;/code&gt; you can configure which fields are collected by specifying a custom CSV file. You will find the default CSV file under &lt;code&gt;etc/default-counters.csv&lt;/code&gt; in the repository, which is copied on your system or container to &lt;code&gt;/etc/dcgm-exporter/default-counters.csv&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The layout and format of this file is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Format&#xA;# If line starts with a &#39;#&#39; it is considered a comment&#xA;# DCGM FIELD, Prometheus metric type, help message&#xA;&#xA;# Clocks&#xA;DCGM_FI_DEV_SM_CLOCK,  gauge, SM clock frequency (in MHz).&#xA;DCGM_FI_DEV_MEM_CLOCK, gauge, Memory clock frequency (in MHz).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A custom csv file can be specified using the &lt;code&gt;-f&lt;/code&gt; option or &lt;code&gt;--collectors&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dcgm-exporter -f /tmp/custom-collectors.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Always make sure your entries have 2 commas (&#39;,&#39;)&lt;/li&gt; &#xA; &lt;li&gt;The complete list of counters that can be collected can be found on the DCGM API reference manual: &lt;a href=&#34;https://docs.nvidia.com/datacenter/dcgm/latest/dcgm-api/dcgm-api-field-ids.html&#34;&gt;https://docs.nvidia.com/datacenter/dcgm/latest/dcgm-api/dcgm-api-field-ids.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What about a Grafana Dashboard?&lt;/h3&gt; &#xA;&lt;p&gt;You can find the official NVIDIA DCGM-Exporter dashboard here: &lt;a href=&#34;https://grafana.com/grafana/dashboards/12239&#34;&gt;https://grafana.com/grafana/dashboards/12239&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will also find the &lt;code&gt;json&lt;/code&gt; file on this repo under &lt;code&gt;grafana/dcgm-exporter-dashboard.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pull requests are accepted!&lt;/p&gt; &#xA;&lt;h3&gt;Building the containers&lt;/h3&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://docs.docker.com/buildx/working-with-buildx/&#34;&gt;docker buildx&lt;/a&gt; for multi-arch image creation. Follow the instructions on that page to get a working builder instance for creating these containers. Some other useful build options follow.&lt;/p&gt; &#xA;&lt;p&gt;Builds local images based on the machine architecture and makes them available in &#39;docker images&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build the ubuntu image and export to &#39;docker images&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make ubuntu22.04 PLATFORMS=linux/amd64 OUTPUT=type=docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build and push the images to some other &#39;private_registry&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make REGISTRY=&amp;lt;private_registry&amp;gt; push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Issues and Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NVIDIA/dcgm-exporter/main/CONTRIBUTING.md&#34;&gt;Checkout the Contributing document!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please let us know by &lt;a href=&#34;https://github.com/NVIDIA/dcgm-exporter/issues/new&#34;&gt;filing a new issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can contribute by opening a &lt;a href=&#34;https://github.com/NVIDIA/dcgm-exporter&#34;&gt;pull request&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting Security Issues&lt;/h3&gt; &#xA;&lt;p&gt;We ask that all community members and users of DCGM Exporter follow the standard NVIDIA process for reporting security vulnerabilities. This process is documented at the &lt;a href=&#34;https://www.nvidia.com/en-us/security/&#34;&gt;NVIDIA Product Security&lt;/a&gt; website. Following the process will result in any needed CVE being created as well as appropriate notifications being communicated to the entire DCGM Exporter community. NVIDIA reserves the right to delete vulnerability reports until they&#39;re fixed.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to the policies listed there to answer questions related to reporting security issues.&lt;/p&gt;</summary>
  </entry>
</feed>