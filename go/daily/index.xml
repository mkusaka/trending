<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-31T01:32:55Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kube-logging/logging-operator</title>
    <updated>2024-12-31T01:32:55Z</updated>
    <id>tag:github.com,2024-12-31:/kube-logging/logging-operator</id>
    <link href="https://github.com/kube-logging/logging-operator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Logging operator for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kube-logging/logging-operator/master/docs/img/lo.svg?sanitize=true&#34; width=&#34;260&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://goreportcard.com/badge/github.com/kube-logging/logging-operator&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/kube-logging/logging-operator&#34; alt=&#34;Go Report Card&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/kube-logging/logging-operator/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-Apache%20v2-orange.svg?sanitize=true&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.bestpractices.dev/projects/7941&#34;&gt; &lt;img src=&#34;https://www.bestpractices.dev/projects/7941/badge?cache=20231206&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Logging operator&lt;/h1&gt; &#xA;&lt;p&gt;The Logging Operator is now a &lt;a href=&#34;https://www.cncf.io/sandbox-projects/&#34;&gt;CNCF Sandbox&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;The Logging operator solves your logging-related problems in Kubernetes environments by automating the deployment and configuration of a Kubernetes logging pipeline.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The operator deploys and configures a log collector (currently a Fluent Bit DaemonSet) on every node to collect container and application logs from the node file system.&lt;/li&gt; &#xA; &lt;li&gt;Fluent Bit queries the Kubernetes API and enriches the logs with metadata about the pods, and transfers both the logs and the metadata to a log forwarder instance.&lt;/li&gt; &#xA; &lt;li&gt;The log forwarder instance receives, filters, and transforms the incoming the logs, and transfers them to one or more destination outputs. The Logging operator supports Fluentd and syslog-ng as log forwarders.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Your logs are always transferred on authenticated and encrypted channels.&lt;/p&gt; &#xA;&lt;p&gt;This operator helps you bundle logging information with your applications: you can describe the behavior of your application in its charts, the Logging operator does the rest.&lt;/p&gt; &#xA;&lt;h2&gt;What is this operator for?&lt;/h2&gt; &#xA;&lt;p&gt;This operator helps you bundle logging information with your applications: you can describe the behavior of your application in its charts, the Logging operator does the rest.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://kube-logging.github.io/docs/img/logging_operator_flow.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Namespace isolation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Native Kubernetes label selectors&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Secure communication (TLS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Configuration validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multiple flow support (multiply logs for different transformations)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multiple output support (store the same logs in multiple storage: S3, GCS, ES, Loki and more...)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multiple logging system support (multiple fluentd, fluent-bit deployment on the same cluster)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The Logging operator manages the log collectors and log forwarders of your logging infrastructure, and the routing rules that specify where you want to send your different log messages.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;log collectors&lt;/strong&gt; are endpoint agents that collect the logs of your Kubernetes nodes and send them to the log forwarders. Logging operator currently uses Fluent Bit as log collector agents.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;log forwarder&lt;/strong&gt; instance receives, filters, and transforms the incoming the logs, and transfers them to one or more destination outputs. The Logging operator supports Fluentd and syslog-ng as log forwarders. Which log forwarder is best for you depends on your logging requirements.&lt;/p&gt; &#xA;&lt;p&gt;You can filter and process the incoming log messages using the &lt;strong&gt;flow&lt;/strong&gt; custom resource of the log forwarder to route them to the appropriate &lt;strong&gt;output&lt;/strong&gt;. The outputs are the destinations where you want to send your log messages, for example, Elasticsearch, or an Amazon S3 bucket. You can also define cluster-wide outputs and flows, for example, to use a centralized output that namespaced users can reference but cannot modify. Note that flows and outputs are specific to the type of log forwarder you use (Fluentd or syslog-ng).&lt;/p&gt; &#xA;&lt;p&gt;You can configure the Logging operator using the following Custom Resource Definitions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/logging-infrastructure/logging/&#34;&gt;Logging&lt;/a&gt; - The &lt;code&gt;Logging&lt;/code&gt; resource defines the logging infrastructure (the log collectors and forwarders) for your cluster that collects and transports your log messages. It also contains configurations for Fluent Bit, Fluentd, and syslog-ng.&lt;/li&gt; &#xA; &lt;li&gt;CRDs for Fluentd: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/configuration/output/&#34;&gt;Output&lt;/a&gt; - Defines a Fluentd Output for a logging flow, where the log messages are sent using Fluentd. This is a namespaced resource. See also &lt;code&gt;ClusterOutput&lt;/code&gt;. To configure syslog-ng outputs, see &lt;code&gt;SyslogNGOutput&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/configuration/flow/&#34;&gt;Flow&lt;/a&gt; - Defines a Fluentd logging flow using &lt;code&gt;filters&lt;/code&gt; and &lt;code&gt;outputs&lt;/code&gt;. Basically, the flow routes the selected log messages to the specified outputs. This is a namespaced resource. See also &lt;code&gt;ClusterFlow&lt;/code&gt;. To configure syslog-ng flows, see &lt;code&gt;SyslogNGFlow&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/configuration/output/&#34;&gt;ClusterOutput&lt;/a&gt; - Defines a Fluentd output that is available from all flows and clusterflows. The operator evaluates clusteroutputs in the &lt;code&gt;controlNamespace&lt;/code&gt; only unless &lt;code&gt;allowClusterResourcesFromAllNamespaces&lt;/code&gt; is set to true.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/configuration/flow/&#34;&gt;ClusterFlow&lt;/a&gt; - Defines a Fluentd logging flow that collects logs from all namespaces by default. The operator evaluates clusterflows in the &lt;code&gt;controlNamespace&lt;/code&gt; only unless &lt;code&gt;allowClusterResourcesFromAllNamespaces&lt;/code&gt; is set to true. To configure syslog-ng clusterflows, see &lt;code&gt;SyslogNGClusterFlow&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;CRDs for syslog-ng (these resources like their Fluentd counterparts, but are tailored to features available via syslog-ng): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/configuration/output/#syslogngoutput&#34;&gt;SyslogNGOutput&lt;/a&gt; - Defines a syslog-ng Output for a logging flow, where the log messages are sent using Fluentd. This is a namespaced resource. See also &lt;code&gt;SyslogNGClusterOutput&lt;/code&gt;. To configure Fluentd outputs, see &lt;code&gt;output&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/configuration/flow/#syslogngflow&#34;&gt;SyslogNGFlow&lt;/a&gt; - Defines a syslog-ng logging flow using &lt;code&gt;filters&lt;/code&gt; and &lt;code&gt;outputs&lt;/code&gt;. Basically, the flow routes the selected log messages to the specified outputs. This is a namespaced resource. See also &lt;code&gt;SyslogNGClusterFlow&lt;/code&gt;. To configure Fluentd flows, see &lt;code&gt;flow&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/configuration/output/#syslogngoutput&#34;&gt;SyslogNGClusterOutput&lt;/a&gt; - Defines a syslog-ng output that is available from all flows and clusterflows. The operator evaluates clusteroutputs in the &lt;code&gt;controlNamespace&lt;/code&gt; only unless &lt;code&gt;allowClusterResourcesFromAllNamespaces&lt;/code&gt; is set to true.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kube-logging.github.io/docs/configuration/flow/#syslogngflow&#34;&gt;SyslogNGClusterFlow&lt;/a&gt; - Defines a syslog-ng logging flow that collects logs from all namespaces by default. The operator evaluates clusterflows in the &lt;code&gt;controlNamespace&lt;/code&gt; only unless &lt;code&gt;allowClusterResourcesFromAllNamespaces&lt;/code&gt; is set to true. To configure Fluentd clusterflows, see &lt;code&gt;clusterflow&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://kube-logging.github.io/docs/configuration/crds/&#34;&gt;detailed CRDs documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://kube-logging.github.io/docs/img/logging-operator-v2-architecture.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/315998&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/315998.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow these &lt;a href=&#34;https://kube-logging.github.io/docs/quickstarts/&#34;&gt;quickstart guides&lt;/a&gt; to try out the Logging operator!&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Deploy Logging Operator with our &lt;a href=&#34;https://kube-logging.github.io/docs/install/#deploy-logging-operator-with-helm&#34;&gt;Helm chart&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Caution: The &lt;strong&gt;master branch&lt;/strong&gt; is under heavy development. Use &lt;a href=&#34;https://github.com/kube-logging/logging-operator/releases&#34;&gt;releases&lt;/a&gt; instead of the master branch to get stable software.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter problems while using the Logging operator the documentation does not address, &lt;a href=&#34;https://github.com/kube-logging/logging-operator/issues&#34;&gt;open an issue&lt;/a&gt; or talk to us on the &lt;a href=&#34;https://discord.gg/eAcqmAVU2u&#34;&gt;#logging-operator Discord channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the complete documentation on the &lt;a href=&#34;https://kube-logging.github.io/docs/&#34;&gt;Logging operator documentation page&lt;/a&gt; &lt;span&gt;📘&lt;/span&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful, help us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support the development of this project and star this repo! &lt;span&gt;⭐&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you use the Logging operator in a production environment, add yourself to the list of production &lt;a href=&#34;https://github.com/kube-logging/logging-operator/raw/master/ADOPTERS.md&#34;&gt;adopters&lt;/a&gt;.&lt;span&gt;🤘&lt;/span&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Help new users with issues they may encounter &lt;span&gt;💪&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send a pull request with your new features and bug fixes &lt;span&gt;🚀&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://github.com/kube-logging/.github/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Organisation&#39;s Code of Conduct&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;For more information, read the &lt;a href=&#34;https://kube-logging.github.io/docs/developers&#34;&gt;developer documentation&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2021-2023 &lt;a href=&#34;https://cisco.com&#34;&gt;Cisco Systems, Inc. and its affiliates&lt;/a&gt; Copyright (c) 2017-2020 &lt;a href=&#34;https://banzaicloud.com&#34;&gt;Banzai Cloud, Inc.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>anfragment/zen</title>
    <updated>2024-12-31T01:32:55Z</updated>
    <id>tag:github.com,2024-12-31:/anfragment/zen</id>
    <link href="https://github.com/anfragment/zen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple, free and efficient ad-blocker and privacy guard for Windows, macOS and Linux&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;img src=&#34;https://github.com/anfragment/zen/raw/master/assets/appicon.png?raw=true&#34; alt=&#34;Zen&#39;s Blue Shield Logo&#34; width=&#34;150&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Zen: Your Comprehensive Ad-Blocker and Privacy Guard &lt;/h3&gt; &#xA;&lt;blockquote align=&#34;center&#34;&gt;&#xA;  There is, simply, no way, to ignore privacy. Because a citizenry’s freedoms are interdependent, to surrender your own privacy is really to surrender everyone’s. &#xA; &lt;p&gt;Edward Snowden, Permanent Record&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/anfragment/zen&#34; alt=&#34;GitHub License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/anfragment/zen&#34; alt=&#34;GitHub release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/anfragment/zen/total&#34; alt=&#34;GitHub download counter&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Zen is an open-source system-wide ad-blocker and privacy guard for Windows, macOS, and Linux. It works by setting up a proxy that intercepts HTTP requests from all applications, and blocks those serving ads, tracking scripts that monitor your behavior, malware, and other unwanted content. By operating at the system level, Zen can protect against threats that browser extensions cannot, such as trackers embedded in desktop applications and operating system components. Zen comes with many pre-installed filters, but also allows you to easily add hosts files and EasyList-style filters, enabling you to tailor your protection to your specific needs.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;During the first run, Zen will prompt you to install a root certificate. This is required for Zen to be able to intercept and modify HTTPS requests. This certificate is generated locally and never leaves your device.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;x64: &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen-amd64-installer.exe&#34;&gt;💾 Installer&lt;/a&gt; | &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen_windows_amd64.zip&#34;&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ARM64: &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen-arm64-installer.exe&#34;&gt;💾 Installer&lt;/a&gt; | &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen_windows_arm64.zip&#34;&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unsure which version to download? Click on &#39;Start&#39; and type &#39;View processor info&#39;. The &#39;System type&#39; field under &#39;Device specifications&#39; will tell you which one you need.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;x64 (Intel): &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen-amd64.dmg&#34;&gt;💾 Installer&lt;/a&gt; | &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen_darwin_amd64.zip&#34;&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ARM64 (Apple Silicon): &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen-arm64.dmg&#34;&gt;💾 Installer&lt;/a&gt; | &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen_darwin_arm64.zip&#34;&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unsure which version to download? Learn at &lt;a href=&#34;https://support.apple.com/en-us/HT211814&#34;&gt;Apple&#39;s website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AUR: &lt;a href=&#34;https://aur.archlinux.org/packages/zen-adblocker-bin&#34;&gt;👾 zen-adblocker-bin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;x64: &lt;a href=&#34;https://github.com/anfragment/zen/releases/latest/download/Zen_linux_amd64.tar.gz&#34;&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Zen currently only works on GNOME-based desktop environments. If you want to help bring it to your favorite desktop environment, please see &lt;a href=&#34;https://github.com/anfragment/zen/issues/21&#34;&gt;#21&lt;/a&gt;. Support for installation via other package managers is coming soon.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Request history&lt;/th&gt; &#xA;   &lt;th&gt;Filter list manager&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; Request history shows all requests blocked by Zen. Each request can be inspected to see which filter and rule blocked it. &lt;/td&gt; &#xA;   &lt;td&gt; Zen comes with many pre-installed filters. You can also add your own by providing a URL to a hosts file or an EasyList-style filter. &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt;&lt;img src=&#34;https://github.com/anfragment/zen/raw/master/assets/screenshots/main-window.png?raw=true&#34; alt=&#34;Zen&#39;s main window&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt;&lt;img src=&#34;https://github.com/anfragment/zen/raw/master/assets/screenshots/filter-lists.png?raw=true&#34; alt=&#34;Zen&#39;s filter list manager&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Running &amp;amp; Building&lt;/h2&gt; &#xA;&lt;p&gt;Zen is based on &lt;a href=&#34;https://wails.io&#34;&gt;Wails&lt;/a&gt;, a framework for building desktop applications using Go and web technologies. Follow the &lt;a href=&#34;https://wails.io/docs/gettingstarted/installation&#34;&gt;installation instructions&lt;/a&gt; to install it on your system. Use &lt;code&gt;wails build&lt;/code&gt; to build Zen, and &lt;code&gt;wails dev&lt;/code&gt; to run it in development mode.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/anfragment/zen/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;. Some code and assets included with Zen are licensed under different terms. For more information, see the &lt;a href=&#34;https://github.com/anfragment/zen/raw/master/COPYING.md&#34;&gt;COPYING&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aaamoon/copilot-gpt4-service</title>
    <updated>2024-12-31T01:32:55Z</updated>
    <id>tag:github.com,2024-12-31:/aaamoon/copilot-gpt4-service</id>
    <link href="https://github.com/aaamoon/copilot-gpt4-service" rel="alternate"></link>
    <summary type="html">&lt;p&gt;将Github Copilot Chat请求转换为ChatGPT请求，免费使用GPT-4模型&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;COPILOT-GPT4-SERVICE&lt;/h1&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;p&gt;1、访问 &lt;a href=&#34;http://gpt4copilot.tech&#34;&gt;http://gpt4copilot.tech&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;2、在设置的接口地址填入本仓库项目部署出来的api地址 &lt;a href=&#34;http://gpt4copilot.tech&#34;&gt;http://gpt4copilot.tech&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;3、在API Key中填入Github Copilot的Token&lt;/p&gt; &#xA;&lt;p&gt;提供三个已经开通了Github Copilot账号的Token，可以直接使用：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;strong&gt;ghu_kEDPRczuQhVAxBxQD4Rkjv5uBba6zE3i0mNH&lt;/strong&gt;&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;大佬们如果有开通Github Copilot的话，可以使用自己的Token，通过&lt;a href=&#34;https://cocopilot.org/copilot/token&#34;&gt;copilot-token接口&lt;/a&gt;来获取，目前太多不同的IP请求了，我提供出去的Token半个钟就失效了，如果是内部几个人用的话，Token有效期一般是好几个月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aaamoon/copilot-gpt4-service/master/assets/step1.png&#34; alt=&#34;步骤1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;4、支持各种OpenAI模型选择，目前默认使用的是GPT-4模型&lt;/p&gt; &#xA;&lt;p&gt;5、接下来我们就可以无限制使用GPT-4模型了~&lt;/p&gt; &#xA;&lt;h2&gt;个人部署&lt;/h2&gt; &#xA;&lt;h3&gt;客户端&lt;/h3&gt; &#xA;&lt;p&gt;客户端使用的是&lt;a href=&#34;https://github.com/Yidadaa/ChatGPT-Next-Web&#34;&gt;ChatGPT-Next-Web&lt;/a&gt;，里面有详细的部署教程&lt;/p&gt; &#xA;&lt;h3&gt;服务端&lt;/h3&gt; &#xA;&lt;h4&gt;使用Docker部署&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aaamoon/copilot-gpt4-service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd copilot-gpt4-service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t copilot-gpt4-service .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 8080:8080 copilot-gpt4-service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Cloudflare Worker 部署&lt;/h4&gt; &#xA;&lt;p&gt;不方便使用Docker部署的话，可以使用&lt;a href=&#34;https://github.com/wpv-chan/cf-copilot-service&#34;&gt;Cloudflare Worker&lt;/a&gt;版本部署&lt;/p&gt; &#xA;&lt;h2&gt;实现原理&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aaamoon/copilot-gpt4-service/master/assets/principle.png&#34; alt=&#34;实现原理&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如何判断是不是 GPT-4 模型&lt;/h2&gt; &#xA;&lt;p&gt;鲁迅为什么暴打周树人？&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GPT-3.5 会一本正经的胡说八道&lt;/li&gt; &#xA; &lt;li&gt;GPT-4 表示鲁迅和周树人是同一个人&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;我爸妈结婚时为什么没有邀请我？&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GPT-3.5 他们当时认为你还太小，所以没有邀请你。&lt;/li&gt; &#xA; &lt;li&gt;GPT-4 他们结婚时你还没出生。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>