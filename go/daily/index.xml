<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-20T01:31:13Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stonith404/pocket-id</title>
    <updated>2025-01-20T01:31:13Z</updated>
    <id>tag:github.com,2025-01-20:/stonith404/pocket-id</id>
    <link href="https://github.com/stonith404/pocket-id" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple and easy-to-use OIDC provider that allows users to authenticate with their passkeys to your services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  &lt;img src=&#34;https://github.com/user-attachments/assets/4ceb2708-9f29-4694-b797-be833efce17d&#34; width=&#34;100&#34;&gt; &#xA;  &lt;br&gt;Pocket ID&#xA; &lt;/div&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Pocket ID is a simple OIDC provider that allows users to authenticate with their passkeys to your services.&lt;/p&gt; &#xA;&lt;p&gt;→ Try out the &lt;a href=&#34;https://pocket-id.eliasschneider.com&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/user-attachments/assets/96ac549d-b897-404a-8811-f42b16ea58e2&#34; width=&#34;1200&#34;&gt; &#xA;&lt;p&gt;The goal of Pocket ID is to be a simple and easy-to-use. There are other self-hosted OIDC providers like &lt;a href=&#34;https://www.keycloak.org/&#34;&gt;Keycloak&lt;/a&gt; or &lt;a href=&#34;https://www.ory.sh/hydra/&#34;&gt;ORY Hydra&lt;/a&gt; but they are often too complex for simple use cases.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, what makes Pocket ID special is that it only supports &lt;a href=&#34;https://www.passkeys.io/&#34;&gt;passkey&lt;/a&gt; authentication, which means you don’t need a password. Some people might not like this idea at first, but I believe passkeys are the future, and once you try them, you’ll love them. For example, you can now use a physical Yubikey to sign in to all your self-hosted services easily and securely.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#-pocket-id&#34;&gt; Pocket ID&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#before-you-start&#34;&gt;Before you start&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#installation-with-docker-recommended&#34;&gt;Installation with Docker (recommended)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#unraid&#34;&gt;Unraid&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#stand-alone-installation&#34;&gt;Stand-alone Installation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#nginx-reverse-proxy&#34;&gt;Nginx Reverse Proxy&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#proxy-services-with-pocket-id&#34;&gt;Proxy Services with Pocket ID&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#update&#34;&gt;Update&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#stand-alone&#34;&gt;Stand-alone&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#environment-variables&#34;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#account-recovery&#34;&gt;Account recovery&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Pocket ID is in its early stages and may contain bugs. There might be OIDC features that are not yet implemented. If you encounter any issues, please open an issue.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Before you start&lt;/h3&gt; &#xA;&lt;p&gt;Pocket ID requires a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts&#34;&gt;secure context&lt;/a&gt;, meaning it must be served over HTTPS. This is necessary because Pocket ID uses the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API&#34;&gt;WebAuthn API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation with Docker (recommended)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; curl -O https://raw.githubusercontent.com/stonith404/pocket-id/main/docker-compose.yml&#xA;&#xA; curl -o .env https://raw.githubusercontent.com/stonith404/pocket-id/main/.env.example&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit the &lt;code&gt;.env&lt;/code&gt; file so that it fits your needs. See the &lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/#environment-variables&#34;&gt;environment variables&lt;/a&gt; section for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;docker compose up -d&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can now sign in with the admin account on &lt;code&gt;http://localhost/login/setup&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unraid&lt;/h3&gt; &#xA;&lt;p&gt;Pocket ID is available as a template on the Community Apps store.&lt;/p&gt; &#xA;&lt;h3&gt;Stand-alone Installation&lt;/h3&gt; &#xA;&lt;p&gt;Required tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;Node.js&lt;/a&gt; &amp;gt;= 20&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go&lt;/a&gt; &amp;gt;= 1.23&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pm2.keymetrics.io/&#34;&gt;PM2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://caddyserver.com/docs/install&#34;&gt;Caddy&lt;/a&gt; (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; file in the &lt;code&gt;frontend&lt;/code&gt; and &lt;code&gt;backend&lt;/code&gt; folder to &lt;code&gt;.env&lt;/code&gt; and change it so that it fits your needs.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp frontend/.env.example frontend/.env&#xA;cp backend/.env.example backend/.env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/stonith404/pocket-id&#xA;cd pocket-id&#xA;&#xA;# Checkout the latest version&#xA;git fetch --tags &amp;amp;&amp;amp; git checkout $(git describe --tags `git rev-list --tags --max-count=1`)&#xA;&#xA;# Start the backend&#xA;cd backend/cmd&#xA;go build -o ../pocket-id-backend&#xA;cd ..&#xA;pm2 start pocket-id-backend --name pocket-id-backend&#xA;&#xA;#&amp;nbsp;Start the frontend&#xA;cd ../frontend&#xA;npm install&#xA;npm run build&#xA;pm2 start --name pocket-id-frontend --node-args=&#34;--env-file .env&#34; build/index.js&#xA;&#xA;# Optional: Start Caddy (You can use any other reverse proxy)&#xA;cd ..&#xA;pm2 start --name pocket-id-caddy caddy -- run --config reverse-proxy/Caddyfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can now sign in with the admin account on &lt;code&gt;http://localhost/login/setup&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Nginx Reverse Proxy&lt;/h3&gt; &#xA;&lt;p&gt;To use Nginx as a reverse proxy for Pocket ID, update the configuration to increase the header buffer size. This adjustment is necessary because SvelteKit generates larger headers, which may exceed the default buffer limits.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;proxy_busy_buffers_size   512k;&#xA;proxy_buffers   4 512k;&#xA;proxy_buffer_size   256k;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Proxy Services with Pocket ID&lt;/h2&gt; &#xA;&lt;p&gt;The goal of Pocket ID is to function exclusively as an OIDC provider. As such, we don&#39;t have a built-in proxy provider. However, you can use other tools that act as a middleware to protect your services and support OIDC as an authentication provider.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/docs/proxy-services.md&#34;&gt;guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Update&lt;/h2&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose pull&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Stand-alone&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Stop the running services:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pm2 delete pocket-id-backend pocket-id-frontend pocket-id-caddy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd pocket-id&#xA;&#xA;# Checkout the latest version&#xA;git fetch --tags &amp;amp;&amp;amp; git checkout $(git describe --tags `git rev-list --tags --max-count=1`)&#xA;&#xA;# Start the backend&#xA;cd backend/cmd&#xA;go build -o ../pocket-id-backend&#xA;cd ..&#xA;pm2 start pocket-id-backend --name pocket-id-backend&#xA;&#xA;#&amp;nbsp;Start the frontend&#xA;cd ../frontend&#xA;npm install&#xA;npm run build&#xA;pm2 start build/index.js --name pocket-id-frontend&#xA;&#xA;# Optional: Start Caddy (You can use any other reverse proxy)&#xA;cd ..&#xA;pm2 start caddy --name pocket-id-caddy -- run --config reverse-proxy/Caddyfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;   &lt;th&gt;Recommended to change&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PUBLIC_APP_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;http://localhost&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;The URL where you will access the app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TRUST_PROXY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;Whether the app is behind a reverse proxy.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MAXMIND_LICENSE_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;License Key for the GeoLite2 Database. The license key is required to retrieve the geographical location of IP addresses in the audit log. If the key is not provided, IP locations will be marked as &#34;unknown.&#34; You can obtain a license key for free &lt;a href=&#34;https://www.maxmind.com/en/geolite2/signup&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PUID&lt;/code&gt; and &lt;code&gt;PGID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;The user and group ID of the user who should run Pocket ID inside the Docker container and owns the files that are mounted with the volume. You can get the &lt;code&gt;PUID&lt;/code&gt; and &lt;code&gt;GUID&lt;/code&gt; of your user on your host machine by using the command &lt;code&gt;id&lt;/code&gt;. For more information see &lt;a href=&#34;https://docs.linuxserver.io/general/understanding-puid-and-pgid/#using-the-variables&#34;&gt;this article&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_PROVIDER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sqlite&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The database provider you want to use. Currently &lt;code&gt;sqlite&lt;/code&gt; and &lt;code&gt;postgres&lt;/code&gt; are supported.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SQLITE_DB_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;data/pocket-id.db&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The path to the SQLite database. This gets ignored if you didn&#39;t set &lt;code&gt;DB_PROVIDER&lt;/code&gt; to &lt;code&gt;sqlite&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;POSTGRES_CONNECTION_STRING&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The connection string to your Postgres database. This gets ignored if you didn&#39;t set &lt;code&gt;DB_PROVIDER&lt;/code&gt; to &lt;code&gt;postgres&lt;/code&gt;. A connection string can look like this: &lt;code&gt;postgresql://user:password@host:5432/pocket-id&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UPLOAD_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;data/uploads&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The path where the uploaded files are stored.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;INTERNAL_BACKEND_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The URL where the backend is accessible.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GEOLITE_DB_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;data/GeoLite2-City.mmdb&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The path where the GeoLite2 database should be stored.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CADDY_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;80&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The port on which Caddy should listen. Caddy is only active inside the Docker container. If you want to change the exposed port of the container then you sould change this variable.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;3000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The port on which the frontend should listen.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKEND_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The port on which the backend should listen.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Account recovery&lt;/h2&gt; &#xA;&lt;p&gt;There are two ways to create a one-time access link for a user:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: An admin can create a one-time access link for the user in the admin panel under the &#34;Users&#34; tab by clicking on the three dots next to the user&#39;s name and selecting &#34;One-time link&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Terminal&lt;/strong&gt;: You can create a one-time access link for a user by running the &lt;code&gt;scripts/create-one-time-access-token.sh&lt;/code&gt; script. To execute this script with Docker you have to run the following command: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose exec pocket-id sh &#34;sh scripts/create-one-time-access-token.sh &amp;lt;username or email&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;re very welcome to contribute to Pocket ID! Please follow the &lt;a href=&#34;https://raw.githubusercontent.com/stonith404/pocket-id/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; to get started.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>harvester/harvester</title>
    <updated>2025-01-20T01:31:13Z</updated>
    <id>tag:github.com,2025-01-20:/harvester/harvester</id>
    <link href="https://github.com/harvester/harvester" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source hyperconverged infrastructure (HCI) software&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Harvester&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harvester/harvester/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/harvester/harvester/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/harvester/harvester&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/harvester/harvester&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/harvester/harvester/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/harvester/harvester.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slack.rancher.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-brightgreen&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://harvesterhci.io/&#34;&gt;Harvester&lt;/a&gt; is a modern, open, interoperable, &lt;a href=&#34;https://en.wikipedia.org/wiki/Hyper-converged_infrastructure&#34;&gt;hyperconverged infrastructure (HCI)&lt;/a&gt; solution built on Kubernetes. It is an open-source alternative designed for operators seeking a &lt;a href=&#34;https://about.gitlab.com/topics/cloud-native/&#34;&gt;cloud-native&lt;/a&gt; HCI solution. Harvester runs on bare metal servers and provides integrated virtualization and distributed storage capabilities. In addition to traditional virtual machines (VMs), Harvester supports containerized environments automatically through integration with &lt;a href=&#34;https://ranchermanager.docs.rancher.com/integrations-in-rancher/harvester&#34;&gt;Rancher&lt;/a&gt;. It offers a solution that unifies legacy virtualized infrastructure while enabling the adoption of containers from core to edge locations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/dashboard.png&#34; alt=&#34;harvester-ui&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Harvester is an enterprise-ready, easy-to-use infrastructure platform that leverages local, direct attached storage instead of complex external SANs. It utilizes Kubernetes API as a unified automation language across container and VM workloads. Some key features of Harvester include:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to install:&lt;/strong&gt; Since Harvester ships as a bootable appliance image, you can install it directly on a bare metal server with the &lt;a href=&#34;https://github.com/harvester/harvester/releases&#34;&gt;ISO&lt;/a&gt; image or automatically install it using &lt;a href=&#34;https://docs.harvesterhci.io/latest/install/pxe-boot-install&#34;&gt;iPXE scripts&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;VM lifecycle management:&lt;/strong&gt; Easily create, edit, clone, and delete VMs, including SSH-Key injection, cloud-init, and graphic and serial port console.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;VM live migration support:&lt;/strong&gt; Move a VM to a different host or node with zero downtime.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;VM backup, snapshot, and restore:&lt;/strong&gt; Back up your VMs from NFS, S3 servers, or NAS devices. Use your backup to restore a failed VM or create a new VM on a different cluster.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Storage management:&lt;/strong&gt; Harvester supports distributed block storage and tiering. Volumes represent storage; you can easily create, edit, clone, or export a volume.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Network management:&lt;/strong&gt; Supports using a virtual IP (VIP) and multiple Network Interface Cards (NICs). If your VMs need to connect to the external network, create a VLAN or untagged network.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integration with &lt;a href=&#34;https://ranchermanager.docs.rancher.com/integrations-in-rancher/harvester&#34;&gt;Rancher&lt;/a&gt;:&lt;/strong&gt; Access Harvester directly within Rancher through Rancher’s Virtualization Management page and manage your VM workloads alongside your Kubernetes clusters.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The following diagram outlines a high-level architecture of Harvester:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/architecture.svg?sanitize=true&#34; alt=&#34;architecture.svg&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://longhorn.io/&#34;&gt;Longhorn&lt;/a&gt; is a lightweight, reliable, and easy-to-use distributed block storage system for Kubernetes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubevirt.io/&#34;&gt;KubeVirt&lt;/a&gt; is a virtual machine management add-on for Kubernetes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rancher/elemental-toolkit&#34;&gt;Elemental for SLE-Micro 5.3&lt;/a&gt; is an immutable Linux distribution designed to remove as much OS maintenance as possible in a Kubernetes cluster.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardware Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To get the Harvester server up and running the following minimum hardware is required:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Requirements&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CPU&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;x86_64 only. Hardware-assisted virtualization is required. 8-core processor minimum for testing; 16-core or above required for production&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Memory&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;32 GB minimum; 64 GB or above required for production&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Disk Capacity&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;250 GB minimum for testing (180 GB minimum when using multiple disks); 500 GB or above required for production&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Disk Performance&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5,000+ random IOPS per disk (SSD/NVMe). Management nodes (first three nodes) must be &lt;a href=&#34;https://www.suse.com/support/kb/doc/?id=000020100&#34;&gt;fast enough for etcd&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Network Card&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1 Gbps Ethernet minimum for testing; 10Gbps Ethernet required for production&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Network Switch&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Trunking of ports required for VLAN support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;We recommend server-class hardware for best results. Laptops and nested virtualization are not officially supported.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;You can use the ISO to install Harvester directly on the bare-metal server to form a Harvester cluster. Users can add one or many compute nodes to join the existing cluster.&lt;/p&gt; &#xA;&lt;p&gt;To get the Harvester ISO, download it from the &lt;a href=&#34;https://github.com/harvester/harvester/releases&#34;&gt;Github releases.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;During the installation, you can either choose to &lt;strong&gt;create a new Harvester cluster&lt;/strong&gt; or &lt;strong&gt;join the node to an existing Harvester cluster&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Mount the Harvester ISO file and boot the server by selecting the &lt;code&gt;Harvester Installer&lt;/code&gt; option. &lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/iso-install.png&#34; alt=&#34;iso-install.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the arrow keys to choose an installation mode. By default, the first node will be the management node of the cluster. &lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/iso-installation-mode.png&#34; alt=&#34;iso-install-mode.png&#34;&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Create a new Harvester cluster&lt;/code&gt;: Select this option to create an entirely new Harvester cluster.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Join an existing Harvester cluster&lt;/code&gt;: Select this option to join an existing Harvester cluster. You need the VIP and cluster token of the cluster you want to join.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Install Harvester binaries only&lt;/code&gt;: If you choose this option, additional setup is required after the first bootup.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Choose the installation disk you want to install the Harvester cluster on and the data disk you want to store VM data on. By default, Harvester uses &lt;a href=&#34;https://en.wikipedia.org/wiki/GUID_Partition_Table&#34;&gt;GUID Partition Table (GPT)&lt;/a&gt; partitioning schema for both UEFI and BIOS. If you use the BIOS boot, then you will have the option to select &lt;a href=&#34;https://en.wikipedia.org/wiki/Master_boot_record&#34;&gt;Master boot record (MBR)&lt;/a&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/iso-choose-disks.png&#34; alt=&#34;iso-choose-disks.png&#34;&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Installation disk&lt;/code&gt;: The disk to install the Harvester cluster on.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Data disk&lt;/code&gt;: The disk to store VM data on. Choosing a separate disk to store VM data is recommended.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Persistent size&lt;/code&gt;: If you only have one disk or use the same disk for both OS and VM data, you need to configure persistent partition size to store system packages and container images. The default and minimum persistent partition size is 150 GiB. You can specify a size like 200Gi or 153600Mi.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Configure the &lt;code&gt;HostName&lt;/code&gt; of the node.&lt;/li&gt; &#xA; &lt;li&gt;Configure network interface(s) for the management network. By default, Harvester will create a bonded NIC named &lt;code&gt;mgmt-bo&lt;/code&gt;, and the IP address can either be configured via DHCP or statically assigned. &lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/iso-config-network.png&#34; alt=&#34;iso-config-network.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Optional) Configure the &lt;code&gt;DNS Servers&lt;/code&gt;. Use commas as a delimiter to add more DNS servers. Leave blank to use the default DNS server.&lt;/li&gt; &#xA; &lt;li&gt;Configure the virtual IP (VIP) by selecting a &lt;code&gt;VIP Mode&lt;/code&gt;. This VIP is used to access the cluster or for other nodes to join the cluster. &lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/iso-config-vip.png&#34; alt=&#34;iso-config-vip.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure the &lt;code&gt;cluster token&lt;/code&gt;. This token will be used for adding other nodes to the cluster.&lt;/li&gt; &#xA; &lt;li&gt;Configure and confirm a &lt;code&gt;Password&lt;/code&gt; to access the node. The default SSH user is &lt;code&gt;rancher&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Configure &lt;code&gt;NTP servers&lt;/code&gt; to make sure all nodes&#39; times are synchronized. This defaults to &lt;code&gt;0.suse.pool.ntp.org&lt;/code&gt;. Use commas as a delimiter to add more NTP servers.&lt;/li&gt; &#xA; &lt;li&gt;(Optional) If you need to use an HTTP proxy to access the outside world, enter the proxy URL address here. Otherwise, leave this blank.&lt;/li&gt; &#xA; &lt;li&gt;(Optional) You can choose to import SSH keys by providing &lt;code&gt;HTTP URL&lt;/code&gt;. For example, your GitHub public keys &lt;code&gt;https://github.com/&amp;lt;username&amp;gt;.keys&lt;/code&gt; can be used.&lt;/li&gt; &#xA; &lt;li&gt;(Optional) If you need to customize the host with a &lt;a href=&#34;https://raw.githubusercontent.com/harvester/harvester/master/harvester-configuration.md&#34;&gt;Harvester configuration&lt;/a&gt; file, enter the &lt;code&gt;HTTP URL&lt;/code&gt; here.&lt;/li&gt; &#xA; &lt;li&gt;Review and confirm your installation options. After confirming the installation options, Harvester will be installed on your host. The installation may take a few minutes to complete.&lt;/li&gt; &#xA; &lt;li&gt;Once the installation is complete, your node restarts. After the restart, the Harvester console displays the management URL and status. The default URL of the web interface is &lt;code&gt;https://your-virtual-ip&lt;/code&gt;. You can use &lt;code&gt;F12&lt;/code&gt; to switch from the Harvester console to the Shell and type &lt;code&gt;exit&lt;/code&gt; to go back to the Harvester console. &lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/iso-installed.png&#34; alt=&#34;iso-installed.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;You will be prompted to set the password for the default &lt;code&gt;admin&lt;/code&gt; user when logging in for the first time. &lt;img src=&#34;https://raw.githubusercontent.com/harvester/harvester/master/docs/assets/first-time-login.png&#34; alt=&#34;first-login.png&#34;&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&amp;lt;version&amp;gt;*&lt;/strong&gt; means the release branch is under active support and will have periodic follow-up patch releases.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Latest&lt;/strong&gt; release means the version is the latest release of the newest release branch.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Stable&lt;/strong&gt; release means the version is stable and has been widely adopted by users.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;EOL&lt;/strong&gt; means that the software has reached the end of its useful life and no further code-level maintenance will be provided. You may continue to use the software within the terms of the licensing agreement.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harvester/harvester/releases&#34;&gt;https://github.com/harvester/harvester/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Release&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Release Note (Changelog)&lt;/th&gt; &#xA;   &lt;th&gt;Upgrade Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;1.4&lt;/strong&gt;*&lt;/td&gt; &#xA;   &lt;td&gt;1.4.0&lt;/td&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/harvester/harvester/releases/tag/v1.4.0&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.harvesterhci.io/v1.4/upgrade/v1-3-2-to-v1-4-0&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;1.3&lt;/strong&gt;*&lt;/td&gt; &#xA;   &lt;td&gt;1.3.2&lt;/td&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/harvester/harvester/releases/tag/v1.3.2&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.harvesterhci.io/v1.3/upgrade/v1-3-1-to-v1-3-2&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;1.2&lt;/strong&gt;*&lt;/td&gt; &#xA;   &lt;td&gt;1.2.2&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/harvester/harvester/releases/tag/v1.2.2&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.harvesterhci.io/v1.2/upgrade/v1-2-1-to-v1-2-2&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;1.1&lt;/strong&gt;*&lt;/td&gt; &#xA;   &lt;td&gt;1.1.3&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/harvester/harvester/releases/tag/v1.1.3&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.harvesterhci.io/v1.2/upgrade/v1-1-to-v1-1-2&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Find more documentation &lt;a href=&#34;https://docs.harvesterhci.io/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://youtu.be/Ngsk7m6NYf4&#34;&gt;demo&lt;/a&gt; to get a quick overview of the Harvester UI.&lt;/p&gt; &#xA;&lt;h2&gt;Source code&lt;/h2&gt; &#xA;&lt;p&gt;Harvester is 100% open-source software. The project source code is spread across a number of repos:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Repo Address&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Harvester&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/harvester/harvester&#34;&gt;https://github.com/harvester/harvester&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Harvester Dashboard&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/harvester/dashboard&#34;&gt;https://github.com/harvester/dashboard&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Harvester Installer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/harvester/harvester-installer&#34;&gt;https://github.com/harvester/harvester-installer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Harvester Network Controller&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/harvester/harvester-network-controller&#34;&gt;https://github.com/harvester/harvester-network-controller&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Harvester Cloud Provider&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/harvester/cloud-provider-harvester&#34;&gt;https://github.com/harvester/cloud-provider-harvester&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Harvester Load Balancer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/harvester/load-balancer-harvester&#34;&gt;https://github.com/harvester/load-balancer-harvester&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Harvester CSI Driver&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/harvester/harvester-csi-driver&#34;&gt;https://github.com/harvester/harvester-csi-driver&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Harvester Terraform Provider&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/harvester/terraform-provider-harvester&#34;&gt;https://github.com/harvester/terraform-provider-harvester&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;If you need any help with Harvester, please join us at either our &lt;a href=&#34;https://slack.rancher.io/&#34;&gt;Slack&lt;/a&gt; #harvester channel or &lt;a href=&#34;https://forums.rancher.com/&#34;&gt;forums&lt;/a&gt; where most of our team hangs out at.&lt;/p&gt; &#xA;&lt;p&gt;If you have any feedback or questions, feel free to &lt;a href=&#34;https://github.com/harvester/harvester/issues/new/choose&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://gurubase.io/g/harvester&#34;&gt;ask Harvester Guru&lt;/a&gt; your questions.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2025 &lt;a href=&#34;http://rancher.com&#34;&gt;Rancher Labs, Inc.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>koho/frpmgr</title>
    <updated>2025-01-20T01:31:13Z</updated>
    <id>tag:github.com,2025-01-20:/koho/frpmgr</id>
    <link href="https://github.com/koho/frpmgr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows 平台的 FRP GUI 客户端 / A user-friendly desktop GUI client for FRP on Windows.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FRP Manager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/koho/frpmgr/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/koho/frpmgr.svg?label=release&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fatedier/frp&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fgo.shields.workers.dev%2Fkoho%2Ffrpmgr%2Fmaster%3Fname%3Dfrp&#34; alt=&#34;Frp version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/koho/frpmgr/master/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows 下的 &lt;a href=&#34;https://github.com/fatedier/frp&#34;&gt;frp&lt;/a&gt; 图形界面客户端。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koho/frpmgr/master/docs/screenshot_zh.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;系统需求：Windows 10 / Server 2016 及以上版本&lt;/p&gt; &#xA;&lt;p&gt;使用说明：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;启动配置将以后台服务的形式独立运行，&lt;strong&gt;关闭界面并不影响配置的运行&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;已启动的配置，&lt;strong&gt;下次开机会自动启动&lt;/strong&gt;，除非手动禁用自启&lt;/li&gt; &#xA; &lt;li&gt;通过界面修改配置后，会自动重启该配置的实例&lt;/li&gt; &#xA; &lt;li&gt;手动停止配置后，该配置将不会开机自启&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;✨&lt;/span&gt; 特征&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;✏&lt;/span&gt; 简易的编辑界面，快速完成配置&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;⏯&lt;/span&gt; 快捷启用/禁用代理条目&lt;/li&gt; &#xA; &lt;li&gt;📚 多配置文件管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;📥&lt;/span&gt; 支持导入/导出配置文件&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;💻&lt;/span&gt; 开机自启动&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔒&lt;/span&gt; 支持密码保护&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🕓&lt;/span&gt; 支持自动删除配置文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚙&lt;/span&gt; 构建&lt;/h2&gt; &#xA;&lt;h4&gt;安装依赖&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mingw-w64.org/&#34;&gt;MinGW&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wixtoolset.org/&#34;&gt;WiX Toolset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;环境配置&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;把 &lt;code&gt;vcvarsall.bat&lt;/code&gt; 添加到环境变量。通常目录为：&lt;/p&gt; &lt;p&gt;&lt;code&gt;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;确保 MinGW 的 &lt;code&gt;bin&lt;/code&gt; 目录已添加到环境变量&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;确保环境变量 &lt;code&gt;WIX&lt;/code&gt; 已设置为 Wix 的安装目录&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;编译项目&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/koho/frpmgr&#xA;cd frpmgr&#xA;build.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;在 &lt;code&gt;bin&lt;/code&gt; 目录找到生成的安装文件。&lt;/p&gt; &#xA;&lt;h4&gt;调试&lt;/h4&gt; &#xA;&lt;p&gt;第一次构建项目时，需要渲染图标和生成资源：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;上述命令无需每次构建都运行，只需在资源发生变更时再次执行即可。&lt;/p&gt; &#xA;&lt;p&gt;命令完成后，可直接运行程序：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go run ./cmd/frpmgr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;捐助&lt;/h2&gt; &#xA;&lt;p&gt;如果您觉得本项目对你有帮助，欢迎给予我们&lt;a href=&#34;https://raw.githubusercontent.com/koho/frpmgr/master/docs/donate-wechat.jpg&#34;&gt;支持&lt;/a&gt;。&lt;/p&gt;</summary>
  </entry>
</feed>