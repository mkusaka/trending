<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-22T01:36:20Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ThrillQuks/Pitraix</title>
    <updated>2022-08-22T01:36:20Z</updated>
    <id>tag:github.com,2022-08-22:/ThrillQuks/Pitraix</id>
    <link href="https://github.com/ThrillQuks/Pitraix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern Self-Modifying Cross-Platform Peer-to-Peer Botnet over TOR&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ThrillQuks/Pitraix#readme&#34;&gt;English&lt;/a&gt;&lt;/strong&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ThrillQuks/Pitraix/main/README.he.md&#34;&gt;עִברִית&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ThrillQuks/Pitraix/main/README.ar.md&#34;&gt;العربيه&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ThrillQuks/Pitraix/main/README.ru.md&#34;&gt;русский&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I am not responsible for any damage you do using this!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/nM06FQM/pitraix.png&#34; width=&#34;400&#34; height=&#34;400&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Pitraix&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Modern Cross-Platform HTTP-Based P2P Botnet over TOR that cannot be traced.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Design is based off &#34;zero-trust&#34; even malicious peers cannot do any damage while protecting operator identity. for more techincal information check &lt;a href=&#34;https://raw.githubusercontent.com/ThrillQuks/Pitraix/main/pitraix/spec.txt&#34;&gt;spec.txt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pitraix is able to handle millions of hosts, the limit is TOR network capacity&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can run Pitraix on a toaster and it will still work just as good with said millions of hosts, as the operative is one who sending requests, not recieving it and because there is no C2.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Built-in Crypter and self-spreading&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pitraix has ability to self modify own code which results in a completely different executable in terms of hash on every new infection&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All is done automagically and does not need operator intervention.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Cross-platform with some sneaky 1-days&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pitraix works on Windows 7 all way to Windows 11 as well as linux&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;it has ability to automagically privilege escalate in both platforms&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;on Linux it does so by keylogging password when the host uses &#34;sudo&#34; or &#34;doas&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;on Windows it uses a modified version of UACME (work in progress)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;*BSD support is work in progress&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Dynamic Behaviour&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pitraix automagically chooses different persistence locations on every host as well as names of config file, pitraix name it&#39;s self and more are all dynamically generated to confuse anti-viruses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Anonymous and secure&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pitraix is coded in Golang which is memory safe and real fast. it&#39;s used by important companies such as: Google, Banks, Discord, etc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pitraix is coded with extra security in mind to both protect the peer and the operator.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hosts don&#39;t know each other. Not even their TOR onion address&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Agents are Hosts that have been given TOR onion addresses of other Hosts, Agents relay instructions from Operative to Hosts. for more techincal information check &lt;a href=&#34;https://raw.githubusercontent.com/ThrillQuks/Pitraix/main/pitraix/spec.txt&#34;&gt;spec.txt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Operatives are camaoflagued as agents to protect against advanced network timing and packets attacks over TOR&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;State-of-art encryption using AES-256 and Public-Key cryptography&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Peer-to-Peer over TOR&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dynamic behaviour&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Built-in crypter&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Built-in keylogger that only picks interesting things&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Built-in ransomware that never stores keys on HOST (I am not responsible how you use this)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Auto disable backup like Volume Shadow Copy, OneDrive and Windows Backup&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Auto spreading to USBS, modified version of EternalBlue, and bunch other 1-days (work in progress)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ability to hijack crypto addresses in clipboard&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Readiable code easy to modify, not alot of scattered files&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Colorful terminal-based interface for operatives&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ZERO read/write to registry, thus lower detection&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Time-based Anti-Debugging detection&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Advanced VM detection&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Extremely low system and internet requirements&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ability to capture Events. Events are anything interesting that happens on a host computer, currently it&#39;s tied only to keylogger&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ability to capture Logs. Logs are mainly used for debugging behaviour and errors&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Picture of working OPER&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/RCBW7NG/image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Trust&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For my GPG key please check &lt;a href=&#34;https://raw.githubusercontent.com/ThrillQuks/Pitraix/main/gpg.asc&#34;&gt;gpg.asc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Anyone who claims to be me and don&#39;t haven&#39;t signed a message with that key is NOT me&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;This project is developed entirely by me in my free time, if you&#39;d like to support me to keep updating, best way is via donating.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Monero: &lt;code&gt;85HjZpxZngajAEy2123NuXgu1PnNyq2DLSkkr93cyT8QQVae1GruhL4hHAtnaFqeCF7Vo9eW2P11Sig8DDqzVzCSE95NaW6&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bitcoin (segwit): &lt;code&gt;bc1q2dqk9u06vv2j5p6yptj9ex7epfv77sxjygnrnw&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Setting it up&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Download latest Go version for your platform&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download files from releases and make sure they are all in same folder&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile lyst for platform you want&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile OPER (do NOT &lt;code&gt;go run OPER.go&lt;/code&gt;! instead compile it THEN run the executable&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After running OPER for first time, it should automagically generate and embed RSA keys and TOR addresses into lyst executable&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OPER will automagically set up TOR. Make sure you don&#39;t already have a hidden service running on your device.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Example for a stripped, windowless lyst payload for windows: &lt;code&gt;GOOS=windows go build -ldflags=&#34;-s -w -H=windowsgui&#34; lyst_windows.go&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Help&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type &#34;help&#34; in OPER for list of commands&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Techincal&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please make sure you read &lt;a href=&#34;https://raw.githubusercontent.com/ThrillQuks/Pitraix/main/pitraix/spec.txt&#34;&gt;spec.txt&lt;/a&gt; for more techincal information&lt;/li&gt; &#xA; &lt;li&gt;If it&#39;s little bit slow it&#39;s due TOR network, TOR network is expected to be upgraded soon and thus speed should be greatly improved then&lt;/li&gt; &#xA; &lt;li&gt;TOR binary from Torproject (which Pitraix uses) is signed and thus does not affect detection rate negatively&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Future &amp;amp; Terms definition&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ThrillQuks/Pitraix/main/pitraix/spec.txt&#34;&gt;spec.txt&lt;/a&gt; for list of terms and their respective meaning alongside tons of useful information for anybody even thinking of editing source code&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>flashbots/mev-boost-relay</title>
    <updated>2022-08-22T01:36:20Z</updated>
    <id>tag:github.com,2022-08-22:/flashbots/mev-boost-relay</id>
    <link href="https://github.com/flashbots/mev-boost-relay" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flashbots Eth2/mev-boost relay&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mev-boost Relay&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/flashbots/mev-boost-relay&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/flashbots/mev-boost-relay&#34; alt=&#34;Goreport status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flashbots/mev-boost-relay/actions?query=workflow%3A%22Checks%22&#34;&gt;&lt;img src=&#34;https://github.com/flashbots/mev-boost-relay/workflows/Checks/badge.svg?sanitize=true&#34; alt=&#34;Test status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RichardLitt/standard-readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=round-square&#34; alt=&#34;standard-readme compliant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flashbots mev-boost relay for proposer/builder separation in Ethereum.&lt;/p&gt; &#xA;&lt;p&gt;Provides the builder-specs API for Ethereum proof-of-stake validators, an API for block builders to submit blocks, as well as a data API, as running for &lt;a href=&#34;https://builder-relay-goerli.flashbots.net/&#34;&gt;Goerli&lt;/a&gt; and the other test networks.&lt;/p&gt; &#xA;&lt;p&gt;The relay consists of several components that are designed to run and scale independently and to be as simple as possible:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Housekeeper: update known validators, proposer duties. Soon: save metrics, etc.&lt;/li&gt; &#xA; &lt;li&gt;API: for proposer, block builder, data&lt;/li&gt; &#xA; &lt;li&gt;Website: handles the root website requests (information is pulled from Redis and database)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This software is currently in &lt;strong&gt;alpha state&lt;/strong&gt;, and there&#39;ll be significant changes in the following weeks. In particular major database schema changes, decoupling of block submissions from the proposer API and proper expiy of Redis entries.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flashbots/mev-boost/&#34;&gt;mev-boost&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flashbots.notion.site/Relay-API-Spec-5fb0819366954962bc02e81cb33840f5&#34;&gt;Relay API Spec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://builder-relay-goerli.flashbots.net/&#34;&gt;builder-relay-goerli.flashbots.net&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/#background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Background&lt;/h1&gt; &#xA;&lt;p&gt;MEV is a centralizing force on Ethereum. Unattended, the competition for MEV opportunities leads to consensus security instability and permissioned communication infrastructure between traders and block producers. This erodes neutrality, transparency, decentralization, and permissionlessness.&lt;/p&gt; &#xA;&lt;p&gt;Flashbots is a research and development organization working on mitigating the negative externalities of MEV. Flashbots started as a builder specializing in MEV extraction in proof-of-work Ethereum to democratize access to MEV and make the most profitable blocks available to all miners. &amp;gt;90% of miners are outsourcing some of their block construction to Flashbots today.&lt;/p&gt; &#xA;&lt;p&gt;The mev-boost relay is a trusted mediator between block producers and block builders. It enables all Ethereum proof-of-stake validators to offer their blockspace to not just Flashbots but other builders as well. This opens up the market to more builders and creates competition between them, leading to more revenue and choice for validators, and better censorship-resistance for Ethereum.&lt;/p&gt; &#xA;&lt;p&gt;In the future, &lt;a href=&#34;https://ethresear.ch/t/two-slot-proposer-builder-separation/10980&#34;&gt;proposer/builder separation&lt;/a&gt; will be enshrined in the Ethereum protocol itself to further harden its trust model.&lt;/p&gt; &#xA;&lt;p&gt;Read more in &lt;a href=&#34;https://writings.flashbots.net/writings/why-run-mevboost/&#34;&gt;Why run mev-boost?&lt;/a&gt; and in the &lt;a href=&#34;https://github.com/flashbots/mev-boost/wiki/Frequently-Asked-Questions&#34;&gt;Frequently Asked Questions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Redis (v6+) and PostgreSQL is used.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start PostgreSQL &amp;amp; Redis in Docker&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(you can now visit adminer on &lt;a href=&#34;http://localhost:8093/?username=postgres&#34;&gt;http://localhost:8093/?username=postgres&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;The services need access to a beacon node for event subscriptions and the beacon API (by default using &lt;code&gt;localhost:3500&lt;/code&gt; which is the Prysm default beacon-API port). You can proxy the port from a server like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh -L 3500:localhost:3500 your_server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now start the services:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# The housekeeper sets up the validators, and does various housekeeping&#xA;go run . housekeeper --network kiln --db postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable&#xA;&#xA;# Run APIs for Kiln (using a dummy BLS secret key)&#xA;go run . api --network kiln --secret-key 0x607a11b45a7219cc61a3d9c5fd08c7eebd602a6a19a977f8d3771d5711a550f2 --db postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable&#xA;&#xA;# Run Website for Kiln&#xA;go run . website --network kiln --db postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable&#xA;&#xA;# Query status&#xA;curl localhost:9062/eth/v1/builder/status&#xA;&#xA;# Send test validator registrations&#xA;curl -X POST localhost:9062/eth/v1/builder/validators -d @testdata/valreg2.json&#xA;&#xA;# Delete previous registrations&#xA;redis-cli DEL boost-relay/kiln:validators-registration boost-relay/kiln:validators-registration-timestamp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Env vars:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DB_TABLE_PREFIX&lt;/code&gt; - prefix to use for db tables (default uses &lt;code&gt;dev&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ENABLE_ZERO_VALUE_BLOCKS&lt;/code&gt; - allow blocks with 0 value&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYNC_VALIDATOR_REGISTRATIONS&lt;/code&gt; - handle validator registrations synchronously instead of in a background worker pool&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BLOCKSIM_MAX_CONCURRENT&lt;/code&gt; - maximum number of concurrent block-sim requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ALLOW_BLOCK_VERIFICATION_FAIL&lt;/code&gt; - accept block even if block simulation &amp;amp; verification fails&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DISABLE_BID_MEMORY_CACHE&lt;/code&gt; - force bids to go through redis/db&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Maintainers&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/metachris&#34;&gt;@metachris&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flashbots.net&#34;&gt;Flashbots&lt;/a&gt; is a research and development collective working on mitigating the negative externalities of decentralized economies. We contribute with the larger free software community to illuminate the dark forest.&lt;/p&gt; &#xA;&lt;p&gt;You are welcome here &amp;lt;3.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have a question, feedback or a bug report for this project, please &lt;a href=&#34;https://github.com/flashbots/mev-boost/issues&#34;&gt;open a new Issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you would like to contribute with code, check the &lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING file&lt;/a&gt; for further info about the development environment.&lt;/li&gt; &#xA; &lt;li&gt;We just ask you to be nice. Read our &lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Security&lt;/h1&gt; &#xA;&lt;p&gt;If you find a security vulnerability on this project or any other initiative related to Flashbots, please let us know sending an email to &lt;a href=&#34;mailto:security@flashbots.net&#34;&gt;security@flashbots.net&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The code in this project is free software under the &lt;a href=&#34;https://raw.githubusercontent.com/flashbots/mev-boost-relay/main/LICENSE&#34;&gt;AGPL License version 3 or later&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Made with ☀️ by the ⚡🤖 collective.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SagerNet/sing-box</title>
    <updated>2022-08-22T01:36:20Z</updated>
    <id>tag:github.com,2022-08-22:/SagerNet/sing-box</id>
    <link href="https://github.com/SagerNet/sing-box" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The universal proxy platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sing-box&lt;/h1&gt; &#xA;&lt;p&gt;The universal proxy platform.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sing-box.sagernet.org&#34;&gt;https://sing-box.sagernet.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2022 by nekohasekai &amp;lt;contact-sagernet@sekai.icu&amp;gt;&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program. If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>