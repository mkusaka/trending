<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-11T01:34:13Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ehang-io/nps</title>
    <updated>2022-10-11T01:34:13Z</updated>
    <id>tag:github.com,2022-10-11:/ehang-io/nps</id>
    <link href="https://github.com/ehang-io/nps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款轻量级、高性能、功能强大的内网穿透代理服务器。支持tcp、udp、socks5、http等几乎所有流量转发，可用来访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析、内网socks5代理等等……，并带有功能强大的web管理端。a lightweight, high-performance, powerful intranet penetration proxy server, with a powerful web management terminal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NPS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ehang-io/nps.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/ehang-io/nps.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://gitter.im/cnlh-nps/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/cnlh-nps/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/ehang-io/nps/workflows/Release/badge.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/ehang-io/nps/total&#34; alt=&#34;GitHub All Releases&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ehang-io/nps/raw/master/README.md&#34;&gt;README&lt;/a&gt;|&lt;a href=&#34;https://github.com/ehang-io/nps/raw/master/README_zh.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NPS is a lightweight, high-performance, powerful &lt;strong&gt;intranet penetration&lt;/strong&gt; proxy server, with a powerful web management terminal.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ehang-io/nps/raw/master/image/web.png?raw=true&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Comprehensive protocol support, compatible with almost all commonly used protocols, such as tcp, udp, http(s), socks5, p2p, http proxy ...&lt;/li&gt; &#xA; &lt;li&gt;Full platform compatibility (linux, windows, macos, Synology, etc.), support installation as a system service simply.&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive control, both client and server control are allowed.&lt;/li&gt; &#xA; &lt;li&gt;Https integration, support to convert backend proxy and web services to https, and support multiple certificates.&lt;/li&gt; &#xA; &lt;li&gt;Just simple configuration on web ui can complete most requirements.&lt;/li&gt; &#xA; &lt;li&gt;Complete information display, such as traffic, system information, real-time bandwidth, client version, etc.&lt;/li&gt; &#xA; &lt;li&gt;Powerful extension functions, everything is available (cache, compression, encryption, traffic limit, bandwidth limit, port reuse, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Domain name resolution has functions such as custom headers, 404 page configuration, host modification, site protection, URL routing, and pan-resolution.&lt;/li&gt; &#xA; &lt;li&gt;Multi-user and user registration support on server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Didn&#39;t find the feature you want? It doesn&#39;t matter, click &lt;a href=&#34;https://ehang-io.github.io/nps/&#34;&gt;Enter the document&lt;/a&gt; to find it!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/ehang-io/nps/releases&#34;&gt;releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Download the corresponding system version, the server and client are separate.&lt;/p&gt; &#xA;&lt;h3&gt;Server start&lt;/h3&gt; &#xA;&lt;p&gt;After downloading the server compressed package, unzip it, and then enter the unzipped folder.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;execute installation command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For linux、darwin &lt;code&gt;sudo ./nps install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For windows, run cmd as administrator and enter the installation directory &lt;code&gt;nps.exe install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;default ports&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The default configuration file of nps use 80，443，8080，8024 ports&lt;/p&gt; &#xA;&lt;p&gt;80 and 443 ports for host mode default ports&lt;/p&gt; &#xA;&lt;p&gt;8080 for web management access port&lt;/p&gt; &#xA;&lt;p&gt;8024 for net bridge port, to communicate between server and client&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;start up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For linux、darwin &lt;code&gt;sudo nps start&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For windows, run cmd as administrator and enter the program directory &lt;code&gt;nps.exe start&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;After installation, the windows configuration file is located at C:\Program Files\nps, linux or darwin is located at /etc/nps&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you don&#39;t find it started successfully, you can check the log (Windows log files are located in the current running directory, linux and darwin are located in /var/log/nps.log).&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Access server IP:web service port (default is 8080).&lt;/li&gt; &#xA; &lt;li&gt;Login with username and password (default is admin/123, must be modified when officially used).&lt;/li&gt; &#xA; &lt;li&gt;Create a client.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Client connection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click the + sign in front of the client in web management and copy the startup command.&lt;/li&gt; &#xA; &lt;li&gt;Execute the startup command, Linux can be executed directly, Windows will replace ./npc with npc.exe and execute it with cmd.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you need to register to the system service, you can check &lt;a href=&#34;https://ehang-io.github.io/nps/#/use?id=%E6%B3%A8%E5%86%8C%E5%88%B0%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1&#34;&gt;Register to the system service&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After the client connects, configure the corresponding penetration service in the web.&lt;/li&gt; &#xA; &lt;li&gt;For more advanced usage, see &lt;a href=&#34;https://ehang-io.github.io/nps/&#34;&gt;Complete Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you encounter a bug, you can submit it to the dev branch directly.&lt;/li&gt; &#xA; &lt;li&gt;If you encounter a problem, you can feedback through the issue.&lt;/li&gt; &#xA; &lt;li&gt;The project is under development, and there is still a lot of room for improvement. If you can contribute code, please submit PR to the dev branch.&lt;/li&gt; &#xA; &lt;li&gt;If there is feedback on new features, you can feedback via issues or qq group.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cloudreve/Cloudreve</title>
    <updated>2022-10-11T01:34:13Z</updated>
    <id>tag:github.com,2022-10-11:/cloudreve/Cloudreve</id>
    <link href="https://github.com/cloudreve/Cloudreve" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌩支持多家云存储的云盘系统 (Self-hosted file management and sharing system, supports multiple storage providers)&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://cloudreve.org/&#34; alt=&#34;logo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudreve/frontend/master/public/static/img/logo192.png&#34; width=&#34;150&#34;&gt;&lt;/a&gt; &lt;br&gt; Cloudreve &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;支持多家云存储驱动的公有云文件系统.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cloudreve/Cloudreve/actions/workflows/test.yml&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/cloudreve/Cloudreve/Test?style=flat-square&#34; alt=&#34;GitHub Test Workflow&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/cloudreve/Cloudreve&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/cloudreve/Cloudreve?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/cloudreve/Cloudreve&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/cloudreve/Cloudreve?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/cloudreve/Cloudreve/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/cloudreve/Cloudreve?include_prereleases&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/cloudreve/cloudreve&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/image-size/cloudreve/cloudreve?style=flat-square&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://demo.cloudreve.org&#34;&gt;演示站&lt;/a&gt; • &lt;a href=&#34;https://forum.cloudreve.org/&#34;&gt;讨论社区&lt;/a&gt; • &lt;a href=&#34;https://docs.cloudreve.org/&#34;&gt;文档&lt;/a&gt; • &lt;a href=&#34;https://github.com/cloudreve/Cloudreve/releases&#34;&gt;下载&lt;/a&gt; • &lt;a href=&#34;https://t.me/cloudreve_official&#34;&gt;Telegram 群组&lt;/a&gt; • &lt;a href=&#34;#scroll-许可证&#34;&gt;许可证&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudreve/docs/master/images/homepage.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;✨&lt;/span&gt; 特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;☁&lt;/span&gt; 支持本机、从机、七牛、阿里云 OSS、腾讯云 COS、又拍云、OneDrive (包括世纪互联版) 作为存储端&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;📤&lt;/span&gt; 上传/下载 支持客户端直传，支持下载限速&lt;/li&gt; &#xA; &lt;li&gt;💾 可对接 Aria2 离线下载，可使用多个从机节点分担下载任务&lt;/li&gt; &#xA; &lt;li&gt;📚 在线 压缩/解压缩、多文件打包下载&lt;/li&gt; &#xA; &lt;li&gt;💻 覆盖全部存储策略的 WebDAV 协议支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;⚡&lt;/span&gt; 拖拽上传、目录上传、流式上传处理&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🗃&lt;/span&gt; 文件拖拽管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;👩👧👦&lt;/span&gt; 多用户、用户组&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; 创建文件、目录的分享链接，可设定自动过期&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;👁🗨&lt;/span&gt; 视频、图像、音频、文本、Office 文档在线预览&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🎨&lt;/span&gt; 自定义配色、黑暗模式、PWA 应用、全站单页应用&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🚀&lt;/span&gt; All-In-One 打包，开箱即用&lt;/li&gt; &#xA; &lt;li&gt;🌈 ... ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;🛠&lt;/span&gt; 部署&lt;/h2&gt; &#xA;&lt;p&gt;下载适用于您目标机器操作系统、CPU架构的主程序，直接运行即可。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 解压程序包&#xA;tar -zxvf cloudreve_VERSION_OS_ARCH.tar.gz&#xA;&#xA;# 赋予执行权限&#xA;chmod +x ./cloudreve&#xA;&#xA;# 启动 Cloudreve&#xA;./cloudreve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;以上为最简单的部署示例，您可以参考 &lt;a href=&#34;https://docs.cloudreve.org/&#34;&gt;文档 - 起步&lt;/a&gt; 进行更为完善的部署。&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚙&lt;/span&gt; 构建&lt;/h2&gt; &#xA;&lt;p&gt;自行构建前需要拥有 &lt;code&gt;Go &amp;gt;= 1.17&lt;/code&gt;、&lt;code&gt;node.js&lt;/code&gt;、&lt;code&gt;yarn&lt;/code&gt;、&lt;code&gt;zip&lt;/code&gt; 等必要依赖。&lt;/p&gt; &#xA;&lt;h4&gt;克隆代码&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone --recurse-submodules https://github.com/cloudreve/Cloudreve.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;构建静态资源&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 进入前端子模块&#xA;cd assets&#xA;# 安装依赖&#xA;yarn install&#xA;# 开始构建&#xA;yarn run build&#xA;# 构建完成后删除映射文件&#xA;cd build&#xA;find . -name &#34;*.map&#34; -type f -delete&#xA;# 返回项目主目录打包静态资源&#xA;cd ../../&#xA;zip -r - assets/build &amp;gt;assets.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;编译项目&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 获得当前版本号、Commit&#xA;export COMMIT_SHA=$(git rev-parse --short HEAD)&#xA;export VERSION=$(git describe --tags)&#xA;&#xA;# 开始编译&#xA;go build -a -o cloudreve -ldflags &#34;-s -w -X &#39;github.com/cloudreve/Cloudreve/v3/pkg/conf.BackendVersion=$VERSION&#39; -X &#39;github.com/cloudreve/Cloudreve/v3/pkg/conf.LastCommit=$COMMIT_SHA&#39;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;你也可以使用项目根目录下的 &lt;code&gt;build.sh&lt;/code&gt; 快速开始构建：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh  [-a] [-c] [-b] [-r]&#xA;&#x9;a - 构建静态资源&#xA;&#x9;c - 编译二进制文件&#xA;&#x9;b - 构建前端 + 编译二进制文件&#xA;&#x9;r - 交叉编译，构建用于release的版本&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚗&lt;/span&gt; 技术栈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; + &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;Gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/react&#34;&gt;React&lt;/a&gt; + &lt;a href=&#34;https://github.com/reduxjs/redux&#34;&gt;Redux&lt;/a&gt; + &lt;a href=&#34;https://github.com/mui-org/material-ui&#34;&gt;Material-UI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; 许可证&lt;/h2&gt; &#xA;&lt;p&gt;GPL V3&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;GitHub &lt;a href=&#34;https://github.com/HFO4&#34;&gt;@HFO4&lt;/a&gt; &amp;nbsp;·&amp;nbsp; Twitter &lt;a href=&#34;https://twitter.com/abslant00&#34;&gt;@abslant00&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>btcsuite/btcd</title>
    <updated>2022-10-11T01:34:13Z</updated>
    <id>tag:github.com,2022-10-11:/btcsuite/btcd</id>
    <link href="https://github.com/btcsuite/btcd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An alternative full node bitcoin implementation written in Go (golang)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;btcd&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/btcsuite/btcd/actions&#34;&gt;&lt;img src=&#34;https://github.com/btcsuite/btcd/workflows/Build%20and%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/btcsuite/btcd?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/btcsuite/btcd/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://copyfree.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-ISC-blue.svg?sanitize=true&#34; alt=&#34;ISC License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/btcsuite/btcd&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/godoc-reference-blue.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;btcd is an alternative full node bitcoin implementation written in Go (golang).&lt;/p&gt; &#xA;&lt;p&gt;This project is currently under active development and is in a Beta state. It is extremely stable and has been in production use since October 2013.&lt;/p&gt; &#xA;&lt;p&gt;It properly downloads, validates, and serves the block chain using the exact rules (including consensus bugs) for block acceptance as Bitcoin Core. We have taken great care to avoid btcd causing a fork to the block chain. It includes a full block validation testing framework which contains all of the &#39;official&#39; block acceptance tests (and some additional ones) that is run on every pull request to help ensure it properly follows consensus. Also, it passes all of the JSON test data in the Bitcoin Core code.&lt;/p&gt; &#xA;&lt;p&gt;It also properly relays newly mined blocks, maintains a transaction pool, and relays individual transactions that have not yet made it into a block. It ensures all individual transactions admitted to the pool follow the rules required by the block chain and also includes more strict checks which filter transactions based on miner requirements (&#34;standard&#34; transactions).&lt;/p&gt; &#xA;&lt;p&gt;One key difference between btcd and Bitcoin Core is that btcd does &lt;em&gt;NOT&lt;/em&gt; include wallet functionality and this was a very intentional design decision. See the blog entry &lt;a href=&#34;https://web.archive.org/web/20171125143919/https://blog.conformal.com/btcd-not-your-moms-bitcoin-daemon&#34;&gt;here&lt;/a&gt; for more details. This means you can&#39;t actually make or receive payments directly with btcd. That functionality is provided by the &lt;a href=&#34;https://github.com/btcsuite/btcwallet&#34;&gt;btcwallet&lt;/a&gt; and &lt;a href=&#34;https://github.com/btcsuite/Paymetheus&#34;&gt;Paymetheus&lt;/a&gt; (Windows-only) projects which are both under active development.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://golang.org&#34;&gt;Go&lt;/a&gt; 1.16 or newer.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/btcsuite/btcd/releases&#34;&gt;https://github.com/btcsuite/btcd/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux/BSD/MacOSX/POSIX - Build from Source&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Go according to the installation instructions here: &lt;a href=&#34;http://golang.org/doc/install&#34;&gt;http://golang.org/doc/install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure Go was installed properly and is a supported version:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go version&#xA;$ go env GOROOT GOPATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: The &lt;code&gt;GOROOT&lt;/code&gt; and &lt;code&gt;GOPATH&lt;/code&gt; above must not be the same path. It is recommended that &lt;code&gt;GOPATH&lt;/code&gt; is set to a directory in your home directory such as &lt;code&gt;~/goprojects&lt;/code&gt; to avoid write permission issues. It is also recommended to add &lt;code&gt;$GOPATH/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; at this point.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following commands to obtain btcd, all dependencies, and install it:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd $GOPATH/src/github.com/btcsuite/btcd&#xA;$ GO111MODULE=on go install -v . ./cmd/...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;btcd (and utilities) will now be installed in &lt;code&gt;$GOPATH/bin&lt;/code&gt;. If you did not already add the bin directory to your system path during Go installation, we recommend you do so now.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;h4&gt;Linux/BSD/MacOSX/POSIX - Build from Source&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following commands to update btcd, all dependencies, and install it:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd $GOPATH/src/github.com/btcsuite/btcd&#xA;$ git pull&#xA;$ GO111MODULE=on go install -v . ./cmd/...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;btcd has several configuration options available to tweak how it runs, but all of the basic operations described in the intro section work with zero configuration.&lt;/p&gt; &#xA;&lt;h4&gt;Linux/BSD/POSIX/Source&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./btcd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;IRC&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;irc.libera.chat&lt;/li&gt; &#xA; &lt;li&gt;channel #btcd&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.libera.chat/gamja/?channels=btcd&#34;&gt;webchat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issue Tracker&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/btcsuite/btcd/issues&#34;&gt;integrated github issue tracker&lt;/a&gt; is used for this project.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation is a work-in-progress. It is located in the &lt;a href=&#34;https://github.com/btcsuite/btcd/tree/master/docs&#34;&gt;docs&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Release Verification&lt;/h2&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://github.com/btcsuite/btcd/tree/master/release&#34;&gt;documentation on the current build/verification process&lt;/a&gt; for all our releases for information on how to verify the integrity of published releases using our reproducible build system.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;btcd is licensed under the &lt;a href=&#34;http://copyfree.org&#34;&gt;copyfree&lt;/a&gt; ISC License.&lt;/p&gt;</summary>
  </entry>
</feed>