<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-18T01:31:20Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>marcopiovanello/yt-dlp-web-ui</title>
    <updated>2025-03-18T01:31:20Z</updated>
    <id>tag:github.com,2025-03-18:/marcopiovanello/yt-dlp-web-ui</id>
    <link href="https://github.com/marcopiovanello/yt-dlp-web-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A terrible web ui and RPC server for yt-dlp. Designed to be self-hosted.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; A poll is up to decide the future of yt-dlp-web-ui frontend! If you&#39;re interested you can take part.&lt;br&gt; &lt;a href=&#34;https://github.com/marcopiovanello/yt-dlp-web-ui/discussions/223&#34;&gt;https://github.com/marcopiovanello/yt-dlp-web-ui/discussions/223&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;yt-dlp Web UI&lt;/h1&gt; &#xA;&lt;p&gt;A not so terrible web ui for yt-dlp.&lt;/p&gt; &#xA;&lt;p&gt;High performance extendeable web ui and RPC server for yt-dlp with low impact on resources.&lt;/p&gt; &#xA;&lt;p&gt;Created for the only purpose of &lt;em&gt;fetching&lt;/em&gt; videos from my server/nas and monitor upcoming livestreams.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker images are available on &lt;a href=&#34;https://hub.docker.com/r/marcobaobao/yt-dlp-webui&#34;&gt;Docker Hub&lt;/a&gt; or &lt;a href=&#34;https://github.com/marcopiovanello/yt-dlp-web-ui/pkgs/container/yt-dlp-web-ui&#34;&gt;ghcr.io&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull marcobaobao/yt-dlp-webui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# latest dev&#xA;docker pull ghcr.io/marcopiovanello/yt-dlp-web-ui:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Donate to yt-dlp-webui development&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/marcofw&#34;&gt;PayPal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Keeps the project alive!&lt;/em&gt; ðŸ˜ƒ&lt;/p&gt; &#xA;&lt;h2&gt;Community stuff&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to join :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/Cu8wB9FM&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Some screeshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/fc43a3fb-ecf9-449d-b5cb-5d5635020c00&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/3210f6ac-0dd8-403c-b839-3c24ff7d7d00&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/16450a40-cda6-4c8b-9d20-8ec36282f6ed&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Video showcase&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marcopiovanello/yt-dlp-web-ui/assets/35533749/91545bc4-233d-4dde-8504-27422cb26964&#34;&gt;app.webm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;p&gt;The currently avaible settings are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Server address&lt;/li&gt; &#xA; &lt;li&gt;Switch theme&lt;/li&gt; &#xA; &lt;li&gt;Extract audio&lt;/li&gt; &#xA; &lt;li&gt;Switch language&lt;/li&gt; &#xA; &lt;li&gt;Optional format selection&lt;/li&gt; &#xA; &lt;li&gt;Override the output filename&lt;/li&gt; &#xA; &lt;li&gt;Override the output path&lt;/li&gt; &#xA; &lt;li&gt;Pass custom yt-dlp arguments safely&lt;/li&gt; &#xA; &lt;li&gt;Download queue (limit concurrent downloads)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Format selection&lt;/h2&gt; &#xA;&lt;p&gt;This feature is disabled by default as this intended to be used to retrieve the best quality automatically.&lt;/p&gt; &#xA;&lt;p&gt;To enable it just go to the settings page and enable the &lt;strong&gt;Enable video/audio formats selection&lt;/strong&gt; flag!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/marcopiovanello/yt-dlp-web-ui/pkgs/container/yt-dlp-web-ui&#34;&gt;Docker&lt;/a&gt; run&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull marcobaobao/yt-dlp-webui&#xA;docker run -d -p 3033:3033 -v &amp;lt;your dir&amp;gt;:/downloads marcobaobao/yt-dlp-webui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with docker but building the container manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker build -t yt-dlp-webui .&#xA;docker run -d -p 3033:3033 -v &amp;lt;your dir&amp;gt;:/downloads yt-dlp-webui&#xA;&#xA;docker run -d -p 3033:3033 \&#xA;  -v &amp;lt;your dir&amp;gt;:/downloads \  &#xA;  -v &amp;lt;your dir&amp;gt;:/config \ # optional&#xA;  yt-dlp-webui&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you opt to add RPC authentication...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d \&#xA;    -p 3033:3033 \&#xA;    -e JWT_SECRET randomsecret&#xA;    -v /path/to/downloads:/downloads \&#xA;    -v /path/for/config:/config \ # optional&#xA;    marcobaobao/yt-dlp-webui \&#xA;    --auth \&#xA;    --user your_username \&#xA;    --pass your_pass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish for limiting the download queue size...&lt;/p&gt; &#xA;&lt;p&gt;e.g. limiting max 2 concurrent download.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d \&#xA;    -p 3033:3033 \&#xA;    -e JWT_SECRET randomsecret&#xA;    -v /path/to/downloads:/downloads \&#xA;    marcobaobao/yt-dlp-webui \&#xA;    --qs 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  yt-dlp-webui:&#xA;    image: marcobaobao/yt-dlp-webui&#xA;    ports:&#xA;      - 3033:3033&#xA;    volumes:&#xA;      - &amp;lt;your dir&amp;gt;:/downloads # replace &amp;lt;your dir&amp;gt; with a directory on your host system&#xA;    healthcheck:&#xA;      test: curl -f http://localhost:3033 || exit 1&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;âš¡ One-Click Deploy&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Cloud Provider&lt;/th&gt; &#xA;   &lt;th&gt;Deploy Button&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AWS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://deploystack.io/deploy/marcopiovanello-yt-dlp-web-ui?provider=aws&amp;amp;language=cfn&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deploystackio/deploy-templates/refs/heads/main/.assets/img/aws.svg?sanitize=true&#34; height=&#34;38&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DigitalOcean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://deploystack.io/deploy/marcopiovanello-yt-dlp-web-ui?provider=do&amp;amp;language=dop&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deploystackio/deploy-templates/refs/heads/main/.assets/img/do.svg?sanitize=true&#34; height=&#34;38&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Render&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://deploystack.io/deploy/marcopiovanello-yt-dlp-web-ui?provider=rnd&amp;amp;language=rnd&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deploystackio/deploy-templates/refs/heads/main/.assets/img/rnd.svg?sanitize=true&#34; height=&#34;38&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;sub&gt;Generated by &lt;a href=&#34;https://deploystack.io/c/marcopiovanello-yt-dlp-web-ui&#34; target=&#34;_blank&#34;&gt;DeployStack.io&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/marcopiovanello/yt-dlp-web-ui/releases&#34;&gt;Prebuilt binaries&lt;/a&gt; installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# download the latest release from the releases page&#xA;mv yt-dlp-webui_linux-[your_system_arch] /usr/local/bin/yt-dlp-webui&#xA;&#xA;# /home/user/downloads as an example and yt-dlp in $PATH&#xA;yt-dlp-webui --out /home/user/downloads&#xA;&#xA;# specifying yt-dlp path&#xA;yt-dlp-webui --out /home/user/downloads --driver /opt/soemdir/yt-dlp&#xA;&#xA;# specifying using a config file&#xA;yt-dlp-webui --conf /home/user/.config/yt-dlp-webui.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arguments&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Usage yt-dlp-webui:&#xA;  -auth&#xA;        Enable RPC authentication&#xA;  -conf string&#xA;        Config file path (default &#34;./config.yml&#34;)&#xA;  -db string&#xA;        local database path (default &#34;local.db&#34;)&#xA;  -driver string&#xA;        yt-dlp executable path (default &#34;yt-dlp&#34;)&#xA;  -fl&#xA;        enable file based logging&#xA;  -host string&#xA;        Host where server will listen at (default &#34;0.0.0.0&#34;)&#xA;  -lf string&#xA;        set log file location (default &#34;yt-dlp-webui.log&#34;)&#xA;  -out string&#xA;        Where files will be saved (default &#34;.&#34;)&#xA;  -pass string&#xA;        Password required for auth&#xA;  -port int&#xA;        Port where server will listen at (default 3033)&#xA;  -qs int&#xA;        Queue size (concurrent downloads) (default 2)&#xA;  -session string&#xA;        session file path (default &#34;.&#34;)&#xA;  -user string&#xA;        Username required for auth&#xA;  -web string&#xA;        frontend web resources path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Config file&lt;/h3&gt; &#xA;&lt;p&gt;By running &lt;code&gt;yt-dlp-webui&lt;/code&gt; in standalone mode you have the ability to also specify a config file. The config file &lt;strong&gt;will overwrite what have been passed as cli argument&lt;/strong&gt;. With Docker, inside the mounted &lt;code&gt;/conf&lt;/code&gt; volume inside there must be a file named &lt;code&gt;config.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Simple configuration file for yt-dlp webui&#xA;&#xA;---&#xA;# Host where server will listen at (default: &#34;0.0.0.0&#34;)&#xA;#host: 0.0.0.0&#xA;&#xA;# Port where server will listen at (default: 3033)&#xA;port: 8989&#xA;&#xA;# Directory where downloaded files will be stored (default: &#34;.&#34;)&#xA;downloadPath: /home/ren/archive&#xA;&#xA;# [optional] Enable RPC authentication (requires username and password)&#xA;require_auth: true&#xA;username: my_username&#xA;password: my_random_secret&#xA;&#xA;# [optional] The download queue size (default: logical cpu cores)&#xA;queue_size: 4 # min. 2&#xA;&#xA;# [optional] Full path to the yt-dlp (default: &#34;yt-dlp&#34;)&#xA;#downloaderPath: /usr/local/bin/yt-dlp&#xA;&#xA;# [optional] Enable file based logging with rotation (default: false)&#xA;#enable_file_logging: false&#xA;&#xA;# [optional] Directory where the log file will be stored (default: &#34;.&#34;)&#xA;#log_path: .&#xA;&#xA;# [optional] Directory where the session database file will be stored (default: &#34;.&#34;)&#xA;#session_file_path: .&#xA;&#xA;# [optional] Path where the sqlite database will be created/opened (default: &#34;./local.db&#34;)&#xA;#local_database_path&#xA;&#xA;# [optional] Path where a custom frontend will be loaded (instead of the embedded one)&#xA;#frontend_path: ./web/solid-frontend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Systemd integration&lt;/h3&gt; &#xA;&lt;p&gt;By defining a service file in &lt;code&gt;/etc/systemd/system/yt-dlp-webui.service&lt;/code&gt; yt-dlp webui can be launched as in background.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Unit]&#xA;Description=yt-dlp-webui service file&#xA;After=network.target&#xA;&#xA;[Service]&#xA;User=some_user&#xA;ExecStart=/usr/local/bin/yt-dlp-webui --out /mnt/share/downloads --port 8100&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;systemctl enable yt-dlp-webui&#xA;systemctl start yt-dlp-webui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It could be that yt-dlp-webui works correctly when started manually from the console, but with systemd, it does not see the yt-dlp executable, or has issues writing to the database file. One way to fix these issues could be as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd&#xA;mkdir yt-dlp-webui-workingdir&#xA;# optionally move the already existing database file there:&#xA;mv local.db yt-dlp-webui-workingdir&#xA;nano yt-dlp-webui-workingdir/my.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The config file format is described above; make sure to include the &lt;code&gt;downloaderPath&lt;/code&gt; setting (the path can possibly be found by running &lt;code&gt;which yt-dlp&lt;/code&gt;). For example, one could have:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;downloadPath: /stuff/media&#xA;downloaderPath: /home/your_user/.local/bin/yt-dlp&#xA;log_path: /home/your_user/yt-dlp-webui-workingdir&#xA;session_file_path: /home/your_user/yt-dlp-webui-workingdir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adjust the Service section in the &lt;code&gt;/etc/systemd/system/yt-dlp-webui.service&lt;/code&gt; file as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Service]&#xA;User=your_user&#xA;Group=your_user&#xA;WorkingDirectory=/home/your_user/yt-dlp-webui-workingdir&#xA;ExecStart=/usr/local/bin/yt-dlp-webui --conf /home/your_user/yt-dlp-webui-workingdir/my.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# the dependencies are: yt-dlp, ffmpeg, nodejs, go, make.&#xA;&#xA;make all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Open-API&lt;/h2&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;/openapi&lt;/code&gt; to see the related swagger.&lt;/p&gt; &#xA;&lt;h2&gt;Extendable&lt;/h2&gt; &#xA;&lt;p&gt;You dont&#39;like the Material feel? Want to build your own frontend? We got you covered ðŸ¤ &lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;yt-dlp-webui&lt;/code&gt; now exposes a nice &lt;strong&gt;JSON-RPC 1.0&lt;/strong&gt; interface through Websockets and HTTP-POST It is &lt;strong&gt;planned&lt;/strong&gt; to also expose a &lt;strong&gt;gRPC&lt;/strong&gt; server.&lt;/p&gt; &#xA;&lt;p&gt;For more information open an issue on GitHub and I will provide more info ASAP.&lt;/p&gt; &#xA;&lt;h2&gt;Custom frontend&lt;/h2&gt; &#xA;&lt;p&gt;To load a custom frontend you need to specify its path either in the config file (&lt;a href=&#34;https://raw.githubusercontent.com/marcopiovanello/yt-dlp-web-ui/master/#config-file&#34;&gt;see config file&lt;/a&gt;) or via flags.&lt;/p&gt; &#xA;&lt;p&gt;The frontend needs to follow this structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;path/to/my/frontend&#xA;â”œâ”€â”€ assets&#xA;â”‚   â”œâ”€â”€ js-chunk-1.js (example)&#xA;â”‚   â”œâ”€â”€ js-chunk-2.js (example)&#xA;â”‚   â”œâ”€â”€ style.css (example)&#xA;â””â”€â”€ index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;assets&lt;/code&gt; is where the resources will be loaded.&lt;br&gt; &lt;code&gt;index.html&lt;/code&gt; is the entrypoint.&lt;/p&gt; &#xA;&lt;h2&gt;Nix&lt;/h2&gt; &#xA;&lt;p&gt;This repo adds support for Nix(OS) in various ways through a &lt;code&gt;flake-parts&lt;/code&gt; flake. For more info, please refer to the &lt;a href=&#34;https://nixos.org/learn/&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What yt-dlp-webui is not&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;yt-dlp-webui&lt;/code&gt; isn&#39;t your ordinary website where to download stuff from the internet, so don&#39;t try asking for links of where this is hosted. It&#39;s a self hosted platform for a Linux NAS.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;It says that it isn&#39;t connected.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In some circumstances, you must set the server ip address or hostname in the settings section (gear icon).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;The download doesn&#39;t start.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Simply, yt-dlp process takes a lot of time to fire up. (yt-dlp isn&#39;t fast especially if you have a lower-end/low-power NAS/server/desktop. Furthermore some yt-dlp builds are slower than others)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>