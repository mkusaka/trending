<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-18T01:38:07Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FourCoreLabs/LolDriverScan</title>
    <updated>2023-07-18T01:38:07Z</updated>
    <id>tag:github.com,2023-07-18:/FourCoreLabs/LolDriverScan</id>
    <link href="https://github.com/FourCoreLabs/LolDriverScan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LolDriverScan&lt;/h1&gt; &#xA;&lt;p&gt;LolDriverScan is a golang tool that allows users to discover vulnerable drivers on their system. This tool fetches the &lt;a href=&#34;https://www.loldrivers.io/&#34;&gt;loldrivers.io&lt;/a&gt; list from their APIs and scans the system for any vulnerable drivers This project is implemented in Go and does not require elevated privileges to run.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scans the system for vulnerable drivers&lt;/li&gt; &#xA; &lt;li&gt;Provides verbose output for detailed information&lt;/li&gt; &#xA; &lt;li&gt;Supports JSON output for easy integration with other tools&lt;/li&gt; &#xA; &lt;li&gt;No elevated privileges are required&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Release&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest auto-generated release binary from &lt;a href=&#34;https://github.com/FourCoreLabs/LolDriverScan/releases&#34;&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure you have Go installed on your system. If not, you can download and install it from the official &lt;a href=&#34;https://golang.org/dl/&#34;&gt;Go website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the &lt;a href=&#34;https://github.com/FourCoreLabs/LolDriverScan&#34;&gt;LolDriverScan&lt;/a&gt; project repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/FourCoreLabs/LolDriverScan.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change into the project directory:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd LolDriverScan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the project&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Run the loldriverscan binary with the following command-line arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.\loldriverscan.exe [-v] [--json &amp;lt;filepath&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;-v or --verbose: Enable verbose mode for detailed output.&lt;br&gt; --json &#xA; &lt;filepath&gt;&#xA;  : Specify a filepath to save the output in JSON format. Use - to output to stdout.&#xA; &lt;/filepath&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the tool with verbose mode enabled:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.\loldriverscan.exe -v&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the tool and save the output in a JSON file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.\loldriverscan.exe -json .\drivers.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the tool and output the JSON result to stdout:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.\loldriverscan.exe -json -&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! If you find any issues or have suggestions for improvements, please open an issue or submit a pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nextdns/nextdns</title>
    <updated>2023-07-18T01:38:07Z</updated>
    <id>tag:github.com,2023-07-18:/nextdns/nextdns</id>
    <link href="https://github.com/nextdns/nextdns" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NextDNS CLI client (DoH Proxy)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NextDNS CLI Client&lt;/h1&gt; &#xA;&lt;p&gt;NextDNS CLI is a command-line tool that allows you to use &lt;a href=&#34;https://nextdns.io&#34;&gt;NextDNS&lt;/a&gt;&#39;s DNS-over-HTTPS (DoH) service with advanced capabilities. Although the most advanced features will only work with NextDNS, this program can work as a client for any DoH provider or a mix of NextDNS + another DNS (split horizon).&lt;/p&gt; &#xA;&lt;p&gt;This CLI is mostly aimed at routers and UNIX based systems, but it is also a great client for Windows and macOS, especially for people who prefer a fully open-source client and don&#39;t mind the lack of a GUI.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/nextdns/nextdns/wiki&#34;&gt;wiki&lt;/a&gt; for installation and usage instructions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ngoduykhanh/wireguard-ui</title>
    <updated>2023-07-18T01:38:07Z</updated>
    <id>tag:github.com,2023-07-18:/ngoduykhanh/wireguard-ui</id>
    <link href="https://github.com/ngoduykhanh/wireguard-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Wireguard web interface&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/ngoduykhanh/wireguard-ui/workflows/wireguard-ui%20build%20release/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;wireguard-ui&lt;/h1&gt; &#xA;&lt;p&gt;A web user interface to manage your WireGuard setup.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Friendly UI&lt;/li&gt; &#xA; &lt;li&gt;Authentication&lt;/li&gt; &#xA; &lt;li&gt;Manage extra client information (name, email, etc)&lt;/li&gt; &#xA; &lt;li&gt;Retrieve client config using QR code / file / email&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/37958026/177041280-e3e7ca16-d4cf-4e95-9920-68af15e780dd.png&#34; alt=&#34;wireguard-ui 0.3.7&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run WireGuard-UI&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️The default username and password are &lt;code&gt;admin&lt;/code&gt;. Please change it to secure your setup.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Using binary file&lt;/h3&gt; &#xA;&lt;p&gt;Download the binary file from the release page and run it directly on the host machine&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./wireguard-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using docker compose&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/ngoduykhanh/wireguard-ui/master/examples/docker-compose&#34;&gt;examples/docker-compose&lt;/a&gt; folder contains example docker-compose files. Choose the example which fits you the most, adjust the configuration for your needs, then run it like below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BASE_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set this variable if you run wireguard-ui under a subpath of your reverse proxy virtual host (e.g. /wireguard))&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BIND_ADDRESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The addresses that can access to the web interface and the port&lt;/td&gt; &#xA;   &lt;td&gt;0.0.0.0:80&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SESSION_SECRET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The secret key used to encrypt the session cookies. Set this to a random value&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_USERNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The username for the login page. Used for db initialization only&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;admin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The password for the user on the login page. Will be hashed automatically. Used for db initialization only&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;admin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_PASSWORD_HASH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The password hash for the user on the login page. (alternative to &lt;code&gt;WGUI_PASSWORD&lt;/code&gt;). Used for db initialization only&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_ENDPOINT_ADDRESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default endpoint address used in global settings where clients should connect to&lt;/td&gt; &#xA;   &lt;td&gt;Resolved to your public ip address&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_FAVICON_FILE_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The file path used as website favicon&lt;/td&gt; &#xA;   &lt;td&gt;Embedded WireGuard logo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_DNS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default DNS servers (comma-separated-list) used in the global settings&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.1.1.1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_MTU&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default MTU used in global settings&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1450&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_PERSISTENT_KEEPALIVE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default persistent keepalive for WireGuard in global settings&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;15&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_FIREWALL_MARK&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default WireGuard firewall mark&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0xca6c&lt;/code&gt; (51820)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_TABLE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default WireGuard table value settings&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_CONFIG_FILE_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default WireGuard config file path used in global settings&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/etc/wireguard/wg0.conf&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_LOG_LEVEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default log level. Possible values: &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;OFF&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;INFO&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_CONF_TEMPLATE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The custom &lt;code&gt;wg.conf&lt;/code&gt; config file template. Please refer to our &lt;a href=&#34;https://github.com/ngoduykhanh/wireguard-ui/raw/master/templates/wg.conf&#34;&gt;default template&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;EMAIL_FROM_ADDRESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The sender email address&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;EMAIL_FROM_NAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The sender name&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;WireGuard UI&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SENDGRID_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The SendGrid api key&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SMTP_HOSTNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The SMTP IP address or hostname&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SMTP_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The SMTP port&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SMTP_USERNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The SMTP username&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SMTP_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The SMTP user password&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SMTP_AUTH_TYPE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The SMTP authentication type. Possible values: &lt;code&gt;PLAIN&lt;/code&gt;, &lt;code&gt;LOGIN&lt;/code&gt;, &lt;code&gt;NONE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;NONE&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SMTP_ENCRYPTION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;the encryption method. Possible values: &lt;code&gt;NONE&lt;/code&gt;, &lt;code&gt;SSL&lt;/code&gt;, &lt;code&gt;SSLTLS&lt;/code&gt;, &lt;code&gt;TLS&lt;/code&gt;, &lt;code&gt;STARTTLS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;STARTTLS&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Defaults for server configuration&lt;/h3&gt; &#xA;&lt;p&gt;These environment variables are used to control the default server settings used when initializing the database.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_SERVER_INTERFACE_ADDRESSES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default interface addresses (comma-separated-list) for the WireGuard server configuration&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10.252.1.0/24&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_SERVER_LISTEN_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default server listen port&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;51820&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_SERVER_POST_UP_SCRIPT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default server post-up script&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_SERVER_POST_DOWN_SCRIPT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default server post-down script&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Defaults for new clients&lt;/h3&gt; &#xA;&lt;p&gt;These environment variables are used to set the defaults used in &lt;code&gt;New Client&lt;/code&gt; dialog.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_DEFAULT_CLIENT_ALLOWED_IPS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated-list of CIDRs for the &lt;code&gt;Allowed IPs&lt;/code&gt; field. (default )&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0.0.0.0/0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_DEFAULT_CLIENT_EXTRA_ALLOWED_IPS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated-list of CIDRs for the &lt;code&gt;Extra Allowed IPs&lt;/code&gt; field. (default empty)&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_DEFAULT_CLIENT_USE_SERVER_DNS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Boolean value [&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;TRUE&lt;/code&gt;]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_DEFAULT_CLIENT_ENABLE_AFTER_CREATION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Boolean value [&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;TRUE&lt;/code&gt;]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Docker only&lt;/h3&gt; &#xA;&lt;p&gt;These environment variables only apply to the docker container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_MANAGE_START&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Start/stop WireGuard when the container is started/stopped&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WGUI_MANAGE_RESTART&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Auto restart WireGuard when we Apply Config changes in the UI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Auto restart WireGuard daemon&lt;/h2&gt; &#xA;&lt;p&gt;WireGuard-UI only takes care of configuration generation. You can use systemd to watch for the changes and restart the service. Following is an example:&lt;/p&gt; &#xA;&lt;h3&gt;Using systemd&lt;/h3&gt; &#xA;&lt;p&gt;Create &lt;code&gt;/etc/systemd/system/wgui.service&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /etc/systemd/system/&#xA;cat &amp;lt;&amp;lt; EOF &amp;gt; wgui.service&#xA;[Unit]&#xA;Description=Restart WireGuard&#xA;After=network.target&#xA;&#xA;[Service]&#xA;Type=oneshot&#xA;ExecStart=/usr/bin/systemctl restart wg-quick@wg0.service&#xA;&#xA;[Install]&#xA;RequiredBy=wgui.path&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create &lt;code&gt;/etc/systemd/system/wgui.path&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /etc/systemd/system/&#xA;cat &amp;lt;&amp;lt; EOF &amp;gt; wgui.path&#xA;[Unit]&#xA;Description=Watch /etc/wireguard/wg0.conf for changes&#xA;&#xA;[Path]&#xA;PathModified=/etc/wireguard/wg0.conf&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apply it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl enable wgui.{path,service}&#xA;systemctl start wgui.{path,service}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using openrc&lt;/h3&gt; &#xA;&lt;p&gt;Create &lt;code&gt;/usr/local/bin/wgui&lt;/code&gt; file and make it executable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd /usr/local/bin/&#xA;cat &amp;lt;&amp;lt; EOF &amp;gt; wgui&#xA;#!/bin/sh&#xA;wg-quick down wg0&#xA;wg-quick up wg0&#xA;EOF&#xA;chmod +x wgui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create &lt;code&gt;/etc/init.d/wgui&lt;/code&gt; file and make it executable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd /etc/init.d/&#xA;cat &amp;lt;&amp;lt; EOF &amp;gt; wgui&#xA;#!/sbin/openrc-run&#xA;&#xA;command=/sbin/inotifyd&#xA;command_args=&#34;/usr/local/bin/wgui /etc/wireguard/wg0.conf:w&#34;&#xA;pidfile=/run/${RC_SVCNAME}.pid&#xA;command_background=yes&#xA;EOF&#xA;chmod +x wgui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apply it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rc-service wgui start&#xA;rc-update add wgui default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;Set &lt;code&gt;WGUI_MANAGE_RESTART=true&lt;/code&gt; to manage Wireguard interface restarts. Using &lt;code&gt;WGUI_MANAGE_START=true&lt;/code&gt; can also replace the function of &lt;code&gt;wg-quick@wg0&lt;/code&gt; service, to start Wireguard at boot, by running the container with &lt;code&gt;restart: unless-stopped&lt;/code&gt;. These settings can also pick up changes to Wireguard Config File Path, after restarting the container. Please make sure you have &lt;code&gt;--cap-add=NET_ADMIN&lt;/code&gt; in your container config to make this feature work.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;h3&gt;Build docker image&lt;/h3&gt; &#xA;&lt;p&gt;Go to the project root directory and run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker build --build-arg=GIT_COMMIT=$(git rev-parse --short HEAD) -t wireguard-ui .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose build --build-arg=GIT_COMMIT=$(git rev-parse --short HEAD)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; A container image is avaialble on &lt;a href=&#34;https://hub.docker.com/r/ngoduykhanh/wireguard-ui&#34;&gt;Docker Hub&lt;/a&gt; which you can pull and use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull ngoduykhanh/wireguard-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build binary file&lt;/h3&gt; &#xA;&lt;p&gt;Prepare the assets directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prepare_assets.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then build your executable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go build -o wireguard-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT. See &lt;a href=&#34;https://github.com/ngoduykhanh/wireguard-ui/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you like the project and want to support it, you can &lt;em&gt;buy me a coffee&lt;/em&gt; ☕&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/khanhngo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>