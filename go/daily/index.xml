<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-17T01:32:10Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bcicen/ctop</title>
    <updated>2025-07-17T01:32:10Z</updated>
    <id>tag:github.com,2025-07-17:/bcicen/ctop</id>
    <link href="https://github.com/bcicen/ctop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Top-like interface for container metrics&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/bcicen/ctop/master/_docs/img/logo.png&#34; alt=&#34;ctop&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/release/bcicen/ctop.svg?sanitize=true&#34; alt=&#34;release&#34; title=&#34;ctop&#34;&gt; &lt;img src=&#34;https://img.shields.io/homebrew/v/ctop.svg?sanitize=true&#34; alt=&#34;homebrew&#34; title=&#34;ctop&#34;&gt; &lt;img src=&#34;https://repology.org/badge/version-for-repo/macports/ctop.svg?header=macports&#34; alt=&#34;macports&#34; title=&#34;ctop&#34;&gt; &lt;img src=&#34;https://img.shields.io/scoop/v/ctop?bucket=main&#34; alt=&#34;scoop&#34; title=&#34;ctop&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Top-like interface for container metrics&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ctop&lt;/code&gt; provides a concise and condensed overview of real-time metrics for multiple containers:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bcicen/ctop/master/_docs/img/grid.gif&#34; alt=&#34;ctop&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;as well as a &lt;a href=&#34;https://raw.githubusercontent.com/bcicen/ctop/master/_docs/single.md&#34;&gt;single container view&lt;/a&gt; for inspecting a specific container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ctop&lt;/code&gt; comes with built-in support for Docker and runC; connectors for other container and cluster systems are planned for future releases.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Fetch the &lt;a href=&#34;https://github.com/bcicen/ctop/releases&#34;&gt;latest release&lt;/a&gt; for your platform:&lt;/p&gt; &#xA;&lt;h4&gt;Debian/Ubuntu&lt;/h4&gt; &#xA;&lt;p&gt;Maintained by a &lt;a href=&#34;https://packages.azlux.fr/&#34;&gt;third party&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install ca-certificates curl gnupg lsb-release&#xA;curl -fsSL https://azlux.fr/repo.gpg.key | sudo gpg --dearmor -o /usr/share/keyrings/azlux-archive-keyring.gpg&#xA;echo \&#xA;  &#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/azlux-archive-keyring.gpg] http://packages.azlux.fr/debian \&#xA;  $(lsb_release -cs) main&#34; | sudo tee /etc/apt/sources.list.d/azlux.list &amp;gt;/dev/null&#xA;sudo apt-get update&#xA;sudo apt-get install docker-ctop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arch&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pacman -S ctop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;ctop&lt;/code&gt; is also available for Arch in the &lt;a href=&#34;https://aur.archlinux.org/packages/ctop-bin/&#34;&gt;AUR&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux (Generic)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo wget https://github.com/bcicen/ctop/releases/download/v0.7.7/ctop-0.7.7-linux-amd64 -O /usr/local/bin/ctop&#xA;sudo chmod +x /usr/local/bin/ctop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;OS X&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install ctop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo port install ctop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo curl -Lo /usr/local/bin/ctop https://github.com/bcicen/ctop/releases/download/v0.7.7/ctop-0.7.7-darwin-amd64&#xA;sudo chmod +x /usr/local/bin/ctop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;ctop&lt;/code&gt; is available in &lt;a href=&#34;https://scoop.sh/&#34;&gt;scoop&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop install ctop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -ti \&#xA;  --name=ctop \&#xA;  --volume /var/run/docker.sock:/var/run/docker.sock:ro \&#xA;  quay.io/vektorlab/ctop:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Build steps can be found &lt;a href=&#34;https://raw.githubusercontent.com/bcicen/ctop/master/_docs/build.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ctop&lt;/code&gt; requires no arguments and uses Docker host variables by default. See &lt;a href=&#34;https://raw.githubusercontent.com/bcicen/ctop/master/_docs/connectors.md&#34;&gt;connectors&lt;/a&gt; for further configuration options.&lt;/p&gt; &#xA;&lt;h3&gt;Config file&lt;/h3&gt; &#xA;&lt;p&gt;While running, use &lt;code&gt;S&lt;/code&gt; to save the current filters, sort field, and other options to a default config path (&lt;code&gt;~/.config/ctop/config&lt;/code&gt; on XDG systems, else &lt;code&gt;~/.ctop&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Config file values will be loaded and applied the next time &lt;code&gt;ctop&lt;/code&gt; is started.&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-a&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;show active containers only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-f &amp;lt;string&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;set an initial filter string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-h&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;display help dialog&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;invert default colors&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-r&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reverse container sort order&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;select initial container sort field&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;output version information and exit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Keybindings&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;&amp;lt;ENTER&amp;gt;&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open container menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;a&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle display of all (running and non-running) containers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;f&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filter displayed containers (&lt;code&gt;esc&lt;/code&gt; to clear when open)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;H&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle ctop header&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;h&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open help dialog&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;s&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Select container sort field&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reverse container sort order&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open single view&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;l&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;View container logs (&lt;code&gt;t&lt;/code&gt; to toggle timestamp when open)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;e&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exec Shell&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;c&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configure columns&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;S&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Save current configuration to file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;kbd&gt;q&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quit ctop&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/veggiemonk/awesome-docker/raw/master/README.md#terminal&#34;&gt;Awesome Docker list&lt;/a&gt; for similar tools to work with Docker.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hypermodeinc/badger</title>
    <updated>2025-07-17T01:32:10Z</updated>
    <id>tag:github.com,2025-07-17:/hypermodeinc/badger</id>
    <link href="https://github.com/hypermodeinc/badger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast key-value DB in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BadgerDB&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/dgraph-io/badger/v4&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/dgraph-io/badger/v4.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/dgraph-io/badger/v4&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/dgraph-io/badger/v4&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcegraph.com/github.com/hypermodeinc/badger?badge&#34;&gt;&lt;img src=&#34;https://sourcegraph.com/github.com/hypermodeinc/badger/-/badge.svg?sanitize=true&#34; alt=&#34;Sourcegraph&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hypermodeinc/badger/actions/workflows/ci-badger-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/hypermodeinc/badger/actions/workflows/ci-badger-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;ci-badger-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hypermodeinc/badger/actions/workflows/ci-badger-bank-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/hypermodeinc/badger/actions/workflows/ci-badger-bank-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;ci-badger-bank-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hypermodeinc/badger/actions/workflows/ci-badger-bank-tests-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/hypermodeinc/badger/actions/workflows/ci-badger-bank-tests-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;ci-badger-bank-tests-nightly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/images/diggy-shadow.png&#34; alt=&#34;Badger mascot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;BadgerDB is an embeddable, persistent and fast key-value (KV) database written in pure Go. It is the underlying database for &lt;a href=&#34;https://github.com/hypermodeinc/dgraph&#34;&gt;Dgraph&lt;/a&gt;, a fast, distributed graph database. It&#39;s meant to be a performant alternative to non-Go-based key-value stores like RocksDB.&lt;/p&gt; &#xA;&lt;h2&gt;Project Status&lt;/h2&gt; &#xA;&lt;p&gt;Badger is stable and is being used to serve data sets worth hundreds of terabytes. Badger supports concurrent ACID transactions with serializable snapshot isolation (SSI) guarantees. A Jepsen-style bank test runs nightly for 8h, with &lt;code&gt;--race&lt;/code&gt; flag and ensures the maintenance of transactional guarantees. Badger has also been tested to work with filesystem level anomalies, to ensure persistence and consistency. Badger is being used by a number of projects which includes Dgraph, Jaeger Tracing, UsenetExpress, and many more.&lt;/p&gt; &#xA;&lt;p&gt;The list of projects using Badger can be found &lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#projects-using-badger&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please consult the &lt;a href=&#34;https://github.com/hypermodeinc/badger/raw/main/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt; for more detailed information on releases.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#badgerdb&#34;&gt;BadgerDB&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#project-status&#34;&gt;Project Status&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#installing&#34;&gt;Installing&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#installing-badger-command-line-tool&#34;&gt;Installing Badger Command Line Tool&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#choosing-a-version&#34;&gt;Choosing a version&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#badger-documentation&#34;&gt;Badger Documentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#resources&#34;&gt;Resources&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#blog-posts&#34;&gt;Blog Posts&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#design&#34;&gt;Design&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#comparisons&#34;&gt;Comparisons&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#benchmarks&#34;&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#projects-using-badger&#34;&gt;Projects Using Badger&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;p&gt;To start using Badger, install Go 1.21 or above. Badger v3 and above needs go modules. From your project, run the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go get github.com/dgraph-io/badger/v4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will retrieve the library.&lt;/p&gt; &#xA;&lt;h4&gt;Installing Badger Command Line Tool&lt;/h4&gt; &#xA;&lt;p&gt;Badger provides a CLI tool which can perform certain operations like offline backup/restore. To install the Badger CLI, retrieve the repository and checkout the desired version. Then run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd badger&#xA;go install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the badger command line utility into your $GOBIN path.&lt;/p&gt; &#xA;&lt;h2&gt;Badger Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Badger Documentation is available at &lt;a href=&#34;https://docs.hypermode.com/badger&#34;&gt;https://docs.hypermode.com/badger&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;Blog Posts&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hypermode.com/blog/badger/&#34;&gt;Introducing Badger: A fast key-value store written natively in Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hypermode.com/blog/alice/&#34;&gt;Make Badger crash resilient with ALICE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hypermode.com/blog/badger-lmdb-boltdb/&#34;&gt;Badger vs LMDB vs BoltDB: Benchmarking key-value databases in Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hypermode.com/blog/badger-txn/&#34;&gt;Concurrent ACID Transactions in Badger&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;Badger was written with these design goals in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Write a key-value database in pure Go.&lt;/li&gt; &#xA; &lt;li&gt;Use latest research to build the fastest KV database for data sets spanning terabytes.&lt;/li&gt; &#xA; &lt;li&gt;Optimize for SSDs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Badger’s design is based on a paper titled &lt;em&gt;&lt;a href=&#34;https://www.usenix.org/system/files/conference/fast16/fast16-papers-lu.pdf&#34;&gt;WiscKey: Separating Keys from Values in SSD-conscious Storage&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Comparisons&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Badger&lt;/th&gt; &#xA;   &lt;th&gt;RocksDB&lt;/th&gt; &#xA;   &lt;th&gt;BoltDB&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design&lt;/td&gt; &#xA;   &lt;td&gt;LSM tree with value log&lt;/td&gt; &#xA;   &lt;td&gt;LSM tree only&lt;/td&gt; &#xA;   &lt;td&gt;B+ tree&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;High Read throughput&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;High Write throughput&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Designed for SSDs&lt;/td&gt; &#xA;   &lt;td&gt;Yes (with latest research &lt;sup&gt;1&lt;/sup&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Not specifically &lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Embeddable&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sorted KV access&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pure Go (no Cgo)&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transactions&lt;/td&gt; &#xA;   &lt;td&gt;Yes, ACID, concurrent with SSI&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes (but non-ACID)&lt;/td&gt; &#xA;   &lt;td&gt;Yes, ACID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Snapshots&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TTL support&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3D access (key-value-version)&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; The &lt;a href=&#34;https://www.usenix.org/system/files/conference/fast16/fast16-papers-lu.pdf&#34;&gt;WISCKEY paper&lt;/a&gt; (on which Badger is based) saw big wins with separating values from keys, significantly reducing the write amplification compared to a typical LSM tree.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt; RocksDB is an SSD optimized version of LevelDB, which was designed specifically for rotating disks. As such RocksDB&#39;s design isn&#39;t aimed at SSDs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt;3&lt;/sup&gt; SSI: Serializable Snapshot Isolation. For more details, see the blog post &lt;a href=&#34;https://hypermode.com/blog/badger-txn/&#34;&gt;Concurrent ACID Transactions in Badger&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt;4&lt;/sup&gt; Badger provides direct access to value versions via its Iterator API. Users can also specify how many versions to keep per key via Options.&lt;/p&gt; &#xA;&lt;h3&gt;Benchmarks&lt;/h3&gt; &#xA;&lt;p&gt;We have run comprehensive benchmarks against RocksDB, Bolt and LMDB. The benchmarking code, and the detailed logs for the benchmarks can be found in the &lt;a href=&#34;https://github.com/dgraph-io/badger-bench&#34;&gt;badger-bench&lt;/a&gt; repo. More explanation, including graphs can be found the blog posts (linked above).&lt;/p&gt; &#xA;&lt;h2&gt;Projects Using Badger&lt;/h2&gt; &#xA;&lt;p&gt;Below is a list of known projects that use Badger:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hypermodeinc/dgraph&#34;&gt;Dgraph&lt;/a&gt; - Distributed graph database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaegertracing/jaeger&#34;&gt;Jaeger&lt;/a&gt; - Distributed tracing platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ipfs/go-ipfs&#34;&gt;go-ipfs&lt;/a&gt; - Go client for the InterPlanetary File System (IPFS), a new hypermedia distribution protocol.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-ego/riot&#34;&gt;Riot&lt;/a&gt; - An open-source, distributed search engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emitter-io/emitter&#34;&gt;emitter&lt;/a&gt; - Scalable, low latency, distributed pub/sub broker with message storage, uses MQTT, gossip and badger.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cube2222/octosql&#34;&gt;OctoSQL&lt;/a&gt; - Query tool that allows you to join, analyse and transform data from multiple databases using SQL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dkron.io/&#34;&gt;Dkron&lt;/a&gt; - Distributed, fault tolerant job scheduling system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smallstep/certificates&#34;&gt;smallstep/certificates&lt;/a&gt; - Step-ca is an online certificate authority for secure, automated certificate management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/celrenheit/sandglass&#34;&gt;Sandglass&lt;/a&gt; - distributed, horizontally scalable, persistent, time sorted message queue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grab/talaria&#34;&gt;TalariaDB&lt;/a&gt; - Grab&#39;s Distributed, low latency time-series database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/salesforce/sloop&#34;&gt;Sloop&lt;/a&gt; - Salesforce&#39;s Kubernetes History Visualization Project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://usenetexpress.com/&#34;&gt;Usenet Express&lt;/a&gt; - Serving over 300TB of data with Badger.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/appleboy/gorush&#34;&gt;gorush&lt;/a&gt; - A push notification server written in Go.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zero-os/0-stor&#34;&gt;0-stor&lt;/a&gt; - Single device object store.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dispatchlabs/disgo&#34;&gt;Dispatch Protocol&lt;/a&gt; - Blockchain protocol for distributed application data analytics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/valinurovam/garagemq&#34;&gt;GarageMQ&lt;/a&gt; - AMQP server written in Go.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://alash3al.github.io/redix/&#34;&gt;RedixDB&lt;/a&gt; - A real-time persistent key-value store with the same redis protocol.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BBVA/raft-badger&#34;&gt;BBVA&lt;/a&gt; - Raft backend implementation using BadgerDB for Hashicorp raft.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Fantom-foundation/go-lachesis&#34;&gt;Fantom&lt;/a&gt; - aBFT Consensus platform for distributed applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/decred/dcrdata&#34;&gt;decred&lt;/a&gt; - An open, progressive, and self-funding cryptocurrency with a system of community-based governance integrated into its blockchain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opennetsys/c3-go&#34;&gt;OpenNetSys&lt;/a&gt; - Create useful dApps in any software language.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/honeytrap/honeytrap&#34;&gt;HoneyTrap&lt;/a&gt; - An extensible and opensource system for running, monitoring and managing honeypots.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/insolar/insolar&#34;&gt;Insolar&lt;/a&gt; - Enterprise-ready blockchain platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iotexproject/iotex-core&#34;&gt;IoTeX&lt;/a&gt; - The next generation of the decentralized network for IoT powered by scalability- and privacy-centric blockchains.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kataras/go-sessions&#34;&gt;go-sessions&lt;/a&gt; - The sessions manager for Go net/http and fasthttp.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mosaicnetworks/babble&#34;&gt;Babble&lt;/a&gt; - BFT Consensus platform for distributed applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jpincas/tormenta&#34;&gt;Tormenta&lt;/a&gt; - Embedded object-persistence layer / simple JSON database for Go projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timshannon/badgerhold&#34;&gt;BadgerHold&lt;/a&gt; - An embeddable NoSQL store for querying Go types built on Badger&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/didil/goblero&#34;&gt;Goblero&lt;/a&gt; - Pure Go embedded persistent job queue backed by BadgerDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.surfline.com&#34;&gt;Surfline&lt;/a&gt; - Serving global wave and weather forecast data with Badger.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mosuka/cete&#34;&gt;Cete&lt;/a&gt; - Simple and highly available distributed key-value store built on Badger. Makes it easy bringing up a cluster of Badger with Raft consensus algorithm by hashicorp/raft.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://volument.com/&#34;&gt;Volument&lt;/a&gt; - A new take on website analytics backed by Badger.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kvdb.io/&#34;&gt;KVdb&lt;/a&gt; - Hosted key-value store and serverless platform built on top of Badger.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/asad-awadia/terminotes&#34;&gt;Terminotes&lt;/a&gt; - Self hosted notes storage and search server - storage powered by BadgerDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pyroscope-io/pyroscope&#34;&gt;Pyroscope&lt;/a&gt; - Open source continuous profiling platform built with BadgerDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bgokden/veri&#34;&gt;Veri&lt;/a&gt; - A distributed feature store optimized for Search and Recommendation tasks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MikkelHJuul/bIter&#34;&gt;bIter&lt;/a&gt; - A library and Iterator interface for working with the &lt;code&gt;badger.Iterator&lt;/code&gt;, simplifying from-to, and prefix mechanics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MikkelHJuul/ld&#34;&gt;ld&lt;/a&gt; - (Lean Database) A very simple gRPC-only key-value database, exposing BadgerDB with key-range scanning semantics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/darkweak/Souin&#34;&gt;Souin&lt;/a&gt; - A RFC compliant HTTP cache with lot of other features based on Badger for the storage. Compatible with all existing reverse-proxies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xuperchain/xupercore&#34;&gt;Xuperchain&lt;/a&gt; - A highly flexible blockchain architecture with great transaction performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qichengzx/m2&#34;&gt;m2&lt;/a&gt; - A simple http key/value store based on the raft protocol.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ChainSafe/chaindb&#34;&gt;chaindb&lt;/a&gt; - A blockchain storage layer used by &lt;a href=&#34;https://chainsafe.github.io/gossamer/&#34;&gt;Gossamer&lt;/a&gt;, a Go client for the &lt;a href=&#34;https://polkadot.network/&#34;&gt;Polkadot Network&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vitalvas/vxdb&#34;&gt;vxdb&lt;/a&gt; - Simple schema-less Key-Value NoSQL database with simplest API interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opacity/storage-node&#34;&gt;Opacity&lt;/a&gt; - Backend implementation for the Opacity storage project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vaccovecrana/vephar&#34;&gt;Vephar&lt;/a&gt; - A minimal key/value store using hashicorp-raft for cluster coordination and Badger for data storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nlnwa/gowarcserver&#34;&gt;gowarcserver&lt;/a&gt; - Open-source server for warc files. Can be used in conjunction with pywb&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onflow/flow-go&#34;&gt;flow-go&lt;/a&gt; - A fast, secure, and developer-friendly blockchain built to support the next generation of games, apps and the digital assets that power them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wrgl.co&#34;&gt;Wrgl&lt;/a&gt; - A data version control system that works like Git but specialized to store and diff CSV.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/loggie-io/loggie&#34;&gt;Loggie&lt;/a&gt; - A lightweight, cloud-native data transfer agent and aggregator.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rfyiamcool/raft-badger&#34;&gt;raft-badger&lt;/a&gt; - raft-badger implements LogStore and StableStore Interface of hashcorp/raft. it is used to store raft log and metadata of hashcorp/raft.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/janelia-flyem/dvid&#34;&gt;DVID&lt;/a&gt; - A dataservice for branched versioning of a variety of data types. Originally created for large-scale brain reconstructions in Connectomics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tauraamui/kvs&#34;&gt;KVS&lt;/a&gt; - A library for making it easy to persist, load and query full structs into BadgerDB, using an ownership hierarchy model.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Boc-chi-no/LLS&#34;&gt;LLS&lt;/a&gt; - LLS is an efficient URL Shortener that can be used to shorten links and track link usage. Support for BadgerDB and MongoDB. Improved performance by more than 30% when using BadgerDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/treeverse/lakeFS&#34;&gt;lakeFS&lt;/a&gt; - lakeFS is an open-source data version control that transforms your object storage to Git-like repositories. lakeFS uses BadgerDB for its underlying local metadata KV store implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smegg99/Goptivum&#34;&gt;Goptivum&lt;/a&gt; - Goptivum is a better frontend and API for the Vulcan Optivum schedule program&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mftlabs.io/actionmanager&#34;&gt;ActionManager&lt;/a&gt; - A dynamic entity manager based on rjsf schema and badger db&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thisisdevelopment/mightymap&#34;&gt;MightyMap&lt;/a&gt; - Mightymap: Conveys both robustness and high capability, fitting for a powerful concurrent map.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/link-society/flowg&#34;&gt;FlowG&lt;/a&gt; - A low-code log processing facility&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blinklabs-io/bluefin&#34;&gt;Bluefin&lt;/a&gt; - Bluefin is a TUNA Proof of Work miner for the Fortuna smart contract on the Cardano blockchain&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blinklabs-io/cdnsd&#34;&gt;cDNSd&lt;/a&gt; - A Cardano blockchain backed DNS server daemon&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blinklabs-io/dingo&#34;&gt;Dingo&lt;/a&gt; - A Cardano blockchain data node&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are using Badger in a project please send a pull request to add it to the list.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re interested in contributing to Badger see &lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/badger/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please use &lt;a href=&#34;https://github.com/hypermodeinc/badger/issues&#34;&gt;Github issues&lt;/a&gt; for filing bugs.&lt;/li&gt; &#xA; &lt;li&gt;Please use &lt;a href=&#34;https://discuss.hypermode.com&#34;&gt;discuss.hypermode.com&lt;/a&gt; for questions, discussions, and feature requests.&lt;/li&gt; &#xA; &lt;li&gt;Follow us on Twitter &lt;a href=&#34;https://twitter.com/hypermodeinc&#34;&gt;@hypermodeinc&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>