<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-12T01:28:04Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mylxsw/aidea-server</title>
    <updated>2023-09-12T01:28:04Z</updated>
    <id>tag:github.com,2023-09-12:/mylxsw/aidea-server</id>
    <link href="https://github.com/mylxsw/aidea-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AIdea 是一款支持 GPT 以及国产大语言模型通义千问、文心一言等，支持 Stable Diffusion 文生图、图生图、 SDXL1.0、超分辨率、图片上色的全能型 APP。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AIdea 服务端 - AI 聊天、协作、图像生成&lt;/h1&gt; &#xA;&lt;p&gt;一款集成了主流大语言模型以及绘图模型的 APP 服务端，使用 Golang 开发，代码完全开源，支持以下功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持 GPT-3.5/4 问答聊天&lt;/li&gt; &#xA; &lt;li&gt;支持国产模型：通义千问，文心一言、讯飞星火&lt;/li&gt; &#xA; &lt;li&gt;支持开源模型：Llama2 ，ChatGLM2 ，AquilaChat 7B ，Bloomz 7B 等，后续还将开放更多&lt;/li&gt; &#xA; &lt;li&gt;支持文生图、图生图、超分辨率、黑白图片上色等功能，集成 Stable Diffusion 模型，支持 SDXL 1.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;开源代码：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;客户端：&lt;a href=&#34;https://github.com/mylxsw/aidea&#34;&gt;https://github.com/mylxsw/aidea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;服务端：&lt;a href=&#34;https://github.com/mylxsw/aidea-server&#34;&gt;https://github.com/mylxsw/aidea-server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;技术交流&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;微信技术交流群：3 个群都已满员，添加微信号 &lt;code&gt;x-prometheus&lt;/code&gt; 为好友，拉你进群&lt;/p&gt; &lt;img src=&#34;https://github.com/mylxsw/aidea/assets/2330911/655601c1-9371-4460-9657-c58521260336&#34; width=&#34;200&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;微信公众号&lt;/p&gt; &lt;img src=&#34;https://github.com/mylxsw/aidea-server/assets/2330911/376a3b9f-eacd-45c6-9630-39eb720ba097&#34; width=&#34;500&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;电报群：&lt;a href=&#34;https://t.me/aideachat&#34;&gt;点此加入&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;APP 下载安装地址&lt;/h2&gt; &#xA;&lt;p&gt;Android/IOS APP：&lt;a href=&#34;https://aidea.aicode.cc/&#34;&gt;https://aidea.aicode.cc/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;IOS 国区目前不可用，除此之外所有区域都可以下载。&lt;/p&gt; &#xA; &lt;p&gt;2023 年 9 月 4 日发现国区被下架后，非国区 IOS 版本可能无法完成应用内购（提示“你的购买无法完成”，但是也有人能够成功支付），暂时无法充值，最新进展在这里 &lt;a href=&#34;https://github.com/mylxsw/aidea/issues/16&#34;&gt;issue#16&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Mac/Windows 桌面端：&lt;a href=&#34;https://github.com/mylxsw/aidea/releases&#34;&gt;https://github.com/mylxsw/aidea/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Web 端：&lt;a href=&#34;https://web.aicode.cc/&#34;&gt;https://web.aicode.cc/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;福利&lt;/h2&gt; &#xA;&lt;p&gt;目前我的 OpenAI 账户还有大约 4900+ 美金的额度，为了感谢各位的关注，在 2023 年 11 月 1 日前（4900 美金额度消耗完为止），GPT-4 使用价格低至 每 1K Token 只需要 10 个智慧果。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;相当于 0.1 元 / 1000 Token，OpenAI 官方价格为输入 0.21 元，输出 0.42 元。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;关于代码&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;目前代码注释、技术文档还比较少，后续有时间会进行补充，敬请见谅。另外以下几点请大家注意，以免造成困扰：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;代码中 &lt;code&gt;Room&lt;/code&gt;，&lt;code&gt;顾问团&lt;/code&gt; 均代表 &lt;code&gt;数字人&lt;/code&gt;，因项目经过多次改版和迭代，经历了 &lt;code&gt;房间&lt;/code&gt; -&amp;gt; &lt;code&gt;顾问团&lt;/code&gt; -&amp;gt; &lt;code&gt;数字人&lt;/code&gt; 的名称调整&lt;/li&gt; &#xA;  &lt;li&gt;代码中 v1 版本的 &lt;code&gt;创作岛&lt;/code&gt; 与 v2 版本截然不同，其中 v1 版本服务于 App 1.0.1 及之前版本，从 1.0.2 开始，这部分不再使用，所以就有了 v2 版本&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;项目所用的框架&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mylxsw/glacier&#34;&gt;Glacier Framework&lt;/a&gt;： 自研的一款支持依赖注入的模块化的应用开发框架，它以 &lt;a href=&#34;https://github.com/mylxsw/go-ioc&#34;&gt;go-ioc&lt;/a&gt; 依赖注入容器核心，为 Go 应用开发解决了依赖传递和模块化的问题&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mylxsw/eloquent&#34;&gt;Eloquent ORM&lt;/a&gt; 自研的一款基于代码生成的数据库 ORM 框架，它的设计灵感来源于著名的 PHP 开发框架 Laravel，支持 MySQL 等数据库&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;代码结构如下&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;目录&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;api&lt;/td&gt; &#xA;   &lt;td&gt;对外公开的 API 接口，控制器在这里实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;config&lt;/td&gt; &#xA;   &lt;td&gt;配置定义、管理&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;migrate&lt;/td&gt; &#xA;   &lt;td&gt;数据库迁移文件，SQL 文件&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/ai&lt;/td&gt; &#xA;   &lt;td&gt;不同厂商的 AI 模型接口实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/ai/chat&lt;/td&gt; &#xA;   &lt;td&gt;聊天模型抽象接口，所有聊天模型都在这里封装为兼容 OpenAI Chat Stream 协议的实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/aliyun&lt;/td&gt; &#xA;   &lt;td&gt;阿里云短信、内容安全服务实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/coins&lt;/td&gt; &#xA;   &lt;td&gt;服务定价、收费策略&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/dingding&lt;/td&gt; &#xA;   &lt;td&gt;钉钉通知机器人&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/helper&lt;/td&gt; &#xA;   &lt;td&gt;部分助手函数&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/jobs&lt;/td&gt; &#xA;   &lt;td&gt;定时任务，用户每日智慧果消耗额度统计等&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/mail&lt;/td&gt; &#xA;   &lt;td&gt;邮件发送&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/payment&lt;/td&gt; &#xA;   &lt;td&gt;在线支付服务实现，如支付宝，Apple&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/proxy&lt;/td&gt; &#xA;   &lt;td&gt;Socks5 代理实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/queue&lt;/td&gt; &#xA;   &lt;td&gt;任务队列实现，所有异步处理的任务都在这里定义&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/queue/consumer&lt;/td&gt; &#xA;   &lt;td&gt;任务队列消费者&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/rate&lt;/td&gt; &#xA;   &lt;td&gt;流控实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/redis&lt;/td&gt; &#xA;   &lt;td&gt;Redis 实例&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/repo&lt;/td&gt; &#xA;   &lt;td&gt;数据模型层，封装了对数据库的操作&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/repo/model&lt;/td&gt; &#xA;   &lt;td&gt;数据模型定义，使用了 &lt;a href=&#34;https://github.com/mylxsw/eloquent&#34;&gt;mylxsw/eloquent&lt;/a&gt; 来创建数据模型&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/service&lt;/td&gt; &#xA;   &lt;td&gt;Service 层，部分不适合放在 Controller 和 Repo 层的代码，在这里进行封装&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/sms&lt;/td&gt; &#xA;   &lt;td&gt;统一的短信服务封装，对上层业务屏蔽了底层的短信服务商实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/tencent&lt;/td&gt; &#xA;   &lt;td&gt;腾讯语音转文本、短信服务实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/token&lt;/td&gt; &#xA;   &lt;td&gt;JWT Token&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/uploader&lt;/td&gt; &#xA;   &lt;td&gt;基于七牛云存储实现的文件上传下载&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/voice&lt;/td&gt; &#xA;   &lt;td&gt;基于七牛云的文本转语音实现，暂时未启用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internal/youdao&lt;/td&gt; &#xA;   &lt;td&gt;有道翻译服务 API 实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;config.yaml&lt;/td&gt; &#xA;   &lt;td&gt;配置文件示例&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nginx.conf&lt;/td&gt; &#xA;   &lt;td&gt;Nginx 配置示例&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;systemd.service&lt;/td&gt; &#xA;   &lt;td&gt;Systemd 服务配置示例&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;项目编译：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build -o build/debug/aidea-server cmd/main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;服务端部署&lt;/h2&gt; &#xA;&lt;p&gt;如果你不想使用托管的云服务，可以自己部署服务端，&lt;a href=&#34;https://raw.githubusercontent.com/mylxsw/aidea-server/main/docs/deploy.md&#34;&gt;部署请看这里&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;如果对你有帮助，请我喝杯酒吧&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;微信&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;支付宝&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/mylxsw/aidea/assets/2330911/46e2242b-17bc-41ff-bebe-b5cc466b7f17&#34; alt=&#34;image&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/mylxsw/aidea/assets/2330911/f3c85d4a-bea8-4a76-b582-c673613f76cb&#34; alt=&#34;image&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#mylxsw/aidea-server&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=mylxsw/aidea-server&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=mylxsw/aidea-server&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=mylxsw/aidea-server&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2023, mylxsw&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Shpota/goxygen</title>
    <updated>2023-09-12T01:28:04Z</updated>
    <id>tag:github.com,2023-09-12:/Shpota/goxygen</id>
    <link href="https://github.com/Shpota/goxygen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate a modern Web project with Go and Angular, React, or Vue in seconds 🎲&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README.md&#34;&gt; &lt;img height=&#34;25px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/gb.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_zh.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/cn.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_ua.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/ua.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_ko.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/kr.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_pt-br.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/br.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_by.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://raw.githubusercontent.com/Shpota/goxygen/main/.github/flag-by.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_fr.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/fr.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_es.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/es.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_jp.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/jp.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_id.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/id.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_he.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/il.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/tree/main/.github/README_tr.md&#34;&gt; &lt;img height=&#34;20px&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/tr.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;br&gt; Goxygen &lt;a href=&#34;https://github.com/Shpota/goxygen/actions?query=workflow%3Abuild&#34;&gt; &lt;img src=&#34;https://github.com/Shpota/goxygen/workflows/build/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/shpota/goxygen?color=green&amp;amp;label=version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://gitter.im/goxygen/community&#34;&gt; &lt;img src=&#34;https://badges.gitter.im/goxygen/community.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Shpota/goxygen/pulls&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Shpota/goxygen/templates/vue.webapp/src/assets/logo.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;230px&#34; alt=&#34;goxygen logo&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Generate a Web project with Go and Angular, React or Vue.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Goxygen aims at saving your time while setting up a new project. It creates a skeleton of an application with all configuration done for you. You can start implementing your business logic straight away. Goxygen generates back end Go code, connects it with front end components, provides a Dockerfile for the application and creates docker-compose files for convenient run in development and production environments.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td colspan=&#34;4&#34;&gt;&lt;b&gt;Supported Technologies&lt;/b&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Front End&lt;/td&gt; &#xA;   &lt;td&gt;Angular&lt;/td&gt; &#xA;   &lt;td&gt;React&lt;/td&gt; &#xA;   &lt;td&gt;Vue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt;Back End&lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt;Go&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt;Database&lt;/td&gt; &#xA;   &lt;td&gt;MongoDB&lt;/td&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;You need to have Go 1.11 or newer on your machine.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Go 1.17 and later:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;go run github.com/shpota/goxygen@latest init my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Older versions of Go&lt;/summary&gt; &#xA; &lt;h3&gt;Go 1.16&lt;/h3&gt; &#xA; &lt;p&gt;Set the &lt;code&gt;GO111MODULE&lt;/code&gt; environment variable to &lt;code&gt;auto&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;export GO111MODULE=auto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Run&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;go get -u github.com/shpota/goxygen&#xA;go run github.com/shpota/goxygen init my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Go 1.11 - 1.15&lt;/h3&gt; &#xA; &lt;p&gt;Run&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;go get -u github.com/shpota/goxygen&#xA;go run github.com/shpota/goxygen init my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;This generates a project in &lt;code&gt;my-app&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;By default, it will use React and MongoDB. You can select a different front end framework and a database using &lt;code&gt;--frontend&lt;/code&gt; and &lt;code&gt;--db&lt;/code&gt; flags. For instance, this command will create a project with Vue and PostgreSQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;go run github.com/shpota/goxygen@latest init --frontend vue --db postgres my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;--frontend&lt;/code&gt; flag accepts &lt;code&gt;angular&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;vue&lt;/code&gt;. The &lt;code&gt;--db&lt;/code&gt; flag accepts &lt;code&gt;mongo&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt; and &lt;code&gt;postgres&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The generated project is ready to run with &lt;code&gt;docker-compose&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd my-app&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the build is completed, the application is accessible on &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find more details on how to work with the generated project in its README file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Shpota/goxygen/main/showcase.gif&#34; alt=&#34;Showcase&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Structure of a generated project (React/MongoDB example)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;my-app&#xA;├── server                   # Go project files&#xA;│   ├── db                   # MongoDB communications&#xA;│   ├── model                # domain objects&#xA;│   ├── web                  # REST APIs, web server&#xA;│   ├── server.go            # the starting point of the server&#xA;│   └── go.mod               # server dependencies&#xA;├── webapp&#xA;│   ├── public               # icons, static files, and index.html&#xA;│   ├── src&#xA;│   │   ├── App.js           # the main React component&#xA;│   │   ├── App.css          # App component-specific styles&#xA;│   │   ├── index.js         # the entry point of the application&#xA;│   │   └── index.css        # global styles&#xA;│   ├── package.json         # front end dependencies&#xA;│   ├── .env.development     # holds API endpoint for dev environment&#xA;│   └── .env.production      # API endpoint for prod environment&#xA;├── Dockerfile               # builds back end and front end together&#xA;├── docker-compose.yml       # prod environment deployment descriptor&#xA;├── docker-compose-dev.yml   # runs local MongoDB for development needs&#xA;├── init-db.js               # creates a MongoDB collection with test data&#xA;├── .dockerignore            # specifies files ignored in Docker builds&#xA;├── .gitignore&#xA;└── README.md                # guide on how to use the generated repo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Files such as unit tests or sample components are not included here for simplicity.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Goxygen generates a basic structure of a project and doesn&#39;t force you to use a specific set of tools. That&#39;s why it doesn&#39;t bring unneeded dependencies to your project. It uses only a database driver on the back end side and &lt;a href=&#34;https://github.com/axios/axios&#34;&gt;axios&lt;/a&gt; in React and Vue projects. Angular projects use only Angular specific libraries.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you found a bug or have an idea on how to improve the project &lt;a href=&#34;https://github.com/Shpota/goxygen/issues&#34;&gt;open an issue&lt;/a&gt; and we will fix it as soon as possible. You can also propose your changes via a Pull Request. Fork the repository, make changes, send us a pull request and we&#39;ll review it shortly. We also have a &lt;a href=&#34;https://gitter.im/goxygen/community&#34;&gt;Gitter chat&lt;/a&gt; where we discuss all the changes.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Goxygen&#39;s logo was created by &lt;a href=&#34;https://twitter.com/egonelbre&#34;&gt;Egon Elbre&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>