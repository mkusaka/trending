<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-27T01:32:10Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>containerd/nerdctl</title>
    <updated>2022-12-27T01:32:10Z</updated>
    <id>tag:github.com,2022-12-27:/containerd/nerdctl</id>
    <link href="https://github.com/containerd/nerdctl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;contaiNERD CTL - Docker-compatible CLI for containerd, with support for Compose, Rootless, eStargz, OCIcrypt, IPFS, ...&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/containerd/nerdctl/releases&#34;&gt;[‚¨áÔ∏è &lt;strong&gt;Download]&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#command-reference&#34;&gt;[üìñ &lt;strong&gt;Command reference]&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/faq.md&#34;&gt;[‚ùì&lt;strong&gt;FAQs &amp;amp; Troubleshooting]&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#additional-documents&#34;&gt;[üìö &lt;strong&gt;Additional documents]&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;nerdctl: Docker-compatible CLI for containerd&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;nerdctl&lt;/code&gt; is a Docker-compatible CLI for &lt;a href=&#34;https://containerd.io&#34;&gt;contai&lt;strong&gt;nerd&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ Same UI/UX as &lt;code&gt;docker&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ Supports Docker Compose (&lt;code&gt;nerdctl compose up&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ [Optional] Supports &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/rootless.md&#34;&gt;rootless mode, without slirp overhead (bypass4netns)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ [Optional] Supports lazy-pulling (&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/stargz.md&#34;&gt;Stargz&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/nydus.md&#34;&gt;Nydus&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/overlaybd.md&#34;&gt;OverlayBD&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ [Optional] Supports &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ocicrypt.md&#34;&gt;encrypted images (ocicrypt)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ [Optional] Supports &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;P2P image distribution (IPFS)&lt;/a&gt; (*1)&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ [Optional] Supports &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/cosign.md&#34;&gt;container image signing and verifying (cosign)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;nerdctl is a &lt;strong&gt;non-core&lt;/strong&gt; sub-project of containerd.&lt;/p&gt; &#xA;&lt;p&gt;*1: P2P image distribution (IPFS) is completely optional. Your host is NOT connected to any P2P network, unless you opt in to &lt;a href=&#34;https://docs.ipfs.io/install/&#34;&gt;install and run IPFS daemon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;To run a container with the default &lt;code&gt;bridge&lt;/code&gt; CNI network (10.4.0.0/24):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# nerdctl run -it --rm alpine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build an image using BuildKit:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# nerdctl build -t foo /some-dockerfile-directory&#xA;# nerdctl run -it --rm foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build and send output to a local directory using BuildKit:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# nerdctl build -o type=local,dest=. /some-dockerfile-directory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run containers from &lt;code&gt;docker-compose.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# nerdctl compose -f ./examples/compose-wordpress/docker-compose.yaml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/examples/compose-wordpress&#34;&gt;&lt;code&gt;./examples/compose-wordpress&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;To list local Kubernetes containers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# nerdctl --namespace k8s.io ps -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build an image for local Kubernetes without using registry:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# nerdctl --namespace k8s.io build -t foo /some-dockerfile-directory&#xA;# kubectl apply -f - &amp;lt;&amp;lt;EOF&#xA;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: foo&#xA;spec:&#xA;  containers:&#xA;    - name: foo&#xA;      image: foo&#xA;      imagePullPolicy: Never&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load an image archive (&lt;code&gt;docker save&lt;/code&gt; format or OCI format) into local Kubernetes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# nerdctl --namespace k8s.io load &amp;lt; /path/to/image.tar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rootless mode&lt;/h3&gt; &#xA;&lt;p&gt;To launch rootless containerd:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ containerd-rootless-setuptool.sh install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run a container with rootless containerd:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ nerdctl run -d -p 8080:80 --name nginx nginx:alpine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/rootless.md&#34;&gt;&lt;code&gt;./docs/rootless.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Binaries are available here: &lt;a href=&#34;https://github.com/containerd/nerdctl/releases&#34;&gt;https://github.com/containerd/nerdctl/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In addition to containerd, the following components should be installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containernetworking/plugins&#34;&gt;CNI plugins&lt;/a&gt;: for using &lt;code&gt;nerdctl run&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;v1.1.0 or later is highly recommended. Older versions require extra &lt;a href=&#34;https://github.com/AkihiroSuda/cni-isolation&#34;&gt;CNI isolation plugin&lt;/a&gt; for isolating bridge networks (&lt;code&gt;nerdctl network create&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/moby/buildkit&#34;&gt;BuildKit&lt;/a&gt; (OPTIONAL): for using &lt;code&gt;nerdctl build&lt;/code&gt;. BuildKit daemon (&lt;code&gt;buildkitd&lt;/code&gt;) needs to be running. See also &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/build.md&#34;&gt;the document about setting up BuildKit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rootless-containers/rootlesskit&#34;&gt;RootlessKit&lt;/a&gt; and &lt;a href=&#34;https://github.com/rootless-containers/slirp4netns&#34;&gt;slirp4netns&lt;/a&gt; (OPTIONAL): for &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/rootless.md&#34;&gt;Rootless mode&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RootlessKit needs to be v0.10.0 or later. v0.14.1 or later is recommended.&lt;/li&gt; &#xA;   &lt;li&gt;slirp4netns needs to be v0.4.0 or later. v1.1.7 or later is recommended.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These dependencies are included in &lt;code&gt;nerdctl-full-&amp;lt;VERSION&amp;gt;-&amp;lt;OS&amp;gt;-&amp;lt;ARCH&amp;gt;.tar.gz&lt;/code&gt;, but not included in &lt;code&gt;nerdctl-&amp;lt;VERSION&amp;gt;-&amp;lt;OS&amp;gt;-&amp;lt;ARCH&amp;gt;.tar.gz&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Brew&lt;/h3&gt; &#xA;&lt;p&gt;On Linux systems you can install nerdctl via &lt;a href=&#34;https://brew.sh&#34;&gt;brew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install nerdctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is currently not supported for macOS. The section below shows how to install on macOS using brew.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lima-vm/lima&#34;&gt;Lima&lt;/a&gt; project provides Linux virtual machines for macOS, with built-in integration for nerdctl.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ brew install lima&#xA;$ limactl start&#xA;$ lima nerdctl run -d --name nginx -p 127.0.0.1:8080:80 nginx:alpine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FreeBSD&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/freebsd.md&#34;&gt;&lt;code&gt;./docs/freebsd.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux containers: Known to work on WSL2&lt;/li&gt; &#xA; &lt;li&gt;Windows containers: experimental support for Windows (see below for features that are currently known to work)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;To run containerd and nerdctl inside Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t nerdctl .&#xA;docker run -it --rm --privileged nerdctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;The goal of &lt;code&gt;nerdctl&lt;/code&gt; is to facilitate experimenting the cutting-edge features of containerd that are not present in Docker (see below).&lt;/p&gt; &#xA;&lt;p&gt;Note that competing with Docker is &lt;em&gt;not&lt;/em&gt; the goal of &lt;code&gt;nerdctl&lt;/code&gt;. Those cutting-edge features are expected to be eventually available in Docker as well.&lt;/p&gt; &#xA;&lt;p&gt;Also, &lt;code&gt;nerdctl&lt;/code&gt; might be potentially useful for debugging Kubernetes clusters, but it is not the primary goal.&lt;/p&gt; &#xA;&lt;h2&gt;Features present in &lt;code&gt;nerdctl&lt;/code&gt; but not present in Docker&lt;/h2&gt; &#xA;&lt;p&gt;Major:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On-demand image pulling (lazy-pulling) using &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/stargz.md&#34;&gt;Stargz&lt;/a&gt;/&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/nydus.md&#34;&gt;Nydus&lt;/a&gt;/&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/overlaybd.md&#34;&gt;OverlayBD&lt;/a&gt; Snapshotter: &lt;code&gt;nerdctl --snapshotter=stargz|nydus|overlaybd run IMAGE&lt;/code&gt; .&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ocicrypt.md&#34;&gt;Image encryption and decryption using ocicrypt (imgcrypt)&lt;/a&gt;: &lt;code&gt;nerdctl image (encrypt|decrypt) SRC DST&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;P2P image distribution using IPFS&lt;/a&gt;: &lt;code&gt;nerdctl run ipfs://CID&lt;/code&gt; . P2P image distribution (IPFS) is completely optional. Your host is NOT connected to any P2P network, unless you opt in to &lt;a href=&#34;https://docs.ipfs.io/install/&#34;&gt;install and run IPFS daemon&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Recursive read-only (RRO) bind-mount: &lt;code&gt;nerdctl run -v /mnt:/mnt:rro&lt;/code&gt; (make children such as &lt;code&gt;/mnt/usb&lt;/code&gt; to be read-only, too). Requires kernel &amp;gt;= 5.12, and crun &amp;gt;= 1.4 or runc &amp;gt;= 1.1 (PR &lt;a href=&#34;https://github.com/opencontainers/runc/pull/3272&#34;&gt;#3272&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/cosign.md&#34;&gt;Cosign integration&lt;/a&gt;: &lt;code&gt;nerdctl pull --verify=cosign&lt;/code&gt; and &lt;code&gt;nerdctl push --sign=cosign&lt;/code&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/cosign.md#cosign-in-compose&#34;&gt;in Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/rootless.md&#34;&gt;Accelerated rootless containers using bypass4netns&lt;/a&gt;: &lt;code&gt;nerdctl run --label nerdctl/bypass4netns=true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Minor:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Namespacing: &lt;code&gt;nerdctl --namespace=&amp;lt;NS&amp;gt; ps&lt;/code&gt; . (NOTE: All Kubernetes containers are in the &lt;code&gt;k8s.io&lt;/code&gt; containerd namespace regardless to Kubernetes namespaces)&lt;/li&gt; &#xA; &lt;li&gt;Exporting Docker/OCI dual-format archives: &lt;code&gt;nerdctl save&lt;/code&gt; .&lt;/li&gt; &#xA; &lt;li&gt;Importing OCI archives as well as Docker archives: &lt;code&gt;nerdctl load&lt;/code&gt; .&lt;/li&gt; &#xA; &lt;li&gt;Specifying a non-image rootfs: &lt;code&gt;nerdctl run -it --rootfs &amp;lt;ROOTFS&amp;gt; /bin/sh&lt;/code&gt; . The CLI syntax conforms to Podman convention.&lt;/li&gt; &#xA; &lt;li&gt;Connecting a container to multiple networks at once: &lt;code&gt;nerdctl run --net foo --net bar&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Running &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/freebsd.md&#34;&gt;FreeBSD jails&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Better multi-platform support, e.g., &lt;code&gt;nerdctl pull --all-platforms IMAGE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Applying an (existing) AppArmor profile to rootless containers: &lt;code&gt;nerdctl run --security-opt apparmor=&amp;lt;PROFILE&amp;gt;&lt;/code&gt;. Use &lt;code&gt;sudo nerdctl apparmor load&lt;/code&gt; to load the &lt;code&gt;nerdctl-default&lt;/code&gt; profile.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Trivial:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Inspecting raw OCI config: &lt;code&gt;nerdctl container inspect --mode=native&lt;/code&gt; .&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Similar tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/containerd/containerd/tree/main/cmd/ctr&#34;&gt;&lt;code&gt;ctr&lt;/code&gt;&lt;/a&gt;: incompatible with Docker CLI, and not friendly to users. Notably, &lt;code&gt;ctr&lt;/code&gt; lacks the equivalents of the following nerdctl commands:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;nerdctl run -p &amp;lt;PORT&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;nerdctl run --restart=always --net=bridge&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;nerdctl pull&lt;/code&gt; with &lt;code&gt;~/.docker/config.json&lt;/code&gt; and credential helper binaries such as &lt;code&gt;docker-credential-ecr-login&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;nerdctl logs&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;nerdctl build&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;nerdctl compose up&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/cri-tools&#34;&gt;&lt;code&gt;crictl&lt;/code&gt;&lt;/a&gt;: incompatible with Docker CLI, not friendly to users, and does not support non-CRI features&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rancher/k3c/tree/v0.2.1&#34;&gt;k3c v0.2 (abandoned)&lt;/a&gt;: needs an extra daemon, and does not support non-CRI features&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rancher/kim&#34;&gt;Rancher Kim (nee k3c v0.3)&lt;/a&gt;: needs Kubernetes, and only focuses on image management commands such as &lt;code&gt;kim build&lt;/code&gt; and &lt;code&gt;kim push&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alibaba/pouch&#34;&gt;PouchContainer (abandoned?)&lt;/a&gt;: needs an extra daemon&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developer guide&lt;/h2&gt; &#xA;&lt;p&gt;nerdctl is a containerd &lt;strong&gt;non-core&lt;/strong&gt; sub-project, licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;. As a containerd non-core sub-project, you will find the:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containerd/project/raw/main/GOVERNANCE.md&#34;&gt;Project governance&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/MAINTAINERS&#34;&gt;Maintainers&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;and &lt;a href=&#34;https://github.com/containerd/project/raw/main/CONTRIBUTING.md&#34;&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;information in our &lt;a href=&#34;https://github.com/containerd/project&#34;&gt;&lt;code&gt;containerd/project&lt;/code&gt;&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling nerdctl from source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips: You should make your Go toolchain newer than 1.17.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Using &lt;code&gt;go install github.com/containerd/nerdctl/cmd/nerdctl&lt;/code&gt; is possible, but unrecommended because it does not fill version strings printed in &lt;code&gt;nerdctl version&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Test suite&lt;/h3&gt; &#xA;&lt;h4&gt;Running unit tests&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;go test -v ./pkg/...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Running integration test suite against nerdctl&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;go test -exec sudo -v ./cmd/nerdctl/...&lt;/code&gt; after &lt;code&gt;make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For testing rootless mode, &lt;code&gt;-exec sudo&lt;/code&gt; is not needed.&lt;/p&gt; &#xA;&lt;p&gt;To run tests in a container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t test-integration --target test-integration .&#xA;docker run -t --rm --privileged test-integration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running integration test suite against Docker&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;go test -exec sudo -v ./cmd/nerdctl/... -args -test.target=docker&lt;/code&gt; to ensure that the test suite is compatible with Docker.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing to nerdctl&lt;/h3&gt; &#xA;&lt;p&gt;Lots of commands and flags are currently missing. Pull requests are highly welcome.&lt;/p&gt; &#xA;&lt;p&gt;Please certify your &lt;a href=&#34;https://developercertificate.org/&#34;&gt;Developer Certificate of Origin (DCO)&lt;/a&gt;, by signing off your commit with &lt;code&gt;git commit -s&lt;/code&gt; and with your real name.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Command reference&lt;/h1&gt; &#xA;&lt;p&gt;&lt;span&gt;üê≥&lt;/span&gt; = Docker compatible&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ü§ì&lt;/span&gt; = nerdctl specific&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üü¶&lt;/span&gt; = Windows enabled&lt;/p&gt; &#xA;&lt;p&gt;Unlisted &lt;code&gt;docker&lt;/code&gt; CLI flags are unimplemented yet in &lt;code&gt;nerdctl&lt;/code&gt; CLI. It does not necessarily mean that the corresponding features are missing in containerd.&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#container-management&#34;&gt;Container management&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-blue_square-nerdctl-run&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl run&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-blue_square-nerdctl-exec&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl exec&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-blue_square-nerdctl-create&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl create&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-cp&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl cp&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-blue_square-nerdctl-ps&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl ps&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-blue_square-nerdctl-inspect&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl inspect&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-logs&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl logs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-port&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl port&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-rm&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl rm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-stop&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl stop&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-start&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl start&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-restart&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl restart&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-update&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl update&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-wait&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl wait&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-kill&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl kill&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-pause&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl pause&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-unpause&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl unpause&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-docker-rename&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; docker rename&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-container-prune&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl container prune&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#build&#34;&gt;Build&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-build&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl build&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-commit&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl commit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#image-management&#34;&gt;Image management&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-blue_square-nerdctl-images&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl images&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-blue_square-nerdctl-pull&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl pull&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-push&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl push&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-load&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl load&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-save&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl save&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-tag&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl tag&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-rmi&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl rmi&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-image-inspect&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl image inspect&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-image-history&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl image history&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-image-prune&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl image prune&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-image-convert&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl image convert&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-image-encrypt&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl image encrypt&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-image-decrypt&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl image decrypt&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#registry&#34;&gt;Registry&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-login&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl login&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-logout&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl logout&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#network-management&#34;&gt;Network management&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-network-create&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network create&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-network-ls&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network ls&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-network-inspect&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network inspect&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-network-rm&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network rm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-network-prune&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network prune&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#volume-management&#34;&gt;Volume management&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-volume-create&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume create&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-volume-ls&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume ls&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-volume-inspect&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume inspect&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-volume-rm&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume rm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-volume-prune&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume prune&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#namespace-management&#34;&gt;Namespace management&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-blue_square-nerdctl-namespace-create&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace create&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-blue_square-nerdctl-namespace-inspect&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace inspect&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-blue_square-nerdctl-namespace-ls&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace ls&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-blue_square-nerdctl-namespace-remove&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace remove&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-blue_square-nerdctl-namespace-update&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace update&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#apparmor-profile-management&#34;&gt;AppArmor profile management&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-apparmor-inspect&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl apparmor inspect&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-apparmor-load&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl apparmor load&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-apparmor-ls&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl apparmor ls&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-apparmor-unload&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl apparmor unload&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#builder-management&#34;&gt;Builder management&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-builder-prune&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl builder prune&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-builder-debug&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl builder debug&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#system&#34;&gt;System&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-events&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl events&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-info&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl info&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-version&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl version&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-system-prune&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl system prune&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#stats&#34;&gt;Stats&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-stats&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl stats&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-top&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl top&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#shell-completion&#34;&gt;Shell completion&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-completion-bash&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl completion bash&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-completion-zsh&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl completion zsh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-completion-fish&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl completion fish&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-completion-powershell&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl completion powershell&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#compose&#34;&gt;Compose&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-up&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose up&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-logs&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose logs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-build&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose build&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-create&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose create&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-exec&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose exec&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-down&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose down&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-images&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose images&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-start&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose start&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-stop&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose stop&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-port&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose port&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-ps&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose ps&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-pull&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose pull&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-push&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose push&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-pause&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose pause&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-unpause&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose unpause&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-config&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose config&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-kill&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose kill&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-restart&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose restart&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-rm&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose rm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-run&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose run&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-top&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose top&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#whale-nerdctl-compose-version&#34;&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose version&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#ipfs-management&#34;&gt;IPFS management&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#nerd_face-nerdctl-ipfs-registry-serve&#34;&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl ipfs registry serve&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#global-flags&#34;&gt;Global flags&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#unimplemented-docker-commands&#34;&gt;Unimplemented Docker commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/#additional-documents&#34;&gt;Additional documents&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Container management&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl run&lt;/h3&gt; &#xA;&lt;p&gt;Run a command in a new container.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl run [OPTIONS] IMAGE [COMMAND] [ARG...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;ipfs://&lt;/code&gt; prefix can be used for &lt;code&gt;IMAGE&lt;/code&gt; to pull it from IPFS. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;/docs/ipfs.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Basic flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-i, --interactive&lt;/code&gt;: Keep STDIN open even if not attached&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-t, --tty&lt;/code&gt;: Allocate a pseudo-TTY &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;‚ö†&lt;/span&gt; WIP: currently &lt;code&gt;-t&lt;/code&gt; conflicts with &lt;code&gt;-d&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-d, --detach&lt;/code&gt;: Run container in background and print container ID&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--restart=(no|always|on-failure|unless-stopped)&lt;/code&gt;: Restart policy to apply when a container exits &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &#34;no&#34;&lt;/li&gt; &#xA;   &lt;li&gt;always: Always restart the container if it stops.&lt;/li&gt; &#xA;   &lt;li&gt;on-failure[:max-retries]: Restart only if the container exits with a non-zero exit status. Optionally, limit the number of times attempts to restart the container using the :max-retries option.&lt;/li&gt; &#xA;   &lt;li&gt;unless-stopped: Always restart the container unless it is stopped.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--rm&lt;/code&gt;: Automatically remove the container when it exits&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--pull=(always|missing|never)&lt;/code&gt;: Pull image before running &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &#34;missing&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--pid=(host|container:&amp;lt;container&amp;gt;)&lt;/code&gt;: PID namespace to use&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--stop-signal&lt;/code&gt;: Signal to stop a container (default &#34;SIGTERM&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--stop-timeout&lt;/code&gt;: Timeout (in seconds) to stop a container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Platform flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--platform=(amd64|arm64|...)&lt;/code&gt;: Set platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Init process flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--init&lt;/code&gt;: Run an init inside the container that forwards signals and reaps processes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--init-binary=&amp;lt;binary-name&amp;gt;&lt;/code&gt;: The custom init binary to use. We suggest you use the &lt;a href=&#34;https://github.com/krallin/tini&#34;&gt;tini&lt;/a&gt; binary which is used in Docker project to get the same behavior. Please make sure the binary exists in your &lt;code&gt;PATH&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;tini&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Network flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--net, --network=(bridge|host|none|container:&amp;lt;container&amp;gt;|&amp;lt;CNI&amp;gt;)&lt;/code&gt;: Connect a container to a network. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &#34;bridge&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#39;container:&amp;lt;name|id&amp;gt;&#39;: reuse another container&#39;s network stack, container has to be precreated.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; Unlike Docker, this flag can be specified multiple times (&lt;code&gt;--net foo --net bar&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-p, --publish&lt;/code&gt;: Publish a container&#39;s port(s) to the host&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--dns&lt;/code&gt;: Set custom DNS servers&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--dns-search&lt;/code&gt;: Set custom DNS search domains&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--dns-opt, --dns-option&lt;/code&gt;: Set DNS options&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-h, --hostname&lt;/code&gt;: Container host name&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--add-host&lt;/code&gt;: Add a custom host-to-IP mapping (host:ip)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--ip&lt;/code&gt;: Specific static IP address(es) to use&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--mac-address&lt;/code&gt;: Specific MAC address to use. Be aware that it does not check if manually specified MAC addresses are unique. Supports network type &lt;code&gt;bridge&lt;/code&gt; and &lt;code&gt;macvlan&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Resource flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpus&lt;/code&gt;: Number of CPUs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpu-quota&lt;/code&gt;: Limit the CPU CFS (Completely Fair Scheduler) quota&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpu-period&lt;/code&gt;: Limit the CPU CFS (Completely Fair Scheduler) period&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpu-shares&lt;/code&gt;: CPU shares (relative weight)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpuset-cpus&lt;/code&gt;: CPUs in which to allow execution (0-3, 0,1)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpuset-mems&lt;/code&gt;: Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--memory&lt;/code&gt;: Memory limit&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--memory-reservation&lt;/code&gt;: Memory soft limit&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--memory-swap&lt;/code&gt;: Swap limit equal to memory plus swap: &#39;-1&#39; to enable unlimited swap&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--memory-swappiness&lt;/code&gt;: Tune container memory swappiness (0 to 100) (default -1)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--kernel-memory&lt;/code&gt;: Kernel memory limit (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--oom-kill-disable&lt;/code&gt;: Disable OOM Killer&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--oom-score-adj&lt;/code&gt;: Tune container‚Äôs OOM preferences (-1000 to 1000, rootless: 100 to 1000)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--pids-limit&lt;/code&gt;: Tune container pids limit&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--cgroup-conf&lt;/code&gt;: Configure cgroup v2 (key=value)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--blkio-weight&lt;/code&gt;: Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cgroupns=(host|private)&lt;/code&gt;: Cgroup namespace to use &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &#34;private&#34; on cgroup v2 hosts, &#34;host&#34; on cgroup v1 hosts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--device&lt;/code&gt;: Add a host device to the container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Intel RDT flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--rdt-class=CLASS&lt;/code&gt;: Name of the RDT class (or CLOS) to associate the container wit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;User flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-u, --user&lt;/code&gt;: Username or UID (format: &amp;lt;name|uid&amp;gt;[:&amp;lt;group|gid&amp;gt;])&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--umask&lt;/code&gt;: Set the umask inside the container. Defaults to 0022. Corresponds to Podman CLI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--group-add&lt;/code&gt;: Add additional groups to join&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Security flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--security-opt seccomp=&amp;lt;PROFILE_JSON_FILE&amp;gt;&lt;/code&gt;: specify custom seccomp profile&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--security-opt apparmor=&amp;lt;PROFILE&amp;gt;&lt;/code&gt;: specify custom AppArmor profile&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--security-opt no-new-privileges&lt;/code&gt;: disallow privilege escalation, e.g., setuid and file capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--security-opt privileged-without-host-devices&lt;/code&gt;: Don&#39;t pass host devices to privileged containers&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cap-add=&amp;lt;CAP&amp;gt;&lt;/code&gt;: Add Linux capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cap-drop=&amp;lt;CAP&amp;gt;&lt;/code&gt;: Drop Linux capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--privileged&lt;/code&gt;: Give extended privileges to this container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Runtime flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--runtime&lt;/code&gt;: Runtime to use for this container, e.g. &#34;crun&#34;, or &#34;io.containerd.runsc.v1&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--sysctl&lt;/code&gt;: Sysctl options, e.g &#34;net.ipv4.ip_forward=1&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Volume flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-v, --volume &amp;lt;SRC&amp;gt;:&amp;lt;DST&amp;gt;[:&amp;lt;OPT&amp;gt;]&lt;/code&gt;: Bind mount a volume, e.g., &lt;code&gt;-v /mnt:/mnt:rro,rprivate&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; option &lt;code&gt;rw&lt;/code&gt; : Read/Write (when writable)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; option &lt;code&gt;ro&lt;/code&gt; : Non-recursive read-only&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; option &lt;code&gt;rro&lt;/code&gt;: Recursive read-only. Should be used in conjunction with &lt;code&gt;rprivate&lt;/code&gt;. e.g., &lt;code&gt;-v /mnt:/mnt:rro,rprivate&lt;/code&gt; makes children such as &lt;code&gt;/mnt/usb&lt;/code&gt; to be read-only, too. Requires kernel &amp;gt;= 5.12, and crun &amp;gt;= 1.4 or runc &amp;gt;= 1.1 (PR &lt;a href=&#34;https://github.com/opencontainers/runc/pull/3272&#34;&gt;#3272&lt;/a&gt;). With older runc, &lt;code&gt;rro&lt;/code&gt; just works as &lt;code&gt;ro&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; option &lt;code&gt;shared&lt;/code&gt;, &lt;code&gt;slave&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;: Non-recursive &#34;shared&#34; / &#34;slave&#34; / &#34;private&#34; propagation&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; option &lt;code&gt;rshared&lt;/code&gt;, &lt;code&gt;rslave&lt;/code&gt;, &lt;code&gt;rprivate&lt;/code&gt;: Recursive &#34;shared&#34; / &#34;slave&#34; / &#34;private&#34; propagation&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; option &lt;code&gt;bind&lt;/code&gt;: Not-recursively bind-mounted&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; option &lt;code&gt;rbind&lt;/code&gt;: Recursively bind-mounted&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--tmpfs&lt;/code&gt;: Mount a tmpfs directory, e.g. &lt;code&gt;--tmpfs /tmp:size=64m,exec&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--mount&lt;/code&gt;: Attach a filesystem mount to the container. Consists of multiple key-value pairs, separated by commas and each consisting of a &lt;code&gt;&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; tuple. e.g., &lt;code&gt;-- mount type=bind,source=/src,target=/app,bind-propagation=shared&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;type&lt;/code&gt;: Current supported mount types are &lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;volume&lt;/code&gt;, &lt;code&gt;tmpfs&lt;/code&gt;. The defaul type will be set to &lt;code&gt;volume&lt;/code&gt; if not specified. i.e., &lt;code&gt;--mount src=vol-1,dst=/app,readonly&lt;/code&gt; equals &lt;code&gt;--mount type=volum,src=vol-1,dst=/app,readonly&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Common Options: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;source&lt;/code&gt;: Mount source spec for bind and volume. Mandatory for bind.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt;, &lt;code&gt;target&lt;/code&gt;: Mount destination spec.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;readonly&lt;/code&gt;, &lt;code&gt;ro&lt;/code&gt;, &lt;code&gt;rw&lt;/code&gt;, &lt;code&gt;rro&lt;/code&gt;: Filesystem permissinos.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Options specific to &lt;code&gt;bind&lt;/code&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;bind-propagation&lt;/code&gt;: &lt;code&gt;shared&lt;/code&gt;, &lt;code&gt;slave&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;rshared&lt;/code&gt;, &lt;code&gt;rslave&lt;/code&gt;, or &lt;code&gt;rprivate&lt;/code&gt;(default).&lt;/li&gt; &#xA;     &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;bind-nonrecursive&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;(default). If set to true, submounts are not recursively bind-mounted. This option is useful for readonly bind mount.&lt;/li&gt; &#xA;     &lt;li&gt;unimplemented options: &lt;code&gt;consistency&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Options specific to &lt;code&gt;tmpfs&lt;/code&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;tmpfs-size&lt;/code&gt;: Size of the tmpfs mount in bytes. Unlimited by default.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;tmpfs-mode&lt;/code&gt;: File mode of the tmpfs in &lt;strong&gt;octal&lt;/strong&gt;. Defaults to &lt;code&gt;1777&lt;/code&gt; or world-writable.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Options specific to &lt;code&gt;volume&lt;/code&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;unimplemented options: &lt;code&gt;volume-nocopy&lt;/code&gt;, &lt;code&gt;volume-label&lt;/code&gt;, &lt;code&gt;volume-driver&lt;/code&gt;, &lt;code&gt;volume-opt&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rootfs flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--read-only&lt;/code&gt;: Mount the container&#39;s root filesystem as read only&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--rootfs&lt;/code&gt;: The first argument is not an image but the rootfs to the exploded container. Corresponds to Podman CLI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Env flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--entrypoint&lt;/code&gt;: Overwrite the default ENTRYPOINT of the image&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-w, --workdir&lt;/code&gt;: Working directory inside the container&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-e, --env&lt;/code&gt;: Set environment variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--env-file&lt;/code&gt;: Set environment variables from file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Metadata flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--name&lt;/code&gt;: Assign a name to the container&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-l, --label&lt;/code&gt;: Set meta data on a container&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--label-file&lt;/code&gt;: Read in a line delimited file of labels&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--cidfile&lt;/code&gt;: Write the container ID to the file&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--pidfile&lt;/code&gt;: file path to write the task&#39;s pid. The CLI syntax conforms to Podman convention.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Logging flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-driver=(json-file|journald|fluentd|syslog)&lt;/code&gt;: Logging driver for the container (default &lt;code&gt;json-file&lt;/code&gt;). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-driver=json-file&lt;/code&gt;: The logs are formatted as JSON. The default logging driver for nerdctl. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The &lt;code&gt;json-file&lt;/code&gt; logging driver supports the following logging options: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=max-size=&amp;lt;MAX-SIZE&amp;gt;&lt;/code&gt;: The maximum size of the log before it is rolled. A positive integer plus a modifier representing the unit of measure (k, m, or g). Defaults to unlimited.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=max-file=&amp;lt;MAX-FILE&amp;gt;&lt;/code&gt;: The maximum number of log files that can be present. If rolling the logs creates excess files, the oldest file is removed. Only effective when &lt;code&gt;max-size&lt;/code&gt; is also set. A positive integer. Defaults to 1.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--log-opt=log-path=&amp;lt;LOG-PATH&amp;gt;&lt;/code&gt;: The log path where the logs are written. The path will be created if it does not exist. If the log file exists, the old file will be renamed to &lt;code&gt;&amp;lt;LOG-PATH&amp;gt;.1&lt;/code&gt;. &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;Default: &lt;code&gt;&amp;lt;data-root&amp;gt;/&amp;lt;containerd-socket-hash&amp;gt;/&amp;lt;namespace&amp;gt;/&amp;lt;container-id&amp;gt;/&amp;lt;container-id&amp;gt;-json.log&lt;/code&gt;&lt;/li&gt; &#xA;         &lt;li&gt;Example: &lt;code&gt;/var/lib/nerdctl/1935db59/containers/default/&amp;lt;container-id&amp;gt;/&amp;lt;container-id&amp;gt;-json.log&lt;/code&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-driver=journald&lt;/code&gt;: Writes log messages to &lt;code&gt;journald&lt;/code&gt;. The &lt;code&gt;journald&lt;/code&gt; daemon must be running on the host machine. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=tag=&amp;lt;TEMPLATE&amp;gt;&lt;/code&gt;: Specify template to set &lt;code&gt;SYSLOG_IDENTIFIER&lt;/code&gt; value in journald logs.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-driver=fluentd&lt;/code&gt;: Writes log messages to &lt;code&gt;fluentd&lt;/code&gt;. The &lt;code&gt;fluentd&lt;/code&gt; daemon must be running on the host machine. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The &lt;code&gt;fluentd&lt;/code&gt; logging driver supports the following logging options: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=fluentd-address=&amp;lt;ADDRESS&amp;gt;&lt;/code&gt;: The address of the &lt;code&gt;fluentd&lt;/code&gt; daemon, tcp(default) and unix sockets are supported..&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=fluentd-async=&amp;lt;true|false&amp;gt;&lt;/code&gt;: Enable async mode for fluentd. The default value is false.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=fluentd-buffer-limit=&amp;lt;LIMIT&amp;gt;&lt;/code&gt;: The buffer limit for fluentd. If the buffer is full, the call to record logs will fail. The default is 8192. (&lt;a href=&#34;https://github.com/fluent/fluent-logger-golang/tree/master#bufferlimit&#34;&gt;https://github.com/fluent/fluent-logger-golang/tree/master#bufferlimit&lt;/a&gt;)&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=fluentd-retry-wait=&amp;lt;1s|1ms&amp;gt;&lt;/code&gt;: The time to wait before retrying to send logs to fluentd. The default value is 1s.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=fluentd-max-retries=&amp;lt;1&amp;gt;&lt;/code&gt;: The maximum number of retries to send logs to fluentd. The default value is MaxInt32.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=fluentd-sub-second-precision=&amp;lt;true|false&amp;gt;&lt;/code&gt;: Enable sub-second precision for fluentd. The default value is false.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--log-opt=fluentd-async-reconnect-interval=&amp;lt;1s|1ms&amp;gt;&lt;/code&gt;: The time to wait before retrying to reconnect to fluentd. The default value is 0s.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--log-opt=fluentd-request-ack=&amp;lt;true|false&amp;gt;&lt;/code&gt;: Enable request ack for fluentd. The default value is false.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-driver=syslog&lt;/code&gt;: Writes log messages to &lt;code&gt;syslog&lt;/code&gt;. The &lt;code&gt;syslog&lt;/code&gt; daemon must be running on either the host machine or remote. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The &lt;code&gt;syslog&lt;/code&gt; logging driver supports the following logging options: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=syslog-address=&amp;lt;ADDRESS&amp;gt;&lt;/code&gt;: The address of an external &lt;code&gt;syslog&lt;/code&gt; server. The URI specifier may be &lt;code&gt;tcp|udp|tcp+tls]://host:port&lt;/code&gt;, &lt;code&gt;unix://path&lt;/code&gt;, or &lt;code&gt;unixgram://path&lt;/code&gt;. If the transport is &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;udp&lt;/code&gt;, or &lt;code&gt;tcp+tls&lt;/code&gt;, the default port is &lt;code&gt;514&lt;/code&gt;.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=syslog-facility=&amp;lt;FACILITY&amp;gt;&lt;/code&gt;: The &lt;code&gt;syslog&lt;/code&gt; facility to use. Can be the number or name for any valid syslog facility. See the &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc5424#section-6.2.1&#34;&gt;syslog documentation&lt;/a&gt;.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=syslog-tls-ca-cert=&amp;lt;VALUE&amp;gt;&lt;/code&gt;: The absolute path to the trust certificates signed by the CA. &lt;strong&gt;Ignored if the address protocol is not &lt;code&gt;tcp+tls&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=syslog-tls-cert=&amp;lt;VALUE&amp;gt;&lt;/code&gt;: The absolute path to the TLS certificate file. &lt;strong&gt;Ignored if the address protocol is not &lt;code&gt;tcp+tls&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=syslog-tls-key=&amp;lt;VALUE&amp;gt;&lt;/code&gt;:The absolute path to the TLS key file. &lt;strong&gt;Ignored if the address protocol is not &lt;code&gt;tcp+tls&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=syslog-tls-skip-verify=&amp;lt;VALUE&amp;gt;&lt;/code&gt;: If set to &lt;code&gt;true&lt;/code&gt;, TLS verification is skipped when connecting to the daemon. &lt;strong&gt;Ignored if the address protocol is not &lt;code&gt;tcp+tls&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=syslog-format=&amp;lt;VALUE&amp;gt;&lt;/code&gt;: The &lt;code&gt;syslog&lt;/code&gt; message format to use. If not specified the local UNIX syslog format is used, without a specified hostname. Specify &lt;code&gt;rfc3164&lt;/code&gt; for the RFC-3164 compatible format, &lt;code&gt;rfc5424&lt;/code&gt; for RFC-5424 compatible format, or &lt;code&gt;rfc5424micro&lt;/code&gt; for RFC-5424 compatible format with microsecond timestamp resolution.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--log-opt=tag=&amp;lt;VALUE&amp;gt;&lt;/code&gt;: A string that is appended to the &lt;code&gt;APP-NAME&lt;/code&gt; in the &lt;code&gt;syslog&lt;/code&gt; message. By default, nerdctl uses the first 12 characters of the container ID to tag log messages.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; Accepts a LogURI which is a containerd shim logger. A scheme must be specified for the URI. Example: &lt;code&gt;nerdctl run -d --log-driver binary:///usr/bin/ctr-journald-shim docker.io/library/hello-world:latest&lt;/code&gt;. An implementation of shim logger can be found at (&lt;a href=&#34;https://github.com/containerd/containerd/tree/dbef1d56d7ebc05bc4553d72c419ed5ce025b05d/runtime/v2#logging&#34;&gt;https://github.com/containerd/containerd/tree/dbef1d56d7ebc05bc4553d72c419ed5ce025b05d/runtime/v2#logging&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Shared memory flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--ipc&lt;/code&gt;: IPC namespace to use&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--shm-size&lt;/code&gt;: Size of &lt;code&gt;/dev/shm&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;GPU flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--gpus&lt;/code&gt;: GPU devices to add to the container (&#39;all&#39; to pass all GPUs). Please see also &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/gpu.md&#34;&gt;./docs/gpu.md&lt;/a&gt; for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ulimit flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--ulimit&lt;/code&gt;: Set ulimit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Verify flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--verify&lt;/code&gt;: Verify the image (none|cosign). See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/cosign.md&#34;&gt;&lt;code&gt;docs/cosign.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--cosign-key&lt;/code&gt;: Path to the public key file, KMS, URI or Kubernetes Secret for &lt;code&gt;--verify=cosign&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker run&lt;/code&gt; flags: &lt;code&gt;--attach&lt;/code&gt;, &lt;code&gt;--blkio-weight-device&lt;/code&gt;, &lt;code&gt;--cgroup-parent&lt;/code&gt;, &lt;code&gt;--cpu-rt-*&lt;/code&gt;, &lt;code&gt;--detach-keys&lt;/code&gt;, &lt;code&gt;--device-*&lt;/code&gt;, &lt;code&gt;--disable-content-trust&lt;/code&gt;, &lt;code&gt;--domainname&lt;/code&gt;, &lt;code&gt;--expose&lt;/code&gt;, &lt;code&gt;--health-*&lt;/code&gt;, &lt;code&gt;--ip6&lt;/code&gt;, &lt;code&gt;--isolation&lt;/code&gt;, &lt;code&gt;--no-healthcheck&lt;/code&gt;, &lt;code&gt;--link*&lt;/code&gt;, &lt;code&gt;--mac-address&lt;/code&gt;, &lt;code&gt;--publish-all&lt;/code&gt;, &lt;code&gt;--sig-proxy&lt;/code&gt;, &lt;code&gt;--storage-opt&lt;/code&gt;, &lt;code&gt;--userns&lt;/code&gt;, &lt;code&gt;--uts&lt;/code&gt;, &lt;code&gt;--volume-driver&lt;/code&gt;, &lt;code&gt;--volumes-from&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl exec&lt;/h3&gt; &#xA;&lt;p&gt;Run a command in a running container.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl exec [OPTIONS] CONTAINER COMMAND [ARG...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-i, --interactive&lt;/code&gt;: Keep STDIN open even if not attached&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-t, --tty&lt;/code&gt;: Allocate a pseudo-TTY &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;‚ö†&lt;/span&gt; WIP: currently &lt;code&gt;-t&lt;/code&gt; conflicts with &lt;code&gt;-d&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-d, --detach&lt;/code&gt;: Detached mode: run command in the background&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-w, --workdir&lt;/code&gt;: Working directory inside the container&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-e, --env&lt;/code&gt;: Set environment variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--env-file&lt;/code&gt;: Set environment variables from file&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--privileged&lt;/code&gt;: Give extended privileges to the command&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-u, --user&lt;/code&gt;: Username or UID (format: &amp;lt;name|uid&amp;gt;[:&amp;lt;group|gid&amp;gt;])&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker exec&lt;/code&gt; flags: &lt;code&gt;--detach-keys&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl create&lt;/h3&gt; &#xA;&lt;p&gt;Create a new container.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl create [OPTIONS] IMAGE [COMMAND] [ARG...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;ipfs://&lt;/code&gt; prefix can be used for &lt;code&gt;IMAGE&lt;/code&gt; to pull it from IPFS. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;/docs/ipfs.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;nerdctl create&lt;/code&gt; command similar to &lt;code&gt;nerdctl run -d&lt;/code&gt; except the container is never started. You can then use the &lt;code&gt;nerdctl start &amp;lt;container_id&amp;gt;&lt;/code&gt; command to start the container at any point.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl cp&lt;/h3&gt; &#xA;&lt;p&gt;Copy files/folders between a running container and the local filesystem&lt;/p&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nerdctl cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nerdctl cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; &lt;code&gt;nerdctl cp&lt;/code&gt; is designed only for use with trusted, cooperating containers. Using &lt;code&gt;nerdctl cp&lt;/code&gt; with untrusted or malicious containers is unsupported and may not provide protection against unexpected behavior.&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-L, --follow-link&lt;/code&gt; Always follow symbol link in SRC_PATH.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker cp&lt;/code&gt; flags: &lt;code&gt;--archive&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl ps&lt;/h3&gt; &#xA;&lt;p&gt;List containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl ps [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-a, --all&lt;/code&gt;: Show all containers (default shows just running)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-trunc&lt;/code&gt;: Don&#39;t truncate output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Only display container IDs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-s, --size&lt;/code&gt;: Display total file sizes&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=table&lt;/code&gt; (default): Table&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=&#39;{{json .}}&#39;&lt;/code&gt;: JSON&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--format=wide&lt;/code&gt;: Wide table&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--format=json&lt;/code&gt;: Alias of &lt;code&gt;--format=&#39;{{json .}}&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-n, --last&lt;/code&gt;: Show n last created containers (includes all states)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-l, --latest&lt;/code&gt;: Show the latest created container (includes all states)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --filter&lt;/code&gt;: Filter containers based on given conditions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter id=&amp;lt;value&amp;gt;&lt;/code&gt;: Container&#39;s ID. Both full ID and truncated ID are supported&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter name=&amp;lt;value&amp;gt;&lt;/code&gt;: Container&#39;s name&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;: Arbitrary string either a key or a key-value pair&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter exited=&amp;lt;value&amp;gt;&lt;/code&gt;: Container&#39;s exit code. Only work with &lt;code&gt;--all&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter status=&amp;lt;value&amp;gt;&lt;/code&gt;: One of &lt;code&gt;created, running, paused, stopped, exited, pausing, unknown&lt;/code&gt;. Note that &lt;code&gt;restarting, removing, dead&lt;/code&gt; are not supported and will be ignored&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter before/since=&amp;lt;ID/name&amp;gt;&lt;/code&gt;: Filter containers created before or after a given ID or name&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter volume=&amp;lt;value&amp;gt;&lt;/code&gt;: Filter by a given mounted volume or bind mount&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter network=&amp;lt;value&amp;gt;&lt;/code&gt;: Filter by a given network&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Following arguments for &lt;code&gt;--filter&lt;/code&gt; are not supported yet:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--filter ancestor=&amp;lt;value&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--filter publish/expose=&amp;lt;port/startport-endport&amp;gt;[/&amp;lt;proto&amp;gt;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--filter health=&amp;lt;value&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--filter isolation=&amp;lt;value&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--filter is-task=&amp;lt;value&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl inspect&lt;/h3&gt; &#xA;&lt;p&gt;Display detailed information on one or more containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl inspect [OPTIONS] NAME|ID [NAME|ID...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--mode=(dockercompat|native)&lt;/code&gt;: Inspection mode. &#34;native&#34; produces more information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--type&lt;/code&gt;: Return JSON for specified type&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker inspect&lt;/code&gt; flags: &lt;code&gt;--size&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl logs&lt;/h3&gt; &#xA;&lt;p&gt;Fetch the logs of a container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; Currently, only containers created with &lt;code&gt;nerdctl run -d&lt;/code&gt; are supported.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl logs [OPTIONS] CONTAINER&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--f, --follow&lt;/code&gt;: Follow log output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--since&lt;/code&gt;: Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--until&lt;/code&gt;: Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-t, --timestamps&lt;/code&gt;: Show timestamps&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-n, --tail&lt;/code&gt;: Number of lines to show from the end of the logs (default &#34;all&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker logs&lt;/code&gt; flags: &lt;code&gt;--details&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl port&lt;/h3&gt; &#xA;&lt;p&gt;List port mappings or a specific mapping for the container.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl port CONTAINER [PRIVATE_PORT[/PROTO]]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl rm&lt;/h3&gt; &#xA;&lt;p&gt;Remove one or more containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl rm [OPTIONS] CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Force the removal of a running|paused|unknown container (uses SIGKILL)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-v, --volumes&lt;/code&gt;: Remove anonymous volumes associated with the container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker rm&lt;/code&gt; flags: &lt;code&gt;--link&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl stop&lt;/h3&gt; &#xA;&lt;p&gt;Stop one or more running containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl stop [OPTIONS] CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-t, --time=SECONDS&lt;/code&gt;: Seconds to wait for stop before killing it (default &#34;10&#34;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tips: If the init process in container is exited after receiving SIGTERM or exited before the time you specified, the container will be exited immediately&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl start&lt;/h3&gt; &#xA;&lt;p&gt;Start one or more running containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl start [OPTIONS] CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-a, --attach&lt;/code&gt;: Attach STDOUT/STDERR and forward signals&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker start&lt;/code&gt; flags: &lt;code&gt;--checkpoint&lt;/code&gt;, &lt;code&gt;--checkpoint-dir&lt;/code&gt;, &lt;code&gt;--detach-keys&lt;/code&gt;, &lt;code&gt;--interactive&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl restart&lt;/h3&gt; &#xA;&lt;p&gt;Restart one or more running containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl restart [OPTIONS] CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-t, --time=SECONDS&lt;/code&gt;: Seconds to wait for stop before killing it (default &#34;10&#34;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tips: If the init process in container is exited after receiving SIGTERM or exited before the time you specified, the container will be exited immediately&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl update&lt;/h3&gt; &#xA;&lt;p&gt;Update configuration of one or more containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl update [OPTIONS] CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpus&lt;/code&gt;: Number of CPUs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpu-quota&lt;/code&gt;: Limit the CPU CFS (Completely Fair Scheduler) quota&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpu-period&lt;/code&gt;: Limit the CPU CFS (Completely Fair Scheduler) period&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpu-shares&lt;/code&gt;: CPU shares (relative weight)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpuset-cpus&lt;/code&gt;: CPUs in which to allow execution (0-3, 0,1)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cpuset-mems&lt;/code&gt;: Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--memory&lt;/code&gt;: Memory limit&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--memory-reservation&lt;/code&gt;: Memory soft limit&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--memory-swap&lt;/code&gt;: Swap limit equal to memory plus swap: &#39;-1&#39; to enable unlimited swap&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--kernel-memory&lt;/code&gt;: Kernel memory limit (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--pids-limit&lt;/code&gt;: Tune container pids limit&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--blkio-weight&lt;/code&gt;: Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl wait&lt;/h3&gt; &#xA;&lt;p&gt;Block until one or more containers stop, then print their exit codes.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl wait CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl kill&lt;/h3&gt; &#xA;&lt;p&gt;Kill one or more running containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl kill [OPTIONS] CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-s, --signal&lt;/code&gt;: Signal to send to the container (default: &#34;KILL&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl pause&lt;/h3&gt; &#xA;&lt;p&gt;Pause all processes within one or more containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl pause CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl unpause&lt;/h3&gt; &#xA;&lt;p&gt;Unpause all processes within one or more containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl unpause CONTAINER [CONTAINER...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; docker rename&lt;/h3&gt; &#xA;&lt;p&gt;Rename a container.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl rename CONTAINER NEW_NAME&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl container prune&lt;/h3&gt; &#xA;&lt;p&gt;Remove all stopped containers.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl container prune [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Do not prompt for confirmation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker container prune&lt;/code&gt; flags: &lt;code&gt;--filter&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl build&lt;/h3&gt; &#xA;&lt;p&gt;Build an image from a Dockerfile.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚Ñπ&lt;/span&gt; Needs buildkitd to be running. See also &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/build.md&#34;&gt;the document about setting up &lt;code&gt;nerdctl build&lt;/code&gt; with BuildKit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl build [OPTIONS] PATH&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--buildkit-host=&amp;lt;BUILDKIT_HOST&amp;gt;&lt;/code&gt;: BuildKit address&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-t, --tag&lt;/code&gt;: Name and optionally a tag in the &#39;name:tag&#39; format&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --file&lt;/code&gt;: Name of the Dockerfile&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--target&lt;/code&gt;: Set the target build stage to build&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--build-arg&lt;/code&gt;: Set build-time variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-cache&lt;/code&gt;: Do not use cache when building the image&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--output=OUTPUT&lt;/code&gt;: Output destination (format: type=local,dest=path) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;type=local,dest=path/to/output-dir&lt;/code&gt;: Local directory&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;type=oci[,dest=path/to/output.tar]&lt;/code&gt;: Docker/OCI dual-format tar ball (compatible with &lt;code&gt;docker buildx build&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;type=docker[,dest=path/to/output.tar]&lt;/code&gt;: Docker format tar ball (compatible with &lt;code&gt;docker buildx build&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;type=tar[,dest=path/to/output.tar]&lt;/code&gt;: Raw tar ball&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;type=image,name=example.com/image,push=true&lt;/code&gt;: Push to a registry (see &lt;a href=&#34;https://github.com/moby/buildkit/tree/v0.9.0#imageregistry&#34;&gt;&lt;code&gt;buildctl build&lt;/code&gt;&lt;/a&gt; documentation)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--progress=(auto|plain|tty)&lt;/code&gt;: Set type of progress output (auto, plain, tty). Use plain to show container output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--secret&lt;/code&gt;: Secret file to expose to the build: id=mysecret,src=/local/secret&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--ssh&lt;/code&gt;: SSH agent socket or keys to expose to the build (format: &lt;code&gt;default|&amp;lt;id&amp;gt;[=&amp;lt;socket&amp;gt;|&amp;lt;key&amp;gt;[,&amp;lt;key&amp;gt;]]&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Suppress the build output and print image ID on success&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cache-from=CACHE&lt;/code&gt;: External cache sources (eg. user/app:cache, type=local,src=path/to/dir) (compatible with &lt;code&gt;docker buildx build&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--cache-to=CACHE&lt;/code&gt;: Cache export destinations (eg. user/app:cache, type=local,dest=path/to/dir) (compatible with &lt;code&gt;docker buildx build&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--platform=(amd64|arm64|...)&lt;/code&gt;: Set target platform for build (compatible with &lt;code&gt;docker buildx build&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--iidfile=FILE&lt;/code&gt;: Write the image ID to the file&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--ipfs&lt;/code&gt;: Build image with pulling base images from IPFS. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;./docs/ipfs.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--label&lt;/code&gt;: Set metadata for an image&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker build&lt;/code&gt; flags: &lt;code&gt;--add-host&lt;/code&gt;, &lt;code&gt;--network&lt;/code&gt;, &lt;code&gt;--squash&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl commit&lt;/h3&gt; &#xA;&lt;p&gt;Create a new image from a container&#39;s changes&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-a, --author&lt;/code&gt;: Author (e.g., &#34;nerdctl contributor &lt;a href=&#34;mailto:nerdctl-dev@example.com&#34;&gt;nerdctl-dev@example.com&lt;/a&gt;&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-m, --message&lt;/code&gt;: Commit message&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-c, --change&lt;/code&gt;: Apply Dockerfile instruction to the created image (supported directives: [CMD, ENTRYPOINT])&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-p, --pause&lt;/code&gt;: Pause container during commit (default: true)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Image management&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl images&lt;/h3&gt; &#xA;&lt;p&gt;List images&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; The image ID is usually different from Docker image ID.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl images [OPTIONS] [REPOSITORY[:TAG]]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-a, --all&lt;/code&gt;: Show all images (unimplemented)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Only show numeric IDs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-trunc&lt;/code&gt;: Don&#39;t truncate output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=table&lt;/code&gt; (default): Table&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=&#39;{{json .}}&#39;&lt;/code&gt;: JSON&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--format=wide&lt;/code&gt;: Wide table&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--format=json&lt;/code&gt;: Alias of &lt;code&gt;--format=&#39;{{json .}}&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--digests&lt;/code&gt;: Show digests (compatible with Docker, unlike ID)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --filter&lt;/code&gt;: Filter the images. For now, only &#39;before=&lt;a href=&#34;image:tag&#34;&gt;image:tag&lt;/a&gt;&#39; and &#39;since=&lt;a href=&#34;image:tag&#34;&gt;image:tag&lt;/a&gt;&#39; is supported. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter=before=&amp;lt;image:tag&amp;gt;&lt;/code&gt;: Images created before given image (exclusive)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter=since=&amp;lt;image:tag&amp;gt;&lt;/code&gt;: Images created after given image (exclusive)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter=label&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;: Matches images based on the presence of a label alone or a label and a value&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--filter=reference=&amp;lt;image:tag&amp;gt;&lt;/code&gt;: Filter images by reference (Matches both docker compatible wildcard pattern and regexp match)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--names&lt;/code&gt;: Show image names&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Following arguments for &lt;code&gt;--filter&lt;/code&gt; are not supported yet:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--filter=dangling=true&lt;/code&gt;: Filter images by dangling&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl pull&lt;/h3&gt; &#xA;&lt;p&gt;Pull an image from a registry.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl pull [OPTIONS] NAME[:TAG|@DIGEST]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;ipfs://&lt;/code&gt; prefix can be used for &lt;code&gt;NAME&lt;/code&gt; to pull it from IPFS. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;/docs/ipfs.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--platform=(amd64|arm64|...)&lt;/code&gt;: Pull content for a specific platform &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; Unlike Docker, this flag can be specified multiple times (&lt;code&gt;--platform=amd64 --platform=arm64&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--all-platforms&lt;/code&gt;: Pull content for all platforms&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--unpack&lt;/code&gt;: Unpack the image for the current single platform (auto/true/false)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Suppress verbose output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--verify&lt;/code&gt;: Verify the image (none|cosign). See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/cosign.md&#34;&gt;&lt;code&gt;docs/cosign.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--cosign-key&lt;/code&gt;: Path to the public key file, KMS, URI or Kubernetes Secret for &lt;code&gt;--verify=cosign&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker pull&lt;/code&gt; flags: &lt;code&gt;--all-tags&lt;/code&gt;, &lt;code&gt;--disable-content-trust&lt;/code&gt; (default true)&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl push&lt;/h3&gt; &#xA;&lt;p&gt;Push an image to a registry.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl push [OPTIONS] NAME[:TAG]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;ipfs://&lt;/code&gt; prefix can be used for &lt;code&gt;NAME&lt;/code&gt; to push it to IPFS. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;/docs/ipfs.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--platform=(amd64|arm64|...)&lt;/code&gt;: Push content for a specific platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--all-platforms&lt;/code&gt;: Push content for all platforms&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--sign&lt;/code&gt;: Sign the image (none|cosign). See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/cosign.md&#34;&gt;&lt;code&gt;docs/cosign.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--cosign-key&lt;/code&gt;: Path to the private key file, KMS, URI or Kubernetes Secret for &lt;code&gt;--sign=cosign&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--allow-nondistributable-artifacts&lt;/code&gt;: Allow pushing images with non-distributable blobs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--ipfs-address&lt;/code&gt;: Multiaddr of IPFS API (default uses &lt;code&gt;$IPFS_PATH&lt;/code&gt; env variable if defined or local directory &lt;code&gt;~/.ipfs&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker push&lt;/code&gt; flags: &lt;code&gt;--all-tags&lt;/code&gt;, &lt;code&gt;--disable-content-trust&lt;/code&gt; (default true), &lt;code&gt;--quiet&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl load&lt;/h3&gt; &#xA;&lt;p&gt;Load an image from a tar archive or STDIN.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ü§ì&lt;/span&gt; Supports both Docker Image Spec v1.2 and OCI Image Spec v1.0.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl load [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-i, --input&lt;/code&gt;: Read from tar archive file, instead of STDIN&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--platform=(amd64|arm64|...)&lt;/code&gt;: Import content for a specific platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--all-platforms&lt;/code&gt;: Import content for all platforms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker load&lt;/code&gt; flags: &lt;code&gt;--quiet&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl save&lt;/h3&gt; &#xA;&lt;p&gt;Save one or more images to a tar archive (streamed to STDOUT by default)&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ü§ì&lt;/span&gt; The archive implements both Docker Image Spec v1.2 and OCI Image Spec v1.0.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl save [OPTIONS] IMAGE [IMAGE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-o, --output&lt;/code&gt;: Write to a file, instead of STDOUT&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--platform=(amd64|arm64|...)&lt;/code&gt;: Export content for a specific platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--all-platforms&lt;/code&gt;: Export content for all platforms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl tag&lt;/h3&gt; &#xA;&lt;p&gt;Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl rmi&lt;/h3&gt; &#xA;&lt;p&gt;Remove one or more images&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl rmi [OPTIONS] IMAGE [IMAGE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--async&lt;/code&gt;: Asynchronous mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Force removal of the image&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker rmi&lt;/code&gt; flags: &lt;code&gt;--no-prune&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl image inspect&lt;/h3&gt; &#xA;&lt;p&gt;Display detailed information on one or more images.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl image inspect [OPTIONS] NAME|ID [NAME|ID...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--mode=(dockercompat|native)&lt;/code&gt;: Inspection mode. &#34;native&#34; produces more information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--platform=(amd64|arm64|...)&lt;/code&gt;: Inspect a specific platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl image history&lt;/h3&gt; &#xA;&lt;p&gt;Show the history of an image.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl history [OPTIONS] IMAGE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-trunc&lt;/code&gt;: Don&#39;t truncate output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Only display snapshots IDs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl image prune&lt;/h3&gt; &#xA;&lt;p&gt;Remove unused images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; Currently, &lt;code&gt;nerdctl image prune&lt;/code&gt; requires --all to be specified.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl image prune [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-a, --all&lt;/code&gt;: Remove all unused images, not just dangling ones&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Do not prompt for confirmation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker image prune&lt;/code&gt; flags: &lt;code&gt;--filter&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl image convert&lt;/h3&gt; &#xA;&lt;p&gt;Convert an image format.&lt;/p&gt; &#xA;&lt;p&gt;e.g., &lt;code&gt;nerdctl image convert --estargz --oci example.com/foo:orig example.com/foo:esgz&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl image convert [OPTIONS] SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--estargz&lt;/code&gt; : convert legacy tar(.gz) layers to eStargz for lazy pulling. Should be used in conjunction with &#39;--oci&#39;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--estargz-record-in=&amp;lt;FILE&amp;gt;&lt;/code&gt; : read &lt;code&gt;ctr-remote optimize --record-out=&amp;lt;FILE&amp;gt;&lt;/code&gt; record file. &lt;span&gt;‚ö†&lt;/span&gt; This flag is experimental and subject to change.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--estargz-compression-level=&amp;lt;LEVEL&amp;gt;&lt;/code&gt;: eStargz compression level (default: 9)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--estargz-chunk-size=&amp;lt;SIZE&amp;gt;&lt;/code&gt; : eStargz chunk size&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--estargz-min-chunk-size=&amp;lt;SIZE&amp;gt;&lt;/code&gt; : The minimal number of bytes of data must be written in one gzip stream (requires stargz-snapshotter &amp;gt;= v0.13.0). Useful for creating a smaller eStargz image (refer to &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/stargz.md&#34;&gt;&lt;code&gt;./docs/stargz.md&lt;/code&gt;&lt;/a&gt; for details).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--estargz-external-toc&lt;/code&gt; : Separate TOC JSON into another image (called &#34;TOC image&#34;). The name of TOC image is the original + &#34;-esgztoc&#34; suffix. Both eStargz and the TOC image should be pushed to the same registry. (requires stargz-snapshotter &amp;gt;= v0.13.0) Useful for creating a smaller eStargz image (refer to &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/stargz.md&#34;&gt;&lt;code&gt;./docs/stargz.md&lt;/code&gt;&lt;/a&gt; for details). &lt;span&gt;‚ö†&lt;/span&gt; This flag is experimental and subject to change.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--estargz-keep-diff-id&lt;/code&gt;: Convert to esgz without changing diffID (cannot be used in conjunction with &#39;--estargz-record-in&#39;. must be specified with &#39;--estargz-external-toc&#39;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--zstdchunked&lt;/code&gt; : Use zstd compression instead of gzip (a.k.a zstd:chunked). Should be used in conjunction with &#39;--oci&#39;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--zstdchunked-record-in=&amp;lt;FILE&amp;gt;&lt;/code&gt; : read &lt;code&gt;ctr-remote optimize --record-out=&amp;lt;FILE&amp;gt;&lt;/code&gt; record file. &lt;span&gt;‚ö†&lt;/span&gt; This flag is experimental and subject to change.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--zstdchunked-compression-level=&amp;lt;LEVEL&amp;gt;&lt;/code&gt;: zstd:chunked compression level (default: 3)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--zstdchunked-chunk-size=&amp;lt;SIZE&amp;gt;&lt;/code&gt;: zstd:chunked chunk size&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--uncompress&lt;/code&gt; : convert tar.gz layers to uncompressed tar layers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--oci&lt;/code&gt; : convert Docker media types to OCI media types&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--platform=&amp;lt;PLATFORM&amp;gt;&lt;/code&gt; : convert content for a specific platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--all-platforms&lt;/code&gt; : convert content for all platforms (default: false)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl image encrypt&lt;/h3&gt; &#xA;&lt;p&gt;Encrypt image layers. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ocicrypt.md&#34;&gt;&lt;code&gt;./docs/ocicrypt.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl image encrypt [OPTIONS] SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl genrsa -out mykey.pem&#xA;openssl rsa -in mykey.pem -pubout -out mypubkey.pem&#xA;nerdctl image encrypt --recipient=jwe:mypubkey.pem --platform=linux/amd64,linux/arm64 foo example.com/foo:encrypted&#xA;nerdctl push example.com/foo:encrypted&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; CAUTION: This command only encrypts image layers, but does NOT encrypt &lt;a href=&#34;https://github.com/opencontainers/image-spec/raw/v1.0.1/config.md#example&#34;&gt;container configuration such as &lt;code&gt;Env&lt;/code&gt; and &lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;. To see non-encrypted information, run &lt;code&gt;nerdctl image inspect --mode=native --platform=PLATFORM example.com/foo:encrypted&lt;/code&gt; .&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--recipient=&amp;lt;RECIPIENT&amp;gt;&lt;/code&gt; : Recipient of the image is the person who can decrypt (e.g., &lt;code&gt;jwe:mypubkey.pem&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--dec-recipient=&amp;lt;RECIPIENT&amp;gt;&lt;/code&gt; : Recipient of the image; used only for PKCS7 and must be an x509 certificate&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--key=&amp;lt;KEY&amp;gt;[:&amp;lt;PWDDESC&amp;gt;]&lt;/code&gt; : A secret key&#39;s filename and an optional password separated by colon, PWDDESC=&#xA;  &lt;password&gt;&#xA;   |pass:&#xA;   &lt;password&gt;&#xA;    |fd=&#xA;    &lt;file descriptor&gt;&#xA;     |filename&#xA;    &lt;/file&gt;&#xA;   &lt;/password&gt;&#xA;  &lt;/password&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--gpg-homedir=&amp;lt;DIR&amp;gt;&lt;/code&gt; : The GPG homedir to use; by default gpg uses ~/.gnupg&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--gpg-version=&amp;lt;VERSION&amp;gt;&lt;/code&gt; : The GPG version (&#34;v1&#34; or &#34;v2&#34;), default will make an educated guess&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--platform=&amp;lt;PLATFORM&amp;gt;&lt;/code&gt; : Convert content for a specific platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--all-platforms&lt;/code&gt; : Convert content for all platforms (default: false)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl image decrypt&lt;/h3&gt; &#xA;&lt;p&gt;Decrypt image layers. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ocicrypt.md&#34;&gt;&lt;code&gt;./docs/ocicrypt.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl image decrypt [OPTIONS] SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nerdctl pull --unpack=false example.com/foo:encrypted&#xA;nerdctl image decrypt --key=mykey.pem example.com/foo:encrypted foo:decrypted&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--dec-recipient=&amp;lt;RECIPIENT&amp;gt;&lt;/code&gt; : Recipient of the image; used only for PKCS7 and must be an x509 certificate&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--key=&amp;lt;KEY&amp;gt;[:&amp;lt;PWDDESC&amp;gt;]&lt;/code&gt; : A secret key&#39;s filename and an optional password separated by colon, PWDDESC=&#xA;  &lt;password&gt;&#xA;   |pass:&#xA;   &lt;password&gt;&#xA;    |fd=&#xA;    &lt;file descriptor&gt;&#xA;     |filename&#xA;    &lt;/file&gt;&#xA;   &lt;/password&gt;&#xA;  &lt;/password&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--gpg-homedir=&amp;lt;DIR&amp;gt;&lt;/code&gt; : The GPG homedir to use; by default gpg uses ~/.gnupg&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--gpg-version=&amp;lt;VERSION&amp;gt;&lt;/code&gt; : The GPG version (&#34;v1&#34; or &#34;v2&#34;), default will make an educated guess&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--platform=&amp;lt;PLATFORM&amp;gt;&lt;/code&gt; : Convert content for a specific platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--all-platforms&lt;/code&gt; : Convert content for all platforms (default: false)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Registry&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl login&lt;/h3&gt; &#xA;&lt;p&gt;Log in to a container registry.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl login [OPTIONS] [SERVER]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-u, --username&lt;/code&gt;: Username&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-p, --password&lt;/code&gt;: Password&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--password-stdin&lt;/code&gt;: Take the password from stdin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl logout&lt;/h3&gt; &#xA;&lt;p&gt;Log out from a container registry&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl logout [SERVER]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Network management&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network create&lt;/h3&gt; &#xA;&lt;p&gt;Create a network&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚Ñπ&lt;/span&gt; To isolate CNI bridge, CNI plugins v1.1.0 or later needs to be installed.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl network create [OPTIONS] NETWORK&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-d, --driver=(bridge|nat|macvlan|ipvlan)&lt;/code&gt;: Driver to manage the Network &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--driver=bridge&lt;/code&gt;: Default driver for unix&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--driver=macvlan&lt;/code&gt;: Macvlan network driver for unix&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--driver=ipvlan&lt;/code&gt;: IPvlan network driver for unix&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--driver=nat&lt;/code&gt;: Default driver for windows&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-o, --opt&lt;/code&gt;: Set driver specific options &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--opt=com.docker.network.driver.mtu=&amp;lt;MTU&amp;gt;&lt;/code&gt;: Set the containers network MTU&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--opt=mtu=&amp;lt;MTU&amp;gt;&lt;/code&gt;: Alias of &lt;code&gt;--opt=com.docker.network.driver.mtu=&amp;lt;MTU&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--opt=macvlan_mode=(bridge)&amp;gt;&lt;/code&gt;: Set macvlan network mode (default: bridge)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--opt=ipvlan_mode=(l2|l3)&lt;/code&gt;: Set IPvlan network mode (default: l2)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--opt=mode=(bridge|l2|l3)&lt;/code&gt;: Alias of &lt;code&gt;--opt=macvlan_mode=(bridge)&lt;/code&gt; and &lt;code&gt;--opt=ipvlan_mode=(l2|l3)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--opt=parent=&amp;lt;INTERFACE&amp;gt;&lt;/code&gt;: Set valid parent interface on host&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--ipam-driver=(default|host-local|dhcp)&lt;/code&gt;: IP Address Management Driver &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--ipam-driver=default&lt;/code&gt;: Default IPAM driver&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--ipam-driver=host-local&lt;/code&gt;: Host-local IPAM driver for unix&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--ipam-driver=dhcp&lt;/code&gt;: DHCP IPAM driver for unix, requires root&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--ipam-opt&lt;/code&gt;: Set IPAM driver specific options&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--subnet&lt;/code&gt;: Subnet in CIDR format that represents a network segment, e.g. &#34;10.5.0.0/16&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--gateway&lt;/code&gt;: Gateway for the master subnet&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--ip-range&lt;/code&gt;: Allocate container ip from a sub-range&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--label&lt;/code&gt;: Set metadata on a network&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker network create&lt;/code&gt; flags: &lt;code&gt;--attachable&lt;/code&gt;, &lt;code&gt;--aux-address&lt;/code&gt;, &lt;code&gt;--config-from&lt;/code&gt;, &lt;code&gt;--config-only&lt;/code&gt;, &lt;code&gt;--ingress&lt;/code&gt;, &lt;code&gt;--internal&lt;/code&gt;, &lt;code&gt;--ipv6&lt;/code&gt;, &lt;code&gt;--scope&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network ls&lt;/h3&gt; &#xA;&lt;p&gt;List networks&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl network ls [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Only display network IDs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=table&lt;/code&gt; (default): Table&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=&#39;{{json .}}&#39;&lt;/code&gt;: JSON&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--format=wide&lt;/code&gt;: Alias of &lt;code&gt;--format=table&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--format=json&lt;/code&gt;: Alias of &lt;code&gt;--format=&#39;{{json .}}&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker network ls&lt;/code&gt; flags: &lt;code&gt;--filter&lt;/code&gt;, &lt;code&gt;--no-trunc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network inspect&lt;/h3&gt; &#xA;&lt;p&gt;Display detailed information on one or more networks&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl network inspect [OPTIONS] NETWORK [NETWORK...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--mode=(dockercompat|native)&lt;/code&gt;: Inspection mode. &#34;native&#34; produces more information.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker network inspect&lt;/code&gt; flags: &lt;code&gt;--verbose&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network rm&lt;/h3&gt; &#xA;&lt;p&gt;Remove one or more networks by name or identifier&lt;/p&gt; &#xA;&lt;p&gt;:warning network removal will fail if there are containers attached to it.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl network rm NETWORK [NETWORK...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl network prune&lt;/h3&gt; &#xA;&lt;p&gt;Remove all unused networks&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl network prune [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Do not prompt for confirmation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker network prune&lt;/code&gt; flags: &lt;code&gt;--filter&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Volume management&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume create&lt;/h3&gt; &#xA;&lt;p&gt;Create a volume&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl volume create [OPTIONS] [VOLUME]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--label&lt;/code&gt;: Set metadata for a volume&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker volume create&lt;/code&gt; flags: &lt;code&gt;--driver&lt;/code&gt;, &lt;code&gt;--opt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume ls&lt;/h3&gt; &#xA;&lt;p&gt;List volumes&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl volume ls [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Only display volume names&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=table&lt;/code&gt; (default): Table&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=&#39;{{json .}}&#39;&lt;/code&gt;: JSON&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--format=wide&lt;/code&gt;: Alias of &lt;code&gt;--format=table&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--format=json&lt;/code&gt;: Alias of &lt;code&gt;--format=&#39;{{json .}}&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--size&lt;/code&gt;: Display the disk usage of volumes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --filter&lt;/code&gt;: Filter volumes based on given conditions. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;: Matches volumes by label on both &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. If &lt;code&gt;value&lt;/code&gt; is left empty, matches all volumes with &lt;code&gt;key&lt;/code&gt; regardless of its value&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--filter name=&amp;lt;value&amp;gt;&lt;/code&gt;: Matches all volumes with a name containing the &lt;code&gt;value&lt;/code&gt; string&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--filter &#34;size=&amp;lt;value&amp;gt;&#34;&lt;/code&gt;: Matches all volumes with a size meets the &lt;code&gt;value&lt;/code&gt;. &lt;code&gt;size&lt;/code&gt; operand can be &lt;code&gt;&amp;gt;=, &amp;lt;=, &amp;gt;, &amp;lt;, =&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; must be an integer. Quotes should be used otherwise some shells may treat operand as redirections&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Following arguments for &lt;code&gt;--filter&lt;/code&gt; are not supported yet:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--filter=dangling=true&lt;/code&gt;: Filter volumes by dangling&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--filter=driver=local&lt;/code&gt;: Filter volumes by driver&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume inspect&lt;/h3&gt; &#xA;&lt;p&gt;Display detailed information on one or more volumes&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl volume inspect [OPTIONS] VOLUME [VOLUME...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--size&lt;/code&gt;: Displays disk usage of volume&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume rm&lt;/h3&gt; &#xA;&lt;p&gt;Remove one or more volumes&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl volume rm [OPTIONS] VOLUME [VOLUME...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Force the removal of one or more volumes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl volume prune&lt;/h3&gt; &#xA;&lt;p&gt;Remove all unused local volumes&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl volume prune [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Do not prompt for confirmation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker volume prune&lt;/code&gt; flags: &lt;code&gt;--filter&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Namespace management&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace create&lt;/h3&gt; &#xA;&lt;p&gt;Create a new namespace.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl namespace create NAMESPACE&lt;/code&gt; Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--label&lt;/code&gt;: Set labels for a namespace&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace inspect&lt;/h3&gt; &#xA;&lt;p&gt;Inspect a namespace.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl namespace inspect NAMESPACE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace ls&lt;/h3&gt; &#xA;&lt;p&gt;List containerd namespaces such as &#34;default&#34;, &#34;moby&#34;, or &#34;k8s.io&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl namespace ls [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-q, --quiet&lt;/code&gt;: Only display namespace names&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace remove&lt;/h3&gt; &#xA;&lt;p&gt;Remove one or more namespaces.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl namespace remove [OPTIONS] NAMESPACE [NAMESPACE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-c, --cgroup&lt;/code&gt;: delete the namespace&#39;s cgroup&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; nerdctl namespace update&lt;/h3&gt; &#xA;&lt;p&gt;Udapte labels for a namespace.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl namespace update NAMESPACE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--label&lt;/code&gt;: Set labels for a namespace&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AppArmor profile management&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl apparmor inspect&lt;/h3&gt; &#xA;&lt;p&gt;Display the default AppArmor profile &#34;nerdctl-default&#34;. Other profiles cannot be displayed with this command.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl apparmor inspect&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl apparmor load&lt;/h3&gt; &#xA;&lt;p&gt;Load the default AppArmor profile &#34;nerdctl-default&#34;. Requires root.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl apparmor load&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl apparmor ls&lt;/h3&gt; &#xA;&lt;p&gt;List the loaded AppArmor profile&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl apparmor ls [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-q, --quiet&lt;/code&gt;: Only display volume names&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl apparmor unload&lt;/h3&gt; &#xA;&lt;p&gt;Unload an AppArmor profile. The target profile name defaults to &#34;nerdctl-default&#34;. Requires root.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl apparmor unload [PROFILE]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Builder management&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl builder prune&lt;/h3&gt; &#xA;&lt;p&gt;Clean up BuildKit build cache.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; The output format is not compatible with Docker.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl builder prune&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--buildkit-host=&amp;lt;BUILDKIT_HOST&amp;gt;&lt;/code&gt;: BuildKit address&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl builder debug&lt;/h3&gt; &#xA;&lt;p&gt;Interactive debugging of Dockerfile using &lt;a href=&#34;https://github.com/ktock/buildg&#34;&gt;buildg&lt;/a&gt;. Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/builder-debug.md&#34;&gt;&lt;code&gt;./docs/builder-debug.md&lt;/code&gt;&lt;/a&gt; for details. This is an &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/experimental.md&#34;&gt;experimental&lt;/a&gt; feature.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; This command currently doesn&#39;t use the host&#39;s &lt;code&gt;buildkitd&lt;/code&gt; daemon but uses the patched version of BuildKit provided by buildg. This should be fixed in the future.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl builder debug PATH&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--file&lt;/code&gt;: Name of the Dockerfile&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--image&lt;/code&gt;: Image to use for debugging stage&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--target&lt;/code&gt;: Set the target build stage to build&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--build-arg&lt;/code&gt;: Set build-time variables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker builder prune&lt;/code&gt; flags: &lt;code&gt;--all&lt;/code&gt;, &lt;code&gt;--filter&lt;/code&gt;, &lt;code&gt;--force&lt;/code&gt;, &lt;code&gt;--keep-storage&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl events&lt;/h3&gt; &#xA;&lt;p&gt;Get real time events from the server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; The output format is not compatible with Docker.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl events [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker events&lt;/code&gt; flags: &lt;code&gt;--filter&lt;/code&gt;, &lt;code&gt;--since&lt;/code&gt;, &lt;code&gt;--until&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl info&lt;/h3&gt; &#xA;&lt;p&gt;Display system-wide information&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl info [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--mode=(dockercompat|native)&lt;/code&gt;: Information mode. &#34;native&#34; produces more information.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl version&lt;/h3&gt; &#xA;&lt;p&gt;Show the nerdctl version information&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl version [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --format&lt;/code&gt;: Format the output using the given Go template, e.g, &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl system prune&lt;/h3&gt; &#xA;&lt;p&gt;Remove unused data&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; Currently, &lt;code&gt;nerdctl system prune&lt;/code&gt; requires --all to be specified.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl system prune [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-a, --all&lt;/code&gt;: Remove all unused images, not just dangling ones&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Do not prompt for confirmation&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--volumes&lt;/code&gt;: Prune volumes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker system prune&lt;/code&gt; flags: &lt;code&gt;--filter&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stats&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl stats&lt;/h3&gt; &#xA;&lt;p&gt;Display a live stream of container(s) resource usage statistics.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl stats [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-a, --all&lt;/code&gt;: Show all containers (default shows just running)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--format=FORMAT&lt;/code&gt;: Pretty-print images using a Go template, e.g., &lt;code&gt;{{json .}}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-stream&lt;/code&gt;: Disable streaming stats and only pull the first result&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-trunc &lt;/code&gt;: Do not truncate output&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl top&lt;/h3&gt; &#xA;&lt;p&gt;Display the running processes of a container.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl top CONTAINER [ps OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Shell completion&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl completion bash&lt;/h3&gt; &#xA;&lt;p&gt;Generate the autocompletion script for bash.&lt;/p&gt; &#xA;&lt;p&gt;Usage: add the following line to &lt;code&gt;~/.bash_profile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source &amp;lt;(nerdctl completion bash)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or run &lt;code&gt;nerdctl completion bash &amp;gt; /etc/bash_completion.d/nerdctl&lt;/code&gt; as the root.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl completion zsh&lt;/h3&gt; &#xA;&lt;p&gt;Generate the autocompletion script for zsh.&lt;/p&gt; &#xA;&lt;p&gt;Usage: see &lt;code&gt;nerdctl completion zsh --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl completion fish&lt;/h3&gt; &#xA;&lt;p&gt;Generate the autocompletion script for fish.&lt;/p&gt; &#xA;&lt;p&gt;Usage: see &lt;code&gt;nerdctl completion fish --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl completion powershell&lt;/h3&gt; &#xA;&lt;p&gt;Generate the autocompletion script for powershell.&lt;/p&gt; &#xA;&lt;p&gt;Usage: see &lt;code&gt;nerdctl completion powershell --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compose&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose&lt;/h3&gt; &#xA;&lt;p&gt;Compose&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose [OPTIONS] [COMMAND]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --file&lt;/code&gt;: Specify an alternate compose file&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-p, --project-name&lt;/code&gt;: Specify an alternate project name&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose up&lt;/h3&gt; &#xA;&lt;p&gt;Create and start containers&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose up [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-d, --detach&lt;/code&gt;: Detached mode: Run containers in the background&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-build&lt;/code&gt;: Don&#39;t build an image, even if it&#39;s missing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-color&lt;/code&gt;: Produce monochrome output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-log-prefix&lt;/code&gt;: Don&#39;t print prefix in logs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--build&lt;/code&gt;: Build images before starting containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--ipfs&lt;/code&gt;: Build images with pulling base images from IPFS. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;./docs/ipfs.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--quiet-pull&lt;/code&gt;: Pull without printing progress information&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--scale&lt;/code&gt;: Scale SERVICE to NUM instances. Overrides the &lt;code&gt;scale&lt;/code&gt; setting in the Compose file if present.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--remove-orphans&lt;/code&gt;: Remove containers for services not defined in the Compose file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose up&lt;/code&gt; (V1) flags: &lt;code&gt;--no-deps&lt;/code&gt;, &lt;code&gt;--force-recreate&lt;/code&gt;, &lt;code&gt;--always-recreate-deps&lt;/code&gt;, &lt;code&gt;--no-recreate&lt;/code&gt;, &lt;code&gt;--no-start&lt;/code&gt;, &lt;code&gt;--abort-on-container-exit&lt;/code&gt;, &lt;code&gt;--attach-dependencies&lt;/code&gt;, &lt;code&gt;--timeout&lt;/code&gt;, &lt;code&gt;--renew-anon-volumes&lt;/code&gt;, &lt;code&gt;--exit-code-from&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker compose up&lt;/code&gt; (V2) flags: &lt;code&gt;--environment&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose logs&lt;/h3&gt; &#xA;&lt;p&gt;Create and start containers&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose logs [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-color&lt;/code&gt;: Produce monochrome output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-log-prefix&lt;/code&gt;: Don&#39;t print prefix in logs&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--timestamps&lt;/code&gt;: Show timestamps&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--tail&lt;/code&gt;: Number of lines to show from the end of the logs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker compose logs&lt;/code&gt; (V2) flags: &lt;code&gt;--since&lt;/code&gt;, &lt;code&gt;--until&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose build&lt;/h3&gt; &#xA;&lt;p&gt;Build or rebuild services.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose build [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--build-arg&lt;/code&gt;: Set build-time variables for services&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-cache&lt;/code&gt;: Do not use cache when building the image&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--progress&lt;/code&gt;: Set type of progress output (auto, plain, tty). Use plain to show container output&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--ipfs&lt;/code&gt;: Build images with pulling base images from IPFS. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;./docs/ipfs.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose build&lt;/code&gt; (V1) flags: &lt;code&gt;--compress&lt;/code&gt;, &lt;code&gt;--force-rm&lt;/code&gt;, &lt;code&gt;--memory&lt;/code&gt;, &lt;code&gt;--no-rm&lt;/code&gt;, &lt;code&gt;--parallel&lt;/code&gt;, &lt;code&gt;--pull&lt;/code&gt;, &lt;code&gt;--quiet&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose create&lt;/h3&gt; &#xA;&lt;p&gt;Creates containers for one or more services.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose create [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--build&lt;/code&gt;: Build images before starting containers&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--force-recreate&lt;/code&gt;: Recreate containers even if their configuration and image haven&#39;t changed&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-build&lt;/code&gt;: Don&#39;t build an image even if it&#39;s missing, conflict with &lt;code&gt;--build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--no-recreate&lt;/code&gt;: Don&#39;t recreate containers if they exist, conflict with &lt;code&gt;--force-recreate&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--pull&lt;/code&gt;: Pull images before running. (support always|missing|never) (default &#34;missing&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose exec&lt;/h3&gt; &#xA;&lt;p&gt;Execute a command on a running container of the service.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose exec [OPTIONS] SERVICE COMMAND [ARGS...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-d, --detach&lt;/code&gt;: Detached mode: Run the command in background&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-e, --env&lt;/code&gt;: Set environment variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--index&lt;/code&gt;: Set index of the container if the service has multiple instances. (default 1)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-i, --interactive&lt;/code&gt;: Keep STDIN open even if not attached (default true)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--privileged&lt;/code&gt;: Give extended privileges to the command&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-t, --tty&lt;/code&gt;: Allocate a pseudo-TTY&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-u, --user&lt;/code&gt;: Username or UID (format: &lt;code&gt;&amp;lt;name|uid&amp;gt;[:&amp;lt;group|gid&amp;gt;]&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-w, --workdir&lt;/code&gt;: Working directory inside the container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose exec&lt;/code&gt; (V2) flags: &lt;code&gt;-T, --no-TTY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose down&lt;/h3&gt; &#xA;&lt;p&gt;Remove containers and associated resources&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose down [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-v, --volumes&lt;/code&gt;: Remove named volumes declared in the volumes section of the Compose file and anonymous volumes attached to containers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose down&lt;/code&gt; (V1) flags: &lt;code&gt;--rmi&lt;/code&gt;, &lt;code&gt;--remove-orphans&lt;/code&gt;, &lt;code&gt;--timeout&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose images&lt;/h3&gt; &#xA;&lt;p&gt;List images used by created containers in services&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose images [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Only show numeric image IDs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose start&lt;/h3&gt; &#xA;&lt;p&gt;Start existing containers for service(s)&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose start [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose stop&lt;/h3&gt; &#xA;&lt;p&gt;Stop containers in services without removing them.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose stop [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-t, --timeout&lt;/code&gt;: Seconds to wait for stop before killing it (default 10)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose port&lt;/h3&gt; &#xA;&lt;p&gt;Print the public port for a port binding of a service container&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose port [OPTIONS] SERVICE PRIVATE_PORT&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--index&lt;/code&gt;: Index of the container if the service has multiple instances. (default 1)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--protocol&lt;/code&gt;: Protocol of the port (tcp|udp) (default &#34;tcp&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose ps&lt;/h3&gt; &#xA;&lt;p&gt;List containers of services&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose ps [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose ps&lt;/code&gt; (V1) flags: &lt;code&gt;--quiet&lt;/code&gt;, &lt;code&gt;--services&lt;/code&gt;, &lt;code&gt;--filter&lt;/code&gt;, &lt;code&gt;--all&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker compose ps&lt;/code&gt; (V2) flags: &lt;code&gt;--status&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose pull&lt;/h3&gt; &#xA;&lt;p&gt;Pull service images&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose pull [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Pull without printing progress information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose pull&lt;/code&gt; (V1) flags: &lt;code&gt;--ignore-pull-failures&lt;/code&gt;, &lt;code&gt;--parallel&lt;/code&gt;, &lt;code&gt;--no-parallel&lt;/code&gt;, &lt;code&gt;include-deps&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose push&lt;/h3&gt; &#xA;&lt;p&gt;Push service images&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose push [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose pull&lt;/code&gt; (V1) flags: &lt;code&gt;--ignore-push-failures&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose pause&lt;/h3&gt; &#xA;&lt;p&gt;Pause all processes within containers of service(s). They can be unpaused with &lt;code&gt;nerdctl compose unpause&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose pause [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose unpause&lt;/h3&gt; &#xA;&lt;p&gt;Unpause all processes within containers of service(s)&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose unpause [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose config&lt;/h3&gt; &#xA;&lt;p&gt;Validate and view the Compose file&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose config&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-q, --quiet&lt;/code&gt;: Pull without printing progress information&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--services&lt;/code&gt;: Print the service names, one per line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--volumes&lt;/code&gt;: Print the volume names, one per line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--hash=&#34;*&#34;&lt;/code&gt;: Print the service config hash, one per line.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose config&lt;/code&gt; (V1) flags: &lt;code&gt;--resolve-image-digests&lt;/code&gt;, &lt;code&gt;--no-interpolate&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker compose config&lt;/code&gt; (V2) flags: &lt;code&gt;--resolve-image-digests&lt;/code&gt;, &lt;code&gt;--no-interpolate&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, &lt;code&gt;--output&lt;/code&gt;, &lt;code&gt;--profiles&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose kill&lt;/h3&gt; &#xA;&lt;p&gt;Force stop service containers&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose kill [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-s, --signal&lt;/code&gt;: SIGNAL to send to the container (default: &#34;SIGKILL&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose restart&lt;/h3&gt; &#xA;&lt;p&gt;Restart containers of given (or all) services&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose restart [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-t, --timeout&lt;/code&gt;: Seconds to wait before restarting it (default 10)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose rm&lt;/h3&gt; &#xA;&lt;p&gt;Remove stopped service containers&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose rm [OPTIONS] [SERVICE...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --force&lt;/code&gt;: Don&#39;t prompt for confirmation (different with &lt;code&gt;-f&lt;/code&gt; in &lt;code&gt;nerdctl rm&lt;/code&gt; which means force deletion).&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-s, --stop&lt;/code&gt;: Stop containers before removing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-v, --volumes&lt;/code&gt;: Remove anonymous volumes associated with the container.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose run&lt;/h3&gt; &#xA;&lt;p&gt;Run a one-off command on a service&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose run [OPTIONS] SERVICE [COMMAND] [ARGS...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker-compose run&lt;/code&gt; (V1) flags: &lt;code&gt;--use-aliases&lt;/code&gt;, &lt;code&gt;--no-TTY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unimplemented &lt;code&gt;docker compose run&lt;/code&gt; (V2) flags: &lt;code&gt;--use-aliases&lt;/code&gt;, &lt;code&gt;--no-TTY&lt;/code&gt;, &lt;code&gt;--tty&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose top&lt;/h3&gt; &#xA;&lt;p&gt;Display the running processes of service containers&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose top [SERVICES...]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üê≥&lt;/span&gt; nerdctl compose version&lt;/h3&gt; &#xA;&lt;p&gt;Show the Compose version information (which is the nerdctl version)&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl compose version&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;-f, --format&lt;/code&gt;: Format the output. Values: [pretty | json] (default &#34;pretty&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üê≥&lt;/span&gt; &lt;code&gt;--short&lt;/code&gt;: Shows only Compose&#39;s version number&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IPFS management&lt;/h2&gt; &#xA;&lt;p&gt;P2P image distribution (IPFS) is completely optional. Your host is NOT connected to any P2P network, unless you opt in to &lt;a href=&#34;https://docs.ipfs.io/install/&#34;&gt;install and run IPFS daemon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;ü§ì&lt;/span&gt; nerdctl ipfs registry serve&lt;/h3&gt; &#xA;&lt;p&gt;Serve read-only registry backed by IPFS on localhost. This is needed to run &lt;code&gt;nerdctl build&lt;/code&gt; with pulling base images from IPFS. Other commands (e.g. &lt;code&gt;nerdctl push ipfs://&amp;lt;image-name&amp;gt;&lt;/code&gt; and &lt;code&gt;nerdctl pull ipfs://&amp;lt;CID&amp;gt;&lt;/code&gt;) don&#39;t require this.&lt;/p&gt; &#xA;&lt;p&gt;You need to install &lt;code&gt;ipfs&lt;/code&gt; command on the host. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;./docs/ipfs.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Usage: &lt;code&gt;nerdctl ipfs registry serve [OPTIONS]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--ipfs-address&lt;/code&gt;: Multiaddr of IPFS API (default is pulled from &lt;code&gt;$IPFS_PATH/api&lt;/code&gt; file. If &lt;code&gt;$IPFS_PATH&lt;/code&gt; env var is not present, it defaults to &lt;code&gt;~/.ipfs&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--listen-registry&lt;/code&gt;: Address to listen (default &lt;code&gt;localhost:5050&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--read-retry-num&lt;/code&gt;: Times to retry query on IPFS (default 0 (no retry))&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--read-timeout&lt;/code&gt;: Timeout duration of a read request to IPFS (default 0 (no timeout))&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Global flags&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--address&lt;/code&gt;: containerd address, optionally with &#34;unix://&#34; prefix&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;--host&lt;/code&gt;, &lt;code&gt;-H&lt;/code&gt;: deprecated aliases of &lt;code&gt;--address&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--namespace&lt;/code&gt;: containerd namespace&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;-n&lt;/code&gt;: deprecated alias of &lt;code&gt;--namespace&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--snapshotter&lt;/code&gt;: containerd snapshotter&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--storage-driver&lt;/code&gt;: deprecated alias of &lt;code&gt;--snapshotter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--cni-path&lt;/code&gt;: CNI binary path (default: &lt;code&gt;/opt/cni/bin&lt;/code&gt;) [&lt;code&gt;$CNI_PATH&lt;/code&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--cni-netconfpath&lt;/code&gt;: CNI netconf path (default: &lt;code&gt;/etc/cni/net.d&lt;/code&gt;) [&lt;code&gt;$NETCONFPATH&lt;/code&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;span&gt;üü¶&lt;/span&gt; &lt;code&gt;--data-root&lt;/code&gt;: nerdctl data root, e.g. &#34;/var/lib/nerdctl&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--cgroup-manager=(cgroupfs|systemd|none)&lt;/code&gt;: cgroup manager &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &#34;systemd&#34; on cgroup v2 (rootful &amp;amp; rootless), &#34;cgroupfs&#34; on v1 rootful, &#34;none&#34; on v1 rootless&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ì&lt;/span&gt; &lt;code&gt;--insecure-registry&lt;/code&gt;: skips verifying HTTPS certs, and allows falling back to plain HTTP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The global flags can be also specified in &lt;code&gt;/etc/nerdctl/nerdctl.toml&lt;/code&gt; (rootful) and &lt;code&gt;~/.config/nerdctl/nerdctl.toml&lt;/code&gt; (rootless). See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/config.md&#34;&gt;&lt;code&gt;./docs/config.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Unimplemented Docker commands&lt;/h2&gt; &#xA;&lt;p&gt;Container management:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker attach&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker diff&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker checkpoint *&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Image:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker export&lt;/code&gt; and &lt;code&gt;docker import&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker trust *&lt;/code&gt; (Instead, nerdctl supports &lt;code&gt;nerdctl pull --verify=cosign&lt;/code&gt; and &lt;code&gt;nerdctl push --sign=cosign&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/cosign.md&#34;&gt;&lt;code&gt;./docs/cosign.md&lt;/code&gt;&lt;/a&gt;.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker manifest *&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Network management:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker network connect&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker network disconnect&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Registry:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker search&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Compose:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose events|scale&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Others:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker system df&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker context&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Swarm commands are unimplemented and will not be implemented: &lt;code&gt;docker swarm|node|service|config|secret|stack *&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Plugin commands are unimplemented and will not be implemented: &lt;code&gt;docker plugin *&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Additional documents&lt;/h1&gt; &#xA;&lt;p&gt;Configuration guide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/config.md&#34;&gt;&lt;code&gt;./docs/config.md&lt;/code&gt;&lt;/a&gt;: Configuration (&lt;code&gt;/etc/nerdctl/nerdctl.toml&lt;/code&gt;, &lt;code&gt;~/.config/nerdctl/nerdctl.toml&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/registry.md&#34;&gt;&lt;code&gt;./docs/registry.md&lt;/code&gt;&lt;/a&gt;: Registry authentication (&lt;code&gt;~/.docker/config.json&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Basic features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/compose.md&#34;&gt;&lt;code&gt;./docs/compose.md&lt;/code&gt;&lt;/a&gt;: Compose&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/rootless.md&#34;&gt;&lt;code&gt;./docs/rootless.md&lt;/code&gt;&lt;/a&gt;: Rootless mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/cni.md&#34;&gt;&lt;code&gt;./docs/cni.md&lt;/code&gt;&lt;/a&gt;: CNI for containers network&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/build.md&#34;&gt;&lt;code&gt;./docs/build.md&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;nerdctl build&lt;/code&gt; with BuildKit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Advanced features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/stargz.md&#34;&gt;&lt;code&gt;./docs/stargz.md&lt;/code&gt;&lt;/a&gt;: Lazy-pulling using Stargz Snapshotter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/nydus.md&#34;&gt;&lt;code&gt;./docs/nydus.md&lt;/code&gt;&lt;/a&gt;: Lazy-pulling using Nydus Snapshotter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/overlaybd.md&#34;&gt;&lt;code&gt;./docs/overlaybd.md&lt;/code&gt;&lt;/a&gt;: Lazy-pulling using OverlayBD Snapshotter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ocicrypt.md&#34;&gt;&lt;code&gt;./docs/ocicrypt.md&lt;/code&gt;&lt;/a&gt;: Running encrypted images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/gpu.md&#34;&gt;&lt;code&gt;./docs/gpu.md&lt;/code&gt;&lt;/a&gt;: Using GPUs inside containers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/multi-platform.md&#34;&gt;&lt;code&gt;./docs/multi-platform.md&lt;/code&gt;&lt;/a&gt;: Multi-platform mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Experimental features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/experimental.md&#34;&gt;&lt;code&gt;./docs/experimental.md&lt;/code&gt;&lt;/a&gt;: Experimental features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/freebsd.md&#34;&gt;&lt;code&gt;./docs/freebsd.md&lt;/code&gt;&lt;/a&gt;: Running FreeBSD jails&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/ipfs.md&#34;&gt;&lt;code&gt;./docs/ipfs.md&lt;/code&gt;&lt;/a&gt;: Distributing images on IPFS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/builder-debug.md&#34;&gt;&lt;code&gt;./docs/builder-debug.md&lt;/code&gt;&lt;/a&gt;: Interactive debugging of Dockerfile&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Implementation details:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/dir.md&#34;&gt;&lt;code&gt;./docs/dir.md&lt;/code&gt;&lt;/a&gt;: Directory layout (&lt;code&gt;/var/lib/nerdctl&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Misc:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containerd/nerdctl/main/docs/faq.md&#34;&gt;&lt;code&gt;./docs/faq.md&lt;/code&gt;&lt;/a&gt;: FAQs and Troubleshooting&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>wtfutil/wtf</title>
    <updated>2022-12-27T01:32:10Z</updated>
    <id>tag:github.com,2022-12-27:/wtfutil/wtf</id>
    <link href="https://github.com/wtfutil/wtf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The personal information dashboard for your terminal&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/images/logo_transparent.png?raw=true&#34; title=&#34;WTF&#34; alt=&#34;WTF&#34; width=&#34;560&#34; height=&#34;560&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/wtfutil/wtf&#34;&gt;&lt;img alt=&#34;Go Report Card&#34; src=&#34;https://goreportcard.com/badge/github.com/wtfutil/wtf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/wtfutil&#34;&gt;&lt;img alt=&#34;Twitter&#34; src=&#34;https://img.shields.io/badge/follow-on%20twitter-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deepsource.io/gh/wtfutil/wtf/?ref=repository-badge}&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;DeepSource&#34; title=&#34;DeepSource&#34; src=&#34;https://deepsource.io/gh/wtfutil/wtf.svg/?label=active+issues&amp;amp;show_trend=true&amp;amp;token=kSJAbELF2TA7rEHjK6RPUrj5&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;WTF (aka &#39;wtfutil&#39;) is the personal information dashboard for your terminal, providing at-a-glance access to your very important but infrequently-needed stats and data.&lt;/p&gt; &#xA;&lt;p&gt;Used by thousands of developers and tech people around the world, WTF is free and open-source. To support the continued use and development of WTF, please consider sponsoring WTF via &lt;a href=&#34;https://github.com/sponsors/senorprogrammer&#34;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Are you a contributor or sponsor?&lt;/h3&gt; &#xA;&lt;p&gt;Awesome! &lt;a href=&#34;https://wtfutil.com/sponsors/exit_message/&#34;&gt;See here&lt;/a&gt; for how you can change the exit message, the message WTF shows when quitting, to something special just for you.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsored by&lt;/h2&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Robusta.dev&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://home.robusta.dev/?utm_source=wtfutil&amp;amp;utm_medium=oss-sponsorship&amp;amp;utm_id=wtfutil-sponsorship&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/images/sponsors/robusta.png?raw=true&#34; height=&#34;60&#34; title=&#34;Robusta.dev&#34; alt=&#34;Robusta.dev&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Airbrake&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://airbrake.io/?utm_medium=sponsor&amp;amp;utm_source=WTFutill&amp;amp;utm_content=airbrake-home-page&amp;amp;utm_campaign=2021-sponsorships&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/images/sponsors/airbrake.png?raw=true&#34; height=&#34;60&#34; title=&#34;Airbrake&#34; alt=&#34;Airbrake&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#installing-via-homebrew&#34;&gt;Installing via Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#installing-via-macports&#34;&gt;Installing via MacPorts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#installing-a-binary&#34;&gt;Installing a Binary&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#installing-from-source&#34;&gt;Installing from Source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#running-via-docker&#34;&gt;Running via Docker&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#communication&#34;&gt;Communication&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#github-discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#twitter&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#modules&#34;&gt;Modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#getting-bugs-fixed-or-features-added&#34;&gt;Getting Bugs Fixed or Features Added&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#contributing-to-the-source-code&#34;&gt;Contributing to the Source Code&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#adding-dependencies&#34;&gt;Adding Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#contributing-to-the-documentation&#34;&gt;Contributing to the Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/#acknowledgments&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/images/screenshot.jpg&#34; title=&#34;screenshot&#34; width=&#34;720&#34; height=&#34;420&#34;&gt; &lt;/p&gt;&#xA;&lt;h2&gt;Installation&lt;/h2&gt;&#xA;&lt;h3&gt;Installing via Homebrew&lt;/h3&gt;&#xA;&lt;p&gt;The simplest way from Homebrew:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install wtfutil&#xA;&#xA;wtfutil&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;That version can sometimes lag a bit, as recipe updates take time to get accepted into &lt;code&gt;homebrew-core&lt;/code&gt;. If you always want the bleeding edge of releases, you can tap it:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew tap wtfutil/wtfutil&#xA;brew install wtfutil&#xA;&#xA;wtfutil&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3&gt;Installing via MacPorts&lt;/h3&gt;&#xA;&lt;p&gt;You can also install via &lt;a href=&#34;https://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo port selfupdate&#xA;sudo port install wtfutil&#xA;&#xA;wtfutil&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3&gt;Installing a Binary&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wtfutil/wtf/releases&#34;&gt;Download the latest binary&lt;/a&gt; from GitHub.&lt;/p&gt;&#xA;&lt;p&gt;WTF is a stand-alone binary. Once downloaded, copy it to a location you can run executables from (ie: &lt;code&gt;/usr/local/bin/&lt;/code&gt;), and set the permissions accordingly:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod a+x /usr/local/bin/wtfutil&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;and you should be good to go.&lt;/p&gt;&#xA;&lt;h3&gt;Installing from Source&lt;/h3&gt;&#xA;&lt;p&gt;If you want to run the build command from within your &lt;code&gt;$GOPATH&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Set the Go proxy&#xA;export GOPROXY=&#34;https://proxy.golang.org,direct&#34;&#xA;&#xA;# Disable the Go checksum database&#xA;export GOSUMDB=off&#xA;&#xA;# Enable Go modules&#xA;export GO111MODULE=on&#xA;&#xA;go get -u github.com/wtfutil/wtf&#xA;cd $GOPATH/src/github.com/wtfutil/wtf&#xA;make install&#xA;make run&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;If you want to run the build command from a folder that is not in your &lt;code&gt;$GOPATH&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Set the Go proxy&#xA;export GOPROXY=&#34;https://proxy.golang.org,direct&#34;&#xA;&#xA;go get -u github.com/wtfutil/wtf&#xA;cd $GOPATH/src/github.com/wtfutil/wtf&#xA;make install&#xA;make run&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3&gt;Installing from Source using Docker&lt;/h3&gt;&#xA;&lt;p&gt;All building is done inside a docker container. You can then copy the binary to your local machine.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -o Dockerfile.build https://raw.githubusercontent.com/wtfutil/wtf/master/Dockerfile.build&#xA;docker build -f Dockerfile.build -t wtfutil --build-arg=version=master .&#xA;docker create --name wtf_build wtfutil&#xA;docker cp wtf_build:/usr/local/bin/wtfutil ~/.local/bin&#xA;docker rm wtf_build&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; WTF is &lt;em&gt;only&lt;/em&gt; compatible with Go versions &lt;strong&gt;1.16.0&lt;/strong&gt; or later (due to the use of Go modules and newer standard library functions). If you would like to use &lt;code&gt;gccgo&lt;/code&gt; to compile, you &lt;em&gt;must&lt;/em&gt; use &lt;code&gt;gccgo-9&lt;/code&gt; or later which introduces support for Go modules.&lt;/p&gt;&#xA;&lt;h3&gt;Installing via Arch User Repository&lt;/h3&gt;&#xA;&lt;p&gt;Arch Linux users can utilise the &lt;a href=&#34;https://aur.archlinux.org/packages/wtfutil&#34;&gt;wtfutil&lt;/a&gt; package to build it from source, or &lt;a href=&#34;https://aur.archlinux.org/packages/wtfutil-bin/&#34;&gt;wtfutil-bin&lt;/a&gt; to install pre-built binaries.&lt;/p&gt;&#xA;&lt;h2&gt;Running via Docker&lt;/h2&gt;&#xA;&lt;p&gt;You can run &lt;code&gt;wtf&lt;/code&gt; inside a docker container:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# download or create the Dockerfile&#xA;curl -o Dockerfile https://raw.githubusercontent.com/wtfutil/wtf/master/Dockerfile&#xA;&#xA;# build the docker container&#xA;docker build -t wtfutil .&#xA;&#xA;# or for a particular tag or branch&#xA;docker build --build-arg=version=v0.25.0 -t wtfutil .&#xA;&#xA;# run the container&#xA;docker run -it wtfutil&#xA;&#xA;# run container with a local config file&#xA;docker run -it -v path/to/config.yml:/config/config.yml wtfutil --config=/config/config.yml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2&gt;Communication&lt;/h2&gt;&#xA;&lt;h3&gt;GitHub Discussions&lt;/h3&gt;&#xA;&lt;p&gt;Conversations, ideas, discussions are done on &lt;a href=&#34;https://github.com/wtfutil/wtf/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Formerly they were on Slack; that channel has been deprecated.&lt;/p&gt;&#xA;&lt;h3&gt;Twitter&lt;/h3&gt;&#xA;&lt;p&gt;Also, follow &lt;a href=&#34;https://twitter.com/wtfutil&#34;&gt;on Twitter&lt;/a&gt; for news and latest updates.&lt;/p&gt;&#xA;&lt;h2&gt;Documentation&lt;/h2&gt;&#xA;&lt;p&gt;See &lt;a href=&#34;https://wtfutil.com&#34;&gt;https://wtfutil.com&lt;/a&gt; for the definitive documentation. Here&#39;s some short-cuts:&lt;/p&gt;&#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/quick_start/&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/configuration/files/&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/&#34;&gt;Module Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Modules&lt;/h2&gt;&#xA;&lt;p&gt;Modules are the chunks of functionality that make WTF useful. Modules are added and configured by including their configuration values in your &lt;code&gt;config.yml&lt;/code&gt; file. The documentation for each module describes how to configure them.&lt;/p&gt;&#xA;&lt;p&gt;Some interesting modules you might consider adding to get you started:&lt;/p&gt;&#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/digitalocean/&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/github/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/google/gcal/&#34;&gt;Google Calendar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/hackernews/&#34;&gt;HackerNews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/hibp/&#34;&gt;Have I Been Pwned&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/newrelic/&#34;&gt;NewRelic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/opsgenie/&#34;&gt;OpsGenie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/security/&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/transmission/&#34;&gt;Transmission&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wtfutil.com/modules/trello/&#34;&gt;Trello&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Getting Bugs Fixed or Features Added&lt;/h2&gt;&#xA;&lt;p&gt;WTF is open-source software, informally maintained by a small collection of volunteers who come and go at their leisure. There are absolutely no guarantees that, even if an issue is opened for them, bugs will be fixed or features added.&lt;/p&gt;&#xA;&lt;p&gt;If there is a bug that you really need to have fixed or a feature you really want to have implemented, you can greatly increase your chances of that happening by creating a bounty on &lt;a href=&#34;https://www.bountysource.com&#34;&gt;BountySource&lt;/a&gt; to provide an incentive for someone to tackle it.&lt;/p&gt;&#xA;&lt;h2&gt;Contributing to the Source Code&lt;/h2&gt;&#xA;&lt;p&gt;First, kindly read &lt;a href=&#34;https://dave.cheney.net/2019/02/18/talk-then-code&#34;&gt;Talk, then code&lt;/a&gt; by Dave Cheney. It&#39;s great advice and will often save a lot of time and effort.&lt;/p&gt;&#xA;&lt;p&gt;Next, kindly read &lt;a href=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on our code of conduct, and the process for submitting pull requests.&lt;/p&gt;&#xA;&lt;p&gt;Then create your branch, write your code, submit your PR, and join the rest of the awesome people who&#39;ve contributed their time and effort towards WTF. Without their contributors, WTF wouldn&#39;t be possible.&lt;/p&gt;&#xA;&lt;p&gt;Don&#39;t worry if you&#39;ve never written Go before, or never contributed to an open source project before, or that your code won&#39;t be good enough. For a surprising number of people WTF has been their first Go project, or first open source contribution. If you&#39;re here, and you&#39;ve read this far, you&#39;re the right stuff.&lt;/p&gt;&#xA;&lt;h2&gt;Contributing to the Documentation&lt;/h2&gt;&#xA;&lt;p&gt;Documentation now lives in its own repository here: &lt;a href=&#34;https://github.com/wtfutil/wtfdocs&#34;&gt;https://github.com/wtfutil/wtfdocs&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Please make all additions and updates to documentation in that repository.&lt;/p&gt;&#xA;&lt;h3&gt;Adding Dependencies&lt;/h3&gt;&#xA;&lt;p&gt;Dependency management in WTF is handled by &lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34;&gt;Go modules&lt;/a&gt;. Please check out that page for more details on how Go modules work.&lt;/p&gt;&#xA;&lt;h2&gt;Contributors&lt;/h2&gt;&#xA;&lt;table&gt;                                                             &#xA; &lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA; &lt;!-- prettier-ignore-start --&gt; &#xA; &lt;!-- markdownlint-disable --&gt; &#xA;&lt;/table&gt;&#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/senorprogrammer&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/6413?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Cummer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/anandsudhir&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/3252403?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anand Sudhir Prayaga&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jeangovil&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/34973359?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hossein Mehrabi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Fengyalv&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/11779018?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;FengYa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://fluxionnetwork.github.io/fluxion/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/17337753?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;deltax&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/BillKeenan&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1319630?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bill Keenan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://blog.sapara.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/118081?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;June S&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/XanthusL&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/16461061?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;liyiheng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/baustinanki&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/9014288?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;baustinanki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lixin9311&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/371475?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lucus lee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mxplusb&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/7537841?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mike Lloyd&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://rubiojr.rbel.co&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/10998?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergio Rubio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/FarhadF&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/17374492?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Farhad Farahi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://lasantha.blogspot.com/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/634604?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lasantha Kularatne&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dlom&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/823331?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mark Old&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://flw.tools/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5546718?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;flw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/davebarda&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/6024927?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Barda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/matrinox&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/4261980?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Geoff Lee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://international.github.io&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1022918?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;George Opritescu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/Grazfather&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/497310?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Grazfather&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.mikecordell.com/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1691120?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Cordell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://patrick.ibexcps.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1215497?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patrick Jos√© Pereira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sherodtaylor&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1483092?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sherod taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://cogentia.io&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/3062663?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Scott&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lsipii&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/12018440?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lassi Piironen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/BlackWebWolf&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/14799210?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;BlackWebWolf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/andrewzolotukhin&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1894885?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;andrewzolotukhin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://retgits.github.io&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/8568280?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leon Stigter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://tamimi.se&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/21756?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amr Tamimi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://jagdeep.me&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/3717137?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jagdeep Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/darkSasori&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/889171?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lineu Felipe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kvj&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/159124?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Konstantin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.brendanoleary.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/6044920?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brendan O&#39;Leary&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bertl4398&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1226441?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bertl4398&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Ferenc-&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/6553695?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ferenc-&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://rohanverma.net&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/952036?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rohan Verma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/fimtitzgerald&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/19293566?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim Fitzgerald&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ruggi&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1081051?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Federico Ruggi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ctwoodward&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/7293328?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Craig Woodward&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/ReadmeCritic&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/15367484?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ReadmeCritic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jdevelop&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/141402?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eugene&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Trinergy&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/12983705?s=460&amp;amp;v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kenny Wu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.romeroruiz.com&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/538234?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ren√°n Romero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sticreations&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/5031240?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bastian Gro√ü&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nicholas-eden&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/2496835?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;nicholas-eden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/danrabinowitz&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/279390?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan Rabinowitz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dvdmssmnn&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/6897575?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Missmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mweb&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/882006?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mathias Weber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TheRedSpy15&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/32081703?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;TheRedSpy15&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/harald-nordgren-44778192&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/9569897?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Harald Nordgren&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://stormfirefox1.github.io&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/11583824?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matei Alexandru Gardus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Seanstoppable&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1523955?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sean Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://kaskavalci.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1646238?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Halil Kaskavalci&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.johandenoyer.fr&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/246715?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Johan Denoyer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://skymeyer.be&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/593516?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jelle Vink&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://imdevinc.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3997333?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Devin Collins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://danne.stayskal.com/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/18333?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Danne Stayskal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.maxbeizer.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/2006658?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Max Beizer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://tinyurl.com/nwmj4as&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/194392?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;E:V:A&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/GaboFDC&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1425500?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabriel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/AndrewScibek&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/10111411?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Scibek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/FriedCosey&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/29709822?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;FriedCosey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://michelegera.dev/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3891?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michele Gerarduzzi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rudolphjacksonm&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/13438569?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack Morris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/foorb&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/14993807?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;foorb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://researchit.las.iastate.edu&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5819098?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Levi Baber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gnanderson&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/38514?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Graham Anderson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bosr&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1936828?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Romain Bossart&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://eonix.ru&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/969838?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kirill Motkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.BrianChoromanski.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3665694?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brian Choromanski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://siobud.com&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1302304?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sean DuBois&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gary-kim&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/47195730?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gary Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dylanbartels.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/6660171?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dylan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://liet.me&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1990354?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmytro Prokhorenkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/elliotrushton&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/590442?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Elliot&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://chenrui.dev&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1580956?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;chenrui&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sudermanjr&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/7624765?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Suderman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rwhogg&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/2373856?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bob &#39;Wombat&#39; Hogg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hxw&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/143462?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christopher Hall&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hneiva&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3451557?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Heitor Neiva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/herbygillot&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/618376?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Herby Gillot&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://brudil.com&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/382352?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Canning&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/jeffz4000&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/45892?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jeffz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mikkeljuhl.com&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1764035?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mikkel Jeppesen Juhl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lesteenman&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/963290?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nyourchuck&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/155574?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nate Yourchuck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://cprimozic.net/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/4335849?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Casey Primozic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://pierdelacabeza.com/maruja&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/2430915?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alvaro [Andor]&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Midnight-Conqueror&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/17101621?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joel Valentine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.viktor-braun.de&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/4738210?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Viktor Braun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.chrisdbrown.co.uk/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/3877652?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ChrisDBrown&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://narengowda.github.io/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/582821?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Narendra L&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ibaum&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/24609103?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ibaum&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/noxer&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/566185?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim Scheuermann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://indradhanush.github.io/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/2682729?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Indradhanush Gupta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://victoravelar.com&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/7926849?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Victor Hugo Avelar Ossorio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/scw007&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/4001640?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Whitehead&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lawrencecraft&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/660580?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lawrence Craft&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://avi.press&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1388071?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Avi Press&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tardog&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/22562624?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sarah Kra√ünigg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://jmks.ca&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/4923990?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason Schweier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/massa1240&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/8268483?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Massa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://boot-error.github.io&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/8546140?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vighnesh SK&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://alexfornuto.com&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/2349184?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Fornuto&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/stevenwhitehead&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/30630257?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;stevenwhitehead&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jdenoy-saagie&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/55875303?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Johan Denoyer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://albertsalim.dev&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/4749355?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Albert Salim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://Feliciano.Tech&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/6017470?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ricardo N Feliciano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/3mard&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/42009880?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Omer Davutoglu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hemu&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1871299?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hemu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Daanikus&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/18027087?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan Bent&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://cizer.dev&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/20225764?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;C123R&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/madepolli&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/7237000?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matja≈æ Depolli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://blog.schoentoon.blue&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/417618?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Toon Schoenmakers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://tdhttt.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/24703459?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;TDHTTTT&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jottr&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/2744198?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jottr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/nikolay-mateev-79187b167/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/15074116?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikolay Mateev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://charliewang.io&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1320418?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Charlie Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/liyiheng&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/16461061?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;liyiheng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://bjoern.svbtle.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1467156?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bjoern Weidlich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/firecat53&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/568113?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Hansen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://davidsbond.github.io&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/6227720?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Bond&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/yesnault&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/395454?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yvonnick Esnault&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/leterio&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/15060358?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vin√≠cius Let√©rio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://adriano.fyi&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/3331648?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adriano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jonhadfield&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/843944?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jon Hadfield&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tdnshah&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/13272752?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tejas Shah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mogensen&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/592710?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frederik Mogensen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rsaarelm&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/41840?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Risto Saarelma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sam-github.github.io/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/17607?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam Roberts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gerchardon&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5973160?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;gerchardon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mryanmurphy&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/641427?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://devco.net/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/82342?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;R.I.Pienaar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/fmotrifork&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/18327738?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frederik Mogensen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/aeter&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/238607?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;aeter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://timhwang21.gitbook.io&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/5831434?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim Hwang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://about.me/yingfan&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/10404961?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ying Fan Chong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/MartinJohns&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/5269069?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin Johns&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.jvt.me&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/3315059?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jamie Tanna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/trimble&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/371317?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Todd Trimble&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.mitchellhanberg.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/5523984?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mitchell Hanberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://franga2000.com&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/3891092?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miha Frange≈æ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://blog.sahilister.in/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/52946452?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sahil Dhiman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pzoo.netlify.app/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/17727004?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pingzhou | Âπ≥Ëàü&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/YuviGold&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/29873449?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yuval Goldberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dabcoder&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/5034531?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Bouchare&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/stone&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/29077?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fredrik Steen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/zye1996&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/28901953?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;zye1996&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/pgaxatte&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/30696904?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pierre Gaxatte&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://xntrik.wtf&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/678260?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christian Frichot&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lukas-kaemmerling.de&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4281581?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lukas K√§mmerling&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://inetant.net/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1765366?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Antoine Meillet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.patreon.com/cclauss&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3709715?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christian Clauss&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/GibranHL0&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/61842675?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gibran Herrera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://hjr265.me/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/348107?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mahmud Ridwan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://tadeas.dev/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/33228844?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;tadeas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/tnwei&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12769364?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;tnwei&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Ginner&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/26798615?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ginner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Battleman&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6746316?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Olivier Cloux&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dogukanturan&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/32000865?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dogukan Turan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/devenda-avoma&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/72001066?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Devendra Laulkar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nontw&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9658731?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;nont&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://kyrylo.org/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1079123?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kyrylo Silin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/yosmoc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9694?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yoshihisa Mochihara&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/thuan1412&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/36019052?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;thuan1412&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/siddhant94&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8606880?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Siddhant Sinha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://resamvi.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6261556?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Julien Midedji&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hypnoglow&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4853075?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Igor Zibarev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://juneezee.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20135478?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eng Zer Jun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Quentinchampenois&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/26109239?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Quentin Champ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/igbanam&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/390059?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Igbanam Ogbuluijah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gcg&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/811685?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guney Can Gokoglu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://des.wtf/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6239776?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Des Preston&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://labesse.fr/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5497623?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Labesse K√©vin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/asadali&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3761605?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Asad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mrkc.me/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/261361?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;markcaudill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/fabge&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/21140791?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabian Geiger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dhutty-numo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62157262?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Duncan Hutty&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://gliptak.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/50109?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;G√°bor Lipt√°k&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Bizzaro&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10475262?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Albert Fung&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/pliski&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6731247?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pliski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/zyrre&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2995732?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Krantz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/c/bashbunni&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15822994?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bashbunni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://ronrecord.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/940230?v=4?s=48&#34; width=&#34;48px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ronald Record&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;The inspiration for &lt;code&gt;WTF&lt;/code&gt; came from Monica Dinculescu&#39;s &lt;a href=&#34;https://github.com/notwaldorf/tiny-care-terminal&#34;&gt;tiny-care-terminal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;WTF is built atop &lt;a href=&#34;https://github.com/gdamore/tcell&#34;&gt;tcell&lt;/a&gt; and &lt;a href=&#34;https://github.com/rivo/tview&#34;&gt;tview&lt;/a&gt;, fantastic projects both. WTF is built, packaged, and deployed via &lt;a href=&#34;https://goreleaser.com&#34;&gt;GoReleaser&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wtfutil/wtf/master/images/dude_wtf.png?raw=true&#34; title=&#34;Dude WTF&#34; width=&#34;251&#34; height=&#34;201&#34;&gt; &lt;/p&gt;</summary>
  </entry>
</feed>