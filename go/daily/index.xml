<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-10T01:34:44Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>v2rayA/v2rayA</title>
    <updated>2022-10-10T01:34:44Z</updated>
    <id>tag:github.com,2022-10-10:/v2rayA/v2rayA</id>
    <link href="https://github.com/v2rayA/v2rayA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A web GUI client of Project V which supports V2Ray, Xray, SS, SSR, Trojan and Pingtunnel 🚀&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2rayA &lt;a href=&#34;https://hub.docker.com/r/mzz2017/v2raya&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/cloud/build/v2rayA/v2raya&#34; alt=&#34;Docker Cloud Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/v2rayA/v2rayA&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/v2rayA/v2rayA?label=travis-ci%20build&#34; alt=&#34;Travis (.org)&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/v2rayA/v2rayA/raw/master/README.md&#34;&gt;&lt;strong&gt;English&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/v2rayA/v2rayA/raw/master/README_zh.md&#34;&gt;&lt;strong&gt;简体中文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;v2rayA is a V2Ray Linux client supporting global transparent proxy, compatible with SS, SSR, Trojan(trojan-go), &lt;a href=&#34;https://github.com/esrrhs/pingtunnel&#34;&gt;PingTunnel&lt;/a&gt; protocols. &lt;a href=&#34;https://github.com/v2rayA/shadowsocksR/raw/master/README.md#ss-encrypting-algorithm&#34;&gt;[SSR protocol list]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We are committed to providing the simplest operation and meet most needs.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to the advantages of Web GUI, you can not only use it on your local computer, but also easily deploy it on a router or NAS.&lt;/p&gt; &#xA;&lt;p&gt;Project：&lt;a href=&#34;https://github.com/v2rayA/v2rayA&#34;&gt;https://github.com/v2rayA/v2rayA&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;v2rayA mainly provides the following methods of installation:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install from apt-source or AUR&lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Binary file and installation package&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://v2raya.org/en/docs/prologue/introduction/&#34;&gt;&lt;strong&gt;v2rayA - Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;img src=&#34;https://i.loli.net/2020/04/19/gt3NqOMiafYbp7L.png&#34; border=&#34;0&#34;&gt; &#xA;&lt;h2&gt;Statement&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The program does not store any user data in the cloud, and all user data is stored in local.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do not use this project for illegal purposes.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hq450/fancyss&#34;&gt;hq450/fancyss&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ToutyRater/v2ray-guide/raw/master/routing/sitedata.md&#34;&gt;ToutyRater/v2ray-guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nadoo/glider&#34;&gt;nadoo/glider&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Loyalsoldier/v2ray-rules-dat&#34;&gt;Loyalsoldier/v2ray-rules-dat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zfl9/ss-tproxy/raw/master/ss-tproxy&#34;&gt;zfl9/ss-tproxy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/v2rayA/v2rayA&#34;&gt;&lt;img src=&#34;https://starchart.cc/v2rayA/v2rayA.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-AGPL%20v3-blue.svg?sanitize=true&#34; alt=&#34;License: AGPL v3-only&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flipped-aurora/gin-vue-admin</title>
    <updated>2022-10-10T01:34:44Z</updated>
    <id>tag:github.com,2022-10-10:/flipped-aurora/gin-vue-admin</id>
    <link href="https://github.com/flipped-aurora/gin-vue-admin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于vite+vue3+gin搭建的开发基础平台（支持TS,JS混用），集成jwt鉴权，权限管理，动态路由，显隐可控组件，分页封装，多点登录拦截，资源权限，上传下载，代码生成器，表单生成器等开发必备功能。&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;http://qmplusimg.henrongyi.top/gvalogo.jpg&#34; width=&#34;300&amp;quot;&#34; height=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/golang-1.16-blue&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/gin-1.7.0-lightBlue&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/vue-3.2.25-brightgreen&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/element--plus-2.0.1-green&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/gorm-1.22.5-red&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flipped-aurora/gin-vue-admin/main/README-en.md&#34;&gt;English&lt;/a&gt; | 简体中文&lt;/p&gt; &#xA;&lt;h2&gt;不同版本&lt;/h2&gt; &#xA;&lt;p&gt;我们会对以下四个版本持续维护，请选择适合自己的版本使用。最新技术栈为组合式api版本，已支持多语言（I18N）&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flipped-aurora/gin-vue-admin&#34;&gt;组合式API版（主）&lt;/a&gt; | &lt;a href=&#34;https://github.com/flipped-aurora/gin-vue-admin/tree/i18n-dev-new&#34;&gt;组合式API多语言(i18n)版&lt;/a&gt; | &lt;a href=&#34;https://github.com/flipped-aurora/gin-vue-admin/tree/v2.4.x&#34;&gt;声明式API版&lt;/a&gt; | &lt;a href=&#34;https://github.com/flipped-aurora/gin-vue-admin/tree/i18n-dev&#34;&gt;声明式API多语言(i18n)版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;项目文档&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gin-vue-admin.com&#34;&gt;在线文档&lt;/a&gt; : &lt;a href=&#34;https://www.gin-vue-admin.com&#34;&gt;https://www.gin-vue-admin.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gin-vue-admin.com/guide/start-quickly/initialization.html&#34;&gt;初始化&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1Rg411u7xH&#34;&gt;从环境到部署教学视频&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gin-vue-admin.com/guide/start-quickly/env.html&#34;&gt;开发教学&lt;/a&gt; (贡献者: &lt;a href=&#34;https://github.com/LLemonGreen&#34;&gt;LLemonGreen&lt;/a&gt; And &lt;a href=&#34;https://github.com/fkk0509&#34;&gt;Fann&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://support.qq.com/products/371961&#34;&gt;交流社区&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://plugin.gin-vue-admin.com/&#34;&gt;插件市场&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;重要提示&lt;/h1&gt; &#xA;&lt;p&gt;1.本项目从起步到开发到部署均有文档和详细视频教程&lt;/p&gt; &#xA;&lt;p&gt;2.本项目需要您有一定的golang和vue基础&lt;/p&gt; &#xA;&lt;p&gt;3.您完全可以通过我们的教程和文档完成一切操作，因此我们不再提供免费的技术服务，如需服务请进行&lt;a href=&#34;https://www.gin-vue-admin.com/coffee/payment.html&#34;&gt;付费支持&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;4.如果您将此项目用于商业用途，请遵守Apache2.0协议并保留作者技术支持声明。您需保留如下版权声明信息，其余信息功能不做任何限制。如需剔除请&lt;a href=&#34;https://www.gin-vue-admin.com/empower/index.html&#34;&gt;购买授权&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://qmplusimg.henrongyi.top/%E6%8E%88%E6%9D%83.png&#34; width=&#34;1000&#34;&gt; &#xA;&lt;h2&gt;1. 基本介绍&lt;/h2&gt; &#xA;&lt;h3&gt;1.1 项目介绍&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Gin-vue-admin是一个基于 &lt;a href=&#34;https://vuejs.org&#34;&gt;vue&lt;/a&gt; 和 &lt;a href=&#34;https://gin-gonic.com&#34;&gt;gin&lt;/a&gt; 开发的全栈前后端分离的开发基础平台，集成jwt鉴权，动态路由，动态菜单，casbin鉴权，表单生成器，代码生成器等功能，提供多种示例文件，让您把更多时间专注在业务开发上。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://demo.gin-vue-admin.com&#34;&gt;在线预览&lt;/a&gt;: &lt;a href=&#34;http://demo.gin-vue-admin.com&#34;&gt;http://demo.gin-vue-admin.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;测试用户名：admin&lt;/p&gt; &#xA;&lt;p&gt;测试密码：123456&lt;/p&gt; &#xA;&lt;h3&gt;1.2 贡献指南&lt;/h3&gt; &#xA;&lt;p&gt;Hi! 首先感谢你使用 gin-vue-admin。&lt;/p&gt; &#xA;&lt;p&gt;Gin-vue-admin 是一套为快速研发准备的一整套前后端分离架构式的开源框架，旨在快速搭建中小型项目。&lt;/p&gt; &#xA;&lt;p&gt;Gin-vue-admin 的成长离不开大家的支持，如果你愿意为 gin-vue-admin 贡献代码或提供建议，请阅读以下内容。&lt;/p&gt; &#xA;&lt;h4&gt;1.2.1 Issue 规范&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;issue 仅用于提交 Bug 或 Feature 以及设计相关的内容，其它内容可能会被直接关闭。如果你在使用时产生了疑问，请到 Slack 或 &lt;a href=&#34;https://gitter.im/ElemeFE/element&#34;&gt;Gitter&lt;/a&gt; 里咨询。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在提交 issue 之前，请搜索相关内容是否已被提出。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.2.2 Pull Request 规范&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;请先 fork 一份到自己的项目下，不要直接在仓库下建分支。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;commit 信息要以&lt;code&gt;[文件名]: 描述信息&lt;/code&gt; 的形式填写，例如 &lt;code&gt;README.md: fix xxx bug&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果是修复 bug，请在 PR 中给出描述信息。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;合并代码需要两名维护人员参与：一人进行 review 后 approve，另一人再次 review，通过后即可合并。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. 使用说明&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;- node版本 &amp;gt; v16.8.3&#xA;- golang版本 &amp;gt;= v1.16&#xA;- IDE推荐：Goland&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.1 server项目&lt;/h3&gt; &#xA;&lt;p&gt;使用 &lt;code&gt;Goland&lt;/code&gt; 等编辑工具，打开server目录，不可以打开 gin-vue-admin 根目录&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;# 克隆项目&#xA;git clone https://github.com/flipped-aurora/gin-vue-admin.git&#xA;# 进入server文件夹&#xA;cd server&#xA;&#xA;# 使用 go mod 并安装go依赖包&#xA;go generate&#xA;&#xA;# 编译 &#xA;go build -o server main.go (windows编译命令为go build -o server.exe main.go )&#xA;&#xA;# 运行二进制&#xA;./server (windows运行命令为 server.exe)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.2 web项目&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 进入web文件夹&#xA;cd web&#xA;&#xA;# 安装依赖&#xA;npm install&#xA;&#xA;# 启动web项目&#xA;npm run serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.3 swagger自动化API文档&lt;/h3&gt; &#xA;&lt;h4&gt;2.3.1 安装 swagger&lt;/h4&gt; &#xA;&lt;h5&gt;（1）可以访问外国网站&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get -u github.com/swaggo/swag/cmd/swag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;（2）无法访问外国网站&lt;/h5&gt; &#xA;&lt;p&gt;由于国内没法安装 go.org/x 包下面的东西，推荐使用 &lt;a href=&#34;https://goproxy.cn&#34;&gt;goproxy.cn&lt;/a&gt; 或者 &lt;a href=&#34;https://goproxy.io/zh/&#34;&gt;goproxy.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 如果您使用的 Go 版本是 1.13 - 1.15 需要手动设置GO111MODULE=on, 开启方式如下命令, 如果你的 Go 版本 是 1.16 ~ 最新版 可以忽略以下步骤一&#xA;# 步骤一、启用 Go Modules 功能&#xA;go env -w GO111MODULE=on &#xA;# 步骤二、配置 GOPROXY 环境变量&#xA;go env -w GOPROXY=https://goproxy.cn,https://goproxy.io,direct&#xA;&#xA;# 如果嫌弃麻烦,可以使用go generate 编译前自动执行代码, 不过这个不能使用 `Goland` 或者 `Vscode` 的 命令行终端&#xA;cd server&#xA;go generate -run &#34;go env -w .*?&#34;&#xA;&#xA;# 使用如下命令下载swag&#xA;go get -u github.com/swaggo/swag/cmd/swag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2.3.2 生成API文档&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd server&#xA;swag init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;执行上面的命令后，server目录下会出现docs文件夹里的 &lt;code&gt;docs.go&lt;/code&gt;, &lt;code&gt;swagger.json&lt;/code&gt;, &lt;code&gt;swagger.yaml&lt;/code&gt; 三个文件更新，启动go服务之后, 在浏览器输入 &lt;a href=&#34;http://localhost:8888/swagger/index.html&#34;&gt;http://localhost:8888/swagger/index.html&lt;/a&gt; 即可查看swagger文档&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;2.4 VSCode工作区&lt;/h3&gt; &#xA;&lt;h4&gt;2.4.1 开发&lt;/h4&gt; &#xA;&lt;p&gt;使用&lt;code&gt;VSCode&lt;/code&gt;打开根目录下的工作区文件&lt;code&gt;gin-vue-admin.code-workspace&lt;/code&gt;，在边栏可以看到三个虚拟目录：&lt;code&gt;backend&lt;/code&gt;、&lt;code&gt;frontend&lt;/code&gt;、&lt;code&gt;root&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h4&gt;2.4.2 运行/调试&lt;/h4&gt; &#xA;&lt;p&gt;在运行和调试中也可以看到三个task：&lt;code&gt;Backend&lt;/code&gt;、&lt;code&gt;Frontend&lt;/code&gt;、&lt;code&gt;Both (Backend &amp;amp; Frontend)&lt;/code&gt;。运行&lt;code&gt;Both (Backend &amp;amp; Frontend)&lt;/code&gt;可以同时启动前后端项目。&lt;/p&gt; &#xA;&lt;h4&gt;2.4.3 settings&lt;/h4&gt; &#xA;&lt;p&gt;在工作区配置文件中有&lt;code&gt;go.toolsEnvVars&lt;/code&gt;字段，是用于&lt;code&gt;VSCode&lt;/code&gt;自身的go工具环境变量。此外在多go版本的系统中，可以通过&lt;code&gt;gopath&lt;/code&gt;、&lt;code&gt;go.goroot&lt;/code&gt;指定运行版本。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;    &#34;go.gopath&#34;: null,&#xA;    &#34;go.goroot&#34;: null,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. 技术选型&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;前端：用基于 &lt;a href=&#34;https://vuejs.org&#34;&gt;Vue&lt;/a&gt; 的 &lt;a href=&#34;https://github.com/ElemeFE/element&#34;&gt;Element&lt;/a&gt; 构建基础页面。&lt;/li&gt; &#xA; &lt;li&gt;后端：用 &lt;a href=&#34;https://gin-gonic.com/&#34;&gt;Gin&lt;/a&gt; 快速搭建基础restful风格API，&lt;a href=&#34;https://gin-gonic.com/&#34;&gt;Gin&lt;/a&gt; 是一个go语言编写的Web框架。&lt;/li&gt; &#xA; &lt;li&gt;数据库：采用&lt;code&gt;MySql&lt;/code&gt; &amp;gt; (5.7) 版本 数据库引擎 InnoDB，使用 &lt;a href=&#34;http://gorm.cn&#34;&gt;gorm&lt;/a&gt; 实现对数据库的基本操作。&lt;/li&gt; &#xA; &lt;li&gt;缓存：使用&lt;code&gt;Redis&lt;/code&gt;实现记录当前活跃用户的&lt;code&gt;jwt&lt;/code&gt;令牌并实现多点登录限制。&lt;/li&gt; &#xA; &lt;li&gt;API文档：使用&lt;code&gt;Swagger&lt;/code&gt;构建自动化文档。&lt;/li&gt; &#xA; &lt;li&gt;配置文件：使用 &lt;a href=&#34;https://github.com/fsnotify/fsnotify&#34;&gt;fsnotify&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;viper&lt;/a&gt; 实现&lt;code&gt;yaml&lt;/code&gt;格式的配置文件。&lt;/li&gt; &#xA; &lt;li&gt;日志：使用 &lt;a href=&#34;https://github.com/uber-go/zap&#34;&gt;zap&lt;/a&gt; 实现日志记录。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. 项目架构&lt;/h2&gt; &#xA;&lt;h3&gt;4.1 系统架构图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://qmplusimg.henrongyi.top/gva/gin-vue-admin.png&#34; alt=&#34;系统架构图&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4.2 前端详细设计图 （提供者:&lt;a href=&#34;https://github.com/baobeisuper&#34;&gt;baobeisuper&lt;/a&gt;）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://qmplusimg.henrongyi.top/naotu.png&#34; alt=&#34;前端详细设计图&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4.3 目录结构&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;    ├── server&#xA;        ├── api             (api层)&#xA;        │   └── v1          (v1版本接口)&#xA;        ├── config          (配置包)&#xA;        ├── core            (核心文件)&#xA;        ├── docs            (swagger文档目录)&#xA;        ├── global          (全局对象)                    &#xA;        ├── initialize      (初始化)                        &#xA;        │   └── internal    (初始化内部函数)                            &#xA;        ├── middleware      (中间件层)                        &#xA;        ├── model           (模型层)                    &#xA;        │   ├── request     (入参结构体)                        &#xA;        │   └── response    (出参结构体)                            &#xA;        ├── packfile        (静态文件打包)                        &#xA;        ├── resource        (静态资源文件夹)                        &#xA;        │   ├── excel       (excel导入导出默认路径)                        &#xA;        │   ├── page        (表单生成器)                        &#xA;        │   └── template    (模板)                            &#xA;        ├── router          (路由层)                    &#xA;        ├── service         (service层)                    &#xA;        ├── source          (source层)                    &#xA;        └── utils           (工具包)                    &#xA;            ├── timer       (定时器接口封装)                        &#xA;            └── upload      (oss接口封装)                        &#xA;    &#xA;            web&#xA;        ├── babel.config.js&#xA;        ├── Dockerfile&#xA;        ├── favicon.ico&#xA;        ├── index.html                 -- 主页面&#xA;        ├── limit.js                   -- 助手代码&#xA;        ├── package.json               -- 包管理器代码&#xA;        ├── src                        -- 源代码&#xA;        │   ├── api                    -- api 组&#xA;        │   ├── App.vue                -- 主页面&#xA;        │   ├── assets                 -- 静态资源&#xA;        │   ├── components             -- 全局组件&#xA;        │   ├── core                   -- gva 组件包&#xA;        │   │   ├── config.js          -- gva网站配置文件&#xA;        │   │   ├── gin-vue-admin.js   -- 注册欢迎文件&#xA;        │   │   └── global.js          -- 统一导入文件&#xA;        │   ├── directive              -- v-auth 注册文件&#xA;        │   ├── main.js                -- 主文件&#xA;        │   ├── permission.js          -- 路由中间件&#xA;        │   ├── pinia                  -- pinia 状态管理器，取代vuex&#xA;        │   │   ├── index.js           -- 入口文件&#xA;        │   │   └── modules            -- modules&#xA;        │   │       ├── dictionary.js&#xA;        │   │       ├── router.js&#xA;        │   │       └── user.js&#xA;        │   ├── router                 -- 路由声明文件&#xA;        │   │   └── index.js&#xA;        │   ├── style                  -- 全局样式&#xA;        │   │   ├── base.scss&#xA;        │   │   ├── basics.scss&#xA;        │   │   ├── element_visiable.scss  -- 此处可以全局覆盖 element-plus 样式&#xA;        │   │   ├── iconfont.css           -- 顶部几个icon的样式文件&#xA;        │   │   ├── main.scss&#xA;        │   │   ├── mobile.scss&#xA;        │   │   └── newLogin.scss&#xA;        │   ├── utils                  -- 方法包库&#xA;        │   │   ├── asyncRouter.js     -- 动态路由相关&#xA;        │   │   ├── btnAuth.js         -- 动态权限按钮相关&#xA;        │   │   ├── bus.js             -- 全局mitt声明文件&#xA;        │   │   ├── date.js            -- 日期相关&#xA;        │   │   ├── dictionary.js      -- 获取字典方法 &#xA;        │   │   ├── downloadImg.js     -- 下载图片方法&#xA;        │   │   ├── format.js          -- 格式整理相关&#xA;        │   │   ├── image.js           -- 图片相关方法&#xA;        │   │   ├── page.js            -- 设置页面标题&#xA;        │   │   ├── request.js         -- 请求&#xA;        │   │   └── stringFun.js       -- 字符串文件&#xA;        |   ├── view -- 主要view代码&#xA;        |   |   ├── about -- 关于我们&#xA;        |   |   ├── dashboard -- 面板&#xA;        |   |   ├── error -- 错误&#xA;        |   |   ├── example --上传案例&#xA;        |   |   ├── iconList -- icon列表&#xA;        |   |   ├── init -- 初始化数据  &#xA;        |   |   |   ├── index -- 新版本&#xA;        |   |   |   ├── init -- 旧版本&#xA;        |   |   ├── layout  --  layout约束页面 &#xA;        |   |   |   ├── aside &#xA;        |   |   |   ├── bottomInfo     -- bottomInfo&#xA;        |   |   |   ├── screenfull     -- 全屏设置&#xA;        |   |   |   ├── setting        -- 系统设置&#xA;        |   |   |   └── index.vue      -- base 约束&#xA;        |   |   ├── login              --登录 &#xA;        |   |   ├── person             --个人中心 &#xA;        |   |   ├── superAdmin         -- 超级管理员操作&#xA;        |   |   ├── system             -- 系统检测页面&#xA;        |   |   ├── systemTools        -- 系统配置相关页面&#xA;        |   |   └── routerHolder.vue   -- page 入口页面 &#xA;        ├── vite.config.js             -- vite 配置文件&#xA;        └── yarn.lock&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;5. 主要功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;权限管理：基于&lt;code&gt;jwt&lt;/code&gt;和&lt;code&gt;casbin&lt;/code&gt;实现的权限管理。&lt;/li&gt; &#xA; &lt;li&gt;文件上传下载：实现基于&lt;code&gt;七牛云&lt;/code&gt;, &lt;code&gt;阿里云&lt;/code&gt;, &lt;code&gt;腾讯云&lt;/code&gt; 的文件上传操作(请开发自己去各个平台的申请对应 &lt;code&gt;token&lt;/code&gt; 或者对应&lt;code&gt;key&lt;/code&gt;)。&lt;/li&gt; &#xA; &lt;li&gt;分页封装：前端使用 &lt;code&gt;mixins&lt;/code&gt; 封装分页，分页方法调用 &lt;code&gt;mixins&lt;/code&gt; 即可。&lt;/li&gt; &#xA; &lt;li&gt;用户管理：系统管理员分配用户角色和角色权限。&lt;/li&gt; &#xA; &lt;li&gt;角色管理：创建权限控制的主要对象，可以给角色分配不同api权限和菜单权限。&lt;/li&gt; &#xA; &lt;li&gt;菜单管理：实现用户动态菜单配置，实现不同角色不同菜单。&lt;/li&gt; &#xA; &lt;li&gt;api管理：不同用户可调用的api接口的权限不同。&lt;/li&gt; &#xA; &lt;li&gt;配置管理：配置文件可前台修改(在线体验站点不开放此功能)。&lt;/li&gt; &#xA; &lt;li&gt;条件搜索：增加条件搜索示例。&lt;/li&gt; &#xA; &lt;li&gt;restful示例：可以参考用户管理模块中的示例API。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;前端文件参考: &lt;a href=&#34;https://github.com/flipped-aurora/gin-vue-admin/raw/master/web/src/view/superAdmin/api/api.vue&#34;&gt;web/src/view/superAdmin/api/api.vue&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;后台文件参考: &lt;a href=&#34;https://github.com/flipped-aurora/gin-vue-admin/raw/master/server/router/sys_api.go&#34;&gt;server/router/sys_api.go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;多点登录限制：需要在&lt;code&gt;config.yaml&lt;/code&gt;中把&lt;code&gt;system&lt;/code&gt;中的&lt;code&gt;use-multipoint&lt;/code&gt;修改为true(需要自行配置Redis和Config中的Redis参数，测试阶段，有bug请及时反馈)。&lt;/li&gt; &#xA; &lt;li&gt;分片长传：提供文件分片上传和大文件分片上传功能示例。&lt;/li&gt; &#xA; &lt;li&gt;表单生成器：表单生成器借助 &lt;a href=&#34;https://github.com/JakHuang/form-generator&#34;&gt;@form-generator&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;代码生成器：后台基础逻辑以及简单curd的代码生成器。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;6. 知识库&lt;/h2&gt; &#xA;&lt;h2&gt;6.1 团队博客&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.yuque.com/flipped-aurora&#34;&gt;https://www.yuque.com/flipped-aurora&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;内有前端框架教学视频。如果觉得项目对您有所帮助可以添加我的个人微信:shouzi_1994，欢迎您提出宝贵的需求。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;6.2 教学视频&lt;/h2&gt; &#xA;&lt;p&gt;（1）手把手教学视频&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1Rg411u7xH/&#34;&gt;https://www.bilibili.com/video/BV1Rg411u7xH/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;（2）后端目录结构调整介绍以及使用方法&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1x44y117TT/&#34;&gt;https://www.bilibili.com/video/BV1x44y117TT/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;（3）golang基础教学视频&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;bilibili：&lt;a href=&#34;https://space.bilibili.com/322210472/channel/detail?cid=108884&#34;&gt;https://space.bilibili.com/322210472/channel/detail?cid=108884&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;（4）gin框架基础教学&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;bilibili：&lt;a href=&#34;https://space.bilibili.com/322210472/channel/detail?cid=126418&amp;amp;ctype=0&#34;&gt;https://space.bilibili.com/322210472/channel/detail?cid=126418&amp;amp;ctype=0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;（5）gin-vue-admin 版本更新介绍视频&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;bilibili：&lt;a href=&#34;https://www.bilibili.com/video/BV1kv4y1g7nT&#34;&gt;https://www.bilibili.com/video/BV1kv4y1g7nT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;7. 联系方式&lt;/h2&gt; &#xA;&lt;h3&gt;7.1 技术群&lt;/h3&gt; &#xA;&lt;h3&gt;QQ交流群：622360840&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;QQ 群&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;http://qmplusimg.henrongyi.top/qq.jpg&#34; width=&#34;180&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;微信交流群&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;微信&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;150&#34; src=&#34;http://qmplusimg.henrongyi.top/qrjjz.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;添加微信，备注&#34;加入gin-vue-admin交流群&#34;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.gin-vue-admin.com/about/join.html&#34;&gt;关于我们&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;8. 贡献者&lt;/h2&gt; &#xA;&lt;p&gt;感谢您对gin-vue-admin的贡献!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/flipped-aurora/gin-vue-admin/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=flipped-aurora/gin-vue-admin&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;9. 捐赠&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得这个项目对你有帮助，你可以请作者喝饮料 &lt;span&gt;🍹&lt;/span&gt; &lt;a href=&#34;https://www.gin-vue-admin.com/coffee/index.html&#34;&gt;点我&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;10. 商用注意事项&lt;/h2&gt; &#xA;&lt;p&gt;如果您将此项目用于商业用途，请遵守Apache2.0协议并保留作者技术支持声明。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HyNetwork/hysteria</title>
    <updated>2022-10-10T01:34:44Z</updated>
    <id>tag:github.com,2022-10-10:/HyNetwork/hysteria</id>
    <link href="https://github.com/HyNetwork/hysteria" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hysteria is a feature-packed proxy &amp; relay tool optimized for lossy, unstable connections (e.g. satellite networks, congested public Wi-Fi, connecting to foreign servers from China)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HyNetwork/hysteria/master/docs/logos/readme.png&#34; alt=&#34;Logo&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HyNetwork/hysteria/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HyNetwork/hysteria/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/HyNetwork/hysteria?style=flat-square&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/hysteria_github&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-Telegram-blue?style=flat-square&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HyNetwork/hysteria/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/HyNetwork/hysteria?style=flat-square&#34; alt=&#34;Discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hysteria is a feature-packed proxy &amp;amp; relay tool optimized for lossy, unstable connections (e.g. satellite networks, congested public Wi-Fi, connecting to foreign servers from China) powered by a customized protocol based on QUIC.&lt;/p&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Censorship circumvention&lt;/li&gt; &#xA; &lt;li&gt;Boosting slow connections&lt;/li&gt; &#xA; &lt;li&gt;Bypassing commercial/academic/corporate firewalls&lt;/li&gt; &#xA; &lt;li&gt;Bypassing ISP throttling&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SOCKS5 proxy (TCP &amp;amp; UDP)&lt;/li&gt; &#xA; &lt;li&gt;HTTP/HTTPS proxy&lt;/li&gt; &#xA; &lt;li&gt;TCP/UDP relay&lt;/li&gt; &#xA; &lt;li&gt;TCP/UDP TPROXY (Linux)&lt;/li&gt; &#xA; &lt;li&gt;TCP REDIRECT (Linux)&lt;/li&gt; &#xA; &lt;li&gt;TUN (TAP on Windows)&lt;/li&gt; &#xA; &lt;li&gt;Still growing...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/HyNetwork/hysteria/wiki&#34;&gt;See wiki for documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Hysteria 是一个功能丰富的，专为恶劣网络环境（如卫星网络、拥挤的公共 Wi-Fi、从中国连接境外服务器等）进行优化的双边加速工具，基于修改版的 QUIC 协议。&lt;/p&gt; &#xA;&lt;h2&gt;常见用例&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;绕过网络审查&lt;/li&gt; &#xA; &lt;li&gt;提升传输速度&lt;/li&gt; &#xA; &lt;li&gt;绕过商业/学校/企业防火墙&lt;/li&gt; &#xA; &lt;li&gt;绕过运营商 QoS 限速&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;模式&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SOCKS5 代理 (TCP &amp;amp; UDP)&lt;/li&gt; &#xA; &lt;li&gt;HTTP/HTTPS 代理&lt;/li&gt; &#xA; &lt;li&gt;TCP/UDP 转发&lt;/li&gt; &#xA; &lt;li&gt;TCP/UDP TPROXY 透明代理 (Linux)&lt;/li&gt; &#xA; &lt;li&gt;TCP REDIRECT 透明代理 (Linux)&lt;/li&gt; &#xA; &lt;li&gt;TUN (Windows 下为 TAP)&lt;/li&gt; &#xA; &lt;li&gt;仍在增加中...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/HyNetwork/hysteria/wiki/%E9%A6%96%E9%A1%B5&#34;&gt;文档请见 wiki&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/HyNetwork/hysteria/master/docs/bench/bench.png&#34; alt=&#34;Bench&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>