<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-12T01:30:18Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hatchet-dev/hatchet</title>
    <updated>2024-08-12T01:30:18Z</updated>
    <id>tag:github.com,2024-08-12:/hatchet-dev/hatchet</id>
    <link href="https://github.com/hatchet-dev/hatchet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A distributed, fault-tolerant task queue&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://framerusercontent.com/images/KBMnpSO12CyE6UANhf4mhrg6na0.png?scale-down-to=200&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://framerusercontent.com/images/KBMnpSO12CyE6UANhf4mhrg6na0.png?scale-down-to=200&#34;&gt; &#xA;  &lt;a href=&#34;https://hatchet.run&#34;&gt; &lt;img alt=&#34;Hatchet Logo&#34; src=&#34;https://framerusercontent.com/images/KBMnpSO12CyE6UANhf4mhrg6na0.png?scale-down-to=200&#34;&gt; &lt;/a&gt; &#xA; &lt;/picture&gt; &#xA; &lt;h3&gt;A Distributed, Fault-Tolerant Task Queue&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://docs.hatchet.run&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-docs.hatchet.run-3F16E4&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-purple.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/hatchet-dev/hatchet&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/hatchet-dev/hatchet.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@hatchet-dev/typescript-sdk&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/%40hatchet-dev%2Ftypescript-sdk&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/ZMeUafwH89&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1088927970518909068?style=social&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hatchet_dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/hatchet-dev.svg?style=social&amp;amp;label=Follow%20%40hatchet-dev&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hatchet-dev/hatchet&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/hatchet-dev/hatchet?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cloud.onhatchet.run&#34;&gt;Hatchet Cloud&lt;/a&gt; ¬∑ &lt;a href=&#34;https://docs.hatchet.run&#34;&gt;Documentation&lt;/a&gt; ¬∑ &lt;a href=&#34;https://hatchet.run&#34;&gt;Website&lt;/a&gt; ¬∑ &lt;a href=&#34;https://github.com/hatchet-dev/hatchet/issues&#34;&gt;Issues&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;What is Hatchet?&lt;/h3&gt; &#xA;&lt;p&gt;Hatchet replaces difficult to manage legacy queues or pub/sub systems so you can design durable workloads that recover from failure and solve for problems like &lt;strong&gt;concurrency&lt;/strong&gt;, &lt;strong&gt;fairness&lt;/strong&gt;, and &lt;strong&gt;rate limiting&lt;/strong&gt;. Instead of managing your own task queue or pub/sub system, you can use Hatchet to distribute your functions between a set of workers with minimal configuration or infrastructure:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;500&#34; height=&#34;500&#34; src=&#34;https://github.com/hatchet-dev/hatchet/assets/25448214/c3defa1e-d9d9-4419-94e5-b4ea4a748f8d&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;What Makes Hatchet Great?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;‚ö°Ô∏è &lt;strong&gt;Ultra-low Latency and High Throughput Scheduling:&lt;/strong&gt; Hatchet is built on a low-latency queue, perfectly balancing real-time interaction capabilities with the reliability required for mission-critical tasks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;‚òÆÔ∏è &lt;strong&gt;Concurrency, Fairness, and Rate Limiting:&lt;/strong&gt; Implement FIFO, LIFO, Round Robin, and Priority Queues with Hatchet‚Äôs built-in strategies, designed to circumvent common scaling pitfalls with minimal configuration. &lt;a href=&#34;https://docs.hatchet.run&#34;&gt;Read Docs ‚Üí&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üî•üßØ &lt;strong&gt;Resilience by Design:&lt;/strong&gt; With customizable retry policies and integrated error handling, Hatchet ensures your operations recover swiftly from transient failures. You can break large jobs down into small tasks so you can finish a run without rerunning work. &lt;a href=&#34;https://docs.hatchet.run&#34;&gt;Read Docs ‚Üí&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enhanced Visibility and Control:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Observability.&lt;/strong&gt; All of your runs are fully searchable, allowing you to quickly identify issues. We track latency, error rates, or custom metrics in your run.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;(Practical) Durable Execution.&lt;/strong&gt; Replay events and manually pick up execution from specific steps in your workflow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cron.&lt;/strong&gt; Set recurring schedules for functions runs to execute.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;One-Time Scheduling.&lt;/strong&gt; Schedule a function run to execute at a specific time and date in the future.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spike Protection.&lt;/strong&gt; Smooth out spikes in traffic and only execute what your system can handle.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Incremental Streaming.&lt;/strong&gt; Subscribe to updates as your functions progress in the background worker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example Use Cases:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fairness for Generative AI:&lt;/strong&gt; Don&#39;t let busy users overwhelm your system. Hatchet lets you distribute requests to your workers fairly with configurable policies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Batch Processing for Document Indexing:&lt;/strong&gt; Hatchet can handle large-scale batch processing of documents, images, and other data and resume mid-job on failure.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Workflow Orchestration for Multi-Modal Systems:&lt;/strong&gt; Hatchet can handle orchestrating multi-modal inputs and outputs, with full DAG-style execution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Correctness for Event-Based Processing:&lt;/strong&gt; Respond to external events or internal events within your system and replay events automatically.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Hatchet is available as a cloud version or self-hosted. See the following docs to get up and running quickly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hatchet.run/home/hatchet-cloud-quickstart&#34;&gt;Hatchet Cloud Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hatchet.run/self-hosting&#34;&gt;Hatchet Self-Hosted&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hatchet supports your technology stack with open-source SDKs for Python, Typescript, and Go. To get started, see the language-specific guides here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hatchet.run/sdks/python-sdk&#34;&gt;Python SDK Docs&lt;/a&gt; | &lt;a href=&#34;https://github.com/hatchet-dev/hatchet-python-quickstart&#34;&gt;Python SDK Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hatchet.run/sdks/typescript-sdk&#34;&gt;Typescript SDK Docs&lt;/a&gt; | &lt;a href=&#34;https://github.com/hatchet-dev/hatchet-typescript-quickstart&#34;&gt;Typescript SDK Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hatchet.run/sdks/go-sdk&#34;&gt;Go SDK Docs&lt;/a&gt; | &lt;a href=&#34;https://github.com/hatchet-dev/hatchet-go-quickstart&#34;&gt;Go SDK Quickstart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SDK repositories&lt;/h3&gt; &#xA;&lt;p&gt;If you encounter any issues while using the SDKs, please submit an issue in the respective repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hatchet-dev/hatchet-python&#34;&gt;Python SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hatchet-dev/hatchet-typescript&#34;&gt;Typescript SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hatchet-dev/hatchet&#34;&gt;Go SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How does this compare to alternatives (Celery, BullMQ)?&lt;/h2&gt; &#xA;&lt;p&gt;Why build another managed queue? We wanted to build something with the benefits of full transactional enqueueing - particularly for dependent, DAG-style execution - and felt strongly that Postgres solves for 99.9% of queueing use-cases better than most alternatives (Celery uses Redis or RabbitMQ as a broker, BullMQ uses Redis). Since the introduction of &lt;code&gt;SKIP LOCKED&lt;/code&gt; and the milestones of recent PG releases (like active-active replication), it&#39;s becoming more feasible to horizontally scale Postgres across multiple regions and vertically scale to 10k TPS or more. Many queues (like BullMQ) are built on Redis and data loss can occur when suffering OOM if you&#39;re not careful, and using PG helps avoid an entire class of problems.&lt;/p&gt; &#xA;&lt;p&gt;We also wanted something that was significantly easier to use and debug for application developers. A lot of times the burden of building task observability falls on the infra/platform team (for example, asking the infra team to build a Grafana view for their tasks based on exported prom metrics). We&#39;re building this type of observability directly into Hatchet.&lt;/p&gt; &#xA;&lt;p&gt;For more information for why we built Hatchet, you can check out our writeup on Celery &lt;a href=&#34;https://docs.hatchet.run/blog/problems-with-celery&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please submit any bugs that you encounter via Github issues. However, please reach out on &lt;a href=&#34;https://discord.gg/ZMeUafwH89&#34;&gt;Discord&lt;/a&gt; before submitting a feature request - as the project is very early, we&#39;d like to build a solid foundation before adding more complex features.&lt;/p&gt; &#xA;&lt;h2&gt;I&#39;d Like to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;See the contributing docs &lt;a href=&#34;https://docs.hatchet.run/contributing&#34;&gt;here&lt;/a&gt;, and please let us know what you&#39;re interesting in working on in the #contributing channel on &lt;a href=&#34;https://discord.gg/ZMeUafwH89&#34;&gt;Discord&lt;/a&gt;. This will help us shape the direction of the project and will make collaboration much easier!&lt;/p&gt;</summary>
  </entry>
</feed>