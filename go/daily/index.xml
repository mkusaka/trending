<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-26T01:35:56Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lib/pq</title>
    <updated>2023-02-26T01:35:56Z</updated>
    <id>tag:github.com,2023-02-26:/lib/pq</id>
    <link href="https://github.com/lib/pq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pure Go Postgres driver for database/sql&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pq - A pure Go postgres driver for Go&#39;s database/sql package&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/lib/pq?tab=doc&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/lib/pq?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/lib/pq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SSL&lt;/li&gt; &#xA; &lt;li&gt;Handles bad connections for &lt;code&gt;database/sql&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scan &lt;code&gt;time.Time&lt;/code&gt; correctly (i.e. &lt;code&gt;timestamp[tz]&lt;/code&gt;, &lt;code&gt;time[tz]&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Scan binary blobs correctly (i.e. &lt;code&gt;bytea&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Package for &lt;code&gt;hstore&lt;/code&gt; support&lt;/li&gt; &#xA; &lt;li&gt;COPY FROM support&lt;/li&gt; &#xA; &lt;li&gt;pq.ParseURL for converting urls to connection strings for sql.Open.&lt;/li&gt; &#xA; &lt;li&gt;Many libpq compatible environment variables&lt;/li&gt; &#xA; &lt;li&gt;Unix socket support&lt;/li&gt; &#xA; &lt;li&gt;Notifications: &lt;code&gt;LISTEN&lt;/code&gt;/&lt;code&gt;NOTIFY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;pgpass support&lt;/li&gt; &#xA; &lt;li&gt;GSS (Kerberos) auth&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go test&lt;/code&gt; is used for testing. See &lt;a href=&#34;https://raw.githubusercontent.com/lib/pq/master/TESTS.md&#34;&gt;TESTS.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This package is currently in maintenance mode, which means:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;It generally does not accept new features.&lt;/li&gt; &#xA; &lt;li&gt;It does accept bug fixes and version compatability changes provided by the community.&lt;/li&gt; &#xA; &lt;li&gt;Maintainers usually do not resolve reported issues.&lt;/li&gt; &#xA; &lt;li&gt;Community members are encouraged to help each other with reported issues.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For users that require new features or reliable resolution of reported bugs, we recommend using &lt;a href=&#34;https://github.com/jackc/pgx&#34;&gt;pgx&lt;/a&gt; which is under active development.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cloudnative-pg/cloudnative-pg</title>
    <updated>2023-02-26T01:35:56Z</updated>
    <id>tag:github.com,2023-02-26:/cloudnative-pg/cloudnative-pg</id>
    <link href="https://github.com/cloudnative-pg/cloudnative-pg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CloudNativePG is a Kubernetes operator that covers the full lifecycle of a PostgreSQL database cluster with a primary/standby architecture, using native streaming replication&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the CloudNativePG project!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;CloudNativePG&lt;/strong&gt; is an open source operator designed to manage &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; workloads on any supported Kubernetes cluster running in private, public, hybrid, or multi-cloud environments.&lt;/p&gt; &#xA;&lt;p&gt;CloudNativePG was originally built and sponsored by &lt;a href=&#34;https://www.enterprisedb.com&#34;&gt;EDB&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/GOVERNANCE.md&#34;&gt;Governance policies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/LICENSE&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The best way to get started is with the &lt;a href=&#34;https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/quickstart.md&#34;&gt;&#34;Quickstart&#34;&lt;/a&gt; section in the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Scope&lt;/h2&gt; &#xA;&lt;p&gt;The goal of CloudNativePG is to increase the adoption of PostgreSQL, one of the most loved DBMS in traditional VM and bare metal environments, inside Kubernetes, thus making the database an integral part of the development process and CI/CD automated pipelines.&lt;/p&gt; &#xA;&lt;h3&gt;In scope&lt;/h3&gt; &#xA;&lt;p&gt;CloudNativePG has been designed by Postgres experts with Kubernetes administrators in mind. Put simply, it leverages Kubernetes by extending its controller and by defining, in a programmatic way, all the actions that a good DBA would normally do when managing a highly available PostgreSQL database cluster.&lt;/p&gt; &#xA;&lt;p&gt;Since the inception, our philosophy has been to adopt a Kubernetes native approach to PostgreSQL cluster management, making incremental decisions that would answer the fundamental question: &#34;What would a Kubernetes user expect from a Postgres operator?&#34;.&lt;/p&gt; &#xA;&lt;p&gt;The most important decision we made is to have the status of a PostgreSQL cluster directly available in the &lt;code&gt;Cluster&lt;/code&gt; resource, so to inspect it through the Kubernetes API. We&#39;ve fully embraced the operator pattern and eventual consistency, two of the core principles upon which Kubernetes is built for managing complex applications.&lt;/p&gt; &#xA;&lt;p&gt;As a result, the operator is responsible for managing the status of the &lt;code&gt;Cluster&lt;/code&gt; resource, keeping it up to date with the information that each PostgreSQL instance manager regularly reports back through the API server. Such changes might trigger, for example, actions like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;a PostgreSQL failover where, after an unexpected failure of a cluster&#39;s primary instance, the operator itself elects the new primary, updates the status, and directly coordinates the operation through the reconciliation loop, by relying on the instance managers&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;scaling up or down the number of read-only replicas, based on a positive or negative variation in the number of desired instances in the cluster, so that the operator creates or removes the required resources to run PostgreSQL, such as persistent volumes, persistent volume claims, pods, secrets, config maps, and then coordinates cloning and streaming replication tasks&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;updates of the endpoints of the PostgreSQL services that applications rely on to interact with the database, as Kubernetes represents the single source of truth and authority&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;updates of container images in a rolling fashion, following a change in the image name, by first updating the pods where replicas are running, and then the primary, issuing a switchover first&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The latter example is based on another pillar of CloudNativePG: immutable application containers - as explained in the &lt;a href=&#34;https://www.enterprisedb.com/blog/why-edb-chose-immutable-application-containers&#34;&gt;blog article &#34;Why EDB Chose Immutable Application Containers&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The above list can be extended. However, the gist is that CloudNativePG exclusively relies on the Kubernetes API server and the instance manager to coordinate the complex operations that need to take place in a business continuity PostgreSQL cluster, without requiring any assistance from an intermediate management tool responsible for high availability and failover management like similar open source operators.&lt;/p&gt; &#xA;&lt;p&gt;CloudNativePG also manages additional resources to help the &lt;code&gt;Cluster&lt;/code&gt; resource manage PostgreSQL - currently &lt;code&gt;ScheduledBackup&lt;/code&gt;, &lt;code&gt;Pooler&lt;/code&gt;, and &lt;code&gt;Backup&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Fully embracing Kubernetes also means that, in case of failure of the whole Kubernetes cluster, the operator won’t do anything, postponing any decision to when the cluster is back up again. In the meantime, Postgres instances should continue running according to the last known state of the cluster.&lt;/p&gt; &#xA;&lt;h3&gt;Out of scope&lt;/h3&gt; &#xA;&lt;p&gt;CloudNativePG is exclusively focused on the PostgreSQL database management system maintained by the PostgreSQL Global Development Group (PGDG). We are not currently considering adding to CloudNativePG extensions or capabilities that are included in forks of the PostgreSQL database management system, unless in the form of extensible or pluggable frameworks.&lt;/p&gt; &#xA;&lt;p&gt;CloudNativePG doesn&#39;t intend to pursue database independence (e.g. control a MariaDB cluster).&lt;/p&gt; &#xA;&lt;h2&gt;Communications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/cloudnativepg/shared_invite/zt-17culux7k-P_UsVOOR9teUYi4dGhDSBQ&#34;&gt;Slack Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg/discussions&#34;&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/CloudNativePg&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/cloudnative-pg/projects/1&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloudnative-pg.io&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/faq.md&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloudnative-pg.io/blog/&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://containerjournal.com/kubecon-cnc-eu-2022/why-run-postgres-in-kubernetes/&#34;&gt;&#34;Why Run Postgres in Kubernetes?&#34;&lt;/a&gt; (May 2022)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tfir.io/shift-left-security-the-path-to-postgresql-on-kubernetes/&#34;&gt;&#34;Shift-Left Security: The Path To PostgreSQL On Kubernetes&#34;&lt;/a&gt; (April 2021)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.2ndquadrant.com/en/blog/local-persistent-volumes-and-postgresql-usage-in-kubernetes/&#34;&gt;&#34;Local Persistent Volumes and PostgreSQL usage in Kubernetes&#34;&lt;/a&gt; (June 2020)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;The current maintainers of the CloudNativePG project are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gabriele Bartolini (EDB)&lt;/li&gt; &#xA; &lt;li&gt;Francesco Canovai (EDB)&lt;/li&gt; &#xA; &lt;li&gt;Leonardo Cecchi (EDB)&lt;/li&gt; &#xA; &lt;li&gt;Jonathan Gonzalez (EDB)&lt;/li&gt; &#xA; &lt;li&gt;Marco Nenciarini (EDB)&lt;/li&gt; &#xA; &lt;li&gt;Armando Ruocco (EDB)&lt;/li&gt; &#xA; &lt;li&gt;Philippe Scorsolini (upbound)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;They are listed in the &lt;a href=&#34;https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/CODEOWNERS&#34;&gt;CODEOWNERS&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;A list of publicly known users of the CloudNativePG operator is in [ADOPTERS.md]. Help us grow our community and CloudNativePG by adding yourself and your organization to this list!&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#cloudnative-pg/cloudnative-pg&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=cloudnative-pg/cloudnative-pg&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.postgresql.org/about/policies/trademarks/&#34;&gt;Postgres, PostgreSQL and the Slonik Logo&lt;/a&gt; are trademarks or registered trademarks of the PostgreSQL Community Association of Canada, and used with their permission.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zema1/suo5</title>
    <updated>2023-02-26T01:35:56Z</updated>
    <id>tag:github.com,2023-02-26:/zema1/suo5</id>
    <link href="https://github.com/zema1/suo5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high-performance http proxy tunneling tool&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Suo5&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;一款高性能 HTTP 代理隧道工具&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/zema1/suo5&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/zema1/suo5/release.yml?label=release&#34; alt=&#34;Workflow Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/zema1/suo5/test.yml?label=test&#34; alt=&#34;Workflow Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/zema1/suo5?label=latest&#34; alt=&#34;Latest release&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zema1/suo5/main/tests/img/experience.gif&#34; alt=&#34;experience&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zema1/suo5/main/README.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/zema1/suo5/main/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;suo5&lt;/code&gt; 是一个全新的 HTTP 代理隧道，基于 &lt;code&gt;HTTP/1.1&lt;/code&gt; 的 &lt;code&gt;Chunked-Encoding&lt;/code&gt; 构建。相比 &lt;a href=&#34;https://github.com/L-codes/Neo-reGeorg&#34;&gt;Neo-reGeorg&lt;/a&gt; 等传统隧道工具, &lt;code&gt;suo5&lt;/code&gt; 的性能可以达到其数十倍。查看 &lt;a href=&#34;https://raw.githubusercontent.com/zema1/suo5/main/tests&#34;&gt;性能测试&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;其主要特性如下：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;一条连接实现数据的双向发送和接收，性能堪比 TCP 直连&lt;/li&gt; &#xA; &lt;li&gt;同时支持全双工与半双工模式，并可自动选择最佳的模式&lt;/li&gt; &#xA; &lt;li&gt;支持在 Nginx 反向代理的场景中使用&lt;/li&gt; &#xA; &lt;li&gt;自有数据序列化协议，数据经过加密传输&lt;/li&gt; &#xA; &lt;li&gt;完善的连接控制和并发管理，使用流畅丝滑&lt;/li&gt; &#xA; &lt;li&gt;服务端基于 &lt;code&gt;Servlet&lt;/code&gt; 原生实现，JDK6~JDK19 全版本兼容&lt;/li&gt; &#xA; &lt;li&gt;同时提供提供命令行和图形化界面，方便不同用户使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;具体原理参考 &lt;a href=&#34;https://koalr.me/posts/suo5-a-hign-performace-http-socks/&#34;&gt;https://koalr.me/posts/suo5-a-hign-performace-http-socks/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;免责声明：此工具仅限于安全研究，用户承担因使用此工具而导致的所有法律和相关责任！作者不承担任何法律责任！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;安装运行&lt;/h2&gt; &#xA;&lt;p&gt;前往 &lt;a href=&#34;https://github.com/zema1/suo5/releases&#34;&gt;Releases&lt;/a&gt; 下载编译好的二进制，其中带 &lt;code&gt;gui&lt;/code&gt; 的版本是界面版，不带 &lt;code&gt;gui&lt;/code&gt; 的为命令行版。所有编译由 Github Action 自动构建，请放心使用。&lt;/p&gt; &#xA;&lt;p&gt;使用时需上传 &lt;a href=&#34;https://raw.githubusercontent.com/zema1/suo5/main/assets/&#34;&gt;suo5.jsp&lt;/a&gt; 到目标环境中并确保可以执行。&lt;/p&gt; &#xA;&lt;h3&gt;界面版&lt;/h3&gt; &#xA;&lt;p&gt;界面版基于 &lt;a href=&#34;https://github.com/wailsapp/wails&#34;&gt;wails&lt;/a&gt; 实现，依赖 Webview2 框架。Windows 11 和 MacOS 已自带该组件，其他系统会弹框请允许下载安装，否则无法使用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zema1/suo5/main/tests/img/gui.jpg&#34; alt=&#34;gui.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;命令行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;NAME:&#xA;   suo5 - A super http proxy tunnel&#xA;&#xA;USAGE:&#xA;   suo5 [global options] command [command options] [arguments...]&#xA;&#xA;VERSION:&#xA;   v0.3.0&#xA;&#xA;COMMANDS:&#xA;   help, h  Shows a list of commands or help for one command&#xA;&#xA;GLOBAL OPTIONS:&#xA;   --target value, -t value  set the remote server url, ex: http://localhost:8080/tomcat_debug_war_exploded/&#xA;   --listen value, -l value  set the listen address of socks5 server (default: &#34;127.0.0.1:1111&#34;)&#xA;   --method value, -m value  http request method (default: &#34;POST&#34;)&#xA;   --no-auth                 disable socks5 authentication (default: true)&#xA;   --auth value              socks5 creds, username:password, leave empty to auto generate&#xA;   --mode value              connection mode, choices are auto, full, half (default: &#34;auto&#34;)&#xA;   --ua value                the user-agent used to send request (default: &#34;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.1.2.3&#34;)&#xA;   --timeout value           http request timeout in seconds (default: 10)&#xA;   --buf-size value          set the request max body size (default: 327680)&#xA;   --proxy value             use upstream socks5 proxy&#xA;   --debug, -d               debug the traffic, print more details (default: false)&#xA;   --help, -h                show help&#xA;   --version, -v             print the version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;命令行版本与界面版配置完全一致，可以对照界面版功能来使用，最简单的只需指定连接目标&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./suo5 -t https://example.com/proxy.jsp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用 &lt;code&gt;GET&lt;/code&gt; 方法发送请求，有时可以绕过限制&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./suo5 -m GET -t https://example.com/proxy.jsp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;自定义 socks5 监听在 &lt;code&gt;0.0.0.0:7788&lt;/code&gt;，并自定义认证信息为 &lt;code&gt;test:test123&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./suo5 -t https://example.com/proxy.jsp -l 0.0.0.0:7788 --auth test:test123&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;特别提醒&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;User-Agent&lt;/code&gt; (&lt;code&gt;ua&lt;/code&gt;) 的配置本地端与服务端是绑定的，如果修改了其中一个，另一个也必须对应修改才能连接上。&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;什么是全双工和半双工?&lt;/p&gt; &lt;p&gt;&lt;strong&gt;全双工&lt;/strong&gt; 仅需发送一个 HTTP 请求即可构建出一个 HTTP 隧道, 实现 TCP 的双向通信。可以理解成这个请求既是一个上传请求又是一个下载请求，只要连接不断开 ，就会一直下载，一直上传, 便可以借此做双向通信。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;半双工&lt;/strong&gt; 在部分场景下不支持 &lt;code&gt;全双工&lt;/code&gt; 模式（比如有反代），可以退而求其次做半双工，即发送一个请求构建一个下行的隧道，同时用短链接发送上行数据一次来完成双向通信。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;suo5&lt;/code&gt; 和 &lt;code&gt;Neo-reGeorg&lt;/code&gt; 怎么选？&lt;/p&gt; &lt;p&gt;如果目标是 Java 的站点，可以使用 &lt;code&gt;suo5&lt;/code&gt; 来构建 http 隧道，大多数情况下 &lt;code&gt;suo5&lt;/code&gt; 都要比 &lt;code&gt;neo&lt;/code&gt; 更稳定速度更快。但 &lt;code&gt;neo&lt;/code&gt; 提供了非常多种类的服务端支持，兼容性很好，而且也支持一些 &lt;code&gt;suo5&lt;/code&gt; 当前还在开发的功能，比如负载均衡等，也支持更灵活的定制化。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;接下来&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持配置上游 socks 代理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持负载均衡的场景&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持 .Net 的类型&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;参考&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/L-codes/Neo-reGeorg&#34;&gt;https://github.com/L-codes/Neo-reGeorg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BeichenDream/Chunk-Proxy&#34;&gt;https://github.com/BeichenDream/Chunk-Proxy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>