<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-16T01:27:53Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mindoc-org/mindoc</title>
    <updated>2023-08-16T01:27:53Z</updated>
    <id>tag:github.com,2023-08-16:/mindoc-org/mindoc</id>
    <link href="https://github.com/mindoc-org/mindoc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Golang实现的基于beego框架的接口在线文档管理系统&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MinDoc 简介&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/mindoc-org/mindoc&#34;&gt;&lt;img src=&#34;https://travis-ci.com/mindoc-org/mindoc.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/mindoc-org/mindoc&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/7680ia6mu29m12wx?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MinDoc 是一款针对IT团队开发的简单好用的文档管理系统。&lt;/p&gt; &#xA;&lt;p&gt;MinDoc 的前身是 &lt;a href=&#34;https://github.com/lifei6671/SmartWiki&#34;&gt;SmartWiki&lt;/a&gt; 文档系统。SmartWiki 是基于 PHP 框架 laravel 开发的一款文档管理系统。因 PHP 的部署对普通用户来说太复杂，所以改用 Golang 开发。可以方便用户部署和实用。&lt;/p&gt; &#xA;&lt;p&gt;开发缘起是公司IT部门需要一款简单实用的项目接口文档管理和分享的系统。其功能和界面源于 kancloud 。&lt;/p&gt; &#xA;&lt;p&gt;可以用来储存日常接口文档，数据库字典，手册说明等文档。内置项目管理，用户管理，权限管理等功能，能够满足大部分中小团队的文档管理需求。&lt;/p&gt; &#xA;&lt;h5&gt;演示站点&amp;amp;文档:&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.iminho.me/wiki/docs/mindoc/&#34;&gt;https://www.iminho.me/wiki/docs/mindoc/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doc.gsw945.com/docs/mindoc-docs/&#34;&gt;https://doc.gsw945.com/docs/mindoc-docs/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;开发&amp;amp;维护&amp;amp;使用 悉知&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感谢作者 &lt;a href=&#34;https://github.com/lifei6671&#34;&gt;lifei6671&lt;/a&gt; 创造了MinDoc，并持续维护了很久。&lt;/li&gt; &#xA; &lt;li&gt;作者因工作等原因，精力有限，无法花费足够的时间来持续维护mindoc，已于北京时间2021年3月23日将mindoc交给社区(github组织&lt;a href=&#34;https://github.com/mindoc-org&#34;&gt;mindoc-org&lt;/a&gt;)维护，期待热心开发者加入&lt;a href=&#34;https://github.com/mindoc-org&#34;&gt;mindoc-org&lt;/a&gt;一起来维护MinDoc。&lt;/li&gt; &#xA; &lt;li&gt;遇到问题请提 &lt;a href=&#34;https://github.com/mindoc-org/mindoc/issues&#34;&gt;Issues&lt;/a&gt;，欢迎使用者和贡献者加入QQ群 &lt;code&gt;1051164153&lt;/code&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=bHFR7P3Qp1nsSPbsTw4KN_ZpFLUAblIU&amp;amp;jump_from=webapi&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://pub.idqqimg.com/wpa/images/group.png&#34; alt=&#34;MinDoc使用&amp;amp;开发交流群&#34; title=&#34;MinDoc使用&amp;amp;开发交流群&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;对开发感兴趣请关注 &lt;a href=&#34;https://github.com/mindoc-org/mindoc/projects/1&#34;&gt;Development&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mindoc-org/mindoc/projects/1#column-13554511&#34;&gt;Todo List&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mindoc-org/mindoc/projects/1#column-13554512&#34;&gt;Work in progress&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mindoc-org/mindoc/projects/1#column-13554513&#34;&gt;Review in progress&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mindoc基于 &lt;a href=&#34;https://github.com/beego/beego&#34;&gt;beeego&lt;/a&gt; 开发，beego文档地址: &lt;a href=&#34;https://github.com/beego/beego-doc/tree/main/docs/zh&#34;&gt;https://github.com/beego/beego-doc/tree/main/docs/zh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;特别声明&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;原作者 &lt;a href=&#34;https://github.com/lifei6671&#34;&gt;lifei6671&lt;/a&gt; 已于 2021-08-06 删除了个人捐赠信息，参见: &lt;a href=&#34;https://github.com/mindoc-org/mindoc/commit/1a179179c1fe4d0d4db95e0b757d863aee5bf395&#34;&gt;1a179179c1fe4d0d4db95e0b757d863aee5bf395&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;截止目前(2023-03-27)，&lt;a href=&#34;https://github.com/mindoc-org&#34;&gt;mindoc-org&lt;/a&gt; 暂未发布任何捐赠信息，请勿轻信&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;安装与使用&lt;/h1&gt; &#xA;&lt;p&gt;&lt;del&gt;如果你的服务器上没有安装golang程序请手动设置一个环境变量如下：键名为 ZONEINFO，值为MinDoc跟目录下的/lib/time/zoneinfo.zip 。&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;更多信息请查看手册： &lt;a href=&#34;https://www.iminho.me/wiki/docs/mindoc/mindoc-summary.md&#34;&gt;MinDoc 使用手册&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;对于没有Golang使用经验的用户，可以从 &lt;a href=&#34;https://github.com/mindoc-org/mindoc/releases&#34;&gt;https://github.com/mindoc-org/mindoc/releases&lt;/a&gt; 这里下载编译完的程序。&lt;/p&gt; &#xA;&lt;p&gt;如果有Golang开发经验，建议通过编译安装，要求golang版本不小于1.15.1(需支持&lt;code&gt;CGO&lt;/code&gt;、&lt;code&gt;go mod&lt;/code&gt;和&lt;code&gt;import _ &#34;time/tzdata&#34;&lt;/code&gt;)(推荐Go版本为1.18.1)。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注意: CentOS7上GLibC版本低，常规编译版本不能使用。需要自行源码编译,或使用使用musl编译版本。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;常规编译&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 克隆源码&#xA;git clone https://github.com/mindoc-org/mindoc.git&#xA;# go包安装&#xA;go mod tidy -v&#xA;# 编译(sqlite需要CGO支持)&#xA;go build -ldflags &#34;-w&#34; -o mindoc main.go&#xA;# 数据库初始化(此步骤执行之前，需配置`conf/app.conf`)&#xA;./mindoc install&#xA;# 执行&#xA;./mindoc&#xA;# 开发阶段运行&#xA;bee run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;MinDoc 如果使用MySQL储存数据，则编码必须是&lt;code&gt;utf8mb4_general_ci&lt;/code&gt;。请在安装前，把数据库配置填充到项目目录下的 &lt;code&gt;conf/app.conf&lt;/code&gt; 中。&lt;/p&gt; &#xA;&lt;p&gt;如果使用 &lt;code&gt;SQLite&lt;/code&gt; 数据库，则直接在配置文件中配置数据库路径即可.&lt;/p&gt; &#xA;&lt;p&gt;如果conf目录下不存在 &lt;code&gt;app.conf&lt;/code&gt; 请重命名 &lt;code&gt;app.conf.example&lt;/code&gt; 为 &lt;code&gt;app.conf&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;默认程序会自动初始化一个超级管理员用户：admin 密码：123456 。请登录后重新设置密码。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linux系统中不依赖gLibC的编译方式&lt;/h2&gt; &#xA;&lt;h3&gt;安装 musl-gcc&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -c http://musl.libc.org/releases/musl-1.2.2.tar.gz&#xA;tar -xvf musl-1.2.2.tar.gz&#xA;cd musl-1.2.2&#xA;./configure&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;使用 musl-gcc 编译 mindoc&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go mod tidy -v&#xA;export GOARCH=amd64&#xA;export GOOS=linux&#xA;# 设置使用musl-gcc&#xA;export CC=/usr/local/musl/bin/musl-gcc&#xA;# 设置版本&#xA;export TRAVIS_TAG=temp-musl-v`date +%y%m%d`&#xA;go build -v -o mindoc_linux_musl_amd64 -ldflags=&#34;-linkmode external -extldflags &#39;-static&#39; -w -X &#39;github.com/mindoc-org/mindoc/conf.VERSION=$TRAVIS_TAG&#39; -X &#39;github.com/mindoc-org/mindoc/conf.BUILD_TIME=`date`&#39; -X &#39;github.com/mindoc-org/mindoc/conf.GO_VERSION=`go version`&#39;&#34;&#xA;# 验证&#xA;./mindoc_linux_musl_amd64 version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Windows 上后台运行&lt;/h2&gt; &#xA;&lt;p&gt;使用 &lt;a href=&#34;https://github.com/mindoc-org/mindoc-daemon&#34;&gt;mindoc-daemon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;#邮件配置-示例&#xA;#是否启用邮件&#xA;enable_mail=true&#xA;#smtp服务器的账号&#xA;smtp_user_name=admin@iminho.me&#xA;#smtp服务器的地址&#xA;smtp_host=smtp.ym.163.com&#xA;#密码&#xA;smtp_password=1q2w3e__ABC&#xA;#端口号&#xA;smtp_port=25&#xA;#邮件发送人的地址&#xA;form_user_name=admin@iminho.me&#xA;#邮件有效期30分钟&#xA;mail_expired=30&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;使用Docker部署&lt;/h1&gt; &#xA;&lt;p&gt;如果是Docker用户，可参考项目内置的Dockerfile文件自行编译镜像(编译命令见Dockerfile文件底部注释，仅供参考)。&lt;/p&gt; &#xA;&lt;p&gt;在启动镜像时需要提供如下的常用环境变量(全部支持的环境变量请参考: &lt;a href=&#34;https://github.com/mindoc-org/mindoc/raw/master/conf/app.conf.example&#34;&gt;&lt;code&gt;conf/app.conf.example&lt;/code&gt;&lt;/a&gt;)：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;DB_ADAPTER                  指定DB类型(默认为sqlite)&#xA;MYSQL_PORT_3306_TCP_ADDR    MySQL地址&#xA;MYSQL_PORT_3306_TCP_PORT    MySQL端口号&#xA;MYSQL_INSTANCE_NAME         MySQL数据库名称&#xA;MYSQL_USERNAME              MySQL账号&#xA;MYSQL_PASSWORD              MySQL密码&#xA;HTTP_PORT                   程序监听的端口号&#xA;MINDOC_ENABLE_EXPORT        开启导出(默认为false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;举个栗子-当前(公开)镜像(信息页面: &lt;a href=&#34;https://cr.console.aliyun.com/images/cn-hangzhou/mindoc-org/mindoc/detail&#34;&gt;https://cr.console.aliyun.com/images/cn-hangzhou/mindoc-org/mindoc/detail&lt;/a&gt; , 需要登录阿里云账号才可访问列表)&lt;/h4&gt; &#xA;&lt;h5&gt;Windows&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;set MINDOC=//d/mindoc&#xA;docker run -it --name=mindoc --restart=always -v &#34;%MINDOC%/conf&#34;:&#34;/mindoc/conf&#34; -p 8181:8181 -e MINDOC_ENABLE_EXPORT=true -d registry.cn-hangzhou.aliyuncs.com/mindoc-org/mindoc:v2.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Linux、Mac&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export MINDOC=/home/ubuntu/mindoc-docker&#xA;docker run -it --name=mindoc --restart=always -v &#34;${MINDOC}/conf&#34;:&#34;/mindoc/conf&#34; -p 8181:8181 -e MINDOC_ENABLE_EXPORT=true -d registry.cn-hangzhou.aliyuncs.com/mindoc-org/mindoc:v2.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;举个栗子-更多环境变量示例(镜像已过期，仅供参考，请以当前镜像为准)&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 8181:8181 --name mindoc -e DB_ADAPTER=mysql -e MYSQL_PORT_3306_TCP_ADDR=10.xxx.xxx.xxx -e MYSQL_PORT_3306_TCP_PORT=3306 -e MYSQL_INSTANCE_NAME=mindoc -e MYSQL_USERNAME=root -e MYSQL_PASSWORD=123456 -e httpport=8181 -d daocloud.io/lifei6671/mindoc:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;dockerfile内容参考&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.frytea.com/archives/504/&#34;&gt;无需代理直接加速各种 GitHub 资源拉取 | 国内镜像赋能 | 助力开发&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.aliyun.com/mirror/ubuntu&#34;&gt;阿里云 - Ubuntu 镜像&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;docker-compose 一键安装&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置文件 修改&lt;code&gt;docker-compose.yml&lt;/code&gt;中的配置信息，主要修改&lt;code&gt;volumes&lt;/code&gt;节点，将宿主机的两个目录映射到容器内。 &lt;code&gt;environment&lt;/code&gt;节点，配置自己的环境变量。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;一键完成所有环境搭建&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;docker-compose up -d&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;浏览器访问&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;http://localhost:8181/&#34;&gt;http://localhost:8181/&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;整个部署完成了&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;常用命令参考&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;启动&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;docker-compose up -d&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;停止&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;docker-compose stop&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;重启&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;docker-compose restart&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;停止删除容器，释放所有资源&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;docker-compose down&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;删除并重新创建&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;docker-compose -f docker-compose.yml down &amp;amp;&amp;amp; docker-compose up -d&lt;/p&gt; &#xA;     &lt;p&gt;更多 docker-compose 的使用相关的内容 请查看官网文档或百度&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;项目截图&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;创建项目&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501204438.png&#34; alt=&#34;创建项目&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;项目列表&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501203542.png&#34; alt=&#34;项目列表&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;项目概述&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501203619.png&#34; alt=&#34;项目概述&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;项目成员&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501203637.png&#34; alt=&#34;项目成员&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;项目设置&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501203656.png&#34; alt=&#34;项目设置&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;基于Editor.md开发的Markdown编辑器&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501203854.png&#34; alt=&#34;基于Editor.md开发的Markdown编辑器&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;基于wangEditor开发的富文本编辑器&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501204651.png&#34; alt=&#34;基于wangEditor开发的富文本编辑器&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;项目预览&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501204609.png&#34; alt=&#34;项目预览&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;超级管理员后台&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lifei6671/mindoc/master/uploads/20170501204710.png&#34; alt=&#34;超级管理员后台&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;使用的技术(TODO: 最新技术栈整理中，使用的第三方库升级中)&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/beego/beego&#34;&gt;Beego&lt;/a&gt; &lt;del&gt;1.10.0&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;MySQL 5.6&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pandao/editor.md&#34;&gt;editor.md&lt;/a&gt; Markdown 编辑器&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twbs/bootstrap&#34;&gt;Bootstrap&lt;/a&gt; 3.2&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jquery/jquery&#34;&gt;jQuery&lt;/a&gt; 库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fex-team/webuploader&#34;&gt;WebUploader&lt;/a&gt; 文件上传框架&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstacruz/nprogress&#34;&gt;NProgress&lt;/a&gt; 库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vakata/jstree&#34;&gt;jsTree&lt;/a&gt; 树状结构库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FortAwesome/Font-Awesome&#34;&gt;Font Awesome&lt;/a&gt; 字体库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fengyuanchen/cropper&#34;&gt;Cropper&lt;/a&gt; 图片剪裁库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sentsin/layer&#34;&gt;layer&lt;/a&gt; 弹出层框架&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/highlightjs/highlight.js&#34;&gt;highlight.js&lt;/a&gt; 代码高亮库&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;to-markdown&lt;/del&gt;&lt;a href=&#34;https://github.com/domchristie/turndown&#34;&gt;Turndown&lt;/a&gt; HTML转Markdown库&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;quill 富文本编辑器&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wangeditor-team/wangEditor&#34;&gt;wangEditor&lt;/a&gt; 富文本编辑器 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;参考 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.bookstack.cn/books/wangeditor-4.7-zh&#34;&gt;wangEditor v4.7 富文本编辑器教程&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/wangeditor-team/wangEditor/issues/2493&#34;&gt;扩展菜单注册太过繁琐 #2493&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;工具： &lt;code&gt;https://babeljs.io/repl&lt;/code&gt; + &lt;code&gt;@babel/plugin-transform-classes&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vuejs/vue&#34;&gt;Vue.js&lt;/a&gt; 框架&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;主要功能&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;项目管理，可以对项目进行编辑更改，成员添加等。&lt;/li&gt; &#xA; &lt;li&gt;文档管理，添加和删除文档等。&lt;/li&gt; &#xA; &lt;li&gt;评论管理，可以管理文档评论和自己发布的评论。&lt;/li&gt; &#xA; &lt;li&gt;用户管理，添加和禁用用户，个人资料更改等。&lt;/li&gt; &#xA; &lt;li&gt;用户权限管理 ， 实现用户角色的变更。&lt;/li&gt; &#xA; &lt;li&gt;项目加密，可以设置项目公开状态，私有项目需要通过Token访问。&lt;/li&gt; &#xA; &lt;li&gt;站点配置，可开启匿名访问、验证码等。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;参与开发&lt;/h1&gt; &#xA;&lt;p&gt;我们欢迎您在 MinDoc 项目的 GitHub 上报告 issue 或者 pull request。&lt;/p&gt; &#xA;&lt;p&gt;如果您还不熟悉GitHub的Fork and Pull开发模式，您可以阅读GitHub的文档（&lt;a href=&#34;https://help.github.com/articles/using-pull-requests%EF%BC%89&#34;&gt;https://help.github.com/articles/using-pull-requests）&lt;/a&gt; 获得更多的信息。&lt;/p&gt; &#xA;&lt;h1&gt;关于作者&lt;a href=&#34;https://github.com/lifei6671&#34;&gt;lifei6671&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;一个不纯粹的PHPer，一个不自由的 gopher 。&lt;/p&gt;</summary>
  </entry>
</feed>