<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-28T01:31:27Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nevalang/neva</title>
    <updated>2025-01-28T01:31:27Z</updated>
    <id>tag:github.com,2025-01-28:/nevalang/neva</id>
    <link href="https://github.com/nevalang/neva" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üåä Next-generation programming language that solves programmers&#39; problems&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/nevalang/neva/main/assets/logo/light_gradient.svg?sanitize=true&#34; alt=&#34;Nevalang logo&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;display:grid;place-items:center;&#34;&gt; &#xA; &lt;h1&gt;Neva Programming Language&lt;/h1&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nevalang/neva/main/assets/animations/dataflow.gif&#34; alt=&#34;Dataflow&#34;&gt; &lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt;&#xA;   Next-generation programming language that solves programmers&#39; problems &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/nevalang/neva/actions/workflows/test.yml/badge.svg?branch=main&#34; alt=&#34;tests&#34;&gt; &lt;img src=&#34;https://github.com/nevalang/neva/actions/workflows/lint.yml/badge.svg?branch=main&#34; alt=&#34;lint&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/nevalang/neva&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/nevalang/neva&#34; alt=&#34;go report&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/dmXbC79UuH&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1094102475927203921?logo=discord&amp;amp;logoColor=white&amp;amp;color=5865F2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chatgpt.com/g/g-RhZn00MXU-nevalang-expert&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Nevalang_AI-74aa9c?logo=openai&amp;amp;logoColor=white&#34; alt=&#34;ChatGPT&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/os-windows%20%7C%20macos%20%7C%20linux-lightgrey?logo=linux&amp;amp;logoColor=white&#34; alt=&#34;OS&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/v1.23-00ADD8?logo=go&amp;amp;logoColor=white&#34; alt=&#34;Go&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/docs/README.md&#34;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/examples/&#34;&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/#-community&#34;&gt;&lt;strong&gt;Community&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/nevalang/neva/releases&#34;&gt;&lt;strong&gt;Releases&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/CONTRIBUTING.md&#34;&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/ARCHITECTURE.md&#34;&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;‚ö†Ô∏è WARNING&lt;/strong&gt;: This project is under active development and not yet production-ready!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;ü§î What Is Nevalang?&lt;/h2&gt; &#xA;&lt;p&gt;Nevalang is a new kind of programming language where instead of writing step-by-step instructions you create &lt;strong&gt;networks&lt;/strong&gt; where data flows between &lt;strong&gt;nodes&lt;/strong&gt; as &lt;strong&gt;immutable messages&lt;/strong&gt; and everything runs &lt;strong&gt;in parallel by default&lt;/strong&gt;. After &lt;strong&gt;type-checking&lt;/strong&gt;, your program is compiled into &lt;strong&gt;machine code&lt;/strong&gt; and can be distributed as a &lt;strong&gt;single executable&lt;/strong&gt; with zero dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Combined with built-in &lt;strong&gt;stream processing&lt;/strong&gt; support and features like &lt;strong&gt;advanced error handling&lt;/strong&gt;, Nevalang is the perfect choice for &lt;strong&gt;cloud-native applications&lt;/strong&gt; requiring &lt;strong&gt;high concurrency&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Future updates will include &lt;strong&gt;visual programming&lt;/strong&gt; and &lt;strong&gt;Go interoperability&lt;/strong&gt; to allow gradual adoption and leverage existing ecosystem.&lt;/p&gt; &#xA;&lt;h3&gt;Why Yet Another Programming Language?&lt;/h3&gt; &#xA;&lt;p&gt;We created Nevalang because we saw a gap in the programming language landscape:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visual Programming Done Right&lt;/strong&gt; - While there are many visual programming tools, they&#39;re usually limited to specific domains or lack the power of traditional programming. Nevalang is designed from the ground up to be a hybrid visual/text-based programming environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple Parallel Programming&lt;/strong&gt; - Most languages treat concurrency as an advanced feature, making it complex and error-prone. In Nevalang, parallelism is the default, and the language design prevents common issues like data races.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern Developer Experience&lt;/strong&gt; - We combine the best ideas from modern languages with dataflow programming to create a unique development experience focused on productivity.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Finally, we believe exploring new programming paradigms is valuable for the entire programming community, even if only to learn what works and what doesn&#39;t.&lt;/p&gt; &#xA;&lt;h2&gt;üëã Hello, World!&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-neva&#34;&gt;import { fmt }&#xA;&#xA;def Main(start any) (stop any) {&#xA;&#x9;println fmt.Println&amp;lt;string&amp;gt;&#xA;&#x9;---&#xA;&#x9;:start -&amp;gt; &#39;Hello, World!&#39; -&amp;gt; println -&amp;gt; :stop&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;What&#39;s happening here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;import { fmt }&lt;/code&gt; loads the &lt;code&gt;fmt&lt;/code&gt; package for printing&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;def Main&lt;/code&gt; defines the main component with input port &lt;code&gt;start&lt;/code&gt; and output port &lt;code&gt;stop&lt;/code&gt; of type &lt;code&gt;any&lt;/code&gt; (it&#39;s safe since it&#39;s only used as a signal)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:start -&amp;gt; &#39;Hello, World!&#39; -&amp;gt; println -&amp;gt; :stop&lt;/code&gt; defines a connection that sends the string to &lt;code&gt;println&lt;/code&gt; when program starts and terminates after printing (runtime sends a message to &lt;code&gt;Main:start&lt;/code&gt; at startup and waits for &lt;code&gt;Main:stop&lt;/code&gt; to terminate)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üî• Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dataflow Programming&lt;/strong&gt; - Write programs as message-passing graphs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Implicit Parallelism&lt;/strong&gt; - Everything is parallel by default, no async-await/threads/goroutines/etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strong Static Typing&lt;/strong&gt; - Robust type system with generics and pattern-matching&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Machine Code Compilation&lt;/strong&gt; - Compile for any Go-supported platform, including WASM&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stream Processing&lt;/strong&gt; - Handle real-time data with streams as first class citizens&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced Error Handling&lt;/strong&gt; - Errors as values with &lt;code&gt;?&lt;/code&gt; operator to avoid boilerplate&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Functional Patterns&lt;/strong&gt; - Immutability and higher-order components&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dependency Injection&lt;/strong&gt; - Modularity with interfaces and DI&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimal Core&lt;/strong&gt; - Simple language with limited abstractions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Package Manager&lt;/strong&gt; - Publish packages by pushing a git-tag&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Garbage Collection&lt;/strong&gt; - Automatic memory management using Go&#39;s low-latency GC&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visual Programming&lt;/strong&gt; (WIP): Edit programs as visual graphs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Go Interoperability&lt;/strong&gt; (WIP): Call Go from Neva and Neva from Go&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NextGen Debugging&lt;/strong&gt; (WIP): Observe execution in realtime and intercept messages on the fly&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üßê Why Use Nevalang?&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s compare Nevalang with Go. We could compare it to any language but Go is a simple reference since Nevalang is written in Go.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Neva&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Paradigm&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dataflow - nodes send and receive messages through connections&lt;/td&gt; &#xA;   &lt;td&gt;Control flow - execution moves through instructions step by step&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implicit - everything is concurrent by default&lt;/td&gt; &#xA;   &lt;td&gt;Explicit - goroutines, channels, and mutexes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Errors as values with &lt;code&gt;?&lt;/code&gt; operator to avoid boilerplate&lt;/td&gt; &#xA;   &lt;td&gt;Errors as values with &lt;code&gt;if err != nil {}&lt;/code&gt; boilerplate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Mutability&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Immutable - no variables and pointers; data races are not possible&lt;/td&gt; &#xA;   &lt;td&gt;Mutable - variables and pointers; programmer must avoid data races&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Null Safety&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes - nil pointer dereference is impossible&lt;/td&gt; &#xA;   &lt;td&gt;No - nil pointer dereference is possible&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Zero Values&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No zero values - everything must be explicitly initialized&lt;/td&gt; &#xA;   &lt;td&gt;Zero values by default - everything can be initialized implicitly&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Subtyping&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Structural - types are equal by their shape&lt;/td&gt; &#xA;   &lt;td&gt;Nominal - types are equal by their name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Traceback&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automatic - every message traces its path&lt;/td&gt; &#xA;   &lt;td&gt;Manual - programmer must explicitly wrap every error to add context&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dependency Injection&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Built-in - any component with dependency expects injection&lt;/td&gt; &#xA;   &lt;td&gt;Manual - programmer must create constructor function that takes dependencies&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Stream Processing&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Native support with components like &lt;code&gt;Map/Filter/Reduce&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Programmer must manually implement dataflow patterns with goroutines and channels&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;üè≠ Architecture&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a high-level overview. For a more detailed overview of the architecture, please see &lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/ARCHITECTURE.md&#34;&gt;ARCHITECTURE.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart LR&#xA;  source_code--&amp;gt;compiler--&amp;gt;|go_code| go_compiler&#xA;&#xA;  subgraph compiler&#xA;    parser--&amp;gt;analyzer--&amp;gt;backend&#xA;  end&#xA;&#xA;  go_compiler--&amp;gt;machine_code&#xA;  go_compiler--&amp;gt;wasm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Nevalang compiles to dependency-free, human-readable Go code that uses goroutines and channels for message-passing with parallelism. The Go compiler then produces optimized platform-specific code for any supported platform. This approach gives our programs access to Go&#39;s production-grade runtime with an advanced scheduler, garbage collector, and battle-tested standard library. We stand on the shoulders of giants.&lt;/p&gt; &#xA;&lt;h2&gt;‚≠êÔ∏è Star History&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://star-history.com/#nevalang/neva&amp;amp;Timeline&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=nevalang/neva&amp;amp;type=Timeline&amp;amp;theme=dark&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=nevalang/neva&amp;amp;type=Timeline&#34;&gt; &#xA;   &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=nevalang/neva&amp;amp;type=Timeline&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üí≠ What&#39;s Next?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‚ÑπÔ∏è We take development seriously but have limited time to keep everything current. Feel free to reach out on our social platforms with any questions!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/docs/README.md&#34;&gt;Documentation&lt;/a&gt; - Install and learn the language basics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/examples/&#34;&gt;Examples&lt;/a&gt; - Learn the language by small programs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;p&gt;This is an ambitious project maintained by a small group of enthusiasts. Your support by &lt;strong&gt;joining us&lt;/strong&gt; will show interest and motivate us to continue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/dmXbC79UuH&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-7289DA?logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/+H1kRClL8ppI1MWJi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-26A5E4?logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/nevalang/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reddit-FF4500?logo=reddit&amp;amp;logoColor=white&#34; alt=&#34;Reddit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/neva_language&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-000000?logo=x&amp;amp;logoColor=white&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/ARCHITECTURE.md&#34;&gt;architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://github.com/nevalang/neva/milestones?direction=asc&amp;amp;sort=due_date&amp;amp;state=open&#34;&gt;roadmap&lt;/a&gt; and &lt;a href=&#34;https://github.com/orgs/nevalang/projects/2/views/3?filterQuery=&#34;&gt;kanban-board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Also please read our &lt;a href=&#34;https://raw.githubusercontent.com/nevalang/neva/main/CODE_OF_CONDUCT.md&#34;&gt;CoC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join &lt;a href=&#34;https://discord.gg/dmXbC79UuH&#34;&gt;discord server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Support&lt;/h3&gt; &#xA;&lt;p&gt;Please &lt;strong&gt;give us a star ‚≠êÔ∏è&lt;/strong&gt; to increase our chances of getting into GitHub trends - the more attention Nevalang gets, the higher our chances of actually making a difference.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nevalang/neva/main/assets/animations/github_star.gif&#34; alt=&#34;GitHub Star&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Please &lt;strong&gt;share this project&lt;/strong&gt; with your friends! Every share helps us reach more developers and grow our community. The more developers we reach, the more likely we are to build something truly revolutionary together. üöÄ&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;display:grid;place-items:center;&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://x.com/intent/tweet?text=Check%20out%20Nevalang%20on%20GitHub:%20https://github.com/nevalang/neva%20%23Programming%20%23DataFlow%20%23Concurrency&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share-000000?logo=x&amp;amp;logoColor=white&#34; alt=&#34;share on x&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/sharer/sharer.php?u=https://github.com/nevalang/neva&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share-1877F2?logo=facebook&amp;amp;logoColor=white&#34; alt=&#34;share on facebook&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/submit?title=Check%20out%20Nevalang%20on%20GitHub:%20https://github.com/nevalang/neva&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share-FF4500?logo=reddit&amp;amp;logoColor=white&#34; alt=&#34;share on reddit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/share/url?url=https://github.com/nevalang/neva&amp;amp;text=Check%20out%20Nevalang%20on%20GitHub&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share-0088CC?logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;share on telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wa.me/?text=Check%20out%20Nevalang%20on%20GitHub:%20https://github.com/nevalang/neva&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share-25D366?logo=whatsapp&amp;amp;logoColor=white&#34; alt=&#34;share on whatsapp&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://news.ycombinator.com/submitlink?u=https://github.com/nevalang/neva&amp;amp;t=Nevalang:%20Next-generation%20programming%20language%20with%20implicit%20parallelism&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share-F0652F?logo=ycombinator&amp;amp;logoColor=white&#34; alt=&#34;share on hackernews&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/sharing/share-offsite/?url=https://github.com/nevalang/neva&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/linkedin-share-0A66C2?logo=linkedin&amp;amp;logoColor=white&#34; alt=&#34;share on linkedin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>garethgeorge/backrest</title>
    <updated>2025-01-28T01:31:27Z</updated>
    <id>tag:github.com,2025-01-28:/garethgeorge/backrest</id>
    <link href="https://github.com/garethgeorge/backrest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backrest is a web UI and orchestrator for restic backup.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/garethgeorge/backrest/main/webui/assets/logo-black.svg?sanitize=true&#34; width=&#34;400px&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/garethgeorge/backrest/actions/workflows/test.yml/badge.svg?sanitize=true&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/garethgeorge/backrest/total&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/garethgeorge/backrest&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Backrest is a web-accessible backup solution built on top of &lt;a href=&#34;https://restic.net/&#34;&gt;restic&lt;/a&gt;. Backrest provides a WebUI which wraps the restic CLI and makes it easy to create repos, browse snapshots, and restore files. Additionally, Backrest can run in the background and take an opinionated approach to scheduling snapshots and orchestrating repo health operations.&lt;/p&gt; &#xA;&lt;p&gt;By building on restic, Backrest leverages restic&#39;s mature feature set. Restic provides fast, reliable, and secure backup operations.&lt;/p&gt; &#xA;&lt;p&gt;Backrest itself is built in Golang (matching restic&#39;s implementation) and is shipped as a self-contained and light weight binary with no dependencies other than restic. This project aims to be the easiest way to setup and get started with backups on any system. You can expect to be able to perform all operations from the web interface but should you ever need more control, you are free to browse your repo and perform operations using the &lt;a href=&#34;https://restic.readthedocs.io/en/latest/manual_rest.html&#34;&gt;restic cli&lt;/a&gt;. Additionally, Backrest can safely detect and import your existing snapshots (or externally created snapshots on an ongoing basis).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Preview&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://f000.backblazeb2.com/file/gshare/screenshots/2024/Screenshot+from+2024-01-04+18-19-50.png&#34; width=&#34;60%&#34;&gt; &lt;img src=&#34;https://f000.backblazeb2.com/file/gshare/screenshots/2024/Screenshot+from+2024-01-04+18-30-14.png&#34; width=&#34;60%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Platform Support&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/garethgeorge/backrest&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA; &lt;li&gt;FreeBSD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WebUI supports local and remote access (e.g. run on a NAS and access from your desktop)&lt;/li&gt; &#xA; &lt;li&gt;Multi-platform support (Linux, macOS, Windows, FreeBSD, &lt;a href=&#34;https://hub.docker.com/r/garethgeorge/backrest&#34;&gt;Docker&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Import your existing restic repositories&lt;/li&gt; &#xA; &lt;li&gt;Cron scheduled backups and health operations (e.g. prune, check, forget)&lt;/li&gt; &#xA; &lt;li&gt;UI for browsing and restoring files from snapshots&lt;/li&gt; &#xA; &lt;li&gt;Configurable backup notifications (e.g. Discord, Slack, Shoutrrr, Gotify, Healthchecks)&lt;/li&gt; &#xA; &lt;li&gt;Add shell command hooks to run before and after backup operations.&lt;/li&gt; &#xA; &lt;li&gt;Compatible with rclone remotes&lt;/li&gt; &#xA; &lt;li&gt;Backup to any restic supported storage (e.g. S3, B2, Azure, GCS, local, SFTP, and all &lt;a href=&#34;https://rclone.org/&#34;&gt;rclone remotes&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;User Guide&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://garethgeorge.github.io/backrest/introduction/getting-started&#34;&gt;See the Backrest docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Backrest is packaged as a single executable. It can be run directly on Linux, macOS, and Windows. &lt;a href=&#34;https://github.com/restic/restic&#34;&gt;restic&lt;/a&gt; will be downloaded and installed on first run.&lt;/p&gt; &#xA;&lt;p&gt;Download options&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and run a release from the &lt;a href=&#34;https://github.com/garethgeorge/backrest/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Build from source (&lt;a href=&#34;https://raw.githubusercontent.com/garethgeorge/backrest/main/#building&#34;&gt;see below&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Run with docker: &lt;code&gt;garethgeorge/backrest:latest&lt;/code&gt; (&lt;a href=&#34;https://hub.docker.com/r/garethgeorge/backrest&#34;&gt;see on dockerhub&lt;/a&gt;) for an image that includes rclone and common unix utilities or &lt;code&gt;garethgeorge/backrest:scratch&lt;/code&gt; for a minimal image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Backrest is accessible from a web browser. By default it binds to &lt;code&gt;127.0.0.1:9898&lt;/code&gt; and can be accessed at &lt;code&gt;http://localhost:9898&lt;/code&gt;. Change the port with the &lt;code&gt;BACKREST_PORT&lt;/code&gt; environment variable e.g. &lt;code&gt;BACKREST_PORT=0.0.0.0:9898 backrest&lt;/code&gt; to listen on all network interfaces. On first startup backrest will prompt you to create a default username and password, this can be changed later in the settings page.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Note] Backrest will use your system install of restic if it is available and matches Backrest&#39;s required version. Otherwise it will download and install a compatible version of restic in its data directory. Backrest will keep restic up to date with the latest version. You force use of a specific restic binary (or non-standard version) by setting the &lt;code&gt;BACKREST_RESTIC_COMMAND&lt;/code&gt; environment variable to the path of your restic binary.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Running with Docker Compose&lt;/h2&gt; &#xA;&lt;p&gt;Docker image: &lt;a href=&#34;https://hub.docker.com/r/garethgeorge/backrest&#34;&gt;https://hub.docker.com/r/garethgeorge/backrest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example compose file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3.2&#34;&#xA;services:&#xA;  backrest:&#xA;    image: garethgeorge/backrest:latest&#xA;    container_name: backrest&#xA;    hostname: backrest&#xA;    volumes:&#xA;      - ./backrest/data:/data&#xA;      - ./backrest/config:/config&#xA;      - ./backrest/cache:/cache&#xA;      - /MY-BACKUP-DATA:/userdata # [optional] mount local paths to backup here.&#xA;      - /MY-REPOS:/repos # [optional] mount repos if using local storage, not necessary for remotes e.g. B2, S3, etc.&#xA;    environment:&#xA;      - BACKREST_DATA=/data # path for backrest data. restic binary and the database are placed here.&#xA;      - BACKREST_CONFIG=/config/config.json # path for the backrest config file.&#xA;      - XDG_CACHE_HOME=/cache # path for the restic cache which greatly improves performance.&#xA;      - TZ=America/Los_Angeles # set the timezone for the container, used as the timezone for cron jobs.&#xA;    restart: unless-stopped&#xA;    ports:&#xA;      - 9898:9898&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running on Linux&lt;/h2&gt; &#xA;&lt;h3&gt;All Linux Platforms&lt;/h3&gt; &#xA;&lt;p&gt;Download a release from the &lt;a href=&#34;https://github.com/garethgeorge/backrest/releases&#34;&gt;releases page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Using systemd with the install script (Recommended)&lt;/h4&gt; &#xA;&lt;p&gt;Extract the release you downloaded and run the install script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Extract the release to a subfolder of the current directory&#xA;mkdir backrest &amp;amp;&amp;amp; tar -xzvf backrest_Linux_x86_64.tar.gz -C backrest&#xA;# Run the install script&#xA;cd backrest &amp;amp;&amp;amp; ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The install script will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Move the Backrest binary to &lt;code&gt;/usr/local/bin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a systemd service file at &lt;code&gt;/etc/systemd/system/backrest.service&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable and start the service&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read the script before running it to make sure you are comfortable with these operations.&lt;/p&gt; &#xA;&lt;h4&gt;Run on startup with cron (Basic)&lt;/h4&gt; &#xA;&lt;p&gt;Move the Backrest binary to &lt;code&gt;/usr/local/bin&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo mv backrest /usr/local/bin/backrest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following line to your crontab (e.g. &lt;code&gt;crontab -e&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;@reboot /usr/local/bin/backrest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run on startup with systemd manually&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo mv backrest /usr/local/bin/backrest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a systemd service file at &lt;code&gt;/etc/systemd/system/backrest.service&lt;/code&gt; with the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[Unit]&#xA;Description=Backrest&#xA;After=network.target&#xA;&#xA;[Service]&#xA;Type=simple&#xA;User=&amp;lt;your linux user&amp;gt;&#xA;Group=&amp;lt;your linux group&amp;gt;&#xA;ExecStart=/usr/local/bin/backrest&#xA;Environment=&#34;BACKREST_PORT=127.0.0.1:9898&#34;&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the following commands to enable and start the service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo systemctl enable backrest&#xA;sudo systemctl start backrest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] You can set the Linux user and group to your primary user (e.g. &lt;code&gt;whoami&lt;/code&gt; when logged in).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Note] &lt;a href=&#34;https://aur.archlinux.org/packages/backrest&#34;&gt;Backrest on AUR&lt;/a&gt; is not maintained by the Backrest official and has made minor adjustments to the recommended services. Please refer to &lt;a href=&#34;https://aur.archlinux.org/cgit/aur.git/tree/backrest@.service?h=backrest&#34;&gt;here&lt;/a&gt; for details. In &lt;a href=&#34;https://aur.archlinux.org/cgit/aur.git/tree/backrest@.service?h=backrest&#34;&gt;backrest@.service&lt;/a&gt;, use &lt;code&gt;restic&lt;/code&gt; from the Arch Linux official repository by setting &lt;code&gt;BACKREST_RESTIC_COMMAND&lt;/code&gt;. And for information on enable/starting/stopping services, please refer to &lt;a href=&#34;https://wiki.archlinux.org/title/Systemd#Using_units&#34;&gt;Systemd#Using_units&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;## Install Backrest from AUR&#xA;paru -Sy backrest  # or: yay -Sy backrest&#xA;&#xA;## Enable Backrest service for current user&#xA;sudo systemctl enable --now backrest@$USER.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running on macOS&lt;/h2&gt; &#xA;&lt;h4&gt;Using Homebrew&lt;/h4&gt; &#xA;&lt;p&gt;Backrest is provided as a &lt;a href=&#34;https://github.com/garethgeorge/homebrew-backrest-tap&#34;&gt;homebrew tap&lt;/a&gt;. To install with brew run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew tap garethgeorge/homebrew-backrest-tap&#xA;brew install backrest&#xA;brew services start backrest&#xA;# optionally, install restic&#xA;brew install restic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This tap uses &lt;a href=&#34;https://github.com/Homebrew/homebrew-services&#34;&gt;Brew services&lt;/a&gt; to launch and manage Backrest&#39;s lifecycle. Backrest will launch on startup and run on port &#39;:9898` by default.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] You may need to grant Full Disk Access to backrest. To do this, go to &lt;code&gt;System Preferences &amp;gt; Security &amp;amp; Privacy &amp;gt; Privacy &amp;gt; Full Disk Access&lt;/code&gt; and add the path to backrest (typically /usr/local/bin/backrest).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Manually using the install script&lt;/h4&gt; &#xA;&lt;p&gt;Download a Darwin release from the &lt;a href=&#34;https://github.com/garethgeorge/backrest/releases&#34;&gt;releases page&lt;/a&gt; and install it to &lt;code&gt;/usr/local/bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Extract the release you downloaded and run the install script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# extract the release to a subfolder of the current directory&#xA;mkdir backrest &amp;amp;&amp;amp; tar -xzvf backrest_Darwin_arm64.tar.gz -C backrest&#xA;# run the install script&#xA;cd backrest &amp;amp;&amp;amp; ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The install script will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Move the Backrest binary to &lt;code&gt;/usr/local/bin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a launch agent file at &lt;code&gt;~/Library/LaunchAgents/com.backrest.plist&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Load the launch agent&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read the script before running it to make sure you are comfortable with these operations.&lt;/p&gt; &#xA;&lt;h2&gt;Running on Windows&lt;/h2&gt; &#xA;&lt;h4&gt;Windows Installer&lt;/h4&gt; &#xA;&lt;p&gt;Download a the Windows installer for your architecture from the &lt;a href=&#34;https://github.com/garethgeorge/backrest/releases&#34;&gt;releases page&lt;/a&gt;. The installer is named Backrest-setup-[arch].exe. Run the installer and follow the prompts.&lt;/p&gt; &#xA;&lt;p&gt;The installer will place backrest and a GUI tray application to monitor backrest in &lt;code&gt;%localappdata%\Programs\Backrest\&lt;/code&gt;. The GUI tray application will start on login by default.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] You can optionally override the default port Backrest uses by adding a user environment variable before running the installer. Open System Properties. There are multiple ways of getting there depending on Windows version. On Windows 10+ go to Settings - About - Advanced system settings (on the right side). At the bottom of the dialog window click Environment Variables. In the top section called &#34;User variables for...&#34;, click New. Enter BACKREST_PORT as the variable name. Enter 127.0.0.1:port as the variable value. E.g. to run backrest on port 8080, enter 127.0.0.1:8080. If you make this change after Backrest is installed, just re-run the installer to update shortcuts with the new port.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;h2&gt;Environment Variables (Unix)&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKREST_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Port to bind to&lt;/td&gt; &#xA;   &lt;td&gt;127.0.0.1:9898 (or 0.0.0.0:9898 for the docker images)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKREST_CONFIG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to config file&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$HOME/.config/backrest/config.json&lt;/code&gt;&lt;br&gt;(or, if &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is set, &lt;code&gt;$XDG_CONFIG_HOME/backrest/config.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKREST_DATA&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the data directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$HOME/.local/share/backrest&lt;/code&gt;&lt;br&gt;(or, if &lt;code&gt;$XDG_DATA_HOME&lt;/code&gt; is set, &lt;code&gt;$XDG_DATA_HOME/backrest&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKREST_RESTIC_COMMAND&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to restic binary&lt;/td&gt; &#xA;   &lt;td&gt;Defaults to a Backrest managed version of restic at &lt;code&gt;$XDG_DATA_HOME/backrest/restic-x.x.x&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;XDG_CACHE_HOME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the cache directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment Variables (Windows)&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKREST_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Port to bind to&lt;/td&gt; &#xA;   &lt;td&gt;127.0.0.1:9898&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKREST_CONFIG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to config file&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;%appdata%\backrest&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKREST_DATA&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the data directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;%appdata%\backrest\data&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BACKREST_RESTIC_COMMAND&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to restic binary&lt;/td&gt; &#xA;   &lt;td&gt;Defaults to a Backrest managed version of restic in &lt;code&gt;C:\Program Files\restic\restic-x.x.x&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;XDG_CACHE_HOME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the cache directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributions are welcome! See the &lt;a href=&#34;https://github.com/garethgeorge/backrest/issues&#34;&gt;issues&lt;/a&gt; or feel free to open a new issue to discuss a project. Beyond the core codebase, contributions to &lt;a href=&#34;https://garethgeorge.github.io/backrest/introduction/getting-started&#34;&gt;documentation&lt;/a&gt;, &lt;a href=&#34;https://garethgeorge.github.io/backrest/cookbooks/command-hook-examples&#34;&gt;cookbooks&lt;/a&gt;, and testing are always welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Build Depedencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node.js&lt;/a&gt; for UI development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 1.21 or greater for server development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser&#34;&gt;goreleaser&lt;/a&gt; &lt;code&gt;go install github.com/goreleaser/goreleaser@latest&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;(Optional) To Edit Protobuffers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apt install -y protobuf-compiler&#xA;go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest&#xA;go install github.com/bufbuild/buf/cmd/buf@v1.47.2&#xA;go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest&#xA;go install google.golang.org/protobuf/cmd/protoc-gen-go@latest&#xA;go install connectrpc.com/connect/cmd/protoc-gen-connect-go@latest&#xA;npm install -g @bufbuild/protoc-gen-es&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;(cd webui &amp;amp;&amp;amp; npm i &amp;amp;&amp;amp; npm run build)&#xA;(cd cmd/backrest &amp;amp;&amp;amp; go build .)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using VSCode Dev Containers&lt;/h2&gt; &#xA;&lt;p&gt;You can also use VSCode with &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&#34;&gt;Dev Containers&lt;/a&gt; extension to quickly get up and running with a working development and debugging environment.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Make sure Docker and VSCode with &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&#34;&gt;Dev Containers&lt;/a&gt; extension is installed&lt;/li&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Open this folder in VSCode&lt;/li&gt; &#xA; &lt;li&gt;When prompted, click on &lt;code&gt;Open in Container&lt;/code&gt; button, or run &lt;code&gt;&amp;gt; Dev Containers: Rebuild and Reopen in Containers&lt;/code&gt; command&lt;/li&gt; &#xA; &lt;li&gt;When container is started, go to &lt;code&gt;Run and Debug&lt;/code&gt;, choose &lt;code&gt;Debug Backrest (backend+frontend)&lt;/code&gt; and run it&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Provided launch configuration has hot reload for typescript frontend.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>