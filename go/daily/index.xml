<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-31T01:29:06Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NetEase-Media/easy-ngo</title>
    <updated>2023-10-31T01:29:06Z</updated>
    <id>tag:github.com,2023-10-31:/NetEase-Media/easy-ngo</id>
    <link href="https://github.com/NetEase-Media/easy-ngo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;easy-ngo是由网易传媒开发的基于Go语言的开发工具包，基于easy-ngo工具包，开发者可以快速构建高可用、大并发的应用。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;简介&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://netease-media.github.io/easy-ngo-website/&#34;&gt;文档地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NetEase-Media/easy-ngo-examples&#34;&gt;快速使用例子&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;什么是 &lt;code&gt;easy-ngo&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;easy-ngo是由网易传媒开发的基于Go语言的开发工具包，基于easy-ngo工具包，开发者可以快速构建高可用、大并发的应用。easy-ngo已经在传媒内部大量使用，节省了业务开发的大量时间。 使用easy-ngo带来的好处：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;开箱即用，用户基于easy-ngo直接开发代码，无需进行SDK的选型及适配工作&lt;/li&gt; &#xA; &lt;li&gt;在第三方SDK的基础上支持了Metrics、Tracer、Logger，用户只需要配置即可实现可观测性&lt;/li&gt; &#xA; &lt;li&gt;支持文件、ENV、Param、Apollo等配置源，用户可直接使用&lt;/li&gt; &#xA; &lt;li&gt;支持gorm、redis、kafka、memcache、zk等大部分的中间件SDK，并在这些SDK的基础上封装了Metrics、Tracer、Logger等可观测性的特性，用户可以直接使用，无需再进行封装&lt;/li&gt; &#xA; &lt;li&gt;支持gin、grpc等常用的server，并在这些server的基础上封装了Metrics、Tracer、Logger等可观测性的特性，用户可以直接使用，无需再进行封装&lt;/li&gt; &#xA; &lt;li&gt;用户可以快速构建微服务架构，easy-ngo框架支持服务注册、服务发现、负载均衡等特性&lt;/li&gt; &#xA; &lt;li&gt;easy-ngo基于插件和hook机制，用户可以很方便的扩展自己想要的插件，并注册到整个框架中&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;easy-ngo框架建设背景&lt;/h2&gt; &#xA;&lt;p&gt;网易传媒在2020年底开始尝试使用Go语言做业务开发，目前大部分业务都基于Go语言开发，并在线上为用户提供服务&lt;/p&gt; &#xA;&lt;h3&gt;背景&lt;/h3&gt; &#xA;&lt;p&gt;网易传媒的主要开发语言是Java，在业务全部接入容器后，在线业务也面临着以下一些问题：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在线业务内存使用量偏高：传媒主要开发语言是Java，使用SpringBoot框架，最少使用2G内存，普遍内存使用量都在4G以上，还有8G、16G、32G等内存使用的应用。&lt;/li&gt; &#xA; &lt;li&gt;在线业务编译速度和启动速度偏慢：使用maven编译、打包、打镜像、传镜像都比较耗时，拖慢了整个CI的流程。&lt;/li&gt; &#xA; &lt;li&gt;占用空间较大：由于使用Java，JVM在镜像实例都需要上百兆（400M以上）的空间，拉取，上传都比较耗时。 网易传媒于2020年将核心业务全部迁入容器，在容器和微服务的大背景下，应用的小而快显得就格外的重要，Go语言就比较适合于我们的需求，目前已经有很多互联网厂商都在积极推进Go语言的应用，于是，网易传媒在2020年底开始尝试Go语言的探索，并在2021年使用Go语言重构核心业务，目前大部分业务都基于Go语言开发，并在线上为用户提供服务。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Go语言简介&lt;/h3&gt; &#xA;&lt;p&gt;Go语言于2009年11月正式宣布推出，它是Google开发的一种静态强类型、编译型、并发型、并具有垃圾回收功能的编程语言，它的特性包括：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;编译速度快&lt;/li&gt; &#xA; &lt;li&gt;语法简单&lt;/li&gt; &#xA; &lt;li&gt;像动态语言一样开发&lt;/li&gt; &#xA; &lt;li&gt;资源消耗少&lt;/li&gt; &#xA; &lt;li&gt;为并发IO而生&lt;/li&gt; &#xA; &lt;li&gt;可运维性好&lt;/li&gt; &#xA; &lt;li&gt;与C/C++兼容&lt;/li&gt; &#xA; &lt;li&gt;统一而完备的工具集&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;easy-ngo介绍&lt;/h3&gt; &#xA;&lt;p&gt;如果我们要开发一个应用，除了应用核心业务代码外，还需要很多的底层支持，可以参见如下图： &lt;img src=&#34;https://netease-media.github.io/easy-ngo-website/assets/images/easy-ngo-1-366cb15746dd0d0d2e1dc2ffcb023845.png&#34; alt=&#34;应用的依赖&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;在传媒技术团队中推广Go语言，亟需一个Web框架提供给业务开发同事使用，内含业务开发常用库，避免重复造轮子影响效率，并且需要无感知的自动监控数据上报，能在框架层面支持业务的优雅上下线，对云原生监控的支持，支持服务注册，服务发现，服务调用等能力，于是就孕育出easy-ngo框架。 easy-ngo的主要目标如下：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;提供比原有Java框架更高的性能和更低的资源占用率&lt;/li&gt; &#xA; &lt;li&gt;尽量为业务开发者提供所需的全部工具库&lt;/li&gt; &#xA; &lt;li&gt;嵌入云原生监控，自动上传监控数据&lt;/li&gt; &#xA; &lt;li&gt;嵌入全链路监控，提供标准的opentracering协议，和第三方的全链路监控系统结合(Jaeger、Zipkin)&lt;/li&gt; &#xA; &lt;li&gt;自动加载配置和初始化程序环境，开发者能直接使用各种库&lt;/li&gt; &#xA; &lt;li&gt;与线上的健康检查、运维接口等运行环境匹配，无需用户手动开发配置&lt;/li&gt; &#xA; &lt;li&gt;能够方便的扩展第三方的SDK到框架中&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;easy-ngo避免重复造轮子，所有模块都是在多个开源库中对比并挑选其一，然后增加部分必需功能，easy-ngo支持的能力如下图所示： &lt;img src=&#34;https://netease-media.github.io/easy-ngo-website/assets/images/easy-ngo-2-705e4cec580d238bc19bb24b628aa539.png&#34; alt=&#34;easy-ngo的能力&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;easy-ngo框架为业务选择并包装了用到的中间件和基础服务，让业务可以快速的进入到业务开发的阶段，省去了研究和比较一些基础组件的时间，大大节省了业务的开发周期。&lt;/p&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;p&gt;让我们从一个最简单的HelloWorld开始easy-ngo之旅吧 首先，将代码从github上clone下来&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/NetEase-Media/easy-ngo.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其次，进入sample目录&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd examples/application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;查看代码如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;net/http&#34;&#xA;&#xA;&#x9;&#34;github.com/NetEase-Media/easy-ngo/application&#34;&#xA;&#x9;_ &#34;github.com/NetEase-Media/easy-ngo/application/r/rconfig&#34;&#xA;&#x9;&#34;github.com/NetEase-Media/easy-ngo/application/r/rgin&#34;&#xA;&#x9;_ &#34;github.com/NetEase-Media/easy-ngo/examples/application/include&#34;&#xA;&#x9;&#34;github.com/gin-gonic/gin&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;app := application.Default()&#xA;&#x9;app.Initialize(xgin)&#xA;&#x9;app.Startup()&#xA;}&#xA;&#xA;func xgin() error {&#xA;&#x9;g := rgin.Gin()&#xA;&#x9;g.GET(&#34;/hello&#34;, func(ctx *gin.Context) {&#xA;&#x9;&#x9;ctx.String(http.StatusOK, &#34;hello world!&#34;)&#xA;&#x9;})&#xA;&#x9;return nil&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;查看配置如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ngo.app]&#xA;name = &#34;quickstart-demo&#34;&#xA;[ngo.server.gin]&#xA;port = 8888&#xA;enabledMetric = false&#xA;[ngo.app.healthz]&#xA;port = 10000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;运行以下命令，最简单的服务便启动了&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go run . -c ./app.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So Cool！更多示例，我们可以进入examples目录查看。 easy-ngo访问地址如下&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/NetEase-Media/easy-ngo-examples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;微信交流群&lt;/h2&gt; &#xA;&lt;p&gt;欢迎大家扫描二维码加入我们 &lt;img src=&#34;https://github.com/NetEase-Media/easy-ngo-website/raw/gh-pages/images/Wechateasyngo.jpeg&#34; alt=&#34;微信群&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vinegarhq/vinegar</title>
    <updated>2023-10-31T01:29:06Z</updated>
    <id>tag:github.com,2023-10-31:/vinegarhq/vinegar</id>
    <link href="https://github.com/vinegarhq/vinegar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source, minimal, configurable, fast bootstrapper for running Roblox on Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vinegarhq/vinegar/master/internal/splash/vinegar.png&#34;&gt; Vinegar&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/vinegarhq/vinegar/build.yml&#34; alt=&#34;Workflow Status&#34;&gt; &lt;a href=&#34;https://github.com/vinegarhq/vinegar/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/vinegarhq/vinegar?display_name=tag&#34; alt=&#34;Version        &#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flathub.org/apps/details/io.github.vinegarhq.Vinegar&#34;&gt;&lt;img src=&#34;https://img.shields.io/flathub/downloads/io.github.vinegarhq.Vinegar&#34; alt=&#34;Flathub        &#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/vinegarhq/vinegar&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/vinegarhq/vinegar?style=flat-square&#34; alt=&#34;Report Card    &#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/dzdzZ6Pps2&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1069506340973707304&#34; alt=&#34;Discord Server &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An open-source, minimal, configurable, fast bootstrapper for running Roblox on Linux.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic DXVK Installer and uninstaller&lt;/li&gt; &#xA; &lt;li&gt;Automatic Wineprefix killer when Roblox has quit&lt;/li&gt; &#xA; &lt;li&gt;Automatic removal of outdated cached packages and versions of Roblox&lt;/li&gt; &#xA; &lt;li&gt;Discord Rich Presence support&lt;/li&gt; &#xA; &lt;li&gt;Roblox&#39;s logs appear within Vinegar&lt;/li&gt; &#xA; &lt;li&gt;FPS Unlocking for Player by default, without rbxfpsunlocker&lt;/li&gt; &#xA; &lt;li&gt;Browser launch via MIME&lt;/li&gt; &#xA; &lt;li&gt;Custom execution of wine program within wineprefix&lt;/li&gt; &#xA; &lt;li&gt;TOML configuration file &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Force a specific version of Roblox&lt;/li&gt; &#xA;   &lt;li&gt;Select/Force Roblox release channels, lets you opt into non-production Roblox release channels&lt;/li&gt; &#xA;   &lt;li&gt;Custom launcher specified to be used when launching Roblox (eg. &lt;a href=&#34;https://github.com/FeralInteractive/gamemode&#34;&gt;GameMode&lt;/a&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Wine Root, allows you to set a specific wine installation path&lt;/li&gt; &#xA;   &lt;li&gt;Sanitization of environment&lt;/li&gt; &#xA;   &lt;li&gt;Set different environment variables and FFlags for both Player and Studio&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Modifications of Roblox via the Overlay directory, overwriting Roblox&#39;s files; such as re-adding the old death sound&lt;/li&gt; &#xA; &lt;li&gt;Faster Multi-threaded installation and extraction of Roblox&lt;/li&gt; &#xA; &lt;li&gt;Multiple instances of Roblox open simultaneously&lt;/li&gt; &#xA; &lt;li&gt;Loading window during setup&lt;/li&gt; &#xA; &lt;li&gt;Logging for both Vinegar, Wine and Roblox&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;See Also&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/dzdzZ6Pps2&#34;&gt;Discord Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vinegarhq.github.io&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaximumADHD/Roblox-Studio-Mod-Manager&#34;&gt;Roblox-Studio-Mod-Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pizzaboxer/bloxstrap&#34;&gt;Bloxstrap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Acknowledgements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Credits to &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pizzaboxer&#34;&gt;pizzaboxer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/MaximumADHD&#34;&gt;MaximumADHD&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Logo modified with Katie, made by the &lt;a href=&#34;https://twemoji.twitter.com/&#34;&gt;Twemoji team&lt;/a&gt;, Licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;CC-BY 4.0&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Katie usage authorized by &lt;a href=&#34;https://karliflux.neocities.org&#34;&gt;karliflux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>