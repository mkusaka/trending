<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-30T01:34:31Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AdguardTeam/AdGuardDNS</title>
    <updated>2022-08-30T01:34:31Z</updated>
    <id>tag:github.com,2022-08-30:/AdguardTeam/AdGuardDNS</id>
    <link href="https://github.com/AdguardTeam/AdGuardDNS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Public DNS resolver that protects you from ad trackers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AdGuard DNS&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://cdn.adtidy.org/website/images/AdGuardDNS_light.svg&#34;&gt; &#xA;  &lt;img alt=&#34;AdGuard DNS&#34; src=&#34;https://cdn.adtidy.org/website/images/AdGuardDNS_black.svg?sanitize=true&#34; width=&#34;300px&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://adguard-dns.io/&#34;&gt;AdGuard DNS Website&lt;/a&gt; | &#xA; &lt;a href=&#34;https://reddit.com/r/Adguard&#34;&gt;Reddit&lt;/a&gt; | &#xA; &lt;a href=&#34;https://twitter.com/AdGuard&#34;&gt;Twitter&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;AdGuard DNS is an alternative solution for tracker blocking, privacy protection, and parental control. Easy to set up and free to use, it provides a necessary minimum of best protection against online ads, trackers, and phishing, no matter what platform and device you use.&lt;/p&gt; &#xA;&lt;h2&gt;DNS Privacy&lt;/h2&gt; &#xA;&lt;p&gt;If you use regular client-server protocol, you are at risk of your DNS requests being intercepted and, subsequently, eavesdropped and/or altered. For instance, in the US the Senate voted to eliminate rules that restricted ISPs from selling their users&#39; browsing data. Moreover, DNS is often used for censorship and surveillance purposes on the government level.&lt;/p&gt; &#xA;&lt;p&gt;All of this is possible due to the lack of encryption, and AdGuard DNS provides a solution. It supports all known DNS encryption protocols including DNS-over-HTTPS, DNS-over-TLS, DNS-over-QUIC, and DNSCrypt.&lt;/p&gt; &#xA;&lt;p&gt;On top of that, AdGuard DNS provides no-logs &lt;a href=&#34;https://adguard-dns.io/privacy.html&#34;&gt;privacy policy&lt;/a&gt; which means we do not record logs of your browsing activity.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Blocking trackers network-wide&lt;/strong&gt; with no additional software required. You can even set it up on your router to block ads on all devices connected to your home Wi-Fi network.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Protection from phishing and hazardous websites and malvertising (malicious ads).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;strong&gt;Family protection&lt;/strong&gt; mode of AdGuard DNS to block access to all websites with adult content and enforce safe search in the browser, in addition to the regular perks of ad blocking and browsing security.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Can AdGuard DNS replace a traditional blocker?&lt;/h3&gt; &#xA;&lt;p&gt;It depends. DNS-level blocking lacks the flexibility of the traditional ad blockers. For instance, there is no cosmetic pages processing. So in general, traditional blockers provide higher quality.&lt;/p&gt; &#xA;&lt;h2&gt;Personal DNS server&lt;/h2&gt; &#xA;&lt;figure&gt; &#xA; &lt;img alt=&#34;A screenshot of the AdGuard DNS dashboard&#34; src=&#34;https://cdn.adguard.com/content/blog/articles/stats_en.png&#34; width=&#34;800px&#34;&gt; &#xA; &lt;figcaption&gt;&#xA;  AdGuard DNS dashboard&#xA; &lt;/figcaption&gt; &#xA;&lt;/figure&gt; &#xA;&lt;p&gt;You can sign up for a personal AdGuard DNS account and get access to the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Manage devices and their settings in one place.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Manage blocklists that are used to block ads.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;View statistics on the DNS queries, companies, countries your devices try to connect to.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also maintain your own set of rules in the &#34;User rules&#34; section. AdGuard DNS provides a flexible &lt;a href=&#34;https://adguard-dns.io/kb/general/dns-filtering-syntax/&#34;&gt;rules system&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AdGuard DNS also provides an &lt;a href=&#34;https://adguard-dns.io/kb/private-dns/api/&#34;&gt;API&lt;/a&gt; that can be used to integrate with it if you need that.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Software License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2022 AdGuard Software Ltd.&lt;/p&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, version 3.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>heiyeluren/xmm</title>
    <updated>2022-08-30T01:34:31Z</updated>
    <id>tag:github.com,2022-08-30:/heiyeluren/xmm</id>
    <link href="https://github.com/heiyeluren/xmm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;XMM is a high performance third party memory manager for Go environments that is not affected by Gc and guarantees high performance. XMM是一个在Go语言环境中完全自主实现的第三方内存管理库，不依赖于Go本身的任何内存管理能力，纯自主实现能够应对各种场景下大小内存的 分配/释放 工作，能自主构建高性能的 链表/树/哈希表等各类数据结构，能良好完美的逃逸掉Go内置的GC机制，是构建高性能程序基础设施。&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heiyeluren/XMM/main/docs/img/xmm-logo02.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://sourcegraph.com/github.com/heiyeluren/xmm?badge&#34;&gt;&lt;img src=&#34;https://sourcegraph.com/github.com/heiyeluren/xmm/-/badge.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/heiyeluren/xmm&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/heiyeluren/xmm&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/heiyeluren/xmm&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/heiyeluren/xmm&#34; alt=&#34;Go Report Card&#34; a&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://goreportcard.com/report/github.com/heiyeluren/xmm&#34;&gt; &lt;/a&gt;&#xA;&lt;h2&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/heiyeluren/xmm&#34;&gt;➤ &lt;/a&gt;&lt;a href=&#34;https://github.com/heiyeluren/xmm/raw/main/docs/XMM-INTRO-EN.md&#34;&gt;XMM English Introduction Document&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;➤ XMM中文文档&lt;/h2&gt; &#xA;&lt;h2&gt;XMM (eXtensible) Memory Manager - 完全自主第三方 Go 内存分配管理器&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#xmm-extensible-memory-manager---%E5%AE%8C%E5%85%A8%E8%87%AA%E4%B8%BB%E7%AC%AC%E4%B8%89%E6%96%B9-go-%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AE%A1%E7%90%86%E5%99%A8&#34;&gt;XMM (eXtensible) Memory Manager - 完全自主第三方 Go 内存分配管理器&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#xmm-%E6%98%AF%E4%BB%80%E4%B9%88&#34;&gt;XMM 是什么？&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#xmm-%E4%B8%BB%E8%A6%81%E5%85%B7%E5%A4%87%E4%BB%A5%E4%B8%8B%E7%89%B9%E7%82%B9&#34;&gt;XMM 主要具备以下特点&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%AE%BE%E8%AE%A1-xmm&#34;&gt;为什么要设计 XMM？&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%AE%BE%E8%AE%A1%E8%87%AA%E4%B8%BB%E7%9A%84%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%99%A8&#34;&gt;为什么要设计自主的内存管理器？&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E4%BD%BF%E7%94%A8%E5%86%85%E7%BD%AE%E7%9A%84-mapslice-%E7%AD%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&#34;&gt;为什么不使用内置的 map/slice 等数据结构？&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96%E5%BC%80%E6%BA%90%E7%9A%84%E5%86%85%E5%AD%98%E6%B1%A0&#34;&gt;为什么不使用其他开源的内存池？&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#xmm-%E7%9A%84%E6%9C%80%E7%BB%88%E8%AE%BE%E8%AE%A1%E7%BB%93%E8%AE%BA%E6%98%AF%E4%BB%80%E4%B9%88&#34;&gt;XMM 的最终设计结论是什么？&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#xmm-%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%9B%AE%E6%A0%87%E6%98%AF%E4%BB%80%E4%B9%88&#34;&gt;XMM 设计的目标是什么？&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#xmm-%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8&#34;&gt;XMM 快速使用入门&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#-xmm-%E4%BD%BF%E7%94%A8%E6%A1%88%E4%BE%8B-&#34;&gt;☆ XMM 使用案例 ☆&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#xmm-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D&#34;&gt;XMM 实现原理介绍&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/#xmm-%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81&#34;&gt;XMM 技术交流&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;XMM 是什么？&lt;/h2&gt; &#xA;&lt;p&gt;XMM - X(eXtensible) Memory Manager（完全自主研发的第三方 Go 内存分配管理器）&lt;/p&gt; &#xA;&lt;p&gt;XMM 是一个在 Go 语言环境中完全自主实现的第三方内存管理库，不依赖于 Go 本身的任何内存管理能力，纯自主实现的 Go 内存管理库；能够应对各种场景下大小内存的 分配/释放/管理 等工作，能够帮助适用于任何复杂数据结构的构建（链表/数组/树/hash 等场景），能够良好完美的逃逸掉 Go 内置的 GC 机制，保证程序的超高性能，是构建高性能程序基础设施。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;XMM 主要具备以下特点&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;XMM 是一个在 Go 语言环境中完全自主实现的第三方内存管理库，不依赖于 Go 本身的任何内存管理能力，通过 6000 行纯 Go 代码自主实现的 Go 内存管理库，适合不用 Go 的 GC 想要自己管理内存的场景。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;XMM 能够应对各种场景下大小内存的 分配/释放/管理 等工作，能够帮助适用于任何复杂数据结构的构建，比如链表/数组/树/哈希表等等场景；XMM 可以让你像 C/C++ 一样方便便捷使用系统内存，并且不用担心性能问题。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;XMM 能够良好完美的逃逸掉 Go 内置的 GC 机制，保证程序的超高性能，是构建高性能程序基础设施；但与 sync.Pool 等实现机制完全不同，sync.Pool 等使用字节流实现来逃逸 GC，XMM 是纯使用 Linux 系统的 mmap 作为底层内存存储，XMM 更像 TcMalloc 等内存分配器。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;XMM 协程安全，且分配性能超高，目前在普通 Linux 服务器上面可以达到 350w alloc/s，就是每秒可以进行 350 万次的内存分配操作不卡顿，非常适合想要自主管理内存且超高性能场景。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;XMM 内存库使用接口简单，兼容性强，能够兼容 Go 1.8 以上版本，容易上手（推荐 go 1.12+ 版本更好），可以在 XMM 之上重构你所有想要的高性能数据结构，比如 map/slice 等等。（案例部分可以做一些数据结构实现的参考）&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;为什么要设计 XMM？&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;为什么要设计自主的内存管理器？&lt;/h3&gt; &#xA;&lt;p&gt;为了应对在多种内存管理的场景下的使用，可能需要有一些除了内置数据结构外的一些内存自主调度使用的场景，比如构建复杂的高性能的数据结构，在大规模内存占用，或者是非常多的小内存块占用场景下，能够尽量减少 Go 的 GC 机制，保障服务性能稳定不会因为 GC 而产生抖动。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;为什么不使用内置的 map/slice 等数据结构？&lt;/h3&gt; &#xA;&lt;p&gt;Golang 本身为了性能和内存可控，整个内存管理是完全封闭不对外的，并且有自主的 GC 机制，需要自主内存管理比较麻烦；Go 中自带的 GC 机制经过很多个版本的迭代，到目前性能已经很不错，但是在大规模的碎片化内存块下面，GC 还是会有一定损耗，在极端高性能场景下，GC 会让整个后台应用服务性能上不去（或偶尔卡顿）。所以一句话，Go 本身指针等还有性能会受到 GC 的影响，导致服务性能总是上不去。 &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;为什么不使用其他开源的内存池？&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;除 Go 本身的内存模块，调研了解现有大部分的第三方 对象池/内存池/字节池 等需要某块自主内存操作的场景中基本是 Map/sync.Pool/Bytes[] 等方式。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Map 数据结构适合保存各类型数据，但 GC 概率大； sync.Pool 这类保存复用临时对象，也可以各种数据机构，可适当减少 GC（无法避免 GC）； Bytes[] 方式来保存字节数据，并且只能保存字节数据，通过某些处理，尽量逃避 GC 扫描；（对比参考 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/265790840&#34;&gt;Go 语言基于 channel 实现的并发安全的字节池&lt;/a&gt; ）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;现有开源库包括：依赖于 sync.Pool 的比如字节的 mcache &lt;a href=&#34;https://github.com/bytedance/gopkg/raw/main/lang/mcache/mcache.go&#34;&gt;gopkg/mcache.go&lt;/a&gt;；采用 Bytes[] 方式的比如 MinIO 的的 &lt;a href=&#34;https://github.com/minio/minio/raw/master/internal/bpool/bpool.go&#34;&gt;bpool minio/bpool.go&lt;/a&gt; ，都可以学习参考。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;结论：XMM 与他们实现机制完全不同，XMM 更靠近 Go 内置内存分配机制原理&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;XMM 的最终设计结论是什么？&lt;/h3&gt; &#xA;&lt;p&gt;为了完全实现最终为了逃逸掉 Golang 的 GC 机制，以及拥有完全自主可控的内存管理分配操作，在面对成千上万的小对象场景中，不会因为 Go 本身 GC 机制带来任何的抖动，所以自主从零开始实现了 XMM 模块，达到在 Go 程序中调用 XMM 模块可以达到完美的自主内存 申请/释放/管理 的功能，并可以完美逃逸掉 Go 的 GC 机制。 &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;XMM 设计的目标是什么？&lt;/h3&gt; &#xA;&lt;p&gt;为了保证高性能，XMM 设计之初，就定下了三个核心目标：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;单机（6 核心 KVM 或物理机）内存分配性能达到 350w+ alloc/s；（每秒内存分配速度，&lt;b&gt;已实现&lt;/b&gt;）；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;可以支持调用用户手工强制Free某个申请内存块，也可以支持XMM自身自动GC某些未手工Free的内存库；（自主实现GC功能，&lt;b&gt;目前建议手动Free(), 未来版本实现&lt;/b&gt;）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;不会内存泄露，并且内存管理不是粗糙的，而颗粒度细致的，完全尽量可媲美行业主流的内存管理分配器。（&lt;b&gt;已实现&lt;/b&gt;）&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;XMM性能测试数据&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/heiyeluren/xmm/raw/main/docs/XMM-Benchmark.md&#34;&gt;XMM性能测试情况&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;XMM 快速使用入门&lt;/h2&gt; &#xA;&lt;h3&gt;☆ &lt;a href=&#34;https://github.com/heiyeluren/XMM/raw/main/docs/XMM-Usage.md&#34;&gt;XMM 使用案例&lt;/a&gt; ☆&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;说明：XMM 测试程序快速预览下载使用&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heiyeluren/XMM/raw/main/example/xmm-test00.go&#34;&gt;XMM 使用 - 入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heiyeluren/XMM/raw/main/example/xmm-test01.go&#34;&gt;XMM 使用 - 结构体&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heiyeluren/XMM/raw/main/example/xmm-test02.go&#34;&gt;XMM 使用 - 链表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heiyeluren/XMM/raw/main/example/xmm-test03.go&#34;&gt;XMM 使用 - 哈希表&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;XMM 实现原理介绍&lt;/h2&gt; &#xA;&lt;h4&gt;1. &lt;a href=&#34;https://github.com/heiyeluren/XMM/raw/main/docs/XMM-DesignImplementation.md&#34;&gt;XMM 的核心设计与实现流程&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;1. &lt;a href=&#34;https://github.com/heiyeluren/XMM/raw/main/docs/XMM-InvestigateResearch.md&#34;&gt;XMM 设计实现技术调研参考&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;1. &lt;a href=&#34;https://github.com/heiyeluren/xmm/raw/main/docs/XMM-QA.md&#34;&gt;XMM 内部技术设计问题Q&amp;amp;A&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;XMM 项目开发者&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;项目角色&lt;/th&gt; &#xA;   &lt;th&gt;项目成员&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;项目发起人/负责人&lt;/td&gt; &#xA;   &lt;td&gt;黑夜路人( @heiyeluren ) &lt;br&gt;老张 ( @Zhang-Jun-tao )&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;项目开发者&lt;/td&gt; &#xA;   &lt;td&gt;老张 ( @Zhang-Jun-tao ) &lt;br&gt;黑夜路人( @heiyeluren ) &lt;br&gt; Viktor ( @guojun1992 )&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;XMM 技术交流&lt;/h3&gt; &#xA;&lt;p&gt;XMM 目前是早期版本，总体性能比较好，目前也在另外一个自研的 XMap 模块中使用，当然也少不了一些问题和 bug，欢迎大家一起共创，或者直接提交 PR 等等。&lt;/p&gt; &#xA;&lt;p&gt;欢迎加入 XMM 技术交流微信群，要加群，可以先添加如下微信让对方拉入群：&lt;br&gt; （如无法看到图片，请手工添加微信： heiyeluren2017 ）&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heiyeluren/xmm/main/docs/img/heiyeluren2017-wx.jpg&#34; width=&#34;40%&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>jetpack-io/devbox</title>
    <updated>2022-08-30T01:34:31Z</updated>
    <id>tag:github.com,2022-08-30:/jetpack-io/devbox</id>
    <link href="https://github.com/jetpack-io/devbox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Instant, easy, predictable shells and containers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Devbox 📦&lt;/h1&gt; &#xA;&lt;h3&gt;Instant, easy, and predictable shells and containers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/agbskCJXk2&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/903306922852245526?color=7389D8&amp;amp;label=discord&amp;amp;logo=discord&amp;amp;logoColor=ffffff&#34; alt=&#34;Join Discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/jetpack-io/devbox&#34; alt=&#34;License: Apache 2.0&#34;&gt; &lt;a href=&#34;https://github.com/jetpack-io/devbox/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/jetpack-io/devbox?color=green&amp;amp;label=version&amp;amp;sort=semver&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jetpack-io/devbox/actions/workflows/tests.yaml&#34;&gt;&lt;img src=&#34;https://github.com/jetpack-io/devbox/actions/workflows/tests.yaml/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;What is it?&lt;/h2&gt; &#xA;&lt;p&gt;Devbox is a command-line tool that lets you easily create isolated shells and containers. You start by defining the list of packages required by your development environment, and devbox uses that definition to create an isolated environment just for your application.&lt;/p&gt; &#xA;&lt;p&gt;In practice, Devbox works similar to a package manager like &lt;code&gt;yarn&lt;/code&gt; – except the packages it manages are at the operating-system level (the sort of thing you would normally install with &lt;code&gt;brew&lt;/code&gt; or &lt;code&gt;apt-get&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Devbox was originally developed by &lt;a href=&#34;https://www.jetpack.io&#34;&gt;jetpack.io&lt;/a&gt; and is internally powered by &lt;code&gt;nix&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;The example below creates a development environment with &lt;code&gt;python 2.7&lt;/code&gt; and &lt;code&gt;go 1.18&lt;/code&gt;, even though those packages are not installed in the underlying machine:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/279789/186491771-6b910175-18ec-4c65-92b0-ed1a91bb15ed.svg?sanitize=true&#34; alt=&#34;screen cast&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Benefits&lt;/h2&gt; &#xA;&lt;h3&gt;A consistent shell for everyone on the team&lt;/h3&gt; &#xA;&lt;p&gt;Declare the list of tools needed by your project via a &lt;code&gt;devbox.json&lt;/code&gt; file and run &lt;code&gt;devbox shell&lt;/code&gt;. Everyone working on the project gets a shell environment with the exact same version of those tools.&lt;/p&gt; &#xA;&lt;h3&gt;Try new tools without polluting your laptop&lt;/h3&gt; &#xA;&lt;p&gt;Development environments created by Devbox are isolated from everything else in your laptop. Is there a tool you want to try without making a mess? Add it to a Devbox shell, and remove it when you don&#39;t want it anymore – all while keeping your laptop pristine.&lt;/p&gt; &#xA;&lt;h3&gt;Don&#39;t sacrifice speed&lt;/h3&gt; &#xA;&lt;p&gt;Devbox can create isolated environments right on your laptop, without an extra-layer of virtualization slowing your file system or every command. When you&#39;re ready to ship, it&#39;ll turn it into an equivalent container – but not before.&lt;/p&gt; &#xA;&lt;h3&gt;Good-bye conflicting versions&lt;/h3&gt; &#xA;&lt;p&gt;Are you working on multiple projects, all of which need different versions of the same binary? Instead of attempting to install conflicting versions of the same binary on your laptop, create an isolated environment for each project, and use whatever version you want for each.&lt;/p&gt; &#xA;&lt;h3&gt;Instantly turn your application into a container&lt;/h3&gt; &#xA;&lt;p&gt;Devbox analyzes your source code and instantly turns it into an OCI-compliant image that can be deployed to any cloud. The image is optimized for speed, size, security and caching ... and without needing to write a &lt;code&gt;Dockerfile&lt;/code&gt;. And unlike &lt;a href=&#34;https://buildpacks.io/&#34;&gt;buildpacks&lt;/a&gt;, it does it quickly.&lt;/p&gt; &#xA;&lt;h3&gt;Stop declaring dependencies twice&lt;/h3&gt; &#xA;&lt;p&gt;Your application often needs the same set of dependencies when you are developing on your laptop, and when you&#39;re packaging it as a container ready to deploy to the cloud. Devbox&#39;s dev environments are &lt;em&gt;isomorphic&lt;/em&gt;: meaning that we can turn them into both a local shell environment or a cloud-ready container, all without having to repeat yourself twice.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Devbox&lt;/h2&gt; &#xA;&lt;p&gt;In addition to installing Devbox itself, you will need to install &lt;code&gt;nix&lt;/code&gt; and &lt;code&gt;docker&lt;/code&gt; since Devbox depends on them:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://nixos.org/download.html&#34;&gt;Nix Package Manager&lt;/a&gt;. (Don&#39;t worry, you don&#39;t need to learn Nix.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker Engine&lt;/a&gt; or &lt;a href=&#34;https://www.docker.com/get-started/&#34;&gt;Docker Desktop&lt;/a&gt;. Note that docker is only needed if you want to create containers – the shell functionality works without it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Devbox:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fsSL https://get.jetpack.io/devbox | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Quickstart: Fast, Deterministic Shell&lt;/h2&gt; &#xA;&lt;p&gt;In this quickstart we’ll create a development shell with specific tools installed. These tools will only be available when using this Devbox shell, ensuring we don’t pollute your machine.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a terminal in a new empty folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize Devbox:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;devbox init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This creates a &lt;code&gt;devbox.json&lt;/code&gt; file in the current directory. You should commit it to source control.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add command-line tools from &lt;a href=&#34;https://search.nixos.org/packages&#34;&gt;Nix Packages&lt;/a&gt;. For example, to add Python 3.10:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;devbox add python310&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your &lt;code&gt;devbox.json&lt;/code&gt; file keeps track of the packages you&#39;ve added, it should now look like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;   &#34;packages&#34;: [&#xA;      &#34;python310&#34;&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start a new shell that has these tools installed:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;devbox shell&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can tell you’re in a Devbox shell (and not your regular terminal) because the shell prompt and directory changed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use your favorite tools.&lt;/p&gt; &lt;p&gt;In this example we installed Python 3.10, so let’s use it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python --version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your regular tools are also available including environment variables and config settings.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --get user.name&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To exit the Devbox shell and return to your regular shell:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;exit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Quickstart: Instant Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;Devbox makes it easy to package your application into an OCI-compliant container image. Devbox analyzes your code, automatically identifies the right toolchain needed by your project, and builds it into a docker image.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize your project with &lt;code&gt;devbox init&lt;/code&gt; if you haven&#39;t already.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;devbox build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The resulting image is named &lt;code&gt;devbox&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tag the image with a more descriptive name:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker tag devbox my-image:v0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Auto-detected languages:&lt;/h3&gt; &#xA;&lt;p&gt;Devbox currently detects the following languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Want more languages? &lt;a href=&#34;https://github.com/jetpack-io/devbox/issues&#34;&gt;Ask for a new Language&lt;/a&gt; or contribute one via a Pull Request.&lt;/p&gt; &#xA;&lt;h2&gt;Additional commands&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;devbox help&lt;/code&gt; - see all commands&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;devbox plan&lt;/code&gt; - see the configuration and steps Devbox will use to generate a container&lt;/p&gt; &#xA;&lt;h2&gt;Join our Developer Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat with us by joining the &lt;a href=&#34;https://discord.gg/agbskCJXk2&#34;&gt;Jetpack.io Discord Server&lt;/a&gt; – we have a #devbox channel dedicated to this project.&lt;/li&gt; &#xA; &lt;li&gt;File bug reports and feature requests using &lt;a href=&#34;https://github.com/jetpack-io/devbox/issues&#34;&gt;Github Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Work&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://nixos.org/&#34;&gt;Nix&lt;/a&gt; for providing isolated shells.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is proudly open-source under the &lt;a href=&#34;https://github.com/jetpack-io/devbox/raw/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>