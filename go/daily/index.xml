<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-23T01:41:31Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>projectdiscovery/httpx</title>
    <updated>2022-07-23T01:41:31Z</updated>
    <id>tag:github.com,2022-07-23:/projectdiscovery/httpx</id>
    <link href="https://github.com/projectdiscovery/httpx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;httpx is a fast and multi-purpose HTTP toolkit allows to run multiple probers using retryablehttp library, it is designed to maintain the result reliability with increased threads.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/projectdiscovery/httpx/master/static/httpx-logo.png&#34; alt=&#34;httpx&#34; width=&#34;200px&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-_red.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/badge/github.com/projectdiscovery/httpx&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/projectdiscovery/httpx&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/httpx/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/projectdiscovery/httpx&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/projectdiscovery/httpx&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/projectdiscovery/httpx.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/pdiscoveryio&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/pdiscoveryio.svg?logo=twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/695645237418131507.svg?logo=discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/httpx/master/#features&#34;&gt;Features&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/httpx/master/#installation-instructions&#34;&gt;Installation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/httpx/master/#usage&#34;&gt;Usage&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/httpx/master/#running-httpx&#34;&gt;Running httpx&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/httpx/master/#-notes&#34;&gt;Notes&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;Join Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;httpx is a fast and multi-purpose HTTP toolkit allow to run multiple probers using &lt;a href=&#34;https://github.com/projectdiscovery/retryablehttp-go&#34;&gt;retryablehttp&lt;/a&gt; library, it is designed to maintain the result reliability with increased threads.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/8293321/135731750-4c1d38b1-bd2a-40f9-88e9-3c4b9f6da378.png&#34; alt=&#34;httpx&#34; width=&#34;700px&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple and modular code base making it easy to contribute.&lt;/li&gt; &#xA; &lt;li&gt;Fast And fully configurable flags to probe multiple elements.&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple HTTP based probings.&lt;/li&gt; &#xA; &lt;li&gt;Smart auto fallback from https to http as default.&lt;/li&gt; &#xA; &lt;li&gt;Supports hosts, URLs and CIDR as input.&lt;/li&gt; &#xA; &lt;li&gt;Handles edge cases doing retries, backoffs etc for handling WAFs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported probes:-&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Probes&lt;/th&gt; &#xA;   &lt;th&gt;Default check&lt;/th&gt; &#xA;   &lt;th&gt;Probes&lt;/th&gt; &#xA;   &lt;th&gt;Default check&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;URL&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;IP&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Title&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;CNAME&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Status Code&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Raw HTTP&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Content Length&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;HTTP2&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TLS Certificate&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;HTTP Pipeline&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CSP Header&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Virtual host&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Line Count&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Word Count&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Location Header&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;CDN&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web Server&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Paths&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web Socket&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Ports&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Response Time&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Request Method&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Favicon Hash&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Probe Status&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Body Hash&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Header Hash&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Redirect chain&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;URL Scheme&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JARM Hash&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;ASN&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Installation Instructions&lt;/h1&gt; &#xA;&lt;p&gt;httpx requires &lt;strong&gt;go1.17&lt;/strong&gt; to install successfully. Run the following command to get the repo -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;httpx -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will display help for the tool. Here are all the switches it supports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Usage:&#xA;  ./httpx [flags]&#xA;&#xA;Flags:&#xA;INPUT:&#xA;   -l, -list string      input file containing list of hosts to process&#xA;   -rr, -request string  file containing raw request&#xA;&#xA;PROBES:&#xA;   -sc, -status-code     display response status-code&#xA;   -cl, -content-length  display response content-length&#xA;   -ct, -content-type    display response content-type&#xA;   -location             display response redirect location&#xA;   -favicon              display mmh3 hash for &#39;/favicon.ico&#39; file&#xA;   -hash string          display response body hash (supported: md5,mmh3,simhash,sha1,sha256,sha512)&#xA;   -jarm                 display jarm fingerprint hash&#xA;   -rt, -response-time   display response time&#xA;   -lc, -line-count      display response body line count&#xA;   -wc, -word-count      display response body word count&#xA;   -title                display page title&#xA;   -server, -web-server  display server name&#xA;   -td, -tech-detect     display technology in use based on wappalyzer dataset&#xA;   -method               display http request method&#xA;   -websocket            display server using websocket&#xA;   -ip                   display host ip&#xA;   -cname                display host cname&#xA;   -asn                  display host asn information&#xA;   -cdn                  display cdn in use&#xA;   -probe                display probe status&#xA;&#xA;MATCHERS:&#xA;   -mc, -match-code string            match response with specified status code (-mc 200,302)&#xA;   -ml, -match-length string          match response with specified content length (-ml 100,102)&#xA;   -mlc, -match-line-count string     match response body with specified line count (-mlc 423,532)&#xA;   -mwc, -match-word-count string     match response body with specified word count (-mwc 43,55)&#xA;   -mfc, -match-favicon string[]      match response with specified favicon hash (-mfc 1494302000)&#xA;   -ms, -match-string string          match response with specified string (-ms admin)&#xA;   -mr, -match-regex string           match response with specified regex (-mr admin)&#xA;   -mcdn, -match-cdn string[]         match host with specified cdn provider (azure, cloudflare, cloudfront, fastly, incapsula, oracle, google, akamai, sucuri, leaseweb)&#xA;   -mrt, -match-response-time string  match response with specified response time in seconds (-mrt &#39;&amp;lt; 1&#39;)&#xA;&#xA;EXTRACTOR:&#xA;   -er, -extract-regex string[]   Display response content with matched regex&#xA;   -ep, -extract-preset string[]  Display response content with matched preset regex&#xA;&#xA;FILTERS:&#xA;   -fc, -filter-code string            filter response with specified status code (-fc 403,401)&#xA;   -fl, -filter-length string          filter response with specified content length (-fl 23,33)&#xA;   -flc, -filter-line-count string     filter response body with specified line count (-flc 423,532)&#xA;   -fwc, -filter-word-count string     filter response body with specified word count (-fwc 423,532)&#xA;   -ffc, -filter-favicon string[]      filter response with specified favicon hash (-mfc 1494302000)&#xA;   -fs, -filter-string string          filter response with specified string (-fs admin)&#xA;   -fe, -filter-regex string           filter response with specified regex (-fe admin)&#xA;   -fcdn, -filter-cdn string[]         filter host with specified cdn provider (azure, cloudflare, cloudfront, fastly, incapsula, oracle, google, akamai, sucuri, leaseweb)&#xA;   -frt, -filter-response-time string  filter response with specified response time in seconds (-frt &#39;&amp;gt; 1&#39;)&#xA;&#xA;RATE-LIMIT:&#xA;   -t, -threads int              number of threads to use (default 50)&#xA;   -rl, -rate-limit int          maximum requests to send per second (default 150)&#xA;   -rlm, -rate-limit-minute int  maximum number of requests to send per minute&#xA;&#xA;MISCELLANEOUS:&#xA;   -pa, -probe-all-ips  probe all the ips associated with same host&#xA;   -p, -ports string[]  ports to probe (nmap syntax: eg 1,2-10,11)&#xA;   -path string         path or list of paths to probe (comma-separated, file)&#xA;   -tls-probe           send http probes on the extracted TLS domains (dns_name)&#xA;   -csp-probe           send http probes on the extracted CSP domains&#xA;   -tls-grab            perform TLS(SSL) data grabbing&#xA;   -pipeline            probe and display server supporting HTTP1.1 pipeline&#xA;   -http2               probe and display server supporting HTTP2&#xA;   -vhost               probe and display server supporting VHOST&#xA;&#xA;OUTPUT:&#xA;   -o, -output string                file to write output results&#xA;   -sr, -store-response              store http response to output directory&#xA;   -srd, -store-response-dir string  store http response to custom directory&#xA;   -csv                              store output in csv format&#xA;   -json                             store output in JSONL(ines) format&#xA;   -irr, -include-response           include http request/response in JSON output (-json only)&#xA;   -include-chain                    include redirect http chain in JSON output (-json only)&#xA;   -store-chain                      include http redirect chain in responses (-sr only)&#xA;&#xA;CONFIGURATIONS:&#xA;   -r, -resolvers string[]       list of custom resolver (file or comma separated)&#xA;   -allow string[]               allowed list of IP/CIDR&#39;s to process (file or comma separated)&#xA;   -deny string[]                denied list of IP/CIDR&#39;s to process (file or comma separated)&#xA;   -sni, -sni-name string        Custom TLS SNI name&#xA;   -random-agent                 Enable Random User-Agent to use (default true)&#xA;   -H, -header string[]          custom http headers to send with request&#xA;   -http-proxy, -proxy string    http proxy to use (eg http://127.0.0.1:8080)&#xA;   -unsafe                       send raw requests skipping golang normalization&#xA;   -resume                       resume scan using resume.cfg&#xA;   -fr, -follow-redirects        follow http redirects&#xA;   -maxr, -max-redirects int     max number of redirects to follow per host (default 10)&#xA;   -fhr, -follow-host-redirects  follow redirects on the same host&#xA;   -vhost-input                  get a list of vhosts as input&#xA;   -x string                     request methods to probe, use &#39;all&#39; to probe all HTTP methods&#xA;   -body string                  post body to include in http request&#xA;   -s, -stream                   stream mode - start elaborating input targets without sorting&#xA;   -sd, -skip-dedupe             disable dedupe input items (only used with stream mode)&#xA;   -ldp, -leave-default-ports    leave default http/https ports in host header (eg. http://host:80 - https//host:443&#xA;&#xA;DEBUG:&#xA;   -health-check, -hc        run diagnostic check up&#xA;   -debug                    display request/response content in cli&#xA;   -debug-req                display request content in cli&#xA;   -debug-resp               display response content in cli&#xA;   -version                  display httpx version&#xA;   -stats                    display scan statistic&#xA;   -silent                   silent mode&#xA;   -v, -verbose              verbose mode&#xA;   -si, -stats-interval int  number of seconds to wait between showing a statistics update (default: 5)&#xA;   -nc, -no-color            disable colors in cli output&#xA;&#xA;OPTIMIZATIONS:&#xA;   -nf, -no-fallback                  display both probed protocol (HTTPS and HTTP)&#xA;   -nfs, -no-fallback-scheme          probe with protocol scheme specified in input &#xA;   -maxhr, -max-host-error int        max error count per host before skipping remaining path/s (default 30)&#xA;   -ec, -exclude-cdn                  skip full port scans for CDNs (only checks for 80,443)&#xA;   -retries int                       number of retries&#xA;   -timeout int                       timeout in seconds (default 5)&#xA;   -rsts, -response-size-to-save int  max response size to save in bytes (default 2147483647)&#xA;   -rstr, -response-size-to-read int  max response size to read in bytes (default 2147483647)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Running httpX&lt;/h1&gt; &#xA;&lt;h3&gt;URL Probe&lt;/h3&gt; &#xA;&lt;p&gt;This will run the tool against all the hosts and subdomains in &lt;code&gt;hosts.txt&lt;/code&gt; and returns URLs running HTTP webserver.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cat hosts.txt | httpx &#xA;&#xA;    __    __  __       _  __&#xA;   / /_  / /_/ /_____ | |/ /&#xA;  / __ \/ __/ __/ __ \|   / &#xA; / / / / /_/ /_/ /_/ /   |  &#xA;/_/ /_/\__/\__/ .___/_/|_|   v1.1.1  &#xA;             /_/            &#xA;&#xA;    projectdiscovery.io&#xA;&#xA;[WRN] Use with caution. You are responsible for your actions&#xA;[WRN] Developers assume no liability and are not responsible for any misuse or damage.&#xA;&#xA;https://mta-sts.managed.hackerone.com&#xA;https://mta-sts.hackerone.com&#xA;https://mta-sts.forwarding.hackerone.com&#xA;https://docs.hackerone.com&#xA;https://www.hackerone.com&#xA;https://resources.hackerone.com&#xA;https://api.hackerone.com&#xA;https://support.hackerone.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;File Input&lt;/h3&gt; &#xA;&lt;p&gt;This will run the tool with the &lt;code&gt;probe&lt;/code&gt; flag against all of the hosts in &lt;strong&gt;hosts.txt&lt;/strong&gt; and return URLs with probed status.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;httpx -list hosts.txt -silent -probe&#xA;&#xA;http://ns.hackerone.com [FAILED]&#xA;https://docs.hackerone.com [SUCCESS]&#xA;https://mta-sts.hackerone.com [SUCCESS]&#xA;https://mta-sts.managed.hackerone.com [SUCCESS]&#xA;http://email.hackerone.com [FAILED]&#xA;https://mta-sts.forwarding.hackerone.com [SUCCESS]&#xA;http://links.hackerone.com [FAILED]&#xA;https://api.hackerone.com [SUCCESS]&#xA;https://www.hackerone.com [SUCCESS]&#xA;http://events.hackerone.com [FAILED]&#xA;https://support.hackerone.com [SUCCESS]&#xA;https://gslink.hackerone.com [SUCCESS]&#xA;http://o1.email.hackerone.com [FAILED]&#xA;http://info.hackerone.com [FAILED]&#xA;https://resources.hackerone.com [SUCCESS]&#xA;http://o2.email.hackerone.com [FAILED]&#xA;http://o3.email.hackerone.com [FAILED]&#xA;http://go.hackerone.com [FAILED]&#xA;http://a.ns.hackerone.com [FAILED]&#xA;http://b.ns.hackerone.com [FAILED]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CIDR Input&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo 173.0.84.0/24 | httpx -silent&#xA;&#xA;https://173.0.84.29&#xA;https://173.0.84.43&#xA;https://173.0.84.31&#xA;https://173.0.84.44&#xA;https://173.0.84.12&#xA;https://173.0.84.4&#xA;https://173.0.84.36&#xA;https://173.0.84.45&#xA;https://173.0.84.14&#xA;https://173.0.84.25&#xA;https://173.0.84.46&#xA;https://173.0.84.24&#xA;https://173.0.84.32&#xA;https://173.0.84.9&#xA;https://173.0.84.13&#xA;https://173.0.84.6&#xA;https://173.0.84.16&#xA;https://173.0.84.34&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tool Chain&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;subfinder -d hackerone.com -silent| httpx -title -tech-detect -status-code&#xA;&#xA;    __    __  __       _  __&#xA;   / /_  / /_/ /_____ | |/ /&#xA;  / __ \/ __/ __/ __ \|   /&#xA; / / / / /_/ /_/ /_/ /   |&#xA;/_/ /_/\__/\__/ .___/_/|_|&#xA;             /_/              v1.1.1&#xA;&#xA;    projectdiscovery.io&#xA;&#xA;Use with caution. You are responsible for your actions&#xA;Developers assume no liability and are not responsible for any misuse or damage.&#xA;https://mta-sts.managed.hackerone.com [404] [Page not found · GitHub Pages] [Varnish,GitHub Pages,Ruby on Rails]&#xA;https://mta-sts.hackerone.com [404] [Page not found · GitHub Pages] [Varnish,GitHub Pages,Ruby on Rails]&#xA;https://mta-sts.forwarding.hackerone.com [404] [Page not found · GitHub Pages] [GitHub Pages,Ruby on Rails,Varnish]&#xA;https://docs.hackerone.com [200] [HackerOne Platform Documentation] [Ruby on Rails,jsDelivr,Gatsby,React,webpack,Varnish,GitHub Pages]&#xA;https://support.hackerone.com [301,302,301,200] [HackerOne] [Cloudflare,Ruby on Rails,Ruby]&#xA;https://resources.hackerone.com [301,301,404] [Sorry, no Folders found.]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Favicon Hash&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;subfinder -d hackerone.com -silent | httpx -favicon&#xA;&#xA;    __    __  __       _  __&#xA;   / /_  / /_/ /_____ | |/ /&#xA;  / __ \/ __/ __/ __ \|   /&#xA; / / / / /_/ /_/ /_/ /   |&#xA;/_/ /_/\__/\__/ .___/_/|_|&#xA;             /_/              v1.1.5&#xA;&#xA;      projectdiscovery.io&#xA;&#xA;Use with caution. You are responsible for your actions.&#xA;Developers assume no liability and are not responsible for any misuse or damage.&#xA;https://docs.hackerone.com/favicon.ico [595148549]&#xA;https://hackerone.com/favicon.ico [595148549]&#xA;https://mta-sts.managed.hackerone.com/favicon.ico [-1700323260]&#xA;https://mta-sts.forwarding.hackerone.com/favicon.ico [-1700323260]&#xA;https://support.hackerone.com/favicon.ico [-1279294674]&#xA;https://gslink.hackerone.com/favicon.ico [1506877856]&#xA;https://resources.hackerone.com/favicon.ico [-1840324437]&#xA;https://api.hackerone.com/favicon.ico [566218143]&#xA;https://mta-sts.hackerone.com/favicon.ico [-1700323260]&#xA;https://www.hackerone.com/favicon.ico [778073381]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/salesforce/jarm&#34;&gt;JARM Fingerprint&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;subfinder -d hackerone.com -silent | httpx -jarm&#xA;    __    __  __       _  __&#xA;   / /_  / /_/ /_____ | |/ /&#xA;  / __ \/ __/ __/ __ \|   /&#xA; / / / / /_/ /_/ /_/ /   |&#xA;/_/ /_/\__/\__/ .___/_/|_|&#xA;             /_/              v1.2.1&#xA;&#xA;      projectdiscovery.io&#xA;&#xA;Use with caution. You are responsible for your actions.&#xA;Developers assume no liability and are not responsible for any misuse or damage.&#xA;https://www.hackerone.com [29d3dd00029d29d00042d43d00041d5de67cc9954cc85372523050f20b5007]&#xA;https://mta-sts.hackerone.com [29d29d00029d29d00042d43d00041d2aa5ce6a70de7ba95aef77a77b00a0af]&#xA;https://mta-sts.managed.hackerone.com [29d29d00029d29d00042d43d00041d2aa5ce6a70de7ba95aef77a77b00a0af]&#xA;https://docs.hackerone.com [29d29d00029d29d00042d43d00041d2aa5ce6a70de7ba95aef77a77b00a0af]&#xA;https://support.hackerone.com [29d3dd00029d29d00029d3dd29d29d5a74e95248e58a6162e37847a24849f7]&#xA;https://api.hackerone.com [29d3dd00029d29d00042d43d00041d5de67cc9954cc85372523050f20b5007]&#xA;https://mta-sts.forwarding.hackerone.com [29d29d00029d29d00042d43d00041d2aa5ce6a70de7ba95aef77a77b00a0af]&#xA;https://resources.hackerone.com [2ad2ad0002ad2ad0002ad2ad2ad2ad043bfbd87c13813505a1b60adf4f6ff5]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ASN Fingerprint&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;subfinder -d hackerone.com -silent | httpx -asn&#xA;    __    __  __       _  __&#xA;   / /_  / /_/ /_____ | |/ /&#xA;  / __ \/ __/ __/ __ \|   /&#xA; / / / / /_/ /_/ /_/ /   |&#xA;/_/ /_/\__/\__/ .___/_/|_|&#xA;             /_/              v1.2.1&#xA;&#xA;      projectdiscovery.io&#xA;&#xA;Use with caution. You are responsible for your actions.&#xA;Developers assume no liability and are not responsible for any misuse or damage.&#xA;https://mta-sts.managed.hackerone.com [AS54113, FASTLY, US, 185.199.108.0/24]&#xA;https://gslink.hackerone.com [AS16509, AMAZON-02, US, 13.33.168.0/22]&#xA;https://www.hackerone.com [AS13335, CLOUDFLARENET, US, 104.16.96.0/20]&#xA;https://mta-sts.forwarding.hackerone.com [AS54113, FASTLY, US, 185.199.108.0/24]&#xA;https://resources.hackerone.com [AS16509, AMAZON-02, US, 3.98.0.0/15]&#xA;https://support.hackerone.com [AS13335, CLOUDFLARENET, US, 104.16.48.0/20]&#xA;https://mta-sts.hackerone.com [AS54113, FASTLY, US, 185.199.111.0/24]&#xA;https://docs.hackerone.com [AS54113, FASTLY, US, 185.199.109.0/24]&#xA;https://api.hackerone.com [AS13335, CLOUDFLARENET, US, 104.16.96.0/20]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;File/Path Bruteforce&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;httpx -l urls.txt -path /v1/api -sc&#xA;&#xA;    __    __  __       _  __&#xA;   / /_  / /_/ /_____ | |/ /&#xA;  / __ \/ __/ __/ __ \|   /&#xA; / / / / /_/ /_/ /_/ /   |&#xA;/_/ /_/\__/\__/ .___/_/|_|&#xA;             /_/              v1.1.5&#xA;&#xA;      projectdiscovery.io&#xA;&#xA;Use with caution. You are responsible for your actions.&#xA;Developers assume no liability and are not responsible for any misuse or damage.&#xA;https://mta-sts.managed.hackerone.com/v1/api [404]&#xA;https://mta-sts.hackerone.com/v1/api [404]&#xA;https://mta-sts.forwarding.hackerone.com/v1/api [404]&#xA;https://docs.hackerone.com/v1/api [404]&#xA;https://api.hackerone.com/v1/api [401]&#xA;https://hackerone.com/v1/api [302]&#xA;https://support.hackerone.com/v1/api [404]&#xA;https://resources.hackerone.com/v1/api [301]&#xA;https://gslink.hackerone.com/v1/api [404]&#xA;http://www.hackerone.com/v1/api [301]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cat sub_domains.txt | docker run -i projectdiscovery/httpx&#xA;&#xA;    __    __  __       _  __&#xA;   / /_  / /_/ /_____ | |/ /&#xA;  / __ \/ __/ __/ __ \|   /&#xA; / / / / /_/ /_/ /_/ /   |&#xA;/_/ /_/\__/\__/ .___/_/|_|&#xA;             /_/              v1.1.2&#xA;&#xA;      projectdiscovery.io&#xA;&#xA;Use with caution. You are responsible for your actions&#xA;Developers assume no liability and are not responsible for any misuse or damage.&#xA;https://mta-sts.forwarding.hackerone.com&#xA;https://mta-sts.hackerone.com&#xA;https://mta-sts.managed.hackerone.com&#xA;https://www.hackerone.com&#xA;https://api.hackerone.com&#xA;https://gslink.hackerone.com&#xA;https://resources.hackerone.com&#xA;https://docs.hackerone.com&#xA;https://support.hackerone.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using httpx as a library&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;httpx&lt;/code&gt; can be used as a library by creating an instance of the &lt;code&gt;Option&lt;/code&gt; struct and populating it with the same options that would be specified via CLI. Once validated, the struct should be passed to a runner instance (to close at the end of the program) and the &lt;code&gt;RunEnumeration&lt;/code&gt; method should be called. Here follows a minimal example of how to do it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;log&#34;&#xA;&#x9;&#34;os&#34;&#xA;&#xA;&#x9;&#34;github.com/projectdiscovery/httpx/runner&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;inputFile := &#34;test.txt&#34;&#xA;&#x9;err := os.WriteFile(inputFile, []byte(&#34;scanme.sh&#34;), 0644)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#x9;defer os.RemoveAll(inputFile)&#xA;&#xA;&#x9;options := runner.Options{&#xA;&#x9;&#x9;Methods:   &#34;GET&#34;,&#xA;&#x9;&#x9;InputFile: inputFile,&#xA;&#x9;}&#xA;&#x9;if err := options.ValidateOptions(); err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#xA;&#x9;httpxRunner, err := runner.New(&amp;amp;options)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal()&#xA;&#x9;}&#xA;&#x9;defer httpxRunner.Close()&#xA;&#xA;&#x9;httpxRunner.RunEnumeration()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Notes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As default, &lt;strong&gt;httpx&lt;/strong&gt; checks for &lt;code&gt;HTTPS&lt;/code&gt; probe and fall-back to &lt;code&gt;HTTP&lt;/code&gt; only if &lt;code&gt;HTTPS&lt;/code&gt; is not reachable.&lt;/li&gt; &#xA; &lt;li&gt;For printing both HTTP/HTTPS results, &lt;code&gt;no-fallback&lt;/code&gt; flag can be used.&lt;/li&gt; &#xA; &lt;li&gt;Custom scheme for ports can be defined, for example &lt;code&gt;-ports http:443,http:80,https:8443&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;favicon&lt;/code&gt;,&lt;code&gt;vhost&lt;/code&gt;, &lt;code&gt;http2&lt;/code&gt;, &lt;code&gt;pipeline&lt;/code&gt;, &lt;code&gt;ports&lt;/code&gt;, &lt;code&gt;csp-probe&lt;/code&gt;, &lt;code&gt;tls-probe&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; are unique flag with different probes.&lt;/li&gt; &#xA; &lt;li&gt;Unique flags should be used for specific use cases instead of running them as default with other probes.&lt;/li&gt; &#xA; &lt;li&gt;When using &lt;code&gt;json&lt;/code&gt; flag, all the information (default probes) included in the JSON output.&lt;/li&gt; &#xA; &lt;li&gt;Custom resolver supports multiple protocol (&lt;strong&gt;doh|tcp|udp&lt;/strong&gt;) in form of &lt;code&gt;protocol:resolver:port&lt;/code&gt; (eg &lt;strong&gt;udp:127.0.0.1:53&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Invalid custom resolvers/files are ignored.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Acknowledgement&lt;/h1&gt; &#xA;&lt;p&gt;httpx is made with 🖤 by the &lt;a href=&#34;https://projectdiscovery.io&#34;&gt;projectdiscovery&lt;/a&gt; team. Community contributions have made the project what it is. See the &lt;strong&gt;&lt;a href=&#34;https://github.com/projectdiscovery/httpx/raw/master/THANKS.md&#34;&gt;Thanks.md&lt;/a&gt;&lt;/strong&gt; file for more details. Do also check out these similar awesome projects that may fit in your workflow:&lt;/p&gt; &#xA;&lt;p&gt;Probing feature is inspired by &lt;a href=&#34;https://github.com/tomnomnom/httprobe&#34;&gt;@tomnomnom/httprobe&lt;/a&gt; work &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>labring/sealos</title>
    <updated>2022-07-23T01:41:31Z</updated>
    <id>tag:github.com,2022-07-23:/labring/sealos</id>
    <link href="https://github.com/labring/sealos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;sealos is a multi-tenant kubernetes distribution. You can use sealos to easily build a public or a private cloud. It is simple, flexible and powerful!&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://trackgit.com&#34;&gt; &lt;img src=&#34;https://us-central1-trackgit-analytics.cloudfunctions.net/token/ping/kexrkhvqjlzkdiap4zke&#34; alt=&#34;trackgit-views&#34;&gt; &lt;/a&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;b&gt;Popularize cloud native technologies with ease&lt;/b&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/labring/sealos&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/labring/sealos&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Dev%20Container&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Dev Container&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/labring/sealos/actions&#34;&gt;&lt;img src=&#34;https://github.com/labring/sealos/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Flabring%2Fsealos?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Flabring%2Fsealos.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/labring/sealos&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/labring/sealos/branch/main/graph/badge.svg?token=e41ZDcj06N&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sealyun.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?url=https%3A%2F%2Fpostwoman.io&amp;amp;logo=Postwoman&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.oscs1024.com/project/labring/sealos?ref=badge_small&#34;&gt;&lt;img src=&#34;https://www.oscs1024.com/platform/badge/labring/sealos.svg?size=small&#34; alt=&#34;OSCS Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/cloudnativer&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-Telegram-blueviolet?logo=Telegram&#34; alt=&#34;Chat on Telegram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sealos.io&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://www.sealos.io/zh-Hans/&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is sealos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;sealos is a cloud operating system distribution with Kubernetes as its kernel.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the early stages, operatings systems have adopted a layered architecture, which later evolved into kernel architecture like Linux and Windows. With the emergence of container technologies, cloud OS will migrate to a &#34;cloud kernel&#34; architecture with strong cohesion in the future.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8912557/173866494-379ba0dd-05af-4095-b63d-08f594581c52.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From now on, think of all your machines as an abstract supercomputer whose operating system is sealos, where Kubernetes serves as the OS kernel.&lt;/li&gt; &#xA; &lt;li&gt;Instead of IaaS, PaaS and SaaS, there will only be cloud OS drivers(CSI, CNI and CRI implementations), cloud OS kernel(Kubernetes) and distributed applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Core Capabilities&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cluster image &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; The entire cluster will be able to build, ship and run.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Semantics of docker will be extended to clusters so that any distributed applications can be defined and run smoothly.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;hub.sealos &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A cluster image repository where you can retrieve pre-built distributed applications such as basic Kubernetes cluster image, high availability pgsql cluster image, high availability minio cluster image, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;desktop.sealos &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; A desktop for cloud OS, not to be confused with traditional cloud desktop. It is similar to macOS, but manages cluster and distributed applications instead of personal computers.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Distributed application matrix &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Anything you need including storage / network / HA database / message queue / monitoring can be retrieved with a click of the mouse, or simply &lt;code&gt;sealos run&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sealos now support 20+ HA applications.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Core features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Manage clusters lifecycle &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Quickly install HA Kubernetes clusters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add / remove nodes&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Clean the cluster, backup and auto recovering, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Download and use OCI-compatible distributed applications &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenEBS, MinIO, Ingress, PostgreSQL, MySQL, Redis, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Customize you own distributed applications &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Using Dockerfile to build distributed applications images, saving all dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Push distributed applications images to Docker Hub.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Combine multiple applications to build your own cloud platform.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Installing an HA kubernetes cluster with calico as CNI&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here &lt;code&gt;kubernetes:v1.24.0&lt;/code&gt; and &lt;code&gt;calico:v3.22.1&lt;/code&gt; are the cluster images in the registry which are fully compatible with OCI standard. Wonder if we can use flannel instead? Of course!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Download and install sealos. sealos is a golang binary so you can just download and copy to bin. You may also download it from release page.&#xA;$ wget -c https://sealyun-home.oss-cn-beijing.aliyuncs.com/sealos-4.0/latest/sealos-amd64 -O sealos &amp;amp;&amp;amp; \&#xA;    chmod +x sealos &amp;amp;&amp;amp; mv sealos /usr/bin&#xA;# Create a cluster&#xA;$ sealos run labring/kubernetes:v1.24.0 labring/calico:v3.22.1 \&#xA;     --masters 192.168.64.2,192.168.64.22,192.168.64.20 \&#xA;     --nodes 192.168.64.21,192.168.64.19 -p [your-ssh-passwd]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Building a custom cluster image&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.sealos.io/docs/examples/build-example-cloudimage&#34;&gt;Building an Example CloudImage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Storage, message queue, database, etc.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Don&#39;t be shocked by the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sealos run labring/helm:v3.8.2 # install helm&#xA;sealos run labring/openebs:v1.9.0 # install openebs&#xA;sealos run labring/minio-operator:v4.4.16 labring/ingress-nginx:4.1.0 \&#xA;   labring/mysql-operator:8.0.23-14.1 labring/redis-operator:3.1.4 # oneliner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And now everything is ready.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/labring/sealos/main/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/labring/sealos/main/DEVELOPGUIDE.md&#34;&gt;Development Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/labring/sealos/tree/release-v3.3.9#readme&#34;&gt;sealos 3.0(older version)&lt;/a&gt; For older version users. Note that sealos 4.0 includes significant improvements, so please upgrade ASAP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/buildah&#34;&gt;buildah&lt;/a&gt; Capabilities of buildah is widely used in sealos 4.0 to make cluster images compatible with container images and docker registry.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sealerio/sealer&#34;&gt;sealer&lt;/a&gt; Capabilities of sealer is widely used in sealos 4.0 to make Clusterfile compatible with sealer, some module forked sealer source code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Join us: &lt;a href=&#34;https://t.me/cloudnativer&#34;&gt;Telegram&lt;/a&gt;, QQ Group(98488045), Wechat：fangnux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Flabring%2Fsealos?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Flabring%2Fsealos.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>navidrome/navidrome</title>
    <updated>2022-07-23T01:41:31Z</updated>
    <id>tag:github.com,2022-07-23:/navidrome/navidrome</id>
    <link href="https://github.com/navidrome/navidrome" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎧☁️ Modern Music Server and Streamer compatible with Subsonic/Airsonic&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.navidrome.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/resources/logo-192x192.png&#34; alt=&#34;Navidrome logo&#34; title=&#34;navidrome&#34; align=&#34;right&#34; height=&#34;60px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Navidrome Music Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/navidrome/navidrome/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/navidrome/navidrome?logo=github&amp;amp;label=latest&amp;amp;style=flat-square&#34; alt=&#34;Last Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nightly.link/navidrome/navidrome/workflows/pipeline/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/navidrome/navidrome/Build?logo=github&amp;amp;style=flat-square&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/navidrome/navidrome/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/navidrome/navidrome/total?logo=github&amp;amp;style=flat-square&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/deluan/navidrome&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/deluan/navidrome?logo=docker&amp;amp;label=pulls&amp;amp;style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/xh7j7yF&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/671335427726114836?logo=discord&amp;amp;label=discord&amp;amp;style=flat-square&#34; alt=&#34;Dev Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/navidrome/&#34;&gt;&lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/navidrome?logo=reddit&amp;amp;label=/r/navidrome&amp;amp;style=flat-square&#34; alt=&#34;Subreddit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0-ff69b4.svg?style=flat-square&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.navidrome.org/demo/&#34;&gt;Check out our Live Demo!&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Navidrome is an open source web-based music collection server and streamer. It gives you freedom to listen to your music collection from any browser or mobile device. It&#39;s like your personal Spotify!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Any feedback is welcome!&lt;/strong&gt; If you need/want a new feature, find a bug or think of any way to improve Navidrome, please file a &lt;a href=&#34;https://github.com/navidrome/navidrome/issues&#34;&gt;GitHub issue&lt;/a&gt; or join the discussion in our &lt;a href=&#34;https://www.reddit.com/r/navidrome/&#34;&gt;Subreddit&lt;/a&gt;. If you want to contribute to the project in any other way (&lt;a href=&#34;https://www.navidrome.org/docs/developers/&#34;&gt;ui/backend dev&lt;/a&gt;, &lt;a href=&#34;https://www.navidrome.org/docs/developers/translations/&#34;&gt;translations&lt;/a&gt;, &lt;a href=&#34;https://www.navidrome.org/docs/developers/creating-themes&#34;&gt;themes&lt;/a&gt;), please join the chat in our &lt;a href=&#34;https://discord.gg/xh7j7yF&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See instructions in the &lt;a href=&#34;https://www.navidrome.org/docs/installation/&#34;&gt;project&#39;s website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you plan to host Navidrome in the cloud, a great option is to get a virtual server at &lt;a href=&#34;https://my.frantech.ca/aff.php?aff=4605&#34;&gt;BuyVM&lt;/a&gt;. They have plans that start at $2/month! If you decide to sign up, please consider using our &lt;a href=&#34;https://my.frantech.ca/aff.php?aff=4605&#34;&gt;affliliate link&lt;/a&gt;, to help support the project &amp;lt;3&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handles very &lt;strong&gt;large music collections&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Streams virtually &lt;strong&gt;any audio format&lt;/strong&gt; available&lt;/li&gt; &#xA; &lt;li&gt;Reads and uses all your beautifully curated &lt;strong&gt;metadata&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Great support for &lt;strong&gt;compilations&lt;/strong&gt; (Various Artists albums) and &lt;strong&gt;box sets&lt;/strong&gt; (multi-disc albums)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt;, each user has their own play counts, playlists, favourites, etc...&lt;/li&gt; &#xA; &lt;li&gt;Very &lt;strong&gt;low resource usage&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-platform&lt;/strong&gt;, runs on macOS, Linux and Windows. &lt;strong&gt;Docker&lt;/strong&gt; images are also provided&lt;/li&gt; &#xA; &lt;li&gt;Ready to use binaries for all major platforms, including &lt;strong&gt;Raspberry Pi&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatically &lt;strong&gt;monitors your library&lt;/strong&gt; for changes, importing new files and reloading new metadata&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Themeable&lt;/strong&gt;, modern and responsive &lt;strong&gt;Web interface&lt;/strong&gt; based on &lt;a href=&#34;https://material-ui.com&#34;&gt;Material UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compatible&lt;/strong&gt; with all Subsonic/Madsonic/Airsonic &lt;a href=&#34;https://www.navidrome.org/docs/overview/#apps&#34;&gt;clients&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Transcoding&lt;/strong&gt; on the fly. Can be set per user/player. &lt;strong&gt;Opus encoding is supported&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Translated to &lt;strong&gt;various languages&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All documentation can be found in the project&#39;s website: &lt;a href=&#34;https://www.navidrome.org/docs&#34;&gt;https://www.navidrome.org/docs&lt;/a&gt;. Here are some useful direct links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/overview/&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/installation/&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/installation/docker/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/installation/pre-built-binaries/&#34;&gt;Binaries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/installation/build-from-source/&#34;&gt;Build from source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/developers/&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.navidrome.org/docs/developers/subsonic-api/&#34;&gt;Subsonic API Compatibility&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img height=&#34;550&#34; src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-login.png&#34;&gt; &lt;img height=&#34;550&#34; src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-player.png&#34;&gt; &lt;img height=&#34;550&#34; src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-album-view.png&#34;&gt; &lt;img width=&#34;550&#34; src=&#34;https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-desktop-player.png&#34;&gt; &lt;/p&gt;</summary>
  </entry>
</feed>