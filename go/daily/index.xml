<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:32:35Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gorcon/rcon-cli</title>
    <updated>2024-01-28T01:32:35Z</updated>
    <id>tag:github.com,2024-01-28:/gorcon/rcon-cli</id>
    <link href="https://github.com/gorcon/rcon-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RCON client for executing queries on game server.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rcon-cli&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/awesome-selfhosted/awesome-selfhosted&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome-Selfhosted&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gorcon/rcon-cli/actions&#34;&gt;&lt;img src=&#34;https://github.com/gorcon/rcon-cli/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;GitHub Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githack.com/wiki/gorcon/rcon-cli/coverage.html&#34;&gt;&lt;img src=&#34;https://github.com/gorcon/rcon-cli/wiki/coverage.svg?sanitize=true&#34; alt=&#34;Go Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/gorcon/rcon-cli&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/gorcon/rcon-cli&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gorcon/rcon-cli/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/gorcon/rcon-cli/total&#34; alt=&#34;GitHub All Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/outdead/rcon&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/outdead/rcon.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CLI for executing queries on a remote &lt;a href=&#34;https://developer.valvesoftware.com/wiki/Source_Dedicated_Server&#34;&gt;Source dedicated game server&lt;/a&gt;, using the &lt;a href=&#34;https://developer.valvesoftware.com/wiki/Source_RCON_Protocol&#34;&gt;RCON&lt;/a&gt; protocol.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Games&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/251570&#34;&gt;7 Days to Die&lt;/a&gt; (add &lt;code&gt;-t telnet&lt;/code&gt; to rcon-cli args)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/346110&#34;&gt;ARK: Survival Evolved&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/445220/Avorion/&#34;&gt;Avorion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/440900&#34;&gt;Conan Exiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/730&#34;&gt;Counter-Strike: Global Offensive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://factorio.com/&#34;&gt;Factorio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.minecraft.net&#34;&gt;Minecraft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/108600&#34;&gt;Project Zomboid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/252490&#34;&gt;Rust&lt;/a&gt; (add &lt;code&gt;+rcon.web 0&lt;/code&gt; to the args when starting the server or add &lt;code&gt;-t web&lt;/code&gt; to &lt;code&gt;rcon-cli&lt;/code&gt; args)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/440/Team_Fortress_2/&#34;&gt;Team Fortress 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/1604030/V_Rising/&#34;&gt;V Rising&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/1623730/Palworld/&#34;&gt;Palworld&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Open pull request if you have successfully used a package with another game with rcon support and add it to the list.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download the binary for your platform from the &lt;a href=&#34;https://github.com/gorcon/rcon-cli/releases/latest&#34;&gt;latest releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/gorcon/rcon-cli/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt; for release details&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull outdead/rcon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;USAGE:&#xA;   rcon [options] [commands...]&#xA;&#xA;GLOBAL OPTIONS:&#xA;   --address value, -a value   Set host and port to remote server. Example 127.0.0.1:16260&#xA;   --password value, -p value  Set password to remote server&#xA;   --type value, -t value      Specify type of connection (default: rcon)&#xA;   --log value, -l value       Path to the log file. If not specified it is taken from the config&#xA;   --config value, -c value    Path to the configuration file (default: rcon.yaml)&#xA;   --env value, -e value       Config environment with server credentials (default: default)&#xA;   --skip, -s                  Skip errors and run next command (default: false)&#xA;   --timeout value, -T value   Set dial and execute timeout (default: 10s)&#xA;   --help, -h                  show help (default: false)&#xA;   --version, -v               print the version (default: false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rcon CLI can be run in two modes - in the mode of a single query and in the mode of reading the input stream&lt;/p&gt; &#xA;&lt;h3&gt;Single mode&lt;/h3&gt; &#xA;&lt;p&gt;Server address, password and command to server must be specified in flags at startup. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./rcon -a 127.0.0.1:16260 -p mypassword command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is possible to send several commands in one request. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./rcon -a 127.0.0.1:16260 -p mypassword command &#34;command with several words&#34; &#39;command &#34;with double quotes&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If commands passed, they sent in a single mode. The response displayed, and the CLI will exit.&lt;/p&gt; &#xA;&lt;h3&gt;Interactive input stream mode&lt;/h3&gt; &#xA;&lt;p&gt;To run CLI in interactive mode run &lt;code&gt;rcon&lt;/code&gt; without commands. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./rcon -a 127.0.0.1:16260 -p mypassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;^C&lt;/code&gt; to terminate or type command &lt;code&gt;:q&lt;/code&gt; to exit.&lt;/p&gt; &#xA;&lt;h3&gt;In Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm outdead/rcon ./rcon [options] [commands...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add your config file as volume:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;      -v /path/to/rcon-local.yaml:/rcon.yaml \&#xA;      outdead/rcon ./rcon -c rcon.yaml -e default players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration file&lt;/h2&gt; &#xA;&lt;p&gt;For more convenient use, the ability to create the &lt;code&gt;rcon.yaml&lt;/code&gt; configuration file provided. You can save the host and port of the remote server and its password. If the configuration file exists, and the default block filled in it, then at startup the &lt;code&gt;-a&lt;/code&gt; and &lt;code&gt;-p&lt;/code&gt; flags can be omitted. Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./rcon -a 127.0.0.1:16260 players&#xA;./rcon status&#xA;./rcon -p mypassword&#xA;./rcon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default configuration file name is &lt;code&gt;rcon.yaml&lt;/code&gt;. File must be saved in yaml format. It is also possible to set the environment name and connection parameters for each server. You can enable logging requests and responses. To do this, you need to define the log variable in the environment blocks. You can do this for each server separately and create different log files for them. If the path to the log file not specified, then logging will not be conducted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;default:&#xA;  address: &#34;127.0.0.1:16260&#34;&#xA;  password: &#34;password&#34;&#xA;  log: &#34;rcon-default.log&#34;&#xA;zomboid:&#xA;  address: &#34;127.0.0.1:16260&#34;&#xA;  password: &#34;password&#34;&#xA;  log: &#34;rcon-zomboid.log&#34;&#xA;rust:&#xA;  address: &#34;127.0.0.1:28003&#34;&#xA;  password: &#34;password&#34;&#xA;7dtd:&#xA;  address: &#34;172.19.0.2:8081&#34;&#xA;  password: &#34;password&#34;&#xA;  type: &#34;telnet&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Args&lt;/h2&gt; &#xA;&lt;p&gt;You can choose the environment at the start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./rcon -e rust status&#xA;./rcon -e zomboid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set custom config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./rcon -c /path/to/config/file.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;-l&lt;/code&gt; argument to specify path to log file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./rcon -l /path/to/file.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;-t&lt;/code&gt; argument to specify the protocol type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 7 Days to Die&#xA;./rcon -a 172.19.0.2:8081 -p password -t telnet version&#xA;&#xA;# Rust&#xA;./rcon -a 127.0.0.1:28016 -p password -t web status&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;-T&lt;/code&gt; argument to specify dial and execute timeout:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./rcon -a 172.19.0.2:8081 -p password -t telnet -T 10s version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you think that you have found a bug, create an issue and indicate your operating system, platform, and the game on which the error reproduced. Also describe what you were doing so that the error could be reproduced.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License, see &lt;a href=&#34;https://raw.githubusercontent.com/gorcon/rcon-cli/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eosphoros-ai/liteio</title>
    <updated>2024-01-28T01:32:35Z</updated>
    <id>tag:github.com,2024-01-28:/eosphoros-ai/liteio</id>
    <link href="https://github.com/eosphoros-ai/liteio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LiteIO is a cloud-native block device service that uses multiple storage engines, including SPDK and LVM, to achieve high performance. It is specifically designed for Kubernetes in a hyper-converged architecture, allowing for block device provisioning across the entire cluster.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LiteIO&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;LiteIO&lt;/strong&gt; is a cloud-native block device service that uses multiple storage engines, including SPDK and LVM, to achieve high performance. It is specifically designed for Kubernetes in a hyper-converged architecture, allowing for block device provisioning across the entire cluster.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;High Performence&lt;/strong&gt;: LiteIO&#39;s data engine is built on SPDK and uses NVMe-over-Fabric protocol to directly connect computing nodes to storage nodes. With efficient protocol and backend I/O polling, LiteIO provides high performance close to that of local disk.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud-native&lt;/strong&gt;: LiteIO integrates with Kubernetes through CSI controller and driver, providing a cloud-native user interface. Users can dynamically allocate or destroy LiteIO volumes using PVC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy Setup&lt;/strong&gt;: With only a few dependencies, such as Hugepages, LiteIO can be quickly set up with a single command line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hyper-converged Architecture&lt;/strong&gt;: LiteIO follows a hyper-converged architecture, where a single node can function as both a frontend and backend simultaneously. There is no minimum number of nodes required to initialize a new cluster.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Many distributed data-intensive applications, like databases, often opt for local NVMe disks for high performance and cost-effectiveness compared to distributed disk services like EBS. However, this preference can lead to an imbalance in resource utilization. For instance, a node may experience CPU or memory shortages while still having ample storage resources available. To address this issue, our aim is to develop a system that can effectively leverage these fragmented storage resources while maintaining high performance, which is close to local disks.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;LiteIO consists of six main components:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disk-Agent&lt;/strong&gt;: The Disk-Agent is installed on each backend node and manages the StoragePool on that node. It interacts with the data engine to create and delete volumes and snapshots. Additionally, the Disk-Agent reports the status of the StoragePool to the central control and collects volume metrics, which can be exposed as a Prometheus exporter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disk-Controller&lt;/strong&gt;: The Disk-Controller is aware of all the StoragePools and Volumes in the cluster. Its primary responsibility is to schedule a requested volume to a suitable StoragePool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;nvmf_tgt&lt;/strong&gt;: nvmf_tgt is the data engine based on SPDK, which provides storage abstraction and capabilities such as LVS (Logical Volume Store), LVOL (Logical Volume), aio_bdev, NoF over TCP transport, and NoF subsystems. While nvmf_tgt is optional, it is required if applications need storage beyond local disk. LiteIO also supports Linux LVM as a data engine, which is sufficient for local storage scenarios.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;nvme-tcp&lt;/strong&gt;: nvme-tcp is a kernel module that provides TCP transport for NVMe over fabrics. It must be installed on computing nodes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CSI-Driver&lt;/strong&gt;: LiteIO&#39;s CSI-Driver implements K8S CSI and is deployed as a DaemonSet pod on computing nodes. It utilizes nvme-cli tools to connect to backend storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CSI-Controller&lt;/strong&gt;: The CSI-Controller is a central service that handles the creation and deletion of PVs.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Overall, LiteIO&#39;s architecture provides a scalable and efficient approach to cloud-native block storage. By utilizing multiple components and interfaces, LiteIO offers a flexible and configurable solution for various storage scenarios.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eosphoros-ai/liteio/main/doc/image/architecture.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The Quick Start Guide helps you to setup a local K8S cluster and deploy LiteIO in it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eosphoros-ai/liteio/main/doc/en/quick-start.md&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eosphoros-ai/liteio/main/doc/en/kubeadm-install.md&#34;&gt;Setup K8S by kubeadm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance Benchmark&lt;/h2&gt; &#xA;&lt;h3&gt;LiteIO vs Native Disk&lt;/h3&gt; &#xA;&lt;p&gt;The Performance Results of FIO with 1 Disk of Native Disks, LiteIO NoF, and OpenEBS Mayastor: (a) IOPS (b) Bandwidth.&lt;/p&gt; &#xA;&lt;p&gt;Unit: IOPS(K)&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Native-Disk&lt;/th&gt; &#xA;   &lt;th&gt;LiteIO&lt;/th&gt; &#xA;   &lt;th&gt;Mayastor&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4k-rand w-dq16 4jobs&lt;/td&gt; &#xA;   &lt;td&gt;356.2&lt;/td&gt; &#xA;   &lt;td&gt;317.0&lt;/td&gt; &#xA;   &lt;td&gt;218.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4k-rand w-dq1 1jobs&lt;/td&gt; &#xA;   &lt;td&gt;62&lt;/td&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4k-rand r-dq128 8jobs&lt;/td&gt; &#xA;   &lt;td&gt;617.0&lt;/td&gt; &#xA;   &lt;td&gt;614.6&lt;/td&gt; &#xA;   &lt;td&gt;243.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4k-rand r-dq1 1jobs&lt;/td&gt; &#xA;   &lt;td&gt;11.7&lt;/td&gt; &#xA;   &lt;td&gt;8.5&lt;/td&gt; &#xA;   &lt;td&gt;7.6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;128k-seq r-dq128 4jobs&lt;/td&gt; &#xA;   &lt;td&gt;24.9&lt;/td&gt; &#xA;   &lt;td&gt;24.8&lt;/td&gt; &#xA;   &lt;td&gt;19.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;128k-seq w-dq128 4jobs&lt;/td&gt; &#xA;   &lt;td&gt;15.6&lt;/td&gt; &#xA;   &lt;td&gt;15.5&lt;/td&gt; &#xA;   &lt;td&gt;15.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Unit: Bandwidth(MB/s)&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Native-Disk&lt;/th&gt; &#xA;   &lt;th&gt;LiteIO&lt;/th&gt; &#xA;   &lt;th&gt;Mayastor&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4k-rand w-dq16 4jobs&lt;/td&gt; &#xA;   &lt;td&gt;1459.6&lt;/td&gt; &#xA;   &lt;td&gt;1299.2&lt;/td&gt; &#xA;   &lt;td&gt;896.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4k-rand w-dq1 1jobs&lt;/td&gt; &#xA;   &lt;td&gt;255.6&lt;/td&gt; &#xA;   &lt;td&gt;76.1&lt;/td&gt; &#xA;   &lt;td&gt;63.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4k-rand r-dq128 8jobs&lt;/td&gt; &#xA;   &lt;td&gt;2528.0&lt;/td&gt; &#xA;   &lt;td&gt;2516.4&lt;/td&gt; &#xA;   &lt;td&gt;998.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4k-rand r-dq1 1jobs&lt;/td&gt; &#xA;   &lt;td&gt;47.8&lt;/td&gt; &#xA;   &lt;td&gt;34.6&lt;/td&gt; &#xA;   &lt;td&gt;31.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;128k-seq r-dq128 4jobs&lt;/td&gt; &#xA;   &lt;td&gt;3263.0&lt;/td&gt; &#xA;   &lt;td&gt;3271.0&lt;/td&gt; &#xA;   &lt;td&gt;2585.6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;128k-seq w-dq128 4jobs&lt;/td&gt; &#xA;   &lt;td&gt;2037.6&lt;/td&gt; &#xA;   &lt;td&gt;2030.0&lt;/td&gt; &#xA;   &lt;td&gt;2021.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;LiteIO vs ESSD-PL3&lt;/h3&gt; &#xA;&lt;p&gt;4K Mixed Random Read/Write (70%/30%) IOPS with 1 Job&lt;/p&gt; &#xA;&lt;p&gt;Unit: IOPS(K)&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Queue Depth&lt;/th&gt; &#xA;   &lt;th&gt;ESSD-PL3&lt;/th&gt; &#xA;   &lt;th&gt;LiteIO&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;5.0&lt;/td&gt; &#xA;   &lt;td&gt;6.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;20.9&lt;/td&gt; &#xA;   &lt;td&gt;23.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;83.3&lt;/td&gt; &#xA;   &lt;td&gt;84.9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;128&lt;/td&gt; &#xA;   &lt;td&gt;206.1&lt;/td&gt; &#xA;   &lt;td&gt;333.9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;256&lt;/td&gt; &#xA;   &lt;td&gt;206.4&lt;/td&gt; &#xA;   &lt;td&gt;426.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Target Scenario&lt;/h2&gt; &#xA;&lt;p&gt;LiteIO is not a conventional distributed storage system for general purposes. It is best suited for users who require high IO performance similar to that of local disk. For example, distributed databases and AI training jobs benefit from LiteIO&#39;s ability to provide both local and remote volumes.&lt;/p&gt; &#xA;&lt;p&gt;LiteIO is specifically designed for Kubernetes and allows users to utilize all storage on all nodes. This makes it ideal for users who need to run apps in a K8S environment.&lt;/p&gt; &#xA;&lt;p&gt;However, it is important to note that LiteIO does not currently support data replication. If your application requires data replication, please note that it is on our roadmap for future development. In the meantime, it is recommended that your application has data replicas and can guarantee data security by itself, or that you are tolerant of data loss.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Topics&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eosphoros-ai/liteio/main/doc/en/build.md&#34;&gt;Build Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eosphoros-ai/liteio/main/doc/en/plugins.md&#34;&gt;How to Customize Plugins&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Disk-Agent exposes metric service&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; SPDK volume replica&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Wechat Group QRCode&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eosphoros-ai/liteio/main/doc/image/wechat_group.JPG&#34; alt=&#34;Wechat Group&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>