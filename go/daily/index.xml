<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-03T01:29:08Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jovandeginste/workout-tracker</title>
    <updated>2024-03-03T01:29:08Z</updated>
    <id>tag:github.com,2024-03-03:/jovandeginste/workout-tracker</id>
    <link href="https://github.com/jovandeginste/workout-tracker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A workout tracking web application for personal use (or family, friends), geared towards running and other GPX-based activities&lt;/p&gt;&lt;hr&gt;&lt;p&gt;A workout tracking web application for personal use (or family, friends), geared towards running and other GPX-based activities&lt;/p&gt; &#xA;&lt;p&gt;Self-hosted, everything included.&lt;/p&gt; &#xA;&lt;p&gt;Heavily inspired by &lt;a href=&#34;https://github.com/SamR1/FitTrackee&#34;&gt;FitTrackee&lt;/a&gt; &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Run the latest master image from GitHub Container Registry:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 8080:8080 ghcr.io/jovandeginste/workout-tracker:master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open your browser at &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To persist data and sessions, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 8080:8080 \&#xA;    -e WT_JWT_ENCRYPTION_KEY=my-secret-key \&#xA;    -v $PWD/data:/data \&#xA;    ghcr.io/jovandeginste/workout-tracker:master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use docker compose&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create directory that stores your data&#xA;mkdir -p /opt/workout-tracker&#xA;cd /opt/workout-tracker&#xA;&#xA;# Download the compose.yaml&#xA;curl https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/compose.yaml --output compose.yaml&#xA;&#xA;# Start the server&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Natively&lt;/h3&gt; &#xA;&lt;p&gt;Download a pre-built binary or build it yourself (see &lt;a href=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/#development&#34;&gt;Development&lt;/a&gt; below).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/jovandeginste/workout-tracker/releases/download/v0.3.0/workout-tracker-v0.3.0-linux-amd64.tar.gz&#xA;tar xf workout-tracker-v0.3.0-linux-amd64.tar.gz&#xA;./workout-tracker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To persist sessions, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export WT_JWT_ENCRYPTION_KEY=my-secret-key&#xA;./workout-tracker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a new database file in the current directory and start the web server at &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/dashboard.jpg&#34; alt=&#34;&#34;&gt; Dashboard view with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;personal totals&lt;/li&gt; &#xA; &lt;li&gt;running records&lt;/li&gt; &#xA; &lt;li&gt;a calendar view&lt;/li&gt; &#xA; &lt;li&gt;recent activities (by you and other users)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Overview of workouts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/workout_overview.jpg&#34; alt=&#34;&#34;&gt; Overview of all your activities, with summaries. The columns are sortable.&lt;/p&gt; &#xA;&lt;h3&gt;Details of a single workout&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/single_workout.jpg&#34; alt=&#34;&#34;&gt; Details of a workout, with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a zoomable, dragable map of the GPX track with more details per point&lt;/li&gt; &#xA; &lt;li&gt;many summarized statistics&lt;/li&gt; &#xA; &lt;li&gt;a breakdown per kilometer&lt;/li&gt; &#xA; &lt;li&gt;track color based on elevation of the segment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tooltips for even more information&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/track.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;green and red circle are start and end points of the track&lt;/li&gt; &#xA; &lt;li&gt;every point on the track has a tooltip with a summary at that moment&lt;/li&gt; &#xA; &lt;li&gt;hover over the breakdown per kilometer to highlight the point&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Upload your files&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/upload_workouts.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upload one or multiple GPX files.&lt;/li&gt; &#xA; &lt;li&gt;Pick the type (running, cycling, ...) or let the application guess based on average speed&lt;/li&gt; &#xA; &lt;li&gt;The files are parsed when uploaded: statistics and other information are calculated and stored in the database (serialized).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Statistics to follow your progress&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/statistics.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Graphs showing monthly aggregated statistics.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Basic multi-language support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/i18n.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Switch between (supported) languages&lt;/li&gt; &#xA; &lt;li&gt;Use the language configured in the browser (default)&lt;/li&gt; &#xA; &lt;li&gt;Very limited amount of languages supported for now &lt;span&gt;üòÑ&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;Re-calculate all previously uploaded workouts (useful while developing)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Responsive design&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/responsive.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usable on small and medium screens&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Light and dark mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/docs/single_workout-theme.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Browser decides whether to use light or dark mode, based on your preferences&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The web server looks for a file &lt;code&gt;workout-tracker.yaml&lt;/code&gt; (or &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;toml&lt;/code&gt;) in the current directory, or takes it&#39;s configuration from environment variables. The most important variable is the JWT encryption key. If you don&#39;t provide it, the key is randomly generated every time the server starts, invalidating all current sessions.&lt;/p&gt; &#xA;&lt;p&gt;Generate a secure key and write it to &lt;code&gt;workout-tracker.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;jwt_encryption_key: $(pwgen -c 32)&#34; &amp;gt; workout-tracker.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or export it as an environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export WT_JWT_ENCRYPTION_KEY=&#34;$(pwgen -c 32)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;workout-tracker.example.yaml&lt;/code&gt; for more options and details.&lt;/p&gt; &#xA;&lt;p&gt;Other environment variables, with their default values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;WT_BIND=&#34;[::]:8080&#34;&#xA;WT_LOGGING=&#34;true&#34;&#xA;WT_DEBUG=&#34;false&#34;&#xA;WT_DATABASE_DRIVER=&#34;sqlite&#34;&#xA;WT_DSN=&#34;./database.db&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After starting the server, you can access it at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; (the default port). A login form is shown.&lt;/p&gt; &#xA;&lt;p&gt;If no users are in the database (eg. when starting with an empty database), a default &lt;code&gt;admin&lt;/code&gt; user is created with password &lt;code&gt;admin&lt;/code&gt;. You should change this password in a production environment.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Build and run it yourself&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install go&lt;/li&gt; &#xA; &lt;li&gt;clone the repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build ./&#xA;./workout-tracker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This does not require npm or Tailwind, since the compiled css is included in the repository.&lt;/p&gt; &#xA;&lt;h3&gt;Do some development&lt;/h3&gt; &#xA;&lt;p&gt;You need to install Golang and npm.&lt;/p&gt; &#xA;&lt;p&gt;Because I keep forgetting how to build every component, I created a Makefile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Make everything. This is also the default target.&#xA;make all # Run tests and build all components&#xA;&#xA;# Install system dependencies&#xA;make install-deps&#xA;&#xA;# Testing&#xA;make test # Runs all the tests&#xA;make test-assets test-go # Run tests for the individual components&#xA;&#xA;# Building&#xA;make build # Builds all components&#xA;make build-tw # Builds the Tailwind CSS output file&#xA;make build-server # Builds the web server&#xA;make build-docker # Performs all builds inside Docker containers, creates a Docker image&#xA;&#xA;# Running it&#xA;make serve # Runs the compiled binary&#xA;make dev # Runs a wrapper that watches for changes, then rebuilds and restarts&#xA;make watch-tw # Runs the Tailwind CSS watcher (not useful unless you&#39;re debugging Tailwind CSS)&#xA;&#xA;# Cleanin&#39; up&#xA;make clean # Removes build artifacts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What is this, technically?&lt;/h2&gt; &#xA;&lt;p&gt;A single binary that runs on any platform, with no dependencies.&lt;/p&gt; &#xA;&lt;p&gt;The binary contains all assets to serve a web interface, through which you can upload your GPX files, visualize your tracks and see their statistics and graphs. The web application is multi-user, with a simple registration and authentication form, session cookies and JWT tokens). New accounts are inactive by default. An admin user can activate (or edit, delete) accounts. The default database storage is a single SQLite file.&lt;/p&gt; &#xA;&lt;h2&gt;What technologies are used&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go, with some notable libraries &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jovandeginste/workout-tracker/master/github.com/tkrajina/gpxgo&#34;&gt;gpxgo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://echo.labstack.com/&#34;&gt;Echo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://gorm.io&#34;&gt;Gorm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/vorlif/spreak&#34;&gt;Spreak&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;HTML, CSS and JS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://fontawesome.com/&#34;&gt;Font Awesome&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://fullcalendar.io/&#34;&gt;FullCalendar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://leafletjs.com/&#34;&gt;Leaflet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kryogenix.org/code/browser/sorttable/&#34;&gt;sorttable&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://cdn.jsdelivr.net/npm/chart.js&#34;&gt;Chart.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The application uses OpenStreetMap as its map provider and for geocoding a GPS coordinate to a location.&lt;/p&gt; &#xA;&lt;h2&gt;Compatiblity&lt;/h2&gt; &#xA;&lt;p&gt;This is a work in progress. If you find any problems, please let us know. The application is tested with GPX files from these sources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Garmin Connect (export to GPX)&lt;/li&gt; &#xA; &lt;li&gt;FitoTrack (automatic export to GPX)&lt;/li&gt; &#xA; &lt;li&gt;Workoutdoors (export to GPX)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;write tests!!!!!&lt;/li&gt; &#xA; &lt;li&gt;add support for authentication through a reverse proxy&lt;/li&gt; &#xA; &lt;li&gt;make a dev-flag that doesn&#39;t embed all files in the binary&lt;/li&gt; &#xA; &lt;li&gt;add support for generic database drivers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;added support for MySQL, but untested so far&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;add support for other types of import files (eg. Garmin fit files) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;importing fit files works, kinda: there seems to be an issue with the elevation&lt;/li&gt; &#xA;   &lt;li&gt;see &lt;a href=&#34;https://github.com/tormoder/fit/issues/87&#34;&gt;https://github.com/tormoder/fit/issues/87&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.fitfileviewer.com/&#34;&gt;https://www.fitfileviewer.com/&lt;/a&gt; gives the same elevation issue&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;add support for auto-import from a folder (per user)&lt;/li&gt; &#xA; &lt;li&gt;see if htmx is worth using &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;first I need a use case&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>version-fox/vfox</title>
    <updated>2024-03-03T01:29:08Z</updated>
    <id>tag:github.com,2024-03-03:/version-fox/vfox</id>
    <link href="https://github.com/version-fox/vfox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform and extendable version manager with support for Java, Node.js, Flutter, .Net &amp; more&lt;/p&gt;&lt;hr&gt;&lt;p style=&#34;&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/version-fox/vfox/main/logo.png&#34; alt=&#34;Logo&#34; width=&#34;250&#34; height=&#34;250&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;VersionFox&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/version-fox/vfox&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go%20report-A+-brightgreen.svg?style=for-the-badge&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/version-fox/vfox/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/version-fox/vfox?style=for-the-badge&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/version-fox/vfox/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/version-fox/vfox?display_name=tag&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/85c8ptYgb7&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1191981003204477019?style=for-the-badge&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/version-fox/vfox/main/README.md&#34;&gt;[English]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/version-fox/vfox/main/README_CN.md&#34;&gt;[‰∏≠ÊñáÊñáÊ°£]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;vfox&lt;/code&gt; is a cross-platform tool for managing SDK versions, extendable via plugins&lt;/strong&gt;. It allows you to quickly install and switch between different versions of SDKs using the command line.&lt;/p&gt; &#xA;&lt;h2&gt;Why use VersionFox?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;cross-platform support&lt;/strong&gt; (Windows, Linux, macOS)&lt;/li&gt; &#xA; &lt;li&gt;single CLI for multiple languages&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;consistent commands&lt;/strong&gt; to manage all your languages&lt;/li&gt; &#xA; &lt;li&gt;support &lt;strong&gt;Global&lt;/strong&gt;„ÄÅ&lt;strong&gt;Project&lt;/strong&gt;„ÄÅ&lt;strong&gt;Session&lt;/strong&gt; scopes when switching versions&lt;/li&gt; &#xA; &lt;li&gt;simple &lt;strong&gt;plugin system&lt;/strong&gt; to add support for your language of choice&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;automatically switches&lt;/strong&gt; runtime versions as you traverse your project&lt;/li&gt; &#xA; &lt;li&gt;shell completion available for common shells (Bash, Zsh, Powershell)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;it&#39;s faster than &lt;code&gt;asdf-vm&lt;/code&gt;, and offers more simple commands and genuine cross-platform unification.&lt;/strong&gt; see &lt;a href=&#34;https://vfox.lhan.me/misc/vs-asdf.html&#34;&gt;Comparison with asdf&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/630778&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/630778.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For detailed installation instructions, see &lt;a href=&#34;https://vfox.lhan.me/guides/quick-start.html&#34;&gt;Quick Start&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;1. Choose an &lt;a href=&#34;https://vfox.lhan.me/guides/quick-start.html#_1-installation&#34;&gt;installation&lt;/a&gt; that works for you.&lt;/h4&gt; &#xA;&lt;h4&gt;2. ‚ö†Ô∏è &lt;strong&gt;&lt;em&gt;Hook vfox into your shell&lt;/em&gt; (pick one that works for your shell)&lt;/strong&gt; ‚ö†Ô∏è&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;eval &#34;$(vfox activate bash)&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;eval &#34;$(vfox activate zsh)&#34;&#39; &amp;gt;&amp;gt; ~/.zshrc&#xA;echo &#39;vfox activate fish | source&#39; &amp;gt;&amp;gt; ~/.config/fish/config.fish&#xA;&#xA;# For PowerShell, add the following line to your $PROFILE:&#xA;Invoke-Expression &#34;$(vfox activate pwsh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Add an SDK plugin&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ vfox add nodejs/nodejs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Install a runtime&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ vfox install nodejs@21.5.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Switch runtime&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ vfox use nodejs@21.5.0&#xA;$ node -v&#xA;21.5.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Full Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://vfox.lhan.me&#34;&gt;vfox.lhan.me&lt;/a&gt; for full documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Plugins&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you have installed &lt;code&gt;vfox&lt;/code&gt;, you can view all available plugins with the &lt;code&gt;vfox available&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/version-fox/version-fox-plugins&#34;&gt;&lt;img src=&#34;https://skillicons.dev/icons?i=java,kotlin,nodejs,flutter,dotnet,python,dart,golang,gradle,maven,zig,deno&amp;amp;theme=light&#34; alt=&#34;plugins&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more details, see the &lt;a href=&#34;https://github.com/version-fox/version-fox-plugins&#34;&gt;version-fox-plugins&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Thanks to following people who contributed to this project. üéâüéâüôèüôè&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;a href=&#34;https://github.com/version-fox/vfox/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=version-fox/vfox&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports, contributions and forks are welcome. All bugs or other forms of discussion happen on &lt;a href=&#34;http://github.com/version-fox/vfox/issues&#34;&gt;issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See more at &lt;a href=&#34;https://raw.githubusercontent.com/version-fox/vfox/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Plugin Contributions, please go to &lt;a href=&#34;https://github.com/version-fox/version-fox-plugins&#34;&gt;version-fox-plugins&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=version-fox/vfox&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;COPYRIGHT&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/version-fox/vfox/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt; - Copyright (C) 2024 Han Li and &lt;a href=&#34;https://github.com/version-fox/vfox/graphs/contributors&#34;&gt;contributors&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>siderolabs/omni</title>
    <updated>2024-03-03T01:29:08Z</updated>
    <id>tag:github.com,2024-03-03:/siderolabs/omni</id>
    <link href="https://github.com/siderolabs/omni" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SaaS-simple deployment of Kubernetes - on your own hardware.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Omni&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;SaaS-simple deployment of Kubernetes - on your own hardware.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/siderolabs/omni/releases/latest&#34;&gt; &lt;img alt=&#34;Release&#34; src=&#34;https://img.shields.io/github/release/siderolabs/omni.svg?logo=github&amp;amp;logoColor=white&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/siderolabs/omni/releases/latest&#34;&gt; &lt;img alt=&#34;Pre-release&#34; src=&#34;https://img.shields.io/github/release-pre/siderolabs/omni.svg?label=pre-release&amp;amp;logo=GitHub&amp;amp;logoColor=white&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Kubernetes is wonderful, but requires scarce time and expertise to set up and manage. Other solutions demand you have already set up Linux correctly, have all your servers in the same network, and meet their other criteria. And hybrid clusters that span cloud and data center? Good luck with that!&lt;/p&gt; &#xA;&lt;p&gt;Omni allows you to start with bare metal, virtual machines or a cloud provider, and create clusters spanning all of your locations, with a few clicks.&lt;/p&gt; &#xA;&lt;p&gt;You provide the machines ‚Äì edge compute, bare metal, VMs, or in your cloud account. Boot from an Omni image. Click to allocate to a cluster. That‚Äôs it!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vanilla Kubernetes, on your machines, under your control.&lt;/li&gt; &#xA; &lt;li&gt;Elegant UI for management and operations&lt;/li&gt; &#xA; &lt;li&gt;Security taken care of ‚Äì ties into your Enterprise ID provider&lt;/li&gt; &#xA; &lt;li&gt;Highly Available Kubernetes API endpoint built in&lt;/li&gt; &#xA; &lt;li&gt;Firewall friendly. Manage Edge nodes securely&lt;/li&gt; &#xA; &lt;li&gt;From single-node clusters to the largest scale&lt;/li&gt; &#xA; &lt;li&gt;Support for GPUs and most CSIs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;For instructions on developing Omni, see &lt;a href=&#34;https://raw.githubusercontent.com/siderolabs/omni/main/DEVELOPMENT.md&#34;&gt;DEVELOPMENT.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support: Questions, bugs, feature requests &lt;a href=&#34;https://github.com/siderolabs/omni/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: Join our &lt;a href=&#34;https://slack.dev.talos-systems.io&#34;&gt;slack channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/SideroLabs&#34;&gt;@SideroLabs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Email: &lt;a href=&#34;mailto:info@SideroLabs.com&#34;&gt;info@SideroLabs.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re interested in this project and would like to help in engineering efforts or have general usage questions, we are happy to have you! We hold a weekly meeting that all audiences are welcome to attend.&lt;/p&gt; &#xA;&lt;h3&gt;Office Hours&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When: Mondays at 16:30 UTC.&lt;/li&gt; &#xA; &lt;li&gt;Where: &lt;a href=&#34;https://meet.google.com/day-pxhv-zky&#34;&gt;Google Meet&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can subscribe to this meeting by joining the community forum above.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: You can convert the meeting hours to your &lt;a href=&#34;https://everytimezone.com/s/599e61d6&#34;&gt;local time&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcomed and appreciated! See &lt;a href=&#34;https://raw.githubusercontent.com/siderolabs/omni/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for our guidelines.&lt;/p&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;The Omni code is released under a combination of two licenses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The main Omni Server code is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/siderolabs/omni/main/LICENSE&#34;&gt;Business Source License 1.1 (BSL-1.1)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/siderolabs/omni/main/client&#34;&gt;Omni client library&lt;/a&gt; is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/siderolabs/omni/main/client/LICENSE&#34;&gt;Mozilla Public License 2.0 (MPL-2.0)&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When contributing to an Omni feature, you can find the relevant license in the comments at the top of each file.&lt;/p&gt;</summary>
  </entry>
</feed>