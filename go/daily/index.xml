<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-16T01:28:53Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aws/aws-lambda-go</title>
    <updated>2023-10-16T01:28:53Z</updated>
    <id>tag:github.com,2023-10-16:/aws/aws-lambda-go</id>
    <link href="https://github.com/aws/aws-lambda-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Libraries, samples and tools to help Go developers develop AWS Lambda functions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AWS Lambda for Go&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aws/aws-lambda-go/actions?query=workflow%3Atests&#34;&gt;&lt;img src=&#34;https://github.com/aws/aws-lambda-go/workflows/tests/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aws/aws-lambda-go/actions?query=workflow%3A%22go+get+build-lambda-zip%22&#34;&gt;&lt;img src=&#34;https://github.com/aws/aws-lambda-go/workflows/go%20get%20build-lambda-zip/badge.svg?sanitize=true&#34; alt=&#34;build-lambda-zip&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/aws/aws-lambda-go&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/aws/aws-lambda-go.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/aws/aws-lambda-go&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/aws/aws-lambda-go&#34; alt=&#34;GoCard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/aws/aws-lambda-go&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/aws/aws-lambda-go/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Libraries, samples, and tools to help Go developers develop AWS Lambda functions.&lt;/p&gt; &#xA;&lt;p&gt;To learn more about writing AWS Lambda functions in Go, go to &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/go-programming-model.html&#34;&gt;the official documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;// main.go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;github.com/aws/aws-lambda-go/lambda&#34;&#xA;)&#xA;&#xA;func hello() (string, error) {&#xA;&#x9;return &#34;Hello Œª!&#34;, nil&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;// Make the handler available for Remote Procedure Call by AWS Lambda&#xA;&#x9;lambda.Start(hello)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Building your function&lt;/h1&gt; &#xA;&lt;p&gt;Preparing a binary to deploy to AWS Lambda requires that it is compiled for Linux and placed into a .zip file.&lt;/p&gt; &#xA;&lt;h2&gt;For developers on Linux and macOS&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Remember to build your handler executable for Linux!&#xA;# When using the `provided.al2` runtime, the handler executable should be named `bootstrap`&#xA;GOOS=linux GOARCH=amd64 go build -o bootstrap main.go&#xA;zip lambda-handler.zip bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For developers on Windows&lt;/h2&gt; &#xA;&lt;p&gt;Windows developers may have trouble producing a zip file that marks the binary as executable on Linux. To create a .zip that will work on AWS Lambda, the &lt;code&gt;build-lambda-zip&lt;/code&gt; tool may be helpful.&lt;/p&gt; &#xA;&lt;p&gt;Get the tool&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go.exe install github.com/aws/aws-lambda-go/cmd/build-lambda-zip@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the tool from your &lt;code&gt;GOPATH&lt;/code&gt;. If you have a default installation of Go, the tool will be in &lt;code&gt;%USERPROFILE%\Go\bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;in cmd.exe:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;set GOOS=linux&#xA;set GOARCH=amd64&#xA;set CGO_ENABLED=0&#xA;go build -o bootstrap main.go&#xA;%USERPROFILE%\Go\bin\build-lambda-zip.exe -o lambda-handler.zip bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in Powershell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-posh&#34;&gt;$env:GOOS = &#34;linux&#34;&#xA;$env:GOARCH = &#34;amd64&#34;&#xA;$env:CGO_ENABLED = &#34;0&#34;&#xA;go build -o bootstrap main.go&#xA;~\Go\Bin\build-lambda-zip.exe -o lambda-handler.zip bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Deploying your functions&lt;/h1&gt; &#xA;&lt;p&gt;To deploy your function, refer to the official documentation for &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/deploying-lambda-apps.html&#34;&gt;deploying using the AWS CLI, AWS Cloudformation, and AWS SAM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Event Integrations&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/aws/aws-lambda-go/tree/master/events&#34;&gt;event models&lt;/a&gt; can be used to model AWS event sources. The official documentation has &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/use-cases.html&#34;&gt;detailed walkthroughs&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>circled-me/server</title>
    <updated>2023-10-16T01:28:53Z</updated>
    <id>tag:github.com,2023-10-16:/circled-me/server</id>
    <link href="https://github.com/circled-me/server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Photo backup and sharing server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;circled.me community server&lt;/h1&gt; &#xA;&lt;p&gt;This project aims to help people easily backup and share photos, videos, albums on their own server. Focusing on performance, low footprint and ease of implementation and use. Upcoming releases will further enable you to share with your circles by including group chats and more.&lt;/p&gt; &#xA;&lt;p&gt;After certain services that scan for faces, locations, etc, became paid some time ago, I have decided I&#39;d rather be able to host my own photos. The main reason being, of course, privacy! But also at that time, there was no alternatve that offered good performance and low CPU/memory usage. This project has currently only one contributor (i.e. me), so help will be greatly appreciated üòä&lt;/p&gt; &#xA;&lt;p&gt;Another focus of this project is having the ability to host everything a community needs to be able to communicate and exchange photos, ideas, etc. I strongly believe in local/focused communities and sharing with the community, but at the same time - keeping everything private, within the community. In my personal case, I share mostly photos with my family and close friends.&lt;/p&gt; &#xA;&lt;p&gt;Logo is &lt;a href=&#34;http://madebytow.com/&#34;&gt;madebytow.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mobile app&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;circled.me&lt;/strong&gt; mobile app &lt;strong&gt;works with multiple accounts and servers&lt;/strong&gt;. For example, you can have your family server and account, and your gaming/running/reading comunities&#39; accounts on the same app and being able to interact with all of them at the same time.&lt;/p&gt; &#xA;&lt;img src=&#34;https://app.circled.me/screenshots.jpg&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;NOTE: Please note that this project is still in development and could introduce breaking changes.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING: Do not use this as your main/only backup solution.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Main features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast response times and low CPU and memory usage&lt;/li&gt; &#xA; &lt;li&gt;iOS and Android photo backup (using the circled.me app) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supports either locally mounted disks or&lt;/li&gt; &#xA;   &lt;li&gt;S3-compatible Services - this allows different users to use their own S3 bucket on the same server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Push notifications for new Album photos, etc&lt;/li&gt; &#xA; &lt;li&gt;Albums &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Adding local server contributors and viewers&lt;/li&gt; &#xA;   &lt;li&gt;Sharing albums with anyone with a &#34;secret&#34; link&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Filtering photos by year, month, location, etc&lt;/li&gt; &#xA; &lt;li&gt;Moments - automatically grouping photos by time and location&lt;/li&gt; &#xA; &lt;li&gt;Reverse geocoding for all assets&lt;/li&gt; &#xA; &lt;li&gt;Automatic video conversion to web-compatible H.264 format&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feautres that are in-progress and/or prioritised:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Map browsing of photos&lt;/li&gt; &#xA; &lt;li&gt;Group chats&lt;/li&gt; &#xA; &lt;li&gt;Face detection and tagging&lt;/li&gt; &#xA; &lt;li&gt;Bulk-adding assets by: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Scanning directories on local disks&lt;/li&gt; &#xA;   &lt;li&gt;Scanning objects on already existing S3 bucket prefix&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling and Running the server&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to try and run the server is within a docker container, see example docker-compose file below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f docker-compose-example.yaml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If you change the source code (e.g. pull new version), you might need to remove your local cached Docker image for the &lt;code&gt;circled-server&lt;/code&gt; service.&lt;/p&gt; &#xA;&lt;p&gt;Now you can use the app and connect to your server at &lt;code&gt;http://&amp;lt;YOUR_IP&amp;gt;:8080&lt;/code&gt; and create your first admin user. Then you need to create a Storage Bucket from Settings and assign that to any User that is going to backup their photos there. If you used the example docker compose above, then the Path or your new Storage Bucket should be something like &lt;code&gt;/mnt/data1/some-sub-dir&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Current configuration environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_DSN&lt;/code&gt; - see example or refer to &lt;a href=&#34;https://github.com/go-sql-driver/mysql#dsn-data-source-name&#34;&gt;https://github.com/go-sql-driver/mysql#dsn-data-source-name&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BIND_ADDRESS&lt;/code&gt; - IP and port to bind to (incompatible with &lt;code&gt;TLS_DOMAINS&lt;/code&gt;). This is useful if your server is, say, behind reverse proxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TLS_DOMAINS&lt;/code&gt; - a list of comma-separated domain names. This uses the Let&#39;s Encrypt Gin implementation (&lt;a href=&#34;https://github.com/gin-gonic/autotls&#34;&gt;https://github.com/gin-gonic/autotls&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DEBUG_MODE&lt;/code&gt; - currently defaults to &lt;code&gt;yes&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;docker-compose example&lt;/h2&gt; &#xA;&lt;p&gt;This &lt;code&gt;docker-compose&lt;/code&gt; file is &lt;strong&gt;just an example&lt;/strong&gt; and does provide only basic configuration. Modify the &lt;code&gt;mysql-data&lt;/code&gt; and &lt;code&gt;asset-data&lt;/code&gt; below at the very least to suitable locations with enough space, etc. Better though, use your &#34;proper&#34; MySQL server instead of running it in Docker.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: Please do not use this in production.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml:&#34;&gt;version: &#39;2&#39;&#xA;services:&#xA;  circled-server:&#xA;    image: gubble/circled-server:latest&#xA;    # build:&#xA;    #  dockerfile: Dockerfile&#xA;    restart: always&#xA;    depends_on:&#xA;      mysql:&#xA;        condition: service_healthy&#xA;    ports:&#xA;      - &#34;8080:8080&#34;&#xA;    environment:&#xA;      MYSQL_DSN: &#34;root:@tcp(mysql:3306)/circled?charset=utf8mb4&amp;amp;parseTime=True&amp;amp;loc=Local&#34;&#xA;      BIND_ADDRESS: 0.0.0.0:8080&#xA;    volumes:&#xA;      - ./asset-data:/mnt/data1&#xA;  mysql:&#xA;    image: mysql:5.7&#xA;    command: --default-authentication-plugin=mysql_native_password&#xA;    restart: always&#xA;    volumes:&#xA;      - ./mysql-data:/var/lib/mysql&#xA;    environment:&#xA;      MYSQL_DATABASE: circled&#xA;      MYSQL_ALLOW_EMPTY_PASSWORD: &#34;yes&#34;&#xA;      MYSQL_ROOT_HOST: &#34;%&#34;&#xA;    healthcheck:&#xA;      test: mysqladmin ping --silent&#xA;      start_period: 5s&#xA;      interval: 3s&#xA;      timeout: 5s&#xA;      retries: 20&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>