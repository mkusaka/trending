<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-29T01:34:35Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>codingo/dorky</title>
    <updated>2023-04-29T01:34:35Z</updated>
    <id>tag:github.com,2023-04-29:/codingo/dorky</id>
    <link href="https://github.com/codingo/dorky" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool to quickly do keyword searches over Gitlab and Github for OSINT &amp; bug bounty recon&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dorky&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL3-_red.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/codingo_&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@codingo__-blue.svg?sanitize=true&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dorky is a command-line tool that searches GitHub and GitLab for matches in organization names, repository names, and usernames based on a list of input words. This tool can be helpful in identifying potential targets for security assessments, finding interesting projects, and discovering new organizations and users on GitHub and GitLab.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;codingo\ncodingo dot com&#34; | dorky -o -r -u -c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will search for organization names, repository names, and usernames on both GitHub and GitLab based on the cleaned input words:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;codingo&#xA;codingodotcom&#xA;codingo-dot-com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/codingo/dorky.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set your GitHub and/or GitLab access tokens as environment variables:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GITHUB_ACCESS_TOKEN=your-github-access-token&#xA;export GITLAB_ACCESS_TOKEN=your-gitlab-access-token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Pull the dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Build the Dorky tool:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build -o dorky&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;GITHUB_ACCESS_TOKEN and GITLAB_ACCESS_TOKEN environment variables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the Docker image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t dorky .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the Docker container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it -e GITHUB_ACCESS_TOKEN=your-github-token -e GITLAB_ACCESS_TOKEN=your-gitlab-token dorky&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Replace &lt;code&gt;your-github-token&lt;/code&gt; and &lt;code&gt;your-gitlab-token&lt;/code&gt; with your GitHub and GitLab access tokens, respectively.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Pipe a list of words to the Dorky tool and use the appropriate flags to specify the search categories and platforms:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cat wordlist.txt | ./dorky -uro -gh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: Search for organization names (or groups in GitLab)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: Search for repository names (or projects in GitLab)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: Search for username matches&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-max&lt;/code&gt;: Set the maximum number of search results per category (default: 10)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: Clean input URLs, turning them into words before performing searches&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-gh&lt;/code&gt;: Search only GitHub&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-gl&lt;/code&gt;: Search only GitLab&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: Simple output style for piping to another tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: Enable verbose mode for more detailed output&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default, the tool searches both GitHub and GitLab based on the provided access tokens. If both tokens are set, both platforms will be searched. If only one token is set, only that platform will be searched.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;google/go-github/v38&lt;/li&gt; &#xA; &lt;li&gt;xanzy/go-gitlab&lt;/li&gt; &#xA; &lt;li&gt;golang.org/x/oauth2&lt;/li&gt; &#xA; &lt;li&gt;golang.org/x/time/rate&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>uber/cadence</title>
    <updated>2023-04-29T01:34:35Z</updated>
    <id>tag:github.com,2023-04-29:/uber/cadence</id>
    <link href="https://github.com/uber/cadence" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cadence is a distributed, scalable, durable, and highly available orchestration engine to execute asynchronous long-running business logic in a scalable and resilient way.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cadence&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://buildkite.com/uberopensource/cadence-server&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/159887afd42000f11126f85237317d4090de97b26c287ebc40.svg?theme=github&amp;amp;branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/uber/cadence&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/uber/cadence/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo contains the source code of the Cadence server and other tooling including CLI, schema tools, bench and canary.&lt;/p&gt; &#xA;&lt;p&gt;You can implement your workflows with one of our client libraries. The &lt;a href=&#34;https://github.com/uber-go/cadence-client&#34;&gt;Go&lt;/a&gt; and &lt;a href=&#34;https://github.com/uber-java/cadence-client&#34;&gt;Java&lt;/a&gt; libraries are officially maintained by the Cadence team, while the &lt;a href=&#34;https://github.com/firdaus/cadence-python&#34;&gt;Python&lt;/a&gt; and &lt;a href=&#34;https://github.com/coinbase/cadence-ruby&#34;&gt;Ruby&lt;/a&gt; client libraries are developed by the community.&lt;/p&gt; &#xA;&lt;p&gt;You can also use &lt;a href=&#34;https://github.com/indeedeng/iwf&#34;&gt;iWF&lt;/a&gt; as a DSL framework on top of Cadence.&lt;/p&gt; &#xA;&lt;p&gt;See Maxim&#39;s talk at &lt;a href=&#34;https://atscaleconference.com/videos/cadence-microservice-architecture-beyond-requestreply&#34;&gt;Data@Scale Conference&lt;/a&gt; for an architectural overview of Cadence.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://cadenceworkflow.io&#34;&gt;cadenceworkflow.io&lt;/a&gt; to learn more about Cadence. Join us in &lt;a href=&#34;https://github.com/uber/cadence-docs&#34;&gt;Cadence Documentation&lt;/a&gt; project. Feel free to raise an Issue or Pull Request there.&lt;/p&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/cadence/discussions&#34;&gt;Github Discussion&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for Q&amp;amp;A, support/help, general discusion, and annoucement&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/cadence-workflow&#34;&gt;StackOverflow&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for Q&amp;amp;A and general discusion&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/cadence/issues&#34;&gt;Github Issues&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for reporting bugs and feature requests&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;Slack&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for contributing/development discussion&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Start the cadence-server&lt;/h3&gt; &#xA;&lt;p&gt;To run Cadence services locally, we highly recommend that you use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docker/README.md&#34;&gt;Cadence service docker&lt;/a&gt; to run the service. You can also follow the &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;instructions&lt;/a&gt; to build and run it.&lt;/p&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://cadenceworkflow.io/docs/operation-guide/&#34;&gt;documentation&lt;/a&gt; site for production/cluster setup.&lt;/p&gt; &#xA;&lt;h3&gt;Run the Samples&lt;/h3&gt; &#xA;&lt;p&gt;Try out the sample recipes for &lt;a href=&#34;https://github.com/uber-common/cadence-samples&#34;&gt;Go&lt;/a&gt; or &lt;a href=&#34;https://github.com/uber/cadence-java-samples&#34;&gt;Java&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Use &lt;a href=&#34;https://cadenceworkflow.io/docs/cli/&#34;&gt;Cadence CLI&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Cadence CLI can be used to operate workflows, tasklist, domain and even the clusters.&lt;/p&gt; &#xA;&lt;p&gt;You can use the following ways to install Cadence CLI:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use brew to install CLI: &lt;code&gt;brew install cadence-workflow&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow the &lt;a href=&#34;https://github.com/uber/cadence/discussions/4457&#34;&gt;instructions&lt;/a&gt; if you need to install older versions of CLI via homebrew. Usually this is only needed when you are running a server of a too old version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use docker image for CLI: &lt;code&gt;docker run --rm ubercadence/cli:&amp;lt;releaseVersion&amp;gt;&lt;/code&gt; or &lt;code&gt;docker run --rm ubercadence/cli:master &lt;/code&gt; . Be sure to update your image when you want to try new features: &lt;code&gt;docker pull ubercadence/cli:master &lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build the CLI binary yourself, check out the repo and run &lt;code&gt;make cadence&lt;/code&gt; to build all tools. See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for prerequisite of make command.&lt;/li&gt; &#xA; &lt;li&gt;Build the CLI image yourself, see &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docker/README.md#diy-building-an-image-for-any-tag-or-branch&#34;&gt;instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cadence CLI is a powerful tool. The commands are organized by &lt;strong&gt;tabs&lt;/strong&gt;. E.g. &lt;code&gt;workflow&lt;/code&gt;-&amp;gt;&lt;code&gt;batch&lt;/code&gt;-&amp;gt;&lt;code&gt;start&lt;/code&gt;, or &lt;code&gt;admin&lt;/code&gt;-&amp;gt;&lt;code&gt;workflow&lt;/code&gt;-&amp;gt;&lt;code&gt;describe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://cadenceworkflow.io/docs/cli/#documentation&#34;&gt;documentation&lt;/a&gt; and always try out &lt;code&gt;--help&lt;/code&gt; on any tab to learn &amp;amp; explore.&lt;/p&gt; &#xA;&lt;h3&gt;Use Cadence Web&lt;/h3&gt; &#xA;&lt;p&gt;Try out &lt;a href=&#34;https://github.com/uber/cadence-web&#34;&gt;Cadence Web UI&lt;/a&gt; to view your workflows on Cadence. (This is already available at localhost:8088 if you run Cadence with docker compose)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love your help in making Cadence great. Please review our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to propose a new feature, first join the &lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;Slack channel&lt;/a&gt; to start a discussion and check if there are existing design discussions. Also peruse our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docs/design/index.md&#34;&gt;design docs&lt;/a&gt; in case a feature has been designed but not yet implemented. Once you&#39;re sure the proposal is not covered elsewhere, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/PROPOSALS.md&#34;&gt;proposal instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other binaries in this repo&lt;/h2&gt; &#xA;&lt;h4&gt;Bench/stress test workflow tools&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/bench/README.md&#34;&gt;bench documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Periodical feature health check workflow tools(aka Canary)&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/canary/README.md&#34;&gt;canary documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Schema tools for SQL and Cassandra&lt;/h4&gt; &#xA;&lt;p&gt;The tools are for &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docs/persistence.md&#34;&gt;manual setup or upgrading database schema&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If server runs with Cassandra, Use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/tools/cassandra/README.md&#34;&gt;Cadence Cassandra tool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If server runs with SQL database, Use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/tools/sql/README.md&#34;&gt;Cadence SQL tool&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The easiest way to get the schema tool is via homebrew.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install cadence-workflow&lt;/code&gt; also includes &lt;code&gt;cadence-sql-tool&lt;/code&gt; and &lt;code&gt;cadence-cassandra-tool&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The schema files are located at &lt;code&gt;/usr/local/etc/cadence/schema/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To upgrade, make sure you remove the old ElasticSearch schema first: &lt;code&gt;mv /usr/local/etc/cadence/schema/elasticsearch /usr/local/etc/cadence/schema/elasticsearch.old &amp;amp;&amp;amp; brew upgrade cadence-workflow&lt;/code&gt;. Otherwise ElasticSearch schemas may not be able to get updated.&lt;/li&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://github.com/uber/cadence/discussions/4457&#34;&gt;instructions&lt;/a&gt; if you need to install older versions of schema tools via homebrew. However, easier way is to use new versions of schema tools with old versions of schemas. All you need is to check out the older version of schemas from this repo. Run &lt;code&gt;git checkout v0.21.3&lt;/code&gt; to get the v0.21.3 schemas in &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/schema&#34;&gt;the schema folder&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License, please see &lt;a href=&#34;https://github.com/uber/cadence/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>