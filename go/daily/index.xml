<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-27T01:32:48Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/oss-rebuild</title>
    <updated>2025-07-27T01:32:48Z</updated>
    <id>tag:github.com,2025-07-27:/google/oss-rebuild</id>
    <link href="https://github.com/google/oss-rebuild" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Securing open-source package ecosystems by originating, validating, and augmenting build attestations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OSS Rebuild&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/oss-rebuild/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/google/oss-rebuild&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/google/oss-rebuild&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/google/oss-rebuild&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/google/oss-rebuild.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/google/oss-rebuild/main/site/logo-light.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://raw.githubusercontent.com/google/oss-rebuild/main/site/logo-dark.svg&#34;&gt; &#xA;  &lt;img alt=&#34;OSS Rebuild logo&#34; src=&#34;https://raw.githubusercontent.com/google/oss-rebuild/main/site/logo-dark.svg?sanitize=true&#34; height=&#34;110&#34; width=&#34;230&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Secure open-source package ecosystems by originating, validating, and augmenting build attestations.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;OSS Rebuild aims to apply &lt;a href=&#34;https://reproducible-builds.org/&#34;&gt;reproducible build&lt;/a&gt; concepts at low-cost and high-scale for open-source package ecosystems.&lt;/p&gt; &#xA;&lt;p&gt;Rebuilds are derived by analyzing the published metadata and artifacts and are evaluated against the upstream package versions. When successful, build attestations are published for the upstream artifacts, verifying the integrity of the upstream artifact and eliminating many possible sources of compromise.&lt;/p&gt; &#xA;&lt;p&gt;We currently support the following ecosystems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NPM (JavaScript/TypeScript)&lt;/li&gt; &#xA; &lt;li&gt;PyPI (Python)&lt;/li&gt; &#xA; &lt;li&gt;Crates.io (Rust)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While complete coverage is the aim, only the most popular packages within each ecosystem are currently rebuilt.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;oss-rebuild&lt;/code&gt; CLI tool provides access to OSS Rebuild data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run github.com/google/oss-rebuild/cmd/oss-rebuild@latest --help&#xA;$ # Alternatively, install the binary locally.&#xA;$ # Just make sure it&#39;s on your PATH: https://go.dev/ref/mod#go-install&#xA;$ go install github.com/google/oss-rebuild/cmd/oss-rebuild@latest&#xA;$ oss-rebuild --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view the rebuild for a given package, use the &lt;code&gt;get&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ oss-rebuild get pypi absl-py 2.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, this provides only a summarized view. For more granular access to rebuild data, use one of the &lt;code&gt;--output&lt;/code&gt; formats. For example, to access the entire attestation payload, use the &lt;code&gt;--output=payload&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ oss-rebuild get pypi absl-py 2.0.0 --output=payload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view the dockerfile, use the &lt;code&gt;--output=dockerfile&lt;/code&gt; option. This can be chained with &lt;code&gt;docker&lt;/code&gt; to execute a rebuild locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ oss-rebuild get pypi absl-py 2.0.0 --output=dockerfile | docker run $(docker buildx build -q -)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While the above &lt;code&gt;--output=payload&lt;/code&gt; option produces more human-readable content, the raw attestation bundle can be accessed as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ oss-rebuild get pypi absl-py 2.0.0 --output=bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To explore more packages, the &lt;code&gt;list&lt;/code&gt; command can be used to view the versions of a package that have been rebuilt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ oss-rebuild list pypi absl-py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage Requirements&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;oss-rebuild&lt;/code&gt; uses a public &lt;a href=&#34;https://cloud.google.com/kms/docs&#34;&gt;Cloud KMS&lt;/a&gt; key to validate attestation signatures. Anonymous authentication is not supported so an &lt;a href=&#34;https://cloud.google.com/docs/authentication/set-up-adc-local-dev-environment&#34;&gt;ADC credential&lt;/a&gt; must be present.&lt;/p&gt; &#xA;&lt;p&gt;This can be accomplished with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gcloud init&#xA;$ gcloud auth application-default login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To disable signature verification and skip the requirement for KMS access use: &lt;code&gt;--verify=false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Join us in building a more secure and reliable open-source ecosystem!&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/google/oss-rebuild/main/CONTRIBUTING.md&#34;&gt;the contribution guide&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mitigate supply chain attacks&lt;/strong&gt;: Detect discrepancies in open-source packages, helping to prevent compromises like those of Solarwinds and Codecov.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scale security standards&lt;/strong&gt;: Utilize industry best practices such as SLSA, Sigstore, and containerized builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community participation&lt;/strong&gt;: Create a venue to collectivize effort towards securing the open-source supply chain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enable future innovation&lt;/strong&gt;: Derive data to leverage AI-driven rebuilds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;To better understand the security properties of rebuilds, see &lt;a href=&#34;https://raw.githubusercontent.com/google/oss-rebuild/main/docs/trust.md&#34;&gt;Trust and Rebuilds&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;p&gt;Check out these related projects contributing to the reproducible builds effort:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jvm-repo-rebuild/reproducible-central&#34;&gt;reproducible-central&lt;/a&gt;: Java, Kotlin reproducibility.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kpcyrd/rebuilderd&#34;&gt;kpcyrd/rebuilderd&lt;/a&gt;: Rebuild scheduler with support for several distros.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This is not an officially supported Google product.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>modelcontextprotocol/go-sdk</title>
    <updated>2025-07-27T01:32:48Z</updated>
    <id>tag:github.com,2025-07-27:/modelcontextprotocol/go-sdk</id>
    <link href="https://github.com/modelcontextprotocol/go-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official Go SDK for Model Context Protocol servers and clients. Maintained in collaboration with Google.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Go SDK v0.2.0&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;BREAKING CHANGES&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This version contains breaking changes. See the &lt;a href=&#34;https://github.com/modelcontextprotocol/go-sdk/releases/tag/v0.2.0&#34;&gt;release notes&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/modelcontextprotocol/go-sdk&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains an unreleased implementation of the official Go software development kit (SDK) for the Model Context Protocol (MCP).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] The SDK should be considered unreleased, and is currently unstable and subject to breaking changes. Please test it out and file bug reports or API proposals, but don&#39;t use it in real projects. See the issue tracker for known issues and missing features. We aim to release a stable version of the SDK in August, 2025.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;The design doc for this SDK is at &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/design/design.md&#34;&gt;design.md&lt;/a&gt;, which was initially reviewed at &lt;a href=&#34;https://github.com/orgs/modelcontextprotocol/discussions/364&#34;&gt;modelcontextprotocol/discussions/364&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Further design discussion should occur in &lt;a href=&#34;https://github.com/modelcontextprotocol/go-sdk/issues&#34;&gt;issues&lt;/a&gt; (for concrete proposals) or &lt;a href=&#34;https://github.com/modelcontextprotocol/go-sdk/discussions&#34;&gt;discussions&lt;/a&gt; for open-ended discussion. See &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Package documentation&lt;/h2&gt; &#xA;&lt;p&gt;The SDK consists of three importable packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/mcp&#34;&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/mcp&lt;/code&gt;&lt;/a&gt; package defines the primary APIs for constructing and using MCP clients and servers.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/jsonschema&#34;&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/jsonschema&lt;/code&gt;&lt;/a&gt; package provides an implementation of &lt;a href=&#34;https://json-schema.org/&#34;&gt;JSON Schema&lt;/a&gt;, used for MCP tool input and output schema.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/jsonrpc&#34;&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/jsonrpc&lt;/code&gt;&lt;/a&gt; package is for users implementing their own transports.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;In this example, an MCP client communicates with an MCP server running in a sidecar process:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;context&#34;&#xA;&#x9;&#34;log&#34;&#xA;&#x9;&#34;os/exec&#34;&#xA;&#xA;&#x9;&#34;github.com/modelcontextprotocol/go-sdk/mcp&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;ctx := context.Background()&#xA;&#xA;&#x9;// Create a new client, with no features.&#xA;&#x9;client := mcp.NewClient(&amp;amp;mcp.Implementation{Name: &#34;mcp-client&#34;, Version: &#34;v1.0.0&#34;}, nil)&#xA;&#xA;&#x9;// Connect to a server over stdin/stdout&#xA;&#x9;transport := mcp.NewCommandTransport(exec.Command(&#34;myserver&#34;))&#xA;&#x9;session, err := client.Connect(ctx, transport)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#x9;defer session.Close()&#xA;&#xA;&#x9;// Call a tool on the server.&#xA;&#x9;params := &amp;amp;mcp.CallToolParams{&#xA;&#x9;&#x9;Name:      &#34;greet&#34;,&#xA;&#x9;&#x9;Arguments: map[string]any{&#34;name&#34;: &#34;you&#34;},&#xA;&#x9;}&#xA;&#x9;res, err := session.CallTool(ctx, params)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatalf(&#34;CallTool failed: %v&#34;, err)&#xA;&#x9;}&#xA;&#x9;if res.IsError {&#xA;&#x9;&#x9;log.Fatal(&#34;tool failed&#34;)&#xA;&#x9;}&#xA;&#x9;for _, c := range res.Content {&#xA;&#x9;&#x9;log.Print(c.(*mcp.TextContent).Text)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s an example of the corresponding server component, which communicates with its client over stdin/stdout:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;context&#34;&#xA;&#x9;&#34;log&#34;&#xA;&#xA;&#x9;&#34;github.com/modelcontextprotocol/go-sdk/mcp&#34;&#xA;)&#xA;&#xA;type HiParams struct {&#xA;&#x9;Name string `json:&#34;name&#34; jsonschema:&#34;the name of the person to greet&#34;`&#xA;}&#xA;&#xA;func SayHi(ctx context.Context, cc *mcp.ServerSession, params *mcp.CallToolParamsFor[HiParams]) (*mcp.CallToolResultFor[any], error) {&#xA;&#x9;return &amp;amp;mcp.CallToolResultFor[any]{&#xA;&#x9;&#x9;Content: []mcp.Content{&amp;amp;mcp.TextContent{Text: &#34;Hi &#34; + params.Arguments.Name}},&#xA;&#x9;}, nil&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;// Create a server with a single tool.&#xA;&#x9;server := mcp.NewServer(&amp;amp;mcp.Implementation{Name: &#34;greeter&#34;, Version: &#34;v1.0.0&#34;}, nil)&#xA;&#xA;&#x9;mcp.AddTool(server, &amp;amp;mcp.Tool{Name: &#34;greet&#34;, Description: &#34;say hi&#34;}, SayHi)&#xA;&#x9;// Run the server over stdin/stdout, until the client disconnects&#xA;&#x9;if err := server.Run(context.Background(), mcp.NewStdioTransport()); err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/examples/&#34;&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/a&gt; directory contains more example clients and servers.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Several existing Go MCP SDKs inspired the development and design of this official SDK, notably &lt;a href=&#34;https://github.com/mark3labs/mcp-go&#34;&gt;mcp-go&lt;/a&gt;, authored by Ed Zynda. We are grateful to Ed as well as the other contributors to mcp-go, and to authors and contributors of other SDKs such as &lt;a href=&#34;https://github.com/metoro-io/mcp-golang&#34;&gt;mcp-golang&lt;/a&gt; and &lt;a href=&#34;https://github.com/ThinkInAIXYZ/go-mcp&#34;&gt;go-mcp&lt;/a&gt;. Thanks to their work, there is a thriving ecosystem of Go MCP clients and servers.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>