<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-29T01:34:07Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>prometheus/node_exporter</title>
    <updated>2022-09-29T01:34:07Z</updated>
    <id>tag:github.com,2022-09-29:/prometheus/node_exporter</id>
    <link href="https://github.com/prometheus/node_exporter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Exporter for machine metrics&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node exporter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/prometheus/node_exporter&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/prometheus/node_exporter/tree/master.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buildkite.com/prometheus/node-exporter&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/94a0c1fb00b1f46883219c256efe9ce01d63b6505f3a942f9b.svg?sanitize=true&#34; alt=&#34;Buildkite status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/prometheus/node-exporter&#34;&gt;&lt;img src=&#34;https://quay.io/repository/prometheus/node-exporter/status&#34; alt=&#34;Docker Repository on Quay&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/prom/node-exporter/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/prom/node-exporter.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/prometheus/node_exporter&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/prometheus/node_exporter&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prometheus exporter for hardware and OS metrics exposed by *NIX kernels, written in Go with pluggable metric collectors.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/prometheus-community/windows_exporter&#34;&gt;Windows exporter&lt;/a&gt; is recommended for Windows users. To expose NVIDIA GPU metrics, &lt;a href=&#34;https://github.com/NVIDIA/dcgm-exporter&#34;&gt;prometheus-dcgm &lt;/a&gt; can be used.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Usage&lt;/h2&gt; &#xA;&lt;p&gt;If you are new to Prometheus and &lt;code&gt;node_exporter&lt;/code&gt; there is a &lt;a href=&#34;https://prometheus.io/docs/guides/node-exporter/&#34;&gt;simple step-by-step guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;node_exporter&lt;/code&gt; listens on HTTP port 9100 by default. See the &lt;code&gt;--help&lt;/code&gt; output for more options.&lt;/p&gt; &#xA;&lt;h3&gt;Ansible&lt;/h3&gt; &#xA;&lt;p&gt;For automated installs with &lt;a href=&#34;https://www.ansible.com/&#34;&gt;Ansible&lt;/a&gt;, there is the &lt;a href=&#34;https://github.com/cloudalchemy/ansible-node-exporter&#34;&gt;Cloud Alchemy role&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;RHEL/CentOS/Fedora&lt;/h3&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/ibotty/prometheus-exporters/&#34;&gt;community-supplied COPR repository&lt;/a&gt; which closely follows upstream releases.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;node_exporter&lt;/code&gt; is designed to monitor the host system. It&#39;s not recommended to deploy it as a Docker container because it requires access to the host system.&lt;/p&gt; &#xA;&lt;p&gt;For situations where Docker deployment is needed, some extra flags must be used to allow the &lt;code&gt;node_exporter&lt;/code&gt; access to the host namespaces.&lt;/p&gt; &#xA;&lt;p&gt;Be aware that any non-root mount points you want to monitor will need to be bind-mounted into the container.&lt;/p&gt; &#xA;&lt;p&gt;If you start container for host monitoring, specify &lt;code&gt;path.rootfs&lt;/code&gt; argument. This argument must match path in bind-mount of host root. The node_exporter will use &lt;code&gt;path.rootfs&lt;/code&gt; as prefix to access host filesystem.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --net=&#34;host&#34; \&#xA;  --pid=&#34;host&#34; \&#xA;  -v &#34;/:/host:ro,rslave&#34; \&#xA;  quay.io/prometheus/node-exporter:latest \&#xA;  --path.rootfs=/host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Docker compose, similar flag changes are needed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#39;3.8&#39;&#xA;&#xA;services:&#xA;  node_exporter:&#xA;    image: quay.io/prometheus/node-exporter:latest&#xA;    container_name: node_exporter&#xA;    command:&#xA;      - &#39;--path.rootfs=/host&#39;&#xA;    network_mode: host&#xA;    pid: host&#xA;    restart: unless-stopped&#xA;    volumes:&#xA;      - &#39;/:/host:ro,rslave&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On some systems, the &lt;code&gt;timex&lt;/code&gt; collector requires an additional Docker flag, &lt;code&gt;--cap-add=SYS_TIME&lt;/code&gt;, in order to access the required syscalls.&lt;/p&gt; &#xA;&lt;h2&gt;Collectors&lt;/h2&gt; &#xA;&lt;p&gt;There is varying support for collectors on each operating system. The tables below list all existing collectors and the supported systems.&lt;/p&gt; &#xA;&lt;p&gt;Collectors are enabled by providing a &lt;code&gt;--collector.&amp;lt;name&amp;gt;&lt;/code&gt; flag. Collectors that are enabled by default can be disabled by providing a &lt;code&gt;--no-collector.&amp;lt;name&amp;gt;&lt;/code&gt; flag. To enable only some specific collector(s), use &lt;code&gt;--collector.disable-defaults --collector.&amp;lt;name&amp;gt; ...&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Enabled by default&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;arp&lt;/td&gt; &#xA;   &lt;td&gt;Exposes ARP statistics from &lt;code&gt;/proc/net/arp&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bcache&lt;/td&gt; &#xA;   &lt;td&gt;Exposes bcache statistics from &lt;code&gt;/sys/fs/bcache/&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bonding&lt;/td&gt; &#xA;   &lt;td&gt;Exposes the number of configured and active slaves of Linux bonding interfaces.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;btrfs&lt;/td&gt; &#xA;   &lt;td&gt;Exposes btrfs statistics&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;boottime&lt;/td&gt; &#xA;   &lt;td&gt;Exposes system boot time derived from the &lt;code&gt;kern.boottime&lt;/code&gt; sysctl.&lt;/td&gt; &#xA;   &lt;td&gt;Darwin, Dragonfly, FreeBSD, NetBSD, OpenBSD, Solaris&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;conntrack&lt;/td&gt; &#xA;   &lt;td&gt;Shows conntrack statistics (does nothing if no &lt;code&gt;/proc/sys/net/netfilter/&lt;/code&gt; present).&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cpu&lt;/td&gt; &#xA;   &lt;td&gt;Exposes CPU statistics&lt;/td&gt; &#xA;   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, Solaris, OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cpufreq&lt;/td&gt; &#xA;   &lt;td&gt;Exposes CPU frequency statistics&lt;/td&gt; &#xA;   &lt;td&gt;Linux, Solaris&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;diskstats&lt;/td&gt; &#xA;   &lt;td&gt;Exposes disk I/O statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Darwin, Linux, OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dmi&lt;/td&gt; &#xA;   &lt;td&gt;Expose Desktop Management Interface (DMI) info from &lt;code&gt;/sys/class/dmi/id/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;edac&lt;/td&gt; &#xA;   &lt;td&gt;Exposes error detection and correction statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;entropy&lt;/td&gt; &#xA;   &lt;td&gt;Exposes available entropy.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;exec&lt;/td&gt; &#xA;   &lt;td&gt;Exposes execution statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Dragonfly, FreeBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fibrechannel&lt;/td&gt; &#xA;   &lt;td&gt;Exposes fibre channel information and statistics from &lt;code&gt;/sys/class/fc_host/&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;filefd&lt;/td&gt; &#xA;   &lt;td&gt;Exposes file descriptor statistics from &lt;code&gt;/proc/sys/fs/file-nr&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;filesystem&lt;/td&gt; &#xA;   &lt;td&gt;Exposes filesystem statistics, such as disk space used.&lt;/td&gt; &#xA;   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hwmon&lt;/td&gt; &#xA;   &lt;td&gt;Expose hardware monitoring and sensor data from &lt;code&gt;/sys/class/hwmon/&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;infiniband&lt;/td&gt; &#xA;   &lt;td&gt;Exposes network statistics specific to InfiniBand and Intel OmniPath configurations.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ipvs&lt;/td&gt; &#xA;   &lt;td&gt;Exposes IPVS status from &lt;code&gt;/proc/net/ip_vs&lt;/code&gt; and stats from &lt;code&gt;/proc/net/ip_vs_stats&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;loadavg&lt;/td&gt; &#xA;   &lt;td&gt;Exposes load average.&lt;/td&gt; &#xA;   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, NetBSD, OpenBSD, Solaris&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mdadm&lt;/td&gt; &#xA;   &lt;td&gt;Exposes statistics about devices in &lt;code&gt;/proc/mdstat&lt;/code&gt; (does nothing if no &lt;code&gt;/proc/mdstat&lt;/code&gt; present).&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;meminfo&lt;/td&gt; &#xA;   &lt;td&gt;Exposes memory statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;netclass&lt;/td&gt; &#xA;   &lt;td&gt;Exposes network interface info from &lt;code&gt;/sys/class/net/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;netdev&lt;/td&gt; &#xA;   &lt;td&gt;Exposes network interface statistics such as bytes transferred.&lt;/td&gt; &#xA;   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;netstat&lt;/td&gt; &#xA;   &lt;td&gt;Exposes network statistics from &lt;code&gt;/proc/net/netstat&lt;/code&gt;. This is the same information as &lt;code&gt;netstat -s&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nfs&lt;/td&gt; &#xA;   &lt;td&gt;Exposes NFS client statistics from &lt;code&gt;/proc/net/rpc/nfs&lt;/code&gt;. This is the same information as &lt;code&gt;nfsstat -c&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nfsd&lt;/td&gt; &#xA;   &lt;td&gt;Exposes NFS kernel server statistics from &lt;code&gt;/proc/net/rpc/nfsd&lt;/code&gt;. This is the same information as &lt;code&gt;nfsstat -s&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nvme&lt;/td&gt; &#xA;   &lt;td&gt;Exposes NVMe info from &lt;code&gt;/sys/class/nvme/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;os&lt;/td&gt; &#xA;   &lt;td&gt;Expose OS release info from &lt;code&gt;/etc/os-release&lt;/code&gt; or &lt;code&gt;/usr/lib/os-release&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;powersupplyclass&lt;/td&gt; &#xA;   &lt;td&gt;Exposes Power Supply statistics from &lt;code&gt;/sys/class/power_supply&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pressure&lt;/td&gt; &#xA;   &lt;td&gt;Exposes pressure stall statistics from &lt;code&gt;/proc/pressure/&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux (kernel 4.20+ and/or &lt;a href=&#34;https://www.kernel.org/doc/html/latest/accounting/psi.html&#34;&gt;CONFIG_PSI&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rapl&lt;/td&gt; &#xA;   &lt;td&gt;Exposes various statistics from &lt;code&gt;/sys/class/powercap&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;schedstat&lt;/td&gt; &#xA;   &lt;td&gt;Exposes task scheduler statistics from &lt;code&gt;/proc/schedstat&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;selinux&lt;/td&gt; &#xA;   &lt;td&gt;Exposes SELinux statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sockstat&lt;/td&gt; &#xA;   &lt;td&gt;Exposes various statistics from &lt;code&gt;/proc/net/sockstat&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;softnet&lt;/td&gt; &#xA;   &lt;td&gt;Exposes statistics from &lt;code&gt;/proc/net/softnet_stat&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stat&lt;/td&gt; &#xA;   &lt;td&gt;Exposes various statistics from &lt;code&gt;/proc/stat&lt;/code&gt;. This includes boot time, forks and interrupts.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tapestats&lt;/td&gt; &#xA;   &lt;td&gt;Exposes statistics from &lt;code&gt;/sys/class/scsi_tape&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;textfile&lt;/td&gt; &#xA;   &lt;td&gt;Exposes statistics read from local disk. The &lt;code&gt;--collector.textfile.directory&lt;/code&gt; flag must be set.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;thermal&lt;/td&gt; &#xA;   &lt;td&gt;Exposes thermal statistics like &lt;code&gt;pmset -g therm&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Darwin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;thermal_zone&lt;/td&gt; &#xA;   &lt;td&gt;Exposes thermal zone &amp;amp; cooling device statistics from &lt;code&gt;/sys/class/thermal&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;time&lt;/td&gt; &#xA;   &lt;td&gt;Exposes the current system time.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;timex&lt;/td&gt; &#xA;   &lt;td&gt;Exposes selected adjtimex(2) system call stats.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;udp_queues&lt;/td&gt; &#xA;   &lt;td&gt;Exposes UDP total lengths of the rx_queue and tx_queue from &lt;code&gt;/proc/net/udp&lt;/code&gt; and &lt;code&gt;/proc/net/udp6&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uname&lt;/td&gt; &#xA;   &lt;td&gt;Exposes system information as provided by the uname system call.&lt;/td&gt; &#xA;   &lt;td&gt;Darwin, FreeBSD, Linux, OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;vmstat&lt;/td&gt; &#xA;   &lt;td&gt;Exposes statistics from &lt;code&gt;/proc/vmstat&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xfs&lt;/td&gt; &#xA;   &lt;td&gt;Exposes XFS runtime statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Linux (kernel 4.4+)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zfs&lt;/td&gt; &#xA;   &lt;td&gt;Exposes &lt;a href=&#34;http://open-zfs.org/&#34;&gt;ZFS&lt;/a&gt; performance statistics.&lt;/td&gt; &#xA;   &lt;td&gt;FreeBSD, &lt;a href=&#34;http://zfsonlinux.org/&#34;&gt;Linux&lt;/a&gt;, Solaris&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Disabled by default&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;node_exporter&lt;/code&gt; also implements a number of collectors that are disabled by default. Reasons for this vary by collector, and may include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;High cardinality&lt;/li&gt; &#xA; &lt;li&gt;Prolonged runtime that exceeds the Prometheus &lt;code&gt;scrape_interval&lt;/code&gt; or &lt;code&gt;scrape_timeout&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Significant resource demands on the host&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can enable additional collectors as desired by adding them to your init system&#39;s or service supervisor&#39;s startup configuration for &lt;code&gt;node_exporter&lt;/code&gt; but caution is advised. Enable at most one at a time, testing first on a non-production system, then by hand on a single production node. When enabling additional collectors, you should carefully monitor the change by observing the &lt;code&gt; scrape_duration_seconds&lt;/code&gt; metric to ensure that collection completes and does not time out. In addition, monitor the &lt;code&gt;scrape_samples_post_metric_relabeling&lt;/code&gt; metric to see the changes in cardinality.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;buddyinfo&lt;/td&gt; &#xA;   &lt;td&gt;Exposes statistics of memory fragments as reported by /proc/buddyinfo.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cgroups&lt;/td&gt; &#xA;   &lt;td&gt;A summary of the number of active and enabled cgroups&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;devstat&lt;/td&gt; &#xA;   &lt;td&gt;Exposes device statistics&lt;/td&gt; &#xA;   &lt;td&gt;Dragonfly, FreeBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;drbd&lt;/td&gt; &#xA;   &lt;td&gt;Exposes Distributed Replicated Block Device statistics (to version 8.4)&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ethtool&lt;/td&gt; &#xA;   &lt;td&gt;Exposes network interface information and network driver statistics equivalent to &lt;code&gt;ethtool&lt;/code&gt;, &lt;code&gt;ethtool -S&lt;/code&gt;, and &lt;code&gt;ethtool -i&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;interrupts&lt;/td&gt; &#xA;   &lt;td&gt;Exposes detailed interrupts statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Linux, OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ksmd&lt;/td&gt; &#xA;   &lt;td&gt;Exposes kernel and system statistics from &lt;code&gt;/sys/kernel/mm/ksm&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lnstat&lt;/td&gt; &#xA;   &lt;td&gt;Exposes stats from &lt;code&gt;/proc/net/stat/&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;logind&lt;/td&gt; &#xA;   &lt;td&gt;Exposes session counts from &lt;a href=&#34;http://www.freedesktop.org/wiki/Software/systemd/logind/&#34;&gt;logind&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;meminfo_numa&lt;/td&gt; &#xA;   &lt;td&gt;Exposes memory statistics from &lt;code&gt;/proc/meminfo_numa&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mountstats&lt;/td&gt; &#xA;   &lt;td&gt;Exposes filesystem statistics from &lt;code&gt;/proc/self/mountstats&lt;/code&gt;. Exposes detailed NFS client statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;network_route&lt;/td&gt; &#xA;   &lt;td&gt;Exposes the routing table as metrics&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ntp&lt;/td&gt; &#xA;   &lt;td&gt;Exposes local NTP daemon health to check &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/node_exporter/master/docs/TIME.md&#34;&gt;time&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;perf&lt;/td&gt; &#xA;   &lt;td&gt;Exposes perf based metrics (Warning: Metrics are dependent on kernel configuration and settings).&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;processes&lt;/td&gt; &#xA;   &lt;td&gt;Exposes aggregate process statistics from &lt;code&gt;/proc&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;qdisc&lt;/td&gt; &#xA;   &lt;td&gt;Exposes &lt;a href=&#34;https://en.wikipedia.org/wiki/Network_scheduler#Linux_kernel&#34;&gt;queuing discipline&lt;/a&gt; statistics&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;runit&lt;/td&gt; &#xA;   &lt;td&gt;Exposes service status from &lt;a href=&#34;http://smarden.org/runit/&#34;&gt;runit&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;slabinfo&lt;/td&gt; &#xA;   &lt;td&gt;Exposes slab statistics from &lt;code&gt;/proc/slabinfo&lt;/code&gt;. Note that permission of &lt;code&gt;/proc/slabinfo&lt;/code&gt; is usually 0400, so set it appropriately.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;supervisord&lt;/td&gt; &#xA;   &lt;td&gt;Exposes service status from &lt;a href=&#34;http://supervisord.org/&#34;&gt;supervisord&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sysctl&lt;/td&gt; &#xA;   &lt;td&gt;Expose sysctl values from &lt;code&gt;/proc/sys&lt;/code&gt;. Use &lt;code&gt;--collector.sysctl.include(-info)&lt;/code&gt; to configure.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;systemd&lt;/td&gt; &#xA;   &lt;td&gt;Exposes service and system status from &lt;a href=&#34;http://www.freedesktop.org/wiki/Software/systemd/&#34;&gt;systemd&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tcpstat&lt;/td&gt; &#xA;   &lt;td&gt;Exposes TCP connection status information from &lt;code&gt;/proc/net/tcp&lt;/code&gt; and &lt;code&gt;/proc/net/tcp6&lt;/code&gt;. (Warning: the current version has potential performance issues in high load situations.)&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wifi&lt;/td&gt; &#xA;   &lt;td&gt;Exposes WiFi device and station statistics.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zoneinfo&lt;/td&gt; &#xA;   &lt;td&gt;Exposes NUMA memory zone metrics.&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Perf Collector&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;perf&lt;/code&gt; collector may not work out of the box on some Linux systems due to kernel configuration and security settings. To allow access, set the following &lt;code&gt;sysctl&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sysctl -w kernel.perf_event_paranoid=X&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2 allow only user-space measurements (default since Linux 4.6).&lt;/li&gt; &#xA; &lt;li&gt;1 allow both kernel and user measurements (default before Linux 4.6).&lt;/li&gt; &#xA; &lt;li&gt;0 allow access to CPU-specific data but not raw tracepoint samples.&lt;/li&gt; &#xA; &lt;li&gt;-1 no restrictions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Depending on the configured value different metrics will be available, for most cases &lt;code&gt;0&lt;/code&gt; will provide the most complete set. For more information see &lt;a href=&#34;http://man7.org/linux/man-pages/man2/perf_event_open.2.html&#34;&gt;&lt;code&gt;man 2 perf_event_open&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;perf&lt;/code&gt; collector will only collect metrics of the CPUs that &lt;code&gt;node_exporter&lt;/code&gt; is running on (ie &lt;a href=&#34;https://golang.org/pkg/runtime/#NumCPU&#34;&gt;&lt;code&gt;runtime.NumCPU&lt;/code&gt;&lt;/a&gt;. If this is insufficient (e.g. if you run &lt;code&gt;node_exporter&lt;/code&gt; with its CPU affinity set to specific CPUs), you can specify a list of alternate CPUs by using the &lt;code&gt;--collector.perf.cpus&lt;/code&gt; flag. For example, to collect metrics on CPUs 2-6, you would specify: &lt;code&gt;--collector.perf --collector.perf.cpus=2-6&lt;/code&gt;. The CPU configuration is zero indexed and can also take a stride value; e.g. &lt;code&gt;--collector.perf --collector.perf.cpus=1-10:5&lt;/code&gt; would collect on CPUs 1, 5, and 10.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;perf&lt;/code&gt; collector is also able to collect &lt;a href=&#34;https://www.kernel.org/doc/html/latest/core-api/tracepoint.html&#34;&gt;tracepoint&lt;/a&gt; counts when using the &lt;code&gt;--collector.perf.tracepoint&lt;/code&gt; flag. Tracepoints can be found using &lt;a href=&#34;http://man7.org/linux/man-pages/man1/perf.1.html&#34;&gt;&lt;code&gt;perf list&lt;/code&gt;&lt;/a&gt; or from debugfs. And example usage of this would be &lt;code&gt;--collector.perf.tracepoint=&#34;sched:sched_process_exec&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Sysctl Collector&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;sysctl&lt;/code&gt; collector can be enabled with &lt;code&gt;--collector.sysctl&lt;/code&gt;. It supports exposing numeric sysctl values as metrics using the &lt;code&gt;--collector.sysctl.include&lt;/code&gt; flag and string values as info metrics by using the &lt;code&gt;--collector.sysctl.include-info&lt;/code&gt; flag. The flags can be repeated. For sysctl with multiple numeric values, an optional mapping can be given to expose each value as its own metric. Otherwise an &lt;code&gt;index&lt;/code&gt; label is used to identify the different fields.&lt;/p&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;h5&gt;Numeric values&lt;/h5&gt; &#xA;&lt;h6&gt;Single values&lt;/h6&gt; &#xA;&lt;p&gt;Using &lt;code&gt;--collector.sysctl.include=vm.user_reserve_kbytes&lt;/code&gt;: &lt;code&gt;vm.user_reserve_kbytes = 131072&lt;/code&gt; -&amp;gt; &lt;code&gt;node_sysctl_vm_user_reserve_kbytes 131072&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Multiple values&lt;/h6&gt; &#xA;&lt;p&gt;A sysctl can contain multiple values, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;net.ipv4.tcp_rmem = 4096&#x9;131072&#x9;6291456&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;code&gt;--collector.sysctl.include=net.ipv4.tcp_rmem&lt;/code&gt; the collector will expose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;node_sysctl_net_ipv4_tcp_rmem{index=&#34;0&#34;} 4096&#xA;node_sysctl_net_ipv4_tcp_rmem{index=&#34;1&#34;} 131072&#xA;node_sysctl_net_ipv4_tcp_rmem{index=&#34;2&#34;} 6291456&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the indexes have defined meaning like in this case, the values can be mapped to multiple metrics by appending the mapping to the --collector.sysctl.include flag: Using &lt;code&gt;--collector.sysctl.include=net.ipv4.tcp_rmem:min,default,max&lt;/code&gt; the collector will expose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;node_sysctl_net_ipv4_tcp_rmem_min 4096&#xA;node_sysctl_net_ipv4_tcp_rmem_default 131072&#xA;node_sysctl_net_ipv4_tcp_rmem_max 6291456&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;String values&lt;/h5&gt; &#xA;&lt;p&gt;String values need to be exposed as info metric. The user selects them by using the &lt;code&gt;--collector.sysctl.include-info&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h6&gt;Single values&lt;/h6&gt; &#xA;&lt;p&gt;&lt;code&gt;kernel.core_pattern = core&lt;/code&gt; -&amp;gt; &lt;code&gt;node_sysctl_info{key=&#34;kernel.core_pattern_info&#34;, value=&#34;core&#34;} 1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Multiple values&lt;/h6&gt; &#xA;&lt;p&gt;Given the following sysctl:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kernel.seccomp.actions_avail = kill_process kill_thread trap errno trace log allow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setting &lt;code&gt;--collector.sysctl.include-info=kernel.seccomp.actions_avail&lt;/code&gt; will yield:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;node_sysctl_info{key=&#34;kernel.seccomp.actions_avail&#34;, index=&#34;0&#34;, value=&#34;kill_process&#34;} 1&#xA;node_sysctl_info{key=&#34;kernel.seccomp.actions_avail&#34;, index=&#34;1&#34;, value=&#34;kill_thread&#34;} 1&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Textfile Collector&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;textfile&lt;/code&gt; collector is similar to the &lt;a href=&#34;https://github.com/prometheus/pushgateway&#34;&gt;Pushgateway&lt;/a&gt;, in that it allows exporting of statistics from batch jobs. It can also be used to export static metrics, such as what role a machine has. The Pushgateway should be used for service-level metrics. The &lt;code&gt;textfile&lt;/code&gt; module is for metrics that are tied to a machine.&lt;/p&gt; &#xA;&lt;p&gt;To use it, set the &lt;code&gt;--collector.textfile.directory&lt;/code&gt; flag on the &lt;code&gt;node_exporter&lt;/code&gt; commandline. The collector will parse all files in that directory matching the glob &lt;code&gt;*.prom&lt;/code&gt; using the &lt;a href=&#34;http://prometheus.io/docs/instrumenting/exposition_formats/&#34;&gt;text format&lt;/a&gt;. &lt;strong&gt;Note:&lt;/strong&gt; Timestamps are not supported.&lt;/p&gt; &#xA;&lt;p&gt;To atomically push completion time for a cron job:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo my_batch_job_completion_time $(date +%s) &amp;gt; /path/to/directory/my_batch_job.prom.$$&#xA;mv /path/to/directory/my_batch_job.prom.$$ /path/to/directory/my_batch_job.prom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To statically set roles for a machine using labels:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#39;role{role=&#34;application_server&#34;} 1&#39; &amp;gt; /path/to/directory/role.prom.$$&#xA;mv /path/to/directory/role.prom.$$ /path/to/directory/role.prom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Filtering enabled collectors&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;node_exporter&lt;/code&gt; will expose all metrics from enabled collectors by default. This is the recommended way to collect metrics to avoid errors when comparing metrics of different families.&lt;/p&gt; &#xA;&lt;p&gt;For advanced use the &lt;code&gt;node_exporter&lt;/code&gt; can be passed an optional list of collectors to filter metrics. The &lt;code&gt;collect[]&lt;/code&gt; parameter may be used multiple times. In Prometheus configuration you can use this syntax under the &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#%3Cscrape_config%3E&#34;&gt;scrape config&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  params:&#xA;    collect[]:&#xA;      - foo&#xA;      - bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can be useful for having different Prometheus servers collect specific metrics from nodes.&lt;/p&gt; &#xA;&lt;h2&gt;Development building and running&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/dl/&#34;&gt;Go compiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RHEL/CentOS: &lt;code&gt;glibc-static&lt;/code&gt; package.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/prometheus/node_exporter.git&#xA;cd node_exporter&#xA;make build&#xA;./node_exporter &amp;lt;flags&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see all available configuration flags:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./node_exporter -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running tests&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TLS endpoint&lt;/h2&gt; &#xA;&lt;p&gt;** EXPERIMENTAL **&lt;/p&gt; &#xA;&lt;p&gt;The exporter supports TLS via a new web configuration file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;./node_exporter --web.config=web-config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/prometheus/exporter-toolkit/raw/v0.1.0/https/README.md&#34;&gt;exporter-toolkit https package&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/beats</title>
    <updated>2022-09-29T01:34:07Z</updated>
    <id>tag:github.com,2022-09-29:/elastic/beats</id>
    <link href="https://github.com/elastic/beats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐠 Beats - Lightweight shippers for Elasticsearch &amp; Logstash&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/job/main/&#34;&gt;&lt;img src=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/job/main/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/elastic/beats&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/elastic/beats&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://houndci.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg?sanitize=true&#34; alt=&#34;Reviewed by Hound&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Beats - The Lightweight Shippers of the Elastic Stack&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.elastic.co/beats&#34;&gt;Beats&lt;/a&gt; are lightweight data shippers, written in Go, that you install on your servers to capture all sorts of operational data (think of logs, metrics, or network packet data). The Beats send the operational data to Elasticsearch, either directly or via Logstash, so it can be visualized with Kibana.&lt;/p&gt; &#xA;&lt;p&gt;By &#34;lightweight&#34;, we mean that Beats have a small installation footprint, use limited system resources, and have no runtime dependencies.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains &lt;a href=&#34;https://github.com/elastic/beats/tree/main/libbeat&#34;&gt;libbeat&lt;/a&gt;, our Go framework for creating Beats, and all the officially supported Beats:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Beat&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/auditbeat&#34;&gt;Auditbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Collect your Linux audit framework data and monitor the integrity of your files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/filebeat&#34;&gt;Filebeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tails and ships log files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/x-pack/functionbeat&#34;&gt;Functionbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Read and ships events from serverless infrastructure.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/heartbeat&#34;&gt;Heartbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ping remote services for availability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/metricbeat&#34;&gt;Metricbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fetches sets of metrics from the operating system and services&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/packetbeat&#34;&gt;Packetbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Monitors the network and applications by sniffing packets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/winlogbeat&#34;&gt;Winlogbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fetches and ships Windows Event logs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/x-pack/osquerybeat&#34;&gt;Osquerybeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs Osquery and manages interraction with it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;In addition to the above Beats, which are officially supported by &lt;a href=&#34;https://elastic.co&#34;&gt;Elastic&lt;/a&gt;, the community has created a set of other Beats that make use of libbeat but live outside of this Github repository. We maintain a list of community Beats &lt;a href=&#34;https://www.elastic.co/guide/en/beats/libbeat/master/community-beats.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for each of the Beats on the &lt;a href=&#34;https://www.elastic.co/guide/&#34;&gt;elastic.co site&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/libbeat/current/index.html&#34;&gt;Beats platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/auditbeat/current/index.html&#34;&gt;Auditbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/filebeat/current/index.html&#34;&gt;Filebeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/functionbeat/current/index.html&#34;&gt;Functionbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/heartbeat/current/index.html&#34;&gt;Heartbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/metricbeat/current/index.html&#34;&gt;Metricbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/packetbeat/current/index.html&#34;&gt;Packetbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/winlogbeat/current/index.html&#34;&gt;Winlogbeat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation and Getting Started information for the Elastic Agent&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for the Elastic Agent on the &lt;a href=&#34;https://www.elastic.co/downloads/elastic-agent&#34;&gt;elastic.co site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;If you need help or hit an issue, please start by opening a topic on our &lt;a href=&#34;https://discuss.elastic.co/c/beats&#34;&gt;discuss forums&lt;/a&gt;. Please note that we reserve GitHub tickets for confirmed bugs and enhancement requests.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;You can download pre-compiled Beats binaries, as well as packages for the supported platforms, from &lt;a href=&#34;https://www.elastic.co/downloads/beats&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love working with you! You can help make the Beats better in many ways: report issues, help us reproduce issues, fix bugs, add functionality, or even create your own Beat.&lt;/p&gt; &#xA;&lt;p&gt;Please start by reading our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/beats/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Building Beats from the Source&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/beats/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for information about setting up your dev environment to build Beats from the source.&lt;/p&gt; &#xA;&lt;h2&gt;Snapshots&lt;/h2&gt; &#xA;&lt;p&gt;For testing purposes, we generate snapshot builds that you can find &lt;a href=&#34;https://artifacts-api.elastic.co/v1/search/8.0-SNAPSHOT/&#34;&gt;here&lt;/a&gt;. Please be aware that these are built on top of main and are not meant for production.&lt;/p&gt; &#xA;&lt;h2&gt;CI&lt;/h2&gt; &#xA;&lt;h3&gt;PR Comments&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to trigger some jobs by putting a comment on a GitHub PR. (This service is only available for users affiliated with Elastic and not for open-source contributors.)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/&#34;&gt;beats&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;jenkins run the tests please&lt;/code&gt; or &lt;code&gt;jenkins run tests&lt;/code&gt; or &lt;code&gt;/test&lt;/code&gt; will kick off a default build.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test macos&lt;/code&gt; will kick off a default build with also the &lt;code&gt;macos&lt;/code&gt; stages.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test &amp;lt;beat-name&amp;gt;&lt;/code&gt; will kick off the default build for the given PR in addition to the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt; build itself.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test &amp;lt;beat-name&amp;gt; for macos&lt;/code&gt; will kick off a default build with also the &lt;code&gt;macos&lt;/code&gt; stage for the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/apm-beats-update/&#34;&gt;apm-beats-update&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/run apm-beats-update&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/packaging/&#34;&gt;apm-beats-packaging&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/package&lt;/code&gt; or &lt;code&gt;/packaging&lt;/code&gt; will kick of a build to generate the packages for beats.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats-tester/&#34;&gt;apm-beats-tester&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/beats-tester&lt;/code&gt; will kick of a build to validate the generated packages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PR Labels&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s possible to configure the build on a GitHub PR by labelling the PR with the below labels&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt; to force the following builds to run the stages for the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;macOS&lt;/code&gt; to force the following builds to run the &lt;code&gt;macos&lt;/code&gt; stages.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>knative/serving</title>
    <updated>2022-09-29T01:34:07Z</updated>
    <id>tag:github.com,2022-09-29:/knative/serving</id>
    <link href="https://github.com/knative/serving" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kubernetes-based, scale-to-zero, request-driven compute&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Knative Serving&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/knative/serving&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go.dev-reference-007d9c?logo=go&amp;amp;logoColor=white&#34; alt=&#34;go.dev reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/knative/serving&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/knative/serving&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/knative/serving/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-pre/knative/serving.svg?sort=semver&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/knative/serving/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/knative/serving.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://knative.slack.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/knative/serving&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/knative/serving/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5913&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5913/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Knative Serving builds on Kubernetes to support deploying and serving of applications and functions as serverless containers. Serving is easy to get started with and scales to support advanced scenarios.&lt;/p&gt; &#xA;&lt;p&gt;The Knative Serving project provides middleware primitives that enable:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rapid deployment of serverless containers&lt;/li&gt; &#xA; &lt;li&gt;Automatic scaling up and down to zero&lt;/li&gt; &#xA; &lt;li&gt;Routing and network programming&lt;/li&gt; &#xA; &lt;li&gt;Point-in-time snapshots of deployed code and configurations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For documentation on using Knative Serving, see the &lt;a href=&#34;https://www.knative.dev/docs/serving/&#34;&gt;serving section&lt;/a&gt; of the &lt;a href=&#34;https://www.knative.dev/docs&#34;&gt;Knative documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For documentation on the Knative Serving specification, see the &lt;a href=&#34;https://github.com/knative/serving/tree/main/docs&#34;&gt;docs&lt;/a&gt; folder of this repository.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in contributing, see &lt;a href=&#34;https://raw.githubusercontent.com/knative/serving/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/knative/serving/main/DEVELOPMENT.md&#34;&gt;DEVELOPMENT.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>