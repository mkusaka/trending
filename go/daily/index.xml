<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-13T01:43:17Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>robfig/cron</title>
    <updated>2022-07-13T01:43:17Z</updated>
    <id>tag:github.com,2022-07-13:/robfig/cron</id>
    <link href="https://github.com/robfig/cron" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a cron library for go&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://godoc.org/github.com/robfig/cron&#34;&gt;&lt;img src=&#34;http://godoc.org/github.com/robfig/cron?status.png&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/robfig/cron&#34;&gt;&lt;img src=&#34;https://travis-ci.org/robfig/cron.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;cron&lt;/h1&gt; &#xA;&lt;p&gt;Cron V3 has been released!&lt;/p&gt; &#xA;&lt;p&gt;To download the specific tagged release, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get github.com/robfig/cron/v3@v3.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Import it in your program as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;github.com/robfig/cron/v3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It requires Go 1.11 or later due to usage of Go Modules.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the documentation here: &lt;a href=&#34;http://godoc.org/github.com/robfig/cron&#34;&gt;http://godoc.org/github.com/robfig/cron&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The rest of this document describes the the advances in v3 and a list of breaking changes for users that wish to upgrade from an earlier version.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading to v3 (June 2019)&lt;/h2&gt; &#xA;&lt;p&gt;cron v3 is a major upgrade to the library that addresses all outstanding bugs, feature requests, and rough edges. It is based on a merge of master which contains various fixes to issues found over the years and the v2 branch which contains some backwards-incompatible features like the ability to remove cron jobs. In addition, v3 adds support for Go Modules, cleans up rough edges like the timezone support, and fixes a number of bugs.&lt;/p&gt; &#xA;&lt;p&gt;New features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for Go modules. Callers must now import this library as &lt;code&gt;github.com/robfig/cron/v3&lt;/code&gt;, instead of &lt;code&gt;gopkg.in/...&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fixed bugs:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0f01e6b parser: fix combining of Dow and Dom (#70)&lt;/li&gt; &#xA;   &lt;li&gt;dbf3220 adjust times when rolling the clock forward to handle non-existent midnight (#157)&lt;/li&gt; &#xA;   &lt;li&gt;eeecf15 spec_test.go: ensure an error is returned on 0 increment (#144)&lt;/li&gt; &#xA;   &lt;li&gt;70971dc cron.Entries(): update request for snapshot to include a reply channel (#97)&lt;/li&gt; &#xA;   &lt;li&gt;1cba5e6 cron: fix: removing a job causes the next scheduled job to run too late (#206)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Standard cron spec parsing by default (first field is &#34;minute&#34;), with an easy way to opt into the seconds field (quartz-compatible). Although, note that the year field (optional in Quartz) is not supported.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Extensible, key/value logging via an interface that complies with the &lt;a href=&#34;https://github.com/go-logr/logr&#34;&gt;https://github.com/go-logr/logr&lt;/a&gt; project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The new Chain &amp;amp; JobWrapper types allow you to install &#34;interceptors&#34; to add cross-cutting behavior like the following:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Recover any panics from jobs&lt;/li&gt; &#xA;   &lt;li&gt;Delay a job&#39;s execution if the previous run hasn&#39;t completed yet&lt;/li&gt; &#xA;   &lt;li&gt;Skip a job&#39;s execution if the previous run hasn&#39;t completed yet&lt;/li&gt; &#xA;   &lt;li&gt;Log each job&#39;s invocations&lt;/li&gt; &#xA;   &lt;li&gt;Notification when jobs are completed&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is backwards incompatible with both v1 and v2. These updates are required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The v1 branch accepted an optional seconds field at the beginning of the cron spec. This is non-standard and has led to a lot of confusion. The new default parser conforms to the standard as described by &lt;a href=&#34;https://en.wikipedia.org/wiki/Cron&#34;&gt;the Cron wikipedia page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;UPDATING: To retain the old behavior, construct your Cron with a custom parser:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Seconds field, required&#xA;cron.New(cron.WithSeconds())&#xA;&#xA;// Seconds field, optional&#xA;cron.New(cron.WithParser(cron.NewParser(&#xA;&#x9;cron.SecondOptional | cron.Minute | cron.Hour | cron.Dom | cron.Month | cron.Dow | cron.Descriptor,&#xA;)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The Cron type now accepts functional options on construction rather than the previous ad-hoc behavior modification mechanisms (setting a field, calling a setter).&lt;/p&gt; &lt;p&gt;UPDATING: Code that sets Cron.ErrorLogger or calls Cron.SetLocation must be updated to provide those values on construction.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CRON_TZ is now the recommended way to specify the timezone of a single schedule, which is sanctioned by the specification. The legacy &#34;TZ=&#34; prefix will continue to be supported since it is unambiguous and easy to do so.&lt;/p&gt; &lt;p&gt;UPDATING: No update is required.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;By default, cron will no longer recover panics in jobs that it runs. Recovering can be surprising (see issue #192) and seems to be at odds with typical behavior of libraries. Relatedly, the &lt;code&gt;cron.WithPanicLogger&lt;/code&gt; option has been removed to accommodate the more general JobWrapper type.&lt;/p&gt; &lt;p&gt;UPDATING: To opt into panic recovery and configure the panic logger:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;cron.New(cron.WithChain(&#xA;  cron.Recover(logger),  // or use cron.DefaultLogger&#xA;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In adding support for &lt;a href=&#34;https://github.com/go-logr/logr&#34;&gt;https://github.com/go-logr/logr&lt;/a&gt;, &lt;code&gt;cron.WithVerboseLogger&lt;/code&gt; was removed, since it is duplicative with the leveled logging.&lt;/p&gt; &lt;p&gt;UPDATING: Callers should use &lt;code&gt;WithLogger&lt;/code&gt; and specify a logger that does not discard &lt;code&gt;Info&lt;/code&gt; logs. For convenience, one is provided that wraps &lt;code&gt;*log.Logger&lt;/code&gt;:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;cron.New(&#xA;  cron.WithLogger(cron.VerbosePrintfLogger(logger)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Background - Cron spec format&lt;/h3&gt; &#xA;&lt;p&gt;There are two cron spec formats in common usage:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &#34;standard&#34; cron format, described on &lt;a href=&#34;https://en.wikipedia.org/wiki/Cron&#34;&gt;the Cron wikipedia page&lt;/a&gt; and used by the cron Linux system utility.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The cron format used by &lt;a href=&#34;http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/tutorial-lesson-06.html&#34;&gt;the Quartz Scheduler&lt;/a&gt;, commonly used for scheduled jobs in Java software&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The original version of this package included an optional &#34;seconds&#34; field, which made it incompatible with both of these formats. Now, the &#34;standard&#34; format is the default format accepted, and the Quartz format is opt-in.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lcvvvv/kscan</title>
    <updated>2022-07-13T01:43:17Z</updated>
    <id>tag:github.com,2022-07-13:/lcvvvv/kscan</id>
    <link href="https://github.com/lcvvvv/kscan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kscan是一款纯go开发的全方位扫描器，具备端口扫描、协议检测、指纹识别，暴力破解等功能。支持协议1200+，协议指纹10000+，应用指纹2000+，暴力破解协议10余种。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kscan-简单的资产测绘工具&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lcvvvv/kscan&#34;&gt;&lt;img alt=&#34;Release&#34; src=&#34;https://img.shields.io/badge/golang-1.6+-9cf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lcvvvv/kscan&#34;&gt;&lt;img alt=&#34;Release&#34; src=&#34;https://img.shields.io/badge/kscan-1.76-ff69b4&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lcvvvv/kscan&#34;&gt;&lt;img alt=&#34;Release&#34; src=&#34;https://img.shields.io/badge/LICENSE-GPL-important&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/lcvvvv/kscan?color=success&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/lcvvvv/kscan&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/lcvvvv/kscan/total?color=blueviolet&#34; alt=&#34;GitHub all release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lc~~~~vvvv/kscan/raw/master/README.md&#34;&gt;[中文 Readme]&lt;/a&gt; | &lt;a href=&#34;https://github.com/lcvvvv/kscan/raw/master/README_ENG.md&#34;&gt;[English Readme]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;0 免责声明（&lt;del&gt;作者没有参加XX行动，别溯了&lt;/del&gt;）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;本工具仅面向合法授权的企业安全建设行为与个人学习行为，如您需要测试本工具的可用性，请自行搭建靶机环境。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。请勿对非授权目标进行扫描。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果发现上述禁止行为，我们将保留追究您法律责任的权利。&lt;/p&gt; &#xA;&lt;p&gt;如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任。&lt;/p&gt; &#xA;&lt;p&gt;在安装并使用本工具前，请您务必审慎阅读、充分理解各条款内容。&lt;/p&gt; &#xA;&lt;p&gt;除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。&lt;/p&gt; &#xA;&lt;h2&gt;1 简介&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt; _   __&#xA;|#| /#/    轻量级资产测绘工具 by：kv2&#x9;&#xA;|#|/#/   _____  _____     *     _   _&#xA;|#.#/   /Edge/ /Forum|   /#\   |#\ |#|&#xA;|##|   |#|___  |#|      /###\  |##\|#|&#xA;|#.#\   \#####\|#|     /#/_\#\ |#.#.#|&#xA;|#|\#\ /\___|#||#|____/#/###\#\|#|\##|&#xA;|#| \#\\#####/ \#####/#/     \#\#| \#|&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kscan是一款纯go开发的全方位扫描器，具备端口扫描、协议检测、指纹识别，暴力破解等功能。支持协议1200+，协议指纹10000+，应用指纹2000+，暴力破解协议10余种。&lt;/p&gt; &#xA;&lt;h2&gt;2 写在前面&lt;/h2&gt; &#xA;&lt;p&gt;目前类似的资产扫描、指纹识别、漏洞检测的工具其实已经非常多了，也不乏有很棒的工具，但是Kscan其实有很多不同的想法。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Kscan希望能够接受多种输入格式，无需在使用之前对扫描对象进行分类，比如区分为IP，还是URL地址等，这对于使用者来说无疑是徒增工作量，所有的条目，均能正常输入和识别，若是URL地址，则会保留路径进行检测，若只是IP:PORT，则会优先对该端口进行协议识别。目前Kscan支持三种输入方式（-t,--target|-f,--fofa|--spy）。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Kscan没有为了追求效率，而根据端口号与常见协议进行比对来确认端口协议，也不是只检测WEB资产，在这方面，Kscan则更加看重准确性和全面性，只有高准确性的协议识别，才能为后续的应用层识别，提供良好的检测条件。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Kscan不是采用模块化的方式做单纯的功能堆叠，比如某个模块单独获取标题，某个模块单独获取SMB信息等等，独立运行，独立输出，而是以端口为单位输出资产信息，比如端口协议为HTTP，则会自动化进行后续的指纹识别、标题获取，端口协议为RPC，则会尝试获取主机名等等。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lcvvvv/kscan/master/assets/kscan%E9%80%BB%E8%BE%91%E5%9B%BE.drawio.png&#34; alt=&#34;kscan逻辑图.drawio&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;3 编译手册&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lcvvvv/kscan/wiki/%E7%BC%96%E8%AF%91&#34;&gt;编译手册&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;4 开始吧&lt;/h2&gt; &#xA;&lt;p&gt;Kscan目前具备3种输入目标的方式&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;-t/--target 可添加--check参数，只对指定的目标端口进行指纹识别，否则将对目标进行端口扫描和指纹识别&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;IP地址：114.114.114.114&#xA;IP地址段：114.114.114.114-115.115.115.115&#xA;URL地址：https://www.baidu.com&#xA;文件地址：file:/tmp/target.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;--spy 可添加--scan参数可对存活C段进行端口扫描和指纹识别，否则将只检测存活的网段&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;[空]：将检测本机IP地址，对本机IP所在B段进行探测&#xA;[all]：将对所有私网地址（192.168/172.32/10等）进行探测&#xA;IP地址：将对指定IP地址所在B段进行探测&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;-f/--fofa 可添加--check将对检索结果进行存活性验证，添加--scan参数将对检索结果进行端口扫描和指纹识别，否则将只返回fofa检索结果&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;fofa搜索关键字：将直接返回fofa搜索结果&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;5 使用方法&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;usage: kscan [-h,--help,--fofa-syntax] (-t,--target,-f,--fofa,--touch,--spy) [-p,--port|--top] [-o,--output] [-oJ] [--proxy] [--threads] [--path] [--host] [--timeout] [-Pn] [-Cn] [-sV] [--check] [--encoding] [--hydra] [hydra options] [fofa options]&#xA;&#xA;&#xA;optional arguments:&#xA;  -h , --help     show this help message and exit&#xA;  -f , --fofa     从fofa获取检测对象，需提前配置环境变量:FOFA_EMAIL、FOFA_KEY&#xA;  -t , --target   指定探测对象：&#xA;                  IP地址：114.114.114.114&#xA;                  IP地址段：114.114.114.114/24,不建议子网掩码小于12&#xA;                  IP地址段：114.114.114.114-115.115.115.115&#xA;                  URL地址：https://www.baidu.com&#xA;                  文件地址：file:/tmp/target.txt&#xA;  --spy           网段探测模式，此模式下将自动探测主机可达的内网网段可接收参数为：&#xA;                  (空)、192、10、172、all、指定IP地址(将探测该IP地址B段存活网关)&#xA;  --check         针对目标地址做指纹识别，仅不会进行端口探测&#xA;  --scan          将针对--fofa、--spy提供的目标对象，进行端口扫描和指纹识别&#xA;  --touch         获取指定端口返回包，可以使用此次参数获取返回包，完善指纹库，格式为：IP:PORT&#xA;  -p , --port     扫描指定端口，默认会扫描TOP400，支持：80,8080,8088-8090&#xA;  -o , --output   将扫描结果保存到文件&#xA;  -oJ             将扫描结果使用json格式保存到文件&#xA;  -Pn          &#x9;  使用此参数后，将不会进行智能存活性探测，现在默认会开启智能存活性探测，提高效率&#xA;  -Cn             使用此参数后，控制台输出结果将不会带颜色&#xA;  -Dn             使用此参数后，将关闭CDN识别功能&#xA;  -sV             使用此参数后，将对所有端口进行全探针探测，此参数极度影响效率，慎用！&#xA;  --top           扫描经过筛选处理的常见端口TopX，最高支持1000个，默认为TOP400&#xA;  --proxy         设置代理(socks5|socks4|https|http)://IP:Port&#xA;  --threads       线程参数,默认线程100,最大值为2048&#xA;  --path          指定请求访问的目录，只支持单个目录&#xA;  --host          指定所有请求的头部Host值&#xA;  --timeout       设置超时时间&#xA;  --encoding      设置终端输出编码，可指定为：gb2312、utf-8&#xA;  --match         对资产返回banner进行检索，存在关键字的，才会显示，否则不会显示&#xA;  --hydra         自动化爆破支持协议：ssh,rdp,ftp,smb,mysql,mssql,oracle,postgresql,mongodb,redis,默认会开启全部&#xA;hydra options:&#xA;   --hydra-user   自定义hydra爆破用户名:username or user1,user2 or file:username.txt&#xA;   --hydra-pass   自定义hydra爆破密码:password or pass1,pass2 or file:password.txt&#xA;                  若密码中存在使用逗号的情况，则使用\,进行转义，其他符号无需转义&#xA;   --hydra-update 自定义用户名、密码模式，若携带此参数，则为新增模式，会将用户名和密码补充在默认字典后面。否则将替换默认字典。&#xA;   --hydra-mod    指定自动化暴力破解模块:rdp or rdp,ssh,smb&#xA;fofa options:&#xA;   --fofa-syntax  将获取fofa搜索语法说明&#xA;   --fofa-size    将设置fofa返回条目数，默认100条&#xA;   --fofa-fix-keyword 修饰keyword，该参数中的{}最终会替换成-f参数的值&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;功能不复杂，其他的自行探索&lt;/p&gt; &#xA;&lt;h2&gt;6 演示&lt;/h2&gt; &#xA;&lt;h3&gt;6.1 端口扫描模式&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lcvvvv/kscan/master/assets/Kscan_v1.6/WechatIMG986.png&#34; alt=&#34;WechatIMG986&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6.2 存活网段探测&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lcvvvv/kscan/master/assets/Kscan_v1.6/WechatIMG988.png&#34; alt=&#34;WechatIMG988&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6.3 Fofa结果检索&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lcvvvv/kscan/master/assets/Kscan_v1.6/WechatIMG989.png&#34; alt=&#34;WechatIMG989&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6.3 暴力破解&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lcvvvv/kscan/master/assets/Kscan_v1.6/WechatIMG996.png&#34; alt=&#34;WechatIMG996&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lcvvvv/kscan/master/assets/Kscan_v1.6/WechatIMG1018.png&#34; alt=&#34;WechatIMG996&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6.4 CDN检测、归属地识别&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lcvvvv/kscan/master/assets/kscan_v1.7/iShot2022-04-24_18.23.41.png&#34; alt=&#34;iShot2022-04-24_18.23.41&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;7 特别感谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/EdgeSecurityTeam&#34;&gt;EdgeSecurityTeam&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dr0op/bufferfly&#34;&gt;bufferfly&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/EdgeSecurityTeam/EHole&#34;&gt;EHole(棱洞)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nmap/nmap/&#34;&gt;NMAP&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tomatome/grdp/&#34;&gt;grdp&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shadow1ng/fscan&#34;&gt;fscan&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zhzyker/dismap&#34;&gt;dismap&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zu1k/nali&#34;&gt;nali&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;8 文末&lt;/h2&gt; &#xA;&lt;p&gt;Github项目地址（BUG、需求、规则欢迎提交）: &lt;a href=&#34;https://github.com/lcvvvv/kscan&#34;&gt;https://github.com/lcvvvv/kscan&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nats-io/nats-server</title>
    <updated>2022-07-13T01:43:17Z</updated>
    <id>tag:github.com,2022-07-13:/nats-io/nats-server</id>
    <link href="https://github.com/nats-io/nats-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High-Performance server for NATS.io, the cloud and edge native messaging system.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nats-io/nats-server/main/logos/nats-server.png&#34; width=&#34;300&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nats.io&#34;&gt;NATS&lt;/a&gt; is a simple, secure and performant communications system for digital systems, services and devices. NATS is part of the Cloud Native Computing Foundation (&lt;a href=&#34;https://cncf.io&#34;&gt;CNCF&lt;/a&gt;). NATS has over &lt;a href=&#34;https://nats.io/download/&#34;&gt;40 client language implementations&lt;/a&gt;, and its server can run on-premise, in the cloud, at the edge, and even on a Raspberry Pi. NATS can secure and simplify design and operation of modern distributed systems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache2-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/github/nats-io/nats-server&#34;&gt;&lt;img src=&#34;https://travis-ci.com/nats-io/nats-server.svg?branch=main&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nats-io/nats-server/releases/tag/v2.8.4&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-v2.8.4-1eb0fc.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/natsio/shared_invite/zt-41e6tnmb-qCt63606MKR1YxIHZf4ICA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20slack-green&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/nats-io/nats-server?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/nats-io/nats-server/badge.svg?branch=main&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/_/nats&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/_/nats.svg?sanitize=true&#34; alt=&#34;Docker Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1895&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1895/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.nats.io&#34;&gt;Official documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.nats.io/reference/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://www.youtube.com/watch?v=sm63oAVPqAM&#34;&gt;a video overview of NATS&lt;/a&gt; to learn more about its origin story and design philosophy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/nats_io&#34;&gt;Twitter&lt;/a&gt;: Follow us on Twitter!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/natsio&#34;&gt;Google Groups&lt;/a&gt;: Where you can ask questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://natsio.slack.com&#34;&gt;Slack&lt;/a&gt;: Click &lt;a href=&#34;https://slack.nats.io&#34;&gt;here&lt;/a&gt; to join. You can ask question to our maintainers and to the rich and active community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in contributing to NATS, read about our...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nats.io/community/#contribute&#34;&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nats-io&#34;&gt;Report issues or propose Pull Requests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The NATS product roadmap can be found &lt;a href=&#34;https://nats.io/about/#roadmap&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;h3&gt;Security Audit&lt;/h3&gt; &#xA;&lt;p&gt;A third party security audit was performed by Cure53, you can see the full report &lt;a href=&#34;https://github.com/nats-io/nats-general/raw/master/reports/Cure53_NATS_Audit.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Reporting Security Vulnerabilities&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve found a vulnerability or a potential vulnerability in the NATS server, please let us know at &lt;a href=&#34;mailto:security@nats.io&#34;&gt;nats-security&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Unless otherwise noted, the NATS source files are distributed under the Apache Version 2.0 license found in the LICENSE file.&lt;/p&gt;</summary>
  </entry>
</feed>