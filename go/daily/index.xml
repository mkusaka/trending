<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-31T01:31:18Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shizunge/endlessh-go</title>
    <updated>2024-03-31T01:31:18Z</updated>
    <id>tag:github.com,2024-03-31:/shizunge/endlessh-go</id>
    <link href="https://github.com/shizunge/endlessh-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A golang implementation of endlessh exporting Prometheus metrics, visualized by a Grafana dashboard.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;endlessh-go&lt;/h1&gt; &#xA;&lt;p&gt;A golang implementation of &lt;a href=&#34;https://nullprogram.com/blog/2019/03/22/&#34;&gt;endlessh&lt;/a&gt; exporting Prometheus metrics, visualized by a Grafana dashboard.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/shizunge/endlessh-go/raw/main/dashboard/screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nullprogram.com/blog/2019/03/22/&#34;&gt;Endlessh&lt;/a&gt; is a great idea that not only blocks the brute force SSH attacks, but also wastes attackers time as a kind of counter-attack. Besides trapping the attackers, I also want to visualize the Geolocations and other statistics of the sources of attacks. Unfortunately the wonderful original &lt;a href=&#34;https://github.com/skeeto/endlessh&#34;&gt;C implementation of endlessh&lt;/a&gt; only provides text based log, but I do not like the solution that writes extra scripts to parse the log outputs, then exports the results to a dashboard, because it would introduce extra layers in my current setup and it would depend on the format of the text log file rather than some structured data. Thus I create this golang implementation of endlessh to export &lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt; metrics and a &lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; dashboard to visualize them.&lt;/p&gt; &#xA;&lt;p&gt;If you want a dashboard of sources of attacks and do not mind the endlessh server, besides trapping the attackers, does extra things including: translating IP to Geohash, exporting Prometheus metrics, and using more memory (about 10MB), this is the solution for you.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repo then build from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go build .&#xA;./endlessh-go &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use the &lt;a href=&#34;https://hub.docker.com/r/shizunge/endlessh-go&#34;&gt;docker image&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -p 2222:2222 shizunge/endlessh-go -logtostderr -v=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It listens to port &lt;code&gt;2222&lt;/code&gt; by default.&lt;/p&gt; &#xA;&lt;p&gt;Then you can try to connect to the endlessh server. Your SSH client should hang there.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ssh -p 2222 localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want log like the &lt;a href=&#34;https://github.com/skeeto/endlessh&#34;&gt;C implementation&lt;/a&gt;, you need to set both CLI arguments &lt;code&gt;-logtostderr&lt;/code&gt; and &lt;code&gt;-v=1&lt;/code&gt;, then the log will go to stderr. You can set different log destinations via CLI arguments.&lt;/p&gt; &#xA;&lt;p&gt;Also check out &lt;a href=&#34;https://raw.githubusercontent.com/shizunge/endlessh-go/main/examples/README.md&#34;&gt;examples&lt;/a&gt; for the setup of the full stack.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;./endlessh-go --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of ./endlessh-go&#xA;  -alsologtostderr&#xA;        log to standard error as well as files&#xA;  -conn_type string&#xA;        Connection type. Possible values are tcp, tcp4, tcp6 (default &#34;tcp&#34;)&#xA;  -enable_prometheus&#xA;        Enable prometheus&#xA;  -geoip_supplier string&#xA;        Supplier to obtain Geohash of IPs. Possible values are &#34;off&#34;, &#34;ip-api&#34;, &#34;max-mind-db&#34; (default &#34;off&#34;)&#xA;  -host string&#xA;        SSH listening address (default &#34;0.0.0.0&#34;)&#xA;  -interval_ms int&#xA;        Message millisecond delay (default 1000)&#xA;  -line_length int&#xA;        Maximum banner line length (default 32)&#xA;  -log_backtrace_at value&#xA;        when logging hits line file:N, emit a stack trace&#xA;  -log_dir string&#xA;        If non-empty, write log files in this directory&#xA;  -log_link string&#xA;        If non-empty, add symbolic links in this directory to the log files&#xA;  -logbuflevel int&#xA;        Buffer log messages logged at this level or lower (-1 means don&#39;t buffer; 0 means buffer INFO only; ...). Has limited applicability on non-prod platforms.&#xA;  -logtostderr&#xA;        log to standard error instead of files&#xA;  -max_clients int&#xA;        Maximum number of clients (default 4096)&#xA;  -max_mind_db string&#xA;        Path to the MaxMind DB file.&#xA;  -port value&#xA;        SSH listening port. You may provide multiple -port flags to listen to multiple ports. (default &#34;2222&#34;)&#xA;  -prometheus_clean_unseen_seconds int&#xA;        Remove series if the IP is not seen for the given time. Set to 0 to disable. (default 0)&#xA;  -prometheus_entry string&#xA;        Entry point for prometheus (default &#34;metrics&#34;)&#xA;  -prometheus_host string&#xA;        The address for prometheus (default &#34;0.0.0.0&#34;)&#xA;  -prometheus_port string&#xA;        The port for prometheus (default &#34;2112&#34;)&#xA;  -stderrthreshold value&#xA;        logs at or above this threshold go to stderr (default 2)&#xA;  -v value&#xA;        log level for V logs&#xA;  -vmodule value&#xA;        comma-separated list of pattern=N settings for file-filtered logging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Metrics&lt;/h2&gt; &#xA;&lt;p&gt;Endlessh-go exports the following Prometheus metrics.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Metric&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;endlessh_client_open_count_total&lt;/td&gt; &#xA;   &lt;td&gt;count&lt;/td&gt; &#xA;   &lt;td&gt;Total number of clients that tried to connect to this host.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;endlessh_client_closed_count_total&lt;/td&gt; &#xA;   &lt;td&gt;count&lt;/td&gt; &#xA;   &lt;td&gt;Total number of clients that stopped connecting to this host.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;endlessh_sent_bytes_total&lt;/td&gt; &#xA;   &lt;td&gt;count&lt;/td&gt; &#xA;   &lt;td&gt;Total bytes sent to clients that tried to connect to this host.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;endlessh_trapped_time_seconds_total&lt;/td&gt; &#xA;   &lt;td&gt;count&lt;/td&gt; &#xA;   &lt;td&gt;Total seconds clients spent on endlessh.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;endlessh_client_open_count&lt;/td&gt; &#xA;   &lt;td&gt;count&lt;/td&gt; &#xA;   &lt;td&gt;Number of connections of clients. &lt;br&gt; Labels: &lt;br&gt; &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; &lt;code&gt;ip&lt;/code&gt;: Remote IP of the client &lt;/li&gt; &#xA;     &lt;li&gt; &lt;code&gt;local_port&lt;/code&gt;: Local port the program listens to &lt;/li&gt; &#xA;     &lt;li&gt; &lt;code&gt;country&lt;/code&gt;: Country of the IP &lt;/li&gt; &#xA;     &lt;li&gt; &lt;code&gt;location&lt;/code&gt;: Country, Region, and City &lt;/li&gt; &#xA;     &lt;li&gt; &lt;code&gt;geohash&lt;/code&gt;: Geohash of the location &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;endlessh_client_trapped_time_seconds&lt;/td&gt; &#xA;   &lt;td&gt;count&lt;/td&gt; &#xA;   &lt;td&gt;Seconds a client spends on endlessh. &lt;br&gt; Labels: &lt;br&gt; &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; &lt;code&gt;ip&lt;/code&gt;: Remote IP of the client &lt;/li&gt; &#xA;     &lt;li&gt; &lt;code&gt;local_port&lt;/code&gt;: Local port the program listens to &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The metrics is off by default, you can turn it via the CLI argument &lt;code&gt;-enable_prometheus&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It listens to port &lt;code&gt;2112&lt;/code&gt; and entry point is &lt;code&gt;/metrics&lt;/code&gt; by default. The port and entry point can be changed via CLI arguments.&lt;/p&gt; &#xA;&lt;p&gt;The endlessh-go server stores the geohash of attackers as a label on &lt;code&gt;endlessh_client_open_count&lt;/code&gt;, which is also off by default. You can turn it on via the CLI argument &lt;code&gt;-geoip_supplier&lt;/code&gt;. The endlessh-go uses service from &lt;a href=&#34;https://ip-api.com/&#34;&gt;ip-api&lt;/a&gt;, which may enforce a query rate and limit commercial use. Visit their website for their terms and policies.&lt;/p&gt; &#xA;&lt;p&gt;You could also use an offline GeoIP database from &lt;a href=&#34;https://www.maxmind.com&#34;&gt;MaxMind&lt;/a&gt; by setting &lt;code&gt;-geoip_supplier&lt;/code&gt; to &lt;em&gt;max-mind-db&lt;/em&gt; and &lt;code&gt;-max_mind_db&lt;/code&gt; to the path of the database file.&lt;/p&gt; &#xA;&lt;h2&gt;Dashboard&lt;/h2&gt; &#xA;&lt;p&gt;The dashboard requires Grafana 8.2.&lt;/p&gt; &#xA;&lt;p&gt;You can import the dashboard from Grafana.com using ID &lt;a href=&#34;https://grafana.com/grafana/dashboards/15156&#34;&gt;15156&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The dashboard visualizes data for the selected time range.&lt;/p&gt; &#xA;&lt;p&gt;The IP addresses are clickable and link you to the &lt;a href=&#34;https://www.arin.net/&#34;&gt;ARIN&lt;/a&gt; database.&lt;/p&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;p&gt;If you have any problems or questions, please contact me through a &lt;a href=&#34;https://github.com/shizunge/endlessh-go/issues&#34;&gt;GitHub issue&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>disingn/sunotoapi</title>
    <updated>2024-03-31T01:31:18Z</updated>
    <id>tag:github.com,2024-03-31:/disingn/sunotoapi</id>
    <link href="https://github.com/disingn/sunotoapi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;将 sunoAi web转成 openai 格式进行调用&lt;/p&gt;&lt;hr&gt;&lt;h4&gt;1. 项目简介&lt;/h4&gt; &#xA;&lt;p&gt;简单的将 suno.ai web转为api接口&lt;/p&gt; &#xA;&lt;h4&gt;2. 部署方式&lt;/h4&gt; &#xA;&lt;p&gt;将 config.yaml.example 重命名为 config.yaml 并修改其中的配置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Server:&#xA;    Port: 3560&#xA;App:&#xA;    Client: #登录 suno.ai 后的 cookie中的__client=xxxxx 的值&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./sunoweb2api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. 使用方式&lt;/h4&gt; &#xA;&lt;p&gt;下列 api 都可以增加一个Header参数&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Authorization : Bearer Client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中Client为登录 suno.ai 后的 cookie中的__client=xxxxx 的值&lt;/p&gt; &#xA;&lt;p&gt;如果不填写 默认使用config.yaml中的配置中的 Client&lt;/p&gt; &#xA;&lt;p&gt;示例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --location --request POST &#39;localhost:3560/v1/chat/completions&#39; \&#xA;--header &#39;Authorization: Bearer client&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data-raw &#39;{&#xA;    &#34;model&#34;: &#34;chirp-v3-0&#34;,&#xA;    &#34;messages&#34;: [&#xA;        {&#xA;            &#34;role&#34;: &#34;user&#34;,&#xA;            &#34;content&#34;: &#34;制作歌曲《万能的数字》&#34;&#xA;        }&#xA;    ]&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;创建音乐任务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --location --request POST &#39;localhost:3560/v2/generate&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data-raw &#39;{&#xA;    &#34;gpt_description_prompt&#34;: &#34;an atmospheric metal song about dancing all night long&#34;,&#xA;    &#34;mv&#34;: &#34;chirp-v3-0&#34;,&#xA;    &#34;prompt&#34;: &#34;&#34;,&#xA;    &#34;make_instrumental&#34;: false&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;支持如下参数：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;默认参数 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;gpt_description_prompt: 生成音乐的描述&lt;/li&gt; &#xA;   &lt;li&gt;mv: 音乐模型&lt;/li&gt; &#xA;   &lt;li&gt;prompt: 生成音乐的提示&lt;/li&gt; &#xA;   &lt;li&gt;make_instrumental: 是否生成无人声音乐&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;gpt_description_prompt&#34;: &#34;an atmospheric metal song about dancing all night long&#34;,&#xA;    &#34;mv&#34;: &#34;chirp-v3-0&#34;,&#xA;    &#34;prompt&#34;: &#34;&#34;,&#xA;    &#34;make_instrumental&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自定义 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;prompt: 歌词&lt;/li&gt; &#xA;   &lt;li&gt;tags: 音乐标签&lt;/li&gt; &#xA;   &lt;li&gt;mv: 音乐模型&lt;/li&gt; &#xA;   &lt;li&gt;title: 音乐标题&lt;/li&gt; &#xA;   &lt;li&gt;continue_clip_id: 继续生成音乐的clip_id&lt;/li&gt; &#xA;   &lt;li&gt;continue_at: 继续生成音乐的时间&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;prompt&#34;: &#34;[Verse]\nEvery morning, when I wake up\nI stumble to the kitchen to get my cup (cup)\nThe smell, the taste, it&#39;s like a dream\nI&#39;m addicted to that caffeinated beam\n\n[Chorus]\nI need my java fix, it&#39;s my daily high (high)\nGotta have my coffee, don&#39;t ask me why (why)\nBrew it strong, brew it black, can&#39;t get enough\nThat sweet, dark liquid, it keeps me buzzin&#39; (buzzin&#39;)\n\n[Verse 2]\nEspresso, latte, cappuccino too\nI&#39;ll take it any way, as long as it&#39;s brew\nFrom the fancy cafes to the corner shops\nI&#39;m on a mission to find the perfect crop (yeah)&#34;,&#xA;  &#34;tags&#34;: &#34;epic blues&#34;,&#xA;  &#34;mv&#34;: &#34;chirp-v3-0&#34;,&#xA;  &#34;title&#34;: &#34;Coffee Addiction&#34;,&#xA;  &#34;continue_clip_id&#34;: null,&#xA;  &#34;continue_at&#34;: null&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自定义纯音乐 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;prompt: 歌词&lt;/li&gt; &#xA;   &lt;li&gt;tags: 音乐标签&lt;/li&gt; &#xA;   &lt;li&gt;mv: 音乐模型&lt;/li&gt; &#xA;   &lt;li&gt;title: 音乐标题&lt;/li&gt; &#xA;   &lt;li&gt;continue_clip_id: 继续生成音乐的clip_id&lt;/li&gt; &#xA;   &lt;li&gt;continue_at: 继续生成音乐的时间&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;prompt&#34;: &#34;&#34;,&#xA;  &#34;tags&#34;: &#34;epic blues&#34;,&#xA;  &#34;mv&#34;: &#34;chirp-v3-0&#34;,&#xA;  &#34;title&#34;: &#34;Coffee Addiction&#34;,&#xA;  &#34;continue_clip_id&#34;: null,&#xA;  &#34;continue_at&#34;: null&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;查询音乐任务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --location --request POST &#39;localhost:3560/v2/feed&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data-raw &#39;{&#xA;    &#34;ids&#34;:&#34;id1,id2&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中id1,id2为创建任务返回json中的clips中的id，如&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: &#34;b577cbad-18c3-49bb-a3aa-e39f9990a9c2&#34;,&#xA;  &#34;clips&#34;: [&#xA;    {&#xA;      &#34;id&#34;: &#34;id1&#34;,&#xA;      &#34;video_url&#34;: &#34;&#34;,&#xA;      &#34;audio_url&#34;: &#34;&#34;,&#xA;      &#34;image_url&#34;: null,&#xA;      &#34;image_large_url&#34;: null,&#xA;      &#34;major_model_version&#34;: &#34;v3&#34;,&#xA;      &#34;model_name&#34;: &#34;chirp-v3&#34;,&#xA;      &#34;metadata&#34;: {&#xA;        &#34;tags&#34;: null,&#xA;        &#34;prompt&#34;: &#34;&#34;,&#xA;        &#34;gpt_description_prompt&#34;: &#34;an atmospheric metal song about dancing all night long&#34;,&#xA;        &#34;audio_prompt_id&#34;: null,&#xA;        &#34;history&#34;: null,&#xA;        &#34;concat_history&#34;: null,&#xA;        &#34;type&#34;: &#34;gen&#34;,&#xA;        &#34;duration&#34;: null,&#xA;        &#34;refund_credits&#34;: null,&#xA;        &#34;stream&#34;: true,&#xA;        &#34;error_type&#34;: null,&#xA;        &#34;error_message&#34;: null&#xA;      },&#xA;      &#34;is_liked&#34;: false,&#xA;      &#34;user_id&#34;: &#34;284ac3ca-a2cf-4b0c-a1b5-64d7315fbe28&#34;,&#xA;      &#34;is_trashed&#34;: false,&#xA;      &#34;reaction&#34;: null,&#xA;      &#34;created_at&#34;: &#34;2024-03-26T07:01:44.235Z&#34;,&#xA;      &#34;status&#34;: &#34;submitted&#34;,&#xA;      &#34;title&#34;: &#34;&#34;,&#xA;      &#34;play_count&#34;: 0,&#xA;      &#34;upvote_count&#34;: 0,&#xA;      &#34;is_public&#34;: false&#xA;    },&#xA;    {&#xA;      &#34;id&#34;: &#34;id2&#34;,&#xA;      &#34;video_url&#34;: &#34;&#34;,&#xA;      &#34;audio_url&#34;: &#34;&#34;,&#xA;      &#34;image_url&#34;: null,&#xA;      &#34;image_large_url&#34;: null,&#xA;      &#34;major_model_version&#34;: &#34;v3&#34;,&#xA;      &#34;model_name&#34;: &#34;chirp-v3&#34;,&#xA;      &#34;metadata&#34;: {&#xA;        &#34;tags&#34;: null,&#xA;        &#34;prompt&#34;: &#34;&#34;,&#xA;        &#34;gpt_description_prompt&#34;: &#34;an atmospheric metal song about dancing all night long&#34;,&#xA;        &#34;audio_prompt_id&#34;: null,&#xA;        &#34;history&#34;: null,&#xA;        &#34;concat_history&#34;: null,&#xA;        &#34;type&#34;: &#34;gen&#34;,&#xA;        &#34;duration&#34;: null,&#xA;        &#34;refund_credits&#34;: null,&#xA;        &#34;stream&#34;: true,&#xA;        &#34;error_type&#34;: null,&#xA;        &#34;error_message&#34;: null&#xA;      },&#xA;      &#34;is_liked&#34;: false,&#xA;      &#34;user_id&#34;: &#34;284ac3ca-a2cf-4b0c-a1b5-64d7315fbe28&#34;,&#xA;      &#34;is_trashed&#34;: false,&#xA;      &#34;reaction&#34;: null,&#xA;      &#34;created_at&#34;: &#34;2024-03-26T07:01:44.235Z&#34;,&#xA;      &#34;status&#34;: &#34;submitted&#34;,&#xA;      &#34;title&#34;: &#34;&#34;,&#xA;      &#34;play_count&#34;: 0,&#xA;      &#34;upvote_count&#34;: 0,&#xA;      &#34;is_public&#34;: false&#xA;    }&#xA;  ],&#xA;  &#34;metadata&#34;: {&#xA;    &#34;tags&#34;: null,&#xA;    &#34;prompt&#34;: &#34;&#34;,&#xA;    &#34;gpt_description_prompt&#34;: &#34;an atmospheric metal song about dancing all night long&#34;,&#xA;    &#34;audio_prompt_id&#34;: null,&#xA;    &#34;history&#34;: null,&#xA;    &#34;concat_history&#34;: null,&#xA;    &#34;type&#34;: &#34;gen&#34;,&#xA;    &#34;duration&#34;: null,&#xA;    &#34;refund_credits&#34;: null,&#xA;    &#34;stream&#34;: true,&#xA;    &#34;error_type&#34;: null,&#xA;    &#34;error_message&#34;: null&#xA;  },&#xA;  &#34;major_model_version&#34;: &#34;v3&#34;,&#xA;  &#34;status&#34;: &#34;running&#34;,&#xA;  &#34;created_at&#34;: &#34;2024-03-26T07:01:44.214Z&#34;,&#xA;  &#34;batch_size&#34;: 2&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用ai生成歌词&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --location --request POST &#39;localhost:3560/v2/lyrics/create&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data-raw &#39;{&#34;prompt&#34;:&#34;&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;响应json：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: &#34;4ad435dd-b3f1-4ed7-b316-1868ff4ffe55&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;查询生成的歌词&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --location --request POST &#39;localhost:3560/v2/lyrics/task&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data-raw &#39;{&#xA;    &#34;ids&#34;:&#34;4ad435dd-b3f1-4ed7-b316-1868ff4ffe55&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;响应json：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;text&#34;: &#34;[Verse]\nI saw you sippin&#39; on your latte with grace\nAcross the room, I couldn&#39;t help but gaze (gazin&#39;)\nYour smile was like a sunbeam on a cloudy day\nIn that moment, I knew I had to find a way\n\n[Chorus]\nCoffee shop love affair, brewing in the air\nAin&#39;t nothin&#39; like the feeling when we&#39;re there (when we&#39;re there)\nCoffee shop love affair, hearts are gonna dare\nTo catch a glimpse of something rare\n\n[Verse 2]\nI ordered my Americano, extra light\nAnd slowly made my way closer in sight (closer in sight)\nOur eyes met, and the world began to fade\nIn that coffee shop, our love was made (made, baby)&#34;,&#xA;  &#34;title&#34;: &#34;The Coffee Shop Love Affair&#34;,&#xA;  &#34;status&#34;: &#34;complete&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;兼容 openai /v1/chat/completions格式&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --location --request POST &#39;localhost:3560/v1/chat/completions&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data-raw &#39;{&#xA;    &#34;model&#34;: &#34;chirp-v3-0&#34;,&#xA;    &#34;messages&#34;: [&#xA;        {&#xA;            &#34;role&#34;: &#34;user&#34;,&#xA;            &#34;content&#34;: &#34;制作歌曲《万能的mj）中文歌词&amp;nbsp;mj是-个群体的统称&#34;&#xA;        }&#xA;    ]&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;响应json：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;choices&#34;: [&#xA;    {&#xA;      &#34;finish_reason&#34;: &#34;stop&#34;,&#xA;      &#34;index&#34;: 0,&#xA;      &#34;logprobs&#34;: null,&#xA;      &#34;message&#34;: {&#xA;        &#34;content&#34;: &#34;xxxx&#34;,&#xA;        &#34;role&#34;: &#34;assistant&#34;&#xA;      }&#xA;    }&#xA;  ],&#xA;  &#34;created&#34;: 1711612671,&#xA;  &#34;id&#34;: &#34;chatcmpl-7QyqpwdfhqwajicIEznoc6Q47XAyW&#34;,&#xA;  &#34;model&#34;: &#34;chirp-v3-0&#34;,&#xA;  &#34;object&#34;: &#34;chat.completion&#34;,&#xA;  &#34;usage&#34;: {&#xA;    &#34;completion_tokens&#34;: 17,&#xA;    &#34;prompt_tokens&#34;: 57,&#xA;    &#34;total_tokens&#34;: 74&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. 注意事项&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目仅用于学习交流，不得用于商业用途&lt;/li&gt; &#xA; &lt;li&gt;个人账号部分功能无法使用&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>semaphoreui/semaphore</title>
    <updated>2024-03-31T01:31:18Z</updated>
    <id>tag:github.com,2024-03-31:/semaphoreui/semaphore</id>
    <link href="https://github.com/semaphoreui/semaphore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern UI for Ansible&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ansible Semaphore&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snapcraft.io/semaphore&#34;&gt;&lt;img src=&#34;https://snapcraft.io/semaphore/badge.svg?sanitize=true&#34; alt=&#34;semaphore&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/AnsibleSemaphore/semaphore?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/AnsibleSemaphore/semaphore?logo=gitter&#34; alt=&#34;Join the chat at https://gitter.im/AnsibleSemaphore/semaphore&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/semaphoreui&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/semaphoreui?style=social&amp;amp;logo=twitter&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/fiftin&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ansible Semaphore is a modern UI for Ansible. It lets you easily run Ansible playbooks, get notifications about fails, control access to deployment system.&lt;/p&gt; &#xA;&lt;p&gt;If your project has grown and deploying from the terminal is no longer for you then Ansible Semaphore is what you need.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/914224/134777345-8789d9e4-ff0d-439c-b80e-ddc56b74fcee.png&#34; alt=&#34;responsive-ui-phone1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Full documentation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.semui.co/administration-guide/installation&#34;&gt;https://docs.semui.co/administration-guide/installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Snap&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo snap install semaphore&#xA;sudo semaphore user add --admin --name &#34;Your Name&#34; --login your_login --email your-email@examaple.com --password your_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snapcraft.io/semaphore&#34;&gt;&lt;img src=&#34;https://snapcraft.io/static/images/badges/en/snap-store-black.svg?sanitize=true&#34; alt=&#34;Get it from the Snap Store&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/semaphoreui/semaphore&#34;&gt;https://hub.docker.com/r/semaphoreui/semaphore&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; for minimal configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  semaphore:&#xA;    ports:&#xA;      - 3000:3000&#xA;    image: semaphoreui/semaphore:latest&#xA;    environment:&#xA;      SEMAPHORE_DB_DIALECT: bolt&#xA;      SEMAPHORE_ADMIN_PASSWORD: changeme&#xA;      SEMAPHORE_ADMIN_NAME: admin&#xA;      SEMAPHORE_ADMIN_EMAIL: admin@localhost&#xA;      SEMAPHORE_ADMIN: admin&#xA;      TZ: Europe/Berlin&#xA;    volumes:&#xA;      - /path/to/data/home:/etc/semaphore # config.json location&#xA;      - /path/to/data/lib:/var/lib/semaphore # database.boltdb location (Not required if using mysql or postgres)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;You can test latest version of Semaphore on &lt;a href=&#34;https://demo.semui.co&#34;&gt;https://demo.semui.co&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;p&gt;Admin and user docs: &lt;a href=&#34;https://docs.semui.co&#34;&gt;https://docs.semui.co&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;API description: &lt;a href=&#34;https://semui.co/api-docs/&#34;&gt;https://semui.co/api-docs/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to write an article about Ansible or Semaphore, contact &lt;a href=&#34;https://github.com/fiftin&#34;&gt;@fiftin&lt;/a&gt; and we will place your article in our &lt;a href=&#34;https://semui.co/blog/&#34;&gt;Blog&lt;/a&gt; with link to your profile.&lt;/p&gt; &#xA;&lt;p&gt;PR&#39;s &amp;amp; UX reviews are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Please follow the &lt;a href=&#34;https://github.com/ansible-semaphore/semaphore/raw/develop/CONTRIBUTING.md&#34;&gt;contribution&lt;/a&gt; guide. Any questions, please open an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Release Signing&lt;/h2&gt; &#xA;&lt;p&gt;All releases after 2.5.1 are signed with the gpg public key &lt;code&gt;8CDE D132 5E96 F1D9 EABF 17D4 2C96 CF7D D27F AB82&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you like Ansible Semaphore, you can support the project development on &lt;a href=&#34;https://ko-fi.com/fiftin&#34;&gt;Ko-fi&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2016 Castaway Consulting LLC&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
</feed>