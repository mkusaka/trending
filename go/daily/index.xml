<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-21T01:32:19Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mudler/LocalRecall</title>
    <updated>2025-07-21T01:32:19Z</updated>
    <id>tag:github.com,2025-07-21:/mudler/LocalRecall</id>
    <link href="https://github.com/mudler/LocalRecall" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üß† 100% Local Memory layer and Knowledge base for agents with WebUI&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mudler/LocalRecall/main/static/logo.png&#34; alt=&#34;LocalRecall Logo&#34; width=&#34;220&#34;&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;em&gt;Your AI. Your Hardware. Your Rules.&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/mudler/LocalRecall&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/mudler/LocalRecall&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mudler/LocalRecall/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/mudler/LocalRecall&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mudler/LocalRecall/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/mudler/LocalRecall&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A lightweight, no-frills RESTful API designed for managing knowledge bases and files stored in vector databases‚Äî&lt;strong&gt;no GPU, internet, or cloud services required&lt;/strong&gt;! LocalRecall provides a simple and generic abstraction layer to handle knowledge retrieval, ideal for AI agents and chatbots to manage both long-term and short-term memory seamlessly.&lt;/p&gt; &#xA;&lt;p&gt;Currently, LocalRecall is batteries included and supports a local vector store powered by &lt;strong&gt;Chromem&lt;/strong&gt;, with plans to add additional vector stores such as &lt;strong&gt;Milvus&lt;/strong&gt; and &lt;strong&gt;Qdrant&lt;/strong&gt;. It can easily integrate with LocalAI, LocalAGI, and other agent frameworks, offering an intuitive web UI for convenient file management, including support for raw text inputs.&lt;/p&gt; &#xA;&lt;h2&gt;üìöüÜï Local Stack Family&lt;/h2&gt; &#xA;&lt;p&gt;üÜï LocalAI is now part of a comprehensive suite of AI tools designed to work together:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34; valign=&#34;top&#34;&gt; &lt;a href=&#34;https://github.com/mudler/LocalAI&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mudler/LocalAI/refs/heads/master/core/http/static/logo_horizontal.png&#34; width=&#34;300&#34; alt=&#34;LocalAI Logo&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34; valign=&#34;top&#34;&gt; &lt;h3&gt;&lt;a href=&#34;https://github.com/mudler/LocalAI&#34;&gt;LocalAI&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;LocalAI is the free, Open Source OpenAI alternative. LocalAI act as a drop-in replacement REST API that&#39;s compatible with OpenAI API specifications for local AI inferencing. Does not require GPU.&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34; valign=&#34;top&#34;&gt; &lt;a href=&#34;https://github.com/mudler/LocalAGI&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mudler/LocalAGI/refs/heads/main/webui/react-ui/public/logo_2.png&#34; width=&#34;300&#34; alt=&#34;LocalAGI Logo&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34; valign=&#34;top&#34;&gt; &lt;h3&gt;&lt;a href=&#34;https://github.com/mudler/LocalAGI&#34;&gt;LocalAGI&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;A powerful Local AI agent management platform that serves as a drop-in replacement for OpenAI&#39;s Responses API, enhanced with advanced agentic capabilities.&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üåü Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ö° &lt;strong&gt;RESTful API&lt;/strong&gt;: Simple and intuitive REST interface for knowledge management.&lt;/li&gt; &#xA; &lt;li&gt;üì° &lt;strong&gt;Fully Local&lt;/strong&gt;: Operates offline without external cloud dependencies.&lt;/li&gt; &#xA; &lt;li&gt;üìö &lt;strong&gt;RAG Knowledgebase&lt;/strong&gt;: Retrieve-Augmented Generation (RAG) compatible with multiple vector databases.&lt;/li&gt; &#xA; &lt;li&gt;üóÉÔ∏è &lt;strong&gt;Memory Management&lt;/strong&gt;: Ideal for AI-driven applications requiring memory abstraction.&lt;/li&gt; &#xA; &lt;li&gt;üìÇ &lt;strong&gt;File Support&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;‚úÖ Markdown&lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ Plain Text&lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ PDF&lt;/li&gt; &#xA;   &lt;li&gt;‚è≥ More formats coming soon!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Go&lt;/strong&gt; 1.16 or higher&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; (optional, for containerized deployment)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üöß Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;üì• Clone Repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/mudler/LocalRecall.git&#xA;cd LocalRecall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üõ†Ô∏è Build from Source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go build -o localrecall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;‚ñ∂Ô∏è Run Application&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./localrecall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your web UI will be available at &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üê≥ Docker Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Build and run using Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker build -t localrecall .&#xA;docker run -ti -v $PWD/state:/state \&#xA;               -e COLLECTION_DB_PATH=/state/db \&#xA;               -e EMBEDDING_MODEL=granite-embedding-107m-multilingual \&#xA;               -e FILE_ASSETS=/state/assets \&#xA;               -e OPENAI_API_KEY=sk-1234567890 \&#xA;               -e OPENAI_BASE_URL=http://localai:8080 \&#xA;               -p 8080:8080 localrecall&#xA;&#xA;# Or use the images already built by the CI:&#xA;docker run -ti -v $PWD/state:/state \&#xA;               -e COLLECTION_DB_PATH=/state/db \&#xA;               -e EMBEDDING_MODEL=granite-embedding-107m-multilingual \&#xA;               -e FILE_ASSETS=/state/assets \&#xA;               -e OPENAI_API_KEY=sk-1234567890 \&#xA;               -e OPENAI_BASE_URL=http://localai:8080 \&#xA;               -p 8080:8080 quay.io/mudler/localrecall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with Docker compose&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üåç Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;LocalRecall uses environment variables to configure its behavior. These variables allow you to customize paths, models, and integration settings without modifying the code.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;COLLECTION_DB_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the vector database directory where collections are stored.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;EMBEDDING_MODEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Name of the embedding model used for vectorization (e.g., &lt;code&gt;granite-embedding-107m-multilingual&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FILE_ASSETS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directory path to store and retrieve uploaded file assets.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;API key for embedding services (such as LocalAI or OpenAI-compatible APIs).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_BASE_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Base URL for the embedding model API (commonly &lt;code&gt;http://localai:8080&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LISTENING_ADDRESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Address the server listens on (default: &lt;code&gt;:8080&lt;/code&gt;). Useful for deployments on custom ports or network interfaces.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;VECTOR_ENGINE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Vector database engine to use (&lt;code&gt;chromem&lt;/code&gt; by default; support for others like Milvus and Qdrant planned).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MAX_CHUNKING_SIZE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maximum size (in characters) for breaking down documents into chunks. Affects performance and accuracy.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;API_KEYS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated list of API keys for securing access to the REST API (optional).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GIT_PRIVATE_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Base64-encoded SSH private key for accessing private Git repositories (optional).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;These variables can be passed directly when running the binary or inside your Docker container for easy configuration.&lt;/p&gt; &#xA;&lt;p&gt;You can use an &lt;code&gt;.env&lt;/code&gt; file to set the variables. The Docker compose file is configured to use an &lt;code&gt;.env&lt;/code&gt; file in the root of the project if available.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üìñ REST API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Base URL&lt;/strong&gt;: &lt;code&gt;http://localhost:8080/api&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üîß Manage Collections&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create Collection&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X POST $BASE_URL/collections \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;name&#34;:&#34;myCollection&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Upload File&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X POST $BASE_URL/collections/myCollection/upload \&#xA;  -F &#34;file=@/path/to/file.txt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;List Collections&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X GET $BASE_URL/collections&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;List Files in Collection&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X GET $BASE_URL/collections/myCollection/entries&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search Collection&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X POST $BASE_URL/collections/myCollection/search \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;query&#34;:&#34;search term&#34;, &#34;max_results&#34;:5}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reset Collection&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X POST $BASE_URL/collections/myCollection/reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Delete Entry&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X DELETE $BASE_URL/collections/myCollection/entry/delete \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;entry&#34;:&#34;file.txt&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add External Source&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X POST $BASE_URL/collections/myCollection/sources \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;url&#34;:&#34;https://example.com&#34;, &#34;update_interval&#34;:30}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;update_interval&lt;/code&gt; is specified in minutes. If not provided, it defaults to 60 minutes.&lt;/p&gt; &#xA;&lt;p&gt;External sources support various URL types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web pages (&lt;a href=&#34;https://example.com&#34;&gt;https://example.com&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Git repositories (&lt;a href=&#34;https://github.com/user/repo.git&#34;&gt;https://github.com/user/repo.git&lt;/a&gt; or &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:user/repo.git)&lt;/li&gt; &#xA; &lt;li&gt;Sitemaps (&lt;a href=&#34;https://example.com/sitemap.xml&#34;&gt;https://example.com/sitemap.xml&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For private Git repositories, set the &lt;code&gt;GIT_PRIVATE_KEY&lt;/code&gt; environment variable with a base64-encoded SSH private key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Encode your private key&#xA;export GIT_PRIVATE_KEY=$(cat /path/to/private_key | base64 -w 0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remove External Source&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -X DELETE $BASE_URL/collections/myCollection/sources \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#34;url&#34;:&#34;https://example.com&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;External sources are automatically monitored and updated in the background. The content is periodically fetched and added to the collection, making it searchable through the regular search endpoint.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üìù License&lt;/h2&gt; &#xA;&lt;p&gt;Released under the &lt;a href=&#34;https://raw.githubusercontent.com/mudler/LocalRecall/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! Please feel free to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ Open an issue for suggestions or bugs.&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Submit a pull request with enhancements.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>