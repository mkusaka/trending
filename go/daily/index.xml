<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-06T01:35:43Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>grafana/agent</title>
    <updated>2022-11-06T01:35:43Z</updated>
    <id>tag:github.com,2022-11-06:/grafana/agent</id>
    <link href="https://github.com/grafana/agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Telemetry agent for the LGTM stack.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/grafana/agent/main/docs/sources/assets/logo_and_name.png&#34; alt=&#34;Grafana Agent logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Grafana Agent is a telemetry collector for sending metrics, logs, and trace data to the opinionated Grafana observability stack. It works best with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grafana.com/products/cloud/&#34;&gt;Grafana Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grafana.com/products/enterprise/&#34;&gt;Grafana Enterprise Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OSS deployments of &lt;a href=&#34;https://grafana.com/oss/loki/&#34;&gt;Grafana Loki&lt;/a&gt;, &lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt;, &lt;a href=&#34;https://grafana.com/oss/mimir/&#34;&gt;Grafana Mimir&lt;/a&gt;, and &lt;a href=&#34;https://grafana.com/oss/tempo/&#34;&gt;Grafana Tempo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Users of Prometheus operating at a massive scale (i.e., millions of active series) can struggle to run an unsharded singleton Prometheus instance: it becomes a single point of failure and requires a giant machine with a lot of resources allocated to it. Even with proper sharding across multiple Prometheus instances, using Prometheus to send data to a cloud vendor can seem redundant: why pay for cloud storage if data is already stored locally?&lt;/p&gt; &#xA;&lt;p&gt;The Grafana Agent uses the same code as Prometheus, but tackles these issues by only using the most relevant parts of Prometheus for interaction with hosted metrics:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Service Discovery&lt;/li&gt; &#xA; &lt;li&gt;Scraping&lt;/li&gt; &#xA; &lt;li&gt;Write Ahead Log (WAL)&lt;/li&gt; &#xA; &lt;li&gt;Remote Write&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;On top of these, the Grafana Agent enables easier sharding mechanisms that enable users to shard Agents across their cluster and lower the memory requirements per machine.&lt;/p&gt; &#xA;&lt;p&gt;A typical deployment of the Grafana Agent for Prometheus metrics can see up to a 40% reduction in memory usage with equal scrape loads.&lt;/p&gt; &#xA;&lt;p&gt;The Grafana Agent it can be used to send Prometheus metrics to any system that supports the Prometheus &lt;code&gt;remote_write&lt;/code&gt; API.&lt;/p&gt; &#xA;&lt;h2&gt;Trade-offs&lt;/h2&gt; &#xA;&lt;p&gt;By heavily optimizing Prometheus for remote write and resource reduction, some trade-offs have been made:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can&#39;t query the Agent; you can only query metrics from the remote write storage.&lt;/li&gt; &#xA; &lt;li&gt;Recording rules aren&#39;t supported.&lt;/li&gt; &#xA; &lt;li&gt;Alerts aren&#39;t supported.&lt;/li&gt; &#xA; &lt;li&gt;When sharding the Agent, if your node has problems that interrupt metric availability, metrics tracking that node won&#39;t be sent for alerting on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While the Agent can&#39;t use recording rules and alerts, &lt;code&gt;remote_write&lt;/code&gt; systems such as Mimir currently support server-side rules and alerts. Note that this trade-off means that reliability of alerts are tied to the reliability of the remote system and alerts will be delayed at least by the time it takes for samples to reach the remote system.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;When using Kubernetes this &lt;a href=&#34;https://grafana.com/docs/grafana-cloud/quickstart/agent-k8s&#34;&gt;link&lt;/a&gt; offers the best guide.&lt;/p&gt; &#xA;&lt;p&gt;Other installation methods can be found in our &lt;a href=&#34;https://grafana.com/docs/agent/latest/set-up/&#34;&gt;Grafana Agent&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;p&gt;More detailed &lt;a href=&#34;https://raw.githubusercontent.com/grafana/agent/main/docs/README.md&#34;&gt;documentation&lt;/a&gt; is provided as part of the repository.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/grafana/agent/main/example&#34;&gt;&lt;code&gt;example/&lt;/code&gt;&lt;/a&gt; folder contains docker-compose configs and a local k3d/Tanka environment. Both examples deploy the Agent, Cortex and Grafana for testing the agent. See the &lt;a href=&#34;https://raw.githubusercontent.com/grafana/agent/main/example/docker-compose/README.md&#34;&gt;docker-compose README&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/grafana/agent/main/example/k3d/README.md&#34;&gt;k3d example README&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Release schedule&lt;/h2&gt; &#xA;&lt;p&gt;Starting with the v0.28 release, a new minor release is planned for every 6 weeks. This includes a release for Grafana Agent, Grafana Agent Operator, and the &lt;code&gt;agentctl&lt;/code&gt; binary.&lt;/p&gt; &#xA;&lt;p&gt;The release schedule is best-effort, and releases may be moved forward or backwards if needed. The planned release dates for future minor releases are not changed if one minor release is moved.&lt;/p&gt; &#xA;&lt;p&gt;Patch and security releases may be created at any time.&lt;/p&gt; &#xA;&lt;h2&gt;Prometheus vendoring&lt;/h2&gt; &#xA;&lt;p&gt;The Grafana Agent vendors a downstream Prometheus repository maintained by &lt;a href=&#34;https://github.com/grafana/prometheus&#34;&gt;Grafana Labs&lt;/a&gt;. This is done so experimental features Grafana Labs wants to contribute upstream can first be tested and iterated on quickly within the Agent. We aim to keep the experimental changes to a minimum and upstream changes as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;For more context on our vendoring strategy, read our &lt;a href=&#34;https://raw.githubusercontent.com/grafana/agent/main/docs/developer/downstream-prometheus.md&#34;&gt;downstream repo maintenance guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions or feedback regarding the Grafana Agent:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask a question on the Agent Slack channel. To invite yourself to the Grafana Slack, visit &lt;a href=&#34;https://slack.grafana.com/&#34;&gt;https://slack.grafana.com/&lt;/a&gt; and join the #agent channel.&lt;/li&gt; &#xA; &lt;li&gt;Alternatively ask questions on the &lt;a href=&#34;https://github.com/grafana/agent/discussions&#34;&gt;Discussions page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grafana/agent/issues/new&#34;&gt;File an issue&lt;/a&gt; for bugs, issues and feature suggestions.&lt;/li&gt; &#xA; &lt;li&gt;Attend the &lt;a href=&#34;https://docs.google.com/document/d/1TqaZD1JPfNadZ4V81OCBPCG_TksDYGlNlGdMnTWUSpo&#34;&gt;Grafana Agent Community Call&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Any contributions are welcome and details can be found &lt;a href=&#34;https://raw.githubusercontent.com/grafana/agent/main/docs/developer/contributing.md&#34;&gt;in our contributors guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>envoyproxy/gateway</title>
    <updated>2022-11-06T01:35:43Z</updated>
    <id>tag:github.com,2022-11-06:/envoyproxy/gateway</id>
    <link href="https://github.com/envoyproxy/gateway" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Manages Envoy Proxy as a standalone or Kubernetes-based application gateway&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Envoy Gateway&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/envoyproxy/gateway/actions/workflows/build_and_test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/envoyproxy/gateway/actions/workflows/build_and_test.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build and Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/envoyproxy/gateway&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/envoyproxy/gateway/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Envoy Gateway is an open source project for managing Envoy Proxy as a standalone or Kubernetes-based application gateway.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.envoyproxy.io/introducing-envoy-gateway-ad385cc59532&#34;&gt;Blog&lt;/a&gt; introducing Envoy Gateway.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/gateway/main/GOALS.md&#34;&gt;Goals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/gateway/main/docs/latest/user/quickstart.md&#34;&gt;Quickstart&lt;/a&gt; to use Envoy Gateway in a few simple steps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/gateway/main/docs/latest/design/roadmap.md&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slack: Go to &lt;a href=&#34;https://envoyproxy.slack.com/archives/C03E6NHLESV&#34;&gt;Envoy Gateway Channel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/envoy-gateway-developers&#34;&gt;Google Group&lt;/a&gt;: Envoy Gateway developer discussion (APIs, feature design, etc.).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/gateway/main/docs/latest/dev/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/gateway/main/docs/latest/dev/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/gateway/main/docs/latest/dev/README.md&#34;&gt;Developer guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Meeting&lt;/h2&gt; &#xA;&lt;p&gt;The Envoy Gateway team meets every Tuesday and Thursday. Refer to the meeting details for additional information.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1leqwsHX8N-XxNEyTflYjRur462ukFxd19Rnk3Uzy55I/edit?usp=sharing&#34;&gt;Meeting details&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>grafana/phlare</title>
    <updated>2022-11-06T01:35:43Z</updated>
    <id>tag:github.com,2022-11-06:/grafana/phlare</id>
    <link href="https://github.com/grafana/phlare" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 horizontally-scalable, highly-available, multi-tenant continuous profiling aggregation system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;Grafana Phlare&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/grafana/phlare/main/images/logo.png&#34; alt=&#34;Grafana Phlare logo&#34; width=&#34;400&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Grafana Phlare is an open source software project for aggregating continuous profiling data. Continuous profiling is an observability signal that allows you to understand your workload&#39;s resources (CPU, memory, etc...) usage down to the exact lines of code.&lt;/p&gt; &#xA;&lt;p&gt;Grafana Phlare is fully integrated with Grafana allowing you to &lt;strong&gt;correlate&lt;/strong&gt; with other observability signals, like metrics, logs, and traces.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Explore UI&#34; src=&#34;https://raw.githubusercontent.com/grafana/phlare/main/images/grafana-profiles.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Core features of Grafana Phlare include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to install:&lt;/strong&gt; Using its monolithic mode, you can get Grafana Phlare up and running with just one binary and no additional dependencies. On Kubernetes a single helm chart allows to deploy in different mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Horizontal scalability:&lt;/strong&gt; You can run Grafana Phlare across multiple machines, which makes it effortless for you to scale the database to handle the profiling volumes your workload generates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High availability:&lt;/strong&gt; Grafana Phlare replicates incoming profiles, ensuring that no data is lost in the event of machine failure. This means you can rollout without interrupting profiles ingestion and analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cheap, durable profile storage:&lt;/strong&gt; Grafana Phlare uses object storage for long-term data storage, allowing it to take advantage of this ubiquitous, cost-effective, high-durability technology. It is compatible with multiple object store implementations, including AWS S3, Google Cloud Storage, Azure Blob Storage, OpenStack Swift, as well as any S3-compatible object storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Natively multi-tenant:&lt;/strong&gt; Grafana Phlare&#39;s multi-tenant architecture enables you to isolate data and queries from independent teams or business units, making it possible for these groups to share the same database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploying Grafana Phlare&lt;/h2&gt; &#xA;&lt;p&gt;For information about how to deploy Grafana Phlare, refer to &lt;a href=&#34;https://grafana.com/docs/phlare/latest/operators-guide/deploy-kubernetes/&#34;&gt;Deploy Grafana Phlare&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;If you’re new to Grafana Phlare, read the &lt;a href=&#34;https://grafana.com/docs/phlare/latest/operators-guide/getting-started/&#34;&gt;Getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Before deploying Grafana Phlare in a production environment, read:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grafana.com/docs/phlare/latest/operators-guide/architecture/&#34;&gt;An overview of Grafana Phlare’s architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grafana.com/docs/phlare/latest/operators-guide/configuring/&#34;&gt;Configure Grafana Phlare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grafana.com/docs/phlare/latest/operators-guide/deploy-kubernetes/&#34;&gt;Deploy in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the following links to access Grafana Phlare documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grafana.com/docs/phlare/latest/&#34;&gt;Latest release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grafana.com/docs/phlare/next/&#34;&gt;Upcoming release&lt;/a&gt;, at the tip of the main branch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To contribute to Grafana Phlare, refer to &lt;a href=&#34;https://github.com/grafana/phlare/tree/main/docs/internal/contributing&#34;&gt;Contributing to Grafana Phlare&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Join the Grafana Phlare discussion&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions or feedback regarding Grafana Phlare, join the &lt;a href=&#34;https://github.com/grafana/phlare/discussions&#34;&gt;Grafana Phlare Discussion&lt;/a&gt;. Alternatively, consider joining the monthly &lt;a href=&#34;https://raw.githubusercontent.com/grafana/phlare/main/TODO-doc-link&#34;&gt;Grafana Phlare Community Call&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Your feedback is always welcome, and you can also share it via the &lt;a href=&#34;https://grafana.slack.com/archives/C049PLMV8TB&#34;&gt;&lt;code&gt;#phlare&lt;/code&gt; Slack channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Grafana Phlare is distributed under &lt;a href=&#34;https://raw.githubusercontent.com/grafana/phlare/main/LICENSE&#34;&gt;AGPL-3.0-only&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>