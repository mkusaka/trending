<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-22T01:33:04Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wagoodman/dive</title>
    <updated>2022-12-22T01:33:04Z</updated>
    <id>tag:github.com,2022-12-22:/wagoodman/dive</id>
    <link href="https://github.com/wagoodman/dive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for exploring each layer in a docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dive&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/wagoodman/dive&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/wagoodman/dive&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/wagoodman/dive&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/wagoodman/dive.svg?style=svg&#34; alt=&#34;Pipeline Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/wagoodman&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?style=flat&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A tool for exploring a docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagoodman/dive/master/.data/demo.gif&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To analyze a Docker image simply run dive with an image tag/id/digest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;your-image-tag&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you want to build your image then jump straight into analyzing it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive build -t &amp;lt;some-tag&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building on Macbook (supporting only the Docker container engine)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;      -v /var/run/docker.sock:/var/run/docker.sock \&#xA;      -v  &#34;$(pwd)&#34;:&#34;$(pwd)&#34; \&#xA;      -w &#34;$(pwd)&#34; \&#xA;      -v &#34;$HOME/.dive.yaml&#34;:&#34;$HOME/.dive.yaml&#34; \&#xA;      wagoodman/dive:latest build -t &amp;lt;some-tag&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally you can run this in your CI pipeline to ensure you&#39;re keeping wasted space to a minimum (this skips the UI):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CI=true dive &amp;lt;your-image&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagoodman/dive/master/.data/demo-ci.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is beta quality!&lt;/strong&gt; &lt;em&gt;Feel free to submit an issue if you want a new feature or find a bug :)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Show Docker image contents broken down by layer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Indicate what&#39;s changed in each layer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Files that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Estimate &#34;image efficiency&#34;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage &#34;score&#34; and total wasted file space is provided.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quick build/analysis cycles&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can build a Docker image and do an immediate analysis with one command: &lt;code&gt;dive build -t some-tag .&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You only need to replace your &lt;code&gt;docker build&lt;/code&gt; command with the same &lt;code&gt;dive build&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CI Integration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Analyze an image and get a pass/fail result based on the image efficiency and wasted space. Simply set &lt;code&gt;CI=true&lt;/code&gt; in the environment when invoking any valid dive command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multiple Image Sources and Container Engines Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;With the &lt;code&gt;--source&lt;/code&gt; option, you can select where to fetch the container image from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;your-image&amp;gt; --source &amp;lt;source&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;source&amp;gt;://&amp;lt;your-image&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With valid &lt;code&gt;source&lt;/code&gt; options as such:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt;: Docker engine (the default option)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-archive&lt;/code&gt;: A Docker Tar Archive from disk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;podman&lt;/code&gt;: Podman engine (linux only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu/Debian&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.deb&#xA;sudo apt install ./dive_0.9.2_linux_amd64.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;RHEL/Centos&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -OL https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm&#xA;rpm -i dive_0.9.2_linux_amd64.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Available as &lt;a href=&#34;https://aur.archlinux.org/packages/dive/&#34;&gt;dive&lt;/a&gt; in the Arch User Repository (AUR).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yay -S dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above example assumes &lt;a href=&#34;https://aur.archlinux.org/packages/yay/&#34;&gt;&lt;code&gt;yay&lt;/code&gt;&lt;/a&gt; as the tool for installing AUR packages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo port install dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or download the latest Darwin build from the &lt;a href=&#34;https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_darwin_amd64.tar.gz&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Download the &lt;a href=&#34;https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_windows_amd64.zip&#34;&gt;latest release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Go tools&lt;/strong&gt; Requires Go version 1.10 or higher.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get github.com/wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: installing in this way you will not see a proper version when running &lt;code&gt;dive -v&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull quay.io/wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When running you&#39;ll need to include the docker socket file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker for Windows (showing PowerShell compatible line breaks; collapse to a single line for Command Prompt compatibility)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; depending on the version of docker you are running locally you may need to specify the docker API version as an environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;   DOCKER_API_VERSION=1.37 dive ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you are running with a docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    -e DOCKER_API_VERSION=1.37 \&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CI Integration&lt;/h2&gt; &#xA;&lt;p&gt;When running dive with the environment variable &lt;code&gt;CI=true&lt;/code&gt; then the dive UI will be bypassed and will instead analyze your docker image, giving it a pass/fail indication via return code. Currently there are three metrics supported via a &lt;code&gt;.dive-ci&lt;/code&gt; file that you can put at the root of your repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rules:&#xA;  # If the efficiency is measured below X%, mark as failed.&#xA;  # Expressed as a ratio between 0-1.&#xA;  lowestEfficiency: 0.95&#xA;&#xA;  # If the amount of wasted space is at least X or larger than X, mark as failed.&#xA;  # Expressed in B, KB, MB, and GB.&#xA;  highestWastedBytes: 20MB&#xA;&#xA;  # If the amount of wasted space makes up for X% or more of the image, mark as failed.&#xA;  # Note: the base image layer is NOT included in the total image size.&#xA;  # Expressed as a ratio between 0-1; fails if the threshold is met or crossed.&#xA;  highestUserWastedPercent: 0.20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can override the CI config path with the &lt;code&gt;--ci-config&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h2&gt;KeyBindings&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key Binding&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + C&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switch between the layer and filetree views&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + F&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filter files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll up a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll down a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Layer view: see aggregated image modifications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + L&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Layer view: see current layer modifications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Space&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: collapse/uncollapse a directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + Space&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: collapse/uncollapse all directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide added files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + R&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide removed files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + M&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide modified files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + U&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide unmodified files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + B&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide file attributes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: scroll up a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: scroll down a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;UI Configuration&lt;/h2&gt; &#xA;&lt;p&gt;No configuration is necessary, however, you can create a config file and override values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# supported options are &#34;docker&#34; and &#34;podman&#34;&#xA;container-engine: docker&#xA;# continue with analysis even if there are errors parsing the image archive&#xA;ignore-errors: false&#xA;log:&#xA;  enabled: true&#xA;  path: ./dive.log&#xA;  level: info&#xA;&#xA;# Note: you can specify multiple bindings by separating values with a comma.&#xA;# Note: UI hinting is derived from the first binding&#xA;keybinding:&#xA;  # Global bindings&#xA;  quit: ctrl+c&#xA;  toggle-view: tab&#xA;  filter-files: ctrl+f, ctrl+slash&#xA;&#xA;  # Layer view specific bindings&#xA;  compare-all: ctrl+a&#xA;  compare-layer: ctrl+l&#xA;&#xA;  # File view specific bindings&#xA;  toggle-collapse-dir: space&#xA;  toggle-collapse-all-dir: ctrl+space&#xA;  toggle-added-files: ctrl+a&#xA;  toggle-removed-files: ctrl+r&#xA;  toggle-modified-files: ctrl+m&#xA;  toggle-unmodified-files: ctrl+u&#xA;  toggle-filetree-attributes: ctrl+b&#xA;  page-up: pgup&#xA;  page-down: pgdn&#xA;&#xA;diff:&#xA;  # You can change the default files shown in the filetree (right pane). All diff types are shown by default.&#xA;  hide:&#xA;    - added&#xA;    - removed&#xA;    - modified&#xA;    - unmodified&#xA;&#xA;filetree:&#xA;  # The default directory-collapse state&#xA;  collapse-dir: false&#xA;&#xA;  # The percentage of screen width the filetree should take on the screen (must be &amp;gt;0 and &amp;lt;1)&#xA;  pane-width: 0.5&#xA;&#xA;  # Show the file attributes next to the filetree&#xA;  show-attributes: true&#xA;&#xA;layer:&#xA;  # Enable showing all changes from this layer and every previous layer&#xA;  show-aggregated-changes: false&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;dive will search for configs in the following locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_DIRS/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.config/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.dive.yaml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>authzed/spicedb</title>
    <updated>2022-12-22T01:33:04Z</updated>
    <id>tag:github.com,2022-12-22:/authzed/spicedb</id>
    <link href="https://github.com/authzed/spicedb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source fine-grained permissions database inspired by Google Zanzibar&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SpiceDB&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/authzed/spicedb/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/authzed/spicedb?color=%232496ED&amp;amp;label=container&amp;amp;logo=docker&#34; alt=&#34;Container Image&#34; title=&#34;Container Image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.authzed.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-authzed.com-%234B4B6C&#34; alt=&#34;Docs&#34; title=&#34;Authzed Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/authzed/spicedb/actions&#34;&gt;&lt;img src=&#34;https://github.com/authzed/spicedb/workflows/Build%20&amp;amp;%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34; title=&#34;GitHub Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/6348&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/6348/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/jTysUaxXzM&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/844600078504951838?color=7289da&amp;amp;logo=discord&#34; alt=&#34;Discord Server&#34; title=&#34;Discord Server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/authzed&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/authzed?color=%23179CF0&amp;amp;logo=twitter&amp;amp;style=flat-square&amp;amp;label=@authzed&#34; alt=&#34;Twitter&#34; title=&#34;@authzed on Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SpiceDB is an open source database system for managing security-critical application permissions inspired by Google&#39;s &lt;a href=&#34;https://authzed.com/blog/what-is-zanzibar/&#34;&gt;Zanzibar&lt;/a&gt; paper.&lt;/p&gt; &#xA;&lt;p&gt;Developers create a schema that models their permissions requirements and use a &lt;a href=&#34;https://github.com/orgs/authzed/repositories?q=client+library&#34;&gt;client library&lt;/a&gt; to apply the schema to the database, insert data into the database, and query the data to efficiently check permissions in their applications.&lt;/p&gt; &#xA;&lt;p&gt;Features that distinguish SpiceDB from other systems include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Expressive &lt;a href=&#34;https://buf.build/authzed/api/docs/main:authzed.api.v1&#34;&gt;gRPC&lt;/a&gt; and &lt;a href=&#34;https://app.swaggerhub.com/apis-docs/authzed/authzed/1.0&#34;&gt;HTTP&lt;/a&gt; APIs for checking permissions, listing access, and powering devtools&lt;/li&gt; &#xA; &lt;li&gt;A distributed, parallel graph-engine faithful to the architecture described in &lt;a href=&#34;https://authzed.com/blog/what-is-zanzibar/&#34;&gt;Google&#39;s Zanzibar paper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A flexible consistency model configurable &lt;a href=&#34;https://docs.authzed.com/reference/api-consistency&#34;&gt;per-request&lt;/a&gt; that includes resistance to the &lt;a href=&#34;https://authzed.com/blog/new-enemies/&#34;&gt;New Enemy Problem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;An expressive &lt;a href=&#34;https://docs.authzed.com/guides/schema&#34;&gt;schema language&lt;/a&gt; with tools for &lt;a href=&#34;https://play.authzed.com&#34;&gt;rapid prototyping&lt;/a&gt;, &lt;a href=&#34;https://github.com/authzed/action-spicedb&#34;&gt;integration testing&lt;/a&gt;, and &lt;a href=&#34;https://github.com/authzed/action-spicedb-validate&#34;&gt;validating designs&lt;/a&gt; in CI/CD pipelines&lt;/li&gt; &#xA; &lt;li&gt;Pluggable storage system supporting &lt;a href=&#34;https://github.com/hashicorp/go-memdb&#34;&gt;memdb&lt;/a&gt;, &lt;a href=&#34;https://www.mysql.com&#34;&gt;MySQL&lt;/a&gt;, &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt;, &lt;a href=&#34;https://github.com/cockroachdb/cockroach&#34;&gt;CockroachDB&lt;/a&gt;, and &lt;a href=&#34;https://cloud.google.com/spanner&#34;&gt;Cloud Spanner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deep observability with &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus metrics&lt;/a&gt;, structured logging, and &lt;a href=&#34;https://opentelemetry.io&#34;&gt;OpenTelemetry tracing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Have questions? Join our &lt;a href=&#34;https://authzed.com/discord&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Looking to contribute? See &lt;a href=&#34;https://github.com/authzed/spicedb/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Want to learn more about Zanzibar? Read the &lt;a href=&#34;https://zanzibar.tech&#34;&gt;annotated paper&lt;/a&gt; with our commentary.&lt;/p&gt; &#xA;&lt;p&gt;You can find issues by priority: &lt;a href=&#34;https://github.com/authzed/spicedb/labels/priority%2F0%20urgent&#34;&gt;Urgent&lt;/a&gt;, &lt;a href=&#34;https://github.com/authzed/spicedb/labels/priority%2F1%20high&#34;&gt;High&lt;/a&gt;, &lt;a href=&#34;https://github.com/authzed/spicedb/labels/priority%2F2%20medium&#34;&gt;Medium&lt;/a&gt;, &lt;a href=&#34;https://github.com/authzed/spicedb/labels/priority%2F3%20low&#34;&gt;Low&lt;/a&gt;, &lt;a href=&#34;https://github.com/authzed/spicedb/labels/priority%2F4%20maybe&#34;&gt;Maybe&lt;/a&gt;. There are also &lt;a href=&#34;https://github.com/authzed/spicedb/labels/hint%2Fgood%20first%20issue&#34;&gt;good first issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why SpiceDB?&lt;/h2&gt; &#xA;&lt;h3&gt;Verifiable Correctness&lt;/h3&gt; &#xA;&lt;p&gt;The data used to calculate permissions have the most critical correctness requirements in the entirety a software system. Despite that, developers continue to build their own ad-hoc solutions coupled to the internal code of each new project. By developing a SpiceDB schema, you can iterate far more quickly and exhaustively test designs before altering any application code. This becomes especially important as you introduce backwards-compatible changes to the schema and want to ensure that the system remains secure.&lt;/p&gt; &#xA;&lt;h3&gt;Optimal Flexibility&lt;/h3&gt; &#xA;&lt;p&gt;The SpiceDB schema language is built on top of the concept of a graph of relationships between objects. This ReBAC design is capable of efficiently supporting all popular access control models (such as &lt;a href=&#34;https://docs.authzed.com/concepts/authz#what-is-rbac&#34;&gt;RBAC&lt;/a&gt; and &lt;a href=&#34;https://docs.authzed.com/concepts/authz#what-is-abac&#34;&gt;ABAC&lt;/a&gt;) and custom models that contain hybrid behavior.&lt;/p&gt; &#xA;&lt;p&gt;Modern solutions to developing permission systems all have a similar goal: to decouple &lt;em&gt;policy&lt;/em&gt; from the application. Using a dedicated database like SpiceDB not only accomplishes this, but takes this idea a step further by also decoupling the data that policies operate on. SpiceDB is designed to share a single unified view of permissions across as many applications as your organization has. This has strategy has become an industry best-practice and is being used to great success at companies large (&lt;a href=&#34;https://research.google/pubs/pub48190/&#34;&gt;Google&lt;/a&gt;, GitHub, &lt;a href=&#34;https://medium.com/airbnb-engineering/himeji-a-scalable-centralized-system-for-authorization-at-airbnb-341664924574&#34;&gt;Airbnb&lt;/a&gt;) and small (&lt;a href=&#34;https://medium.com/building-carta/authz-cartas-highly-scalable-permissions-system-782a7f2c840f&#34;&gt;Carta&lt;/a&gt;, &lt;a href=&#34;https://authzed.com&#34;&gt;Authzed&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installing SpiceDB&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install SpiceDB with &lt;a href=&#34;https://docs.authzed.com/spicedb/installing#brew&#34;&gt;homebrew&lt;/a&gt; on macOS and Linux&lt;/li&gt; &#xA; &lt;li&gt;Run a SpiceDB container using a container engine such as &lt;a href=&#34;https://docs.authzed.com/spicedb/installing#docker&#34;&gt;docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deploy non-production-ready &lt;a href=&#34;https://github.com/authzed/examples&#34;&gt;examples&lt;/a&gt; using &lt;a href=&#34;https://github.com/authzed/examples/tree/main/kubernetes&#34;&gt;Kubernetes&lt;/a&gt; and &lt;a href=&#34;https://github.com/authzed/examples/tree/main/datastores&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developing your own schema&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the guide for &lt;a href=&#34;https://docs.authzed.com/guides/schema&#34;&gt;developing a schema&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=x3-B9-ICj0w&#34;&gt;Watch a video&lt;/a&gt; of us modeling GitHub&lt;/li&gt; &#xA; &lt;li&gt;Read the schema language &lt;a href=&#34;https://docs.authzed.com/reference/schema-lang&#34;&gt;design documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.authzed.com&#34;&gt;Jump into the playground&lt;/a&gt;, load up some examples, and mess around&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Integrating with your application&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn the latest best practice by following the &lt;a href=&#34;https://docs.authzed.com/guides/first-app&#34;&gt;Protecting Your First App&lt;/a&gt; guide&lt;/li&gt; &#xA; &lt;li&gt;Explore the gRPC API documentation on the &lt;a href=&#34;https://buf.build/authzed/api/docs&#34;&gt;Buf Registry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/authzed/zed&#34;&gt;Install zed&lt;/a&gt; and interact with a live database&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>icyphox/legit</title>
    <updated>2022-12-22T01:33:04Z</updated>
    <id>tag:github.com,2022-12-22:/icyphox/legit</id>
    <link href="https://github.com/icyphox/legit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;web frontend for git, written in go&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;legit&lt;/h2&gt; &#xA;&lt;p&gt;A git web frontend written in Go.&lt;/p&gt; &#xA;&lt;p&gt;Pronounced however you like; I prefer channeling my beret-wearing Frenchman, and say &#34;Oui, il est le git!&#34;&lt;/p&gt; &#xA;&lt;p&gt;But yeah it&#39;s pretty legit, no cap on god fr fr.&lt;/p&gt; &#xA;&lt;p&gt;FEATURES&lt;/p&gt; &#xA;&lt;p&gt;• Fully customizable templates and stylesheets. • Cloning over http(s). • Less archaic HTML. • Not CGI.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLING&lt;/p&gt; &#xA;&lt;p&gt;Clone it, &#39;go build&#39; it.&lt;/p&gt; &#xA;&lt;p&gt;CONFIG&lt;/p&gt; &#xA;&lt;p&gt;Uses yaml for configuration. Looks for a &#39;config.yaml&#39; in the current directory by default; pass the &#39;--config&#39; flag to point it elsewhere.&lt;/p&gt; &#xA;&lt;p&gt;Example config.yaml:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;repo:&#xA;  scanPath: /var/www/git&#xA;  readme:&#xA;    - readme&#xA;    - README&#xA;    - readme.md&#xA;    - README.md&#xA;  mainBranch:&#xA;    - master&#xA;    - main&#xA;dirs:&#xA;  templates: ./templates&#xA;  static: ./static&#xA;meta:&#xA;  title: git good&#xA;  description: i think it&#39;s a skill issue&#xA;server:&#xA;  name: git.icyphox.sh&#xA;  host: 127.0.0.1&#xA;  port: 5555&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These options are fairly self-explanatory, but of note are:&lt;/p&gt; &#xA;&lt;p&gt;• repo.scanPath: where all your git repos live (or die). legit doesn&#39;t traverse subdirs yet. • repo.readme: readme files to look for. Markdown isn&#39;t rendered. • repo.mainBranch: main branch names to look for. • server.name: used for go-import meta tags and clone URLs.&lt;/p&gt; &#xA;&lt;p&gt;NOTES&lt;/p&gt; &#xA;&lt;p&gt;• Run legit behind a TLS terminating proxy like relayd(8) or nginx. • Cloning only works in bare repos -- this is a limitation inherent to git. You can still view bare repos just fine in legit. • The default head.html template uses my CDN to fetch fonts -- you may or may not want this. • Support or cgit-like filters (for readmes etc.) is planned. • Pushing over https, while supported, is disabled because auth is a pain. Use ssh. • &#34;Private&#34; repos only available over Tailscale is planned.&lt;/p&gt; &#xA;&lt;p&gt;LICENSE&lt;/p&gt; &#xA;&lt;p&gt;legit is licensed under MIT.&lt;/p&gt;</summary>
  </entry>
</feed>