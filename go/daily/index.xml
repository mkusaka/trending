<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-10T01:31:50Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uber-go/automaxprocs</title>
    <updated>2023-11-10T01:31:50Z</updated>
    <id>tag:github.com,2023-11-10:/uber-go/automaxprocs</id>
    <link href="https://github.com/uber-go/automaxprocs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatically set GOMAXPROCS to match Linux container CPU quota.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;automaxprocs &lt;a href=&#34;https://godoc.org/go.uber.org/automaxprocs&#34;&gt;&lt;img src=&#34;https://godoc.org/go.uber.org/automaxprocs?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/uber-go/automaxprocs/actions/workflows/go.yml&#34;&gt;&lt;img src=&#34;https://github.com/uber-go/automaxprocs/actions/workflows/go.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/uber-go/automaxprocs&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/uber-go/automaxprocs/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Automatically set &lt;code&gt;GOMAXPROCS&lt;/code&gt; to match Linux container CPU quota.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go get -u go.uber.org/automaxprocs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import _ &#34;go.uber.org/automaxprocs&#34;&#xA;&#xA;func main() {&#xA;  // Your application logic here.&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Performance&lt;/h1&gt; &#xA;&lt;p&gt;Data measured from Uber&#39;s internal load balancer. We ran the load balancer with 200% CPU quota (i.e., 2 cores):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;GOMAXPROCS&lt;/th&gt; &#xA;   &lt;th&gt;RPS&lt;/th&gt; &#xA;   &lt;th&gt;P50 (ms)&lt;/th&gt; &#xA;   &lt;th&gt;P99.9 (ms)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;28,893.18&lt;/td&gt; &#xA;   &lt;td&gt;1.46&lt;/td&gt; &#xA;   &lt;td&gt;19.70&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2 (equal to quota)&lt;/td&gt; &#xA;   &lt;td&gt;44,715.07&lt;/td&gt; &#xA;   &lt;td&gt;0.84&lt;/td&gt; &#xA;   &lt;td&gt;26.38&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;44,212.93&lt;/td&gt; &#xA;   &lt;td&gt;0.66&lt;/td&gt; &#xA;   &lt;td&gt;30.07&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;41,071.15&lt;/td&gt; &#xA;   &lt;td&gt;0.57&lt;/td&gt; &#xA;   &lt;td&gt;42.94&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;33,111.69&lt;/td&gt; &#xA;   &lt;td&gt;0.43&lt;/td&gt; &#xA;   &lt;td&gt;64.32&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default (24)&lt;/td&gt; &#xA;   &lt;td&gt;22,191.40&lt;/td&gt; &#xA;   &lt;td&gt;0.45&lt;/td&gt; &#xA;   &lt;td&gt;76.19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;When &lt;code&gt;GOMAXPROCS&lt;/code&gt; is increased above the CPU quota, we see P50 decrease slightly, but see significant increases to P99. We also see that the total RPS handled also decreases.&lt;/p&gt; &#xA;&lt;p&gt;When &lt;code&gt;GOMAXPROCS&lt;/code&gt; is higher than the CPU quota allocated, we also saw significant throttling:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cat /sys/fs/cgroup/cpu,cpuacct/system.slice/[...]/cpu.stat&#xA;nr_periods 42227334&#xA;nr_throttled 131923&#xA;throttled_time 88613212216618&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once &lt;code&gt;GOMAXPROCS&lt;/code&gt; was reduced to match the CPU quota, we saw no CPU throttling.&lt;/p&gt; &#xA;&lt;h2&gt;Development Status: Stable&lt;/h2&gt; &#xA;&lt;p&gt;All APIs are finalized, and no breaking changes will be made in the 1.x series of releases. Users of semver-aware dependency management systems should pin automaxprocs to &lt;code&gt;^1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage and support an active, healthy community of contributors â€” including you! Details are in the &lt;a href=&#34;https://raw.githubusercontent.com/uber-go/automaxprocs/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/uber-go/automaxprocs/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;. The automaxprocs maintainers keep an eye on issues and pull requests, but you can also report any negative conduct to &lt;a href=&#34;mailto:oss-conduct@uber.com&#34;&gt;oss-conduct@uber.com&lt;/a&gt;. That email list is a private, safe space; even the automaxprocs maintainers don&#39;t have access, so don&#39;t hesitate to hold us to a high standard.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Released under the &lt;a href=&#34;https://raw.githubusercontent.com/uber-go/automaxprocs/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>