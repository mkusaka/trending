<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-05T01:37:02Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bufbuild/protoc-gen-validate</title>
    <updated>2022-10-05T01:37:02Z</updated>
    <id>tag:github.com,2022-10-05:/bufbuild/protoc-gen-validate</id>
    <link href="https://github.com/bufbuild/protoc-gen-validate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;protoc plugin to generate polyglot message validators&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bufbuild/protoc-gen-validate/main/.github/buf-logo.svg?sanitize=true&#34; alt=&#34;The Buf logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;protoc-gen-validate (PGV)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/bufbuild/protoc-gen-validate?color=blue&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/bufbuild/protoc-gen-validate?include_prereleases&#34; alt=&#34;Release&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/slack-buf-%23e01563&#34; alt=&#34;Slack&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;This project is currently in &lt;strong&gt;alpha&lt;/strong&gt;. The API should be considered unstable and likely to change&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;PGV is a protoc plugin to generate polyglot message validators. While protocol buffers effectively guarantee the types of structured data, they cannot enforce semantic rules for values. This plugin adds support to protoc-generated code to validate such constraints.&lt;/p&gt; &#xA;&lt;p&gt;Developers import the PGV extension and annotate the messages and fields in their proto files with constraint rules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;syntax = &#34;proto3&#34;;&#xA;&#xA;package examplepb;&#xA;&#xA;import &#34;validate/validate.proto&#34;;&#xA;&#xA;message Person {&#xA;  uint64 id    = 1 [(validate.rules).uint64.gt    = 999];&#xA;&#xA;  string email = 2 [(validate.rules).string.email = true];&#xA;&#xA;  string name  = 3 [(validate.rules).string = {&#xA;                      pattern:   &#34;^[^[0-9]A-Za-z]+( [^[0-9]A-Za-z]+)*$&#34;,&#xA;                      max_bytes: 256,&#xA;                   }];&#xA;&#xA;  Location home = 4 [(validate.rules).message.required = true];&#xA;&#xA;  message Location {&#xA;    double lat = 1 [(validate.rules).double = { gte: -90,  lte: 90 }];&#xA;    double lng = 2 [(validate.rules).double = { gte: -180, lte: 180 }];&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Executing &lt;code&gt;protoc&lt;/code&gt; with PGV and the target language&#39;s default plugin will create &lt;code&gt;Validate&lt;/code&gt; methods on the generated types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;p := new(Person)&#xA;&#xA;err := p.Validate() // err: Id must be greater than 999&#xA;p.Id = 1000&#xA;&#xA;err = p.Validate() // err: Email must be a valid email address&#xA;p.Email = &#34;example@lyft.com&#34;&#xA;&#xA;err = p.Validate() // err: Name must match pattern &#39;^[^\d\s]+( [^\d\s]+)*$&#39;&#xA;p.Name = &#34;Protocol Buffer&#34;&#xA;&#xA;err = p.Validate() // err: Home is required&#xA;p.Home = &amp;amp;Location{37.7, 999}&#xA;&#xA;err = p.Validate() // err: Home.Lng must be within [-180, 180]&#xA;p.Home.Lng = -122.4&#xA;&#xA;err = p.Validate() // err: nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;go&lt;/code&gt; toolchain (≥ v1.7)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;protoc&lt;/code&gt; compiler in &lt;code&gt;$PATH&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;protoc-gen-validate&lt;/code&gt; in &lt;code&gt;$PATH&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;official language-specific plugin for target language(s)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Only &lt;code&gt;proto3&lt;/code&gt; syntax is currently supported.&lt;/strong&gt; &lt;code&gt;proto2&lt;/code&gt; syntax support is planned.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Installing PGV can currently only be done from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# fetches this repo into $GOPATH&#xA;go get -d github.com/envoyproxy/protoc-gen-validate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;💡 Yes, our go module path is &lt;code&gt;github.com/envoyproxy/protoc-gen-validate&lt;/code&gt; &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;bufbuild&lt;/code&gt; this is intentional.&lt;/h4&gt; &#xA; &lt;p&gt;Changing the module path is effectively creating a new, independent module. We would prefer not to break our users. The Go team are working on better &lt;code&gt;cmd/go&lt;/code&gt; support for modules that change paths, but progress is slow. Until then, we will continue to use the &lt;code&gt;envoyproxy&lt;/code&gt; module path.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone github.com/bufbuild/protoc-gen-validate&#xA;# installs PGV into $GOPATH/bin&#xA;cd protoc-gen-validate &amp;amp;&amp;amp; make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Parameters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;lang&lt;/code&gt;&lt;/strong&gt;: specify the target language to generate. Currently, the only supported options are: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;go&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cc&lt;/code&gt; for c++ (partially implemented)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;java&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Note: Python works via runtime code generation. There&#39;s no compile-time generation. See the Python section for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Go&lt;/h4&gt; &#xA;&lt;p&gt;Go generation should occur into the same output path as the official plugin. For a proto file &lt;code&gt;example.proto&lt;/code&gt;, the corresponding validation code is generated into &lt;code&gt;../generated/example.pb.validate.go&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;protoc \&#xA;  -I . \&#xA;  -I ${GOPATH}/src \&#xA;  -I ${GOPATH}/src/github.com/envoyproxy/protoc-gen-validate \&#xA;  --go_out=&#34;:../generated&#34; \&#xA;  --validate_out=&#34;lang=go:../generated&#34; \&#xA;  example.proto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All messages generated include the following methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Validate() error&lt;/code&gt; which returns the first error encountered during validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ValidateAll() error&lt;/code&gt; which returns all errors encountered during validation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;PGV requires no additional runtime dependencies from the existing generated code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: by default &lt;strong&gt;example.pb.validate.go&lt;/strong&gt; is nested in a directory structure that matches your &lt;code&gt;option go_package&lt;/code&gt; name. You can change this using the protoc parameter &lt;code&gt;paths=source_relative:.&lt;/code&gt;. Then &lt;code&gt;--validate_out&lt;/code&gt; will output the file where it is expected. See Google&#39;s protobuf documentation or &lt;a href=&#34;https://github.com/golang/protobuf#packages-and-input-paths&#34;&gt;packages and input paths&lt;/a&gt; or &lt;a href=&#34;https://github.com/golang/protobuf#parameters&#34;&gt;parameters&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s also support for the &lt;code&gt;module=example.com/foo&lt;/code&gt; flag &lt;a href=&#34;https://developers.google.com/protocol-buffers/docs/reference/go-generated#invocation&#34;&gt;described here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Java&lt;/h4&gt; &#xA;&lt;p&gt;Java generation is integrated with the existing protobuf toolchain for java projects. For Maven projects, add the following to your pom.xml or build.gradle.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependencies&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;build.buf.protoc-gen-validate&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;pgv-java-stub&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;${pgv.version}&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;&amp;lt;/dependencies&amp;gt;&#xA;&#xA;&amp;lt;build&amp;gt;&#xA;    &amp;lt;extensions&amp;gt;&#xA;        &amp;lt;extension&amp;gt;&#xA;            &amp;lt;groupId&amp;gt;kr.motd.maven&amp;lt;/groupId&amp;gt;&#xA;            &amp;lt;artifactId&amp;gt;os-maven-plugin&amp;lt;/artifactId&amp;gt;&#xA;            &amp;lt;version&amp;gt;1.4.1.Final&amp;lt;/version&amp;gt;&#xA;        &amp;lt;/extension&amp;gt;&#xA;    &amp;lt;/extensions&amp;gt;&#xA;    &amp;lt;plugins&amp;gt;&#xA;        &amp;lt;plugin&amp;gt;&#xA;            &amp;lt;groupId&amp;gt;org.xolstice.maven.plugins&amp;lt;/groupId&amp;gt;&#xA;            &amp;lt;artifactId&amp;gt;protobuf-maven-plugin&amp;lt;/artifactId&amp;gt;&#xA;            &amp;lt;version&amp;gt;0.6.1&amp;lt;/version&amp;gt;&#xA;            &amp;lt;configuration&amp;gt;&#xA;                &amp;lt;protocArtifact&amp;gt;com.google.protobuf:protoc:${protoc.version}:exe:${os.detected.classifier}&amp;lt;/protocArtifact&amp;gt;&#xA;            &amp;lt;/configuration&amp;gt;&#xA;            &amp;lt;executions&amp;gt;&#xA;                &amp;lt;execution&amp;gt;&#xA;                    &amp;lt;id&amp;gt;protoc-java-pgv&amp;lt;/id&amp;gt;&#xA;                    &amp;lt;goals&amp;gt;&#xA;                        &amp;lt;goal&amp;gt;compile-custom&amp;lt;/goal&amp;gt;&#xA;                    &amp;lt;/goals&amp;gt;&#xA;                    &amp;lt;configuration&amp;gt;&#xA;                        &amp;lt;pluginParameter&amp;gt;lang=java&amp;lt;/pluginParameter&amp;gt;&#xA;                        &amp;lt;pluginId&amp;gt;java-pgv&amp;lt;/pluginId&amp;gt;&#xA;                        &amp;lt;pluginArtifact&amp;gt;build.buf.protoc-gen-validate:protoc-gen-validate:${pgv.version}:exe:${os.detected.classifier}&amp;lt;/pluginArtifact&amp;gt;&#xA;                    &amp;lt;/configuration&amp;gt;&#xA;                &amp;lt;/execution&amp;gt;&#xA;            &amp;lt;/executions&amp;gt;&#xA;        &amp;lt;/plugin&amp;gt;&#xA;    &amp;lt;/plugins&amp;gt;&#xA;&amp;lt;/build&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;plugins {&#xA;    ...&#xA;    id &#34;com.google.protobuf&#34; version &#34;${protobuf.version}&#34;&#xA;    ...&#xA;}&#xA;&#xA;protobuf {&#xA;    protoc {&#xA;        artifact = &#34;com.google.protobuf:protoc:${protoc.version}&#34;&#xA;    }&#xA;&#xA;    plugins {&#xA;        javapgv {&#xA;            artifact = &#34;build.buf.protoc-gen-validate:protoc-gen-validate:${pgv.version}&#34;&#xA;        }&#xA;    }&#xA;&#xA;    generateProtoTasks {&#xA;        all()*.plugins {&#xA;            javapgv {&#xA;                option &#34;lang=java&#34;&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// Create a validator index that reflectively loads generated validators&#xA;ValidatorIndex index = new ReflectiveValidatorIndex();&#xA;// Assert that a message is valid&#xA;index.validatorFor(message.getClass()).assertValid(message);&#xA;&#xA;// Create a gRPC client and server interceptor to automatically validate messages (requires pgv-java-grpc module)&#xA;clientStub = clientStub.withInterceptors(new ValidatingClientInterceptor(index));&#xA;serverBuilder.addService(ServerInterceptors.intercept(svc, new ValidatingServerInterceptor(index)));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Python&lt;/h4&gt; &#xA;&lt;p&gt;The python implementation works via JIT code generation. In other words, the &lt;code&gt;validate(msg)&lt;/code&gt; function is written on-demand and &lt;a href=&#34;https://docs.python.org/3/library/functions.html#exec&#34;&gt;exec-ed&lt;/a&gt;. An LRU-cache improves performance by storing generated functions per descriptor.&lt;/p&gt; &#xA;&lt;p&gt;The python package is available on &lt;a href=&#34;https://pypi.org/project/protoc-gen-validate&#34;&gt;PyPI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run &lt;code&gt;validate()&lt;/code&gt;, do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from entities_pb2 import Person&#xA;from protoc_gen_validate.validator import validate, ValidationFailed&#xA;&#xA;p = Person(first_name=&#34;Foo&#34;, last_name=&#34;Bar&#34;, age=42)&#xA;try:&#xA;    validate(p)&#xA;except ValidationFailed as err:&#xA;    print(err)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can view what code has been generated by using the &lt;code&gt;print_validate()&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;h2&gt;Constraint Rules&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bufbuild/protoc-gen-validate/main/validate/validate.proto&#34;&gt;The provided constraints&lt;/a&gt; are modeled largerly after those in JSON Schema. PGV rules can be mixed for the same field; the plugin ensures the rules applied to a field cannot contradict before code generation.&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/bufbuild/protoc-gen-validate/main/rule_comparison.md&#34;&gt;constraint rule comparison matrix&lt;/a&gt; for language-specific constraint capabilities.&lt;/p&gt; &#xA;&lt;h3&gt;Numerics&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All numeric types (&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;sint32&lt;/code&gt;, &lt;code&gt;sint64&lt;/code&gt;, &lt;code&gt;fixed32&lt;/code&gt;, &lt;code&gt;fixed64&lt;/code&gt;, &lt;code&gt;sfixed32&lt;/code&gt;, &lt;code&gt;sfixed64&lt;/code&gt;) share the same rules.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;const&lt;/strong&gt;: the field must be &lt;em&gt;exactly&lt;/em&gt; the specified value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must equal 1.23 exactly&#xA;float x = 1 [(validate.rules).float.const = 1.23];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;lt/lte/gt/gte&lt;/strong&gt;: these inequalities (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, respectively) allow for deriving ranges in which the field must reside.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be less than 10&#xA;int32 x = 1 [(validate.rules).int32.lt = 10];&#xA;&#xA;// x must be greater than or equal to 20&#xA;uint64 x = 1 [(validate.rules).uint64.gte = 20];&#xA;&#xA;// x must be in the range [30, 40)&#xA;fixed32 x = 1 [(validate.rules).fixed32 = {gte:30, lt: 40}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Inverting the values of &lt;code&gt;lt(e)&lt;/code&gt; and &lt;code&gt;gt(e)&lt;/code&gt; is valid and creates an exclusive range.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be outside the range [30, 40)&#xA;double x = 1 [(validate.rules).double = {lt:30, gte:40}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;in/not_in&lt;/strong&gt;: these two rules permit specifying allow/denylists for the values of a field.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be either 1, 2, or 3&#xA;uint32 x = 1 [(validate.rules).uint32 = {in: [1,2,3]}];&#xA;&#xA;// x cannot be 0 nor 0.99&#xA;float x = 1 [(validate.rules).float = {not_in: [0, 0.99]}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ignore_empty&lt;/strong&gt;: this rule specifies that if field is empty or set to the default value, to ignore any validation rules. These are typically useful where being able to unset a field in an update request, or to skip validation for optional fields where switching to WKTs is not feasible.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;unint32 x = 1 [(validate.rules).uint32 = {ignore_empty: true, gte: 200}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;const&lt;/strong&gt;: the field must be &lt;em&gt;exactly&lt;/em&gt; the specified value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be set to true&#xA;bool x = 1 [(validate.rules).bool.const = true];&#xA;&#xA;// x cannot be set to true&#xA;bool x = 1 [(validate.rules).bool.const = false];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;const&lt;/strong&gt;: the field must be &lt;em&gt;exactly&lt;/em&gt; the specified value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be set to &#34;foo&#34;&#xA;string x = 1 [(validate.rules).string.const = &#34;foo&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;len/min_len/max_len&lt;/strong&gt;: these rules constrain the number of characters (Unicode code points) in the field. Note that the number of characters may differ from the number of bytes in the string. The string is considered as-is, and does not normalize.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be exactly 5 characters long&#xA;string x = 1 [(validate.rules).string.len = 5];&#xA;&#xA;// x must be at least 3 characters long&#xA;string x = 1 [(validate.rules).string.min_len = 3];&#xA;&#xA;// x must be between 5 and 10 characters, inclusive&#xA;string x = 1 [(validate.rules).string = {min_len: 5, max_len: 10}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;min_bytes/max_bytes&lt;/strong&gt;: these rules constrain the number of bytes in the field.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be at most 15 bytes long&#xA;string x = 1 [(validate.rules).string.max_bytes = 15];&#xA;&#xA;// x must be between 128 and 1024 bytes long&#xA;string x = 1 [(validate.rules).string = {min_bytes: 128, max_bytes: 1024}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;pattern&lt;/strong&gt;: the field must match the specified &lt;a href=&#34;https://github.com/google/re2/wiki/Syntax&#34;&gt;RE2-compliant&lt;/a&gt; regular expression. The included expression should elide any delimiters (ie, &lt;code&gt;/\d+/&lt;/code&gt; should just be &lt;code&gt;\d+&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be a non-empty, case-insensitive hexadecimal string&#xA;string x = 1 [(validate.rules).string.pattern = &#34;(?i)^[0-9a-f]+$&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;prefix/suffix/contains/not_contains&lt;/strong&gt;: the field must contain the specified substring in an optionally explicit location, or not contain the specified substring.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must begin with &#34;foo&#34;&#xA;string x = 1 [(validate.rules).string.prefix = &#34;foo&#34;];&#xA;&#xA;// x must end with &#34;bar&#34;&#xA;string x = 1 [(validate.rules).string.suffix = &#34;bar&#34;];&#xA;&#xA;// x must contain &#34;baz&#34; anywhere inside it&#xA;string x = 1 [(validate.rules).string.contains = &#34;baz&#34;];&#xA;&#xA;// x cannot contain &#34;baz&#34; anywhere inside it&#xA;string x = 1 [(validate.rules).string.not_contains = &#34;baz&#34;];&#xA;&#xA;// x must begin with &#34;fizz&#34; and end with &#34;buzz&#34;&#xA;string x = 1 [(validate.rules).string = {prefix: &#34;fizz&#34;, suffix: &#34;buzz&#34;}];&#xA;&#xA;// x must end with &#34;.proto&#34; and be less than 64 characters&#xA;string x = 1 [(validate.rules).string = {suffix: &#34;.proto&#34;, max_len:64}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;in/not_in&lt;/strong&gt;: these two rules permit specifying allow/denylists for the values of a field.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be either &#34;foo&#34;, &#34;bar&#34;, or &#34;baz&#34;&#xA;string x = 1 [(validate.rules).string = {in: [&#34;foo&#34;, &#34;bar&#34;, &#34;baz&#34;]}];&#xA;&#xA;// x cannot be &#34;fizz&#34; nor &#34;buzz&#34;&#xA;string x = 1 [(validate.rules).string = {not_in: [&#34;fizz&#34;, &#34;buzz&#34;]}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ignore_empty&lt;/strong&gt;: this rule specifies that if field is empty or set to the default value, to ignore any validation rules. These are typically useful where being able to unset a field in an update request, or to skip validation for optional fields where switching to WKTs is not feasible.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;string CountryCode = 1 [(validate.rules).string = {ignore_empty: true, len: 2}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;well-known formats&lt;/strong&gt;: these rules provide advanced constraints for common string patterns. These constraints will typically be more permissive and performant than equivalent regular expression patterns, while providing more explanatory failure descriptions.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be a valid email address (via RFC 5322)&#xA;string x = 1 [(validate.rules).string.email = true];&#xA;&#xA;// x must be a valid address (IP or Hostname).&#xA;string x = 1 [(validate.rules).string.address = true];&#xA;&#xA;// x must be a valid hostname (via RFC 1034)&#xA;string x = 1 [(validate.rules).string.hostname = true];&#xA;&#xA;// x must be a valid IP address (either v4 or v6)&#xA;string x = 1 [(validate.rules).string.ip = true];&#xA;&#xA;// x must be a valid IPv4 address&#xA;// eg: &#34;192.168.0.1&#34;&#xA;string x = 1 [(validate.rules).string.ipv4 = true];&#xA;&#xA;// x must be a valid IPv6 address&#xA;// eg: &#34;fe80::3&#34;&#xA;string x = 1 [(validate.rules).string.ipv6 = true];&#xA;&#xA;// x must be a valid absolute URI (via RFC 3986)&#xA;string x = 1 [(validate.rules).string.uri = true];&#xA;&#xA;// x must be a valid URI reference (either absolute or relative)&#xA;string x = 1 [(validate.rules).string.uri_ref = true];&#xA;&#xA;// x must be a valid UUID (via RFC 4122)&#xA;string x = 1 [(validate.rules).string.uuid = true];&#xA;&#xA;// x must conform to a well known regex for HTTP header names (via RFC 7230)&#xA;string x = 1 [(validate.rules).string.well_known_regex = HTTP_HEADER_NAME]&#xA;&#xA;// x must conform to a well known regex for HTTP header values (via RFC 7230) &#xA;string x = 1 [(validate.rules).string.well_known_regex = HTTP_HEADER_VALUE];&#xA;&#xA;// x must conform to a well known regex for headers, disallowing \r\n\0 characters.&#xA;string x = 1 [(validate.rules).string {well_known_regex: HTTP_HEADER_VALUE, strict: false}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bytes&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Literal values should be expressed with strings, using escaping where necessary.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;const&lt;/strong&gt;: the field must be &lt;em&gt;exactly&lt;/em&gt; the specified value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be set to &#34;foo&#34; (&#34;\x66\x6f\x6f&#34;)&#xA;bytes x = 1 [(validate.rules).bytes.const = &#34;foo&#34;];&#xA;&#xA;// x must be set to &#34;\xf0\x90\x28\xbc&#34;&#xA;bytes x = 1 [(validate.rules).bytes.const = &#34;\xf0\x90\x28\xbc&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;len/min_len/max_len&lt;/strong&gt;: these rules constrain the number of bytes in the field.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be exactly 3 bytes&#xA;bytes x = 1 [(validate.rules).bytes.len = 3];&#xA;&#xA;// x must be at least 3 bytes long&#xA;bytes x = 1 [(validate.rules).bytes.min_len = 3];&#xA;&#xA;// x must be between 5 and 10 bytes, inclusive&#xA;bytes x = 1 [(validate.rules).bytes = {min_len: 5, max_len: 10}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;pattern&lt;/strong&gt;: the field must match the specified &lt;a href=&#34;https://github.com/google/re2/wiki/Syntax&#34;&gt;RE2-compliant&lt;/a&gt; regular expression. The included expression should elide any delimiters (ie, &lt;code&gt;/\d+/&lt;/code&gt; should just be &lt;code&gt;\d+&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be a non-empty, ASCII byte sequence&#xA;bytes x = 1 [(validate.rules).bytes.pattern = &#34;^[\x00-\x7F]+$&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;prefix/suffix/contains&lt;/strong&gt;: the field must contain the specified byte sequence in an optionally explicit location.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must begin with &#34;\x99&#34;&#xA;bytes x = 1 [(validate.rules).bytes.prefix = &#34;\x99&#34;];&#xA;&#xA;// x must end with &#34;buz\x7a&#34;&#xA;bytes x = 1 [(validate.rules).bytes.suffix = &#34;buz\x7a&#34;];&#xA;&#xA;// x must contain &#34;baz&#34; anywhere inside it&#xA;bytes x = 1 [(validate.rules).bytes.contains = &#34;baz&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;in/not_in&lt;/strong&gt;: these two rules permit specifying allow/denylists for the values of a field.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be either &#34;foo&#34;, &#34;bar&#34;, or &#34;baz&#34;&#xA;bytes x = 1 [(validate.rules).bytes = {in: [&#34;foo&#34;, &#34;bar&#34;, &#34;baz&#34;]}];&#xA;&#xA;// x cannot be &#34;fizz&#34; nor &#34;buzz&#34;&#xA;bytes x = 1 [(validate.rules).bytes = {not_in: [&#34;fizz&#34;, &#34;buzz&#34;]}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ignore_empty&lt;/strong&gt;: this rule specifies that if field is empty or set to the default value, to ignore any validation rules. These are typically useful where being able to unset a field in an update request, or to skip validation for optional fields where switching to WKTs is not feasible.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;bytes x = 1 [(validate.rules).bytes = {ignore_empty: true, in: [&#34;foo&#34;, &#34;bar&#34;, &#34;baz&#34;]}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;well-known formats&lt;/strong&gt;: these rules provide advanced constraints for common patterns. These constraints will typically be more permissive and performant than equivalent regular expression patterns, while providing more explanatory failure descriptions.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be a valid IP address (either v4 or v6) in byte format&#xA;bytes x = 1 [(validate.rules).bytes.ip = true];&#xA;&#xA;// x must be a valid IPv4 address in byte format&#xA;// eg: &#34;\xC0\xA8\x00\x01&#34;&#xA;bytes x = 1 [(validate.rules).bytes.ipv4 = true];&#xA;&#xA;// x must be a valid IPv6 address in byte format&#xA;// eg: &#34;\x20\x01\x0D\xB8\x85\xA3\x00\x00\x00\x00\x8A\x2E\x03\x70\x73\x34&#34;&#xA;bytes x = 1 [(validate.rules).bytes.ipv6 = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Enums&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All literal values should use the numeric (int32) value as defined in the enum descriptor.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The following examples use this &lt;code&gt;State&lt;/code&gt; enum&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;enum State {&#xA;  INACTIVE = 0;&#xA;  PENDING  = 1;&#xA;  ACTIVE   = 2;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;const&lt;/strong&gt;: the field must be &lt;em&gt;exactly&lt;/em&gt; the specified value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be set to ACTIVE (2)&#xA;State x = 1 [(validate.rules).enum.const = 2];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;defined_only&lt;/strong&gt;: the field must be one of the specified values in the enum descriptor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x can only be INACTIVE, PENDING, or ACTIVE&#xA;State x = 1 [(validate.rules).enum.defined_only = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;in/not_in&lt;/strong&gt;: these two rules permit specifying allow/denylists for the values of a field.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be either INACTIVE (0) or ACTIVE (2)&#xA;State x = 1 [(validate.rules).enum = {in: [0,2]}];&#xA;&#xA;// x cannot be PENDING (1)&#xA;State x = 1 [(validate.rules).enum = {not_in: [1]}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Messages&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If a field contains a message and the message has been generated with PGV, validation will be performed recursively. Message&#39;s not generated with PGV are skipped.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// if Person was generated with PGV and x is set,&#xA;// x&#39;s fields will be validated.&#xA;Person x = 1;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;skip&lt;/strong&gt;: this rule specifies that the validation rules of this field should not be evaluated.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// The fields on Person x will not be validated.&#xA;Person x = 1 [(validate.rules).message.skip = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;required&lt;/strong&gt;: this rule specifies that the field cannot be unset.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x cannot be unset&#xA;Person x = 1 [(validate.rules).message.required = true];&#xA;&#xA;// x cannot be unset, but the validations on x will not be performed&#xA;Person x = 1 [(validate.rules).message = {required: true, skip: true}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Repeated&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;min_items/max_items&lt;/strong&gt;: these rules control how many elements are contained in the field&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must contain at least 3 elements&#xA;repeated int32 x = 1 [(validate.rules).repeated.min_items = 3];&#xA;&#xA;// x must contain between 5 and 10 Persons, inclusive&#xA;repeated Person x = 1 [(validate.rules).repeated = {min_items: 5, max_items: 10}];&#xA;&#xA;// x must contain exactly 7 elements&#xA;repeated double x = 1 [(validate.rules).repeated = {min_items: 7, max_items: 7}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;unique&lt;/strong&gt;: this rule requires that all elements in the field must be unique. This rule does not support repeated messages.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must contain unique int64 values&#xA;repeated int64 x = 1 [(validate.rules).repeated.unique = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;items&lt;/strong&gt;: this rule specifies constraints that should be applied to each element in the field. Repeated message fields also have their validation rules applied unless &lt;code&gt;skip&lt;/code&gt; is specified on this constraint.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must contain positive float values&#xA;repeated float x = 1 [(validate.rules).repeated.items.float.gt = 0];&#xA;&#xA;// x must contain Persons but don&#39;t validate them&#xA;repeated Person x = 1 [(validate.rules).repeated.items.message.skip = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ignore_empty&lt;/strong&gt;: this rule specifies that if field is empty or set to the default value, to ignore any validation rules. These are typically useful where being able to unset a field in an update request, or to skip validation for optional fields where switching to WKTs is not feasible.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;repeated int64 x = 1 [(validate.rules).repeated = {ignore_empty: true, items: {int64: {gt: 200}}}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Maps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;min_pairs/max_pairs&lt;/strong&gt;: these rules control how many KV pairs are contained in this field&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must contain at least 3 KV pairs&#xA;map&amp;lt;string, uint64&amp;gt; x = 1 [(validate.rules).map.min_pairs = 3];&#xA;&#xA;// x must contain between 5 and 10 KV pairs&#xA;map&amp;lt;string, string&amp;gt; x = 1 [(validate.rules)].map = {min_pairs: 5, max_pairs: 10}];&#xA;&#xA;// x must contain exactly 7 KV pairs&#xA;map&amp;lt;string, Person&amp;gt; x = 1 [(validate.rules)].map = {min_pairs: 7, max_pairs: 7}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;no_sparse&lt;/strong&gt;: for map fields with message values, setting this rule to true disallows keys with unset values.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// all values in x must be set&#xA;map&amp;lt;uint64, Person&amp;gt; x = 1 [(validate.rules).map.no_sparse = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;keys&lt;/strong&gt;: this rule specifies constraints that are applied to the keys in the field.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x&#39;s keys must all be negative&#xA;&amp;lt;sint32, string&amp;gt; x = [(validate.rules).map.keys.sint32.lt = 0];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;values&lt;/strong&gt;: this rule specifies constraints that are be applied to each value in the field. Repeated message fields also have their validation rules applied unless &lt;code&gt;skip&lt;/code&gt; is specified on this constraint.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must contain strings of at least 3 characters&#xA;map&amp;lt;string, string&amp;gt; x = 1 [(validate.rules).map.values.string.min_len = 3];&#xA;&#xA;// x must contain Persons but doesn&#39;t validate them&#xA;map&amp;lt;string, Person&amp;gt; x = 1 [(validate.rules).map.values.message.skip = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ignore_empty&lt;/strong&gt;: this rule specifies that if field is empty or set to the default value, to ignore any validation rules. These are typically useful where being able to unset a field in an update request, or to skip validation for optional fields where switching to WKTs is not feasible.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;map&amp;lt;string, string&amp;gt; x = 1 [(validate.rules).map = {ignore_empty: true, values: {string: {min_len: 3}}}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Well-Known Types (WKTs)&lt;/h3&gt; &#xA;&lt;p&gt;A set of &lt;a href=&#34;https://developers.google.com/protocol-buffers/docs/reference/google.protobuf&#34;&gt;WKTs&lt;/a&gt; are packaged with protoc and common message patterns useful in many domains.&lt;/p&gt; &#xA;&lt;h4&gt;Scalar Value Wrappers&lt;/h4&gt; &#xA;&lt;p&gt;In the &lt;code&gt;proto3&lt;/code&gt; syntax, there is no way of distinguishing between unset and the zero value of a scalar field. The value WKTs permit this differentiation by wrapping them in a message. PGV permits using the same scalar rules that the wrapper encapsulates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// if it is set, x must be greater than 3&#xA;google.protobuf.Int32Value x = 1 [(validate.rules).int32.gt = 3];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Message Rules can also be used with scalar Well-Known Types (WKTs):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// Ensures that if a value is not set for age, it would not pass the validation despite its zero value being 0.&#xA;message X { google.protobuf.Int32Value age = 1 [(validate.rules).int32.gt = -1, (validate.rules).message.required = true]; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Anys&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;required&lt;/strong&gt;: this rule specifies that the field must be set&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x cannot be unset&#xA;google.protobuf.Any x = 1 [(validate.rules).any.required = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;in/not_in&lt;/strong&gt;: these two rules permit specifying allow/denylists for the &lt;code&gt;type_url&lt;/code&gt; value in this field. Consider using a &lt;code&gt;oneof&lt;/code&gt; union instead of &lt;code&gt;in&lt;/code&gt; if possible.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must not be the Duration or Timestamp WKT&#xA;google.protobuf.Any x = 1 [(validate.rules).any = {not_in: [&#xA;    &#34;type.googleapis.com/google.protobuf.Duration&#34;,&#xA;    &#34;type.googleapis.com/google.protobuf.Timestamp&#34;&#xA;  ]}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Durations&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;required&lt;/strong&gt;: this rule specifies that the field must be set&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x cannot be unset&#xA;google.protobuf.Duration x = 1 [(validate.rules).duration.required = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;const&lt;/strong&gt;: the field must be &lt;em&gt;exactly&lt;/em&gt; the specified value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must equal 1.5s exactly&#xA;google.protobuf.Duration x = 1 [(validate.rules).duration.const = {&#xA;    seconds: 1,&#xA;    nanos:   500000000&#xA;  }];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;lt/lte/gt/gte&lt;/strong&gt;: these inequalities (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, respectively) allow for deriving ranges in which the field must reside.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be less than 10s&#xA;google.protobuf.Duration x = 1 [(validate.rules).duration.lt.seconds = 10];&#xA;&#xA;// x must be greater than or equal to 20ns&#xA;google.protobuf.Duration x = 1 [(validate.rules).duration.gte.nanos = 20];&#xA;&#xA;// x must be in the range [0s, 1s)&#xA;google.protobuf.Duration x = 1 [(validate.rules).duration = {&#xA;    gte: {},&#xA;    lt:  {seconds: 1}&#xA;  }];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Inverting the values of &lt;code&gt;lt(e)&lt;/code&gt; and &lt;code&gt;gt(e)&lt;/code&gt; is valid and creates an exclusive range.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be outside the range [0s, 1s)&#xA;google.protobuf.Duration x = 1 [(validate.rules).duration = {&#xA;    lt:  {},&#xA;    gte: {seconds: 1}&#xA;  }];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;in/not_in&lt;/strong&gt;: these two rules permit specifying allow/denylists for the values of a field.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be either 0s or 1s&#xA;google.protobuf.Duration x = 1 [(validate.rules).duration = {in: [&#xA;    {},&#xA;    {seconds: 1}&#xA;  ]}];&#xA;&#xA;// x cannot be 20s nor 500ns&#xA;google.protobuf.Duration x = 1 [(validate.rules).duration = {not_in: [&#xA;    {seconds: 20},&#xA;    {nanos: 500}&#xA;  ]}];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Timestamps&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;required&lt;/strong&gt;: this rule specifies that the field must be set&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x cannot be unset&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp.required = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;const&lt;/strong&gt;: the field must be &lt;em&gt;exactly&lt;/em&gt; the specified value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must equal 2009/11/10T23:00:00.500Z exactly&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp.const = {&#xA;    seconds: 63393490800,&#xA;    nanos:   500000000&#xA;  }];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;lt/lte/gt/gte&lt;/strong&gt;: these inequalities (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, respectively) allow for deriving ranges in which the field must reside.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be less than the Unix Epoch&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp.lt.seconds = 0];&#xA;&#xA;// x must be greater than or equal to 2009/11/10T23:00:00Z&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp.gte.seconds = 63393490800];&#xA;&#xA;// x must be in the range [epoch, 2009/11/10T23:00:00Z)&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp = {&#xA;    gte: {},&#xA;    lt:  {seconds: 63393490800}&#xA;  }];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Inverting the values of &lt;code&gt;lt(e)&lt;/code&gt; and &lt;code&gt;gt(e)&lt;/code&gt; is valid and creates an exclusive range.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be outside the range [epoch, 2009/11/10T23:00:00Z)&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp = {&#xA;    lt:  {},&#xA;    gte: {seconds: 63393490800}&#xA;  }];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;lt_now/gt_now&lt;/strong&gt;: these inequalities allow for ranges relative to the current time. These rules cannot be used with the absolute rules above.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be less than the current timestamp&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp.lt_now = true];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;within&lt;/strong&gt;: this rule specifies that the field&#39;s value should be within a duration of the current time. This rule can be used in conjunction with &lt;code&gt;lt_now&lt;/code&gt; and &lt;code&gt;gt_now&lt;/code&gt; to control those ranges.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// x must be within ±1s of the current time&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp.within.seconds = 1];&#xA;&#xA;// x must be within the range (now, now+1h)&#xA;google.protobuf.Timestamp x = 1 [(validate.rules).timestamp = {&#xA;    gt_now: true,&#xA;    within: {seconds: 3600}&#xA;  }];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Message-Global&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;disabled&lt;/strong&gt;: All validation rules for the fields on a message can be nullified, including any message fields that support validation themselves.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;message Person {&#xA;  option (validate.disabled) = true;&#xA;&#xA;  // x will not be required to be greater than 123&#xA;  uint64 x = 1 [(validate.rules).uint64.gt = 123];&#xA;&#xA;  // y&#39;s fields will not be validated&#xA;  Person y = 2;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ignored&lt;/strong&gt;: Don&#39;t generate a validate method or any related validation code for this message.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;message Person {&#xA;  option (validate.ignored) = true;&#xA;&#xA;  // x will not be required to be greater than 123&#xA;  uint64 x = 1 [(validate.rules).uint64.gt = 123];&#xA;&#xA;  // y&#39;s fields will not be validated&#xA;  Person y = 2;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;OneOfs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;required&lt;/strong&gt;: require that one of the fields in a &lt;code&gt;oneof&lt;/code&gt; must be set. By default, none or one of the unioned fields can be set. Enabling this rules disallows having all of them unset.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;oneof id {&#xA;  // either x, y, or z must be set.&#xA;  option (validate.required) = true;&#xA;&#xA;  string x = 1;&#xA;  int32  y = 2;&#xA;  Person z = 3;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;PGV is written in Go on top of the &lt;a href=&#34;https://github.com/lyft/protoc-gen-star&#34;&gt;protoc-gen-star&lt;/a&gt; framework and compiles to a standalone binary.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;All PGV dependencies are currently checked into the project. To test PGV, &lt;code&gt;protoc&lt;/code&gt; must be installed, either from &lt;a href=&#34;https://github.com/google/protobuf&#34;&gt;source&lt;/a&gt;, the provided &lt;a href=&#34;https://github.com/google/protobuf/releases&#34;&gt;releases&lt;/a&gt;, or a package manager. The official protoc plugin for the target language(s) should be installed as well.&lt;/p&gt; &#xA;&lt;h3&gt;Make Targets&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;make build&lt;/code&gt;&lt;/strong&gt;: generates the constraints proto and compiles PGV into &lt;code&gt;$GOPATH/bin&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;make lint&lt;/code&gt;&lt;/strong&gt;: runs static-analysis rules against the PGV codebase, including &lt;code&gt;golint&lt;/code&gt;, &lt;code&gt;go vet&lt;/code&gt;, and &lt;code&gt;gofmt -s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;make testcases&lt;/code&gt;&lt;/strong&gt;: generates the proto files in &lt;a href=&#34;https://raw.githubusercontent.com/bufbuild/protoc-gen-validate/main/tests/harness/cases&#34;&gt;&lt;code&gt;/tests/harness/cases&lt;/code&gt;&lt;/a&gt;. These are used by the test harness to verify the validation rules generated for each language.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;make harness&lt;/code&gt;&lt;/strong&gt;: executes the test-cases against each language&#39;s test harness.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run all tests under Bazel&lt;/h3&gt; &#xA;&lt;p&gt;Ensure that your &lt;code&gt;PATH&lt;/code&gt; is setup to include &lt;code&gt;protoc-gen-go&lt;/code&gt; and &lt;code&gt;protoc&lt;/code&gt;, then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel test //tests/...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;PGV comes with a &lt;a href=&#34;https://raw.githubusercontent.com/bufbuild/protoc-gen-validate/main/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; for consistent development tooling and CI. The main entrypoint is &lt;code&gt;make&lt;/code&gt; with &lt;code&gt;quick&lt;/code&gt; as the default target. This repo should be volumed into &lt;code&gt;/go/src/github.com/envoyproxy/protoc-gen-validate&lt;/code&gt; for the proper behavior.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# build the image&#xA;docker build -t lyft/protoc-gen-validate .&#xA;&#xA;# executes the default make target: quick&#xA;docker run --rm \&#xA;  -v $(PWD):/go/src/github.com/envoyproxy/protoc-gen-validate \&#xA;  lyft/protoc-gen-validate&#xA;&#xA;# executes the &#39;build&#39; &amp;amp; &#39;generate-testdata&#39; make targets&#xA;docker run --rm \&#xA;  -v $(PWD):/go/src/github.com/envoyproxy/protoc-gen-validate \&#xA;  lyft/protoc-gen-validate \&#xA;  build generate-testdata&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>projectdiscovery/asnmap</title>
    <updated>2022-10-05T01:37:02Z</updated>
    <id>tag:github.com,2022-10-05:/projectdiscovery/asnmap</id>
    <link href="https://github.com/projectdiscovery/asnmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go CLI and Library for quickly mapping organization network ranges using ASN information.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/8293321/192910103-a5945f2c-fa82-45e1-8568-1e46898ff6c5.png&#34; alt=&#34;asnmap&#34; width=&#34;200px&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Go CLI and Library for quickly mapping organization network ranges using &lt;a href=&#34;https://en.wikipedia.org/wiki/Autonomous_system_(Internet)&#34;&gt;ASN&lt;/a&gt; information.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/projectdiscovery/asnmap&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/projectdiscovery/asnmap&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/asnmap/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/asnmap/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/projectdiscovery/asnmap&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/pdiscoveryio&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/pdiscoveryio.svg?logo=twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/695645237418131507.svg?logo=discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/asnmap/main/#features&#34;&gt;Features&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/asnmap/main/#installation&#34;&gt;Installation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/asnmap/main/#usage&#34;&gt;Usage&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/asnmap/main/#running-asnmap&#34;&gt;Running asnmap&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;Join Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt;  &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8293321/192092220-5d734305-fd3e-43fb-919a-91ff5296dfd2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ASN to CIDR&lt;/strong&gt; Lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ORG to CIDR&lt;/strong&gt; Lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DNS to CIDR&lt;/strong&gt; Lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IP to CIDR&lt;/strong&gt; Lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ASN/DNS/IP/ORG&lt;/strong&gt; input&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JSON/CSV/TEXT&lt;/strong&gt; output&lt;/li&gt; &#xA; &lt;li&gt;STD &lt;strong&gt;IN/OUT&lt;/strong&gt; support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;asnmap requires &lt;strong&gt;Go 1.18&lt;/strong&gt; to install successfully. To install, just run the below command or download pre-compiled binary from &lt;a href=&#34;https://github.com/projectdiscovery/asnmap/releases&#34;&gt;release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go install github.com/projectdiscovery/asnmap/cmd/asnmap@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;asnmap -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will display help for the tool. Here are all the flag it supports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Usage:&#xA;  ./asnmap [flags]&#xA;&#xA;Flags:&#xA;INPUT:&#xA;   -a, -asn string[]      target asn to lookup, example: -a AS5650&#xA;   -i, -ip string[]       target ip to lookup, example: -i 100.19.12.21, -i 2a10:ad40:: &#xA;   -d, -domain string[]   target domain to lookup, example: -d google.com, -d facebook.com&#xA;   -org string[]          target organization to lookup, example: -org GOOGLE&#xA;&#xA;CONFIGURATIONS:&#xA;   -config string           path to the asnmap configuration file&#xA;   -r, -resolvers string[]  list of resolvers to use&#xA;&#xA;OUTPUT:&#xA;   -o, -output string  file to write output to&#xA;   -j, -json           display json format output&#xA;   -c, -csv            display csv format output&#xA;   -v6                 display ipv6 cidr ranges in cli output&#xA;   -v, -verbose        display verbose output&#xA;   -silent             display silent output&#xA;   -version            show version of the project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running asnmap&lt;/h2&gt; &#xA;&lt;h3&gt;Input for asnmap&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;asnmap&lt;/strong&gt; support multiple inputs including &lt;strong&gt;ASN&lt;/strong&gt;, &lt;strong&gt;IP&lt;/strong&gt;, &lt;strong&gt;DNS&lt;/strong&gt; and &lt;strong&gt;ORG&lt;/strong&gt; name to query ASN/CIDR information.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Input&lt;/th&gt; &#xA;   &lt;th&gt;ASN&lt;/th&gt; &#xA;   &lt;th&gt;DNS&lt;/th&gt; &#xA;   &lt;th&gt;IP&lt;/th&gt; &#xA;   &lt;th&gt;ORG&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;AS14421&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;example.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;93.184.216.34&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;GOOGLE&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Input can be provided either using specific options or STDIN which accepts all the supported formats. Single, multiple (comma-separated) and file input is supported for all the options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo GOOGLE | ./asnmap -silent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example input for asnmap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;asnmap -a AS45596 -silent&#xA;asnmap -i 100.19.12.21 -silent&#xA;asnmap -d hackerone.com -silent&#xA;asnmap -o GOOGLE -silent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Default Run&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;asnmap&lt;/strong&gt; by default returns the CIDR range for given input.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo GOOGLE | ./asnmap&#xA;&#xA;   ___   _____  __              &#xA;  / _ | / __/ |/ /_ _  ___ ____ &#xA; / __ |_\ \/    /  &#39; \/ _  / _ \&#xA;/_/ |_/___/_/|_/_/_/_/\_,_/ .__/&#xA;                         /_/    v0.0.1&#xA;&#x9;&#x9;projectdiscovery.io&#xA;&#xA;Use with caution. You are responsible for your actions&#xA;Developers assume no liability and are not responsible for any misuse or damage.&#xA;&#xA;8.8.4.0/24&#xA;8.8.8.0/24&#xA;8.35.200.0/21&#xA;34.3.3.0/24&#xA;34.4.4.0/24&#xA;34.96.0.0/20&#xA;34.96.32.0/19&#xA;34.96.64.0/18&#xA;34.98.64.0/18&#xA;34.98.136.0/21&#xA;34.98.144.0/21&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JSON Output&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;asnmap&lt;/strong&gt; by default displays CIDR range, and all the information is always available in JSON format, for automation and post processing using &lt;code&gt;-json&lt;/code&gt; output is most convenient option to use.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo hackerone.com | ./asnmap -json -silent | jq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;timestamp&#34;: &#34;2022-09-19 12:14:33.267339314 +0530 IST&#34;,&#xA;  &#34;input&#34;: &#34;hackerone.com&#34;,&#xA;  &#34;as_number&#34;: &#34;AS13335&#34;,&#xA;  &#34;as_name&#34;: &#34;CLOUDFLARENET&#34;,&#xA;  &#34;as_country&#34;: &#34;US&#34;,&#xA;  &#34;as_range&#34;: [&#xA;    &#34;104.16.0.0/14&#34;,&#xA;    &#34;104.20.0.0/16&#34;,&#xA;    &#34;104.21.0.0/17&#34;&#xA;  ]&#xA;}&#xA;{&#xA;  &#34;timestamp&#34;: &#34;2022-09-19 12:14:33.457401266 +0530 IST&#34;,&#xA;  &#34;input&#34;: &#34;hackerone.com&#34;,&#xA;  &#34;as_number&#34;: &#34;AS13335&#34;,&#xA;  &#34;as_name&#34;: &#34;CLOUDFLARENET&#34;,&#xA;  &#34;as_country&#34;: &#34;US&#34;,&#xA;  &#34;as_range&#34;: [&#xA;    &#34;2606:4700:8390::/44&#34;&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CSV Output&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;asnmap&lt;/strong&gt; also support csv format output which has all the information just like JSON output&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo hackerone.com | ./asnmap -csv -silent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;timestamp|input|as_number|as_name|as_country|as_range&#xA;2022-09-19 12:15:04.906664007 +0530 IST|hackerone.com|AS13335|CLOUDFLARENET|US|104.16.0.0/14,104.20.0.0/16,104.21.0.0/17&#xA;2022-09-19 12:15:05.201328136 +0530 IST|hackerone.com|AS13335|CLOUDFLARENET|US|2606:4700:9760::/44&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using with other PD projects&lt;/h3&gt; &#xA;&lt;p&gt;Output of asnmap can be directly piped into other projects in workflow accepting stdin as input, for example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;echo AS54115 | asnmap | tlsx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;echo AS54115 | asnmap | asnmap -ptr&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;echo AS54115 | asnmap | naabu -p 443&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;echo AS54115 | asnmap | naabu -p 443 | httpx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;echo AS54115 | asnmap | naabu -p 443 | httpx | nuclei -id tech-detect&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use asnmap as a library&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to use the library directly in your go programs. The following code snippets outline how to get cidr ranges from given input&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;github.com/projectdiscovery/asnmap&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;client := asnmap.NewClient()&#xA;&#xA;&#x9;// Query based on ASN&#xA;&#x9;asn := &#34;14421&#34;&#xA;&#x9;ASN := asnmap.ASN(asn)&#xA;&#x9;results := asnmap.GetFormattedDataInJson(client.GetData(ASN))&#xA;&#x9;fmt.Println(string(results))&#xA;&#xA;&#x9;// Query based on IP&#xA;&#x9;ip := &#34;210.10.122.10&#34;&#xA;&#x9;IP := asnmap.IP(ip)&#xA;&#x9;results = asnmap.GetFormattedDataInJson(client.GetData(IP))&#xA;&#x9;fmt.Println(string(results))&#xA;&#xA;&#x9;// Query based on Organization&#xA;&#x9;org := &#34;pplinknet&#34;&#xA;&#x9;ORG := asnmap.Org(org)&#xA;&#x9;results = asnmap.GetFormattedDataInJson(client.GetData(ORG))&#xA;&#x9;fmt.Println(string(results))&#xA;&#xA;&#x9;// Query based on domain&#xA;&#x9;domain := &#34;hackerone.com&#34;&#xA;&#x9;resolvedIps := asnmap.ResolveDomain(domain)&#xA;&#x9;for _, ip := range resolvedIps {&#xA;&#x9;&#x9;results = asnmap.GetFormattedDataInJson(client.GetData(asnmap.IP(ip), asnmap.Domain(domain)))&#xA;&#x9;&#x9;fmt.Println(string(results))&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jedisct1/&#34;&gt;Frank Denis&lt;/a&gt; for maintaining free IPtoASN database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;asnmap&lt;/strong&gt; is made with ❤️ by the &lt;a href=&#34;https://projectdiscovery.io&#34;&gt;projectdiscovery&lt;/a&gt; team and distributed under &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/asnmap/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-burp-plugin/main/static/join-discord.png&#34; width=&#34;300&#34; alt=&#34;Join Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>turbot/steampipe</title>
    <updated>2022-10-05T01:37:02Z</updated>
    <id>tag:github.com,2022-10-05:/turbot/steampipe</id>
    <link href="https://github.com/turbot/steampipe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use SQL to instantly query your cloud services (AWS, Azure, GCP and more). Open source CLI. No DB required.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://steampipe.io?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://cloud.steampipe.io/images/steampipe-logo-wordmark-white.svg&#34;&gt;&#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://cloud.steampipe.io/images/steampipe-logo-wordmark-color.svg&#34;&gt;&#xA;   &lt;img width=&#34;67%&#34; alt=&#34;Steampipe Logo&#34; src=&#34;https://cloud.steampipe.io/images/steampipe-logo-wordmark-color.svg?sanitize=true&#34;&gt;&#xA;  &lt;/picture&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/apis_supported-84-blue&#34; alt=&#34;plugins&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://hub.steampipe.io/mods?objectives=compliance?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/controls-3055-blue&#34; alt=&#34;benchmarks&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://hub.steampipe.io/mods?objectives=dashboard?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dashboards-511-blue&#34; alt=&#34;dashboards&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://steampipe.io/community/join?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-900-blue&#34; alt=&#34;slack&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://turbot.com?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20by-Turbot-blue&#34; alt=&#34;maintained by&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Steampipe is the universal interface to APIs. Use SQL to query cloud infrastructure, SaaS, code, logs, and more.&lt;/p&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://steampipe.io?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Steampipe&lt;/a&gt; you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Query&lt;/strong&gt; → Use SQL to &lt;a href=&#34;https://steampipe.io/docs/query/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;query&lt;/a&gt; (and join across!) &lt;a href=&#34;https://hub.steampipe.io/plugins?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;APIs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Check&lt;/strong&gt; → Ensure that cloud resources comply with &lt;a href=&#34;https://steampipe.io/docs/check/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;security benchmarks&lt;/a&gt; such as CIS, NIST, and SOC2.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Visualize&lt;/strong&gt; → View &lt;a href=&#34;https://steampipe.io/docs/dashboard/overview?objectives=dashboard&amp;amp;utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;prebuilt dashboards&lt;/a&gt; or &lt;a href=&#34;https://steampipe.io/docs/mods/writing-dashboards?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;build your own&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Steampipe CLI - The SQL console for API queries&lt;/h2&gt; &#xA;&lt;p&gt;The Steampipe community has grown a suite of &lt;a href=&#34;https://hub.steampipe.io/plugins?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;plugins&lt;/a&gt; that map APIs to tables.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Cloud&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/aws?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;AWS&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/alicloud?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Alibaba&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/azure?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Azure&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/gcp?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;GCP&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/ibm?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;IBM&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/oci?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Oracle&lt;/a&gt; …&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;SaaS&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/francois2metz/airtable?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Airtable&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/jira?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Jira&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/github?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/googleworkspace?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Google Workspace&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/salesforce?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Salesforce&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/slack?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Slack&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/stripe?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Stripe&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/zoom?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Zoom …&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/crowdstrike?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;CrowdStrike&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/panos?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;PAN-OS&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/virustotal?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;VirusTotal&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/shodan?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Shodan&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/trivy?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Trivy&lt;/a&gt; …&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Identity&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/azuread?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Azure AD&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/duo?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Duo&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/theapsgroup/keycloak?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Keycloak&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/googledirectory?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Google Directory&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/ldap?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;LDAP&lt;/a&gt; …&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;DevOps&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/docker?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/grafana?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Grafana&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/kubernetes?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/prometheus?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Prometheus&lt;/a&gt; …&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Net&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/francois2metz/baleen?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Baleen&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/cloudflare?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Cloudflare&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/crtsh?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;crt.sh&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/francois2metz/gandi?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Gandi&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/imap?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;IMAP&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/ipstack?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;ipstack&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/updown?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;updown.io&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/whois?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;WHOIS&lt;/a&gt; …&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;IaC&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/awscfn?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;CloudFormation&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/terraform?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Terraform&lt;/a&gt; …&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Logs&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/algolia?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Algolia&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/aws/tables/aws_cloudwatch_log_event?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;AWS CloudWatch&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/splunk?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Splunk&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/datadog?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Datadog&lt;/a&gt; …&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Social&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/hackernews?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;HackerNews&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/twitter?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/reddit?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Reddit&lt;/a&gt;, &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/rss?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;RSS&lt;/a&gt; …&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Your API&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build your own &lt;a href=&#34;https://steampipe.io/docs/develop/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;custom plugins&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://steampipe.io/docs/query/query-shell?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;interactive query shell&lt;/a&gt; is one way you can query those tables.&lt;/p&gt; &#xA;&lt;img width=&#34;524&#34; src=&#34;https://steampipe.io/images/steampipe-sql-demo.gif&#34;&gt; &#xA;&lt;p&gt;You can also use psql, pgcli, Metabase, Tableau, or &lt;a href=&#34;https://steampipe.io/docs/cloud/integrations/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;any client&lt;/a&gt; that can connect to Postgres.&lt;/p&gt; &#xA;&lt;h3&gt;Get started with the CLI&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Install Steampipe&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;The &lt;a href=&#34;https://steampipe.io/downloads?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;downloads&lt;/a&gt; page shows you how but tl;dr:&lt;/p&gt; &#xA; &lt;p&gt;Linux or WSL&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo /bin/sh -c &#34;$(curl -fsSL https://raw.githubusercontent.com/turbot/steampipe/main/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;MacOS&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew tap turbot/tap&#xA;brew install steampipe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Add a plugin&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;Choose a plugin from the &lt;a href=&#34;https://hub.steampipe.io?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;hub&lt;/a&gt;, for example: &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/net?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Net&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Run the &lt;code&gt;steampipe plugin&lt;/code&gt; command to install it.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;steampipe plugin install net&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Run &lt;tt&gt;steampipe query&lt;/tt&gt;&lt;/summary&gt; &#xA; &lt;br&gt; Launch the interactive shell. &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;steampipe query&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Run your first query!&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select&#xA;  *&#xA;from&#xA;  net_certificate&#xA;where&#xA;  domain = &#39;google.com&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Learn more about the CLI&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;It&#39;s &lt;a href=&#34;https://steampipe.io/docs/sql/steampipe-sql?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;just SQL&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;You can run queries &lt;a href=&#34;https://steampipe.io/docs/query/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme#non-interactive-batch-query-mode&#34;&gt;on the command line&lt;/a&gt; and include them in scripts.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Other &lt;a href=&#34;https://steampipe.io/docs/reference/cli/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;commands&lt;/a&gt; run benchmarks, launch Steampipe as a service, and start the dashboard server.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://steampipe.io/docs/reference/dot-commands/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Meta-commands&lt;/a&gt; control caching, &lt;a href=&#34;https://steampipe.io/docs/reference/env-vars/overview&#34;&gt;environment variables&lt;/a&gt;, the &lt;a href=&#34;https://steampipe.io/docs/guides/search-path?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;search path&lt;/a&gt;, and more.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Queries can run in &lt;a href=&#34;https://steampipe.io/docs/query/batch-query?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;batch mode&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;You can bundle connections (e.g. for many AWS accounts) using an &lt;a href=&#34;https://steampipe.io/docs/managing/connections?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme#using-aggregators&#34;&gt;aggregator&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Steampipe Mods - Benchmarks &amp;amp; dashboards&lt;/h2&gt; &#xA;&lt;p&gt;The Steampipe community has also grown a suite of &lt;a href=&#34;https://hub.steampipe.io/mods?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;mods&lt;/a&gt; which are sets of &lt;strong&gt;benchmarks&lt;/strong&gt; that check your cloud resources for compliance, and &lt;strong&gt;dashboards&lt;/strong&gt; that visualize your resources.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Compliance&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Check AWS, Azure, GCP, etc for compliance with HIPAA, PCI, etc &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Cost&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Review what AWS, Azure, GCP, and other clouds are costing you&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Insights&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Visualize cloud resources with charts, tables, and interactive widgets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use CIS, NIST, FedRAMP etc to assess the security of AWS, Azure, GCP, etc&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Tags&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Verify the consistency of tags applied to AWS, Azure, and GCP resources&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Your mod&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build your own &lt;a href=&#34;https://steampipe.io/docs/mods/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;benchmarks and dashboards&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!--&#xA;&lt;table&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://hub.steampipe.io/mods?objectives=compliance?utm_id=gspreadme&amp;utm_source=github&amp;utm_medium=repo&amp;utm_campaign=github&amp;utm_content=readme&#34;&gt;Compliance&lt;/a&gt;&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Check AWS, Azure, GCP, etc for compliance with HIPAA, PCI, etc&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://hub.steampipe.io/mods?objectives=cost?utm_id=gspreadme&amp;utm_source=github&amp;utm_medium=repo&amp;utm_campaign=github&amp;utm_content=readme&#34;&gt;Cost&lt;/a&gt;&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Review what AWS, Azure, GCP, and other clouds are costing you&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://hub.steampipe.io/mods?objectives=dashboard?utm_id=gspreadme&amp;utm_source=github&amp;utm_medium=repo&amp;utm_campaign=github&amp;utm_content=readme&#34;&gt;Insights&lt;/a&gt;&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Visualize cloud resources with charts, tables, and interactive widgets&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://hub.steampipe.io/mods?objectives=security?utm_id=gspreadme&amp;utm_source=github&amp;utm_medium=repo&amp;utm_campaign=github&amp;utm_content=readme&#34;&gt;Security&lt;/a&gt;&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Use CIS, NIST, FedRAMP etc to assess the security of AWS, Azure, GCP, etc&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://hub.steampipe.io/mods?objectives=tags?utm_id=gspreadme&amp;utm_source=github&amp;utm_medium=repo&amp;utm_campaign=github&amp;utm_content=readme&#34;&gt;Tags&lt;/a&gt;&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Verify the consistency of tags applied to AWS, Azure, and GCP resources&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;b&gt;Your mod&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Build your own &lt;a href=&#34;https://steampipe.io/docs/mods/overview?utm_id=gspreadme&amp;utm_source=github&amp;utm_medium=repo&amp;utm_campaign=github&amp;utm_content=readme&#34;&gt;benchmarks and dashboards&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/table&gt;&#xA;--&gt; &#xA;&lt;h3&gt;The CIS 1.4 benchmark in &lt;code&gt;AWS Compliance&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46509/186024940-7ae9f42f-241b-44a7-84d6-244f5d488e1f.gif&#34; alt=&#34;gh-readme-cis-benchmark-in-dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The AWS EC2 Instance dashboard in &lt;code&gt;AWS Insights&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46509/186023273-d2be66c9-c050-4576-a46b-ed3f82f2e14a.jpg&#34; alt=&#34;aws-ec2-dashboard-in-cloud&#34;&gt;&lt;/p&gt;  &#xA;&lt;p&gt;Benchmarks and dashboards use SQL to gather data and HCL to flow the data into &lt;a href=&#34;https://steampipe.io/blog/release-0-11-0?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme#composable-mods&#34;&gt;benchmark controls&lt;/a&gt; and &lt;a href=&#34;https://steampipe.io/blog/dashboards-as-code?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;dashboard widgets&lt;/a&gt;. You can use the existing suites of benchmarks and dashboards, or build derivative versions, or create your own.&lt;/p&gt; &#xA;&lt;h3&gt;Get started with benchmarks and dashboards&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Install the Net Insights mod&lt;/summary&gt; &#xA; &lt;br&gt; The &#xA; &lt;a href=&#34;https://hub.steampipe.io/mods/turbot/net_insights?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Net Insights&lt;/a&gt; mod works with the Net plugin shown above. To run it, first clone its repo and change to that directory. &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/turbot/steampipe-mod-net-insights&#xA;cd steampipe-mod-net-insights&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;br&gt; &#xA; &lt;summary&gt;Run benchmarks in the CLI&lt;/summary&gt; &#xA; &lt;p&gt;All the benchmarks:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;steampipe check all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;A single benchmark:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;steampipe check benchmark.dns_best_practices&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;A single control:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;steampipe check control.dns_ns_name_valid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Available &lt;a href=&#34;https://steampipe.io/docs/reference/cli/check?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme#output-formats&#34;&gt;formats&lt;/a&gt; include JSON, CSV, HTML, and ASFF. You can use &lt;a href=&#34;https://steampipe.io/docs/develop/writing-control-output-templates?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;custom ouput templates&lt;/a&gt; to create new output formats.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Run benchmarks as dashboards&lt;/summary&gt; &#xA; &lt;br&gt; Launch the dashboard server: `steampipe dashboard`, then open `http://localhost:9194` in your browser. &#xA; &lt;p&gt;The home page lists available dashboards. Click &lt;code&gt;DNS Best Practices&lt;/code&gt; to view that dashboard.&lt;/p&gt; &#xA; &lt;p&gt;Note that the default domains are &lt;code&gt;microsoft.com&lt;/code&gt; and &lt;code&gt;github.com&lt;/code&gt;. You can &lt;a href=&#34;https://hub.steampipe.io/mods/turbot/net_insights?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme#configuration&#34;&gt;change those defaults&lt;/a&gt; to check other domains.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explore your resources&lt;/summary&gt; &#xA; &lt;br&gt; Dashboards use charts, tables, and interactive &#xA; &lt;a href=&#34;https://steampipe.io/docs/reference/mod-resources/overview?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme#dashboards&#34;&gt;widgets&lt;/a&gt; to help you explore and visualize your resources. &#xA; &lt;p&gt;The &lt;a href=&#34;https://hub.steampipe.io/mods/turbot/aws_insights?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;AWS Insights&lt;/a&gt; mod, for example, provides dozens of dashboards that exercise the full set of widgets. To use these dashboards, first install the &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/aws?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;AWS plugin&lt;/a&gt; and &lt;a href=&#34;https://hub.steampipe.io/plugins/turbot/aws?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme#configuration&#34;&gt;authenticate&lt;/a&gt;. Then clone &lt;code&gt;AWS Insights&lt;/code&gt;, change to its directory, launch &lt;code&gt;steampipe dashboard&lt;/code&gt;, and open &lt;code&gt;localhost:9194&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We thrive on feedback and community involvement!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Have a question?&lt;/strong&gt; → Join our &lt;a href=&#34;https://steampipe.io/community/join?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Slack community&lt;/a&gt; or open a &lt;a href=&#34;https://github.com/turbot/steampipe/issues/new/choose&#34;&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want to get involved?&lt;/strong&gt; → Learn how to &lt;a href=&#34;https://github.com/turbot/steampipe/raw/main/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want to work with the team?&lt;/strong&gt; → We are &lt;a href=&#34;https://turbot.com/careers?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;hiring&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Steampipe Cloud&lt;/h2&gt; &#xA;&lt;p&gt;Want a hosted version of Steampipe? Bring your team to &lt;a href=&#34;https://cloud.steampipe.io?utm_id=gspreadme&amp;amp;utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=github&amp;amp;utm_content=readme&#34;&gt;Steampipe Cloud&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>