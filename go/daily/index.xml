<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-08T01:30:20Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eksctl-io/eksctl</title>
    <updated>2024-06-08T01:30:20Z</updated>
    <id>tag:github.com,2024-06-08:/eksctl-io/eksctl</id>
    <link href="https://github.com/eksctl-io/eksctl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official CLI for Amazon EKS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;eksctl&lt;/code&gt; - The official CLI for Amazon EKS ! &lt;img src=&#34;https://raw.githubusercontent.com/eksctl-io/eksctl/main/userdocs/src/img/logo.png&#34; alt=&#34;eksctl&#34; width=&#34;4%&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/eksctl-io/eksctl&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/eksctl-io/eksctl&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;eksctl&lt;/code&gt; is a simple CLI tool for creating clusters on EKS - Amazon&#39;s new managed Kubernetes service for EC2. It is written in Go, and uses CloudFormation.&lt;/p&gt; &#xA;&lt;p&gt;You can create a cluster in minutes with just one command â€“ &lt;strong&gt;&lt;code&gt;eksctl create cluster&lt;/code&gt;&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eksctl-io/eksctl/main/logo/eksctl.png&#34; alt=&#34;Gophers: E, K, S, C, T, &amp;amp; L&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Need help? Join &lt;a href=&#34;https://slack.k8s.io/&#34;&gt;Eksctl Slack&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;eksctl&lt;/code&gt; is available to install from official releases as described below. We recommend that you install &lt;code&gt;eksctl&lt;/code&gt; from only the official GitHub releases. You may opt to use a third-party installer, but please be advised that AWS does not maintain nor support these methods of installation. Use them at your own discretion.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisite&lt;/h3&gt; &#xA;&lt;p&gt;You will need to have AWS API credentials configured. What works for AWS CLI or any other tools (kops, Terraform, etc.) should be sufficient. You can use &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-config-files.html&#34;&gt;&lt;code&gt;~/.aws/credentials&lt;/code&gt; file&lt;/a&gt; or &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-environment.html&#34;&gt;environment variables&lt;/a&gt;. For more information read &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-environment.html&#34;&gt;AWS documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will also need &lt;a href=&#34;https://github.com/kubernetes-sigs/aws-iam-authenticator&#34;&gt;AWS IAM Authenticator for Kubernetes&lt;/a&gt; command (either &lt;code&gt;aws-iam-authenticator&lt;/code&gt; or &lt;code&gt;aws eks get-token&lt;/code&gt; (available in version 1.16.156 or greater of AWS CLI) in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The IAM account used for EKS cluster creation should have these minimal access levels.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;AWS Service&lt;/th&gt; &#xA;   &lt;th&gt;Access Level&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudFormation&lt;/td&gt; &#xA;   &lt;td&gt;Full Access&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EC2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Full:&lt;/strong&gt; Tagging &lt;strong&gt;Limited:&lt;/strong&gt; List, Read, Write&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EC2 Auto Scaling&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Limited:&lt;/strong&gt; List, Write&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EKS&lt;/td&gt; &#xA;   &lt;td&gt;Full Access&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IAM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Limited:&lt;/strong&gt; List, Read, Write, Permissions Management&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Systems Manager&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Limited:&lt;/strong&gt; List, Read&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The inline policy json is listed in &lt;a href=&#34;https://eksctl.io/usage/minimum-iam-policies/&#34;&gt;Minimal IAM Policies&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;For Unix&lt;/h3&gt; &#xA;&lt;p&gt;To download the latest release, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`&#xA;ARCH=amd64&#xA;PLATFORM=$(uname -s)_$ARCH&#xA;&#xA;curl -sLO &#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz&#34;&#xA;&#xA;# (Optional) Verify checksum&#xA;curl -sL &#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt&#34; | grep $PLATFORM | sha256sum --check&#xA;&#xA;tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp &amp;amp;&amp;amp; rm eksctl_$PLATFORM.tar.gz&#xA;&#xA;sudo mv /tmp/eksctl /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For Windows&lt;/h3&gt; &#xA;&lt;h4&gt;Direct download (latest release): &lt;a href=&#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_windows_amd64.zip&#34;&gt;AMD64/x86_64&lt;/a&gt; - &lt;a href=&#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_windows_armv6.zip&#34;&gt;ARMv6&lt;/a&gt; - &lt;a href=&#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_windows_armv7.zip&#34;&gt;ARMv7&lt;/a&gt; - &lt;a href=&#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_windows_arm64.zip&#34;&gt;ARM64&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Make sure to unzip the archive to a folder in the &lt;code&gt;PATH&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;p&gt;Optionally, verify the checksum:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the checksum file: &lt;a href=&#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt&#34;&gt;latest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use Command Prompt to manually compare &lt;code&gt;CertUtil&lt;/code&gt;&#39;s output to the checksum file downloaded.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;REM Replace amd64 with armv6, armv7 or arm64&#xA;CertUtil -hashfile eksctl_Windows_amd64.zip SHA256&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Using PowerShell to automate the verification using the &lt;code&gt;-eq&lt;/code&gt; operator to get a &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; result:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pwsh&#34;&gt;# Replace amd64 with armv6, armv7 or arm64&#xA; (Get-FileHash -Algorithm SHA256 .\eksctl_Windows_amd64.zip).Hash -eq ((Get-Content .\eksctl_checksums.txt) -match &#39;eksctl_Windows_amd64.zip&#39; -split &#39; &#39;)[0]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using Git Bash&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`&#xA;ARCH=amd64&#xA;PLATFORM=windows_$ARCH&#xA;&#xA;curl -sLO &#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.zip&#34;&#xA;&#xA;# (Optional) Verify checksum&#xA;curl -sL &#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt&#34; | grep $PLATFORM | sha256sum --check&#xA;&#xA;unzip eksctl_$PLATFORM.zip -d $HOME/bin&#xA;&#xA;rm eksctl_$PLATFORM.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;eksctl&lt;/code&gt; executable is placed in &lt;code&gt;$HOME/bin&lt;/code&gt;, which is in &lt;code&gt;$PATH&lt;/code&gt; from Git Bash.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;For every release and RC a container image is pushed to ECR repository &lt;code&gt;public.ecr.aws/eksctl/eksctl&lt;/code&gt;. Learn more about the usage on &lt;a href=&#34;https://gallery.ecr.aws/eksctl/eksctl&#34;&gt;ECR Public Gallery - eksctl&lt;/a&gt;. For example,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it public.ecr.aws/eksctl/eksctl version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Third-Party Installers (Not Recommended)&lt;/h3&gt; &#xA;&lt;h4&gt;For MacOS&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew tap weaveworks/tap&#xA;brew install weaveworks/tap/eksctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;port install eksctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For Windows&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chocolatey.org&#34;&gt;chocolatey&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install eksctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scoop.sh&#34;&gt;scoop&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scoop install eksctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;p&gt;To create a basic cluster, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;eksctl create cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A cluster will be created with default parameters&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;exciting auto-generated name, e.g. &#34;fabulous-mushroom-1527688624&#34;&lt;/li&gt; &#xA; &lt;li&gt;2x &lt;code&gt;m5.large&lt;/code&gt; nodes (this instance type suits most common use-cases, and is good value for money)&lt;/li&gt; &#xA; &lt;li&gt;use official AWS EKS AMI&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;us-west-2&lt;/code&gt; region&lt;/li&gt; &#xA; &lt;li&gt;dedicated VPC (check your quotas)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have created a cluster, you will find that cluster credentials were added in &lt;code&gt;~/.kube/config&lt;/code&gt;. If you have &lt;code&gt;kubectl&lt;/code&gt; as well as &lt;code&gt;aws-iam-authenticator&lt;/code&gt; commands in your &lt;code&gt;PATH&lt;/code&gt;, you should be able to use &lt;code&gt;kubectl&lt;/code&gt;. You will need to make sure to use the same AWS API credentials for this also. Check &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/configure-kubectl.html&#34;&gt;EKS docs&lt;/a&gt; for instructions.&lt;/p&gt; &#xA;&lt;p&gt;Example output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; $ eksctl create cluster&#xA;[â„¹]  eksctl version 0.143.0&#xA;[â„¹]  using region eu-west-2&#xA;[â„¹]  setting availability zones to [eu-west-2a eu-west-2c eu-west-2b]&#xA;[â„¹]  subnets for eu-west-2a - public:192.168.0.0/19 private:192.168.96.0/19&#xA;[â„¹]  subnets for eu-west-2c - public:192.168.32.0/19 private:192.168.128.0/19&#xA;[â„¹]  subnets for eu-west-2b - public:192.168.64.0/19 private:192.168.160.0/19&#xA;[â„¹]  nodegroup &#34;ng-ac4c787c&#34; will use &#34;&#34; [AmazonLinux2/1.25]&#xA;[â„¹]  using Kubernetes version 1.25&#xA;[â„¹]  creating EKS cluster &#34;attractive-sculpture-1685534556&#34; in &#34;eu-west-2&#34; region with managed nodes&#xA;[â„¹]  will create 2 separate CloudFormation stacks for cluster itself and the initial managed nodegroup&#xA;[â„¹]  if you encounter any issues, check CloudFormation console or try &#39;eksctl utils describe-stacks --region=eu-west-2 --cluster=attractive-sculpture-1685534556&#39;&#xA;[â„¹]  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster &#34;attractive-sculpture-1685534556&#34; in &#34;eu-west-2&#34;&#xA;[â„¹]  CloudWatch logging will not be enabled for cluster &#34;attractive-sculpture-1685534556&#34; in &#34;eu-west-2&#34;&#xA;[â„¹]  you can enable it with &#39;eksctl utils update-cluster-logging --enable-types={SPECIFY-YOUR-LOG-TYPES-HERE (e.g. all)} --region=eu-west-2 --cluster=attractive-sculpture-1685534556&#39;&#xA;[â„¹]  &#xA;2 sequential tasks: { create cluster control plane &#34;attractive-sculpture-1685534556&#34;, &#xA;    2 sequential sub-tasks: { &#xA;        wait for control plane to become ready,&#xA;        create managed nodegroup &#34;ng-ac4c787c&#34;,&#xA;    } &#xA;}&#xA;[â„¹]  building cluster stack &#34;eksctl-attractive-sculpture-1685534556-cluster&#34;&#xA;[â„¹]  deploying stack &#34;eksctl-attractive-sculpture-1685534556-cluster&#34;&#xA;[â„¹]  waiting for CloudFormation stack &#34;eksctl-attractive-sculpture-1685534556-cluster&#34;&#xA;[â„¹]  building managed nodegroup stack &#34;eksctl-attractive-sculpture-1685534556-nodegroup-ng-ac4c787c&#34;&#xA;[â„¹]  deploying stack &#34;eksctl-attractive-sculpture-1685534556-nodegroup-ng-ac4c787c&#34;&#xA;[â„¹]  waiting for CloudFormation stack &#34;eksctl-attractive-sculpture-1685534556-nodegroup-ng-ac4c787c&#34;&#xA;[â„¹]  waiting for the control plane to become ready&#xA;[âœ”]  all EKS cluster resources for &#34;attractive-sculpture-1685534556&#34; have been created&#xA;[â„¹]  nodegroup &#34;ng-ac4c787c&#34; has 2 node(s)&#xA;[â„¹]  node &#34;ip-192-168-20-235.eu-west-2.compute.internal&#34; is ready&#xA;[â„¹]  node &#34;ip-192-168-80-49.eu-west-2.compute.internal&#34; is ready&#xA;[â„¹]  waiting for at least 2 node(s) to become ready in &#34;ng-ac4c787c&#34;&#xA;[â„¹]  nodegroup &#34;ng-ac4c787c&#34; has 2 node(s)&#xA;[â„¹]  node &#34;ip-192-168-20-235.eu-west-2.compute.internal&#34; is ready&#xA;[â„¹]  node &#34;ip-192-168-80-49.eu-west-2.compute.internal&#34; is ready&#xA;[â„¹]  kubectl command should work with &#34;.../.kube/config&#34;, try &#39;kubectl get nodes&#39;&#xA;[âœ”]  EKS cluster &#34;attractive-sculpture-1685534556&#34; in &#34;eu-west-2&#34; region is ready&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install &lt;code&gt;eksctl&lt;/code&gt; by following the &lt;a href=&#34;https://eksctl.io/installation&#34;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To discover the full range of capabilities that eksctl offers, visit &lt;a href=&#34;https://eksctl.io&#34;&gt;eksctl.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A great starting point is the &lt;a href=&#34;https://eksctl.io/getting-started/&#34;&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;You can find a comprehensive list of features &lt;a href=&#34;https://eksctl.io/installation/#features&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Code contributions are very welcome. If you are interested in helping make &lt;code&gt;eksctl&lt;/code&gt; great then see our &lt;a href=&#34;https://raw.githubusercontent.com/eksctl-io/eksctl/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We follow the &lt;a href=&#34;https://raw.githubusercontent.com/eksctl-io/eksctl/main/CODE_OF_CONDUCT.md&#34;&gt;CNCF Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Minor releases of &lt;code&gt;eksctl&lt;/code&gt; should be expected every two weeks and patch releases will be made available as needed.&lt;/p&gt; &#xA;&lt;p&gt;One or more release candidate(s) (RC) builds will be made available prior to each minor release. RC builds are intended only for testing purposes.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eksctl-io/eksctl/main/SECURITY.md&#34;&gt;Security Policy&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you discover a potential security issue in &lt;code&gt;eksctl&lt;/code&gt; project, please follow &lt;a href=&#34;https://aws.amazon.com/security/vulnerability-reporting/&#34;&gt;AWS Vulnerability Reporting process.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Do not open security related issues in the open source project.&lt;/p&gt; &#xA;&lt;h2&gt;Get in touch&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eksctl-io/eksctl/issues/new&#34;&gt;Create an issue&lt;/a&gt;, or login to &lt;a href=&#34;https://slack.k8s.io/messages/eksctl/&#34;&gt;Eksctl Community Slack (#eksctl)&lt;/a&gt; (&lt;a href=&#34;https://slack.k8s.io/&#34;&gt;signup&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Logo Credits&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Original Gophers drawn by &lt;a href=&#34;https://twitter.com/ashleymcnamara&#34;&gt;Ashley McNamara&lt;/a&gt;, unique E, K, S, C, T &amp;amp; L Gopher identities had been produced with &lt;a href=&#34;https://github.com/matryer/gopherize.me/&#34;&gt;Gopherize.me&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>