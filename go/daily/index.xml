<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-23T01:35:37Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ANG13T/DroneXtract</title>
    <updated>2023-07-23T01:35:37Z</updated>
    <id>tag:github.com,2023-07-23:/ANG13T/DroneXtract</id>
    <link href="https://github.com/ANG13T/DroneXtract" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DroneXtract is a digital forensics suite for DJI drones üîç. Analyze sensor values, visualize flight maps, and audit for criminal activity üó∫&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;DroneXtract logo&#34; width=&#34;600&#34; src=&#34;https://github.com/ANG13T/DroneXtract/raw/main/assets/graphic.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;DroneXtract is a comprehensive digital forensics suite for DJI drones made with Golang. It can be used to analyze drone sensor values and telemetry data, visualize drone flight maps, audit for criminal activity, and extract pertinent data within multiple file formats.&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;img alt=&#34;DroneXtract logo&#34; width=&#34;600&#34; src=&#34;https://github.com/ANG13T/DroneXtract/raw/main/assets/Preview.png&#34;&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;DroneXtract features four main suites for drone forensics and auditing. They include the following:&lt;/p&gt; &#xA;&lt;h3&gt;DJI File Parsing&lt;/h3&gt; &#xA;&lt;p&gt;You can visualize and extract information from DJI file formats such as CSV, KML, and GPX using the parsing tool. The parsed information can be saved into an alternative file format when inputted an output file path. The image below includes an example of a parsed file output and the type of data extracted from the file.&lt;/p&gt; &#xA;&lt;img alt=&#34;DroneXtract logo&#34; height=&#34;300&#34; src=&#34;https://github.com/ANG13T/DroneXtract/raw/main/assets/demo-1.png&#34;&gt; &#xA;&lt;h3&gt;Steganography&lt;/h3&gt; &#xA;&lt;p&gt;Steganography refers to the process of revealing information stored within files. The DroneXtract steganography suite allows you to extract telemetry and valuable data from image and video formats. Additionally, the extracted data can be exported to four different file formats.&lt;/p&gt; &#xA;&lt;img alt=&#34;DroneXtract logo&#34; height=&#34;300&#34; src=&#34;https://github.com/ANG13T/DroneXtract/raw/main/assets/demo-2.png&#34;&gt; &#xA;&lt;h3&gt;Telemetry Visualization&lt;/h3&gt; &#xA;&lt;p&gt;The telemetry visualization suite contains a flight path mapping generator and a telemetry graph visualizer. The flight path mapping generator creates an image of a map indicating the locations the drone traveled to enroute and the path it took. The telemetry graph visualizer plots a graph for each of the relevant telemetry or sensor values to be used for auditing purposes.&lt;/p&gt; &#xA;&lt;img alt=&#34;DroneXtract logo&#34; width=&#34;600&#34; src=&#34;https://github.com/ANG13T/DroneXtract/raw/main/assets/demo-3.png&#34;&gt; &#xA;&lt;h3&gt;Flight and Integrity Analysis&lt;/h3&gt; &#xA;&lt;p&gt;The flight and integrity analysis tool iterates through all the telemetry values the drone logged during its flight. Once the values are collected, it calculates the maximum variance assumed by the value and checks for suspicious data gaps. This tool can be used to check for anomalous data or any file corruption that may have taken place.&lt;/p&gt; &#xA;&lt;img alt=&#34;DroneXtract logo&#34; height=&#34;300&#34; src=&#34;https://github.com/ANG13T/DroneXtract/raw/main/assets/demo-4.png&#34;&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To build from source, you will need Go installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ export GO111MODULE=on&#xA;$ go get ./...&#xA;$ go run main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Airdata Usage&lt;/h2&gt; &#xA;&lt;p&gt;In order to parse out DJI flight .TXT logs, please use &lt;a href=&#34;https://app.airdata.com/main?a=upload&#34;&gt;Airdata&#39;s Flight Data Analysis tool&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Airdata CSV output file can be used for the CSV parser, flight path map, and telemetry visualizations&lt;/li&gt; &#xA; &lt;li&gt;Airdata KML output file can be used for the KML parser&lt;/li&gt; &#xA; &lt;li&gt;Airdata GPX output file can be used for GPX parser&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;There are a set of environment variables utilized in DroneXtract. In order to tailor the values to your specific drone / investigation scenario, you can go to the &lt;code&gt;.env&lt;/code&gt; file and adjust the following values:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;TELEMETRY_VIS_DOWNSAMPLE&lt;/code&gt; downsampling number for values to be used for telemetry visualization&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;FLIGHT_MAP_DOWNSAMPLE&lt;/code&gt; downsampling number for values to be used for flight path mapping&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ANALYSIS_DOWNSAMPLE&lt;/code&gt; downsampling number for values to be used for integrity analysis&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ANALYSIS_MAX_VARIANCE&lt;/code&gt; maximum variance allowed between max and min value for analysis values&lt;/p&gt; &#xA;&lt;h2&gt;Learning and Resources&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about DJI drone digital forensics and the features of DroneXtract, refer to &lt;a href=&#34;https://medium.com/@angelinatsuboi/a-comprehensive-guide-to-digital-forensics-with-dji-drones-fd7ef5af2891&#34;&gt;this article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;DroneXtract is open to any contributions. Please fork the repository and make a pull request with the features or fixes you want to be implemented.&lt;/p&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;DroneXtract contains testing files for all four suites. An example command set for testing the steganography suite&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd steganography&#xA;$ go test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example files for testing are included in the &lt;code&gt;test-data&lt;/code&gt; directory. If a specific test case includes an output such as a file or image, it will be stored within the &lt;code&gt;output&lt;/code&gt; directory. There are already some files contained in the &lt;code&gt;output&lt;/code&gt; for reference purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Upcoming&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DUML parser for firmware integrity checking&lt;/li&gt; &#xA; &lt;li&gt;DJI Flight Log TXT parsing for the parsing suite&lt;/li&gt; &#xA; &lt;li&gt;GEOJSON parsing output for SRT files in the steganography suite&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoyed DroneXtract, please consider &lt;a href=&#34;https://github.com/sponsors/ANG13T&#34;&gt;becoming a sponsor&lt;/a&gt; in order to fund my future projects.&lt;/p&gt; &#xA;&lt;p&gt;To check out my other works, visit my &lt;a href=&#34;https://github.com/ANG13T&#34;&gt;GitHub profile&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>anyproto/any-sync</title>
    <updated>2023-07-23T01:35:37Z</updated>
    <id>tag:github.com,2023-07-23:/anyproto/any-sync</id>
    <link href="https://github.com/anyproto/any-sync" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source protocol designed to create high-performance, local-first, peer-to-peer, end-to-end encrypted applications that facilitate seamless collaboration among multiple users and devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Any-Sync&lt;/h1&gt; &#xA;&lt;p&gt;Any-Sync is an open-source protocol designed to create high-performance, local-first, peer-to-peer, end-to-end encrypted applications that facilitate seamless collaboration among multiple users and devices.&lt;/p&gt; &#xA;&lt;p&gt;By utilizing this protocol, users can rest assured that they retain complete control over their data and digital experience. They are empowered to freely transition between various service providers, or even opt to self-host the applications.&lt;/p&gt; &#xA;&lt;p&gt;This ensures utmost flexibility and autonomy for users in managing their personal information and digital interactions.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Most existing information management tools are implemented on centralized client-server architecture or designed for an offline-first single-user usage. Either way there are trade-offs for users: they can face restricted freedoms and privacy violations or compromise on the functionality of tools to avoid this.&lt;/p&gt; &#xA;&lt;p&gt;We believe this goes against fundamental digital freedoms and that a new generation of software is needed that will respect these freedoms, while providing best in-class user experience.&lt;/p&gt; &#xA;&lt;p&gt;Our goal with &lt;code&gt;any-sync&lt;/code&gt; is to develop a protocol that will enable the deployment of this software.&lt;/p&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Conflict-free data replication across multiple devices and agents&lt;/li&gt; &#xA; &lt;li&gt;Built-in end-to-end encryption&lt;/li&gt; &#xA; &lt;li&gt;Cryptographically verifiable history of changes&lt;/li&gt; &#xA; &lt;li&gt;Adoption to frequent operations (high performance)&lt;/li&gt; &#xA; &lt;li&gt;Reliable and scalable infrastructure&lt;/li&gt; &#xA; &lt;li&gt;Simultaneous support of p2p and remote communication&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Protocol explanation&lt;/h2&gt; &#xA;&lt;p&gt;Plese read the &lt;a href=&#34;https://tech.anytype.io/any-sync/overview&#34;&gt;overview&lt;/a&gt; of protocol entities and design.&lt;/p&gt; &#xA;&lt;h2&gt;Implementation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the various parts of the protocol implemented in Go in the following repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anyproto/any-sync-node&#34;&gt;&lt;code&gt;any-sync-node&lt;/code&gt;&lt;/a&gt; ‚Äî implementation of a sync node responsible for storing spaces and objects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anyproto/any-sync-filenode&#34;&gt;&lt;code&gt;any-sync-filenode&lt;/code&gt;&lt;/a&gt; ‚Äî implementation of a file node responsible for storing files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anyproto/any-sync-coordinator&#34;&gt;&lt;code&gt;any-sync-coordinator&lt;/code&gt;&lt;/a&gt; ‚Äî implementation of a coordinator node responsible for network configuration management.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your desire to develop Anytype together.&lt;/p&gt; &#xA;&lt;p&gt;Currently, we&#39;re not ready to accept PRs, but we will in the nearest future.&lt;/p&gt; &#xA;&lt;p&gt;Follow us on &lt;a href=&#34;https://github.com/anyproto&#34;&gt;Github&lt;/a&gt; and join the &lt;a href=&#34;https://github.com/orgs/anyproto/discussions&#34;&gt;Contributors Community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Made by Any ‚Äî a Swiss association üá®üá≠&lt;/p&gt; &#xA;&lt;p&gt;Licensed under &lt;a href=&#34;https://raw.githubusercontent.com/anyproto/any-sync/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hueristiq/xurlfind3r</title>
    <updated>2023-07-23T01:35:37Z</updated>
    <id>tag:github.com,2023-07-23:/hueristiq/xurlfind3r</id>
    <link href="https://github.com/hueristiq/xurlfind3r" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A CLI utility to find domain&#39;s known URLs from curated passive online sources.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;xurlfind3r&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/made%20with-Go-0000FF.svg?sanitize=true&#34; alt=&#34;made with go&#34;&gt; &lt;a href=&#34;https://github.com/hueristiq/xurlfind3r/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/hueristiq/xurlfind3r?style=flat&amp;amp;color=0000FF&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hueristiq/xurlfind3r/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-gray.svg?color=0000FF&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/maintained%3F-yes-0000FF.svg?sanitize=true&#34; alt=&#34;maintenance&#34;&gt; &lt;a href=&#34;https://github.com/hueristiq/xurlfind3r/issues?q=is:issue+is:open&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/hueristiq/xurlfind3r.svg?style=flat&amp;amp;color=0000FF&#34; alt=&#34;open issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hueristiq/xurlfind3r/issues?q=is:issue+is:closed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed-raw/hueristiq/xurlfind3r.svg?style=flat&amp;amp;color=0000FF&#34; alt=&#34;closed issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hueristiq/xurlfind3r/raw/master/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-0000FF.svg?sanitize=true&#34; alt=&#34;contribution&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;xurlfind3r&lt;/code&gt; is a command-line interface (CLI) utility to find domain&#39;s known URLs from curated passive online sources.&lt;/p&gt; &#xA;&lt;h2&gt;Resource&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#install-release-binaries-without-go-installed&#34;&gt;Install release binaries (Without Go Installed)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#install-source-with-go-installed&#34;&gt;Install source (With Go Installed)&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#go-install&#34;&gt;&lt;code&gt;go install ...&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#go-build--the-development-version&#34;&gt;&lt;code&gt;go build ...&lt;/code&gt; the development Version&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#post-installation&#34;&gt;Post Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#basic&#34;&gt;Basic&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#filter-regex&#34;&gt;Filter Regex&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#match-regex&#34;&gt;Match Regex&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#licensing&#34;&gt;Licensing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fetches URLs from curated passive sources to maximize results: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://otx.alienvault.com/&#34;&gt;AlienVault&#39;s OTX&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://bevigil.com&#34;&gt;BeVigil&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://commoncrawl.org/&#34;&gt;Common Crawl&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://urlscan.io/&#34;&gt;URLScan&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com&#34;&gt;Github&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://intelx.io&#34;&gt;Intelligence X&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://archive.org/web/&#34;&gt;Wayback Machine&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;With Wayback Machine, Parses URLs from &lt;code&gt;robots.txt&lt;/code&gt; snapshots.&lt;/li&gt; &#xA; &lt;li&gt;With Wayback Machine, Parses URLs from webpages&#39; snapshots.&lt;/li&gt; &#xA; &lt;li&gt;Cross-Platform (Windows, Linux &amp;amp; macOS)&lt;/li&gt; &#xA; &lt;li&gt;Supports URLs match and filter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Install release binaries (Without Go Installed)&lt;/h3&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://github.com/hueristiq/xurlfind3r/releases&#34;&gt;releases page&lt;/a&gt; and find the appropriate archive for your operating system and architecture. Download the archive from your browser or copy its URL and retrieve it with &lt;code&gt;wget&lt;/code&gt; or &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;...with &lt;code&gt;wget&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; wget https://github.com/hueristiq/xurlfind3r/releases/download/v&amp;lt;version&amp;gt;/xurlfind3r-&amp;lt;version&amp;gt;-linux-amd64.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;...or, with &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; curl -OL https://github.com/hueristiq/xurlfind3r/releases/download/v&amp;lt;version&amp;gt;/xurlfind3r-&amp;lt;version&amp;gt;-linux-amd64.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;...then, extract the binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tar xf xurlfind3r-&amp;lt;version&amp;gt;-linux-amd64.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; The above steps, download and extract, can be combined into a single step with this onliner&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL https://github.com/hueristiq/xurlfind3r/releases/download/v&amp;lt;version&amp;gt;/xurlfind3r-&amp;lt;version&amp;gt;-linux-amd64.tar.gz | tar -xzv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; On Windows systems, you should be able to double-click the zip archive to extract the &lt;code&gt;xurlfind3r&lt;/code&gt; executable.&lt;/p&gt; &#xA;&lt;p&gt;...move the &lt;code&gt;xurlfind3r&lt;/code&gt; binary to somewhere in your &lt;code&gt;PATH&lt;/code&gt;. For example, on GNU/Linux and OS X systems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mv xurlfind3r /usr/local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Windows users can follow &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/office/ee537574(v=office.14).aspx&#34;&gt;How to: Add Tool Locations to the PATH Environment Variable&lt;/a&gt; in order to add &lt;code&gt;xurlfind3r&lt;/code&gt; to their &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install source (With Go Installed)&lt;/h3&gt; &#xA;&lt;p&gt;Before you install from source, you need to make sure that Go is installed on your system. You can install Go by following the official instructions for your operating system. For this, we will assume that Go is already installed.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;go install ...&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install -v github.com/hueristiq/xurlfind3r/cmd/xurlfind3r@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;go build ...&lt;/code&gt; the development Version&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; git clone https://github.com/hueristiq/xurlfind3r.git &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the utility&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; cd xurlfind3r/cmd/xurlfind3r &amp;amp;&amp;amp; \&#xA; go build .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Move the &lt;code&gt;xurlfind3r&lt;/code&gt; binary to somewhere in your &lt;code&gt;PATH&lt;/code&gt;. For example, on GNU/Linux and OS X systems:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; sudo mv xurlfind3r /usr/local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Windows users can follow &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/office/ee537574(v=office.14).aspx&#34;&gt;How to: Add Tool Locations to the PATH Environment Variable&lt;/a&gt; in order to add &lt;code&gt;xurlfind3r&lt;/code&gt; to their &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; While the development version is a good way to take a peek at &lt;code&gt;xurlfind3r&lt;/code&gt;&#39;s latest features before they get released, be aware that it may have bugs. Officially released versions will generally be more stable.&lt;/p&gt; &#xA;&lt;h2&gt;Post Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;xurlfind3r&lt;/code&gt; will work right after &lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/#installation&#34;&gt;installation&lt;/a&gt;. However, &lt;strong&gt;&lt;a href=&#34;https://bevigil.com&#34;&gt;BeVigil&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://github.com&#34;&gt;Github&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://intelx.io&#34;&gt;Intelligence X&lt;/a&gt;&lt;/strong&gt; require API keys to work, &lt;strong&gt;&lt;a href=&#34;https://urlscan.io&#34;&gt;URLScan&lt;/a&gt;&lt;/strong&gt; supports API key but not required. The API keys are stored in the &lt;code&gt;$HOME/.hueristiq/xurlfind3r/config.yaml&lt;/code&gt; file - created upon first run - and uses the YAML format. Multiple API keys can be specified for each of these source from which one of them will be used.&lt;/p&gt; &#xA;&lt;p&gt;Example &lt;code&gt;config.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: 0.2.0&#xA;sources:&#xA;    - bevigil&#xA;    - commoncrawl&#xA;    - github&#xA;    - intelx&#xA;    - otx&#xA;    - urlscan&#xA;    - wayback&#xA;keys:&#xA;    bevigil:&#xA;        - awA5nvpKU3N8ygkZ&#xA;    github:&#xA;        - d23a554bbc1aabb208c9acfbd2dd41ce7fc9db39&#xA;        - asdsd54bbc1aabb208c9acfbd2dd41ce7fc9db39&#xA;    intelx:&#xA;        - 2.intelx.io:00000000-0000-0000-0000-000000000000&#xA;    urlscan:&#xA;        - d4c85d34-e425-446e-d4ab-f5a3412acbe8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To display help message for &lt;code&gt;xurlfind3r&lt;/code&gt; use the &lt;code&gt;-h&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xurlfind3r -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;help message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;                 _  __ _           _ _____      &#xA;__  ___   _ _ __| |/ _(_)_ __   __| |___ / _ __ &#xA;\ \/ / | | | &#39;__| | |_| | &#39;_ \ / _` | |_ \| &#39;__|&#xA; &amp;gt;  &amp;lt;| |_| | |  | |  _| | | | | (_| |___) | |&#xA;/_/\_\\__,_|_|  |_|_| |_|_| |_|\__,_|____/|_| v0.2.0&#xA;&#xA;USAGE:&#xA;  xurlfind3r [OPTIONS]&#xA;&#xA;TARGET:&#xA; -d, --domain string              (sub)domain to match URLs&#xA;&#xA;SCOPE:&#xA;     --include-subdomains bool    match subdomain&#39;s URLs&#xA;&#xA;SOURCES:&#xA; -s,  --sources bool              list sources&#xA; -u,  --use-sources string        sources to use (default: bevigil,commoncrawl,github,intelx,otx,urlscan,wayback)&#xA;      --skip-wayback-robots bool  with wayback, skip parsing robots.txt snapshots&#xA;      --skip-wayback-source bool  with wayback, skip parsing source code snapshots&#xA;&#xA;FILTER &amp;amp; MATCH:&#xA; -f, --filter string              regex to filter URLs&#xA; -m, --match string               regex to match URLs&#xA;&#xA;OUTPUT:&#xA;     --no-color bool              no color mode&#xA; -o, --output string              output URLs file path&#xA; -v, --verbosity string           debug, info, warning, error, fatal or silent (default: info)&#xA;&#xA;CONFIGURATION:&#xA; -c,  --configuration string      configuration file path (default: ~/.hueristiq/xurlfind3r/config.yaml)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Basic&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xurlfind3r -d hackerone.com --include-subdomains&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Filter Regex&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# filter images&#xA;xurlfind3r -d hackerone.com --include-subdomains -f &#39;`^https?://[^/]*?/.*\.(jpg|jpeg|png|gif|bmp)(\?[^\s]*)?$`&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Match Regex&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# match js URLs&#xA;xurlfind3r -d hackerone.com --include-subdomains -m &#39;^https?://[^/]*?/.*\.js(\?[^\s]*)?$&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hueristiq/xurlfind3r/issues&#34;&gt;Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/hueristiq/xurlfind3r/pulls&#34;&gt;Pull Requests&lt;/a&gt; are welcome! &lt;strong&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;This utility is distributed under the &lt;a href=&#34;https://raw.githubusercontent.com/hueristiq/xurlfind3r/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>