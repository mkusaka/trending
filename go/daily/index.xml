<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-30T01:31:32Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Tencent/AI-Infra-Guard</title>
    <updated>2025-04-30T01:31:32Z</updated>
    <id>tag:github.com,2025-04-30:/Tencent/AI-Infra-Guard</id>
    <link href="https://github.com/Tencent/AI-Infra-Guard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A comprehensive, intelligent, easy-to-use, and lightweight AI Infrastructure Vulnerability Assessment and MCP Server Security Analysis Tool.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üõ°Ô∏è AI Infra Guard&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/README_CN.md&#34;&gt;‰∏≠ÊñáÁâà&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A comprehensive, intelligent, easy-to-use, and lightweight AI Infrastructure Vulnerability Assessment and MCP Server Security Analysis Tool, developed by Tencent Zhuque Lab.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-quick-preview&#34;&gt;üöÄ Quick Preview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-project-highlights&#34;&gt;‚ú® Project Highlights&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-feature-description&#34;&gt;üìã Feature Description&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#mcp-security-certification-and-cooperation&#34;&gt;ü§ù MCP Security Certification and Cooperation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-installation-and-usage&#34;&gt;üì¶ Installation and Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#command-line-structure&#34;&gt;Command Line Structure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#webui-visual-operation&#34;&gt;WebUI Visual Operation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#security-vulnerability-scanning-scan&#34;&gt;Security Vulnerability Scanning (scan)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#mcp-server-scanning-mcp&#34;&gt;MCP Server Scanning (mcp)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-covered-mcp-security-risks&#34;&gt;üìä Covered MCP Security Risks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-covered-ai-component-vulnerabilities&#34;&gt;üìä Covered AI Component Vulnerabilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-component-fingerprinting-rules&#34;&gt;üîç Component Fingerprinting Rules&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#example-gradio-fingerprint-rule&#34;&gt;Example: Gradio Fingerprint Rule&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#fingerprint-matching-syntax&#34;&gt;Fingerprint Matching Syntax&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-contribution&#34;&gt;ü§ù Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/#-license&#34;&gt;üìÑ License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Quick Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;MCP Server Code Analysis&lt;/strong&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/img/mcp.png&#34; alt=&#34;MCP Server Code Detection Preview&#34; height=&#34;400&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Infrastructure Vulnerability Scanning&lt;/strong&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/img/scan.png&#34; alt=&#34;Infrastructure Detection Preview&#34; height=&#34;600&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Project Highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive Security Assessment Capabilities&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports analysis of 9 common MCP security risks, continuously updated.&lt;/li&gt; &#xA; &lt;li&gt;Supports identification of 28 AI component frameworks, covering 200+ vulnerability fingerprints.&lt;/li&gt; &#xA; &lt;li&gt;Supports private deployment for easy integration into internal security scanning pipelines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intelligent and User-Friendly Experience&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;MCP security analysis driven by AI Agent for one-click intelligent analysis.&lt;/li&gt; &#xA; &lt;li&gt;AI component vulnerability scanning supports custom fingerprints and YAML vulnerability rules.&lt;/li&gt; &#xA; &lt;li&gt;Out-of-the-box usability with no complex configuration required, providing a Web interface for visual operation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight Design&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Core components are concise and efficient.&lt;/li&gt; &#xA; &lt;li&gt;Small binary size and low resource consumption.&lt;/li&gt; &#xA; &lt;li&gt;Cross-platform support (Windows/MacOS/Linux).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ü§ù MCP Security Certification and Cooperation&lt;/h2&gt; &#xA;&lt;p&gt;AI Infra Guard is committed to providing professional MCP security analysis and certification solutions. We welcome MCP marketplaces, developer platforms, and hosting providers to integrate our tool into their pre-listing security scanning process for MCP Servers and display the scan results in the MCP marketplace, collectively building a safer MCP ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in cooperating with us, please contact Tencent Zhuque Lab at zhuque [at] tencent.com.&lt;/p&gt; &#xA;&lt;p&gt;We also welcome you to share your implementation cases within the MCP community.&lt;/p&gt; &#xA;&lt;h2&gt;üìã Feature Description&lt;/h2&gt; &#xA;&lt;p&gt;AI Infra Guard consists of three core modules:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI Component Vulnerability Scanning (&lt;code&gt;scan&lt;/code&gt;)&lt;/strong&gt;: Detects known security vulnerabilities in web-based components within AI infrastructure via the command line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCP Security Analysis (&lt;code&gt;mcp&lt;/code&gt;)&lt;/strong&gt;: Analyzes security risks in MCP Server code based on AI Agent via the command line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WebUI Mode (&lt;code&gt;webserver&lt;/code&gt;)&lt;/strong&gt;: Enables the web-based visual operation interface.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üì¶ Installation and Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest version suitable for your operating system from the &lt;a href=&#34;https://github.com/Tencent/AI-Infra-Guard/releases&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h3&gt;Command Line Structure&lt;/h3&gt; &#xA;&lt;p&gt;AI Infra Guard uses a subcommand structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard &amp;lt;subcommand&amp;gt; [options]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Main subcommands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;scan&lt;/code&gt;: Executes AI component security vulnerability scanning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mcp&lt;/code&gt;: Executes MCP Server code security analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;webserver&lt;/code&gt;: Starts the Web interface server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;WebUI Visual Operation&lt;/h4&gt; &#xA;&lt;p&gt;Start the web server, listening on &lt;code&gt;127.0.0.1:8088&lt;/code&gt; by default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard webserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify the listening address and port:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard webserver --ws-addr &amp;lt;IP&amp;gt;:&amp;lt;PORT&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Example: &lt;code&gt;./ai-infra-guard webserver --ws-addr 0.0.0.0:9090&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;AI Component Vulnerability Scanning (&lt;code&gt;scan&lt;/code&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Local One-Click Detection&lt;/strong&gt; (Scans common local service ports):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard scan --localscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Scan a Single Target&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard scan --target &amp;lt;IP/Domain&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Example: &lt;code&gt;./ai-infra-guard scan --target example.com&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Scan Multiple Targets&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard scan --target &amp;lt;IP/Domain1&amp;gt; --target &amp;lt;IP/Domain2&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Example: &lt;code&gt;./ai-infra-guard scan --target 192.168.1.1 --target example.org&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Read Targets from a File&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard scan --file target.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;The &lt;code&gt;target.txt&lt;/code&gt; file should contain one target URL or IP address per line.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;View Full Parameters for the &lt;code&gt;scan&lt;/code&gt; Subcommand&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard scan --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;scan&lt;/code&gt; Subcommand Parameter Description&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  ai-infra-guard scan [flags]&#xA;&#xA;Flags:&#xA;      --ai                      Enable AI analysis (requires LLM Token configuration)&#xA;      --check-vul               Validate the effectiveness of vulnerability templates&#xA;      --deepseek-token string   DeepSeek API token (for --ai feature)&#xA;  -f, --file string             File path containing target URLs&#xA;      --fps string              Fingerprint template file or directory (default: &#34;data/fingerprints&#34;)&#xA;      --header stringArray      Custom HTTP request headers (can be specified multiple times, format: &#34;Key:Value&#34;)&#xA;  -h, --help                    Show help information&#xA;      --hunyuan-token string    Hunyuan API token (for --ai feature)&#xA;      --lang string             Response language (zh/en, default: &#34;zh&#34;)&#xA;      --limit int               Maximum requests per second (default: 200)&#xA;      --list-vul                List all available vulnerability templates&#xA;      --localscan               Perform local one-click scan&#xA;  -o, --output string           Result output file path (supports .txt, .json, .csv formats)&#xA;      --proxy-url string        HTTP/SOCKS5 proxy server URL&#xA;  -t, --target stringArray      Target URL (can be specified multiple times)&#xA;      --timeout int             HTTP request timeout in seconds (default: 5)&#xA;      --vul string              Vulnerability database directory (default: &#34;data/vuln&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;MCP Server Security Risk Analysis (&lt;code&gt;mcp&lt;/code&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;This feature automatically analyzes security issues in MCP Server code using an AI Agent.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Basic Usage&lt;/strong&gt; (Uses OpenAI API by default, requires Token):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard mcp --code &amp;lt;source_code_path&amp;gt; --model &amp;lt;model_name&amp;gt; --token &amp;lt;api_token&amp;gt; [--base-url &amp;lt;api_base_url&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Example: &lt;code&gt;./ai-infra-guard mcp --code /path/to/mcp/server --model gpt-4 --token sk-xxxxxx&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Specify Output Format&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard mcp --code &amp;lt;source_code_path&amp;gt; --model &amp;lt;model_name&amp;gt; --token &amp;lt;api_token&amp;gt; --csv results.csv --json results.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;View Full Parameters for the &lt;code&gt;mcp&lt;/code&gt; Subcommand&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ai-infra-guard mcp --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;mcp&lt;/code&gt; Subcommand Parameter Description&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  ai-infra-guard mcp [flags]&#xA;&#xA;Flags:&#xA;      --base-url string   LLM API base URL (optional, overrides default OpenAI URL)&#xA;      --code string       Path to the MCP Server source code to scan (required)&#xA;      --csv string        Output results to a CSV file path&#xA;  -h, --help              Show help information&#xA;      --json string       Output results to a JSON file path&#xA;      --log string        Log file save path&#xA;      --model string      AI model name (required, e.g., gpt-4, gpt-3.5-turbo)&#xA;      --plugins string    Specify enabled plugins list (comma-separated, optional)&#xA;      --token string      LLM API token (required)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìä Covered MCP Security Risks&lt;/h2&gt; &#xA;&lt;p&gt;AI Infra Guard can analyze the following common MCP security risks, with continuous updates:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Risk Name&lt;/th&gt; &#xA;   &lt;th&gt;Risk Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tool Poisoning Attack&lt;/td&gt; &#xA;   &lt;td&gt;Malicious MCP Server injects hidden instructions via tool descriptions to manipulate the AI Agent into performing unauthorized actions (e.g., data exfiltration, executing malicious code or commands).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rug Pull&lt;/td&gt; &#xA;   &lt;td&gt;Malicious MCP Server behaves normally initially but changes behavior after user approval or several runs to execute malicious instructions, leading to difficult-to-detect malicious activities.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tool Shadowing Attack&lt;/td&gt; &#xA;   &lt;td&gt;Malicious MCP Server uses hidden instructions to redefine the behavior of other trusted MCP Server tools (e.g., modifying email recipients, executing unauthorized operations).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Malicious Code/Command Execution&lt;/td&gt; &#xA;   &lt;td&gt;If an MCP Server supports direct code or command execution without proper sandboxing, attackers could exploit it to execute malicious operations on the server or user&#39;s local machine.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data Exfiltration&lt;/td&gt; &#xA;   &lt;td&gt;Malicious MCP Server induces the AI Agent to exfiltrate sensitive data (e.g., API keys, SSH keys) or directly transmits user-authorized input data to external servers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Unauthorized Access/Authentication&lt;/td&gt; &#xA;   &lt;td&gt;MCP Server lacks effective authorization/authentication mechanisms or has flaws, allowing attackers to bypass verification and access restricted resources or user data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Indirect Prompt Injection&lt;/td&gt; &#xA;   &lt;td&gt;MCP Server outputs external data containing malicious instructions (e.g., web pages, documents) to the AI Agent, potentially compromising the AI Agent&#39;s integrity and leading to unintended actions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Package Name Squatting&lt;/td&gt; &#xA;   &lt;td&gt;Malicious MCP Server uses names, tool names, or descriptions similar to trusted services to trick the AI Agent into invoking malicious services; or a third party squats on an official MCP Server name to distribute malware or implant backdoors.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Insecure Storage of Sensitive Keys&lt;/td&gt; &#xA;   &lt;td&gt;MCP Server hardcodes or stores sensitive keys in plaintext within code or configuration files, leading to potential key leakage risks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;üìä Covered AI Component Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;AI Infra Guard supports detection of known vulnerabilities in various AI-related components:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Component Name&lt;/th&gt; &#xA;   &lt;th&gt;Vulnerability Count&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;anythingllm&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;langchain&lt;/td&gt; &#xA;   &lt;td&gt;33&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chuanhugpt&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clickhouse&lt;/td&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;comfy_mtb&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ComfyUI-Prompt-Preview&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ComfyUI-Custom-Scripts&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;comfyui&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dify&lt;/td&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fastchat-webui&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fastchat&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;feast&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gradio&lt;/td&gt; &#xA;   &lt;td&gt;42&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jupyterlab&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jupyter-notebook&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jupyter-server&lt;/td&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;kubeflow&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;kubepi&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llamafactory&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llmstudio&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ollama&lt;/td&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;open-webui&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pyload-ng&lt;/td&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;qanything&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ragflow&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ray&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tensorboard&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;vllm&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xinference&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;triton-inference-server&lt;/td&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;200+&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: The vulnerability database is continuously updated.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üîç Component Fingerprinting Rules&lt;/h2&gt; &#xA;&lt;p&gt;AI Infra Guard uses YAML-based rules for web component fingerprinting and vulnerability matching.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fingerprint Rules&lt;/strong&gt;: Stored in the &lt;code&gt;data/fingerprints&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vulnerability Rules&lt;/strong&gt;: Stored in the &lt;code&gt;data/vuln&lt;/code&gt; directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example: Gradio Fingerprint Rule (&lt;code&gt;data/fingerprints/gradio.yaml&lt;/code&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;info:&#xA;  name: gradio&#xA;  author: Security Team&#xA;  severity: info&#xA;  metadata:&#xA;    product: gradio&#xA;    vendor: gradio&#xA;http:&#xA;  - method: GET&#xA;    path: &#39;/&#39;&#xA;    matchers:&#xA;      # Match if the response body contains Gradio-specific JavaScript configuration or elements&#xA;      - body=&#34;&amp;lt;script&amp;gt;window.gradio_config = {&#34; || body=&#34;document.getElementsByTagName(\&#34;gradio-app\&#34;);&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fingerprint Matching Syntax&lt;/h3&gt; &#xA;&lt;h4&gt;Match Locations&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: HTML page title&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;body&lt;/code&gt;: HTTP response body&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;header&lt;/code&gt;: HTTP response header&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;icon&lt;/code&gt;: Hash value (e.g., MurmurHash3) of the website&#39;s favicon&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Logical Operators&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;=&lt;/code&gt;: Fuzzy contains match (case-insensitive)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;==&lt;/code&gt;: Exact equals match (case-sensitive)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;!=&lt;/code&gt;: Not equals match&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~=&lt;/code&gt;: Regular expression match&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;: Logical AND&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;||&lt;/code&gt;: Logical OR&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;()&lt;/code&gt;: Used for grouping to change operator precedence&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ü§ù Contribution&lt;/h2&gt; &#xA;&lt;p&gt;We welcome community contributions!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Report Issues&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Tencent/AI-Infra-Guard/issues&#34;&gt;Submit an Issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Submit Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Tencent/AI-Infra-Guard/pulls&#34;&gt;Create a Pull Request&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìÑ License&lt;/h2&gt; &#xA;&lt;p&gt;This project is open-sourced under the &lt;strong&gt;MIT License&lt;/strong&gt;. For details, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/Tencent/AI-Infra-Guard/main/License.txt&#34;&gt;License.txt&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Tencent/AI-Infra-Guard&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Tencent/AI-Infra-Guard&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>