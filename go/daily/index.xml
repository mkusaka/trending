<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-22T01:36:29Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cometbft/cometbft</title>
    <updated>2023-02-22T01:36:29Z</updated>
    <id>tag:github.com,2023-02-22:/cometbft/cometbft</id>
    <link href="https://github.com/cometbft/cometbft" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CometBFT: A distributed, Byzantine fault-tolerant, deterministic state machine replication engine, and fork of Tendermint Core.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CometBFT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Byzantine_fault_tolerance&#34;&gt;Byzantine-Fault Tolerant&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/State_machine_replication&#34;&gt;State Machine Replication&lt;/a&gt;. Or &lt;a href=&#34;https://en.wikipedia.org/wiki/Blockchain&#34;&gt;Blockchain&lt;/a&gt;, for short.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cometbft/cometbft/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/cometbft/cometbft.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/cometbft/cometbft&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/915b7be44ada53c290eb157634330494ebe3e30a/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f676f6c616e672f6764646f3f7374617475732e737667&#34; alt=&#34;API Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/moovweb/gvm&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go-1.19-blue.svg?sanitize=true&#34; alt=&#34;Go version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/cosmosnetwork&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/669268347736686612.svg?sanitize=true&#34; alt=&#34;Discord chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cometbft/cometbft/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/cometbft/cometbft.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcegraph.com/github.com/cometbft/cometbft?badge&#34;&gt;&lt;img src=&#34;https://sourcegraph.com/github.com/cometbft/cometbft/-/badge.svg?sanitize=true&#34; alt=&#34;Sourcegraph&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Tests&lt;/th&gt; &#xA;   &lt;th&gt;Linting&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;main&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cometbft/cometbft/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/cometbft/cometbft/actions/workflows/tests.yml/badge.svg?branch=main&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cometbft/cometbft/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/cometbft/cometbft/actions/workflows/lint.yml/badge.svg?branch=main&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.37.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cometbft/cometbft/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/cometbft/cometbft/actions/workflows/tests.yml/badge.svg?branch=v0.37.x&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cometbft/cometbft/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/cometbft/cometbft/actions/workflows/lint.yml/badge.svg?branch=v0.37.x&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.34.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cometbft/cometbft/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/cometbft/cometbft/actions/workflows/tests.yml/badge.svg?branch=v0.34.x&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cometbft/cometbft/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/cometbft/cometbft/actions/workflows/lint.yml/badge.svg?branch=v0.34.x&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine - written in any programming language - and securely replicates it on many machines.&lt;/p&gt; &#xA;&lt;p&gt;It is a fork of &lt;a href=&#34;https://github.com/tendermint/tendermint&#34;&gt;Tendermint Core&lt;/a&gt; and implements the Tendermint consensus algorithm.&lt;/p&gt; &#xA;&lt;p&gt;For protocol details, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/spec/README.md&#34;&gt;CometBFT Specification&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For detailed analysis of the consensus protocol, including safety and liveness proofs, read our paper, &#34;&lt;a href=&#34;https://arxiv.org/abs/1807.04938&#34;&gt;The latest gossip on BFT consensus&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Complete documentation can be found on the &lt;a href=&#34;https://docs.cometbft.com/&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Please do not depend on &lt;code&gt;main&lt;/code&gt; as your production branch. Use &lt;a href=&#34;https://github.com/cometbft/cometbft/releases&#34;&gt;releases&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;p&gt;We haven&#39;t released v1.0 yet since we are making breaking changes to the protocol and the APIs. See below for more details about &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/#versioning&#34;&gt;versioning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In any case, if you intend to run CometBFT in production, we&#39;re happy to help.&lt;/p&gt; &#xA;&lt;p&gt;To contact us, you can also &lt;a href=&#34;https://discord.com/channels/669268347736686612/669283915743232011&#34;&gt;join the chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More on how releases are conducted can be found &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/RELEASES.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;To report a security vulnerability, see our &lt;a href=&#34;https://hackerone.com/cosmos&#34;&gt;bug bounty program&lt;/a&gt;. For examples of the kinds of bugs we&#39;re looking for, see &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/SECURITY.md&#34;&gt;our security policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Minimum requirements&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CometBFT version&lt;/th&gt; &#xA;   &lt;th&gt;Requirement&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.34.x&lt;/td&gt; &#xA;   &lt;td&gt;Go version&lt;/td&gt; &#xA;   &lt;td&gt;Go 1.18 or higher&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.37.x&lt;/td&gt; &#xA;   &lt;td&gt;Go version&lt;/td&gt; &#xA;   &lt;td&gt;Go 1.19 or higher&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;main&lt;/td&gt; &#xA;   &lt;td&gt;Go version&lt;/td&gt; &#xA;   &lt;td&gt;Go 1.19 or higher&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/docs/introduction/install.md&#34;&gt;install instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/docs/introduction/quick-start.md&#34;&gt;Single node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/docs/networks/docker-compose.md&#34;&gt;Local cluster using docker-compose&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please abide by the &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; in all interactions.&lt;/p&gt; &#xA;&lt;p&gt;Before contributing to the project, please take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/STYLE_GUIDE.md&#34;&gt;style guide&lt;/a&gt;. You may also find it helpful to read the &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/spec/README.md&#34;&gt;specifications&lt;/a&gt;, and familiarize yourself with our &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/docs/architecture/README.md&#34;&gt;Architectural Decision Records (ADRs)&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/docs/rfc/README.md&#34;&gt;Request For Comments (RFCs)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;h3&gt;Semantic Versioning&lt;/h3&gt; &#xA;&lt;p&gt;CometBFT uses &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; to determine when and how the version changes. According to SemVer, anything in the public API can change at any time before version 1.0.0&lt;/p&gt; &#xA;&lt;p&gt;To provide some stability to users of 0.X.X versions of CometBFT, the MINOR version is used to signal breaking changes across CometBFT&#39;s API. This API includes all publicly exposed types, functions, and methods in non-internal Go packages as well as the types and methods accessible via the CometBFT RPC interface.&lt;/p&gt; &#xA;&lt;p&gt;Breaking changes to these public APIs will be documented in the CHANGELOG.&lt;/p&gt; &#xA;&lt;h3&gt;Upgrades&lt;/h3&gt; &#xA;&lt;p&gt;In an effort to avoid accumulating technical debt prior to 1.0.0, we do not guarantee that breaking changes (i.e. bumps in the MINOR version) will work with existing CometBFT blockchains. In these cases you will have to start a new blockchain, or write something custom to get the old data into the new chain. However, any bump in the PATCH version should be compatible with existing blockchain histories.&lt;/p&gt; &#xA;&lt;p&gt;For more information on upgrading, see &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/UPGRADING.md&#34;&gt;UPGRADING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Versions&lt;/h3&gt; &#xA;&lt;p&gt;Because we are a small core team, we have limited capacity to ship patch updates, including security updates. Consequently, we strongly recommend keeping CometBFT up-to-date. Upgrading instructions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/cometbft/cometbft/main/UPGRADING.md&#34;&gt;UPGRADING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Currently supported versions include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;v0.34.x: CometBFT v0.34.25 is compatible with Tendermint Core v0.34.24&lt;/li&gt; &#xA; &lt;li&gt;v0.37.x: (release candidate)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;Libraries&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/cosmos/cosmos-sdk&#34;&gt;Cosmos SDK&lt;/a&gt;; A framework for building applications in Golang&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/informalsystems/tendermint-rs&#34;&gt;Tendermint in Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/penumbra-zone/tower-abci&#34;&gt;ABCI Tower&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Applications&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.cosmos.network/&#34;&gt;Cosmos Hub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.terra.money/&#34;&gt;Terra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://celestia.org/&#34;&gt;Celestia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anoma.network/&#34;&gt;Anoma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.vocdoni.io/&#34;&gt;Vocdoni&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Research&lt;/h3&gt; &#xA;&lt;p&gt;Below are links to the original Tendermint consensus algorithm and relevant whitepapers which CosmosBFT will continue to build on.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1807.04938&#34;&gt;The latest gossip on BFT consensus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://atrium.lib.uoguelph.ca/xmlui/handle/10214/9769&#34;&gt;Master&#39;s Thesis on Tendermint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tendermint.com/static/docs/tendermint.pdf&#34;&gt;Original Whitepaper: &#34;Tendermint: Consensus Without Mining&#34;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join us&lt;/h2&gt; &#xA;&lt;p&gt;CometBFT is currently maintained by &lt;a href=&#34;https://informal.systems&#34;&gt;Informal Systems&lt;/a&gt;. If you&#39;d like to work full-time on CometBFT, &lt;a href=&#34;https://informal.systems/careers&#34;&gt;we&#39;re hiring&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Funding for CometBFT development comes primarily from the &lt;a href=&#34;https://interchain.io&#34;&gt;Interchain Foundation&lt;/a&gt;, a Swiss non-profit. Informal Systems also maintains &lt;a href=&#34;https://cometbft.com&#34;&gt;cometbft.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>drakkan/sftpgo</title>
    <updated>2023-02-22T01:36:29Z</updated>
    <id>tag:github.com,2023-02-22:/drakkan/sftpgo</id>
    <link href="https://github.com/drakkan/sftpgo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fully featured and highly configurable SFTP server with optional HTTP/S, FTP/S and WebDAV support - S3, Google Cloud Storage, Azure Blob&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SFTPGo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/drakkan/sftpgo/workflows/CI/badge.svg?branch=main&amp;amp;event=push&#34;&gt;&lt;img src=&#34;https://github.com/drakkan/sftpgo/workflows/CI/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/drakkan/sftpgo/branch/main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/drakkan/sftpgo/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-AGPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: AGPL-3.0-only&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/drakkan/sftpgo&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/drakkan/sftpgo&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Go&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/README.zh_CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fully featured and highly configurable SFTP server with optional HTTP/S, FTP/S and WebDAV support. Several storage backends are supported: local filesystem, encrypted local filesystem, S3 (compatible) Object Storage, Google Cloud Storage, Azure Blob Storage, SFTP.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;If you find SFTPGo useful please consider supporting this Open Source project.&lt;/p&gt; &#xA;&lt;p&gt;Maintaining and evolving SFTPGo is a lot of work - easily the equivalent of a full time job - for me.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;d like to make SFTPGo into a sustainable long term project and would not like to introduce a dual licensing option and limit some features to the proprietary version only.&lt;/p&gt; &#xA;&lt;p&gt;If you use SFTPGo, it is in your best interest to ensure that the project you rely on stays healthy and well maintained. This can only happen with your donations and &lt;a href=&#34;https://github.com/sponsors/drakkan&#34;&gt;sponsorships&lt;/a&gt; &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you just take and don&#39;t return anything back, the project will die in the long run and you will be forced to pay for a similar proprietary solution.&lt;/p&gt; &#xA;&lt;p&gt;More &lt;a href=&#34;https://github.com/drakkan/sftpgo/issues/452&#34;&gt;info&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Thank you to our sponsors&lt;/h3&gt; &#xA;&lt;h4&gt;Platinum sponsors&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.aledade.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/img/Aledade_logo.png&#34; alt=&#34;Aledade logo&#34; width=&#34;202&#34; height=&#34;70&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Silver sponsors&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dendisoftware.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/img/Dendi_logo.png&#34; alt=&#34;Dendi logo&#34; width=&#34;212&#34; height=&#34;66&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Bronze sponsors&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.7digital.com/&#34;&gt;&lt;img src=&#34;https://www.7digital.com/wp-content/themes/sevendigital/images/top_logo.png&#34; alt=&#34;7digital logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support policy&lt;/h2&gt; &#xA;&lt;p&gt;SFTPGo is an Open Source project and you can of course use it for free but please don&#39;t ask for free support as well.&lt;/p&gt; &#xA;&lt;p&gt;We will check the reported issues to see if you are experiencing a bug and if so we&#39;ll will fix it, but will only provide support to project &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/#sponsors&#34;&gt;sponsors/donors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you report an invalid issue or ask for step-by-step support, your issue will remain open with no answer or will be closed as invalid without further explanation. Thanks for understanding.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for serving local filesystem, encrypted local filesystem, S3 Compatible Object Storage, Google Cloud Storage, Azure Blob Storage or other SFTP accounts over SFTP/SCP/FTP/WebDAV.&lt;/li&gt; &#xA; &lt;li&gt;Virtual folders are supported: a virtual folder can use any of the supported storage backends. So you can have, for example, a user with the S3 backend mapping a GCS bucket (or part of it) on a specified path and an encrypted local filesystem on another one. Virtual folders can be private or shared among multiple users, for shared virtual folders you can define different quota limits for each user.&lt;/li&gt; &#xA; &lt;li&gt;Configurable &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/custom-actions.md&#34;&gt;custom commands and/or HTTP hooks&lt;/a&gt; on upload, pre-upload, download, pre-download, delete, pre-delete, rename, mkdir, rmdir on SSH commands and on user add, update and delete.&lt;/li&gt; &#xA; &lt;li&gt;Virtual accounts stored within a &#34;data provider&#34;.&lt;/li&gt; &#xA; &lt;li&gt;SQLite, MySQL, PostgreSQL, CockroachDB, Bolt (key/value store in pure Go) and in-memory data providers are supported.&lt;/li&gt; &#xA; &lt;li&gt;Chroot isolation for local accounts. Cloud-based accounts can be restricted to a certain base path.&lt;/li&gt; &#xA; &lt;li&gt;Per-user and per-directory virtual permissions, for each path you can allow or deny: directory listing, upload, overwrite, download, delete, rename, create directories, create symlinks, change owner/group/file mode and modification time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/rest-api.md&#34;&gt;REST API&lt;/a&gt; for users and folders management, data retention, backup, restore and real time reports of the active connections with possibility of forcibly closing a connection.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/eventmanager.md&#34;&gt;Event Manager&lt;/a&gt; allows to define custom workflows based on server events or schedules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/web-admin.md&#34;&gt;Web based administration interface&lt;/a&gt; to easily manage users, folders and connections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/web-client.md&#34;&gt;Web client interface&lt;/a&gt; so that end users can change their credentials, manage and share their files in the browser.&lt;/li&gt; &#xA; &lt;li&gt;Public key and password authentication. Multiple public keys per-user are supported.&lt;/li&gt; &#xA; &lt;li&gt;SSH user &lt;a href=&#34;https://cvsweb.openbsd.org/src/usr.bin/ssh/PROTOCOL.certkeys?rev=1.8&#34;&gt;certificate authentication&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Keyboard interactive authentication. You can easily setup a customizable multi-factor authentication.&lt;/li&gt; &#xA; &lt;li&gt;Partial authentication. You can configure multi-step authentication requiring, for example, the user password after successful public key authentication.&lt;/li&gt; &#xA; &lt;li&gt;Per-user authentication methods.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/howto/two-factor-authentication.md&#34;&gt;Two-factor authentication&lt;/a&gt; based on time-based one time passwords (RFC 6238) which works with Authy, Google Authenticator and other compatible apps.&lt;/li&gt; &#xA; &lt;li&gt;Simplified user administrations using &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/groups.md&#34;&gt;groups&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/roles.md&#34;&gt;Roles&lt;/a&gt; allow you to create limited administrators who can only create and manage users with their role.&lt;/li&gt; &#xA; &lt;li&gt;Custom authentication via &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/external-auth.md&#34;&gt;external programs/HTTP API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Web Client and Web Admin user interfaces support &lt;a href=&#34;https://openid.net/connect/&#34;&gt;OpenID Connect&lt;/a&gt; authentication and so they can be integrated with identity providers such as &lt;a href=&#34;https://www.keycloak.org/&#34;&gt;Keycloak&lt;/a&gt;. You can find more details &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/oidc.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/dare.md&#34;&gt;Data At Rest Encryption&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Dynamic user modification before login via &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/dynamic-user-mod.md&#34;&gt;external programs/HTTP API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Quota support: accounts can have individual disk quota expressed as max total size and/or max number of files.&lt;/li&gt; &#xA; &lt;li&gt;Bandwidth throttling, with separate settings for upload and download and overrides based on the client&#39;s IP address.&lt;/li&gt; &#xA; &lt;li&gt;Data transfer bandwidth limits, with total limit or separate settings for uploads and downloads and overrides based on the client&#39;s IP address. Limits can be reset using the REST API.&lt;/li&gt; &#xA; &lt;li&gt;Per-protocol &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/rate-limiting.md&#34;&gt;rate limiting&lt;/a&gt; is supported and can be optionally connected to the built-in defender to automatically block hosts that repeatedly exceed the configured limit.&lt;/li&gt; &#xA; &lt;li&gt;Per-user maximum concurrent sessions.&lt;/li&gt; &#xA; &lt;li&gt;Per-user and global IP filters: login can be restricted to specific ranges of IP addresses or to a specific IP address.&lt;/li&gt; &#xA; &lt;li&gt;Per-user and per-directory shell like patterns filters: files can be allowed, denied and optionally hidden based on shell like patterns.&lt;/li&gt; &#xA; &lt;li&gt;Automatically terminating idle connections.&lt;/li&gt; &#xA; &lt;li&gt;Automatic blocklist management using the built-in &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/defender.md&#34;&gt;defender&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Geo-IP filtering using a &lt;a href=&#34;https://github.com/sftpgo/sftpgo-plugin-geoipfilter&#34;&gt;plugin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Atomic uploads are configurable.&lt;/li&gt; &#xA; &lt;li&gt;Per-user files/folders ownership mapping: you can map all the users to the system account that runs SFTPGo (all platforms are supported) or you can run SFTPGo as root user and map each user or group of users to a different system account (*NIX only).&lt;/li&gt; &#xA; &lt;li&gt;Support for Git repositories over SSH.&lt;/li&gt; &#xA; &lt;li&gt;SCP and rsync are supported.&lt;/li&gt; &#xA; &lt;li&gt;FTP/S is supported. You can configure the FTP service to require TLS for both control and data connections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/webdav.md&#34;&gt;WebDAV&lt;/a&gt; is supported.&lt;/li&gt; &#xA; &lt;li&gt;ACME protocol is supported. SFTPGo can obtain and automatically renew TLS certificates for HTTPS, WebDAV and FTPS from &lt;code&gt;Let&#39;s Encrypt&lt;/code&gt; or other ACME compliant certificate authorities, using the the &lt;code&gt;HTTP-01&lt;/code&gt; or &lt;code&gt;TLS-ALPN-01&lt;/code&gt; &lt;a href=&#34;https://letsencrypt.org/docs/challenge-types/&#34;&gt;challenge types&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Two-Way TLS authentication, aka TLS with client certificate authentication, is supported for REST API/Web Admin, FTPS and WebDAV over HTTPS.&lt;/li&gt; &#xA; &lt;li&gt;Per-user protocols restrictions. You can configure the allowed protocols (SSH/HTTP/FTP/WebDAV) for each user.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/metrics.md&#34;&gt;Prometheus metrics&lt;/a&gt; are supported.&lt;/li&gt; &#xA; &lt;li&gt;Support for HAProxy PROXY protocol: you can proxy and/or load balance the SFTP/SCP/FTP service without losing the information about the client&#39;s address.&lt;/li&gt; &#xA; &lt;li&gt;Easy &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/examples/convertusers&#34;&gt;migration&lt;/a&gt; from Linux system user accounts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/portable-mode.md&#34;&gt;Portable mode&lt;/a&gt;: a convenient way to share a single directory on demand.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/sftp-subsystem.md&#34;&gt;SFTP subsystem mode&lt;/a&gt;: you can use SFTPGo as OpenSSH&#39;s SFTP subsystem.&lt;/li&gt; &#xA; &lt;li&gt;Performance analysis using built-in &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/profiling.md&#34;&gt;profiler&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Configuration format is at your choice: JSON, TOML, YAML, HCL, envfile are supported.&lt;/li&gt; &#xA; &lt;li&gt;Log files are accurate and they are saved in the easily parsable JSON format (&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/logs.md&#34;&gt;more information&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;SFTPGo supports a &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/plugins.md&#34;&gt;plugin system&lt;/a&gt; and therefore can be extended using external plugins.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Platforms&lt;/h2&gt; &#xA;&lt;p&gt;SFTPGo is developed and tested on Linux. After each commit, the code is automatically built and tested on Linux, macOS and Windows using &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/.github/workflows/development.yml&#34;&gt;GitHub Actions&lt;/a&gt;. The test cases are regularly manually executed and passed on FreeBSD. Other *BSD variants should work too.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go as build only dependency. We support the Go version(s) used in &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/.github/workflows&#34;&gt;continuous integration workflows&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A suitable SQL server to use as data provider: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;upstream supported versions of PostgreSQL, MySQL and MariaDB.&lt;/li&gt; &#xA;   &lt;li&gt;CockroachDB stable.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The SQL server is optional: you can choose to use an embedded SQLite, bolt or in memory data provider.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Binary releases for Linux, macOS, and Windows are available. Please visit the &lt;a href=&#34;https://github.com/drakkan/sftpgo/releases&#34; title=&#34;releases&#34;&gt;releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;An official Docker image is available. Documentation is &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docker/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Some Linux distro packages are available&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;For Arch Linux via AUR: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/sftpgo/&#34;&gt;sftpgo&lt;/a&gt;. This package follows stable releases. It requires &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt; and &lt;code&gt;go&lt;/code&gt; to build.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/sftpgo-bin/&#34;&gt;sftpgo-bin&lt;/a&gt;. This package follows stable releases downloading the prebuilt linux binary from GitHub. It does not require &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt; and &lt;code&gt;go&lt;/code&gt; to build.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/sftpgo-git/&#34;&gt;sftpgo-git&lt;/a&gt;. This package builds and installs the latest git &lt;code&gt;main&lt;/code&gt; branch. It requires &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt; and &lt;code&gt;go&lt;/code&gt; to build.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Deb and RPM packages are built after each commit and for each release.&lt;/li&gt; &#xA;  &lt;li&gt;For Ubuntu a PPA is available &lt;a href=&#34;https://launchpad.net/~sftpgo/+archive/ubuntu/sftpgo&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Void Linux provides an &lt;a href=&#34;https://github.com/void-linux/void-packages/tree/master/srcpkgs/sftpgo&#34;&gt;official package&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;APT and YUM repositories are &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/repo.md&#34;&gt;available&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;SFTPGo is also available on some marketplaces:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/marketplace/seller-profile?id=6e849ab8-70a6-47de-9a43-13c3fa849335&#34;&gt;AWS Marketplace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://azuremarketplace.microsoft.com/en-us/marketplace/apps/eliamarzia1667381463185.sftpgo_linux&#34;&gt;Azure Marketplace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://elest.io/open-source/sftpgo&#34;&gt;Elest.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Purchasing from there will help keep SFTPGo a long-term sustainable project.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Windows packages&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;The Windows installer to install and run SFTPGo as a Windows service.&lt;/li&gt; &#xA;  &lt;li&gt;The portable package to start SFTPGo on demand.&lt;/li&gt; &#xA;  &lt;li&gt;The &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/package-manager/winget/install&#34;&gt;winget&lt;/a&gt; package to install and run SFTPGo as a Windows service: &lt;code&gt;winget install SFTPGo&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;The &lt;a href=&#34;https://community.chocolatey.org/packages/sftpgo&#34;&gt;Chocolatey package&lt;/a&gt; to install and run SFTPGo as a Windows service.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;On macOS you can install from the Homebrew &lt;a href=&#34;https://formulae.brew.sh/formula/sftpgo&#34;&gt;Formula&lt;/a&gt;. On FreeBSD you can install from the &lt;a href=&#34;https://www.freshports.org/ftp/sftpgo&#34;&gt;SFTPGo port&lt;/a&gt;. On DragonFlyBSD you can install SFTPGo from &lt;a href=&#34;https://github.com/DragonFlyBSD/DPorts/tree/master/ftp/sftpgo&#34;&gt;DPorts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can easily test new features selecting a commit from the &lt;a href=&#34;https://github.com/drakkan/sftpgo/actions&#34;&gt;Actions&lt;/a&gt; page and downloading the matching build artifacts for Linux, macOS or Windows. GitHub stores artifacts for 90 days.&lt;/p&gt; &#xA;&lt;p&gt;Alternately, you can &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/build-from-source.md&#34;&gt;build from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/howto/getting-started.md&#34;&gt;Getting Started Guide for the Impatient&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;A full explanation of all configuration methods can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/full-configuration.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure to &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/#data-provider-initialization-and-management&#34;&gt;initialize the data provider&lt;/a&gt; before running the daemon.&lt;/p&gt; &#xA;&lt;p&gt;To start SFTPGo with the default settings, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sftpgo serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/service.md&#34;&gt;this documentation&lt;/a&gt; if you want to run SFTPGo as a service.&lt;/p&gt; &#xA;&lt;h3&gt;Data provider initialization and management&lt;/h3&gt; &#xA;&lt;p&gt;Before starting the SFTPGo server please ensure that the configured data provider is properly initialized/updated.&lt;/p&gt; &#xA;&lt;p&gt;For PostgreSQL, MySQL and CockroachDB providers, you need to create the configured database. For SQLite, the configured database will be automatically created at startup. Memory and bolt data providers do not require an initialization but they could require an update to the existing data after upgrading SFTPGo.&lt;/p&gt; &#xA;&lt;p&gt;SFTPGo will attempt to automatically detect if the data provider is initialized/updated and if not, will attempt to initialize/ update it on startup as needed.&lt;/p&gt; &#xA;&lt;p&gt;Alternately, you can create/update the required data provider structures yourself using the &lt;code&gt;initprovider&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;For example, you can simply execute the following command from the configuration directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sftpgo initprovider&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at the CLI usage to learn how to specify a different configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sftpgo initprovider --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can disable automatic data provider checks/updates at startup by setting the &lt;code&gt;update_mode&lt;/code&gt; configuration key to &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also reset your provider by using the &lt;code&gt;resetprovider&lt;/code&gt; sub-command. Take a look at the CLI usage for more details:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sftpgo resetprovider --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Please note that some data providers (e.g. MySQL and CockroachDB) do not support schema changes within a transaction, this means that you may end up with an inconsistent schema if migrations are forcibly aborted. CockroachDB doesn&#39;t support database-level locks, so make sure you don&#39;t execute migrations concurrently.&lt;/p&gt; &#xA;&lt;h2&gt;Create the first admin&lt;/h2&gt; &#xA;&lt;p&gt;To start using SFTPGo you need to create an admin user, you can do it in several ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;by using the web admin interface. The default URL is &lt;a href=&#34;http://127.0.0.1:8080/web/admin&#34;&gt;http://127.0.0.1:8080/web/admin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;by loading initial data&lt;/li&gt; &#xA; &lt;li&gt;by enabling &lt;code&gt;create_default_admin&lt;/code&gt; in your configuration file and setting the environment variables &lt;code&gt;SFTPGO_DEFAULT_ADMIN_USERNAME&lt;/code&gt; and &lt;code&gt;SFTPGO_DEFAULT_ADMIN_PASSWORD&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;SFTPGo supports upgrading from the previous release branch to the current one. Some examples for supported upgrade paths are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;from 2.1.x to 2.2.x&lt;/li&gt; &#xA; &lt;li&gt;from 2.2.x to 2.3.x and so on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For supported upgrade paths, the data and schema are migrated automatically when SFTPGo starts, alternatively you can use the &lt;code&gt;initprovider&lt;/code&gt; command before starting SFTPGo.&lt;/p&gt; &#xA;&lt;p&gt;So if, for example, you want to upgrade from 2.0.x to 2.2.x, you must first install version 2.1.x, update the data provider (automatically, by starting SFTPGo or manually using the &lt;code&gt;initprovider&lt;/code&gt; command) and finally install the version 2.2.x. It is recommended to always install the latest available minor version, ie do not install 2.1.0 if 2.1.2 is available.&lt;/p&gt; &#xA;&lt;p&gt;Loading data from a provider independent JSON dump is supported from the previous release branch to the current one too. After upgrading SFTPGo it is advisable to regenerate the JSON dump from the new version.&lt;/p&gt; &#xA;&lt;h2&gt;Downgrading&lt;/h2&gt; &#xA;&lt;p&gt;If for some reason you want to downgrade SFTPGo, you may need to downgrade your data provider schema and data as well. You can use the &lt;code&gt;revertprovider&lt;/code&gt; command for this task.&lt;/p&gt; &#xA;&lt;p&gt;As for upgrading, SFTPGo supports downgrading from the previous release branch to the current one.&lt;/p&gt; &#xA;&lt;p&gt;So, if you plan to downgrade from 2.3.x to 2.2.x, before uninstalling 2.3.x version, you can prepare your data provider executing the following command from the configuration directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sftpgo revertprovider&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at the CLI usage to learn how to specify a configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sftpgo revertprovider --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;revertprovider&lt;/code&gt; command is not supported for the memory provider.&lt;/p&gt; &#xA;&lt;p&gt;Please note that we only support the current release branch and the current main branch, if you find a bug it is better to report it rather than downgrading to an older unsupported version.&lt;/p&gt; &#xA;&lt;h2&gt;Users, groups, folders and other resource management&lt;/h2&gt; &#xA;&lt;p&gt;After starting SFTPGo you can manage users, groups, folders and other resources using:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/web-admin.md&#34;&gt;WebAdmin UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/rest-api.md&#34;&gt;REST API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To support embedded data providers like &lt;code&gt;bolt&lt;/code&gt; and &lt;code&gt;SQLite&lt;/code&gt;, which do not support concurrent connections, we can&#39;t have a CLI that directly write users and other resources to the data provider, we always have to use the REST API.&lt;/p&gt; &#xA;&lt;p&gt;Full details for users, groups, folders, admins and other resources are documented in the &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/openapi/openapi.yaml&#34;&gt;OpenAPI&lt;/a&gt; schema. If you want to render the schema without importing it manually, you can explore it on &lt;a href=&#34;https://sftpgo.stoplight.io/docs/sftpgo/openapi.yaml&#34;&gt;Stoplight&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; SFTPGo users, groups and folders are virtual and therefore unrelated to the system ones. There is no need to create system-wide users and groups.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;Some step-to-step tutorials can be found inside the source tree &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/howto&#34; title=&#34;How-to&#34;&gt;howto&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Authentication options&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt; External Authentication&lt;/summary&gt; &#xA; &lt;p&gt;Custom authentication methods can easily be added. SFTPGo supports external authentication modules, and writing a new backend can be as simple as a few lines of shell script. More information can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/external-auth.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt; Keyboard Interactive Authentication&lt;/summary&gt; &#xA; &lt;p&gt;Keyboard interactive authentication is, in general, a series of questions asked by the server with responses provided by the client. This authentication method is typically used for multi-factor authentication.&lt;/p&gt; &#xA; &lt;p&gt;More information can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/keyboard-interactive.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Dynamic user creation or modification&lt;/h2&gt; &#xA;&lt;p&gt;A user can be created or modified by an external program just before the login. More information about this can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/dynamic-user-mod.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Actions&lt;/h2&gt; &#xA;&lt;p&gt;SFTPGo allows you to configure custom commands and/or HTTP hooks to receive notifications about file uploads, deletions and several other events.&lt;/p&gt; &#xA;&lt;p&gt;More information about custom actions can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/custom-actions.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Virtual folders&lt;/h2&gt; &#xA;&lt;p&gt;Directories outside the user home directory or based on a different storage provider can be mapped as virtual folders, more information &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/virtual-folders.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other hooks&lt;/h2&gt; &#xA;&lt;p&gt;You can get notified as soon as a new connection is established using the &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/post-connect-hook.md&#34;&gt;Post-connect hook&lt;/a&gt; and after each login using the &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/post-login-hook.md&#34;&gt;Post-login hook&lt;/a&gt;. You can use your own hook to &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/check-password-hook.md&#34;&gt;check passwords&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Storage backends&lt;/h2&gt; &#xA;&lt;h3&gt;S3/GCP/Azure&lt;/h3&gt; &#xA;&lt;p&gt;Each user can be mapped with a &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/s3.md&#34;&gt;S3 Compatible Object Storage&lt;/a&gt; /&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/google-cloud-storage.md&#34;&gt;Google Cloud Storage&lt;/a&gt;/&lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/azure-blob-storage.md&#34;&gt;Azure Blob Storage&lt;/a&gt; bucket or a bucket virtual folder.&lt;/p&gt; &#xA;&lt;h3&gt;SFTP backend&lt;/h3&gt; &#xA;&lt;p&gt;Each user can be mapped to another SFTP server account or a subfolder of it. More information can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/sftpfs.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Encrypted backend&lt;/h3&gt; &#xA;&lt;p&gt;Data at-rest encryption is supported via the &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/dare.md&#34;&gt;cryptfs backend&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;HTTP/S backend&lt;/h3&gt; &#xA;&lt;p&gt;HTTP/S backend allows you to write your own custom storage backend by implementing a REST API. More information can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/httpfs.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other Storage backends&lt;/h3&gt; &#xA;&lt;p&gt;Adding new storage backends is quite easy:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;implement the &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/internal/vfs/vfs.go#L86&#34; title=&#34;interface for filesystem backends&#34;&gt;Fs interface&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;update the user method &lt;code&gt;GetFilesystem&lt;/code&gt; to return the new backend&lt;/li&gt; &#xA; &lt;li&gt;update the web interface and the REST API CLI&lt;/li&gt; &#xA; &lt;li&gt;add the flags for the new storage backed to the &lt;code&gt;portable&lt;/code&gt; mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Anyway, some backends require a pay per-use account (or they offer free account for a limited time period only). To be able to add support for such backends or to review pull requests, please provide a test account. The test account must be available for enough time to be able to maintain the backend and do basic tests before each new release.&lt;/p&gt; &#xA;&lt;h2&gt;Brute force protection&lt;/h2&gt; &#xA;&lt;p&gt;SFTPGo supports a built-in &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/defender.md&#34;&gt;defender&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternately you can use the &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/logs.md&#34;&gt;connection failed logs&lt;/a&gt; for integration in tools such as &lt;a href=&#34;http://www.fail2ban.org/&#34;&gt;Fail2ban&lt;/a&gt;. Example of &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/fail2ban/jails&#34;&gt;jails&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/fail2ban/filters&#34;&gt;filters&lt;/a&gt; working with &lt;code&gt;systemd&lt;/code&gt;/&lt;code&gt;journald&lt;/code&gt; are available in fail2ban directory.&lt;/p&gt; &#xA;&lt;h2&gt;Account&#39;s configuration properties&lt;/h2&gt; &#xA;&lt;p&gt;Details information about account configuration properties can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/account.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;SFTPGo can easily saturate a Gigabit connection on low end hardware with no special configuration, this is generally enough for most use cases.&lt;/p&gt; &#xA;&lt;p&gt;More in-depth analysis of performance can be found &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/docs/performance.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Release Cadence&lt;/h2&gt; &#xA;&lt;p&gt;SFTPGo releases are feature-driven, we don&#39;t have a fixed time based schedule. As a rough estimate, you can expect 1 or 2 new releases per year.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;SFTPGo makes use of the third party libraries listed inside &lt;a href=&#34;https://raw.githubusercontent.com/drakkan/sftpgo/main/go.mod&#34;&gt;go.mod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We are very grateful to all the people who contributed with ideas and/or pull requests.&lt;/p&gt; &#xA;&lt;p&gt;Thank you &lt;a href=&#34;https://www.ysura.com/&#34;&gt;ysura&lt;/a&gt; for granting me stable access to a test AWS S3 account.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GNU AGPL-3.0-only&lt;/p&gt;</summary>
  </entry>
</feed>