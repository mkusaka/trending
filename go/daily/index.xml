<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-01T01:31:20Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>redpanda-data/connect</title>
    <updated>2024-06-01T01:31:20Z</updated>
    <id>tag:github.com,2024-06-01:/redpanda-data/connect</id>
    <link href="https://github.com/redpanda-data/connect" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fancy stream processing made operationally mundane&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Redpanda Connect&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/redpanda-data/benthos/v4/public&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/redpanda-data/benthos/v4/public&#34; alt=&#34;godoc for redpanda-data/connect&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/redpanda-data/connect/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/redpanda-data/connect/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Redpanda Connect is a high performance and resilient stream processor, able to connect various &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/inputs/about&#34;&gt;sources&lt;/a&gt; and &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/outputs/about&#34;&gt;sinks&lt;/a&gt; in a range of brokering patterns and perform &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/processors/about&#34;&gt;hydration, enrichments, transformations and filters&lt;/a&gt; on payloads.&lt;/p&gt; &#xA;&lt;p&gt;It comes with a &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/guides/bloblang/about&#34;&gt;powerful mapping language&lt;/a&gt;, is easy to deploy and monitor, and ready to drop into your pipeline either as a static binary or docker image, making it cloud native as heck.&lt;/p&gt; &#xA;&lt;p&gt;Redpanda Connect is declarative, with stream pipelines defined in as few as a single config file, allowing you to specify connectors and a list of processing stages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;input:&#xA;  gcp_pubsub:&#xA;    project: foo&#xA;    subscription: bar&#xA;&#xA;pipeline:&#xA;  processors:&#xA;    - mapping: |&#xA;        root.message = this&#xA;        root.meta.link_count = this.links.length()&#xA;        root.user.age = this.user.age.number()&#xA;&#xA;output:&#xA;  redis_streams:&#xA;    url: tcp://TODO:6379&#xA;    stream: baz&#xA;    max_in_flight: 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delivery Guarantees&lt;/h3&gt; &#xA;&lt;p&gt;Delivery guarantees &lt;a href=&#34;https://youtu.be/QmpBOCvY8mY&#34;&gt;can be a dodgy subject&lt;/a&gt;. Redpanda Connect processes and acknowledges messages using an in-process transaction model with no need for any disk persisted state, so when connecting to at-least-once sources and sinks it&#39;s able to guarantee at-least-once delivery even in the event of crashes, disk corruption, or other unexpected server faults.&lt;/p&gt; &#xA;&lt;p&gt;This behaviour is the default and free of caveats, which also makes deploying and scaling Redpanda Connect much simpler.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Sources &amp;amp; Sinks&lt;/h2&gt; &#xA;&lt;p&gt;AWS (DynamoDB, Kinesis, S3, SQS, SNS), Azure (Blob storage, Queue storage, Table storage), GCP (Pub/Sub, Cloud storage, Big query), Kafka, NATS (JetStream, Streaming), NSQ, MQTT, AMQP 0.91 (RabbitMQ), AMQP 1, Redis (streams, list, pubsub, hashes), Cassandra, Elasticsearch, HDFS, HTTP (server and client, including websockets), MongoDB, SQL (MySQL, PostgreSQL, Clickhouse, MSSQL), and &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/about#components&#34;&gt;you know what just click here to see them all, they don&#39;t fit in a README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;If you want to dive fully into Redpanda Connect then don&#39;t waste your time in this dump, check out the &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/about&#34;&gt;documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For guidance on building your own custom plugins in Go check out &lt;a href=&#34;https://pkg.go.dev/github.com/redpanda-data/benthos/v4/public&#34;&gt;the public APIs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Install on Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -LO https://github.com/redpanda-data/redpanda/releases/latest/download/rpk-linux-amd64.zip&#xA;unzip rpk-linux-amd64.zip -d ~/.local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install redpanda-data/tap/redpanda&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or pull the docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull docker.redpanda.com/redpandadata/redpanda&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information check out the &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/guides/getting_started&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;rpk connect run ./config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, with docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Using a config file&#xA;docker run --rm -v /path/to/your/config.yaml:/connect.yaml docker.redpanda.com/redpandadata/redpanda connect run&#xA;&#xA;# Using a series of -s flags&#xA;docker run --rm -p 4195:4195 docker.redpanda.com/redpandadata/redpanda connect run \&#xA;  -s &#34;input.type=http_server&#34; \&#xA;  -s &#34;output.type=kafka&#34; \&#xA;  -s &#34;output.kafka.addresses=kafka-server:9092&#34; \&#xA;  -s &#34;output.kafka.topic=redpanda_topic&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;h3&gt;Health Checks&lt;/h3&gt; &#xA;&lt;p&gt;Redpanda Connect serves two HTTP endpoints for health checks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/ping&lt;/code&gt; can be used as a liveness probe as it always returns a 200.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/ready&lt;/code&gt; can be used as a readiness probe as it serves a 200 only when both the input and output are connected, otherwise a 503 is returned.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Metrics&lt;/h3&gt; &#xA;&lt;p&gt;Redpanda Connect &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/metrics/about&#34;&gt;exposes lots of metrics&lt;/a&gt; either to Statsd, Prometheus, a JSON HTTP endpoint, &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/metrics/about&#34;&gt;and more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tracing&lt;/h3&gt; &#xA;&lt;p&gt;Redpanda Connect also &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/tracers/about&#34;&gt;emits open telemetry tracing events&lt;/a&gt;, which can be used to visualise the processors within a pipeline.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Redpanda Connect provides lots of tools for making configuration discovery, debugging and organisation easy. You can &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/configuration/about&#34;&gt;read about them here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;Build with Go (any &lt;a href=&#34;https://go.dev/dl/&#34;&gt;currently supported version&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone git@github.com:redpanda-data/connect&#xA;cd connect&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Lint&lt;/h2&gt; &#xA;&lt;p&gt;Redpanda Connect uses &lt;a href=&#34;https://golangci-lint.run/&#34;&gt;golangci-lint&lt;/a&gt; for linting, which you can install with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then run it with &lt;code&gt;make lint&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s pretty easy to write your own custom plugins for Redpanda Connect in Go, for information check out &lt;a href=&#34;https://pkg.go.dev/github.com/redpanda-data/benthos/v4/public&#34;&gt;the API docs&lt;/a&gt;, and for inspiration there&#39;s an &lt;a href=&#34;https://github.com/benthosdev/benthos-plugin-example&#34;&gt;example repo&lt;/a&gt; demonstrating a variety of plugin implementations.&lt;/p&gt; &#xA;&lt;h2&gt;Extra Plugins&lt;/h2&gt; &#xA;&lt;p&gt;By default Redpanda Connect does not build with components that require linking to external libraries, such as the &lt;code&gt;zmq4&lt;/code&gt; input and outputs. If you wish to build Redpanda Connect locally with these dependencies then set the build tag &lt;code&gt;x_benthos_extra&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# With go&#xA;go install -tags &#34;x_benthos_extra&#34; github.com/redpanda-data/connect/v4/cmd/redpanda-connect@latest&#xA;&#xA;# Using make&#xA;make TAGS=x_benthos_extra&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this tag may change or be broken out into granular tags for individual components outside of major version releases. If you attempt a build and these dependencies are not present you&#39;ll see error messages such as &lt;code&gt;ld: library not found for -lzmq&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Builds&lt;/h2&gt; &#xA;&lt;p&gt;There&#39;s a multi-stage &lt;code&gt;Dockerfile&lt;/code&gt; for creating a Redpanda Connect docker image which results in a minimal image from scratch. You can build it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm \&#xA;&#x9;-v /path/to/your/benthos.yaml:/config.yaml \&#xA;&#x9;-v /tmp/data:/data \&#xA;&#x9;-p 4195:4195 \&#xA;&#x9;redpanda-connect -c /config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome, please &lt;a href=&#34;https://raw.githubusercontent.com/redpanda-data/connect/main/CONTRIBUTING.md&#34;&gt;read the guidelines&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>