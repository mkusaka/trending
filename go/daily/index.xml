<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-07T01:40:55Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>acorn-io/acorn</title>
    <updated>2022-08-07T01:40:55Z</updated>
    <id>tag:github.com,2022-08-07:/acorn-io/acorn</id>
    <link href="https://github.com/acorn-io/acorn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple application deployment framework for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Acorn&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/acorn-io/acorn/actions/workflows/main-release.yaml/badge.svg?sanitize=true&#34; alt=&#34;main-release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A simple application delpoyment framework for Kubernetes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;One artifact across dev, test, and production&lt;/li&gt; &#xA; &lt;li&gt;Simple CLI and powerful API&lt;/li&gt; &#xA; &lt;li&gt;Runs on any Kubernetes cluster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;span&gt;📝&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Acorn is a work in progress. Features will evolve over time and there may be breaking changes between releases. Please give us your feedback in Slack, Discussions, or Issues!&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;span&gt;❗&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Caution: Consuming this project can expose you to chemicals, which are known to the State of California to cause cancer and birth defects or other reproductive harm.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acorn-io/acorn/releases&#34;&gt;Downloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.acorn.io&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.acorn.io&#34;&gt;Community Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acorn-io/acorn/discussions&#34;&gt;Discussions Forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2022 &lt;a href=&#34;http://acorn.io&#34;&gt;Acorn Labs, Inc.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hashicorp/terraform-provider-azurerm</title>
    <updated>2022-08-07T01:40:55Z</updated>
    <id>tag:github.com,2022-08-07:/hashicorp/terraform-provider-azurerm</id>
    <link href="https://github.com/hashicorp/terraform-provider-azurerm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Terraform provider for Azure Resource Manager&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://terraform.io&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/main/.github/tf.png&#34; alt=&#34;Terraform logo&#34; title=&#34;Terraform&#34; align=&#34;left&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Terraform Provider for Azure (Resource Manager)&lt;/h1&gt; &#xA;&lt;p&gt;The AzureRM Terraform Provider allows managing resources within Azure Resource Manager.&lt;/p&gt; &#xA;&lt;p&gt;When using version 3.0 of the AzureRM Provider we recommend using Terraform 1.x (&lt;a href=&#34;https://www.terraform.io/downloads&#34;&gt;the latest version can be found here&lt;/a&gt;). Whilst older versions of Terraform Core (0.12.x and later) remain compatible with v3.0 of the AzureRM Provider - support for versions prior to 1.0 will be removed in the next major release of the AzureRM Provider (v4.0).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.terraform.io&#34;&gt;Terraform Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs&#34;&gt;AzureRM Provider Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples&#34;&gt;AzureRM Provider Usage Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terraform-azure.slack.com&#34;&gt;Slack Workspace for Contributors&lt;/a&gt; (&lt;a href=&#34;https://join.slack.com/t/terraform-azure/shared_invite/enQtNDMzNjQ5NzcxMDc3LWNiY2ZhNThhNDgzNmY0MTM0N2MwZjE4ZGU0MjcxYjUyMzRmN2E5NjZhZmQ0ZTA1OTExMGNjYzA4ZDkwZDYxNDE&#34;&gt;Request Invite&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;# 1. Specify the version of the AzureRM Provider to use&#xA;terraform {&#xA;  required_providers {&#xA;    azurerm = {&#xA;      source = &#34;hashicorp/azurerm&#34;&#xA;      version = &#34;=3.0.1&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;# 2. Configure the AzureRM Provider&#xA;provider &#34;azurerm&#34; {&#xA;  # The AzureRM Provider supports authenticating using via the Azure CLI, a Managed Identity&#xA;  # and a Service Principal. More information on the authentication methods supported by&#xA;  # the AzureRM Provider can be found here:&#xA;  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs#authenticating-to-azure&#xA;&#xA;  # The features block allows changing the behaviour of the Azure Provider, more&#xA;  # information can be found here:&#xA;  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/features-block&#xA;  features {}&#xA;}&#xA;&#xA;# 3. Create a resource group&#xA;resource &#34;azurerm_resource_group&#34; &#34;example&#34; {&#xA;  name     = &#34;example-resources&#34;&#xA;  location = &#34;West Europe&#34;&#xA;}&#xA;&#xA;# 4. Create a virtual network within the resource group&#xA;resource &#34;azurerm_virtual_network&#34; &#34;example&#34; {&#xA;  name                = &#34;example-network&#34;&#xA;  resource_group_name = azurerm_resource_group.example.name&#xA;  location            = azurerm_resource_group.example.location&#xA;  address_space       = [&#34;10.0.0.0/16&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs&#34;&gt;Usage documentation for the AzureRM Provider can be found in the Terraform Registry&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.hashicorp.com/collections/terraform/azure-get-started&#34;&gt;Learn more about Terraform and the AzureRM Provider on HashiCorp Learn&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples&#34;&gt;Additional examples can be found in the &lt;code&gt;./examples&lt;/code&gt; folder within this repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing &amp;amp; Contributing to the Provider&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/main/DEVELOPER.md&#34;&gt;DEVELOPER.md&lt;/a&gt; file is a basic outline on how to build and develop the provider while more detailed guides geared towards contributors can be found in the [&lt;code&gt;/contributing&lt;/code&gt;] (&lt;a href=&#34;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/contributing&#34;&gt;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/contributing&lt;/a&gt;) directory of this repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>geektutu/7days-golang</title>
    <updated>2022-08-07T01:40:55Z</updated>
    <id>tag:github.com,2022-08-07:/geektutu/7days-golang</id>
    <link href="https://github.com/geektutu/7days-golang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;7 days golang programs from scratch (web framework Gee, distributed cache GeeCache, object relational mapping ORM framework GeeORM, rpc framework GeeRPC etc) 7天用Go动手写/从零实现系列&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;7 days golang programs from scratch&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/geektutu/7days-golang&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/code-size/geektutu/7days-golang&#34; alt=&#34;CodeSize&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mit-license.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;README 中文版本&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;div&gt; &#xA;  &lt;h2&gt;7天用Go从零实现系列&lt;/h2&gt; &#xA;  &lt;p&gt;7天能写什么呢？类似 gin 的 web 框架？类似 groupcache 的分布式缓存？或者一个简单的 Python 解释器？希望这个仓库能给你答案。&lt;/p&gt; &#xA;  &lt;p&gt;推荐先阅读 &lt;strong&gt;&lt;a href=&#34;https://geektutu.com/post/quick-golang.html&#34;&gt;Go 语言简明教程&lt;/a&gt;&lt;/strong&gt;，一篇文章了解Go的基本语法、并发编程，依赖管理等内容。&lt;/p&gt; &#xA;  &lt;p&gt;推荐 &lt;strong&gt;&lt;a href=&#34;https://geektutu.com/post/qa-golang.html&#34;&gt;Go 语言笔试面试题&lt;/a&gt;&lt;/strong&gt;，加深对 Go 语言的理解。&lt;/p&gt; &#xA;  &lt;p&gt;推荐 &lt;strong&gt;&lt;a href=&#34;https://geektutu.com/post/high-performance-go.html&#34;&gt;Go 语言高性能编程&lt;/a&gt;&lt;/strong&gt;(&lt;a href=&#34;https://github.com/geektutu/high-performance-go&#34;&gt;项目地址&lt;/a&gt;)，写出高性能的 Go 代码。&lt;/p&gt; &#xA;  &lt;p&gt;期待关注我的「&lt;a href=&#34;https://zhuanlan.zhihu.com/geekgo&#34;&gt;知乎专栏&lt;/a&gt;」和「&lt;a href=&#34;http://weibo.com/geektutu&#34;&gt;微博&lt;/a&gt;」，查看最近的文章和动态。&lt;/p&gt; &#xA;  &lt;h3&gt;7天用Go从零实现Web框架 - Gee&lt;/h3&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/gee.html&#34;&gt;Gee&lt;/a&gt; 是一个模仿 &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;gin&lt;/a&gt; 实现的 Web 框架，&lt;a href=&#34;https://geektutu.com/post/quick-go-gin.html&#34;&gt;Go Gin简明教程&lt;/a&gt;可以快速入门。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;第一天：&lt;a href=&#34;https://geektutu.com/post/gee-day1.html&#34;&gt;前置知识(http.Handler接口)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day1-http-base&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第二天：&lt;a href=&#34;https://geektutu.com/post/gee-day2.html&#34;&gt;上下文设计(Context)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day2-context&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第三天：&lt;a href=&#34;https://geektutu.com/post/gee-day3.html&#34;&gt;Trie树路由(Router)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day3-router&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第四天：&lt;a href=&#34;https://geektutu.com/post/gee-day4.html&#34;&gt;分组控制(Group)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day4-group&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第五天：&lt;a href=&#34;https://geektutu.com/post/gee-day5.html&#34;&gt;中间件(Middleware)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day5-middleware&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第六天：&lt;a href=&#34;https://geektutu.com/post/gee-day6.html&#34;&gt;HTML模板(Template)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day6-template&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第七天：&lt;a href=&#34;https://geektutu.com/post/gee-day7.html&#34;&gt;错误恢复(Panic Recover)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day7-panic-recover&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;h3&gt;7天用Go从零实现分布式缓存 GeeCache&lt;/h3&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/geecache.html&#34;&gt;GeeCache&lt;/a&gt; 是一个模仿 &lt;a href=&#34;https://github.com/golang/groupcache&#34;&gt;groupcache&lt;/a&gt; 实现的分布式缓存系统&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;第一天：&lt;a href=&#34;https://geektutu.com/post/geecache-day1.html&#34;&gt;LRU 缓存淘汰策略&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day1-lru&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第二天：&lt;a href=&#34;https://geektutu.com/post/geecache-day2.html&#34;&gt;单机并发缓存&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day2-single-node&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第三天：&lt;a href=&#34;https://geektutu.com/post/geecache-day3.html&#34;&gt;HTTP 服务端&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day3-http-server&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第四天：&lt;a href=&#34;https://geektutu.com/post/geecache-day4.html&#34;&gt;一致性哈希(Hash)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day4-consistent-hash&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第五天：&lt;a href=&#34;https://geektutu.com/post/geecache-day5.html&#34;&gt;分布式节点&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day5-multi-nodes&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第六天：&lt;a href=&#34;https://geektutu.com/post/geecache-day6.html&#34;&gt;防止缓存击穿&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day6-single-flight&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第七天：&lt;a href=&#34;https://geektutu.com/post/geecache-day7.html&#34;&gt;使用 Protobuf 通信&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day7-proto-buf&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;h3&gt;7天用Go从零实现ORM框架 GeeORM&lt;/h3&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/geeorm.html&#34;&gt;GeeORM&lt;/a&gt; 是一个模仿 &lt;a href=&#34;https://github.com/jinzhu/gorm&#34;&gt;gorm&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/go-xorm/xorm&#34;&gt;xorm&lt;/a&gt; 的 ORM 框架&lt;/p&gt; &#xA;  &lt;p&gt;gorm 准备推出完全重写的 v2 版本(目前还在开发中)，相对 gorm-v1 来说，xorm 的设计更容易理解，所以 geeorm 接口设计上主要参考了 xorm，一些细节实现上参考了 gorm。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;第一天：&lt;a href=&#34;https://geektutu.com/post/geeorm-day1.html&#34;&gt;database/sql 基础&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day1-database-sql&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第二天：&lt;a href=&#34;https://geektutu.com/post/geeorm-day2.html&#34;&gt;对象表结构映射&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day2-reflect-schema&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第三天：&lt;a href=&#34;https://geektutu.com/post/geeorm-day3.html&#34;&gt;记录新增和查询&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day3-save-query&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第四天：&lt;a href=&#34;https://geektutu.com/post/geeorm-day4.html&#34;&gt;链式操作与更新删除&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day4-chain-operation&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第五天：&lt;a href=&#34;https://geektutu.com/post/geeorm-day5.html&#34;&gt;实现钩子(Hooks)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day5-hooks&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第六天：&lt;a href=&#34;https://geektutu.com/post/geeorm-day6.html&#34;&gt;支持事务(Transaction)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day6-transaction&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第七天：&lt;a href=&#34;https://geektutu.com/post/geeorm-day7.html&#34;&gt;数据库迁移(Migrate)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day7-migrate&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;h3&gt;7天用Go从零实现RPC框架 GeeRPC&lt;/h3&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/geerpc.html&#34;&gt;GeeRPC&lt;/a&gt; 是一个基于 &lt;a href=&#34;https://github.com/golang/go/tree/master/src/net/rpc&#34;&gt;net/rpc&lt;/a&gt; 开发的 RPC 框架 GeeRPC 是基于 Go 语言标准库 &lt;code&gt;net/rpc&lt;/code&gt; 实现的，添加了协议交换、服务注册与发现、负载均衡等功能，代码约 1k。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;第一天 - &lt;a href=&#34;https://geektutu.com/post/geerpc-day1.html&#34;&gt;服务端与消息编码&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day1-codec&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第二天 - &lt;a href=&#34;https://geektutu.com/post/geerpc-day2.html&#34;&gt;支持并发与异步的客户端&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day2-client&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第三天 - &lt;a href=&#34;https://geektutu.com/post/geerpc-day3.html&#34;&gt;服务注册(service register)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day3-service&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第四天 - &lt;a href=&#34;https://geektutu.com/post/geerpc-day4.html&#34;&gt;超时处理(timeout)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day4-timeout&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第五天 - &lt;a href=&#34;https://geektutu.com/post/geerpc-day5.html&#34;&gt;支持HTTP协议&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day5-http-debug&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第六天 - &lt;a href=&#34;https://geektutu.com/post/geerpc-day6.html&#34;&gt;负载均衡(load balance)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day6-load-balance&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;第七天 - &lt;a href=&#34;https://geektutu.com/post/geerpc-day7.html&#34;&gt;服务发现与注册中心(registry)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day7-registry&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;h3&gt;WebAssembly 使用示例&lt;/h3&gt; &#xA;  &lt;p&gt;具体的实践过程记录在 &lt;a href=&#34;https://geektutu.com/post/quick-go-wasm.html&#34;&gt;Go WebAssembly 简明教程&lt;/a&gt;。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;示例一：Hello World | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/demo-wasm/hello-world&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;示例二：注册函数 | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/demo-wasm/register-functions&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;示例三：操作 DOM | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/demo-wasm/manipulate-dom&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;示例四：回调函数 | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/demo-wasm/callback&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;What can be accomplished in 7 days? A gin-like web framework? A distributed cache like groupcache? Or a simple Python interpreter? Hope this repo can give you the answer.&lt;/p&gt; &#xA;&lt;h2&gt;Web Framework - Gee&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/gee.html&#34;&gt;Gee&lt;/a&gt; is a &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;gin&lt;/a&gt;-like framework&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Day 1 - http.Handler Interface Basic &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day1-http-base&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 2 - Design a Flexiable Context &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day2-context&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 3 - Router with Trie-Tree Algorithm &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day3-router&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 4 - Group Control &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day4-group&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 5 - Middleware Mechanism &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day5-middleware&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 6 - Embeded Template Support &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day6-template&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 7 - Panic Recover &amp;amp; Make it Robust &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-web/day7-panic-recover&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Distributed Cache - GeeCache&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/geecache.html&#34;&gt;GeeCache&lt;/a&gt; is a &lt;a href=&#34;https://github.com/golang/groupcache&#34;&gt;groupcache&lt;/a&gt;-like distributed cache&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Day 1 - LRU (Least Recently Used) Caching Strategy &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day1-lru&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 2 - Single Machine Concurrent Cache &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day2-single-node&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 3 - Launch a HTTP Server &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day3-http-server&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 4 - Consistent Hash Algorithm &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day4-consistent-hash&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 5 - Communication between Distributed Nodes &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day5-multi-nodes&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 6 - Cache Breakdown &amp;amp; Single Flight | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day6-single-flight&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 7 - Use Protobuf as RPC Data Exchange Type | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-cache/day7-proto-buf&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Object Relational Mapping - GeeORM&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/geeorm.html&#34;&gt;GeeORM&lt;/a&gt; is a &lt;a href=&#34;https://github.com/jinzhu/gorm&#34;&gt;gorm&lt;/a&gt;-like and &lt;a href=&#34;https://github.com/go-xorm/xorm&#34;&gt;xorm&lt;/a&gt;-like object relational mapping library&lt;/p&gt; &#xA;&lt;p&gt;Xorm&#39;s desgin is easier to understand than gorm-v1, so the main designs references xorm and some detailed implementions references gorm-v1.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Day 1 - database/sql Basic | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day1-database-sql&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 2 - Object Schame Mapping | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day2-reflect-schema&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 3 - Insert and Query | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day3-save-query&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 4 - Chain, Delete and Update | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day4-chain-operation&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 5 - Support Hooks | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day5-hooks&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 6 - Support Transaction | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day6-transaction&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 7 - Migrate Database | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-orm/day7-migrate&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RPC Framework - GeeRPC&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/geerpc.html&#34;&gt;GeeRPC&lt;/a&gt; is a &lt;a href=&#34;https://github.com/golang/go/tree/master/src/net/rpc&#34;&gt;net/rpc&lt;/a&gt;-like RPC framework&lt;/p&gt; &#xA;&lt;p&gt;Based on golang standard library &lt;code&gt;net/rpc&lt;/code&gt;, GeeRPC implements more features. eg, protocol exchange, service registration and discovery, load balance, etc.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Day 1 - Server Message Codec | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day1-codec&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 2 - Concurrent Client | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day2-client&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 3 - Service Register | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day3-service&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 4 - Timeout Processing | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day4-timeout&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 5 - Support HTTP Protocol | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day5-http-debug&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 6 - Load Balance | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day6-load-balance&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Day 7 - Discovery and Registry | &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/gee-rpc/day7-registry&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Golang WebAssembly Demo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Demo 1 - Hello World &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/demo-wasm/hello-world&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Demo 2 - Register Functions &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/demo-wasm/register-functions&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Demo 3 - Manipulate DOM &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/demo-wasm/manipulate-dom&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Demo 4 - Callback &lt;a href=&#34;https://raw.githubusercontent.com/geektutu/7days-golang/master/demo-wasm/callback&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>