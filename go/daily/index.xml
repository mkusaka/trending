<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-25T01:31:10Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lc/gau</title>
    <updated>2023-12-25T01:31:10Z</updated>
    <id>tag:github.com,2023-12-25:/lc/gau</id>
    <link href="https://github.com/lc/gau" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fetch known URLs from AlienVault&#39;s Open Threat Exchange, the Wayback Machine, and Common Crawl.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;getallurls (gau)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-_red.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;getallurls (gau) fetches known URLs from AlienVault&#39;s &lt;a href=&#34;https://otx.alienvault.com&#34;&gt;Open Threat Exchange&lt;/a&gt;, the Wayback Machine, Common Crawl, and URLScan for any given domain. Inspired by Tomnomnom&#39;s &lt;a href=&#34;https://github.com/tomnomnom/waybackurls&#34;&gt;waybackurls&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lc/gau/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lc/gau/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lc/gau/master/#ohmyzsh-note&#34;&gt;ohmyzsh note&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage:&lt;/h2&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ printf example.com | gau&#xA;$ cat domains.txt | gau --threads 5&#xA;$ gau example.com google.com&#xA;$ gau --o example-urls.txt example.com&#xA;$ gau --blacklist png,jpg,gif example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To display the help for the tool use the &lt;code&gt;-h&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gau -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Flag&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--blacklist&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;list of extensions to skip&lt;/td&gt; &#xA;   &lt;td&gt;gau --blacklist ttf,woff,svg,png&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--fc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;list of status codes to filter&lt;/td&gt; &#xA;   &lt;td&gt;gau --fc 404,302&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--from&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fetch urls from date (format: YYYYMM)&lt;/td&gt; &#xA;   &lt;td&gt;gau --from 202101&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--ft&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;list of mime-types to filter&lt;/td&gt; &#xA;   &lt;td&gt;gau --ft text/plain&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--fp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove different parameters of the same endpoint&lt;/td&gt; &#xA;   &lt;td&gt;gau --fp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;output as json&lt;/td&gt; &#xA;   &lt;td&gt;gau --json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--mc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;list of status codes to match&lt;/td&gt; &#xA;   &lt;td&gt;gau --mc 200,500&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--mt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;list of mime-types to match&lt;/td&gt; &#xA;   &lt;td&gt;gau --mt text/html,application/json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--o&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;filename to write results to&lt;/td&gt; &#xA;   &lt;td&gt;gau --o out.txt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--providers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;list of providers to use (wayback,commoncrawl,otx,urlscan)&lt;/td&gt; &#xA;   &lt;td&gt;gau --providers wayback&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--proxy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;http proxy to use (socks5:// or http://&lt;/td&gt; &#xA;   &lt;td&gt;gau --proxy &lt;a href=&#34;http://proxy.example.com:8080&#34;&gt;http://proxy.example.com:8080&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--retries&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;retries for HTTP client&lt;/td&gt; &#xA;   &lt;td&gt;gau --retries 10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--timeout&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;timeout (in seconds) for HTTP client&lt;/td&gt; &#xA;   &lt;td&gt;gau --timeout 60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--subs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;include subdomains of target domain&lt;/td&gt; &#xA;   &lt;td&gt;gau example.com --subs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--threads&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number of workers to spawn&lt;/td&gt; &#xA;   &lt;td&gt;gau example.com --threads&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--to&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fetch urls to date (format: YYYYMM)&lt;/td&gt; &#xA;   &lt;td&gt;gau example.com --to 202101&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;show verbose output&lt;/td&gt; &#xA;   &lt;td&gt;gau --verbose example.com&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--version&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;show gau version&lt;/td&gt; &#xA;   &lt;td&gt;gau --version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Configuration Files&lt;/h2&gt; &#xA;&lt;p&gt;gau automatically looks for a configuration file at &lt;code&gt;$HOME/.gau.toml&lt;/code&gt; or&lt;code&gt;%USERPROFILE%\.gau.toml&lt;/code&gt;. You can specify options and they will be used for every subsequent run of gau. Any options provided via command line flags will override options set in the configuration file.&lt;/p&gt; &#xA;&lt;p&gt;An example configuration file can be found &lt;a href=&#34;https://github.com/lc/gau/raw/master/.gau.toml&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;h3&gt;From source:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ go install github.com/lc/gau/v2/cmd/gau@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From github :&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/lc/gau.git; \&#xA;cd gau/cmd; \&#xA;go build; \&#xA;sudo mv gau /usr/local/bin/; \&#xA;gau --version;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From binary:&lt;/h3&gt; &#xA;&lt;p&gt;You can download the pre-built binaries from the &lt;a href=&#34;https://github.com/lc/gau/releases/&#34;&gt;releases&lt;/a&gt; page and then move them into your $PATH.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ tar xvf gau_2.0.6_linux_amd64.tar.gz&#xA;$ mv gau /usr/bin/gau&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From Docker:&lt;/h3&gt; &#xA;&lt;p&gt;You can run gau via docker like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm sxcurity/gau:latest --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also build a docker image with the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t gau .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then run it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run gau example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bear in mind that piping command (echo &#34;example.com&#34; | gau) will not work with the docker container&lt;/p&gt; &#xA;&lt;h2&gt;ohmyzsh note:&lt;/h2&gt; &#xA;&lt;p&gt;ohmyzsh&#39;s &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git&#34;&gt;git plugin&lt;/a&gt; has an alias which maps &lt;code&gt;gau&lt;/code&gt; to the &lt;code&gt;git add --update&lt;/code&gt; command. This is problematic, causing a binary conflict between this tool &#34;gau&#34; and the zsh plugin alias &#34;gau&#34; (&lt;code&gt;git add --update&lt;/code&gt;). There is currently a few workarounds which can be found in this Github &lt;a href=&#34;https://github.com/lc/gau/issues/8&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Useful?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://buymeacoff.ee/cdl&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://commoncrawl.org/donate/&#34;&gt;Donate to CommonCrawl&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://archive.org/donate&#34;&gt;Donate to the InternetArchive&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ArtalkJS/Artalk</title>
    <updated>2023-12-25T01:31:10Z</updated>
    <id>tag:github.com,2023-12-25:/ArtalkJS/Artalk</id>
    <link href="https://github.com/ArtalkJS/Artalk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌌 自托管评论系统 | Your self-hosted comment system&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/22412567/171680920-6e74b77c-c565-487b-bff1-4f94976ecbe7.png&#34; alt=&#34;Artalk&#34; width=&#34;100%&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Artalk&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/artalk&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/artalk.svg?style=flat-square&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/artalk&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/artalk.svg?style=flat-square&#34; alt=&#34;npm downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/artalk/artalk-go&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/artalk/artalk-go?style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/ArtalkJS/Artalk&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/ArtalkJS/Artalk?style=flat-square&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/ArtalkJS/Artalk/tree/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/build/gh/ArtalkJS/Artalk?style=flat-square&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/ArtalkJS/Artalk&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/gh/ArtalkJS/Artalk?style=flat-square&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/package/artalk&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/artalk?style=flat-square&#34; alt=&#34;npm bundle size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🌌 Golang 自托管评论系统&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ArtalkJS/Artalk/master/README.en.md&#34;&gt;English&lt;/a&gt; / &lt;a href=&#34;https://artalk.js.org&#34;&gt;官方文档&lt;/a&gt; / &lt;a href=&#34;https://github.com/ArtalkJS/Artalk/releases&#34;&gt;最新版本&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🍃 轻量 (~30kB)&lt;/li&gt; &#xA; &lt;li&gt;👨‍👧‍👦 安全 (自托管)&lt;/li&gt; &#xA; &lt;li&gt;🐳 易上手 (防脱发)&lt;/li&gt; &#xA; &lt;li&gt;🍱 Golang 后端 (快速 / 跨平台)&lt;/li&gt; &#xA; &lt;li&gt;🌊 Vanilla × TypeScript × Vite (纯天然 / 无依赖)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;侧 边 栏 ：支持多站点集中化管理&lt;/li&gt; &#xA; &lt;li&gt;通知中心：红点的标记 / 提及列表&lt;/li&gt; &#xA; &lt;li&gt;身份验证：徽标自定义 / 密码验证&lt;/li&gt; &#xA; &lt;li&gt;评论审核：反垃圾检测 / 频率限制&lt;/li&gt; &#xA; &lt;li&gt;表情符号：插入表情包 / 快速导入&lt;/li&gt; &#xA; &lt;li&gt;邮件提醒：模版自定义 / 多管理员&lt;/li&gt; &#xA; &lt;li&gt;站点隔离：管理员分配 / 多个站点&lt;/li&gt; &#xA; &lt;li&gt;页面管理：标题可显示 / 快速跳转&lt;/li&gt; &#xA; &lt;li&gt;图片上传：上传到本地 / 多种图床&lt;/li&gt; &#xA; &lt;li&gt;多元推送：支持 钉钉 飞书 TG&lt;/li&gt; &#xA; &lt;li&gt;无限层级：可切换为平铺模式&lt;/li&gt; &#xA; &lt;li&gt;评论投票：赞同还是反对评论&lt;/li&gt; &#xA; &lt;li&gt;评论排序：按热度或时间排序&lt;/li&gt; &#xA; &lt;li&gt;评论置顶：重要消息置顶显示&lt;/li&gt; &#xA; &lt;li&gt;只看作者：仅显示作者的评论&lt;/li&gt; &#xA; &lt;li&gt;说说模式：仅自己可发布评论&lt;/li&gt; &#xA; &lt;li&gt;异步处理：发送评论无需等待&lt;/li&gt; &#xA; &lt;li&gt;滚动加载：评论内容分页处置&lt;/li&gt; &#xA; &lt;li&gt;自动保存：用户输入防丢功能&lt;/li&gt; &#xA; &lt;li&gt;自动填充：用户链接自动填充&lt;/li&gt; &#xA; &lt;li&gt;实时预览：评论内容实时预览&lt;/li&gt; &#xA; &lt;li&gt;夜间模式：防止眼部疾病伤害&lt;/li&gt; &#xA; &lt;li&gt;评论折叠：这个不打算给你康&lt;/li&gt; &#xA; &lt;li&gt;数据备份：防止评论数据丢失&lt;/li&gt; &#xA; &lt;li&gt;数据迁移：快速切换评论系统&lt;/li&gt; &#xA; &lt;li&gt;Markdown：默认支持 MD 语法&lt;/li&gt; &#xA; &lt;li&gt;支持 Latex：提供集成 Katex 插件&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;a href=&#34;https://github.com/vitejs/vite&#34;&gt;Vite&lt;/a&gt;：属于开发者的极致体验&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;更多内容请查看：&lt;a href=&#34;https://artalk.js.org/guide/intro.html&#34;&gt;&lt;strong&gt;介绍文档&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;p&gt;参考：&lt;a href=&#34;https://artalk.js.org/guide/deploy.html&#34;&gt;&lt;strong&gt;部署文档&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install artalk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import Artalk from &#39;artalk&#39;&#xA;&#xA;Artalk.init({&#xA;  el:     &#39;#Comments&#39;,&#xA;  site:   &#39;Artalk 的博客&#39;,&#xA;  server: &#39;https://artalk.example.com&#39;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name artalk \&#xA;  -p 8080:23366 \&#xA;  -v $(pwd)/data:/data \&#xA;  --restart=always \&#xA;  artalk/artalk-go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim docker-compose.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3.5&#34;&#xA;services:&#xA;  artalk:&#xA;    container_name: artalk&#xA;    image: artalk/artalk-go&#xA;    restart: always&#xA;    ports:&#xA;      - 8080:23366&#xA;    volumes:&#xA;      - ./data:/data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ArtalkJS/Artalk/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ArtalkJS/Artalk/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=ArtalkJS/Artalk&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ArtalkJS/Artalk/stargazers&#34;&gt;&lt;img src=&#34;https://reporoster.com/stars/ArtalkJS/Artalk&#34; alt=&#34;Stargazers repo roster for @ArtalkJS/Artalk&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Repobeats Analytics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/a9fc9191ac561bc5a8ee2cddc81e635ecaebafb6.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特别致谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢社区提供的帮助与反馈，若有好的建议与意见欢迎前往 &lt;a href=&#34;https://github.com/ArtalkJS/Artalk/issues&#34;&gt;ISSUES&lt;/a&gt; 随时告知。&lt;/p&gt; &#xA;&lt;h2&gt;TODOs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Golang 后端&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多数据库支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SQLite&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MySQL&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Postgres&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SQLServer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多缓存数据库支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; In-memory (内建缓存)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Redis&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Memcache&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多站点支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论获取分页&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论点赞投票&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 浏览量统计&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论分页加载&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论置顶 / 精华&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论排序 (热度 / 时间)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 通知中心 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 提及&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 全部&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 我的&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 待审&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 管理员控制台 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 页面&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 站点&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 设置 (GUI)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 数据导入 (&lt;a href=&#34;https://artalk.js.org/guide/transfer.html&#34;&gt;Artransfer&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Artrans&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WordPress&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Typecho (&lt;a href=&#34;https://github.com/ArtalkJS/Artrans-Typecho&#34;&gt;插件&lt;/a&gt; / &lt;a href=&#34;https://github.com/ArtalkJS/Artransfer-CLI&#34;&gt;Artransfer-CLI&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Valine&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Disqus&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Commento&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Waline (&lt;a href=&#34;https://github.com/ArtalkJS/Artransfer-CLI&#34;&gt;Artransfer-CLI&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Twikoo&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Artalk v1 (PHP)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 数据导出&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 邮件多种发送方式 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SMTP&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 阿里云邮件&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 系统调用 sendmail&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 邮件多模板自定义&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 邮件异步队列发送 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 队列持久化&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户已读标记&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 验证码 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 图片验证码&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.cloudflare.com/products/turnstile/&#34;&gt;Turnstile&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.google.com/recaptcha/about/&#34;&gt;ReCAPTCHA&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.hcaptcha.com/&#34;&gt;hCaptcha&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.geetest.com/&#34;&gt;极验&lt;/a&gt;滑动验证码&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 反垃圾 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://akismet.com/&#34;&gt;Akismet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://help.aliyun.com/document_detail/28417.html&#34;&gt;阿里云内容安全&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://cloud.tencent.com/document/product/1124/64508&#34;&gt;腾讯云内容安全&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 关键字过滤&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 评论通知管理员 (&lt;a href=&#34;https://github.com/nikoksr/notify&#34;&gt;notify&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Telegram Bot&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 飞书 WebHook Bot&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 钉钉&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bark&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Slack&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; LINE&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自定义 HTTP 回调&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 命令行管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 博客邮件订阅&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户鉴权机制&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 跨域非法请求阻止&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 全局验证码操作次数限制&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; JWT 登陆状态验证&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 时区自定义&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 只看作者功能&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 图片上传&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 图片上传到图床 (&lt;a href=&#34;https://github.com/pluveto/upgit&#34;&gt;upgit&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 图片管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 附件上传 / 管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 表情包统一管理 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 导入表情包&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 表情包图片地址控制&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; AT 提及 (@)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 评论话题 (#)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 评论标签分类系统&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 主题样式更换&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 规范化 API&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 扩展中心&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 开放用户注册&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 第三方登录接入&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多语言 / 国际化 (i18n)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 一键升级&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/ArtalkJS/Artalk&#34;&gt;&lt;img src=&#34;https://starchart.cc/ArtalkJS/Artalk.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ArtalkJS/Artalk/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FArtalkJS%2FArtalk?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FArtalkJS%2FArtalk.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FArtalkJS%2FArtalk?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FArtalkJS%2FArtalk.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cursusdb/cursusdb</title>
    <updated>2023-12-25T01:31:10Z</updated>
    <id>tag:github.com,2023-12-25:/cursusdb/cursusdb</id>
    <link href="https://github.com/cursusdb/cursusdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Light-weight highly performant, persistent, secure-by-default, in-memory, distributed document oriented database with an SQL like query language written in pure GO.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cursus Database System&lt;/h2&gt; &#xA;&lt;p&gt;CursusDB is a fast open source in-memory document oriented database offering security, persistence, distribution, availability and an SQL like query language.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cursusdb.com/documentation&#34;&gt;https://cursusdb.com/documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The idea behind CursusDB was to create something unlimitedly scalable whilst never really slowing down. Say you have 1 billion documents stored within 1 collection spread across 100 nodes the cluster will query 1 billion documents in the time it takes to query 10 million as the cluster initiates a non insert action on each node simultaneously. This is the power of parallel search. The Cursus system is searching say in the users collection in multiple sections of the collection simultaneously.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Secured cluster and node(s) communication with shared key and OR TLS.&lt;/li&gt; &#xA; &lt;li&gt;Encrypted data at rest by default with chacha20poly1305.&lt;/li&gt; &#xA; &lt;li&gt;In-memory data during runtime&lt;/li&gt; &#xA; &lt;li&gt;Parallel search. Searching collections within multiple nodes simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;Database Users with basic (R, RW) permissions&lt;/li&gt; &#xA; &lt;li&gt;Cluster and node authentication.&lt;/li&gt; &#xA; &lt;li&gt;Cluster node data replication and synchronization specifically for reads&lt;/li&gt; &#xA; &lt;li&gt;JSON object insert.&lt;/li&gt; &#xA; &lt;li&gt;Cluster and client authentication.&lt;/li&gt; &#xA; &lt;li&gt;SQL like query language (CDQL - Cursus Document Query Language)&lt;/li&gt; &#xA; &lt;li&gt;Low-latency&lt;/li&gt; &#xA; &lt;li&gt;Highly available&lt;/li&gt; &#xA; &lt;li&gt;Unique k:v across all nodes using exclamation at end of key name &lt;code&gt;email!&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Secure by default with shared key and users&lt;/li&gt; &#xA; &lt;li&gt;Highly configurable&lt;/li&gt; &#xA; &lt;li&gt;User permissions &lt;code&gt;RW&lt;/code&gt; &lt;code&gt;R&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lightweight core code under 3,000 lines of code in total&lt;/li&gt; &#xA; &lt;li&gt;File logging and automatic log truncation based on &lt;code&gt;log-max-lines&lt;/code&gt; config&lt;/li&gt; &#xA; &lt;li&gt;Automatic reconnect of any lost node or node replica&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/drawing3.png&#34; alt=&#34;drawing3.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/drawing5.png&#34; alt=&#34;drawing5.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/repositories/cursusdb&#34;&gt;https://hub.docker.com/repositories/cursusdb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cluster &amp;amp; Node Building &amp;amp; Initial Setup&lt;/h2&gt; &#xA;&lt;p&gt;Getting started with CursusDB is extremely easy! First you must build a cluster and node binary. To do that clone the source and follow below:&lt;/p&gt; &#xA;&lt;p&gt;You must make sure you have GO installed minimum version 1.21.3, once installed follow below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:cursusdb/cursusdb.git&#xA;cd cluster&#xA;go build .&#xA;cd ..&#xA;cd node &#xA;go build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you should have a curode and a cursus binary. &lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_1.png&#34; alt=&#34;img_1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now with both we first start cursus to setup a database user, .cursusconfig and a shared key which will be used for your node as well. This key is used to authenticate your cluster and nodes also encrypt your data at rest with ChaCha!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_2.png&#34; alt=&#34;img_2.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;So now that we have our credentials setup we have to setup our first node!&lt;/p&gt; &#xA;&lt;p&gt;We can run a node on the same instance as a cluster for this example. After completion of cluster setup through the initial run you&#39;ll get a .cursusconfig which has a few configurations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nodes: []&#xA;host: 0.0.0.0&#xA;tls-node: false&#xA;tls-cert: &#34;&#34;&#xA;tls-key: &#34;&#34;&#xA;tls: false&#xA;port: 7681&#xA;key: QyjlGfs+AMjvqJd/ovUUA1mBZ3yEq72y8xBQw94a96k= # Hashed and encoded&#xA;users:&#xA;    - YWxleA==:7V8VGHNwVTVC7EktlWS8V3kS/xkLvRg/oODmOeIukDY= # {ENCODED-UNAME}:{ENCODED-HASHED-UPW} first part is encoded username then encrypted and encoded pw&#xA;node-reader-size: 2097152&#xA;log-max-lines: 1000&#xA;join-responses: true&#xA;logging: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;nodes - database cluster nodes. i.e an ip/fqdn + port combination (cluster1.example.com:7682)&lt;/li&gt; &#xA; &lt;li&gt;tls-node - whether the cluster will connect to nodes via tls&lt;/li&gt; &#xA; &lt;li&gt;tls-cert - path to your tls cert for cluster&lt;/li&gt; &#xA; &lt;li&gt;tls-key - path to your tls key for cluster&lt;/li&gt; &#xA; &lt;li&gt;tls - enable or disable tls&lt;/li&gt; &#xA; &lt;li&gt;port - cluster port&lt;/li&gt; &#xA; &lt;li&gt;key - encoded shared key&lt;/li&gt; &#xA; &lt;li&gt;users - array of database users serialized, and encoded.&lt;/li&gt; &#xA; &lt;li&gt;node-reader-size - the max size of a response from a node&lt;/li&gt; &#xA; &lt;li&gt;join-responses - join all node responses and limit based on provided n&lt;/li&gt; &#xA; &lt;li&gt;logging - start logging to file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let&#39;s put in under nodes a local node we will start shortly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nodes:&#xA;- host: 0.0.0.0&#xA;  port: 7682&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now with your .cursusconfig setup let&#39;s start our node for the first time. &lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_3.png&#34; alt=&#34;img_3.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll see that I&#39;ve added the same key as I did for the cluster and the node is now started!&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s start our cluster now. &lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_4.png&#34; alt=&#34;img_4.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Look at that! We are all set to start inserting data. Let&#39;s insert a user document into a users collection with a unique email key value using the curush(CursusDB Shell) &lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_5.png&#34; alt=&#34;img_5.png&#34;&gt; We can use curush with flag &lt;code&gt;--host&lt;/code&gt; which will use the default port for a cluster 7681. If we wanted to specify a different port we can used the &lt;code&gt;--port &lt;/code&gt;flag. If your cluster is using TLS make sure when using curush to also enable tls using flag &lt;code&gt;--tls=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_6.png&#34; alt=&#34;img_6.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;curush will ask for a database user username and password to connect to cluster. Once authorized you can start running queries!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;insert into users({&#34;name&#34;: &#34;Alex&#34;, &#34;lastName&#34;: &#34;Padula&#34;, &#34;age&#34;: 28, &#34;email!&#34;: &#34;apadula@cursusdb.com&#34;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_7.png&#34; alt=&#34;img_7.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;On inserts every document will get a unique &lt;code&gt;$id &lt;/code&gt; key which is unique across all nodes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_8.png&#34; alt=&#34;img_8.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If we try and insert the same document we will get an error stating an existing document already exists. This is because we set &lt;code&gt;email&lt;/code&gt; with and &lt;code&gt;!&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/img_9.png&#34; alt=&#34;img_9.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Node Replicating&lt;/h2&gt; &#xA;&lt;p&gt;.cursusconfig&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nodes:&#xA;- host: 0.0.0.0&#xA;  port: 7682&#xA;  replicas:&#xA;  - host: 0.0.0.0&#xA;    port: 7683&#xA;..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Node at &lt;code&gt;0.0.0.0:7682&lt;/code&gt; has a configured replica at &lt;code&gt;0.0.0.0:7682&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;On the nodes end you need to configure a replica so the node you&#39;re configuring knows to replicate the data over.&lt;/p&gt; &#xA;&lt;p&gt;.curodeconfig&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;replicas:&#xA;  - host: 0.0.0.0&#xA;    port: 7683&#xA;tls-cert: &#34;&#34;&#xA;tls-key: &#34;&#34;&#xA;..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default sync time is 10 minutes and can be configured with yaml config &lt;code&gt;replication-sync-time&lt;/code&gt; the node will sync its data to its configured replicas. If original node shuts down or is not available a replica will be used for reads, if a replica is not available another available replica will be used(a node can configure multiple replicas).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cursusdb/cursusdb/master/images/replicating-cluster-nodes.png&#34; alt=&#34;replicating-cluster-nodes.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Query Language&lt;/h2&gt; &#xA;&lt;p&gt;Case-sensitive.. Keep it lowercase as the example.&lt;/p&gt; &#xA;&lt;h3&gt;Inserts&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;insert into users({&#34;name&#34;: &#34;Alex&#34;, &#34;last&#34;: &#34;Lee&#34;, &#34;age&#34;: 28});&#xA;insert into users({&#34;name&#34;: &#34;John&#34;, &#34;last&#34;: &#34;Josh&#34;, &#34;age&#34;: 28, &#34;tags&#34;: [&#34;tag1&#34;, &#34;tag2&#34;]});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Selects&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users;&#xA;select 0,2 from users;&#xA;select 1 from users where name == &#39;Alex&#39; || name == &#39;John&#39;;&#xA;select * from users where name == &#39;Alex&#39; &amp;amp;&amp;amp; age == 28;&#xA;select * from users where tags == &#34;tag1&#34;;&#xA;select * from users where name == &#39;Alex&#39; &amp;amp;&amp;amp; age == 28 &amp;amp;&amp;amp; tags == &#39;tag1&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;NOTE&lt;/h5&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;==&lt;/code&gt; OR &lt;code&gt;=&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select 1 from users where name == &#39;Alex&#39; || name == &#39;John&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select 1 from users where name = &#39;Alex&#39; || name = &#39;John&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Updating&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;update 1 in users where age &amp;gt;= 28 set name = &#39;Josie&#39;;&#xA;update * in users where age &amp;gt; 24 &amp;amp;&amp;amp; name == &#39;Alex&#39; set name = &#39;Josie&#39;, age = 52;&#xA;update n, n..&#xA;ect..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deleting&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;delete * from users where age &amp;gt;= 28 || age &amp;lt; 32;&#xA;delete 0,5 from users where age &amp;gt; 28 &amp;amp;&amp;amp; name == &#39;Alex&#39;;&#xA;ect&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pattern Matching&lt;/h3&gt; &#xA;&lt;h4&gt;LIKE&lt;/h4&gt; &#xA;&lt;p&gt;Starts with &#39;A&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users where firstName like &#39;A%lex Padula&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ends with &#39;la&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users where firstName like &#39;Alex Padu%la&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Contains Pad&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users where firstName like &#39;Alex %Pad%ula&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;NOT LIKE&lt;/h4&gt; &#xA;&lt;p&gt;Starts with &#39;A&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users where firstName not like &#39;A%lex Padula&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ends with &#39;la&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users where firstName not like &#39;Alex Padu%la&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Contains Pad&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users where firstName not like &#39;Alex %Pad%ula&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sorting&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users order by createdOn desc;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from users order by firstName asc;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Counting&lt;/h3&gt; &#xA;&lt;p&gt;Example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select count from users where $id == &#34;099ade86-93a8-4703-abdd-d1ccc1078b1d&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Response not joined&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[{&#34;127.0.0.1:7682&#34;: [{&#34;count&#34;:1}]}]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Response joined if each node has 1 match and there is 5 nodes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#34;count&#34;:5} &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Uniqueness&lt;/h3&gt; &#xA;&lt;p&gt;using &lt;code&gt;key!&lt;/code&gt; will make sure the value is unique across all nodes!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;insert into users({&#34;email!&#34;: &#34;test@example.com&#34; ...});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Database Users&lt;/h3&gt; &#xA;&lt;p&gt;CursusDB has 2 permissions R(read) and (RW). RW can select, insert, delete, update and add new users whereas users with just R can only read.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;new user USERNAME, PASSWORD, P&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using a client like &lt;code&gt;curush&lt;/code&gt; the CursusDB Shell Program.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curush&amp;gt; new user someusername, somepassword, RW;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Removing Database Users&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;delete user USERNAME;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Operators&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;==&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;=&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Conditionals&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;||&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Actions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;select&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;update&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Status codes&lt;/h3&gt; &#xA;&lt;h4&gt;Authentication / Authorization&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;0&lt;/code&gt; Authentication successful.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1&lt;/code&gt; Unable to read authentication header.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2&lt;/code&gt; Invalid authentication value.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3&lt;/code&gt; No user exists&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4&lt;/code&gt; User not authorized&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5&lt;/code&gt; Failed node sync auth&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Node / Cluster&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;100&lt;/code&gt; - Node is at peak allocation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;101&lt;/code&gt; - Invalid permission&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;102&lt;/code&gt; - User does not exist&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;103&lt;/code&gt; - Database user already exists&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;104&lt;/code&gt; - No node was available for insert&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;105&lt;/code&gt; - Node unavailable&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;106&lt;/code&gt; - Node ready for sync&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;107&lt;/code&gt; - Node replica synced successfully&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;108&lt;/code&gt; - Could not decode serialized sync data into hashmap&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;109&lt;/code&gt; - No available nodes to insert into&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;200&lt;/code&gt; - New database user created successfully&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;201&lt;/code&gt; - Database user removed successfully&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;500&lt;/code&gt; - Unknown error (with description)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;501&lt;/code&gt; - Limit skip must be an integer (with description)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;502&lt;/code&gt; - Could not convert limit value to integer (with description)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;503&lt;/code&gt; - Invalid limiting slice value (with description)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;504&lt;/code&gt; - Invalid limiting value (with description)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;505&lt;/code&gt; - Key cannot use reserved word&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;506&lt;/code&gt; - Where is missing values&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Document&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;2000&lt;/code&gt; Document inserted/updated/deleted&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4000&lt;/code&gt; Unmarsharable JSON insert&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4001&lt;/code&gt; Missing action&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4002&lt;/code&gt; None existent action&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4003&lt;/code&gt; Nested JSON object cannot be inserted&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4004&lt;/code&gt; Document already exists&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4005&lt;/code&gt; Invalid command/query&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4006&lt;/code&gt; From is required&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4007&lt;/code&gt; Invalid query operator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4008&lt;/code&gt; Set is missing =&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4009&lt;/code&gt; Invalid insert query missing &#39;insert into&#39;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4010&lt;/code&gt; Invalid insert query is missing parentheses&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4011&lt;/code&gt; Invalid update query missing set&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4012&lt;/code&gt; Could not marshal JSON&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4013&lt;/code&gt; Unmarsharable JSON&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ports&lt;/h3&gt; &#xA;&lt;p&gt;Default cluster port: &lt;code&gt;7681&lt;/code&gt; Default node port: &lt;code&gt;7682&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;Logs for the CursusDB cluster and node are found where you launch your binaries. Cluster: &lt;code&gt;cursus.log&lt;/code&gt; Node: &lt;code&gt;curode.log&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can enable logging on either cluster or node enabling logging. This will log to file instead of stdout&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;logging: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Within your yaml configs you can set &lt;code&gt;log-max-lines&lt;/code&gt; this option will tell either node or cluster when to truncate(clear up) the log file(s).&lt;/p&gt; &#xA;&lt;h3&gt;How are logs are formatted?&lt;/h3&gt; &#xA;&lt;p&gt;[LEVEL][UTC DATETIME] DATA&lt;/p&gt; &#xA;&lt;p&gt;Logs can have either level:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ERROR&lt;/li&gt; &#xA; &lt;li&gt;INFO&lt;/li&gt; &#xA; &lt;li&gt;FATAL&lt;/li&gt; &#xA; &lt;li&gt;WARN&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;[INFO][2023-12-09 05:28:36.119141987 +0000 UTC] Log truncated at 1000&#xA;[INFO][2023-12-09 05:28:36.119159073 +0000 UTC] Collection mutexes created.&#xA;[INFO][2023-12-09 05:28:37.115749244 +0000 UTC] Received signal interrupt.  Starting shutdown.&#xA;[INFO][2023-12-09 05:28:37.115770678 +0000 UTC] Starting to write node data to file.&#xA;[INFO][2023-12-09 05:28:37.115928288 +0000 UTC] WriteToFile(): Node data written to file successfully.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example using curush querying cluster&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;./curush -host 0.0.0.0&#xA;Username&amp;gt; ******&#xA;Password&amp;gt; *****&#xA;curush&amp;gt;select * from users;&#xA;&#xA;127.0.0.1:7682: [{&#34;$id&#34;:&#34;17cc0a83-f78e-4cb2-924f-3a194dedec90&#34;,&#34;age&#34;:28,&#34;last&#34;:&#34;Padula&#34;,&#34;name&#34;:&#34;Alex&#34;}]&#xA;curush&amp;gt;select * from users;&#xA;&#xA;127.0.0.1:7682: [{&#34;$id&#34;:&#34;17cc0a83-f78e-4cb2-924f-3a194dedec90&#34;,&#34;age&#34;:28,&#34;last&#34;:&#34;Padula&#34;,&#34;name&#34;:&#34;Alex&#34;}]&#xA;curush&amp;gt;insert into users({&#34;name&#34;: &#34;Alex&#34;, &#34;last&#34;: &#34;Lee&#34;, &#34;age&#34;: 28});&#xA;&#xA;{&#34;insert&#34;:{&#34;$id&#34;:&#34;ecaaba0f-d130-42c9-81ad-ea6fc3461379&#34;,&#34;age&#34;:28,&#34;last&#34;:&#34;Lee&#34;,&#34;name&#34;:&#34;Alex&#34;},&#34;message&#34;:&#34;Document inserted&#34;,&#34;statusCode&#34;:2000}&#xA;curush&amp;gt;select * from users;&#xA;&#xA;127.0.0.1:7682: [{&#34;$id&#34;:&#34;17cc0a83-f78e-4cb2-924f-3a194dedec90&#34;,&#34;age&#34;:28,&#34;last&#34;:&#34;Padula&#34;,&#34;name&#34;:&#34;Alex&#34;},{&#34;$id&#34;:&#34;ecaaba0f-d130-42c9-81ad-ea6fc3461379&#34;,&#34;age&#34;:28,&#34;last&#34;:&#34;Lee&#34;,&#34;name&#34;:&#34;Alex&#34;}]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;^ Single node&lt;/p&gt; &#xA;&lt;p&gt;If multiple nodes you&#39;d see a response similar to the one below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curush&amp;gt;select * from users;&#xA;&#xA;127.0.0.1:7682: [{&#34;$id&#34;:&#34;17cc0a83-f78e-4cb2-924f-3a194dedec90&#34;,&#34;age&#34;:28,&#34;last&#34;:&#34;Doe&#34;,&#34;name&#34;:&#34;John&#34;},..]&#xA;127.0.0.1:7683: [{&#34;$id&#34;:&#34;17cc0a83-f78e-4cb2-924f-3a194dedec91&#34;,&#34;age&#34;:32,&#34;last&#34;:&#34;Johnson&#34;,&#34;name&#34;:&#34;Sarah&#34;},..]&#xA;127.0.0.1:7684: [{&#34;$id&#34;:&#34;17cc0a83-f78e-4cb2-924f-3a194dedec92&#34;,&#34;age&#34;:42,&#34;last&#34;:&#34;Stint&#34;,&#34;name&#34;:&#34;Peter&#34;},..]&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default though you wont see above..&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;join-responses: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;is required to see results for each node.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;join-responses&lt;/code&gt; joins all documents from nodes and limits based on limit. For example..&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select 3 from posts order by createdOn desc;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;select 3&lt;/code&gt; portion the cluster will get depending on set amount of nodes say you have 5 nodes setup, you will get back 3 * 5 but the cluster will limit to 3 as that what was requested!&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please report issues, enhancements, etc at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cursusdb/cursusdb/discussions&#34;&gt;https://github.com/cursusdb/cursusdb/discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cursusdb/cursusdb/issues&#34;&gt;https://github.com/cursusdb/cursusdb/issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allow SQL inserts &lt;code&gt;insert into coll (key, key, key, ...) VALUES (value1, value2, value3, ...); &lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Secured TLS connection configuration for node replicas.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CursusDB v MySQL&lt;/h2&gt; &#xA;&lt;p&gt;Most basic setup. CursusDB cluster and node hosted same instance no TLS. MySQL setup exact same specification of an instance no TLS.&lt;/p&gt; &#xA;&lt;h3&gt;CursusDB&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Connection time: 64ms&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inserting 1002 records sequentially&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;insert into users({&#34;first&#34;: &#34;James&#34;, &#34;last&#34;: &#34;Jones&#34;, &#34;age&#34;: 22, &#34;active&#34;: true});&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Insertion time: 33928 ms&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read skipping 1000 selecting 1 where first is James&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;select 1000,1 from users where first == &#34;James&#34;;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Read time: 32ms&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MySQL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Connection time: 170ms&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inserting 1002 records sequentially&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;INSERT INTO users (first, last, age, active) VALUES (&#34;James&#34;, &#34;Jones&#34;, 22, true);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Insertion time: 38234ms&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read skipping 1000 selecting 1 where first is James&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SELECT * FROM users where first = &#34;James&#34; LIMIT 1 OFFSET 1000;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Read time: 44ms&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Table used&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;CREATE TABLE users ( first varchar(255), last varchar(255), age int, active BOOLEAN );&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>