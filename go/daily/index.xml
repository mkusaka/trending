<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-27T01:30:34Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hemilabs/heminetwork</title>
    <updated>2024-09-27T01:30:34Z</updated>
    <id>tag:github.com,2024-09-27:/hemilabs/heminetwork</id>
    <link href="https://github.com/hemilabs/heminetwork" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The hemi network core daemons.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;⚡️ The Hemi Network&lt;/h1&gt; &#xA;&lt;p&gt;Hemi is an EVM-compatible L2 blockchain that combines the security of Bitcoin with the programmability of Ethereum.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Table of Contents&lt;/summary&gt; &#xA; &lt;!-- TOC --&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-the-hemi-network&#34;&gt;⚡️ The Hemi Network&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-services&#34;&gt;🔧 Services&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-binaries&#34;&gt;🌐 Binaries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-getting-started&#34;&gt;⚡️ Getting Started&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-downloading-release-binaries&#34;&gt;📦 Downloading Release Binaries&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-building-from-source&#34;&gt;🏗 Building from Source&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-prerequisites&#34;&gt;🏁 Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#building-with-makefile&#34;&gt;Building with Makefile&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-running-the-services&#34;&gt;🛠 Running the Services&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-running-popmd&#34;&gt;▶️ Running popmd&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-prerequisites-1&#34;&gt;🏁 Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#cli&#34;&gt;CLI&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#web&#34;&gt;Web&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-running-bfgd&#34;&gt;▶️ Running bfgd&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-prerequisites-2&#34;&gt;🏁 Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-running-bssd&#34;&gt;▶️ Running bssd&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-prerequisites-3&#34;&gt;🏁 Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-running-the-localnet-network&#34;&gt;▶️ Running the localnet network&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-prerequisites-4&#34;&gt;🏁 Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-tutorial&#34;&gt;📚 Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-license&#34;&gt;📄 License&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;!-- TOC --&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🔧 Services&lt;/h2&gt; &#xA;&lt;p&gt;The Hemi Network consists of three key services, each serving a unique and important function within the network:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hemilabs/heminetwork/raw/main/service/popm&#34;&gt;&lt;strong&gt;PoP Miner (popmd)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Mines&lt;/strong&gt; L2 Keystones into Bitcoin blocks for Proof-of-Proof.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hemilabs/heminetwork/raw/main/service/bfg&#34;&gt;&lt;strong&gt;Bitcoin Finality Governor (bfgd)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Acts as the gateway to the Bitcoin network.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hemilabs/heminetwork/raw/main/service/bss&#34;&gt;&lt;strong&gt;Bitcoin Secure Sequencer (bssd)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Acts as a gateway to the Bitcoin Finality Governor (BFG), managing the consensus mechanisms of the Hemi Network.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🌐 Binaries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/cmd/bfgd&#34;&gt;&lt;strong&gt;bfgd (Bitcoin Finality Governor Daemon)&lt;/strong&gt;&lt;/a&gt;: Manages connections and data transfers between the Hemi Network and the Bitcoin blockchain, ensuring finality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/cmd/bssd&#34;&gt;&lt;strong&gt;bssd (Bitcoin Secure Sequencer Daemon)&lt;/strong&gt;&lt;/a&gt;: Coordinates and sequences blockchain operations, serving as a bridge to the Bitcoin Finality Governor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/cmd/extool&#34;&gt;&lt;strong&gt;extool&lt;/strong&gt;&lt;/a&gt;: A utility tool for extracting and processing data from various file formats, tailored for blockchain data analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/cmd/hemictl&#34;&gt;&lt;strong&gt;hemictl&lt;/strong&gt;&lt;/a&gt;: The command-line interface for controlling and managing all Hemi Network services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/cmd/keygen&#34;&gt;&lt;strong&gt;keygen&lt;/strong&gt;&lt;/a&gt;: Generates and manages cryptographic keys used within the Hemi network, ensuring secure operations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/cmd/popmd&#34;&gt;&lt;strong&gt;popmd (Proof-of-Proof Miner Daemon)&lt;/strong&gt;&lt;/a&gt;: Embeds L2 Keystones into Bitcoin blocks for proof-of-proof, integral to the network&#39;s security.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/cmd/tbcd&#34;&gt;&lt;strong&gt;tbcd (Tiny Bitcoin Daemon)&lt;/strong&gt;&lt;/a&gt;: A minimal Bitcoin block downloader and indexer daemon.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;⚡️ Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;📦 Downloading Release Binaries&lt;/h2&gt; &#xA;&lt;p&gt;Pre-built binaries are available on the &lt;a href=&#34;https://github.com/hemilabs/heminetwork/releases&#34;&gt;Releases Page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🏗 Building from Source&lt;/h2&gt; &#xA;&lt;h3&gt;🏁 Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/dl/&#34;&gt;Go v1.23+&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building with Makefile&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the &lt;code&gt;heminetwork&lt;/code&gt; repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/hemilabs/heminetwork.git&#xA;cd heminetwork&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setup and build binaries:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make deps    # Download and install dependencies&#xA;make install # Build binaries&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Output binaries will be written to the &lt;code&gt;bin/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;🛠 Running the Services&lt;/h1&gt; &#xA;&lt;p&gt;For any service, you can view configuration options by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./bin/popmd --help&#xA;./bin/bfgd --help&#xA;./bin/bssd --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;▶️ Running popmd&lt;/h2&gt; &#xA;&lt;h3&gt;🏁 Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A funded BTC private key. This can be a testnet address if configured for test environments.&lt;/li&gt; &#xA; &lt;li&gt;A BFG URL to establish a connection.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once properly configured and running, &lt;code&gt;popmd&lt;/code&gt; will start mining L2 Keystones by adding them to Bitcoin blocks that make it into the chain.&lt;/p&gt; &#xA;&lt;h3&gt;CLI&lt;/h3&gt; &#xA;&lt;p&gt;Set up and start popmd using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./bin/popmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;There is also a web interface that can be used to run a PoP miner. Build and run the web interface with:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The web PoP Miner is currently a proof-of-concept.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd ./web&#xA;make&#xA;go run ./integrationtest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;▶️ Running bfgd&lt;/h2&gt; &#xA;&lt;h3&gt;🏁 Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;strong&gt;PostgreSQL database&lt;/strong&gt;, bfgd expects the sql scripts in &lt;code&gt;./database/bfgd/scripts/&lt;/code&gt; to be run to set up your schema.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;connection to an ElectrumX node&lt;/strong&gt; on the proper Bitcoin network (testnet or mainnet).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;▶️ Running bssd&lt;/h2&gt; &#xA;&lt;h3&gt;🏁 Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect to a live &lt;a href=&#34;https://raw.githubusercontent.com/hemilabs/heminetwork/main/#-running-bfgd&#34;&gt;bfgd&lt;/a&gt; instance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;▶️ Running the localnet network&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] This is designed for use in testing and development environments only.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;🏁 Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;📚 Tutorial&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the Network:&lt;/strong&gt; Launch the entire Hemi network locally using Docker, which will generate L2 Keystones and BTC Blocks at a &lt;strong&gt;high rate&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose -f ./e2e/docker-compose.yml up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The &lt;code&gt;--build&lt;/code&gt; flag is optional and should only be used if you want to rebuild the binaries.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Manage Caching:&lt;/strong&gt; This initial build may take some time, but subsequent builds should benefit from caching.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] During rebuilding, &lt;code&gt;popmd&lt;/code&gt;, &lt;code&gt;bssd&lt;/code&gt;, and &lt;code&gt;bfgd&lt;/code&gt; may force a rebuild due to the &lt;code&gt;COPY&lt;/code&gt; command, which can break the cache. If you need to deliberately break the cache for the op-stack, use the following arguments:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For op-geth + optimism (op-node):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose -f ./e2e/docker-compose.yml build --build-arg OP_GETH_CACHE_BREAK=&#34;$(date)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For optimism cache break only:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose -f ./e2e/docker-compose.yml build --build-arg OPTIMISM_CACHE_BREAK=&#34;$(date)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Make sure you run the cleanup command to remove data and ensure a fresh start.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose -f ./e2e/docker-compose.yml down -v --remove-orphans&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;--remove-orphans&lt;/code&gt; flag should remove other containers not defined in the docker compose file. This is mainly here to help ensure you start with a clean environment. It can be omitted.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/hemilabs/heminetwork/raw/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>