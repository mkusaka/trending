<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-13T01:33:09Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kubeshark/kubeshark</title>
    <updated>2022-12-13T01:33:09Z</updated>
    <id>tag:github.com,2022-12-13:/kubeshark/kubeshark</id>
    <link href="https://github.com/kubeshark/kubeshark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The API traffic viewer for Kubernetes providing deep visibility into all API traffic and payloads going in, out and across containers and pods inside a Kubernetes cluster. Think TCPDump and Wireshark re-invented for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kubeshark/assets/master/svg/kubeshark-logo.svg?sanitize=true&#34; alt=&#34;Kubeshark: Traffic viewer for Kubernetes.&#34; height=&#34;128px&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/kubeshark/kubeshark/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;GitHub License&#34; src=&#34;https://img.shields.io/github/license/kubeshark/kubeshark?logo=GitHub&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/kubeshark/kubeshark/releases/latest&#34;&gt; &lt;img alt=&#34;GitHub Latest Release&#34; src=&#34;https://img.shields.io/github/v/release/kubeshark/kubeshark?logo=GitHub&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kubeshark/kubeshark&#34;&gt; &lt;img alt=&#34;Docker pulls&#34; src=&#34;https://img.shields.io/docker/pulls/kubeshark/kubeshark?color=%23099cec&amp;amp;logo=Docker&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kubeshark/kubeshark&#34;&gt; &lt;img alt=&#34;Image size&#34; src=&#34;https://img.shields.io/docker/image-size/kubeshark/kubeshark/latest?logo=Docker&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/WkvRGMUcx7&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1042559155224973352?logo=Discord&amp;amp;style=flat-square&amp;amp;label=discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/kubeshark/shared_invite/zt-1k3sybpq9-uAhFkuPJiJftKniqrGHGhg&#34;&gt; &lt;img alt=&#34;Slack&#34; src=&#34;https://img.shields.io/badge/slack-join_chat-green?logo=Slack&amp;amp;style=flat-square&amp;amp;label=slack&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; Mizu (by UP9) is now Kubeshark, read more about it &lt;a href=&#34;https://www.kubeshark.co/mizu-is-now-kubeshark&#34;&gt;here&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;p&gt;Kubeshark, the API Traffic Viewer for kubernetes, provides deep visibility and monitoring of all API traffic and payloads going in, out and across containers and pods inside a Kubernetes cluster.&lt;/p&gt; &#xA;&lt;p&gt;Think of a combination of Chrome Dev Tools, TCPDump and Wireshark, re-invented for Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kubeshark/assets/raw/master/png/kubeshark-ui.png&#34; alt=&#34;Simple UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Kubeshark uses a ~45MB pre-compiled executable binary to communicate with the Kubernetes API. We recommend downloading the &lt;code&gt;kubeshark&lt;/code&gt; CLI by using one of these options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose the right binary, download and use directly from &lt;a href=&#34;https://github.com/kubeshark/kubeshark/releases/latest&#34;&gt;the latest stable release&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the shell script below &lt;span&gt;üëá&lt;/span&gt; to automatically download the right binary for your operating system and CPU architecture:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh &amp;lt;(curl -Ls https://kubeshark.co/install)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compile it from source using &lt;code&gt;make&lt;/code&gt; command then use &lt;code&gt;./bin/kubeshark__&lt;/code&gt; executable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;kubeshark&lt;/code&gt; CLI to capture and view streaming API traffic in real time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting Installation&lt;/h3&gt; &#xA;&lt;p&gt;If something doesn&#39;t work or simply to play it safe prior to installing;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure you have access to &lt;a href=&#34;https://hub.docker.com/&#34;&gt;https://hub.docker.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure &lt;code&gt;kubeshark&lt;/code&gt; executable in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Select Pods&lt;/h3&gt; &#xA;&lt;h4&gt;Monitoring a Specific Pod:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap catalogue-b87b45784-sxc8q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Monitoring a Set of Pods Using Regex:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap &#34;(catalo*|front-end*)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify the Namespace&lt;/h3&gt; &#xA;&lt;p&gt;By default, Kubeshark is deployed into the &lt;code&gt;default&lt;/code&gt; namespace. To specify a different namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubeshark tap -n sock-shop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify All Namespaces&lt;/h3&gt; &#xA;&lt;p&gt;The default deployment strategy of Kubeshark waits for the new pods to be created. To simply deploy to all existing namespaces run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubeshark tap -A&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit our documentation website: &lt;a href=&#34;https://docs.kubeshark.co&#34;&gt;docs.kubeshark.co&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The documentation resources are open-source and can be found on GitHub: &lt;a href=&#34;https://github.com/kubeshark/docs&#34;&gt;kubeshark/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We ‚ù§Ô∏è pull requests! See &lt;a href=&#34;https://raw.githubusercontent.com/kubeshark/kubeshark/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for the contribution guide.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project is for everyone. We ask that our users and contributors take a few minutes to review our &lt;a href=&#34;https://raw.githubusercontent.com/kubeshark/kubeshark/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gobuffalo/buffalo</title>
    <updated>2022-12-13T01:33:09Z</updated>
    <id>tag:github.com,2022-12-13:/gobuffalo/buffalo</id>
    <link href="https://github.com/gobuffalo/buffalo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rapid Web Development w/ Go&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gobuffalo/buffalo/master/logo.svg?sanitize=true&#34; width=&#34;360&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/gobuffalo/buffalo&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/gobuffalo/buffalo&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gobuffalo/buffalo/actions/workflows/standard-go-test.yml&#34;&gt;&lt;img src=&#34;https://github.com/gobuffalo/buffalo/actions/workflows/standard-go-test.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/gobuffalo/buffalo&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/gobuffalo/buffalo&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/gobuffalo/buffalo&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/gobuffalo/buffalo/badges/users.svg?sanitize=true&#34; alt=&#34;Open Source Helpers&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Buffalo&lt;/h1&gt; &#xA;&lt;p&gt;A Go web development eco-system, designed to make your project easier.&lt;/p&gt; &#xA;&lt;p&gt;Buffalo helps you to generate a web project that already has everything from front-end (JavaScript, SCSS, etc.) to the back-end (database, routing, etc.) already hooked up and ready to run. From there it provides easy APIs to build your web application quickly in Go.&lt;/p&gt; &#xA;&lt;p&gt;Buffalo &lt;strong&gt;isn&#39;t just a framework&lt;/strong&gt;; it&#39;s a holistic web development environment and project structure that &lt;strong&gt;lets developers get straight to the business&lt;/strong&gt; of, well, building their business.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I &lt;span&gt;‚ù§Ô∏è&lt;/span&gt; web dev in go again - Brian Ketelsen&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;The current stable version of Buffalo core is v1 (&lt;code&gt;v1&lt;/code&gt; branch).&lt;/p&gt; &#xA;&lt;p&gt;Versions (branches):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;main&lt;/code&gt; is for the current mainstream development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v1&lt;/code&gt; is the current stable release.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Important&lt;/h2&gt; &#xA;&lt;p&gt;Buffalo works only with Go &lt;a href=&#34;https://blog.golang.org/using-go-modules&#34;&gt;modules&lt;/a&gt;. &lt;code&gt;GOPATH&lt;/code&gt; mode is likely to break most of the functionality of the Buffalo eco-system. Please see &lt;a href=&#34;https://blog.gobuffalo.io/the-road-to-1-0-requiring-modules-5672c6b015e5&#34;&gt;this blog post&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Also, the Buffalo team actively gives support to the last 2 versions of Go, which at the moment are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.16.x&lt;/li&gt; &#xA; &lt;li&gt;1.17.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While Buffalo &lt;code&gt;may&lt;/code&gt; work on older versions, we encourage you to upgrade to latest 2 versions of Go for a better development experience.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;http://gobuffalo.io&#34;&gt;http://gobuffalo.io&lt;/a&gt; for the latest documentation, examples, and more.&lt;/p&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gobuffalo.io/documentation/getting_started/installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gobuffalo.io/documentation/getting_started/new-project&#34;&gt;Create a new project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gobuffalo.io/documentation/tutorials/&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shoulders of Giants&lt;/h2&gt; &#xA;&lt;p&gt;Buffalo would not be possible if not for all of the great projects it depends on. Please see &lt;a href=&#34;https://raw.githubusercontent.com/gobuffalo/buffalo/v1/SHOULDERS.md&#34;&gt;SHOULDERS.md&lt;/a&gt; to see a list of them.&lt;/p&gt; &#xA;&lt;h3&gt;Templating&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gobuffalo/plush&#34;&gt;github.com/gobuffalo/plush&lt;/a&gt; - This templating package was chosen over the standard Go &lt;code&gt;html/template&lt;/code&gt; package for a variety of reasons. The biggest of which is that it is significantly more flexible and easy to work with.&lt;/p&gt; &#xA;&lt;h3&gt;Routing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gorilla/mux&#34;&gt;github.com/gorilla/mux&lt;/a&gt; - This router was chosen because of its stability and flexibility. There might be faster routers out there, but this one is definitely the most powerful!&lt;/p&gt; &#xA;&lt;h3&gt;Task Runner (Optional)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/markbates/grift&#34;&gt;github.com/markbates/grift&lt;/a&gt; - If you&#39;re familiar with Rake tasks from Ruby, you&#39;ll be right at home using Grift. This package was chosen to allow for the easy running of simple, and common, tasks that most web applications need. Think things like seeding a database or taking in a CSV file and generating database records. Buffalo ships with an example &lt;code&gt;routes&lt;/code&gt; task that prints of the defined routes and the function that handles those requests.&lt;/p&gt; &#xA;&lt;h3&gt;Models/ORM (Optional)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gobuffalo/pop&#34;&gt;github.com/gobuffalo/pop&lt;/a&gt; - Accessing databases is nothing new in web applications. Pop, and its command line tool, Soda, were chosen because they strike a nice balance between simplifying common tasks, being idiomatic, and giving you the flexibility you need to build your app. Pop and Soda share the same core philosophies as Buffalo, so they were a natural choice.&lt;/p&gt; &#xA;&lt;h3&gt;Sessions, Cookies, WebSockets, and more&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gorilla&#34;&gt;github.com/gorilla&lt;/a&gt; - The Gorilla toolkit is a great set of packages designed to improve upon the standard library for a variety of web-related packages. With these high-quality packages Buffalo can keep its &#34;core&#34; code to a minimum and focus on its goal of gluing them all together to make your life better.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Oh, yeah, everyone wants benchmarks! What would a web framework be without its benchmarks? Well, guess what? I&#39;m not giving you any! That&#39;s right. This is Go! I assure you that it is plenty fast enough for you. If you want benchmarks you can either a) check out any benchmarks that the &lt;a href=&#34;https://raw.githubusercontent.com/gobuffalo/buffalo/v1/SHOULDERS.md&#34;&gt;GIANTS&lt;/a&gt; Buffalo is built upon having published, or b) run your own. I have no interest in playing the benchmark game, and neither should you.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;First, thank you so much for wanting to contribute! It means so much that you care enough to want to contribute. We appreciate every PR from the smallest of typos to the be biggest of features.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Here are the core rules to respect&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have any question, please consider using the &lt;a href=&#34;https://gophers.slack.com/messages/buffalo/&#34;&gt;Slack channel&lt;/a&gt; (-#buffalo-, &lt;em&gt;#buffalo_fr&lt;/em&gt; or &lt;em&gt;#buffalo-dev&lt;/em&gt; for contribution related questions) or &lt;a href=&#34;https://stackoverflow.com/questions/tagged/buffalo&#34;&gt;Stack Overflow&lt;/a&gt;. We use GitHub issues for &lt;strong&gt;bug reports and feature requests only&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;All contributors of this project are working on their free time: be patient and kind. :-&lt;/li&gt; &#xA; &lt;li&gt;Consider opening an issue &lt;strong&gt;BEFORE&lt;/strong&gt; creating a Pull request (PR): you won&#39;t lose your time on fixing non-existing bugs, or fixing the wrong bug. Also we can help you to produce the best PR!&lt;/li&gt; &#xA; &lt;li&gt;Open a PR against the &lt;code&gt;main&lt;/code&gt; branch if your PR is for mainstream or version specific branch e.g. &lt;code&gt;v1&lt;/code&gt; if your PR is for specific version. Note that the valid branch for a new feature request PR should be &lt;code&gt;main&lt;/code&gt; while a PR against a version specific branch are allowed only for bugfixes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the full contribution guidelines, please read &lt;a href=&#34;https://raw.githubusercontent.com/gobuffalo/buffalo/v1/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>m1guelpf/chatgpt-discord</title>
    <updated>2022-12-13T01:33:09Z</updated>
    <id>tag:github.com,2022-12-13:/m1guelpf/chatgpt-discord</id>
    <link href="https://github.com/m1guelpf/chatgpt-discord" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run your own GPTChat Discord bot, with a single command!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT Discord Bot&lt;/h1&gt; &#xA;&lt;p&gt;Go CLI to power a Discord bot letting you interact with &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;ChatGPT&lt;/a&gt;, a large language model trained by OpenAI, collaboratively in Discord servers or privately in your DMs.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download the file corresponding to your OS in the &lt;a href=&#34;https://github.com/m1guelpf/chatgpt-discord/releases/latest&#34;&gt;releases page&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chatgpt-discord-Darwin-amd64&lt;/code&gt;: macOS (Intel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chatgpt-discord-Darwin-arm64&lt;/code&gt;: macOS (M1)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chatgpt-discord-Linux-amd64&lt;/code&gt;: Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chatgpt-discord-Linux-arm64&lt;/code&gt;: Linux (ARM)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chatgpt-discord-Win-amd64&lt;/code&gt;: Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After you download the file, extract it into a folder and open the &lt;code&gt;env.example&lt;/code&gt; file with a text editor and fill in your credentials. You&#39;ll need your bot token, which you can find &lt;a href=&#34;https://www.writebots.com/discord-bot-token/&#34;&gt;here&lt;/a&gt;, and optionally (if you want to prevent anyone else from using the bot) your Discord username. Save the file, and rename it to &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Make sure you rename the file to &lt;em&gt;exactly&lt;/em&gt; &lt;code&gt;.env&lt;/code&gt;! The program won&#39;t work otherwise.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Finally, open the terminal in your computer (if you&#39;re on windows, look for &lt;code&gt;PowerShell&lt;/code&gt;), navigate to the path you extracted the above file (you can use &lt;code&gt;cd dirname&lt;/code&gt; to navigate to a directory, ask ChatGPT if you need more assistance üòâ) and run &lt;code&gt;./chatgpt-discord&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authentication&lt;/h2&gt; &#xA;&lt;p&gt;By default, the program will launch a browser for you to sign into your account, and close it once you&#39;re signed in. If this setup doesn&#39;t work for you (there are issues with the browser starting, you want to run this in a computer with no screen, etc.), you can manually extract your session from your browser instead.&lt;/p&gt; &#xA;&lt;p&gt;To do this, first sign into ChatGPT on your browser, then open the Developer Tools (right click anywhere in the page, then click &#34;Inspect&#34;), click on the Application tab and then on the Cookies section, and copy the value of the &lt;code&gt;__Secure-next-auth.session-token&lt;/code&gt; cookie.&lt;/p&gt; &#xA;&lt;p&gt;You will then have to create a config file in the following location depending on your OS (replace &lt;code&gt;YOUR_USERNAME_HERE&lt;/code&gt; with your username:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.config/chatgpt.json&lt;/code&gt;: Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C:\Users\YOUR_USERNAME_HERE\AppData\Roaming\chatgpt.json&lt;/code&gt;: Windows&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/Users/YOUR_USERNAME_HERE/Library/Application Support/chatgpt.json&lt;/code&gt;: macOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; If you have already run the program, the file should exist but be empty. If it doesn&#39;t exist yet, you can either run the program or manually create it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Finally, add your cookie to the file and save it. It should look like this: &lt;code&gt;{ &#34;openaisession&#34;: &#34;YOUR_COOKIE_HERE&#34; }&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/m1guelpf/chatgpt-discord/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>