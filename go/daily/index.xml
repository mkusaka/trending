<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-08T01:28:49Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MartialBE/one-api</title>
    <updated>2024-04-08T01:28:49Z</updated>
    <id>tag:github.com,2024-04-08:/MartialBE/one-api</id>
    <link href="https://github.com/MartialBE/one-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenAI 接口管理 &amp; 分发系统，改自songquanpeng/one-api。支持更多模型，加入统计页面，完善非openai模型的函数调用。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/MartialBE/one-api/assets/42402987/c4125d1a-5577-446d-ba15-2a71c52140c1&#34;&gt; &#xA;  &lt;img height=&#34;90&#34; src=&#34;https://raw.githubusercontent.com/MartialBE/one-api/main/web/src/assets/images/logo.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;One API&lt;/h1&gt; &#xA; &lt;p&gt;&lt;em&gt;本项目是基于&lt;a href=&#34;https://github.com/songquanpeng/one-api&#34;&gt;one-api&lt;/a&gt;二次开发而来的，主要将原项目中的模块代码分离，模块化，并修改了前端界面。本项目同样遵循 MIT 协议。&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/MartialBE/one-api/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/MartialBE/one-api?color=brightgreen&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/MartialBE/one-api/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/MartialBE/one-api?color=brightgreen&amp;amp;include_prereleases&#34; alt=&#34;release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/users/MartialBE/packages/container/package/one-api&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docker-ghcr.io-blue&#34; alt=&#34;docker&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/martialbe/one-api&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docker-dockerHub-blue&#34; alt=&#34;docker&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/MartialBE/one-api&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/MartialBE/one-api&#34; alt=&#34;GoReportCard&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;请不要和原版混用，因为新增功能，数据库与原版不兼容&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://one-api-martialbe.vercel.app/&#34;&gt;演示网站&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;功能变化&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;全新的 UI 界面&lt;/li&gt; &#xA; &lt;li&gt;新增用户仪表盘&lt;/li&gt; &#xA; &lt;li&gt;新增管理员分析数据统计界面&lt;/li&gt; &#xA; &lt;li&gt;重构了中转&lt;code&gt;供应商&lt;/code&gt;模块&lt;/li&gt; &#xA; &lt;li&gt;支持使用&lt;code&gt;Azure Speech&lt;/code&gt;模拟&lt;code&gt;TTS&lt;/code&gt;功能&lt;/li&gt; &#xA; &lt;li&gt;渠道可配置单独的 http/socks5 代理&lt;/li&gt; &#xA; &lt;li&gt;支持动态返回用户模型列表&lt;/li&gt; &#xA; &lt;li&gt;支持自定义测速模型&lt;/li&gt; &#xA; &lt;li&gt;日志增加请求耗时&lt;/li&gt; &#xA; &lt;li&gt;支持和优化非 OpenAI 模型的函数调用（支持的模型可以在 lobe-chat 直接使用）&lt;/li&gt; &#xA; &lt;li&gt;支持完成倍率自定义&lt;/li&gt; &#xA; &lt;li&gt;支持完整的分页和排序&lt;/li&gt; &#xA; &lt;li&gt;支持&lt;code&gt;Telegram bot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持模型按次收费&lt;/li&gt; &#xA; &lt;li&gt;支持模型通配符&lt;/li&gt; &#xA; &lt;li&gt;支持使用配置文件启动程序&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;p&gt;请查看&lt;a href=&#34;https://github.com/MartialBE/one-api/wiki&#34;&gt;文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本程序使用了以下开源项目 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/songquanpeng/one-api&#34;&gt;one-api&lt;/a&gt;为本项目的基础&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/codedthemes/berry-free-react-admin-template&#34;&gt;Berry Free React Admin Template&lt;/a&gt;为本项目的前端界面&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/minimal-ui-kit/material-kit-react&#34;&gt;minimal-ui-kit&lt;/a&gt;,使用了其中的部分样式&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Calcium-Ion/new-api&#34;&gt;new api&lt;/a&gt;，Midjourney 模块的代码来源于此&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;感谢以上项目的作者和贡献者&lt;/p&gt; &#xA;&lt;h2&gt;其他&lt;/h2&gt; &#xA;&lt;a href=&#34;https://next.ossinsight.io/widgets/official/analyze-repo-stars-history?repo_id=689214770&#34; target=&#34;_blank&#34; style=&#34;display: block&#34; align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://next.ossinsight.io/widgets/official/analyze-repo-stars-history/thumbnail.png?repo_id=689214770&amp;amp;image_size=auto&amp;amp;color_scheme=dark&#34; width=&#34;721&#34; height=&#34;auto&#34;&gt; &#xA;  &lt;img alt=&#34;Star History of MartialBE/one-api&#34; src=&#34;https://next.ossinsight.io/widgets/official/analyze-repo-stars-history/thumbnail.png?repo_id=689214770&amp;amp;image_size=auto&amp;amp;color_scheme=light&#34; width=&#34;721&#34; height=&#34;auto&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>aurora-develop/aurora</title>
    <updated>2024-04-08T01:28:49Z</updated>
    <id>tag:github.com,2024-04-08:/aurora-develop/aurora</id>
    <link href="https://github.com/aurora-develop/aurora" rel="alternate"></link>
    <summary type="html">&lt;p&gt;free&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AURORA&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aurora-develop/aurora/raw/main/README_EN.md&#34;&gt;README_EN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;（带UI）免费的GPT3.5，支持使用3.5的access 调用&lt;/p&gt; &#xA;&lt;h1&gt;交流群&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/aurora_develop&#34;&gt;https://t.me/aurora_develop&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Web端&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://jsd.cdn.zzko.cn/gh/xiaozhou26/tuph@main/images/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-07%20111706.png&#34; alt=&#34;web使用&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;注：仅ip属地支持免登录使用ChatGpt可以使用(也可以自定义Baseurl来绕过限制)&lt;/h3&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;h3&gt;Vercel部署&lt;/h3&gt; &#xA;&lt;p&gt;由于vercel不支持流式，如果在vercel部署请在STREAM_MODE中填False，不支持任何默认流式的客户端，支持沉浸式翻译。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Faurora-develop%2Faurora&amp;amp;env=STREAM_MODE&amp;amp;project-name=aurora&amp;amp;repository-name=aurora&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Render部署&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://render.com/deploy&#34;&gt;&lt;img src=&#34;https://render.com/images/deploy-to-render-button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Koyeb部署&lt;/h3&gt; &#xA;&lt;p&gt;地区选美国&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.koyeb.com/deploy?type=docker&amp;amp;name=aurora&amp;amp;ports=8080;http;/&amp;amp;image=ghcr.io/aurora-develop/aurora&#34;&gt;&lt;img src=&#34;https://www.koyeb.com/static/images/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy to Koyeb&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Railway部署&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/template/jcl2Es?referralCode=XXqY_5&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zeabur部署&lt;/h3&gt; &#xA;&lt;p&gt;进入修改镜像名称aurora+任何字母数字&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zeabur.com/templates/JF3EFW&#34;&gt;&lt;img src=&#34;https://zeabur.com/button.svg?sanitize=true&#34; alt=&#34;Deploy on Zeabur&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;编译部署&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aurora-develop/aurora&#xA;cd aurora&#xA;go build -o aurora&#xA;chmod +x ./aurora&#xA;./aurora&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker部署&lt;/h3&gt; &#xA;&lt;h2&gt;Docker部署&lt;/h2&gt; &#xA;&lt;p&gt;您需要安装Docker和Docker Compose。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name aurora \&#xA;  -p 8080:8080 \&#xA;  ghcr.io/aurora-develop/aurora:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Compose部署&lt;/h2&gt; &#xA;&lt;p&gt;创建一个新的目录，例如aurora-app，并进入该目录：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir aurora&#xA;cd aurora&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;在此目录中下载库中的docker-compose.yml文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://你的服务器ip:8080/v1/chat/completions&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;{&#xA;     &#34;model&#34;: &#34;gpt-3.5-turbo&#34;,&#xA;     &#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Say this is a test!&#34;}],&#xA;     &#34;stream&#34;: true&#xA;   }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;高级设置&lt;/h2&gt; &#xA;&lt;p&gt;默认情况不需要设置，除非你有需求&lt;/p&gt; &#xA;&lt;h3&gt;环境变量&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;BASE_URL=&#34;https://auroraxf.glitch.me/api&#34; 代理网关&#xA;Authorization=your_authorization  用户认证 key。&#xA;TLS_CERT=path_to_your_tls_cert 存储TLS（传输层安全协议）证书的路径。&#xA;TLS_KEY=path_to_your_tls_key 存储TLS（传输层安全协议）证书的路径。&#xA;PROXY_URL=your_proxy_url 添加代理池来。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢各位大佬的pr支持，感谢。&lt;/p&gt; &#xA;&lt;h2&gt;参考项目&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xqdoo00o/ChatGPT-to-API&#34;&gt;https://github.com/xqdoo00o/ChatGPT-to-API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt;</summary>
  </entry>
</feed>