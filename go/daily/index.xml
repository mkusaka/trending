<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-16T01:33:56Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Azure/azqr</title>
    <updated>2024-01-16T01:33:56Z</updated>
    <id>tag:github.com,2024-01-16:/Azure/azqr</id>
    <link href="https://github.com/Azure/azqr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Azure Quick Review&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/Azure/azqr/actions/workflows/build.yaml&#34;&gt;&lt;img src=&#34;https://github.com/Azure/azqr/actions/workflows/build.yaml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Azure/azqr/actions/workflows/codeql.yml&#34;&gt;&lt;img src=&#34;https://github.com/Azure/azqr/actions/workflows/codeql.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Azure/azqr/total.svg?sanitize=true&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Azure/azqr&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Azure/azqr/branch/main/graph/badge.svg?token=VReik9rs3l&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/Azure/azqr&#34; title=&#34;Average time to resolve an issue&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/resolution/Azure/azqr.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/Azure/azqr&#34; title=&#34;Percentage of issues still open&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/open/Azure/azqr.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Azure Quick Review&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/github/Azure/azqr&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open%20in-vscode.dev-blue&#34; alt=&#34;Open in vscode.dev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Azure Quick Review (azqr)&lt;/strong&gt; is a command-line interface (CLI) tool specifically designed to analyze Azure resources and identify whether they comply with Azure&#39;s best practices and recommendations. Its primary purpose is to provide users with a detailed overview of their Azure resources, enabling them to easily identify any non-compliant configurations or potential areas for improvement.&lt;/p&gt; &#xA;&lt;h2&gt;Scan Results&lt;/h2&gt; &#xA;&lt;p&gt;The output generated by &lt;strong&gt;Azure Quick Review (azqr)&lt;/strong&gt; is presented in the form of an Excel file, which consists of several sheets including &lt;strong&gt;Overview&lt;/strong&gt;, &lt;strong&gt;Recommendations&lt;/strong&gt;, &lt;strong&gt;Services&lt;/strong&gt;, &lt;strong&gt;Defender&lt;/strong&gt;, &lt;strong&gt;Advisor&lt;/strong&gt; and &lt;strong&gt;Costs&lt;/strong&gt;. Additionally, when running the tool on a Windows system, it also generates a Power BI Desktop Template for further analysis and visualization of the Azure resource data.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Overview&lt;/strong&gt; sheet provides a summary of the Azure resources scanned by the tool, including the following information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SubscriptionID&lt;/strong&gt;: This is the unique identifier for the Azure subscription under which the resource is deployed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ResourceGroup&lt;/strong&gt;: The resource group where the resource is deployed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Location&lt;/strong&gt;: The geographical region where the resource is deployed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;: The specific type or category of the Azure resource.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: The name assigned to the resource, providing a human-readable identifier for easy reference and management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SKU&lt;/strong&gt;: The SKU represents the specific variant or configuration of the Azure resource. It defines the characteristics and capabilities of the resource.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SLA&lt;/strong&gt;: The Service Level Agreement (SLA) represents the agreed-upon performance and availability guarantees for the Azure service based on its current configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AZ&lt;/strong&gt;: A Boolean value indicating whether the service is &#34;Availability Zone aware.&#34; Availability Zones are physically separate datacenters within an Azure region, providing increased resiliency and fault tolerance for critical services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PVT&lt;/strong&gt;: A Boolean value indicating whether the service has a private IP address. Private IP addresses are used for internal communication within Azure Virtual Networks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DS&lt;/strong&gt;: A Boolean value indicating whether diagnostic settings are enabled for the service. Diagnostic settings allow you to collect logs, metrics, and other monitoring data for Azure resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CAF&lt;/strong&gt;: A Boolean value indicating whether the service is compliant with the &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/azure-best-practices/resource-abbreviations&#34;&gt;Cloud Adoption Framework&lt;/a&gt; (CAF) naming convention. The CAF provides best practices and guidance for organizations adopting Azure.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;By default, Azure Quick Review (azqr) masks the Subscription Ids in the spreadsheet, ensuring that they are not directly visible in the output. This helps protect sensitive information and maintain data privacy and security. To view the Subscription Ids, you can use the &lt;code&gt;--mask=false&lt;/code&gt; flag when running the tool.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To learn more about the &lt;strong&gt;Recommendations&lt;/strong&gt;, &lt;strong&gt;Services&lt;/strong&gt;, &lt;strong&gt;Defender&lt;/strong&gt;, &lt;strong&gt;Advisor&lt;/strong&gt; and &lt;strong&gt;Costs&lt;/strong&gt; sheets, check the &lt;a href=&#34;https://azure.github.io/azqr/docs/results&#34;&gt;Scan Results&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Azure Quick Review Rules&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about the rules used by &lt;strong&gt;Azure Quick Review (azqr)&lt;/strong&gt; for generating recommendations, you can refer to the documentation available &lt;a href=&#34;https://azure.github.io/azqr/docs/rules&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Azure Services&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Azure Quick Review (azqr)&lt;/strong&gt; currently supports the following Azure services:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Azure API Management&lt;/li&gt; &#xA; &lt;li&gt;Azure App Configuration&lt;/li&gt; &#xA; &lt;li&gt;Azure App Services&lt;/li&gt; &#xA; &lt;li&gt;Azure Application Gateway&lt;/li&gt; &#xA; &lt;li&gt;Azure Application Insights&lt;/li&gt; &#xA; &lt;li&gt;Azure Cache for Redis&lt;/li&gt; &#xA; &lt;li&gt;Azure Cognitive Services Account&lt;/li&gt; &#xA; &lt;li&gt;Azure Container Apps Environment&lt;/li&gt; &#xA; &lt;li&gt;Azure Container Apps&lt;/li&gt; &#xA; &lt;li&gt;Azure Container Instances&lt;/li&gt; &#xA; &lt;li&gt;Azure Container Registry&lt;/li&gt; &#xA; &lt;li&gt;Azure Cosmos DB&lt;/li&gt; &#xA; &lt;li&gt;Azure Databricks&lt;/li&gt; &#xA; &lt;li&gt;Azure Data Explorer&lt;/li&gt; &#xA; &lt;li&gt;Azure Data Factory&lt;/li&gt; &#xA; &lt;li&gt;Azure Database for MariaDB&lt;/li&gt; &#xA; &lt;li&gt;Azure Database for MySQL Flexible Server&lt;/li&gt; &#xA; &lt;li&gt;Azure Database for MySQL Single Server&lt;/li&gt; &#xA; &lt;li&gt;Azure Database for PostgreSQL Flexible Server&lt;/li&gt; &#xA; &lt;li&gt;Azure Database for PostgreSQL Single Server&lt;/li&gt; &#xA; &lt;li&gt;Azure Event Grid&lt;/li&gt; &#xA; &lt;li&gt;Azure Event Hub&lt;/li&gt; &#xA; &lt;li&gt;Azure Firewall&lt;/li&gt; &#xA; &lt;li&gt;Azure Front Door&lt;/li&gt; &#xA; &lt;li&gt;Azure Functions&lt;/li&gt; &#xA; &lt;li&gt;Azure Key Vault&lt;/li&gt; &#xA; &lt;li&gt;Azure Kubernetes Service&lt;/li&gt; &#xA; &lt;li&gt;Azure Load Balancer&lt;/li&gt; &#xA; &lt;li&gt;Azure Logic Apps&lt;/li&gt; &#xA; &lt;li&gt;Azure Service Bus&lt;/li&gt; &#xA; &lt;li&gt;Azure SignalR Service&lt;/li&gt; &#xA; &lt;li&gt;Azure SQL Database&lt;/li&gt; &#xA; &lt;li&gt;Azure Storage Account&lt;/li&gt; &#xA; &lt;li&gt;Azure Traffic Manager&lt;/li&gt; &#xA; &lt;li&gt;Azure Virtual Machine&lt;/li&gt; &#xA; &lt;li&gt;Azure Virtual Network&lt;/li&gt; &#xA; &lt;li&gt;Azure Virtual WAN&lt;/li&gt; &#xA; &lt;li&gt;Azure Web PubSub&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Install on Linux or Azure Cloud Shell&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;latest_azqr=$(curl -sL https://api.github.com/repos/Azure/azqr/releases/latest | jq -r &#34;.tag_name&#34; | cut -c1-)&#xA;wget https://github.com/Azure/azqr/releases/download/$latest_azqr/azqr-ubuntu-latest-amd64 -O azqr&#xA;chmod +x azqr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install on Mac&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest release from &lt;a href=&#34;https://github.com/Azure/azqr/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install on Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;winget install azqr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Azure Quick Review (azqr)&lt;/strong&gt; supports the following authentication methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Azure CLI&lt;/li&gt; &#xA; &lt;li&gt;Service Principal. You&#39;ll need to set the following environment variables: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AZURE_CLIENT_ID&lt;/li&gt; &#xA;   &lt;li&gt;AZURE_CLIENT_SECRET&lt;/li&gt; &#xA;   &lt;li&gt;AZURE_TENANT_ID&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Authorization&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Azure Quick Review (azqr)&lt;/strong&gt; requires the following permissions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Subscription Reader&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the Scan&lt;/h3&gt; &#xA;&lt;p&gt;To scan all resource groups in all subscription run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./azqr scan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To scan all resource groups in a specific subscription run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./azqr scan -s &amp;lt;subscription_id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To scan a specific resource group in a specific subscription run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./azqr scan -s &amp;lt;subscription_id&amp;gt; -g &amp;lt;resource_group_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For information on available commands and help run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./azqr -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any issue while using &lt;strong&gt;Azure Quick Review (azqr)&lt;/strong&gt;, please set the &lt;code&gt;AZURE_SDK_GO_LOGGING&lt;/code&gt; environment variable to &lt;code&gt;all&lt;/code&gt;, run the tool with the &lt;code&gt;--debug&lt;/code&gt; flag and then share the console output with us by filing a new &lt;a href=&#34;https://github.com/Azure/azqr/issues&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;This project uses GitHub Issues to track bugs and feature requests. Before logging an issue please check our &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azqr/main/#troubleshooting&#34;&gt;troubleshooting&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;Please search the existing issues before filing new issues to avoid duplicates.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For new issues, file your bug or feature request as a new &lt;a href=&#34;https://github.com/Azure/azqr/issues&#34;&gt;issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For help, discussion, and support questions about using this project, join or start a &lt;a href=&#34;https://github.com/Azure/azqr/discussions&#34;&gt;discussion&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Support for this project / product is limited to the resources listed above.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to everyone who has contributed!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/Azure/azqr/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=Azure/azqr&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azqr/main/CODE_OF_CONDUCT.md&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Trademark Notice&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Trademarks&lt;/strong&gt; This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow Microsoft’s Trademark &amp;amp; Brand Guidelines. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party’s policies.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>synctv-org/synctv</title>
    <updated>2024-01-16T01:33:56Z</updated>
    <id>tag:github.com,2024-01-16:/synctv-org/synctv</id>
    <link href="https://github.com/synctv-org/synctv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Synchronized viewing, theater, live streaming, video, long-distance relationship&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/synctv-org/docs&#34;&gt;&lt;img height=&#34;100px&#34; alt=&#34;logo&#34; src=&#34;https://cdn.jsdelivr.net/gh/synctv-org/docs@main/logo/logo.png&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;em&gt;👫A program that allows you to watch movies/live broadcasts together remotely🍿&lt;/em&gt;&lt;/p&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://goreportcard.com/report/github.com/synctv-org/synctv&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/synctv-org/synctv&#34; alt=&#34;latest version&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/synctv-org/synctv/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/synctv-org/synctv&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/synctv-org/synctv/actions?query=workflow%3Abuild&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/synctv-org/synctv/build.yml?branch=main&#34; alt=&#34;Build status&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/synctv-org/synctv/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/synctv-org/synctv&#34; alt=&#34;latest version&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://github.com/synctv-org/synctv/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/synctv-org/synctv/total?color=%239F7AEA&amp;amp;logo=github&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://hub.docker.com/r/synctvorg/synctv&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/synctvorg/synctv?color=%2348BB78&amp;amp;logo=docker&amp;amp;label=pulls&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/synctv-org/synctv/main/README-CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is SyncTV?&lt;/h1&gt; &#xA;&lt;p&gt;SyncTV is a program that allows you to watch movies and live broadcasts together remotely. It provides synchronized viewing, theater, and proxy features. With SyncTV, you can watch videos and live streams with your friends and family, no matter where they are.&lt;/p&gt; &#xA;&lt;p&gt;SyncTV&#39;s synchronized viewing feature ensures that everyone watching the video is at the same point in the video. This means that you can pause, rewind, or fast-forward the video, and everyone else will be synced to the same point. SyncTV also supports live streaming, so you can watch live events together in real-time.&lt;/p&gt; &#xA;&lt;p&gt;The theater feature provides a chat and bullet chat function, allowing you to communicate with your friends and family while watching the video. The proxy feature allows you to watch videos and live streams that may be connect to origin server slow.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Synchronized viewing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Videos Sync&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Live streaming&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Theater &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chat&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bullet chat&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Proxy &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Videos proxy&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Live proxy&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Parse &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Parse video &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Alist&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bilibili&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Emby&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Parse live&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Demo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://demo.synctv.wiki&#34;&gt;https://demo.synctv.wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Binary&lt;/h2&gt; &#xA;&lt;p&gt;You can download the latest binary from &lt;a href=&#34;https://github.com/synctv-org/synctv/releases&#34;&gt;release page&lt;/a&gt; and install it manually.&lt;/p&gt; &#xA;&lt;h2&gt;Script&lt;/h2&gt; &#xA;&lt;p&gt;You can use the script to install and run SyncTV.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo -v ; curl -fsSL https://raw.gitmirror.com/synctv-org/synctv/main/script/install.sh | sudo bash -s -- -v latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;You can also use docker to install and run SyncTV.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name synctv -p 8080:8080 synctvorg/synctv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Run&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;synctv server&lt;/code&gt; to start the server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;synctv server&#xA;# or&#xA;synctv server --data-dir ./&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Every time it starts, it will check for users with root permissions. If none are found, it will initialize a &lt;code&gt;root&lt;/code&gt; user with the password &lt;code&gt;root&lt;/code&gt;. Please change the username and password promptly.&lt;/p&gt; &#xA; &lt;p&gt;The user registration function requires the use of any &lt;code&gt;OAuth2&lt;/code&gt; service, such as &lt;code&gt;Google&lt;/code&gt;, &lt;code&gt;Github&lt;/code&gt;, etc. For specific configuration, please refer to &lt;a href=&#34;https://synctv.wiki/#/oauth2&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://synctv.wiki&#34;&gt;https://synctv.wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Special sponsors&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.asiayun.com&#34;&gt;亚洲云&lt;/a&gt; supports the server for the demo site.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/synctv-org/synctv/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.nn.ci/api?repo=synctv-org/synctv&amp;amp;repo=synctv-org/synctv-web&amp;amp;repo=synctv-org/docs&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;SyncTV&lt;/code&gt; is open-source software licensed under the AGPL-3.0 license.&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This program is a free and open-source project. It aims to play video files on the internet, making it convenient for multiple people to watch videos and learn golang together.&lt;/li&gt; &#xA; &lt;li&gt;Please comply with relevant laws and regulations when using it, and do not abuse it.&lt;/li&gt; &#xA; &lt;li&gt;The program only plays video files/forwards traffic on the client-side and will not intercept, store, or tamper with any user data.&lt;/li&gt; &#xA; &lt;li&gt;Before using the program, you should understand and assume the corresponding risks, including but not limited to copyright disputes, legal restrictions, etc., which are not related to the program.&lt;/li&gt; &#xA; &lt;li&gt;If there is any infringement, please contact me via &lt;a href=&#34;mailto:pyh1670605849@gmail.com&#34;&gt;email&lt;/a&gt;, and it will be dealt with promptly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Discussion&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/synctv&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dutchcoders/transfer.sh</title>
    <updated>2024-01-16T01:33:56Z</updated>
    <id>tag:github.com,2024-01-16:/dutchcoders/transfer.sh</id>
    <link href="https://github.com/dutchcoders/transfer.sh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy and fast file sharing from the command-line.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;transfer.sh &lt;a href=&#34;https://goreportcard.com/report/github.com/dutchcoders/transfer.sh&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dutchcoders/transfer.sh/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg?sanitize=true&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dutchcoders/transfer.sh/actions/workflows/test.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/dutchcoders/transfer.sh/actions/workflows/test.yml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Easy and fast file sharing from the command-line. This code contains the server with everything you need to create your own instance.&lt;/p&gt; &#xA;&lt;p&gt;Transfer.sh currently supports the s3 (Amazon S3), gdrive (Google Drive), storj (Storj) providers, and local file system (local).&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The service at transfersh.com is of unknown origin and reported as cloud malware.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Upload:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -v --upload-file ./hello.txt https://transfer.sh/hello.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Encrypt &amp;amp; Upload:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file &#34;-&#34; https://transfer.sh/test.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download &amp;amp; Decrypt:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl https://transfer.sh/1lDau/test.txt|gpg -o- &amp;gt; /tmp/hello.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload to Virustotal:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deleting&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -X DELETE &amp;lt;X-Url-Delete Response Header URL&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Request Headers&lt;/h2&gt; &#xA;&lt;h3&gt;Max-Downloads&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt -H &#34;Max-Downloads: 1&#34; # Limit the number of downloads&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Max-Days&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt -H &#34;Max-Days: 1&#34; # Set the number of days before deletion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;X-Encrypt-Password&lt;/h3&gt; &#xA;&lt;h4&gt;Beware, use this feature only on your self-hosted server: trusting a third-party service for server side encryption is at your own risk&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl --upload-file ./hello.txt https://your-transfersh-instance.tld/hello.txt -H &#34;X-Encrypt-Password: test&#34; # Encrypt the content sever side with AES265 using &#34;test&#34; as password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;X-Decrypt-Password&lt;/h3&gt; &#xA;&lt;h4&gt;Beware, use this feature only on your self-hosted server: trusting a third-party service for server side encryption is at your own risk&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl https://your-transfersh-instance.tld/BAYh0/hello.txt -H &#34;X-Decrypt-Password: test&#34; # Decrypt the content sever side with AES265 using &#34;test&#34; as password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Response Headers&lt;/h2&gt; &#xA;&lt;h3&gt;X-Url-Delete&lt;/h3&gt; &#xA;&lt;p&gt;The URL used to request the deletion of a file and returned as a response header.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sD - --upload-file ./hello.txt https://transfer.sh/hello.txt | grep -i -E &#39;transfer\.sh|x-url-delete&#39;&#xA;x-url-delete: https://transfer.sh/hello.txt/BAYh0/hello.txt/PDw0NHPcqU&#xA;https://transfer.sh/hello.txt/BAYh0/hello.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;See good usage examples on &lt;a href=&#34;https://raw.githubusercontent.com/dutchcoders/transfer.sh/main/examples.md&#34;&gt;examples.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Link aliases&lt;/h2&gt; &#xA;&lt;p&gt;Create direct download link:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://transfer.sh/1lDau/test.txt&#34;&gt;https://transfer.sh/1lDau/test.txt&lt;/a&gt; --&amp;gt; &lt;a href=&#34;https://transfer.sh/get/1lDau/test.txt&#34;&gt;https://transfer.sh/get/1lDau/test.txt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inline file:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://transfer.sh/1lDau/test.txt&#34;&gt;https://transfer.sh/1lDau/test.txt&lt;/a&gt; --&amp;gt; &lt;a href=&#34;https://transfer.sh/inline/1lDau/test.txt&#34;&gt;https://transfer.sh/inline/1lDau/test.txt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Env&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;listener&lt;/td&gt; &#xA;   &lt;td&gt;port to use for http (:80)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LISTENER&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;profile-listener&lt;/td&gt; &#xA;   &lt;td&gt;port to use for profiler (:6060)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PROFILE_LISTENER&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;force-https&lt;/td&gt; &#xA;   &lt;td&gt;redirect to https&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;FORCE_HTTPS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-listener&lt;/td&gt; &#xA;   &lt;td&gt;port to use for https (:443)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TLS_LISTENER&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-listener-only&lt;/td&gt; &#xA;   &lt;td&gt;flag to enable tls listener only&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TLS_LISTENER_ONLY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-cert-file&lt;/td&gt; &#xA;   &lt;td&gt;path to tls certificate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TLS_CERT_FILE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-private-key&lt;/td&gt; &#xA;   &lt;td&gt;path to tls private key&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TLS_PRIVATE_KEY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;http-auth-user&lt;/td&gt; &#xA;   &lt;td&gt;user for basic http auth on upload&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP_AUTH_USER&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;http-auth-pass&lt;/td&gt; &#xA;   &lt;td&gt;pass for basic http auth on upload&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP_AUTH_PASS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;http-auth-htpasswd&lt;/td&gt; &#xA;   &lt;td&gt;htpasswd file path for basic http auth on upload&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP_AUTH_HTPASSWD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;http-auth-ip-whitelist&lt;/td&gt; &#xA;   &lt;td&gt;comma separated list of ips allowed to upload without being challenged an http auth&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP_AUTH_IP_WHITELIST&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ip-whitelist&lt;/td&gt; &#xA;   &lt;td&gt;comma separated list of ips allowed to connect to the service&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IP_WHITELIST&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ip-blacklist&lt;/td&gt; &#xA;   &lt;td&gt;comma separated list of ips not allowed to connect to the service&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IP_BLACKLIST&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;temp-path&lt;/td&gt; &#xA;   &lt;td&gt;path to temp folder&lt;/td&gt; &#xA;   &lt;td&gt;system temp&lt;/td&gt; &#xA;   &lt;td&gt;TEMP_PATH&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web-path&lt;/td&gt; &#xA;   &lt;td&gt;path to static web files (for development or custom front end)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;WEB_PATH&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;proxy-path&lt;/td&gt; &#xA;   &lt;td&gt;path prefix when service is run behind a proxy&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PROXY_PATH&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;proxy-port&lt;/td&gt; &#xA;   &lt;td&gt;port of the proxy when the service is run behind a proxy&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PROXY_PORT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;email-contact&lt;/td&gt; &#xA;   &lt;td&gt;email contact for the front end&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;EMAIL_CONTACT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ga-key&lt;/td&gt; &#xA;   &lt;td&gt;google analytics key for the front end&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GA_KEY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;provider&lt;/td&gt; &#xA;   &lt;td&gt;which storage provider to use&lt;/td&gt; &#xA;   &lt;td&gt;(s3, storj, gdrive or local)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uservoice-key&lt;/td&gt; &#xA;   &lt;td&gt;user voice key for the front end&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;USERVOICE_KEY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;aws-access-key&lt;/td&gt; &#xA;   &lt;td&gt;aws access key&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AWS_ACCESS_KEY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;aws-secret-key&lt;/td&gt; &#xA;   &lt;td&gt;aws access key&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AWS_SECRET_KEY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bucket&lt;/td&gt; &#xA;   &lt;td&gt;aws bucket&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;BUCKET&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s3-endpoint&lt;/td&gt; &#xA;   &lt;td&gt;Custom S3 endpoint.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;S3_ENDPOINT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s3-region&lt;/td&gt; &#xA;   &lt;td&gt;region of the s3 bucket&lt;/td&gt; &#xA;   &lt;td&gt;eu-west-1&lt;/td&gt; &#xA;   &lt;td&gt;S3_REGION&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s3-no-multipart&lt;/td&gt; &#xA;   &lt;td&gt;disables s3 multipart upload&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;S3_NO_MULTIPART&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s3-path-style&lt;/td&gt; &#xA;   &lt;td&gt;Forces path style URLs, required for Minio.&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;S3_PATH_STYLE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;storj-access&lt;/td&gt; &#xA;   &lt;td&gt;Access for the project&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STORJ_ACCESS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;storj-bucket&lt;/td&gt; &#xA;   &lt;td&gt;Bucket to use within the project&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;STORJ_BUCKET&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;basedir&lt;/td&gt; &#xA;   &lt;td&gt;path storage for local/gdrive provider&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;BASEDIR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gdrive-client-json-filepath&lt;/td&gt; &#xA;   &lt;td&gt;path to oauth client json config for gdrive provider&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GDRIVE_CLIENT_JSON_FILEPATH&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gdrive-local-config-path&lt;/td&gt; &#xA;   &lt;td&gt;path to store local transfer.sh config cache for gdrive provider&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GDRIVE_LOCAL_CONFIG_PATH&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gdrive-chunk-size&lt;/td&gt; &#xA;   &lt;td&gt;chunk size for gdrive upload in megabytes, must be lower than available memory (8 MB)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GDRIVE_CHUNK_SIZE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lets-encrypt-hosts&lt;/td&gt; &#xA;   &lt;td&gt;hosts to use for lets encrypt certificates (comma seperated)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HOSTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;log&lt;/td&gt; &#xA;   &lt;td&gt;path to log file&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LOG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cors-domains&lt;/td&gt; &#xA;   &lt;td&gt;comma separated list of domains for CORS, setting it enable CORS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CORS_DOMAINS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clamav-host&lt;/td&gt; &#xA;   &lt;td&gt;host for clamav feature&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CLAMAV_HOST&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;perform-clamav-prescan&lt;/td&gt; &#xA;   &lt;td&gt;prescan every upload through clamav feature (clamav-host must be a local clamd unix socket)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PERFORM_CLAMAV_PRESCAN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rate-limit&lt;/td&gt; &#xA;   &lt;td&gt;request per minute&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;RATE_LIMIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;max-upload-size&lt;/td&gt; &#xA;   &lt;td&gt;max upload size in kilobytes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MAX_UPLOAD_SIZE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;purge-days&lt;/td&gt; &#xA;   &lt;td&gt;number of days after the uploads are purged automatically&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PURGE_DAYS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;purge-interval&lt;/td&gt; &#xA;   &lt;td&gt;interval in hours to run the automatic purge for (not applicable to S3 and Storj)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PURGE_INTERVAL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;random-token-length&lt;/td&gt; &#xA;   &lt;td&gt;length of the random token for the upload path (double the size for delete path)&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;RANDOM_TOKEN_LENGTH&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you want to use TLS using lets encrypt certificates, set lets-encrypt-hosts to your domain, set tls-listener to :443 and enable force-https.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert-file and tls-private-key.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Switched to GO111MODULE&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go run main.go --provider=local --listener :8080 --temp-path=/tmp/ --basedir=/tmp/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:dutchcoders/transfer.sh.git&#xA;$ cd transfer.sh&#xA;$ go build -o transfersh main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;For easy deployment, we&#39;ve created an official Docker container. There are two variants, differing only by which user runs the process.&lt;/p&gt; &#xA;&lt;p&gt;The default one will run as &lt;code&gt;root&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --publish 8080:8080 dutchcoders/transfer.sh:latest --provider local --basedir /tmp/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The one tagged with the suffix &lt;code&gt;-noroot&lt;/code&gt; will use &lt;code&gt;5000&lt;/code&gt; as both UID and GID:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --publish 8080:8080 dutchcoders/transfer.sh:latest-noroot --provider local --basedir /tmp/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building the Container&lt;/h3&gt; &#xA;&lt;p&gt;You can also build the container yourself. This allows you to choose which UID/GID will be used, e.g. when using NFS mounts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Build arguments:&#xA;# * RUNAS: If empty, the container will run as root.&#xA;#          Set this to anything to enable UID/GID selection.&#xA;# * PUID:  UID of the process. Needs RUNAS != &#34;&#34;. Defaults to 5000.&#xA;# * PGID:  GID of the process. Needs RUNAS != &#34;&#34;. Defaults to 5000.&#xA;&#xA;docker build -t transfer.sh-noroot --build-arg RUNAS=doesntmatter --build-arg PUID=1337 --build-arg PGID=1338 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;S3 Usage&lt;/h2&gt; &#xA;&lt;p&gt;For the usage with a AWS S3 Bucket, you just need to specify the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;provider &lt;code&gt;--provider s3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;aws-access-key &lt;em&gt;(either via flag or environment variable &lt;code&gt;AWS_ACCESS_KEY&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;aws-secret-key &lt;em&gt;(either via flag or environment variable &lt;code&gt;AWS_SECRET_KEY&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;bucket &lt;em&gt;(either via flag or environment variable &lt;code&gt;BUCKET&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;s3-region &lt;em&gt;(either via flag or environment variable &lt;code&gt;S3_REGION&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you specify the s3-region, you don&#39;t need to set the endpoint URL since the correct endpoint will used automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Custom S3 providers&lt;/h3&gt; &#xA;&lt;p&gt;To use a custom non-AWS S3 provider, you need to specify the endpoint as defined from your cloud provider.&lt;/p&gt; &#xA;&lt;h2&gt;Storj Network Provider&lt;/h2&gt; &#xA;&lt;p&gt;To use the Storj Network as a storage provider you need to specify the following flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;provider &lt;code&gt;--provider storj&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;storj-access &lt;em&gt;(either via flag or environment variable STORJ_ACCESS)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;storj-bucket &lt;em&gt;(either via flag or environment variable STORJ_BUCKET)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Creating Bucket and Scope&lt;/h3&gt; &#xA;&lt;p&gt;You need to create an access grant (or copy it from the uplink configuration) and a bucket in preparation.&lt;/p&gt; &#xA;&lt;p&gt;To get started, log in to your account and go to the Access Grant Menu and start the Wizard on the upper right.&lt;/p&gt; &#xA;&lt;p&gt;Enter your access grant name of choice, hit &lt;em&gt;Next&lt;/em&gt; and restrict it as necessary/preferred. Afterwards continue either in CLI or within the Browser. Next, you&#39;ll be asked for a Passphrase used as Encryption Key. &lt;strong&gt;Make sure to save it in a safe place. Without it, you will lose the ability to decrypt your files!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Afterwards, you can copy the access grant and then start the startup of the transfer.sh endpoint. It is recommended to provide both the access grant and the bucket name as ENV Variables for enhanced security.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export STORJ_BUCKET=&amp;lt;BUCKET NAME&amp;gt;&#xA;export STORJ_ACCESS=&amp;lt;ACCESS GRANT&amp;gt;&#xA;transfer.sh --provider storj&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Google Drive Usage&lt;/h2&gt; &#xA;&lt;p&gt;For the usage with Google drive, you need to specify the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;provider&lt;/li&gt; &#xA; &lt;li&gt;gdrive-client-json-filepath&lt;/li&gt; &#xA; &lt;li&gt;gdrive-local-config-path&lt;/li&gt; &#xA; &lt;li&gt;basedir&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Creating Gdrive Client Json&lt;/h3&gt; &#xA;&lt;p&gt;You need to create an OAuth Client id from console.cloud.google.com, download the file, and place it into a safe directory.&lt;/p&gt; &#xA;&lt;h3&gt;Usage example&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;go run main.go --provider gdrive --basedir /tmp/ --gdrive-client-json-filepath /[credential_dir] --gdrive-local-config-path [directory_to_save_config] &lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Shell functions&lt;/h2&gt; &#xA;&lt;h3&gt;Bash, ash and zsh (multiple files uploaded as zip archive)&lt;/h3&gt; &#xA;&lt;h5&gt;Add this to .bashrc or .zshrc or its equivalent&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;transfer() (if [ $# -eq 0 ]; then printf &#34;No arguments specified.\nUsage:\n transfer &amp;lt;file|directory&amp;gt;\n ... | transfer &amp;lt;file_name&amp;gt;\n&#34;&amp;gt;&amp;amp;2; return 1; fi; file_name=$(basename &#34;$1&#34;); if [ -t 0 ]; then file=&#34;$1&#34;; if [ ! -e &#34;$file&#34; ]; then echo &#34;$file: No such file or directory&#34;&amp;gt;&amp;amp;2; return 1; fi; if [ -d &#34;$file&#34; ]; then cd &#34;$file&#34; || return 1; file_name=&#34;$file_name.zip&#34;; set -- zip -r -q - .; else set -- cat &#34;$file&#34;; fi; else set -- cat; fi; url=$(&#34;$@&#34; | curl --silent --show-error --progress-bar --upload-file &#34;-&#34; &#34;https://transfer.sh/$file_name&#34;); echo &#34;$url&#34;; )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Now you can use transfer function&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ transfer hello.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bash and zsh (with delete url, delete token output and prompt before uploading)&lt;/h3&gt; &#xA;&lt;h5&gt;Add this to .bashrc or .zshrc or its equivalent&lt;/h5&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Expand&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;transfer()&#xA;{&#xA;    local file&#xA;    declare -a file_array&#xA;    file_array=(&#34;${@}&#34;)&#xA;&#xA;    if [[ &#34;${file_array[@]}&#34; == &#34;&#34; || &#34;${1}&#34; == &#34;--help&#34; || &#34;${1}&#34; == &#34;-h&#34; ]]&#xA;    then&#xA;        echo &#34;${0} - Upload arbitrary files to \&#34;transfer.sh\&#34;.&#34;&#xA;        echo &#34;&#34;&#xA;        echo &#34;Usage: ${0} [options] [&amp;lt;file&amp;gt;]...&#34;&#xA;        echo &#34;&#34;&#xA;        echo &#34;OPTIONS:&#34;&#xA;        echo &#34;  -h, --help&#34;&#xA;        echo &#34;      show this message&#34;&#xA;        echo &#34;&#34;&#xA;        echo &#34;EXAMPLES:&#34;&#xA;        echo &#34;  Upload a single file from the current working directory:&#34;&#xA;        echo &#34;      ${0} \&#34;image.img\&#34;&#34;&#xA;        echo &#34;&#34;&#xA;        echo &#34;  Upload multiple files from the current working directory:&#34;&#xA;        echo &#34;      ${0} \&#34;image.img\&#34; \&#34;image2.img\&#34;&#34;&#xA;        echo &#34;&#34;&#xA;        echo &#34;  Upload a file from a different directory:&#34;&#xA;        echo &#34;      ${0} \&#34;/tmp/some_file\&#34;&#34;&#xA;        echo &#34;&#34;&#xA;        echo &#34;  Upload all files from the current working directory. Be aware of the webserver&#39;s rate limiting!:&#34;&#xA;        echo &#34;      ${0} *&#34;&#xA;        echo &#34;&#34;&#xA;        echo &#34;  Upload a single file from the current working directory and filter out the delete token and download link:&#34;&#xA;        echo &#34;      ${0} \&#34;image.img\&#34; | awk --field-separator=\&#34;: \&#34; &#39;/Delete token:/ { print \$2 } /Download link:/ { print \$2 }&#39;&#34;&#xA;        echo &#34;&#34;&#xA;        echo &#34;  Show help text from \&#34;transfer.sh\&#34;:&#34;&#xA;        echo &#34;      curl --request GET \&#34;https://transfer.sh\&#34;&#34;&#xA;        return 0&#xA;    else&#xA;        for file in &#34;${file_array[@]}&#34;&#xA;        do&#xA;            if [[ ! -f &#34;${file}&#34; ]]&#xA;            then&#xA;                echo -e &#34;\e[01;31m&#39;${file}&#39; could not be found or is not a file.\e[0m&#34; &amp;gt;&amp;amp;2&#xA;                return 1&#xA;            fi&#xA;        done&#xA;        unset file&#xA;    fi&#xA;&#xA;    local upload_files&#xA;    local curl_output&#xA;    local awk_output&#xA;&#xA;    du -c -k -L &#34;${file_array[@]}&#34; &amp;gt;&amp;amp;2&#xA;    # be compatible with &#34;bash&#34;&#xA;    if [[ &#34;${ZSH_NAME}&#34; == &#34;zsh&#34; ]]&#xA;    then&#xA;        read $&#39;upload_files?\e[01;31mDo you really want to upload the above files (&#39;&#34;${#file_array[@]}&#34;$&#39;) to &#34;transfer.sh&#34;? (Y/n): \e[0m&#39;&#xA;    elif [[ &#34;${BASH}&#34; == *&#34;bash&#34;* ]]&#xA;    then&#xA;        read -p $&#39;\e[01;31mDo you really want to upload the above files (&#39;&#34;${#file_array[@]}&#34;$&#39;) to &#34;transfer.sh&#34;? (Y/n): \e[0m&#39; upload_files&#xA;    fi&#xA;&#xA;    case &#34;${upload_files:-y}&#34; in&#xA;        &#34;y&#34;|&#34;Y&#34;)&#xA;            # for the sake of the progress bar, execute &#34;curl&#34; for each file.&#xA;            # the parameters &#34;--include&#34; and &#34;--form&#34; will suppress the progress bar.&#xA;            for file in &#34;${file_array[@]}&#34;&#xA;            do&#xA;                # show delete link and filter out the delete token from the response header after upload.&#xA;                # it is important to save &#34;curl&#39;s&#34; &#34;stdout&#34; via a subshell to a variable or redirect it to another command,&#xA;                # which just redirects to &#34;stdout&#34; in order to have a sane output afterwards.&#xA;                # the progress bar is redirected to &#34;stderr&#34; and is only displayed,&#xA;                # if &#34;stdout&#34; is redirected to something; e.g. &#34;&amp;gt;/dev/null&#34;, &#34;tee /dev/null&#34; or &#34;| &amp;lt;some_command&amp;gt;&#34;.&#xA;                # the response header is redirected to &#34;stdout&#34;, so redirecting &#34;stdout&#34; to &#34;/dev/null&#34; does not make any sense.&#xA;                # redirecting &#34;curl&#39;s&#34; &#34;stderr&#34; to &#34;stdout&#34; (&#34;2&amp;gt;&amp;amp;1&#34;) will suppress the progress bar.&#xA;                curl_output=$(curl --request PUT --progress-bar --dump-header - --upload-file &#34;${file}&#34; &#34;https://transfer.sh/&#34;)&#xA;                awk_output=$(awk \&#xA;                    &#39;gsub(&#34;\r&#34;, &#34;&#34;, $0) &amp;amp;&amp;amp; tolower($1) ~ /x-url-delete/ \&#xA;                    {&#xA;                        delete_link=$2;&#xA;                        print &#34;Delete command: curl --request DELETE &#34; &#34;\&#34;&#34;delete_link&#34;\&#34;&#34;;&#xA;&#xA;                        gsub(&#34;.*/&#34;, &#34;&#34;, delete_link);&#xA;                        delete_token=delete_link;&#xA;                        print &#34;Delete token: &#34; delete_token;&#xA;                    }&#xA;&#xA;                    END{&#xA;                        print &#34;Download link: &#34; $0;&#xA;                    }&#39; &amp;lt;&amp;lt;&amp;lt; &#34;${curl_output}&#34;)&#xA;&#xA;                # return the results via &#34;stdout&#34;, &#34;awk&#34; does not do this for some reason.&#xA;                echo -e &#34;${awk_output}\n&#34;&#xA;&#xA;                # avoid rate limiting as much as possible; nginx: too many requests.&#xA;                if (( ${#file_array[@]} &amp;gt; 4 ))&#xA;                then&#xA;                    sleep 5&#xA;                fi&#xA;            done&#xA;            ;;&#xA;&#xA;        &#34;n&#34;|&#34;N&#34;)&#xA;            return 1&#xA;            ;;&#xA;&#xA;        *)&#xA;            echo -e &#34;\e[01;31mWrong input: &#39;${upload_files}&#39;.\e[0m&#34; &amp;gt;&amp;amp;2&#xA;            return 1&#xA;    esac&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Sample output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls -lh&#xA;total 20M&#xA;-rw-r--r-- 1 &amp;lt;some_username&amp;gt; &amp;lt;some_username&amp;gt; 10M Apr  4 21:08 image.img&#xA;-rw-r--r-- 1 &amp;lt;some_username&amp;gt; &amp;lt;some_username&amp;gt; 10M Apr  4 21:08 image2.img&#xA;$ transfer image*&#xA;10240K  image2.img&#xA;10240K  image.img&#xA;20480K  total&#xA;Do you really want to upload the above files (2) to &#34;transfer.sh&#34;? (Y/n):&#xA;######################################################################################################################################################################################################################################## 100.0%&#xA;Delete command: curl --request DELETE &#34;https://transfer.sh/wJw9pz/image2.img/mSctGx7pYCId&#34;&#xA;Delete token: mSctGx7pYCId&#xA;Download link: https://transfer.sh/wJw9pz/image2.img&#xA;&#xA;######################################################################################################################################################################################################################################## 100.0%&#xA;Delete command: curl --request DELETE &#34;https://transfer.sh/ljJc5I/image.img/nw7qaoiKUwCU&#34;&#xA;Delete token: nw7qaoiKUwCU&#xA;Download link: https://transfer.sh/ljJc5I/image.img&#xA;&#xA;$ transfer &#34;image.img&#34; | awk --field-separator=&#34;: &#34; &#39;/Delete token:/ { print $2 } /Download link:/ { print $2 }&#39;&#xA;10240K  image.img&#xA;10240K  total&#xA;Do you really want to upload the above files (1) to &#34;transfer.sh&#34;? (Y/n):&#xA;######################################################################################################################################################################################################################################## 100.0%&#xA;tauN5dE3fWJe&#xA;https://transfer.sh/MYkuqn/image.img&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Creators&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Remco Verhoef&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/remco_verhoef&#34;&gt;https://twitter.com/remco_verhoef&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/dutchcoders&#34;&gt;https://twitter.com/dutchcoders&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Uvis Grinfelds&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Maintainer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Andrea Spacca&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Stefan Benten&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright and License&lt;/h2&gt; &#xA;&lt;p&gt;Code and documentation copyright 2011-2018 Remco Verhoef. Code and documentation copyright 2018-2020 Andrea Spacca. Code and documentation copyright 2020- Andrea Spacca and Stefan Benten.&lt;/p&gt; &#xA;&lt;p&gt;Code released under &lt;a href=&#34;https://raw.githubusercontent.com/dutchcoders/transfer.sh/main/LICENSE&#34;&gt;the MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>