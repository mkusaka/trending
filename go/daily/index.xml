<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-19T01:38:16Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stefanprodan/podinfo</title>
    <updated>2022-08-19T01:38:16Z</updated>
    <id>tag:github.com,2022-08-19:/stefanprodan/podinfo</id>
    <link href="https://github.com/stefanprodan/podinfo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go microservice template for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;podinfo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stefanprodan/podinfo/raw/master/.github/workflows/e2e.yml&#34;&gt;&lt;img src=&#34;https://github.com/stefanprodan/podinfo/workflows/e2e/badge.svg?sanitize=true&#34; alt=&#34;e2e&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stefanprodan/podinfo/raw/master/.github/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/stefanprodan/podinfo/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stefanprodan/podinfo/raw/master/.github/workflows/cve-scan.yml&#34;&gt;&lt;img src=&#34;https://github.com/stefanprodan/podinfo/workflows/cve-scan/badge.svg?sanitize=true&#34; alt=&#34;cve-scan&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/stefanprodan/podinfo&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/stefanprodan/podinfo&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/stefanprodan/podinfo&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/stefanprodan/podinfo&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Podinfo is a tiny web application made with Go that showcases best practices of running microservices in Kubernetes. Podinfo is used by CNCF projects like &lt;a href=&#34;https://github.com/fluxcd/flux2&#34;&gt;Flux&lt;/a&gt; and &lt;a href=&#34;https://github.com/fluxcd/flagger&#34;&gt;Flagger&lt;/a&gt; for end-to-end testing and workshops.&lt;/p&gt; &#xA;&lt;p&gt;Specifications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Health checks (readiness and liveness)&lt;/li&gt; &#xA; &lt;li&gt;Graceful shutdown on interrupt signals&lt;/li&gt; &#xA; &lt;li&gt;File watcher for secrets and configmaps&lt;/li&gt; &#xA; &lt;li&gt;Instrumented with Prometheus and Open Telemetry&lt;/li&gt; &#xA; &lt;li&gt;Structured logging with zap&lt;/li&gt; &#xA; &lt;li&gt;12-factor app with viper&lt;/li&gt; &#xA; &lt;li&gt;Fault injection (random errors and latency)&lt;/li&gt; &#xA; &lt;li&gt;Swagger docs&lt;/li&gt; &#xA; &lt;li&gt;CUE, Helm and Kustomize installers&lt;/li&gt; &#xA; &lt;li&gt;End-to-End testing with Kubernetes Kind and Helm&lt;/li&gt; &#xA; &lt;li&gt;Kustomize testing with GitHub Actions and Open Policy Agent&lt;/li&gt; &#xA; &lt;li&gt;Multi-arch container image with Docker buildx and Github Actions&lt;/li&gt; &#xA; &lt;li&gt;Container image signing with Sigstore cosign&lt;/li&gt; &#xA; &lt;li&gt;CVE scanning with Trivy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Web API:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /&lt;/code&gt; prints runtime information&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /version&lt;/code&gt; prints podinfo version and git commit hash&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /metrics&lt;/code&gt; return HTTP requests duration and Go runtime metrics&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /healthz&lt;/code&gt; used by Kubernetes liveness probe&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /readyz&lt;/code&gt; used by Kubernetes readiness probe&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /readyz/enable&lt;/code&gt; signals the Kubernetes LB that this instance is ready to receive traffic&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /readyz/disable&lt;/code&gt; signals the Kubernetes LB to stop sending requests to this instance&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /status/{code}&lt;/code&gt; returns the status code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /panic&lt;/code&gt; crashes the process with exit code 255&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /echo&lt;/code&gt; forwards the call to the backend service and echos the posted content&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /env&lt;/code&gt; returns the environment variables as a JSON array&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /headers&lt;/code&gt; returns a JSON with the request HTTP headers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /delay/{seconds}&lt;/code&gt; waits for the specified period&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /token&lt;/code&gt; issues a JWT token valid for one minute &lt;code&gt;JWT=$(curl -sd &#39;anon&#39; podinfo:9898/token | jq -r .token)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /token/validate&lt;/code&gt; validates the JWT token &lt;code&gt;curl -H &#34;Authorization: Bearer $JWT&#34; podinfo:9898/token/validate&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /configs&lt;/code&gt; returns a JSON with configmaps and/or secrets mounted in the &lt;code&gt;config&lt;/code&gt; volume&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST/PUT /cache/{key}&lt;/code&gt; saves the posted content to Redis&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /cache/{key}&lt;/code&gt; returns the content from Redis if the key exists&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DELETE /cache/{key}&lt;/code&gt; deletes the key from Redis if exists&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /store&lt;/code&gt; writes the posted content to disk at /data/hash and returns the SHA1 hash of the content&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /store/{hash}&lt;/code&gt; returns the content of the file /data/hash if exists&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /ws/echo&lt;/code&gt; echos content via websockets &lt;code&gt;podcli ws ws://localhost:9898/ws/echo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /chunked/{seconds}&lt;/code&gt; uses &lt;code&gt;transfer-encoding&lt;/code&gt; type &lt;code&gt;chunked&lt;/code&gt; to give a partial response and then waits for the specified period&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /swagger.json&lt;/code&gt; returns the API Swagger docs, used for Linkerd service profiling and Gloo routes discovery&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;gRPC API:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/grpc.health.v1.Health/Check&lt;/code&gt; health checking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Web UI:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stefanprodan/podinfo/gh-pages/screens/podinfo-ui-v3.png&#34; alt=&#34;podinfo-ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To access the Swagger UI open &lt;code&gt;&amp;lt;podinfo-host&amp;gt;/swagger/index.html&lt;/code&gt; in a browser.&lt;/p&gt; &#xA;&lt;h3&gt;Guides&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://helm.workshop.flagger.dev/intro/&#34;&gt;GitOps Progressive Deliver with Flagger, Helm v3 and Linkerd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eks.handson.flagger.dev/prerequisites/&#34;&gt;GitOps Progressive Deliver on EKS with Flagger and AppMesh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/google-cloud/automated-canary-deployments-with-flagger-and-istio-ac747827f9d1&#34;&gt;Automated canary deployments with Flagger and Istio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/google-cloud/kubernetes-autoscaling-with-istio-metrics-76442253a45a&#34;&gt;Kubernetes autoscaling with Istio metrics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/containers/autoscaling-eks-on-fargate-with-custom-metrics/&#34;&gt;Autoscaling EKS on Fargate with custom metrics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/google-cloud/managing-helm-releases-the-gitops-way-207a6ac6ff0e&#34;&gt;Managing Helm releases the GitOps way&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/containers/securing-eks-ingress-contour-lets-encrypt-gitops/&#34;&gt;Securing EKS Ingress With Contour And Let’s Encrypt The GitOps Way&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;h4&gt;Helm&lt;/h4&gt; &#xA;&lt;p&gt;Install from github.io:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;helm repo add podinfo https://stefanprodan.github.io/podinfo&#xA;&#xA;helm upgrade --install --wait frontend \&#xA;--namespace test \&#xA;--set replicaCount=2 \&#xA;--set backend=http://backend-podinfo:9898/echo \&#xA;podinfo/podinfo&#xA;&#xA;helm test frontend --namespace test&#xA;&#xA;helm upgrade --install --wait backend \&#xA;--namespace test \&#xA;--set redis.enabled=true \&#xA;podinfo/podinfo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install from ghcr.io:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;helm upgrade --install --wait podinfo --namespace default \&#xA;oci://ghcr.io/stefanprodan/charts/podinfo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Kustomize&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -k github.com/stefanprodan/podinfo//kustomize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -dp 9898:9898 stefanprodan/podinfo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Continuous Delivery&lt;/h3&gt; &#xA;&lt;p&gt;In order to install podinfo on a Kubernetes cluster and keep it up to date with the latest release in an automated manner, you can use &lt;a href=&#34;https://fluxcd.io&#34;&gt;Flux&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install the Flux CLI on MacOS and Linux using Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install fluxcd/tap/flux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the Flux controllers needed for Helm operations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux install \&#xA;--namespace=flux-system \&#xA;--network-policy=false \&#xA;--components=source-controller,helm-controller&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add podinfo&#39;s Helm repository to your cluster and configure Flux to check for new chart releases every ten minutes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux create source helm podinfo \&#xA;--namespace=default \&#xA;--url=https://stefanprodan.github.io/podinfo \&#xA;--interval=10m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;podinfo-values.yaml&lt;/code&gt; file locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cat &amp;gt; podinfo-values.yaml &amp;lt;&amp;lt;EOL&#xA;replicaCount: 2&#xA;resources:&#xA;  limits:&#xA;    memory: 256Mi&#xA;  requests:&#xA;    cpu: 100m&#xA;    memory: 64Mi&#xA;EOL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a Helm release for deploying podinfo in the default namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux create helmrelease podinfo \&#xA;--namespace=default \&#xA;--source=HelmRepository/podinfo \&#xA;--release-name=podinfo \&#xA;--chart=podinfo \&#xA;--chart-version=&#34;&amp;gt;5.0.0&#34; \&#xA;--values=podinfo-values.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Based on the above definition, Flux will upgrade the release automatically when a new version of podinfo is released. If the upgrade fails, Flux can &lt;a href=&#34;https://toolkit.fluxcd.io/components/helm/helmreleases/#configuring-failure-remediation&#34;&gt;rollback&lt;/a&gt; to the previous working version.&lt;/p&gt; &#xA;&lt;p&gt;You can check what version is currently deployed with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux get helmreleases -n default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To delete podinfo&#39;s Helm repository and release from your cluster run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux -n default delete source helm podinfo&#xA;flux -n default delete helmrelease podinfo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to manage the lifecycle of your applications in a &lt;strong&gt;GitOps&lt;/strong&gt; manner, check out this &lt;a href=&#34;https://github.com/fluxcd/flux2-kustomize-helm-example&#34;&gt;workflow example&lt;/a&gt; for multi-env deployments with Flux, Kustomize and Helm.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cosmos/cosmos-sdk</title>
    <updated>2022-08-19T01:38:16Z</updated>
    <id>tag:github.com,2022-08-19:/cosmos/cosmos-sdk</id>
    <link href="https://github.com/cosmos/cosmos-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⛓️ A Framework for Building High Value Public Blockchains ✨&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; Cosmos SDK &lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/docs/cosmos-sdk-image.jpg&#34; alt=&#34;banner&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/cosmos/cosmos-sdk/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;License: Apache-2.0&#34; src=&#34;https://img.shields.io/github/license/cosmos/cosmos-sdk.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://pkg.go.dev/github.com/cosmos/cosmos-sdk&#34;&gt; &lt;img src=&#34;https://pkg.go.dev/badge/github.com/cosmos/cosmos-sdk.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://goreportcard.com/report/github.com/cosmos/cosmos-sdk&#34;&gt; &lt;img alt=&#34;Go report card&#34; src=&#34;https://goreportcard.com/badge/github.com/cosmos/cosmos-sdk&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://codecov.io/gh/cosmos/cosmos-sdk&#34;&gt; &lt;img alt=&#34;Code Coverage&#34; src=&#34;https://codecov.io/gh/cosmos/cosmos-sdk/branch/main/graph/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/cosmos/cosmos-sdk&#34;&gt; &lt;img alt=&#34;Lines Of Code&#34; src=&#34;https://tokei.rs/b1/github/cosmos/cosmos-sdk&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/AzefAFd&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/669268347736686612.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://sourcegraph.com/github.com/cosmos/cosmos-sdk?badge&#34;&gt; &lt;img alt=&#34;Imported by&#34; src=&#34;https://sourcegraph.com/github.com/cosmos/cosmos-sdk/-/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;img alt=&#34;Sims&#34; src=&#34;https://github.com/cosmos/cosmos-sdk/workflows/Sims/badge.svg?sanitize=true&#34;&gt; &#xA; &lt;img alt=&#34;Lint Satus&#34; src=&#34;https://github.com/cosmos/cosmos-sdk/workflows/Lint/badge.svg?sanitize=true&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The Cosmos SDK is a framework for building blockchain applications. &lt;a href=&#34;https://github.com/tendermint/tendermint&#34;&gt;Tendermint Core (BFT Consensus)&lt;/a&gt; and the Cosmos SDK are written in the Golang programming language. Cosmos SDK is used to build &lt;a href=&#34;https://github.com/cosmos/gaia&#34;&gt;Gaia&lt;/a&gt;, the first implementation of the Cosmos Hub.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: The Cosmos SDK has mostly stabilized, but we are still making some breaking changes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Requires &lt;a href=&#34;https://go.dev/dl&#34;&gt;Go 1.18+&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;To learn how the Cosmos SDK works from a high-level perspective, see the Cosmos SDK &lt;a href=&#34;https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/docs/intro/overview.md&#34;&gt;High-Level Intro&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to get started quickly and learn how to build on top of Cosmos SDK, visit &lt;a href=&#34;https://tutorials.cosmos.network&#34;&gt;Cosmos SDK Tutorials&lt;/a&gt;. You can also fork the tutorial&#39;s repository to get started building your own Cosmos SDK application.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see the &lt;a href=&#34;https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/docs/&#34;&gt;Cosmos SDK Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details how to contribute and participate in our &lt;a href=&#34;https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/CONTRIBUTING.md#teams-dev-calls&#34;&gt;dev calls&lt;/a&gt;. If you want to follow the updates or learn more about the latest design then join our &lt;a href=&#34;https://discord.com/invite/cosmosnetwork&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tools and Frameworks&lt;/h2&gt; &#xA;&lt;p&gt;The Cosmos ecosystem is vast. We will only make a few notable mentions here.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v1.cosmos.network/tools&#34;&gt;Tools&lt;/a&gt;: notable frameworks and modules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cosmos/cosmjs&#34;&gt;CosmJS&lt;/a&gt;: the Swiss Army knife to power JavaScript based client solutions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cosmos Hub Mainnet&lt;/h3&gt; &#xA;&lt;p&gt;The Cosmos Hub application, &lt;code&gt;gaia&lt;/code&gt;, has moved to its own &lt;a href=&#34;https://github.com/cosmos/gaia&#34;&gt;cosmos/gaia repository&lt;/a&gt;. Go there to join the Cosmos Hub mainnet and more.&lt;/p&gt; &#xA;&lt;h3&gt;Inter-Blockchain Communication (IBC)&lt;/h3&gt; &#xA;&lt;p&gt;The IBC module for the Cosmos SDK has moved to its own &lt;a href=&#34;https://github.com/cosmos/ibc-go&#34;&gt;cosmos/ibc-go repository&lt;/a&gt;. Go there to build and integrate with the IBC module.&lt;/p&gt; &#xA;&lt;h3&gt;Ignite CLI&lt;/h3&gt; &#xA;&lt;p&gt;Ignite CLI is the all-in-one platform to build, launch, and maintain any crypto application on a sovereign and secured blockchain. If you are building a new app or a new module, use &lt;a href=&#34;https://github.com/ignite/cli&#34;&gt;Ignite CLI&lt;/a&gt; to get started and speed up development.&lt;/p&gt; &#xA;&lt;h2&gt;Disambiguation&lt;/h2&gt; &#xA;&lt;p&gt;This Cosmos SDK project is not related to the &lt;a href=&#34;https://github.com/react-cosmos/react-cosmos&#34;&gt;React-Cosmos&lt;/a&gt; project (yet). Many thanks to Evan Coury and Ovidiu (@skidding) for this Github organization name. As per our agreement, this disambiguation notice will stay here.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chromedp/chromedp</title>
    <updated>2022-08-19T01:38:16Z</updated>
    <id>tag:github.com,2022-08-19:/chromedp/chromedp</id>
    <link href="https://github.com/chromedp/chromedp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A faster, simpler way to drive browsers supporting the Chrome DevTools Protocol.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About chromedp&lt;/h1&gt; &#xA;&lt;p&gt;Package &lt;code&gt;chromedp&lt;/code&gt; is a faster, simpler way to drive browsers supporting the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;Chrome DevTools Protocol&lt;/a&gt; in Go without external dependencies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/chromedp/chromedp/actions/workflows/test.yml&#34; title=&#34;Test CI&#34;&gt;&lt;img src=&#34;https://github.com/chromedp/chromedp/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34; title=&#34;Test CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/chromedp/chromedp&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/chromedp/chromedp.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chromedp/chromedp/releases&#34; title=&#34;Releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/chromedp/chromedp?display_name=tag&amp;amp;sort=semver&#34; alt=&#34;Releases&#34; title=&#34;Latest Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Install in the usual Go way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ go get -u github.com/chromedp/chromedp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://pkg.go.dev/github.com/chromedp/chromedp&#34;&gt;Go reference&lt;/a&gt; for the documentation and examples. Additionally, the &lt;a href=&#34;https://github.com/chromedp/examples&#34;&gt;examples&lt;/a&gt; repository contains more examples on complex actions, and other common high-level tasks such as taking full page screenshots.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I can&#39;t see any Chrome browser window&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;By default, Chrome is run in headless mode. See &lt;code&gt;DefaultExecAllocatorOptions&lt;/code&gt;, and &lt;a href=&#34;https://pkg.go.dev/github.com/chromedp/chromedp#example-ExecAllocator&#34;&gt;an example&lt;/a&gt; to override the default options.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I&#39;m seeing &#34;context canceled&#34; errors&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;When the connection to the browser is lost, &lt;code&gt;chromedp&lt;/code&gt; cancels the context, and it may result in this error. This occurs, for example, if the browser is closed manually, or if the browser process has been killed or otherwise terminated.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Chrome exits as soon as my Go program finishes&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;On Linux, &lt;code&gt;chromedp&lt;/code&gt; is configured to avoid leaking resources by force-killing any started Chrome child processes. If you need to launch a long-running Chrome instance, manually start Chrome and connect using &lt;code&gt;RemoteAllocator&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Executing an action without &lt;code&gt;Run&lt;/code&gt; results in &#34;invalid context&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;By default, a &lt;code&gt;chromedp&lt;/code&gt; context does not have an executor, however one can be specified manually if necessary; see &lt;a href=&#34;https://github.com/chromedp/chromedp/issues/326&#34;&gt;issue #326&lt;/a&gt; for an example.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I can&#39;t use an &lt;code&gt;Action&lt;/code&gt; with &lt;code&gt;Run&lt;/code&gt; because it returns many values&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Wrap it with an &lt;code&gt;ActionFunc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;ctx, cancel := chromedp.NewContext(context.Background())&#xA;defer cancel()&#xA;chromedp.Run(ctx, chromedp.ActionFunc(func(ctx context.Context) error {&#xA;&#x9;_, err := domain.SomeAction().Do(ctx)&#xA;&#x9;return err&#xA;}))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I want to use chromedp on a headless environment&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The simplest way is to run the Go program that uses chromedp inside the &lt;a href=&#34;https://hub.docker.com/r/chromedp/headless-shell/&#34;&gt;chromedp/headless-shell&lt;/a&gt; image. That image contains &lt;code&gt;headless-shell&lt;/code&gt;, a smaller headless build of Chrome, which &lt;code&gt;chromedp&lt;/code&gt; is able to find out of the box.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/chromedp/headless-shell/&#34;&gt;&lt;code&gt;headless-shell&lt;/code&gt;&lt;/a&gt; - A build of &lt;code&gt;headless-shell&lt;/code&gt; that is used for testing &lt;code&gt;chromedp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_7pWCg94sKw&#34;&gt;chromedp: A New Way to Drive the Web&lt;/a&gt; - GopherCon SG 2017 talk&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;Chrome DevTools Protocol&lt;/a&gt; - Chrome DevTools Protocol reference&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chromedp/examples&#34;&gt;chromedp examples&lt;/a&gt; - More complicated examples for &lt;code&gt;chromedp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/chromedp/cdproto&#34;&gt;&lt;code&gt;github.com/chromedp/cdproto&lt;/code&gt;&lt;/a&gt; - Go reference for the generated Chrome DevTools Protocol API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chromedp/pdlgen&#34;&gt;&lt;code&gt;github.com/chromedp/pdlgen&lt;/code&gt;&lt;/a&gt; - tool used to generate &lt;code&gt;cdproto&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chromedp/chromedp-proxy&#34;&gt;&lt;code&gt;github.com/chromedp/chromedp-proxy&lt;/code&gt;&lt;/a&gt; - a simple CDP proxy for logging CDP clients and browsers&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>