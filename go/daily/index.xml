<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-23T01:34:34Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>slack-go/slack</title>
    <updated>2022-11-23T01:34:34Z</updated>
    <id>tag:github.com,2022-11-23:/slack-go/slack</id>
    <link href="https://github.com/slack-go/slack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Slack API in Go - community-maintained fork created by the original author, @nlopes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Slack API in Go &lt;a href=&#34;https://pkg.go.dev/github.com/slack-go/slack&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/slack-go/slack.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This is the original Slack library for Go created by Norberto Lopes, transferred to a GitHub organization.&lt;/p&gt; &#xA;&lt;p&gt;You can also chat with us on the #slack-go, #slack-go-ja Slack channel on the Gophers Slack.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/slack-go/slack/master/logo.png&#34; alt=&#34;logo&#34; title=&#34;icon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This library supports most if not all of the &lt;code&gt;api.slack.com&lt;/code&gt; REST calls, as well as the Real-Time Messaging protocol over websocket, in a fully managed way.&lt;/p&gt; &#xA;&lt;h2&gt;Project Status&lt;/h2&gt; &#xA;&lt;p&gt;There is currently no major version released. Therefore, minor version releases may include backward incompatible changes.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/slack-go/slack/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; or &lt;a href=&#34;https://github.com/slack-go/slack/releases&#34;&gt;Releases&lt;/a&gt; for more information about the changes.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;em&gt;go get&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ go get -u github.com/slack-go/slack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;h3&gt;Getting all groups&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#xA;&#x9;&#34;github.com/slack-go/slack&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;api := slack.New(&#34;YOUR_TOKEN_HERE&#34;)&#xA;&#x9;// If you set debugging, it will log all requests to the console&#xA;&#x9;// Useful when encountering issues&#xA;&#x9;// slack.New(&#34;YOUR_TOKEN_HERE&#34;, slack.OptionDebug(true))&#xA;&#x9;groups, err := api.GetUserGroups(slack.GetUserGroupsOptionIncludeUsers(false))&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;fmt.Printf(&#34;%s\n&#34;, err)&#xA;&#x9;&#x9;return&#xA;&#x9;}&#xA;&#x9;for _, group := range groups {&#xA;&#x9;&#x9;fmt.Printf(&#34;ID: %s, Name: %s\n&#34;, group.ID, group.Name)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Getting User Information&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;import (&#xA;    &#34;fmt&#34;&#xA;&#xA;    &#34;github.com/slack-go/slack&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    api := slack.New(&#34;YOUR_TOKEN_HERE&#34;)&#xA;    user, err := api.GetUserInfo(&#34;U023BECGF&#34;)&#xA;    if err != nil {&#xA;&#x9;    fmt.Printf(&#34;%s\n&#34;, err)&#xA;&#x9;    return&#xA;    }&#xA;    fmt.Printf(&#34;ID: %s, Fullname: %s, Email: %s\n&#34;, user.ID, user.Profile.RealName, user.Profile.Email)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Minimal Socket Mode usage:&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/slack-go/slack/raw/master/examples/socketmode/socketmode.go&#34;&gt;https://github.com/slack-go/slack/blob/master/examples/socketmode/socketmode.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Minimal RTM usage:&lt;/h2&gt; &#xA;&lt;p&gt;As mentioned in &lt;a href=&#34;https://api.slack.com/rtm&#34;&gt;https://api.slack.com/rtm&lt;/a&gt; - for most applications, Socket Mode is a better way to communicate with Slack.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/slack-go/slack/raw/master/examples/websocket/websocket.go&#34;&gt;https://github.com/slack-go/slack/blob/master/examples/websocket/websocket.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Minimal EventsAPI usage:&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/slack-go/slack/raw/master/examples/eventsapi/events.go&#34;&gt;https://github.com/slack-go/slack/blob/master/examples/eventsapi/events.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Socketmode Event Handler (Experimental)&lt;/h2&gt; &#xA;&lt;p&gt;When using socket mode, dealing with an event can be pretty lengthy as it requires you to route the event to the right place.&lt;/p&gt; &#xA;&lt;p&gt;Instead, you can use &lt;code&gt;SocketmodeHandler&lt;/code&gt; much like you use an HTTP handler to register which event you would like to listen to and what callback function will process that event when it occurs.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/slack-go/slack/master/examples/socketmode_handler/socketmode_handler.go&#34;&gt;./examples/socketmode_handler/socketmode_handler.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You are more than welcome to contribute to this project. Fork and make a Pull Request, or create an Issue if you see any problem.&lt;/p&gt; &#xA;&lt;p&gt;Before making any Pull Request please run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make pr-prep&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will check/update code formatting, linting and then run all tests&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;BSD 2 Clause license&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elliotchance/pie</title>
    <updated>2022-11-23T01:34:34Z</updated>
    <id>tag:github.com,2022-11-23:/elliotchance/pie</id>
    <link href="https://github.com/elliotchance/pie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üçï Enjoy a slice! A utility library for dealing with slices and maps that focuses on type safety and performance.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üçï &lt;code&gt;github.com/elliotchance/pie&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/elliotchance/pie&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/elliotchance/pie?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/elliotchance/pie&#34;&gt;&lt;img src=&#34;https://travis-ci.org/elliotchance/pie.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/elliotchance/pie&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/elliotchance/pie/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enjoy a slice!&lt;/strong&gt; &lt;code&gt;pie&lt;/code&gt; is a library of utility functions for common operations on slices and maps.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elliotchance/pie/master/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elliotchance/pie/master/#faq&#34;&gt;FAQ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elliotchance/pie/master/#what-are-the-requirements-&#34;&gt;What are the requirements?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elliotchance/pie/master/#what-are-the-goals-of--pie--&#34;&gt;What are the goals of &lt;code&gt;pie&lt;/code&gt;?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elliotchance/pie/master/#how-do-i-contribute-a-function-&#34;&gt;How do I contribute a function?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elliotchance/pie/master/#why-is-the-emoji-a-slice-of-pizza-instead-of-a-pie-&#34;&gt;Why is the emoji a slice of pizza instead of a pie?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;If you are using (or require) Go 1.17 or below, you will have to &lt;a href=&#34;https://github.com/elliotchance/pie/v1&#34;&gt;use v1&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pie&lt;/code&gt; can be used in two ways, the first is to use the regular &lt;a href=&#34;https://go.googlesource.com/proposal/+/master/design/15292/2013-12-type-params.md&#34;&gt;parameterized functions&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://go.dev/play/p/qYaBXPRs3Nk&#34;&gt;Run this program&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;fmt&#34;&#xA;    &#34;strings&#34;&#xA;&#xA;    &#34;github.com/elliotchance/pie/v2&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    names := pie.FilterNot([]string{&#34;Bob&#34;, &#34;Sally&#34;, &#34;John&#34;, &#34;Jane&#34;},&#xA;        func(name string) bool {&#xA;            return strings.HasPrefix(name, &#34;J&#34;)&#xA;        })&#xA;&#xA;    fmt.Println(names) // &#34;[Bob Sally]&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you need to chain multiple operations you can use one of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/elliotchance/pie/v2#Of&#34;&gt;&lt;code&gt;pie.Of&lt;/code&gt;&lt;/a&gt; - works with any element type, but functions are limited.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/elliotchance/pie/v2#OfOrdered&#34;&gt;&lt;code&gt;pie.OfOrdered&lt;/code&gt;&lt;/a&gt; - only works with numbers and strings, but has more functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/elliotchance/pie/v2#OfNumeric&#34;&gt;&lt;code&gt;pie.OfNumeric&lt;/code&gt;&lt;/a&gt; - only works with numbers, but has all functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://go.dev/play/p/cDLBYzKJ9ld&#34;&gt;Run this program&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;fmt&#34;&#xA;    &#34;strings&#34;&#xA;&#xA;    &#34;github.com/elliotchance/pie/v2&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    name := pie.Of([]string{&#34;Bob&#34;, &#34;Sally&#34;, &#34;John&#34;, &#34;Jane&#34;}).&#xA;        FilterNot(func(name string) bool {&#xA;            return strings.HasPrefix(name, &#34;J&#34;)&#xA;        }).&#xA;        Map(strings.ToUpper).&#xA;        LastOr(&#34;&#34;)&#xA;&#xA;    fmt.Println(name) // &#34;SALLY&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find the &lt;a href=&#34;https://pkg.go.dev/github.com/elliotchance/pie/v2&#34;&gt;full documentation here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h2&gt;What are the requirements?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;pie&lt;/code&gt; v2 only supports Go 1.18+. If you have an older version you can &lt;a href=&#34;https://github.com/elliotchance/pie/v1&#34;&gt;use v1&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What are the goals of &lt;code&gt;pie&lt;/code&gt;?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Type safety.&lt;/strong&gt; I never want to hit runtime bugs because I could pass in the wrong type, or perform an invalid type case out the other end.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance.&lt;/strong&gt; The functions need to be as fast as native Go implementations otherwise there&#39;s no point in this library existing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Nil-safe.&lt;/strong&gt; All of the functions will happily accept nil and treat them as empty slices. Apart from less possible panics, it makes it easier to chain.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Immutable.&lt;/strong&gt; Functions never modify inputs (except in cases where it would be illogical), unlike some built-ins such as &lt;code&gt;sort.Strings&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How do I contribute a function?&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are always welcome.&lt;/p&gt; &#xA;&lt;p&gt;Here is a comprehensive list of steps to follow to add a new function:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new file for your function (tip: copy an existing file can be quicker). Add your implmentation and comment.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create appropriate tests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If your function accepts a slice, it should also be added to the &lt;code&gt;OfSlice&lt;/code&gt; API (see &lt;code&gt;of.go&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Why is the emoji a slice of pizza instead of a pie?&lt;/h2&gt; &#xA;&lt;p&gt;I wanted to pick a name for the project that was short and had an associated emoji. I liked pie, but then I found out that the pie emoji is not fully supported everywhere. I didn&#39;t want to change the name of the project to cake, but pizza pie still made sense. I&#39;m not sure if I will change it back to a pie later.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/go-cloud</title>
    <updated>2022-11-23T01:34:34Z</updated>
    <id>tag:github.com,2022-11-23:/google/go-cloud</id>
    <link href="https://github.com/google/go-cloud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Go Cloud Development Kit (Go CDK): A library and tools for open cloud development in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Go Cloud Development Kit (Go CDK)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Write once, run on any cloud ‚òÅÔ∏è&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/go-cloud/actions&#34;&gt;&lt;img src=&#34;https://github.com/google/go-cloud/actions/workflows/tests.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/google/go-cloud&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/google/go-cloud&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/mod/gocloud.dev&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/mod/gocloud.dev&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/google/go-cloud&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/google/go-cloud/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/google/go-cloud&#34; alt=&#34;GitHub go.mod Go version&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;509&#34; height=&#34;276&#34; src=&#34;https://raw.githubusercontent.com/google/go-cloud/master/internal/website/static/go-cdk-logo-gopherblue.png&#34; alt=&#34;&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The Go Cloud Development Kit (Go CDK) allows Go application developers to seamlessly deploy cloud applications on any combination of cloud providers. It does this by providing stable, idiomatic interfaces for common uses like storage and databases. Think &lt;code&gt;database/sql&lt;/code&gt; for cloud products.&lt;/p&gt; &#xA;&lt;p&gt;Imagine writing this to read from blob storage (like Google Cloud Storage or S3):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;ctx := context.Background()&#xA;bucket, err := blob.OpenBucket(ctx, &#34;s3://my-bucket&#34;)&#xA;if err != nil {&#xA;    return err&#xA;}&#xA;defer bucket.Close()&#xA;blobReader, err := bucket.NewReader(ctx, &#34;my-blob&#34;, nil)&#xA;if err != nil {&#xA;    return err&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and being able to run that code on any cloud you want, avoiding all the ceremony of cloud-specific authorization, tracing, SDKs and all the other code required to make an application portable across cloud platforms.&lt;/p&gt; &#xA;&lt;p&gt;The project works well with a code generator called &lt;a href=&#34;https://github.com/google/wire/raw/master/README.md&#34;&gt;Wire&lt;/a&gt;. It creates human-readable code that only imports the cloud SDKs for services you use. This allows the Go CDK to grow to support any number of cloud services, without increasing compile times or binary sizes, and avoiding any side effects from &lt;code&gt;init()&lt;/code&gt; functions.&lt;/p&gt; &#xA;&lt;p&gt;You can learn more about the project from our &lt;a href=&#34;https://blog.golang.org/go-cloud&#34;&gt;announcement blog post&lt;/a&gt;, or our talk at Next 2018:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_2ZwhvIkgek&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/_2ZwhvIkgek/0.jpg&#34; alt=&#34;Video: Building Go Applications for the Open Cloud (Cloud Next &#39;18)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# First &#34;cd&#34; into your project directory if you have one to ensure &#34;go get&#34; uses&#xA;# Go modules (or not) appropriately. See &#34;go help modules&#34; for more info.&#xA;go get gocloud.dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Go CDK builds at the latest stable release of Go. Previous Go versions may compile but are not supported.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for the project lives primarily on &lt;a href=&#34;https://gocloud.dev/&#34;&gt;https://gocloud.dev/&lt;/a&gt;, including &lt;a href=&#34;https://gocloud.dev/tutorials/&#34;&gt;tutorials&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also browse Go package reference on &lt;a href=&#34;https://pkg.go.dev/mod/gocloud.dev&#34;&gt;pkg.go.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project status&lt;/h2&gt; &#xA;&lt;p&gt;The APIs are still in alpha, but we think they are production-ready and are actively looking for feedback from early adopters. If you have comments or questions please open an issue.&lt;/p&gt; &#xA;&lt;p&gt;At this time we prefer to focus on maintaining the existing APIs and drivers, and are unlikely to accept new ones into the &lt;code&gt;go-cloud&lt;/code&gt; repository. The modular nature of the Go CDK makes it simple to host new APIs and drivers for existing APIs externally, in separate repositories.&lt;/p&gt; &#xA;&lt;p&gt;If you have a new API or driver that you believe are important and mature enough to be included, feel free to open an issue to discuss this; our default will likely be to suggest starting in a separate repository. We&#39;ll also be happy to maintain a list of such external APIs and drivers in this README.&lt;/p&gt; &#xA;&lt;h2&gt;Current features&lt;/h2&gt; &#xA;&lt;p&gt;The Go CDK provides generic APIs for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unstructured binary (blob) storage&lt;/li&gt; &#xA; &lt;li&gt;Publish/Subscribe (pubsub)&lt;/li&gt; &#xA; &lt;li&gt;Variables that change at runtime (runtimevar)&lt;/li&gt; &#xA; &lt;li&gt;Connecting to MySQL and PostgreSQL databases (mysql, postgres)&lt;/li&gt; &#xA; &lt;li&gt;Server startup and diagnostics: request logging, tracing, and health checking (server)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest in contributing to the Go Cloud Development Kit! &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Everyone is welcome to contribute, whether it&#39;s in the form of code, documentation, bug reports, feature requests, or anything else. We encourage you to experiment with the Go CDK and make contributions to help evolve it to meet your needs!&lt;/p&gt; &#xA;&lt;p&gt;The GitHub repository at &lt;a href=&#34;https://github.com/google/go-cloud&#34;&gt;google/go-cloud&lt;/a&gt; contains some driver implementations for each portable API. We intend to include &lt;a href=&#34;http://cloud.google.com&#34;&gt;Google Cloud Platform&lt;/a&gt;, &lt;a href=&#34;http://aws.amazon.com&#34;&gt;Amazon Web Services&lt;/a&gt;, and &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Azure&lt;/a&gt; implementations, as well as prominent open source services and at least one implementation suitable for use in local testing. Unfortunately, we cannot support every service directly from the project; however, we encourage contributions in separate repositories.&lt;/p&gt; &#xA;&lt;p&gt;If you create a repository that implements the Go CDK interfaces for other services, let us know! We would be happy to link to it here and give you a heads-up before making any breaking changes.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/go-cloud/master/CONTRIBUTING.md&#34;&gt;the contributing guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;This project is covered by the Go &lt;a href=&#34;https://raw.githubusercontent.com/google/go-cloud/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Legal disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The Go CDK is open-source and released under an &lt;a href=&#34;https://github.com/google/go-cloud/raw/master/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;. Copyright ¬© 2018‚Äì2019 The Go Cloud Development Kit Authors.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for the website of GoCloud Systems, which is unrelated to the Go CDK, visit &lt;a href=&#34;https://gocloud.systems&#34;&gt;https://gocloud.systems&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>