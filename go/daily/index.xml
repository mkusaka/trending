<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-04T01:33:24Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Consensys/gnark</title>
    <updated>2023-12-04T01:33:24Z</updated>
    <id>tag:github.com,2023-12-04:/Consensys/gnark</id>
    <link href="https://github.com/Consensys/gnark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;gnark is a fast zk-SNARK library that offers a high-level API to design circuits. The library is open source and developed under the Apache 2.0 license&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;gnark&lt;/code&gt; zk-SNARK library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/gnark_team&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/gnark_team.svg?style=social&amp;amp;label=Follow%20%40gnark_team&#34; alt=&#34;Twitter URL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Consensys/gnark/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/badge/github.com/ConsenSys/gnark&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/ConsenSys/gnark&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/mod/github.com/consensys/gnark&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/mod/github.com/consensys/gnark&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.gnark.consensys.net/&#34;&gt;&lt;img src=&#34;https://readthedocs.com/projects/pegasys-gnark/badge/&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.5281/zenodo.5819104&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.5819104.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gnark&lt;/code&gt; is a fast zk-SNARK library that offers a high-level API to design circuits. The library is open source and developed under the Apache 2.0 license&lt;/p&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.gnark.consensys.net/&#34;&gt;&lt;code&gt;gnark&lt;/code&gt; User Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.gnark.io&#34;&gt;&lt;code&gt;gnark&lt;/code&gt; Playground&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/consensys/gnark/issues&#34;&gt;&lt;code&gt;gnark&lt;/code&gt; Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.gnark.consensys.net/overview#gnark-is-fast&#34;&gt;&lt;code&gt;gnark&lt;/code&gt; Benchmarks&lt;/a&gt; üèÅ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/g/gnark-announce&#34;&gt;&lt;code&gt;gnark-announce&lt;/code&gt;&lt;/a&gt; - Announcement list for new releases and security patches&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;code&gt;gnark&lt;/code&gt; Users&lt;/h2&gt; &#xA;&lt;p&gt;To get started with &lt;code&gt;gnark&lt;/code&gt; and write your first circuit, follow &lt;a href=&#34;https://docs.gnark.consensys.net/&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Checkout the &lt;a href=&#34;https://play.gnark.io&#34;&gt;online playground&lt;/a&gt; to compile circuits and visualize constraint systems.&lt;/p&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;gnark&lt;/code&gt; has been &lt;a href=&#34;https://github.com/ConsenSys/gnark-crypto/raw/master/audit_oct2022.pdf&#34;&gt;partially audited&lt;/a&gt; and is provided as-is, we make no guarantees or warranties to its safety and reliability. In particular, &lt;code&gt;gnark&lt;/code&gt; makes no security guarantees such as constant time implementation or side-channel attack resistance.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gnark&lt;/code&gt; and &lt;code&gt;gnark-crypto&lt;/code&gt; packages are optimized for 64bits architectures (x86 &lt;code&gt;amd64&lt;/code&gt;) and tested on Unix (Linux / macOS).&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;gnark&lt;/code&gt; issues are tracked &lt;a href=&#34;https://github.com/consensys/gnark/issues&#34;&gt;in the GitHub issues tab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To report a security bug, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/Consensys/gnark/master/SECURITY.md&#34;&gt;&lt;code&gt;gnark&lt;/code&gt; Security Policy&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions, queries or comments, &lt;a href=&#34;https://github.com/ConsenSys/gnark/discussions&#34;&gt;GitHub discussions&lt;/a&gt; is the place to find us.&lt;/p&gt; &#xA;&lt;p&gt;You can also get in touch directly: &lt;a href=&#34;mailto:gnark@consensys.net&#34;&gt;gnark@consensys.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Consensys/gnark/master/CHANGELOG.md&#34;&gt;Release Notes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Proving schemes and curves&lt;/h2&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://docs.gnark.consensys.net/Concepts/schemes_curves&#34;&gt;Proving schemes and curves&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gnark&lt;/code&gt; support the following zk-SNARKs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://eprint.iacr.org/2016/260&#34;&gt;Groth16&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://eprint.iacr.org/2019/953&#34;&gt;PlonK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;which can be instantiated with the following curves&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BN254&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BLS12-381&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BLS12-377&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BW6-761&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BLS24-315&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BW6-633&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BLS24-317&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://docs.gnark.consensys.net/&#34;&gt;&lt;code&gt;gnark&lt;/code&gt; User Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is what &lt;code&gt;x**3 + x + 5 = y&lt;/code&gt; looks like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;github.com/consensys/gnark-crypto/ecc&#34;&#xA;&#x9;&#34;github.com/consensys/gnark/backend/groth16&#34;&#xA;&#x9;&#34;github.com/consensys/gnark/frontend&#34;&#xA;&#x9;&#34;github.com/consensys/gnark/frontend/cs/r1cs&#34;&#xA;)&#xA;&#xA;// CubicCircuit defines a simple circuit&#xA;// x**3 + x + 5 == y&#xA;type CubicCircuit struct {&#xA;&#x9;// struct tags on a variable is optional&#xA;&#x9;// default uses variable name and secret visibility.&#xA;&#x9;X frontend.Variable `gnark:&#34;x&#34;`&#xA;&#x9;Y frontend.Variable `gnark:&#34;,public&#34;`&#xA;}&#xA;&#xA;// Define declares the circuit constraints&#xA;// x**3 + x + 5 == y&#xA;func (circuit *CubicCircuit) Define(api frontend.API) error {&#xA;&#x9;x3 := api.Mul(circuit.X, circuit.X, circuit.X)&#xA;&#x9;api.AssertIsEqual(circuit.Y, api.Add(x3, circuit.X, 5))&#xA;&#x9;return nil&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;// compiles our circuit into a R1CS&#xA;&#x9;var circuit CubicCircuit&#xA;&#x9;ccs, _ := frontend.Compile(ecc.BN254.ScalarField(), r1cs.NewBuilder, &amp;amp;circuit)&#xA;&#xA;&#x9;// groth16 zkSNARK: Setup&#xA;&#x9;pk, vk, _ := groth16.Setup(ccs)&#xA;&#xA;&#x9;// witness definition&#xA;&#x9;assignment := CubicCircuit{X: 3, Y: 35}&#xA;&#x9;witness, _ := frontend.NewWitness(&amp;amp;assignment, ecc.BN254.ScalarField())&#xA;&#x9;publicWitness, _ := witness.Public()&#xA;&#xA;&#x9;// groth16: Prove &amp;amp; Verify&#xA;&#x9;proof, _ := groth16.Prove(ccs, pk, witness)&#xA;&#x9;groth16.Verify(proof, vk, publicWitness)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GPU Support&lt;/h3&gt; &#xA;&lt;h4&gt;Icicle Library&lt;/h4&gt; &#xA;&lt;p&gt;The following schemes and curves support experimental use of Ingomyama&#39;s Icicle GPU library for low level zk-SNARK primitives such as MSM, NTT, and polynomial operations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://eprint.iacr.org/2016/260&#34;&gt;Groth16&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;instantiated with the following curve(s)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BN254&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use GPUs, add the &lt;code&gt;icicle&lt;/code&gt; buildtag to your build/run commands, e.g. &lt;code&gt;go run -tags=icicle main.go&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can then toggle on or off icicle acceleration by providing the &lt;code&gt;WithIcicleAcceleration&lt;/code&gt; backend ProverOption:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;    // toggle on&#xA;    proofIci, err := groth16.Prove(ccs, pk, secretWitness, backend.WithIcicleAcceleration())&#xA;    &#xA;    // toggle off&#xA;    proof, err := groth16.Prove(ccs, pk, secretWitness)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about prerequisites see the &lt;a href=&#34;https://github.com/ingonyama-zk/icicle&#34;&gt;Icicle repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citing&lt;/h2&gt; &#xA;&lt;p&gt;If you use &lt;code&gt;gnark&lt;/code&gt; in your research a citation would be appreciated. Please use the following BibTeX to cite the most recent release.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bib&#34;&gt;@software{gnark-v0.9.0,&#xA;  author       = {Gautam Botrel and&#xA;                  Thomas Piellard and&#xA;                  Youssef El Housni and&#xA;                  Ivo Kubjas and&#xA;                  Arya Tabaie},&#xA;  title        = {ConsenSys/gnark: v0.9.0},&#xA;  month        = feb,&#xA;  year         = 2023,&#xA;  publisher    = {Zenodo},&#xA;  version      = {v0.9.0},&#xA;  doi          = {10.5281/zenodo.5819104},&#xA;  url          = {https://doi.org/10.5281/zenodo.5819104}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/Consensys/gnark/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on our &lt;a href=&#34;https://raw.githubusercontent.com/Consensys/gnark/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;, and the process for submitting pull requests to us.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;http://semver.org/&#34;&gt;SemVer&lt;/a&gt; for versioning. For the versions available, see the &lt;a href=&#34;https://github.com/consensys/gnark/tags&#34;&gt;tags on this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache 2 License - see the &lt;a href=&#34;https://raw.githubusercontent.com/Consensys/gnark/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bookstairs/bookhunter</title>
    <updated>2023-12-04T01:33:24Z</updated>
    <id>tag:github.com,2023-12-04:/bookstairs/bookhunter</id>
    <link href="https://github.com/bookstairs/bookhunter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A download tools for clawing the ebooks from internets.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚è¨ bookhunter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bookstairs/bookhunter/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/bookstairs/bookhunter&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/bookstairs/bookhunter&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/bookstairs/bookhunter&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/bookstairs/bookhunter.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/bookstairs/bookhunter.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/bookstairs/bookhunter/workflows/release/badge.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Downloading books from &lt;a href=&#34;https://github.com/talebook/talebook&#34;&gt;talebook&lt;/a&gt;, &lt;a href=&#34;https://sobooks.cc&#34;&gt;SoBooks&lt;/a&gt; &lt;a href=&#34;https://basic.smartedu.cn/tchMaterial&#34;&gt;‰∏≠Â∞èÂ≠¶ÊïôÊùê&lt;/a&gt; and Telegram Channels. This is a totally rewritten fork compared to its &lt;a href=&#34;https://github.com/hellojukay/dl-talebook&#34;&gt;original version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üöß Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser&#34;&gt;Go Releaser&lt;/a&gt; is used for releasing and local building&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/golangci/golangci-lint&#34;&gt;golangci-lint&lt;/a&gt; is used for code style.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pre-commit.com/&#34;&gt;pre-commit&lt;/a&gt; is used for checking code before committing.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üíæ Install&lt;/h2&gt; &#xA;&lt;h3&gt;üçé Homebrew (for macOS, Linux)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew tap bookstairs/tap&#xA;brew install bookhunter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üíª Scope (for Windows)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;scoop bucket add bookstairs https://github.com/bookstairs/scoop-bucket.git&#xA;scoop install bookstairs/bookhunter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üõ† Manually&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest release in &lt;a href=&#34;https://github.com/bookstairs/bookhunter/releases&#34;&gt;release page&lt;/a&gt;. Choose related tarball by your running environment.&lt;/p&gt; &#xA;&lt;h2&gt;üìö Usage&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Website&lt;/th&gt; &#xA;   &lt;th&gt;Address&lt;/th&gt; &#xA;   &lt;th&gt;Direct Download&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://www.aliyundrive.com/&#34;&gt;Aliyun&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://www.lanzou.com/&#34;&gt;Lanzou&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://cloud.189.cn/&#34;&gt;Telecom&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bookstairs/bookhunter/master/#download-textbooks-for-kids&#34;&gt;Êô∫ÊÖßÊïôËÇ≤Âπ≥Âè∞&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://basic.smartedu.cn/tchMaterial&#34;&gt;https://basic.smartedu.cn/tchMaterial&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bookstairs/bookhunter/master/#download-books-from-talebook&#34;&gt;Talebook&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/talebook/talebook&#34;&gt;https://github.com/talebook/talebook&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bookstairs/bookhunter/master/#download-books-from-sobooks&#34;&gt;SoBooks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sobooks.net&#34;&gt;https://sobooks.net&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bookstairs/bookhunter/master/#download-books-from-telegram-groups&#34;&gt;Telegram&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://t.me&#34;&gt;https://t.me&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Login Aliyundrive to get the &lt;code&gt;refreshToken&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We would show a QR code at the first time. And cache the &lt;code&gt;refreshToken&lt;/code&gt; after successfully login.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bookhunter aliyun&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download textbooks for Kids&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Usage:&#xA;  bookhunter k12 [flags]&#xA;&#xA;Flags:&#xA;  -d, --download string   The book directory you want to use (default &#34;.&#34;)&#xA;  -h, --help              help for k12&#xA;      --ratelimit int     The allowed requests per minutes for every thread (default 30)&#xA;  -t, --thread int        The number of download thead (default 1)&#xA;&#xA;Global Flags:&#xA;  -c, --config string       The config path for bookhunter&#xA;      --proxy string        The request proxy&#xA;  -a, --user-agent string   The request user-agent (default &#34;Mozilla/5.0 (X11; Linux i686; rv:13.0) Gecko/13.0 Firefox/13.0&#34;)&#xA;      --verbose             Print all the logs for debugging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Register account in Talebook&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Usage:&#xA;  bookhunter talebook register [flags]&#xA;&#xA;Flags:&#xA;  -e, --email string      The talebook email&#xA;  -h, --help              help for register&#xA;  -p, --password string   The talebook password&#xA;  -u, --username string   The talebook username&#xA;  -w, --website string    The talebook link&#xA;&#xA;Global Flags:&#xA;  -c, --config string       The config path for bookhunter&#xA;      --proxy string        The request proxy&#xA;  -a, --user-agent string   The request user-agent (default &#34;Mozilla/5.0 (X11; Linux i686; rv:13.0) Gecko/13.0 Firefox/13.0&#34;)&#xA;      --verbose             Print all the logs for debugging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download books from Talebook&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Usage:&#xA;  bookhunter talebook download [flags]&#xA;&#xA;Flags:&#xA;  -d, --download string   The book directory you want to use (default &#34;.&#34;)&#xA;  -f, --format strings    The file formats you want to download (default [epub,azw3,mobi,pdf,zip])&#xA;  -h, --help              help for download&#xA;  -i, --initial int       The book id you want to start download (default 1)&#xA;  -p, --password string   The talebook password&#xA;      --ratelimit int     The allowed requests per minutes for every thread (default 30)&#xA;  -r, --rename            Rename the book file by book id&#xA;  -t, --thread int        The number of download thead (default 1)&#xA;  -u, --username string   The talebook username&#xA;  -w, --website string    The talebook link&#xA;&#xA;Global Flags:&#xA;  -c, --config string       The config path for bookhunter&#xA;      --proxy string        The request proxy&#xA;  -a, --user-agent string   The request user-agent (default &#34;Mozilla/5.0 (X11; Linux i686; rv:13.0) Gecko/13.0 Firefox/13.0&#34;)&#xA;      --verbose             Print all the logs for debugging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download books from SoBooks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Usage:&#xA;  bookhunter sobooks [flags]&#xA;&#xA;Flags:&#xA;      --code string       The secret code for SoBooks (default &#34;844283&#34;)&#xA;  -d, --download string   The book directory you want to use (default &#34;.&#34;)&#xA;  -e, --extract           Extract the archive file for filtering&#xA;  -f, --format strings    The file formats you want to download (default [epub,azw3,mobi,pdf,zip])&#xA;  -h, --help              help for sobooks&#xA;  -i, --initial int       The book id you want to start download (default 1)&#xA;      --ratelimit int     The allowed requests per minutes for every thread (default 30)&#xA;  -r, --rename            Rename the book file by book id&#xA;  -t, --thread int        The number of download thead (default 1)&#xA;&#xA;Global Flags:&#xA;  -c, --config string       The config path for bookhunter&#xA;      --proxy string        The request proxy&#xA;  -a, --user-agent string   The request user-agent (default &#34;Mozilla/5.0 (X11; Linux i686; rv:13.0) Gecko/13.0 Firefox/13.0&#34;)&#xA;      --verbose             Print all the logs for debugging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download books from Telegram groups.&lt;/h3&gt; &#xA;&lt;p&gt;Example command: &lt;code&gt;bookhunter telegram --appID ****** --appHash ****** -k https://t.me/MothLib&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please refer &lt;a href=&#34;https://core.telegram.org/api/obtaining_api_id&#34;&gt;Creating your Telegram Application&lt;/a&gt; to obtain your &lt;code&gt;appID&lt;/code&gt; and &lt;code&gt;appHash&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Usage:&#xA;  bookhunter telegram [flags]&#xA;&#xA;Flags:&#xA;      --appHash string     The app hash for telegram&#xA;      --appID int          The app id for telegram&#xA;  -k, --channelID string   The channel id for telegram&#xA;  -d, --download string    The book directory you want to use (default &#34;.&#34;)&#xA;  -e, --extract            Extract the archive file for filtering&#xA;  -f, --format strings     The file formats you want to download (default [epub,azw3,mobi,pdf,zip])&#xA;  -h, --help               help for telegram&#xA;  -i, --initial int        The book id you want to start download (default 1)&#xA;  -b, --mobile string      The mobile number, we will add +86 as default zone code&#xA;      --ratelimit int      The allowed requests per minutes for every thread (default 30)&#xA;      --refresh            Refresh the login session&#xA;  -r, --rename             Rename the book file by book id&#xA;  -t, --thread int         The number of download thead (default 1)&#xA;&#xA;Global Flags:&#xA;  -c, --config string       The config path for bookhunter&#xA;      --proxy string        The request proxy&#xA;  -a, --user-agent string   The request user-agent (default &#34;Mozilla/5.0 (X11; Linux i686; rv:13.0) Gecko/13.0 Firefox/13.0&#34;)&#xA;      --verbose             Print all the logs for debugging&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>