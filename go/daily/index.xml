<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-01T01:33:48Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yeasy/docker_practice</title>
    <updated>2023-01-01T01:33:48Z</updated>
    <id>tag:github.com,2023-01-01:/yeasy/docker_practice</id>
    <link href="https://github.com/yeasy/docker_practice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn and understand Docker&amp;Container technologies, with real DevOps practice!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker — 从入门到实践&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yeasy/docker_practice&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/yeasy/docker_practice.svg?style=social&amp;amp;label=Stars&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yeasy/docker_practice/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/yeasy/docker_practice/all.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/docker/docker-ce&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Based-Docker%20CE%20v20.10-blue.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://union-click.jd.com/jdc?e=&amp;amp;p=JF8AANADIgZlGF0VAxUDVBJdHDISBFAfWRcCGzcRRANLXSJeEF4aVwkMGQ1eD0kdSVJKSQVJHBIEUB9ZFwIbGAxeB0gyS34PbFlHVHNkI0MQEAoIcSxyBWFLRAtZK1olABYHXR9eHAoQN2UbXCVQfN_jrYOwsw7T_5SOnZUiBmUbXBYBFwBVG14UBBAAZRxbHDJJUjscCEEHEQ4FSA4VBhBQZStrFjIiN1UrWCVAfARQT1gQA0cFAEwOEAcRDlMTDEALQAFTEwwRUhMAUR1cJQATBlES&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docker%20%E6%8A%80%E6%9C%AF%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E6%88%98-jd.com-red.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;v1.3.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;-&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yeasy/docker_practice&#34;&gt;简体中文&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://vuepress.mirror.docker-practice.com/&#34;&gt;阅读&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应用的维护效率，降低了云计算应用开发的成本！使用 Docker，可以让应用的部署、测试和分发都变得前所未有的高效和轻松！&lt;/p&gt; &#xA;&lt;p&gt;无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握 Docker，节约有限的生命。&lt;/p&gt; &#xA;&lt;p&gt;本书既适用于具备基础 Linux 知识的 Docker 初学者，也希望可供理解原理和实现的高级用户参考。同时，书中给出的实践案例，可供在进行实际部署时借鉴。前六章为基础内容，供用户理解 Docker 的基本概念和操作；7 ~ 9 章介绍包括数据管理、网络等高级操作；第 10 ~ 12 章介绍了容器生态中的几个核心项目；13、14 章讨论了关于 Docker 安全和实现技术等高级话题。后续章节则分别介绍包括 Etcd、Fedora CoreOS、Kubernetes、容器云等相关热门开源项目。最后，还展示了使用容器技术的典型的应用场景和实践案例。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在线阅读：&lt;a href=&#34;https://vuepress.mirror.docker-practice.com/&#34;&gt;docker-practice.com&lt;/a&gt;，&lt;a href=&#34;https://yeasy.gitbook.io/docker_practice/&#34;&gt;GitBook&lt;/a&gt;，&lt;a href=&#34;https://github.com/yeasy/docker_practice/raw/master/SUMMARY.md&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;离线阅读：&lt;a href=&#34;https://github.com/yeasy/docker_practice/wiki/%E7%A6%BB%E7%BA%BF%E9%98%85%E8%AF%BB%E5%8A%9F%E8%83%BD%E8%AF%A6%E8%A7%A3&#34;&gt;&lt;code&gt;$ docker run -it --rm -p 4000:80 ccr.ccs.tencentyun.com/dockerpracticesig/docker_practice:vuepress&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docker 自身仍在快速发展中，生态环境也在蓬勃成长。建议初学者使用最新稳定版本的 Docker 进行学习实践。欢迎 &lt;a href=&#34;https://raw.githubusercontent.com/yeasy/docker_practice/master/CONTRIBUTING.md&#34;&gt;参与项目维护&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yeasy/docker_practice/master/CHANGELOG.md&#34;&gt;修订记录&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yeasy/docker_practice/graphs/contributors&#34;&gt;贡献者名单&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;微信小程序&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://docker_practice.gitee.io/pic/dp-wechat-miniprogram.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;微信扫码 随时随地阅读~&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;技术交流&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://docker_practice.gitee.io/pic/dpsig-wechat.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;微信扫码 加入群聊~ 或者微信添加 &lt;code&gt;dpsigs&lt;/code&gt; 邀请入群&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;欢迎加入 Docker 技术交流 QQ 群，分享 Docker 资源，交流 Docker 技术。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;QQ 群 I （已满）：341410255&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 II （已满）：419042067&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 III （已满）：210028779&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 IV （已满）：483702734&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 V （已满）：460598761&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 VI （已满）：581983671&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 VII （已满）：252403484&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 VIII（已满）：544818750&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 IX （已满）：571502246&lt;/li&gt; &#xA; &lt;li&gt;QQ 群 X （可加）：145983035&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果有容器技术相关的疑问，请通过 &lt;a href=&#34;https://github.com/yeasy/docker_practice/issues/new/choose&#34;&gt;Issues&lt;/a&gt; 来提出。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;进阶学习&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://union-click.jd.com/jdc?e=&amp;amp;p=JF8AANADIgZlGF0VAxUDVBJdHDISBFAfWRcCGzcRRANLXSJeEF4aVwkMGQ1eD0kdSVJKSQVJHBIEUB9ZFwIbGAxeB0gyS34PbFlHVHNkI0MQEAoIcSxyBWFLRAtZK1olABYHXR9eHAoQN2UbXCVQfN_jrYOwsw7T_5SOnZUiBmUbXBYBFwBVG14UBBAAZRxbHDJJUjscCEEHEQ4FSA4VBhBQZStrFjIiN1UrWCVAfARQT1gQA0cFAEwOEAcRDlMTDEALQAFTEwwRUhMAUR1cJQATBlES&#34;&gt;&lt;img src=&#34;https://github.com/yeasy/docker_practice/raw/master/_images/docker_primer3.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;《&lt;a href=&#34;https://union-click.jd.com/jdc?e=&amp;amp;p=JF8AANADIgZlGF0VAxUDVBJdHDISBFAfWRcCGzcRRANLXSJeEF4aVwkMGQ1eD0kdSVJKSQVJHBIEUB9ZFwIbGAxeB0gyS34PbFlHVHNkI0MQEAoIcSxyBWFLRAtZK1olABYHXR9eHAoQN2UbXCVQfN_jrYOwsw7T_5SOnZUiBmUbXBYBFwBVG14UBBAAZRxbHDJJUjscCEEHEQ4FSA4VBhBQZStrFjIiN1UrWCVAfARQT1gQA0cFAEwOEAcRDlMTDEALQAFTEwwRUhMAUR1cJQATBlES&#34;&gt;Docker 技术入门与实战&lt;/a&gt;》第三版已经面世，介绍最新的容器技术栈，欢迎大家阅读使用并反馈建议。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://union-click.jd.com/jdc?e=&amp;amp;p=JF8AANADIgZlGF0VAxUDVBJdHDISBFAfWRcCGzcRRANLXSJeEF4aVwkMGQ1eD0kdSVJKSQVJHBIEUB9ZFwIbGAxeB0gyS34PbFlHVHNkI0MQEAoIcSxyBWFLRAtZK1olABYHXR9eHAoQN2UbXCVQfN_jrYOwsw7T_5SOnZUiBmUbXBYBFwBVG14UBBAAZRxbHDJJUjscCEEHEQ4FSA4VBhBQZStrFjIiN1UrWCVAfARQT1gQA0cFAEwOEAcRDlMTDEALQAFTEwwRUhMAUR1cJQATBlES&#34;&gt;京东图书&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://product.china-pub.com/8052127&#34;&gt;China-Pub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;鼓励项目&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://github.com/yeasy/docker_practice/raw/master/_images/donate.jpeg&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;欢迎鼓励项目一杯 coffee~&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>git-lfs/git-lfs</title>
    <updated>2023-01-01T01:33:48Z</updated>
    <id>tag:github.com,2023-01-01:/git-lfs/git-lfs</id>
    <link href="https://github.com/git-lfs/git-lfs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Git extension for versioning large files&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Git Large File Storage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/git-lfs/git-lfs/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/git-lfs/git-lfs/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git-lfs.github.com&#34;&gt;Git LFS&lt;/a&gt; is a command line extension and &lt;a href=&#34;https://raw.githubusercontent.com/git-lfs/git-lfs/main/docs/spec.md&#34;&gt;specification&lt;/a&gt; for managing large files with Git.&lt;/p&gt; &#xA;&lt;p&gt;The client is written in Go, with pre-compiled binaries available for Mac, Windows, Linux, and FreeBSD. Check out the &lt;a href=&#34;http://git-lfs.github.com&#34;&gt;website&lt;/a&gt; for an overview of features.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Downloading&lt;/h3&gt; &#xA;&lt;p&gt;You can install the Git LFS client in several different ways, depending on your setup and preferences.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux users&lt;/strong&gt;. Debian and RPM packages are available from &lt;a href=&#34;https://packagecloud.io/github/git-lfs/install&#34;&gt;PackageCloud&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS users&lt;/strong&gt;. &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; bottles are distributed, and can be installed via &lt;code&gt;brew install git-lfs&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows users&lt;/strong&gt;. Git LFS is included in the distribution of &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt;. Alternatively, you can install a recent version of Git LFS from the &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt; package manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Binary packages&lt;/strong&gt;. In addition, &lt;a href=&#34;https://github.com/git-lfs/git-lfs/releases&#34;&gt;binary packages&lt;/a&gt; are available for Linux, macOS, Windows, and FreeBSD.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Building from source&lt;/strong&gt;. &lt;a href=&#34;https://github.com/git-lfs/git-lfs.git&#34;&gt;This repository&lt;/a&gt; can also be built from source using the latest version of &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt;, and the available instructions in our &lt;a href=&#34;https://github.com/git-lfs/git-lfs/wiki/Installation#source&#34;&gt;Wiki&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that Debian and RPM packages are built for all OSes for amd64 and i386. For arm64, only Debian packages for the latest Debian release are built due to the cost of building in emulation.&lt;/p&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;h4&gt;From binary&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/git-lfs/git-lfs/releases&#34;&gt;binary packages&lt;/a&gt; include a script which will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Git LFS binaries onto the system &lt;code&gt;$PATH&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;git lfs install&lt;/code&gt; to perform required global configuration changes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;From source&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure you have the latest version of Go, GNU make, and a standard Unix-compatible build environment installed.&lt;/li&gt; &#xA; &lt;li&gt;On Windows, install &lt;code&gt;goversioninfo&lt;/code&gt; with &lt;code&gt;go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@latest&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Place the &lt;code&gt;git-lfs&lt;/code&gt; binary, which can be found in &lt;code&gt;bin&lt;/code&gt;, on your system’s executable &lt;code&gt;$PATH&lt;/code&gt; or equivalent.&lt;/li&gt; &#xA; &lt;li&gt;Git LFS requires global configuration changes once per-machine. This can be done by running:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ git lfs install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Verifying releases&lt;/h4&gt; &#xA;&lt;p&gt;Releases are signed with the OpenPGP key of one of the core team members. To get these keys, you can run the following command, which will print them to standard output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ curl -L https://api.github.com/repos/git-lfs/git-lfs/tarball/core-gpg-keys | tar -Ozxf -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have the keys, you can download the &lt;code&gt;sha256sums.asc&lt;/code&gt; file and verify the file you want like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ gpg -d sha256sums.asc | grep git-lfs-linux-amd64-v2.10.0.tar.gz | shasum -a 256 -c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the convenience of distributors, we also provide a wider variety of signed hashes in the &lt;code&gt;hashes.asc&lt;/code&gt; file. Those hashes are in the tagged BSD format, but can be verified with Perl&#39;s &lt;code&gt;shasum&lt;/code&gt; or the GNU hash utilities, just like the ones in &lt;code&gt;sha256sums.asc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;To begin using Git LFS within a Git repository that is not already configured for Git LFS, you can indicate which files you would like Git LFS to manage. This can be done by running the following &lt;em&gt;from within a Git repository&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git lfs track &#34;*.psd&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Where &lt;code&gt;*.psd&lt;/code&gt; is the pattern of filenames that you wish to track. You can read more about this pattern syntax &lt;a href=&#34;https://git-scm.com/docs/gitattributes&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; the quotation marks surrounding the pattern are important to prevent the glob pattern from being expanded by the shell.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;After any invocation of &lt;code&gt;git-lfs-track(1)&lt;/code&gt; or &lt;code&gt;git-lfs-untrack(1)&lt;/code&gt;, you &lt;em&gt;must commit changes to your &lt;code&gt;.gitattributes&lt;/code&gt; file&lt;/em&gt;. This can be done by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add .gitattributes&#xA;$ git commit -m &#34;track *.psd files using Git LFS&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now interact with your Git repository as usual, and Git LFS will take care of managing your large files. For example, changing a file named &lt;code&gt;my.psd&lt;/code&gt; (tracked above via &lt;code&gt;*.psd&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add my.psd&#xA;$ git commit -m &#34;add psd&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Tip:&lt;/em&gt; if you have large files already in your repository&#39;s history, &lt;code&gt;git lfs track&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; track them retroactively. To migrate existing large files in your history to use Git LFS, use &lt;code&gt;git lfs migrate&lt;/code&gt;. For example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ git lfs migrate import --include=&#34;*.psd&#34; --everything&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note that this will rewrite history and change all of the Git object IDs in your repository, just like the export version of this command.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;For more information, read &lt;a href=&#34;https://github.com/git-lfs/git-lfs/raw/main/docs/man/git-lfs-migrate.adoc&#34;&gt;&lt;code&gt;git-lfs-migrate(1)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can confirm that Git LFS is managing your PSD file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git lfs ls-files&#xA;3c2f7aedfb * my.psd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you&#39;ve made your commits, push your files to the Git remote:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git push origin main&#xA;Uploading LFS objects: 100% (1/1), 810 B, 1.2 KB/s&#xA;# ...&#xA;To https://github.com/git-lfs/git-lfs-test&#xA;   67fcf6a..47b2002  main -&amp;gt; main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Git LFS requires at least Git 1.8.2 on Linux or 1.8.5 on macOS.&lt;/p&gt; &#xA;&lt;h3&gt;Uninstalling&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve decided that Git LFS isn&#39;t right for you, you can convert your repository back to a plain Git repository with &lt;code&gt;git lfs migrate&lt;/code&gt; as well. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ git lfs migrate export --include=&#34;*.psd&#34; --everything&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that this will rewrite history and change all of the Git object IDs in your repository, just like the import version of this command.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If there&#39;s some reason that things aren&#39;t working out for you, please let us know in an issue, and we&#39;ll definitely try to help or get it fixed.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Git LFS maintains a list of currently known limitations, which you can find and edit &lt;a href=&#34;https://github.com/git-lfs/git-lfs/wiki/Limitations&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Git LFS source code utilizes Go modules in its build system, and therefore this project contains a &lt;code&gt;go.mod&lt;/code&gt; file with a defined Go module path. However, we do not maintain a stable Go language API or ABI, as Git LFS is intended to be used solely as a compiled binary utility. Please do not import the &lt;code&gt;git-lfs&lt;/code&gt; module into other Go code and do not rely on it as a source code dependency.&lt;/p&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;You can get help on specific commands directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git lfs help &amp;lt;subcommand&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/git-lfs/git-lfs/main/docs&#34;&gt;official documentation&lt;/a&gt; has command references and specifications for the tool. There&#39;s also a &lt;a href=&#34;https://github.com/git-lfs/git-lfs/raw/main/docs/man/git-lfs-faq.adoc&#34;&gt;FAQ&lt;/a&gt; shipped with Git LFS which answers some common questions.&lt;/p&gt; &#xA;&lt;p&gt;If you have a question on how to use Git LFS, aren&#39;t sure about something, or are looking for input from others on tips about best practices or use cases, feel free to &lt;a href=&#34;https://github.com/git-lfs/git-lfs/discussions&#34;&gt;start a discussion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can always &lt;a href=&#34;https://github.com/git-lfs/git-lfs/issues&#34;&gt;open an issue&lt;/a&gt;, and one of the Core Team members will respond to you. Please be sure to include:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The output of &lt;code&gt;git lfs env&lt;/code&gt;, which displays helpful information about your Git repository useful in debugging.&lt;/li&gt; &#xA; &lt;li&gt;Any failed commands re-run with &lt;code&gt;GIT_TRACE=1&lt;/code&gt; in the environment, which displays additional information pertaining to why a command crashed.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/git-lfs/git-lfs/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for info on working on Git LFS and sending patches. Related projects are listed on the &lt;a href=&#34;https://github.com/git-lfs/git-lfs/wiki/Implementations&#34;&gt;Implementations wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/git-lfs/git-lfs/main/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt; for info on how to submit reports of security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Core Team&lt;/h2&gt; &#xA;&lt;p&gt;These are the humans that form the Git LFS core team, which runs the project.&lt;/p&gt; &#xA;&lt;p&gt;In alphabetical order:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bk2204&#34;&gt;@bk2204&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/chrisd8088&#34;&gt;@chrisd8088&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/larsxschneider&#34;&gt;@larsxschneider&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bk2204&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/497054?s=100&amp;amp;v=4&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/chrisd8088&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/28857117?s=100&amp;amp;v=4&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/larsxschneider&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/477434?s=100&amp;amp;v=4&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://keyserver.ubuntu.com/pks/lookup?op=get&amp;amp;search=0x88ace9b29196305ba9947552f1ba225c0223b187&#34;&gt;PGP 0223B187&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://keyserver.ubuntu.com/pks/lookup?op=get&amp;amp;search=0x86cd3297749375bcf8206715f54fe648088335a9&#34;&gt;PGP 088335A9&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://keyserver.ubuntu.com/pks/lookup?op=get&amp;amp;search=0xaa3b3450295830d2de6db90caba67be5a5795889&#34;&gt;PGP A5795889&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Alumni&lt;/h3&gt; &#xA;&lt;p&gt;These are the humans that have in the past formed the Git LFS core team, or have otherwise contributed a significant amount to the project. Git LFS would not be possible without them.&lt;/p&gt; &#xA;&lt;p&gt;In alphabetical order:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/andyneff&#34;&gt;@andyneff&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/PastelMobileSuit&#34;&gt;@PastelMobileSuit&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rubyist&#34;&gt;@rubyist&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sinbad&#34;&gt;@sinbad&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/technoweenie&#34;&gt;@technoweenie&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ttaylorr&#34;&gt;@ttaylorr&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/andyneff&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/7596961?v=3&amp;amp;s=100&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/PastelMobileSuit&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/37254014?s=100&amp;amp;v=4&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rubyist&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/143?v=3&amp;amp;s=100&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sinbad&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/142735?v=3&amp;amp;s=100&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/technoweenie&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/21?v=3&amp;amp;s=100&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ttaylorr&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/443245?s=100&amp;amp;v=4&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>pion/webrtc</title>
    <updated>2023-01-01T01:33:48Z</updated>
    <id>tag:github.com,2023-01-01:/pion/webrtc</id>
    <link href="https://github.com/pion/webrtc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pure Go implementation of the WebRTC API&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://pion.ly&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pion/webrtc/master/.github/pion-gopher-webrtc.png&#34; alt=&#34;Pion WebRTC&#34; height=&#34;250px&#34;&gt;&lt;/a&gt; &lt;br&gt; Pion WebRTC &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;A pure Go implementation of the WebRTC API&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pion.ly&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/pion-webrtc-gray.svg?longCache=true&amp;amp;colorB=brightgreen&#34; alt=&#34;Pion webrtc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcegraph.com/github.com/pion/webrtc?badge&#34;&gt;&lt;img src=&#34;https://sourcegraph.com/github.com/pion/webrtc/-/badge.svg?sanitize=true&#34; alt=&#34;Sourcegraph Widget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pion.ly/slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&amp;amp;logo=slack&amp;amp;colorB=brightgreen&#34; alt=&#34;Slack Widget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/_pion?ref_src=twsrc%5Etfw&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url.svg?label=Follow%20%40_pion&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2F_pion&#34; alt=&#34;Twitter Widget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pion/awesome-pion&#34; alt=&#34;Awesome Pion&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://travis-ci.org/pion/webrtc&#34;&gt;&lt;img src=&#34;https://travis-ci.org/pion/webrtc.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/pion/webrtc/v3&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/pion/webrtc/v3&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/pion/webrtc&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/pion/webrtc/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/pion/webrtc/v3&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/pion/webrtc/v3&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pion/webrtc/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.golang.org/using-go-modules&#34;&gt;Go Modules&lt;/a&gt; are mandatory for using Pion WebRTC. So make sure you set &lt;code&gt;export GO111MODULE=on&lt;/code&gt;, and explicitly specify &lt;code&gt;/v2&lt;/code&gt; or &lt;code&gt;/v3&lt;/code&gt; when importing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pion/webrtc/master/examples/README.md&#34;&gt;example applications&lt;/a&gt;&lt;/strong&gt; contains code samples of common things people build with Pion WebRTC.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pion/example-webrtc-applications&#34;&gt;example-webrtc-applications&lt;/a&gt;&lt;/strong&gt; contains more full featured examples that use 3rd party libraries.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pion/awesome-pion&#34;&gt;awesome-pion&lt;/a&gt;&lt;/strong&gt; contains projects that have used Pion, and serve as real world examples of usage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/pion/webrtc/v3&#34;&gt;GoDoc&lt;/a&gt;&lt;/strong&gt; is an auto generated API reference. All our Public APIs are commented.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pion/webrtc/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;&lt;/strong&gt; has answers to common questions. If you have a question not covered please ask in &lt;a href=&#34;https://pion.ly/slack&#34;&gt;Slack&lt;/a&gt; we are always looking to expand it.&lt;/p&gt; &#xA;&lt;p&gt;Now go build something awesome! Here are some &lt;strong&gt;ideas&lt;/strong&gt; to get your creative juices flowing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Send a video file to multiple browser in real time for perfectly synchronized movie watching.&lt;/li&gt; &#xA; &lt;li&gt;Send a webcam on an embedded device to your browser with no additional server required!&lt;/li&gt; &#xA; &lt;li&gt;Securely send data between two servers, without using pub/sub.&lt;/li&gt; &#xA; &lt;li&gt;Record your webcam and do special effects server side.&lt;/li&gt; &#xA; &lt;li&gt;Build a conferencing application that processes audio/video and make decisions off of it.&lt;/li&gt; &#xA; &lt;li&gt;Remotely control a robots and stream its cameras in realtime.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Want to learn more about WebRTC?&lt;/h3&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://github.com/pion/webrtc/wiki/OfficeHours&#34;&gt;Office Hours&lt;/a&gt;. Come hang out, ask questions, get help debugging and hear about the cool things being built with WebRTC. We also start every meeting with basic project planning.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://webrtcforthecurious.com&#34;&gt;WebRTC for the Curious&lt;/a&gt;. A book about WebRTC in depth, not just about the APIs. Learn the full details of ICE, SCTP, DTLS, SRTP, and how they work together to make up the WebRTC stack.&lt;/p&gt; &#xA;&lt;p&gt;This is also a great resource if you are trying to debug. Learn the tools of the trade and how to approach WebRTC issues.&lt;/p&gt; &#xA;&lt;p&gt;This book is vendor agnostic and will not have any Pion specific information.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;h4&gt;PeerConnection API&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go implementation of &lt;a href=&#34;https://w3c.github.io/webrtc-pc/&#34;&gt;webrtc-pc&lt;/a&gt; and &lt;a href=&#34;https://www.w3.org/TR/webrtc-stats/&#34;&gt;webrtc-stats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DataChannels&lt;/li&gt; &#xA; &lt;li&gt;Send/Receive audio and video&lt;/li&gt; &#xA; &lt;li&gt;Renegotiation&lt;/li&gt; &#xA; &lt;li&gt;Plan-B and Unified Plan&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/pion/webrtc/v3#SettingEngine&#34;&gt;SettingEngine&lt;/a&gt; for Pion specific extensions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Connectivity&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full ICE Agent&lt;/li&gt; &#xA; &lt;li&gt;ICE Restart&lt;/li&gt; &#xA; &lt;li&gt;Trickle ICE&lt;/li&gt; &#xA; &lt;li&gt;STUN&lt;/li&gt; &#xA; &lt;li&gt;TURN (UDP, TCP, DTLS and TLS)&lt;/li&gt; &#xA; &lt;li&gt;mDNS candidates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;DataChannels&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ordered/Unordered&lt;/li&gt; &#xA; &lt;li&gt;Lossy/Lossless&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Media&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;API with direct RTP/RTCP access&lt;/li&gt; &#xA; &lt;li&gt;Opus, PCM, H264, VP8 and VP9 packetizer&lt;/li&gt; &#xA; &lt;li&gt;API also allows developer to pass their own packetizer&lt;/li&gt; &#xA; &lt;li&gt;IVF, Ogg, H264 and Matroska provided for easy sending and saving&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pion/mediadevices&#34;&gt;getUserMedia&lt;/a&gt; implementation (Requires Cgo)&lt;/li&gt; &#xA; &lt;li&gt;Easy integration with x264, libvpx, GStreamer and ffmpeg.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pion/webrtc/tree/master/examples/simulcast&#34;&gt;Simulcast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pion/rtp/raw/master/codecs/vp9_packet.go#L138&#34;&gt;SVC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pion/interceptor/pull/4&#34;&gt;NACK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pion/interceptor/tree/master/pkg/report&#34;&gt;Sender/Receiver Reports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pion/interceptor/tree/master/pkg/twcc&#34;&gt;Transport Wide Congestion Control Feedback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pion/webrtc/tree/master/examples/bandwidth-estimation-from-disk&#34;&gt;Bandwidth Estimation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Security&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 and TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA for DTLS v1.2&lt;/li&gt; &#xA; &lt;li&gt;SRTP_AEAD_AES_256_GCM and SRTP_AES128_CM_HMAC_SHA1_80 for SRTP&lt;/li&gt; &#xA; &lt;li&gt;Hardware acceleration available for GCM suites&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Pure Go&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No Cgo usage&lt;/li&gt; &#xA; &lt;li&gt;Wide platform support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows, macOS, Linux, FreeBSD&lt;/li&gt; &#xA;   &lt;li&gt;iOS, Android&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pion/webrtc/wiki/WebAssembly-Development-and-Testing&#34;&gt;WASM&lt;/a&gt; see &lt;a href=&#34;https://raw.githubusercontent.com/pion/webrtc/master/examples/README.md#webassembly&#34;&gt;examples&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;386, amd64, arm, mips, ppc64&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Easy to build &lt;em&gt;Numbers generated on Intel(R) Core(TM) i5-2520M CPU @ 2.50GHz&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Time to build examples/play-from-disk&lt;/strong&gt; - 0.66s user 0.20s system 306% cpu 0.279 total&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Time to run entire test suite&lt;/strong&gt; - 25.60s user 9.40s system 45% cpu 1:16.69 total&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Tools to measure performance &lt;a href=&#34;https://github.com/pion/rtsp-bench&#34;&gt;provided&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Roadmap&lt;/h3&gt; &#xA;&lt;p&gt;The library is in active development, please refer to the &lt;a href=&#34;https://github.com/pion/webrtc/issues/9&#34;&gt;roadmap&lt;/a&gt; to track our major milestones. We also maintain a list of &lt;a href=&#34;https://github.com/pion/webrtc/wiki/Big-Ideas&#34;&gt;Big Ideas&lt;/a&gt; these are things we want to build but don&#39;t have a clear plan or the resources yet. If you are looking to get involved this is a great place to get started! We would also love to hear your ideas! Even if you can&#39;t implement it yourself, it could inspire others.&lt;/p&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;p&gt;Pion has an active community on the &lt;a href=&#34;https://pion.ly/slack&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://twitter.com/_pion&#34;&gt;Pion Twitter&lt;/a&gt; for project updates and important WebRTC news.&lt;/p&gt; &#xA;&lt;p&gt;We are always looking to support &lt;strong&gt;your projects&lt;/strong&gt;. Please reach out if you have something to build! If you need commercial support or don&#39;t want to use public methods you can contact us at &lt;a href=&#34;mailto:team@pion.ly&#34;&gt;team@pion.ly&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Check out the &lt;strong&gt;&lt;a href=&#34;https://github.com/pion/webrtc/wiki/Contributing&#34;&gt;contributing wiki&lt;/a&gt;&lt;/strong&gt; to join the group of amazing people making this project possible:&lt;/p&gt; &#xA;&lt;h3&gt;Sponsoring&lt;/h3&gt; &#xA;&lt;p&gt;Work on Pion&#39;s congestion control and bandwidth estimation was funded through the &lt;a href=&#34;https://nlnet.nl/useroperated/&#34;&gt;User-Operated Internet&lt;/a&gt; fund, a fund established by &lt;a href=&#34;https://nlnet.nl/&#34;&gt;NLnet&lt;/a&gt; made possible by financial support from the &lt;a href=&#34;https://pkt.cash/&#34;&gt;PKT Community&lt;/a&gt;/&lt;a href=&#34;https://pkt.cash/network-steward&#34;&gt;The Network Steward&lt;/a&gt; and stichting &lt;a href=&#34;https://technologycommons.org/&#34;&gt;Technology Commons Trust&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;MIT License - see &lt;a href=&#34;https://raw.githubusercontent.com/pion/webrtc/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for full text&lt;/p&gt;</summary>
  </entry>
</feed>