<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-04T01:33:38Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>okteto/okteto</title>
    <updated>2022-11-04T01:33:38Z</updated>
    <id>tag:github.com,2022-11-04:/okteto/okteto</id>
    <link href="https://github.com/okteto/okteto" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Develop your applications directly in your Kubernetes Cluster&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Okteto: A Tool to Develop Applications on Kubernetes&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/okteto/okteto&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/okteto/okteto.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3055&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3055/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/okteto/okteto/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/okteto/okteto.svg?style=flat-square&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/okteto/okteto/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/okteto/okteto.svg?style=flat-square&#34; alt=&#34;Apache License 2.0&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/okteto/okteto/total?logo=github&amp;amp;logoColor=white&#34; alt=&#34;Total Downloads&#34;&gt; &lt;a href=&#34;https://kubernetes.slack.com/messages/CM1QMQGS0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@kubernetes/okteto-red.svg?logo=slack&#34; alt=&#34;Chat in Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Kubernetes has made it very easy to deploy applications to the cloud at a higher scale than ever, but the development practices have not evolved at the same speed as application deployment patterns.&lt;/p&gt; &#xA;&lt;p&gt;Today, most developers try to either run parts of the infrastructure locally or just test these integrations directly in the cluster via CI jobs, or the &lt;em&gt;docker build/redeploy&lt;/em&gt; cycle. It works, but this workflow is painful and incredibly slow.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;okteto&lt;/code&gt; accelerates the development workflow of Kubernetes applications. You write your code locally and &lt;code&gt;okteto&lt;/code&gt; detects the changes and instantly updates your Kubernetes applications.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Okteto allows you to develop inside a container. When you run &lt;code&gt;okteto up&lt;/code&gt; your Kubernetes deployment is replaced by a development container that contains your development tools (e.g. maven and jdk, or npm, python, go compiler, debuggers, etc). This development container can be any &lt;a href=&#34;https://okteto.com/docs/reference/development-environments/&#34;&gt;docker image&lt;/a&gt;. The development container inherits the same secrets, configmaps, volumes or any other configuration value of the original Kubernetes deployment.&lt;/p&gt; &#xA;&lt;p&gt;In addition to that, &lt;code&gt;okteto up&lt;/code&gt; will:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a bidirectional file &lt;a href=&#34;https://okteto.com/docs/reference/file-synchronization/&#34;&gt;synchronization service&lt;/a&gt; to keep your changes up to date between your local filesystem and your development container.&lt;/li&gt; &#xA; &lt;li&gt;Automatic local and remote port forwarding using &lt;a href=&#34;https://okteto.com/docs/reference/ssh-server/&#34;&gt;SSH&lt;/a&gt;, so you can access your cluster services via &lt;code&gt;localhost&lt;/code&gt; or connect a remote debugger.&lt;/li&gt; &#xA; &lt;li&gt;Give you an interactive terminal to your development container, so you can build, test, and run your application as you would from a local terminal.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;All of this (and more) can be configured via a &lt;a href=&#34;https://okteto.com/docs/reference/manifest/&#34;&gt;simple YAML manifest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The end result is that the remote cluster is seen by your IDE and tools as a local filesystem/environment. You keep writing your code on your local IDE and as soon as you save a file, the change goes to the development container, and your application instantly updates (taking advantage of any hot-reload mechanism you already have). This whole process happens in an instant. No docker images need to be created and no Kubernetes manifests need to be applied to the cluster.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/okteto/okteto/master/docs/okteto-architecture.png&#34; alt=&#34;Okteto&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why Okteto&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;okteto&lt;/code&gt; has several advantages when compared to more traditional development approaches:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast inner loop development&lt;/strong&gt;: build and run your application using your favorite tools directly from your development container. Native builds are always faster than the &lt;em&gt;docker build/redeploy&lt;/em&gt; cycle.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Realistic development environment&lt;/strong&gt;: your development container reuses the same variables, secrets, sidecars, volumes, etc... than your original Kubernetes deployment. Realistic environments eliminate integration issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Replicability&lt;/strong&gt;: development containers eliminate the need to install your dependencies locally, everything is pre-configured in your development image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unlimited resources&lt;/strong&gt;: get access to the hardware and network of your cluster when developing your application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deployment independent&lt;/strong&gt;: &lt;code&gt;okteto&lt;/code&gt; decouples deployment from development. You can deploy your application with kubectl, Helm, a serverless framework, or even a CI pipeline and use &lt;code&gt;okteto up&lt;/code&gt; to develop it. This is especially useful for cloud-native applications where deployment pipelines are not trivial.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Works anywhere&lt;/strong&gt;: &lt;code&gt;okteto&lt;/code&gt; works with any Kubernetes cluster, local or remote. &lt;code&gt;okteto&lt;/code&gt; is also available for macOS, Linux, and Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;All you need to get started is to &lt;a href=&#34;https://www.okteto.com/docs/getting-started/#installing-okteto-cli&#34;&gt;install the Okteto CLI&lt;/a&gt; and have access to a Kubernetes cluster.&lt;/p&gt; &#xA;&lt;p&gt;Okteto CLI works with &lt;strong&gt;any&lt;/strong&gt; Kubernetes cluster. If it&#39;s your first time using it, we&#39;d recommend you &lt;a href=&#34;https://www.okteto.com/docs/getting-started/&#34;&gt;try it&lt;/a&gt; with the &lt;a href=&#34;https://cloud.okteto.com/&#34;&gt;Okteto Platform&lt;/a&gt; for a complete holistic developer experience. If you want to try it out with any other K8s cluster, you can also check out &lt;a href=&#34;https://www.okteto.com/blog/developing-microservices-by-hot-reloading-on-kubernetes-clusters/&#34;&gt;this article&lt;/a&gt; as a guide.&lt;/p&gt; &#xA;&lt;p&gt;We created a &lt;a href=&#34;https://github.com/okteto/samples&#34;&gt;few guides to help you get started&lt;/a&gt; with &lt;code&gt;okteto&lt;/code&gt; and your favorite programming language.&lt;/p&gt; &#xA;&lt;h3&gt;Releases&lt;/h3&gt; &#xA;&lt;p&gt;Okteto is released into three channels: stable, beta, and dev. By default when okteto is installed the stable channel is used. If you need to access features not yet widely available you can install from the beta or dev channel. More info in the &lt;a href=&#34;https://raw.githubusercontent.com/okteto/okteto/master/docs/RELEASE.md&#34;&gt;release documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.okteto.com/docs/getting-started/&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://okteto.com/docs/reference/cli&#34;&gt;CLI reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://okteto.com/docs/reference/manifest/&#34;&gt;Okteto manifest reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/okteto/samples&#34;&gt;Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Frequently asked questions (&lt;a href=&#34;https://okteto.com/docs/reference/faqs/&#34;&gt;FAQs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://okteto.com/docs/reference/known-issues/&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support and Community&lt;/h2&gt; &#xA;&lt;p&gt;Got questions? Have feedback? Join the conversation in our &lt;a href=&#34;https://kubernetes.slack.com/messages/CM1QMQGS0/&#34;&gt;#okteto&lt;/a&gt; Slack channel! If you don&#39;t already have a Kubernetes Slack account, &lt;a href=&#34;https://slack.k8s.io/&#34;&gt;sign up here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://twitter.com/oktetohq&#34;&gt;@OktetoHQ&lt;/a&gt; on Twitter for important announcements.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;We use GitHub &lt;a href=&#34;https://github.com/okteto/okteto/issues&#34;&gt;issues&lt;/a&gt; to track our roadmap. A &lt;a href=&#34;https://github.com/okteto/okteto/milestones&#34;&gt;milestone&lt;/a&gt; is created every month to track the work scheduled for that time period. Feedback and help are always appreciated!&lt;/p&gt; &#xA;&lt;h2&gt;✨ Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We ❤️ contributions big or small. &lt;a href=&#34;https://raw.githubusercontent.com/okteto/okteto/master/contributing.md&#34;&gt;See our guide&lt;/a&gt; on how to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Thanks to all our contributors!&lt;/h3&gt; &#xA;&lt;a href=&#34;https://github.com/okteto/okteto/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=okteto/okteto&#34;&gt; &lt;/a&gt; &#xA;&lt;!--  https://contrib.rocks --&gt;</summary>
  </entry>
  <entry>
    <title>opencontainers/image-spec</title>
    <updated>2022-11-04T01:33:38Z</updated>
    <id>tag:github.com,2022-11-04:/opencontainers/image-spec</id>
    <link href="https://github.com/opencontainers/image-spec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OCI Image Format&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OCI Image Format Specification&lt;/h1&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://travis-ci.org/opencontainers/image-spec&#34;&gt; &lt;img src=&#34;https://travis-ci.org/opencontainers/image-spec.svg?branch=master&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The OCI Image Format project creates and maintains the software shipping container image format spec (OCI Image Format).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/spec.md&#34;&gt;The specification can be found here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository also provides &lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/specs-go&#34;&gt;Go types&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/schema&#34;&gt;intra-blob validation tooling, and JSON Schema&lt;/a&gt;. The Go types and validation should be compatible with the current Go release; earlier Go releases are not supported.&lt;/p&gt; &#xA;&lt;p&gt;Additional documentation about how this group operates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opencontainers/org/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/RELEASES.md&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/project.md&#34;&gt;Project Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running an OCI Image&lt;/h2&gt; &#xA;&lt;p&gt;The OCI Image Format partner project is the &lt;a href=&#34;https://github.com/opencontainers/runtime-spec&#34;&gt;OCI Runtime Spec project&lt;/a&gt;. The Runtime Specification outlines how to run a &#34;&lt;a href=&#34;https://github.com/opencontainers/runtime-spec/raw/master/bundle.md&#34;&gt;filesystem bundle&lt;/a&gt;&#34; that is unpacked on disk. At a high-level an OCI implementation would download an OCI Image then unpack that image into an OCI Runtime filesystem bundle. At this point the OCI Runtime Bundle would be run by an OCI Runtime.&lt;/p&gt; &#xA;&lt;p&gt;This entire workflow supports the UX that users have come to expect from container engines like Docker and rkt: primarily, the ability to run an image with no additional arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;docker run example.com/org/app:v1.0.0&lt;/li&gt; &#xA; &lt;li&gt;rkt run example.com/org/app,version=v1.0.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To support this UX the OCI Image Format contains sufficient information to launch the application on the target platform (e.g. command, arguments, environment variables, etc).&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: Why doesn&#39;t this project mention distribution?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A: Distribution, for example using HTTP as both Docker v2.2 and AppC do today, is currently out of scope. There has been &lt;a href=&#34;https://groups.google.com/a/opencontainers.org/d/msg/tob/A3JnmI-D-6Y/tLuptPDHAgAJ&#34;&gt;some discussion on the TOB mailing list&lt;/a&gt; to make distribution an optional layer, but this topic is a work in progress.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: What happens to AppC or Docker Image Formats?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A: Existing formats can continue to be a proving ground for technologies, as needed. The OCI Image Format project strives to provide a dependable open specification that can be shared between different tools and be evolved for years or decades of compatibility; as the deb and rpm format have.&lt;/p&gt; &#xA;&lt;p&gt;Find more &lt;a href=&#34;https://www.opencontainers.org/faq&#34;&gt;FAQ on the OCI site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/opencontainers/image-spec/milestones&#34;&gt;GitHub milestones&lt;/a&gt; lay out the path to the future improvements.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Development happens on GitHub for the spec. Issues are used for bugs and actionable items and longer discussions can happen on the &lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/#mailing-list&#34;&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The specification and code is licensed under the Apache 2.0 license found in the &lt;code&gt;LICENSE&lt;/code&gt; file of this repository.&lt;/p&gt; &#xA;&lt;h2&gt;Discuss your design&lt;/h2&gt; &#xA;&lt;p&gt;The project welcomes submissions, but please let everyone know what you are working on.&lt;/p&gt; &#xA;&lt;p&gt;Before undertaking a nontrivial change to this specification, send mail to the &lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/#mailing-list&#34;&gt;mailing list&lt;/a&gt; to discuss what you plan to do. This gives everyone a chance to validate the design, helps prevent duplication of effort, and ensures that the idea fits. It also guarantees that the design is sound before code is written; a GitHub pull-request is not the place for high-level discussions.&lt;/p&gt; &#xA;&lt;p&gt;Typos and grammatical errors can go straight to a pull-request. When in doubt, start on the &lt;a href=&#34;https://raw.githubusercontent.com/opencontainers/image-spec/main/#mailing-list&#34;&gt;mailing-list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Meetings&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/opencontainers/org#meetings&#34;&gt;OCI org repository README&lt;/a&gt; for the most up-to-date information on OCI contributor and maintainer meeting schedules. You can also find links to meeting agendas and minutes for all prior meetings.&lt;/p&gt; &#xA;&lt;h2&gt;Mailing List&lt;/h2&gt; &#xA;&lt;p&gt;You can subscribe and join the mailing list on &lt;a href=&#34;https://groups.google.com/a/opencontainers.org/forum/#!forum/dev&#34;&gt;Google Groups&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;IRC&lt;/h2&gt; &#xA;&lt;p&gt;OCI discussion happens on #opencontainers on Freenode (&lt;a href=&#34;http://ircbot.wl.linuxfoundation.org/eavesdrop/%23opencontainers/&#34;&gt;logs&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Markdown style&lt;/h2&gt; &#xA;&lt;p&gt;To keep consistency throughout the Markdown files in the Open Container spec all files should be formatted one sentence per line. This fixes two things: it makes diffing easier with git and it resolves fights about line wrapping length. For example, this paragraph will span three lines in the Markdown source.&lt;/p&gt; &#xA;&lt;h2&gt;Git commit&lt;/h2&gt; &#xA;&lt;h3&gt;Sign your work&lt;/h3&gt; &#xA;&lt;p&gt;The sign-off is a simple line at the end of the explanation for the patch, which certifies that you wrote it or otherwise have the right to pass it on as an open-source patch. The rules are pretty simple: if you can certify the below (from &lt;a href=&#34;https://developercertificate.org/&#34;&gt;developercertificate.org&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Developer Certificate of Origin&#xA;Version 1.1&#xA;&#xA;Copyright (C) 2004, 2006 The Linux Foundation and its contributors.&#xA;660 York Street, Suite 102,&#xA;San Francisco, CA 94110 USA&#xA;&#xA;Everyone is permitted to copy and distribute verbatim copies of this&#xA;license document, but changing it is not allowed.&#xA;&#xA;&#xA;Developer&#39;s Certificate of Origin 1.1&#xA;&#xA;By making a contribution to this project, I certify that:&#xA;&#xA;(a) The contribution was created in whole or in part by me and I&#xA;    have the right to submit it under the open source license&#xA;    indicated in the file; or&#xA;&#xA;(b) The contribution is based upon previous work that, to the best&#xA;    of my knowledge, is covered under an appropriate open source&#xA;    license and I have the right under that license to submit that&#xA;    work with modifications, whether created in whole or in part&#xA;    by me, under the same open source license (unless I am&#xA;    permitted to submit under a different license), as indicated&#xA;    in the file; or&#xA;&#xA;(c) The contribution was provided directly to me by some other&#xA;    person who certified (a), (b) or (c) and I have not modified&#xA;    it.&#xA;&#xA;(d) I understand and agree that this project and the contribution&#xA;    are public and that a record of the contribution (including all&#xA;    personal information I submit with it, including my sign-off) is&#xA;    maintained indefinitely and may be redistributed consistent with&#xA;    this project or the open source license(s) involved.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then you just add a line to every git commit message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Signed-off-by: Joe Smith &amp;lt;joe@gmail.com&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;using your real name (sorry, no pseudonyms or anonymous contributions.)&lt;/p&gt; &#xA;&lt;p&gt;You can add the sign off when creating the git commit via &lt;code&gt;git commit -s&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Commit Style&lt;/h3&gt; &#xA;&lt;p&gt;Simple house-keeping for clean git history. Read more on &lt;a href=&#34;https://chris.beams.io/posts/git-commit/&#34;&gt;How to Write a Git Commit Message&lt;/a&gt; or the Discussion section of &lt;a href=&#34;https://git-scm.com/docs/git-commit&#34;&gt;&lt;code&gt;git-commit(1)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Separate the subject from body with a blank line&lt;/li&gt; &#xA; &lt;li&gt;Limit the subject line to 50 characters&lt;/li&gt; &#xA; &lt;li&gt;Capitalize the subject line&lt;/li&gt; &#xA; &lt;li&gt;Do not end the subject line with a period&lt;/li&gt; &#xA; &lt;li&gt;Use the imperative mood in the subject line&lt;/li&gt; &#xA; &lt;li&gt;Wrap the body at 72 characters&lt;/li&gt; &#xA; &lt;li&gt;Use the body to explain what and why vs. how&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If there was important/useful/essential conversation or information, copy or include a reference&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;When possible, one keyword to scope the change in the subject (i.e. &#34;README: ...&#34;, &#34;runtime: ...&#34;)&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>