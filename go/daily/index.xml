<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-16T01:30:15Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Simple-Tracker/qBittorrent-ClientBlocker</title>
    <updated>2024-04-16T01:30:15Z</updated>
    <id>tag:github.com,2024-04-16:/Simple-Tracker/qBittorrent-ClientBlocker</id>
    <link href="https://github.com/Simple-Tracker/qBittorrent-ClientBlocker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款适用于 qBittorrent/Transmission (Beta) 的客户端屏蔽器, 默认屏蔽包括但不限于迅雷 (XunLei/XL0012) 等客户端. A client blocker compatible with qBittorrent/Transmission (Beta) which is prohibited to include but not limited to clients such as Xunlei.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;qBittorrent-ClientBlocker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Simple-Tracker/qBittorrent-ClientBlocker/dev/README.md&#34;&gt;中文 (默认, Beta 版本)&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Simple-Tracker/qBittorrent-ClientBlocker/dev/README.en.md&#34;&gt;English (Default, Beta Version)&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/raw/master/README.md&#34;&gt;中文 (Public 正式版)&lt;/a&gt; &lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/raw/master/README.en.md&#34;&gt;English (Public version)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;一款适用于 qBittorrent (4.1+)/Transmission (3.0+) 的客户端屏蔽器, 默认屏蔽包括但不限于迅雷等客户端.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;全平台支持&lt;/li&gt; &#xA; &lt;li&gt;支持记录日志及热重载配置&lt;/li&gt; &#xA; &lt;li&gt;支持忽略私有 IP 地址&lt;/li&gt; &#xA; &lt;li&gt;支持自定义屏蔽列表 (不区分大小写, 支持正则表达式)&lt;/li&gt; &#xA; &lt;li&gt;支持客户端认证&lt;/li&gt; &#xA; &lt;li&gt;支持增强自动屏蔽 (默认禁用): 根据默认或设定的相关参数自动屏蔽 Peer&lt;/li&gt; &#xA; &lt;li&gt;在 Windows 下支持通过 CTRL+ALT+B 窗口热键显示及隐藏窗口 (部分用户&lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/issues/10&#34;&gt;反馈&lt;/a&gt;其可能会影响屏蔽, 由于原因不明, 若遇到相关问题可避免使用该功能)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;我们相信, 通过即时通讯, 能够: 改善问题跟踪及处理的速度和流程 及 更好的加快想法流转.&lt;br&gt; 因此, 我们创建了一个 QQ 用户群 (临时): &lt;a href=&#34;http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=edXDN0Dk0kFfgS6t2Uc1MeqUD4NLx76_&amp;amp;authKey=u2Cm6up4ctiHrLTSwCvIo%2FxETz5xYa6%2BBWK187BSGHlgEng6ZRIuv8OC870QGoGq&amp;amp;noverify=0&amp;amp;group_code=857326151&#34;&gt;857326151&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Simple-Tracker/qBittorrent-ClientBlocker/dev/Preview.png&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用 Usage&lt;/h2&gt; &#xA;&lt;h3&gt;前提&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;必须启用客户端的 Web UI 功能.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;常规版本使用&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;从 &lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/releases&#34;&gt;&lt;strong&gt;GitHub Release&lt;/strong&gt;&lt;/a&gt; 下载压缩包并解压;&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;查看 常见平台下载版本 对照表&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code&gt; | 操作系统 | 处理器架构 | 处理器位数 | 下载版本      | 说明 |&#xA; | -------- | ---------- | ---------- | ------------- | ----------------- |&#xA; | macOS    | ARM64      | 64 位      | darwin-arm64  | 常见于 Apple M 系列 |&#xA; | macOS    | AMD64      | 64 位      | darwin-amd64  | 常见于 Intel 系列 |&#xA; | Windows  | AMD64      | 64 位      | windows-amd64 | 常见于大部分现代 PC |&#xA; | Windows  | i386       | 32 位      | windows-386   | 少见于部分老式 PC |&#xA; | Windows  | ARM64      | 64 位      | windows-arm64 | 常见于新型平台, 应用于部分平板/笔记本/少数特殊硬件 |&#xA; | Windows  | ARMv7      | 32 位      | windows-arm   | 少见于罕见平台, 应用于部分上古硬件, 如 Surface RT 等 |&#xA; | Linux    | AMD64      | 64 位      | linux-amd64   | 常见于大部分 NAS 及服务器 |&#xA; | Linux    | i386       | 32 位      | linux-386     | 少见于部分老式 NAS 及服务器 |&#xA; | Linux    | ARM64      | 64 位      | linux-arm64   | 常见于部分服务器及开发板, 如 Oracle 或 Raspberry Pi 等 |&#xA; | Linux    | ARMv*      | 32 位      | linux-armv*   | 少见于部分老式服务器及开发板, 查看 /proc/cpuinfo 或 从高到底试哪个能跑 |&#xA;&#xA; 其它版本的 Linux/NetBSD/FreeBSD/OpenBSD/Solaris 可以此类推, 并在列表中选择适合自己的.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;解压后, 可能需要修改随附的配置文件 &lt;code&gt;config.json&lt;/code&gt;;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;可根据高级需求, 按需设置配置, 具体见 &lt;a href=&#34;https://raw.githubusercontent.com/Simple-Tracker/qBittorrent-ClientBlocker/dev/#%E9%85%8D%E7%BD%AE-config&#34;&gt;配置 Config&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;若客户端屏蔽器运行于本机, 但未启用客户端 &#34;跳过本机客户端认证&#34; (及密码不为空且并未手动设置密码), 则必须修改配置文件, 并填写 &lt;code&gt;clientPassword&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;若客户端屏蔽器不运行于本机 或 客户端未安装在默认路径 或 客户端不支持自动读取配置文件, 则必须修改配置文件, 并填写 &lt;code&gt;clientURL&lt;/code&gt;/&lt;code&gt;clientUsername&lt;/code&gt;/&lt;code&gt;clientPassword&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动客户端屏蔽器, 并观察信息输出是否正常即可;&lt;/p&gt; &lt;p&gt;对于 Windows, 可选修改客户端的快捷方式, 放入自己的屏蔽器路径, 使客户端与屏蔽器同时运行;&lt;/p&gt; &lt;p&gt;qBittorrent: &lt;code&gt;C:\Windows\System32\cmd.exe /c &#34;(tasklist | findstr qBittorrent-ClientBlocker || start C:\Users\Example\qBittorrent-ClientBlocker\qBittorrent-ClientBlocker.exe) &amp;amp;&amp;amp; start qbittorrent.exe&#34;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;对于 macOS, 可选使用一基本 &lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/wiki#launchagent-macos&#34;&gt;LaunchAgent 用户代理&lt;/a&gt; 用于开机自启及后台运行;&lt;/p&gt; &lt;p&gt;对于 Linux, 可选使用一基本 &lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/wiki#systemd-linux&#34;&gt;Systemd 服务配置文件&lt;/a&gt; 用于开机自启及后台运行;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Docker 版本使用&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;从 &lt;a href=&#34;https://hub.docker.com/r/simpletracker/qbittorrent-clientblocker&#34;&gt;&lt;strong&gt;Docker Hub&lt;/strong&gt;&lt;/a&gt; 拉取 Docker 镜像.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker pull simpletracker/qbittorrent-clientblocker:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;配置方法一: 使用 配置文件映射&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;在合适位置新建 &lt;code&gt;config.json&lt;/code&gt; 作为配置文件, 具体内容可参考 &lt;a href=&#34;https://raw.githubusercontent.com/Simple-Tracker/qBittorrent-ClientBlocker/dev/config.json&#34;&gt;config.json&lt;/a&gt; 及 &lt;a href=&#34;https://raw.githubusercontent.com/Simple-Tracker/qBittorrent-ClientBlocker/dev/#%E9%85%8D%E7%BD%AE-config&#34;&gt;配置 Config&lt;/a&gt;;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;填入 &lt;code&gt;clientURL&lt;/code&gt;/&lt;code&gt;clientUsername&lt;/code&gt;/&lt;code&gt;clientPassword&lt;/code&gt;;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;可根据高级需求, 按需设置其它配置, 具体见 &lt;a href=&#34;https://raw.githubusercontent.com/Simple-Tracker/qBittorrent-ClientBlocker/dev/#%E9%85%8D%E7%BD%AE-config&#34;&gt;配置 Config&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;若启用客户端的 &#34;IP 子网白名单&#34;, 则可不填写 &lt;code&gt;clientUsername&lt;/code&gt; 和 &lt;code&gt;clientPassword&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;运行 Docker 并查看日志, 观察信息输出是否正常即可;&lt;/p&gt; &lt;p&gt;以下命令模版仅作为参考, 请替换 &lt;code&gt;/path/config.json&lt;/code&gt; 为你的配置文件路径.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -d \&#xA;    --name=qbittorrent-clientblocker --network=bridge --restart unless-stopped \&#xA;    -v /path/config.json:/app/config.json \&#xA;    simpletracker/qbittorrent-clientblocker:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;配置方法二: 使用 环境变量&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;使用前提: 设置 &lt;code&gt;useENV&lt;/code&gt; 环境变量为 &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;使用环境变量按需配置设置, 具体见 &lt;a href=&#34;https://raw.githubusercontent.com/Simple-Tracker/qBittorrent-ClientBlocker/dev/#%E9%85%8D%E7%BD%AE-config&#34;&gt;配置 Config&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;若设置较复杂, 则可能出现 blockList 不生效的情况. 因此, 若需要配置此设置, 则使用环境变量是不推荐的.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;以下命令模版仅作为参考.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -d \&#xA;    --name=qbittorrent-clientblocker --network=bridge --restart unless-stopped \&#xA;    -e debug=false \&#xA;    -e logPath=logs \&#xA;    -e blockList=&#39;[&#34;ExampleBlockList1&#34;, &#34;ExampleBlockList2&#34;]&#39; \&#xA;    -e clientURL=http://example.com \&#xA;    -e clientUsername=exampleUser \&#xA;    -e clientPassword=examplePass \&#xA;    simpletracker/qbittorrent-clientblocker:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;参数 Flag&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;设置项&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;配置说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-v/--version&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;显示程序版本后退出&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-c/--config&lt;/td&gt; &#xA;   &lt;td&gt;config.json&lt;/td&gt; &#xA;   &lt;td&gt;配置文件路径&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ca/--config_additional&lt;/td&gt; &#xA;   &lt;td&gt;config_additional.json&lt;/td&gt; &#xA;   &lt;td&gt;附加配置文件路径&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--debug&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;调试模式. 加载配置文件前生效&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--nochdir&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;不切换工作目录. 默认会切换至程序目录&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;配置 Config&lt;/h2&gt; &#xA;&lt;p&gt;Docker 版本通过相同名称的环境变量配置, 通过自动转换环境变量为配置文件实现.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;设置项&lt;/th&gt; &#xA;   &lt;th&gt;类型&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;配置说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;debug&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;调试模式. 启用可看到更多信息, 但可能扰乱视野&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;debug_CheckTorrent&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;调试模式 (CheckTorrent, 须先启用 debug). 启用后调试信息会包括每个 Torrent Hash, 但信息量较大&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;debug_CheckPeer&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;调试模式 (CheckPeer, 须先启用 debug). 启用后调试信息会包括每个 Torrent Peer, 但信息量较大&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;interval&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;6 (秒)&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽循环间隔 (不支持热重载). 每个循环间隔会从 Web UI 获取相关信息用于判断及屏蔽, 短间隔有助于降低封禁耗时但可能造成客户端卡顿, 长间隔有助于降低 CPU 资源占用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cleanInterval&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;3600 (秒)&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽清理间隔. 短间隔会使过期 Peer 在达到屏蔽持续时间后更快被解除屏蔽, 长间隔有助于合并清理过期 Peer 日志&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;updateInterval&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;86400 (秒)&lt;/td&gt; &#xA;   &lt;td&gt;列表 URL 更新间隔 (ipFilterURL/blockListURL). 合理的间隔有助于提高更新效率并降低网络占用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;torrentMapCleanInterval&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;60 (秒)&lt;/td&gt; &#xA;   &lt;td&gt;Torrent Map 清理间隔 (启用 ipUploadedCheck+ipUpCheckPerTorrentRatio/banByRelativeProgressUploaded 后生效, 也是其判断间隔). 短间隔可使判断更频繁但可能造成滞后误判&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banTime&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;86400 (秒)&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽持续时间. 短间隔会使 Peer 更快被解除屏蔽&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banAllPort&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;true (启用)&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽 IP 所有端口. 默认启用且当前不支持设置&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banIPCIDR&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;/32&lt;/td&gt; &#xA;   &lt;td&gt;封禁 IPv4 CIDR. 可扩大单个 Peer 的封禁 IP 范围&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banIP6CIDR&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;/128&lt;/td&gt; &#xA;   &lt;td&gt;封禁 IPv6 CIDR. 可扩大单个 Peer 的封禁 IP 范围&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ignoreEmptyPeer&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;true (启用)&lt;/td&gt; &#xA;   &lt;td&gt;忽略无 PeerID 及 UserAgent 的 Peer. 通常出现于连接未完全建立的客户端&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ignorePTTorrent&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;true (启用)&lt;/td&gt; &#xA;   &lt;td&gt;忽略 PT Torrent. 若主要 Tracker 包含 &lt;code&gt;?passkey=&lt;/code&gt;/&lt;code&gt;?authkey=&lt;/code&gt;/&lt;code&gt;?secure=&lt;/code&gt;/&lt;code&gt;32 位大小写英文及数字组成的字符串&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;startDelay&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;0 (秒, 禁用)&lt;/td&gt; &#xA;   &lt;td&gt;启动延迟. 部分用户的特殊用途&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sleepTime&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;20 (毫秒)&lt;/td&gt; &#xA;   &lt;td&gt;查询每个 Torrent Peers 的等待时间. 短间隔可使屏蔽 Peer 更快但可能造成客户端卡顿, 长间隔有助于平均 CPU 资源占用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;timeout&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;6 (秒)&lt;/td&gt; &#xA;   &lt;td&gt;请求超时. 过短间隔可能会造成无法正确屏蔽 Peer, 过长间隔会使超时请求影响屏蔽其它 Peer 的性能&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;longConnection&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;true (启用)&lt;/td&gt; &#xA;   &lt;td&gt;长连接. 启用可降低资源消耗&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;logToFile&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;true (启用)&lt;/td&gt; &#xA;   &lt;td&gt;记录普通信息到日志. 启用后可用于一般的分析及统计用途&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;logDebug&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;记录调试信息到日志 (须先启用 debug 及 logToFile). 启用后可用于进阶的分析及统计用途, 但信息量较大&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;listen&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;:26262&lt;/td&gt; &#xA;   &lt;td&gt;监听端口. 用于向部分客户端提供 BlockPeerList&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clientType&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;客户端类型. 使用客户端屏蔽器的前提条件, 若未能自动检测客户端类型, 则须正确填入. 目前支持 &lt;code&gt;qBittorrent&lt;/code&gt;/&lt;code&gt;Transmission&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clientURL&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;Web UI 或 RPC 地址. 使用客户端屏蔽器的前提条件, 若未能自动读取客户端配置文件, 则须正确填入. 前缀必须指定 http 或 https 协议, 如 &lt;code&gt;http://127.0.0.1:990&lt;/code&gt; 或 &lt;code&gt;http://127.0.0.1:9091/transmission/rpc&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clientUsername&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;Web UI 账号. 留空会跳过认证. 若启用客户端内 &#34;跳过本机客户端认证&#34; 可默认留空, 因可自动读取客户端配置文件并设置&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clientPassword&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;Web UI 密码. 若启用客户端内 &#34;跳过本机客户端认证&#34; 可默认留空&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;useBasicAuth&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;同时通过 HTTP Basic Auth 进行认证. 适合只支持 Basic Auth 或通过反向代理等方式 增加/换用 认证方式的 Web UI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;skipCertVerification&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;跳过 Web UI 证书校验. 适合自签及过期证书&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;execCommand_Ban&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;执行外部命令 (Ban). 命令可以使用 &lt;code&gt;{peerIP}&lt;/code&gt;/&lt;code&gt;{peerPort}&lt;/code&gt;/&lt;code&gt;{torrentInfoHash}&lt;/code&gt; 来使用相关信息 (peerPort=-1 意味着全端口封禁)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;execCommand_Unban&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;执行外部命令 (Ban). 命令可以使用 &lt;code&gt;{peerIP}&lt;/code&gt;/&lt;code&gt;{peerPort}&lt;/code&gt;/&lt;code&gt;{torrentInfoHash}&lt;/code&gt; 来使用相关信息 (peerPort=-1 意味着全端口封禁)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;blockList&lt;/td&gt; &#xA;   &lt;td&gt;[]string&lt;/td&gt; &#xA;   &lt;td&gt;空 (于 config.json 附带)&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽客户端列表. 同时判断 PeerID 及 UserAgent, 不区分大小写, 支持正则表达式&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;blockListURL&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽客户端列表 URL. 支持格式同 blockList, 一行一条&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;portBlockList&lt;/td&gt; &#xA;   &lt;td&gt;[]uint32&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽端口列表. 若 Peer 端口与列表内任意端口匹配, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ipBlockList&lt;/td&gt; &#xA;   &lt;td&gt;[]string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽 IP 列表. 支持不包括端口的 IP (1.2.3.4) 及 IPCIDR (2.3.3.3/3)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ipBlockListURL&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;空&lt;/td&gt; &#xA;   &lt;td&gt;屏蔽 IP 列表 URL. 支持格式同 ipBlockList, 一行一条&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ipUploadedCheck&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;IP 上传增量检测. 在满足下列 IP 上传增量 条件后, 会自动屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ipUpCheckInterval&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;300 (秒)&lt;/td&gt; &#xA;   &lt;td&gt;IP 上传增量检测/检测间隔. 用于确定上一周期及当前周期, 以比对客户端对 IP 上传增量. 也顺便用于 maxIPPortCount&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ipUpCheckIncrementMB&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;38000 (MB)&lt;/td&gt; &#xA;   &lt;td&gt;IP 上传增量检测/增量大小. 若 IP 全局上传增量大小大于设置增量大小, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ipUpCheckPerTorrentRatio&lt;/td&gt; &#xA;   &lt;td&gt;float64&lt;/td&gt; &#xA;   &lt;td&gt;3 (X)&lt;/td&gt; &#xA;   &lt;td&gt;IP 上传增量检测/增量倍率. 若 IP 单个 Torrent 上传增量大小大于设置增量倍率及 Torrent 大小之乘积, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;maxIPPortCount&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;0 (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;每 IP 最大端口数. 若 IP 端口数大于设置值, 会自动屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banByProgressUploaded&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽 (根据进度及上传量屏蔽 Peer, 未经测试验证). 在满足下列 增强自动屏蔽 条件后, 会自动屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banByPUStartMB&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;20 (MB)&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽/起始大小. 若客户端上传量大于起始大小, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banByPUStartPrecent&lt;/td&gt; &#xA;   &lt;td&gt;float64&lt;/td&gt; &#xA;   &lt;td&gt;2 (%)&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽/起始进度. 若客户端上传进度大于设置起始进度, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banByPUAntiErrorRatio&lt;/td&gt; &#xA;   &lt;td&gt;float64&lt;/td&gt; &#xA;   &lt;td&gt;3 (X)&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽/滞后防误判倍率. 若 Peer 报告下载进度与设置倍率及 Torrent 大小之乘积得到之下载量 比 客户端上传量 还低, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banByRelativeProgressUploaded&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false (禁用)&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽_相对 (根据相对进度及相对上传量屏蔽 Peer, 未经测试验证). 在满足下列 增强自动屏蔽_相对 条件后, 会自动屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banByRelativePUStartMB&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;20 (MB)&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽_相对/起始大小. 若客户端相对上传量大于设置起始大小, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banByRelativePUStartPrecent&lt;/td&gt; &#xA;   &lt;td&gt;float64&lt;/td&gt; &#xA;   &lt;td&gt;2 (%)&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽_相对/起始进度. 若客户端相对上传进度大于设置起始进度, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;banByRelativePUAntiErrorRatio&lt;/td&gt; &#xA;   &lt;td&gt;float64&lt;/td&gt; &#xA;   &lt;td&gt;3 (X)&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽_相对/滞后防误判倍率. 若 Peer 报告相对下载进度与设置倍率之乘积得到之相对下载进度 比 客户端相对上传进度 还低, 则允许屏蔽 Peer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ignoreByDownloaded&lt;/td&gt; &#xA;   &lt;td&gt;uint32&lt;/td&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;增强自动屏蔽*/最高下载量. 若从 Peer 下载量大于此项, 则跳过增强自动屏蔽&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;反馈 Feedback&lt;/h2&gt; &#xA;&lt;p&gt;用户及开发者可以通过 &lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/issues&#34;&gt;Issue&lt;/a&gt; 反馈 bug, 通过 &lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/discussions&#34;&gt;Discussion&lt;/a&gt; 提问/讨论/分享 使用方法, 通过 &lt;a href=&#34;https://github.com/Simple-Tracker/qBittorrent-ClientBlocker/pulls&#34;&gt;Pull Request&lt;/a&gt; 向客户端屏蔽器贡献代码改进.&lt;br&gt; 注意: 应基于 dev 分支. 为 Feature 发起 Pull Request 时, 请不要同步创建 Issue.&lt;/p&gt; &#xA;&lt;h2&gt;致谢 Credit&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;我们在客户端屏蔽器的早期开发过程中部分参考了 &lt;a href=&#34;https://github.com/jinliming2/qbittorrent-ban-xunlei&#34;&gt;jinliming2/qbittorrent-ban-xunlei&lt;/a&gt;. 我们可能也会参考其它同类项目对项目进行优化, 但将不在此处单独列出;&lt;/li&gt; &#xA; &lt;li&gt;我们会在每期版本的 Release Note 中感谢当期通过 Pull Request 向客户端屏蔽器贡献代码改进的用户及开发者;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Kethsar/ytarchive</title>
    <updated>2024-04-16T01:30:15Z</updated>
    <id>tag:github.com,2024-04-16:/Kethsar/ytarchive</id>
    <link href="https://github.com/Kethsar/ytarchive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Garbage Youtube livestream downloader&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ytarchive&lt;/h1&gt; &#xA;&lt;p&gt;Attempt to archive a given Youtube livestream from the start. This is most useful for streams that have already started and you want to download, but can also be used to wait for a scheduled stream and start downloading as soon as it starts. If you want to download a VOD, I recommend &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt;, which is an actively maintained fork of youtube-dl with more features.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ffmpeg.org/&#34;&gt;FFmpeg&lt;/a&gt; needs to be installed to mux the final file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest pre-release from &lt;a href=&#34;https://github.com/Kethsar/ytarchive/releases&#34;&gt;the releases page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, if you have Go properly installed and set up, run &lt;code&gt;go install github.com/Kethsar/ytarchive@dev&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;usage: ytarchive [OPTIONS] [url] [quality]&#xA;&#xA;&#x9;[url] is a youtube livestream URL. If not provided, you will be&#xA;&#x9;prompted to enter one.&#xA;&#xA;&#x9;[quality] is a slash-delimited list of video qualities you want&#xA;&#x9;to be selected for download, from most to least wanted. If not&#xA;&#x9;provided, you will be prompted for one, with a list of available&#xA;&#x9;qualities to choose from. The following values are valid:&#xA;&#x9;audio_only, 144p, 240p, 360p, 480p, 720p, 720p60, 1080p, 1080p60, 1440p, 1440p60, 2160p, 2160p60, best&#xA;&#xA;Options:&#xA;&#x9;-h&#xA;&#x9;--help&#xA;&#x9;&#x9;Show this help message.&#xA;&#xA;&#x9;-4&#xA;&#x9;--ipv4&#xA;&#x9;&#x9;Make all connections using IPv4.&#xA;&#xA;&#x9;-6&#xA;&#x9;--ipv6&#xA;&#x9;&#x9;Make all connections using IPv6.&#xA;&#xA;&#x9;--add-metadata&#xA;&#x9;&#x9;Write some basic metadata information to the final file.&#xA;&#xA;&#x9;--audio-url GOOGLEVIDEO_URL&#xA;&#x9;&#x9;Pass in the given url as the audio fragment url. Must be a&#xA;&#x9;&#x9;Google Video url with an itag parameter of 140.&#xA;&#xA;&#x9;-c&#xA;&#x9;--cookies COOKIES_FILE&#xA;&#x9;&#x9;Give a cookies.txt file that has your youtube cookies. Allows&#xA;&#x9;&#x9;the script to access members-only content if you are a member&#xA;&#x9;&#x9;for the given stream&#39;s user. Must be netscape cookie format.&#xA;&#xA;&#x9;--debug&#xA;&#x9;&#x9;Print a lot of extra information.&#xA;&#xA;&#x9;-dp&#xA;&#x9;--directory-permissions PERMISSIONS&#xA;&#x9;&#x9;Set the filesystem permissions for created directories. Uses unix&#xA;&#x9;&#x9;numeric notation. Be aware of umask settings for your directory.&#xA;&#x9;&#x9;Default is 0755.&#xA;&#xA;&#x9;--error&#xA;&#x9;&#x9;Print only errors and general information.&#xA;&#xA;&#x9;--ffmpeg-path FFMPEG_PATH&#xA;&#x9;&#x9;Set a specific ffmpeg location, including program name.&#xA;&#x9;&#x9;e.g. &#34;C:\ffmpeg\ffmpeg.exe&#34; or &#34;/opt/ffmpeg/ffmpeg&#34;&#xA;&#xA;&#x9;-fp&#xA;&#x9;--file-permissions PERMISSIONS&#xA;&#x9;&#x9;Set the filesystem permissions for created files. Uses unix&#xA;&#x9;&#x9;numeric notation. Be aware of umask settings for your directory.&#xA;&#x9;&#x9;Default is 0644.&#xA;&#xA;&#x9;--h264&#xA;&#x9;&#x9;Only download h264 video, skipping VP9 if it would have been used.&#xA;&#xA;&#x9;-k&#xA;&#x9;--keep-ts-files&#xA;&#x9;&#x9;Keep the final stream audio and video files after muxing them&#xA;&#x9;&#x9;instead of deleting them.&#xA;&#xA;&#x9;--members-only&#xA;&#x9;&#x9;Only download members-only streams. Can only be used with channel URLs&#xA;&#x9;&#x9;such as /live, /streams, etc, and requires cookies.&#xA;&#x9;&#x9;Useful when monitoring channels and you only want membership streams.&#xA;&#xA;&#x9;--merge&#xA;&#x9;&#x9;Automatically run the ffmpeg command for the downloaded streams&#xA;&#x9;&#x9;when manually cancelling the download. You will be prompted otherwise.&#xA;&#xA;&#x9;--metadata KEY=VALUE&#xA;&#x9;&#x9;If writing metadata, overwrite/add metadata key-value entry.&#xA;&#x9;&#x9;KEY is a metadata key that ffmpeg recognizes. If invalid, ffmpeg may ignore it or error.&#xA;&#x9;&#x9;VALUE is a format template. If empty string (&#39;&#39;), omit writing metadata for the key.&#xA;&#x9;&#x9;See FORMAT TEMPLATE OPTIONS below for a list of available format keys.&#xA;&#x9;&#x9;Can be used multiple times.&#xA;&#xA;&#x9;--mkv&#xA;&#x9;&#x9;Mux the final file into an mkv container instead of an mp4 container.&#xA;&#x9;&#x9;Ignored when downloading audio only.&#xA;&#xA;&#x9;--monitor-channel&#xA;&#x9;&#x9;Continually monitor a channel for streams. Requires using a /live URL.&#xA;&#x9;&#x9;This will go back to checking for a stream after it finishes downloading&#xA;&#x9;&#x9;the current one. Implies &#39;-r 60 --merge&#39; unless set separately. Minimum&#xA;&#x9;&#x9;30 second wait time, 60 or more recommended. Using &#39;best&#39; for quality or&#xA;&#x9;&#x9;setting a decently exhaustive list recommended to prevent waiting for&#xA;&#x9;&#x9;input if selected quality is not available for certain streams.&#xA;&#x9;&#x9;Be careful to monitor your disk usage when using this to avoid filling&#xA;&#x9;&#x9;your drive while away.&#xA;&#xA;&#x9;--newline&#xA;&#x9;&#x9;Print every message to a new line, instead of some messages reusing one&#xA;&#x9;&#x9;line.&#xA;&#xA;&#x9;--no-audio&#xA;&#x9;&#x9;Do not download the audio stream&#xA;&#xA;&#x9;--no-frag-files&#xA;&#x9;&#x9;Keep fragment data in memory instead of writing to an intermediate file.&#xA;&#x9;&#x9;This has the possibility to drastically increase RAM usage if a fragment&#xA;&#x9;&#x9;downloads particularly slowly as more fragments after it finish first.&#xA;&#x9;&#x9;This is only an issue when --threads &amp;gt;1&#xA;&#x9;&#x9;Highly recommended if you don&#39;t have strict RAM limitations. Especially&#xA;&#x9;&#x9;on Wangblows, which has caused issues with file locking when trying to&#xA;&#x9;&#x9;delete fragment files.&#xA;&#xA;&#x9;--no-merge&#xA;&#x9;&#x9;Do not run the ffmpeg command for the downloaded streams&#xA;&#x9;&#x9;when manually cancelling the download. You will be prompted otherwise.&#xA;&#xA;&#x9;--no-save&#xA;&#x9;&#x9;Do not save any downloaded data and files if not having ffmpeg&#xA;&#x9;&#x9;run when manually cancelling the download. You will be prompted otherwise.&#xA;&#x9;&#x9;Does nothing if --merge is set.&#xA;&#xA;&#x9;--no-save-state&#xA;&#x9;&#x9;Do not leave files required for resuming downloads when manually&#xA;&#x9;&#x9;cancelling the download. You will be prompted otherwise.&#xA;&#x9;&#x9;Does nothing if --merge or --save are set.&#xA;&#xA;&#x9;--no-video&#xA;&#x9;&#x9;If a googlevideo url is given or passed with --audio-url, do not&#xA;&#x9;&#x9;prompt for a video url. If a video url is given with --video-url&#xA;&#x9;&#x9;then this is effectively ignored.&#xA;&#xA;&#x9;-n&#xA;&#x9;--no-wait&#xA;&#x9;&#x9;Do not wait for a livestream if it&#39;s a future scheduled stream.&#xA;&#xA;&#x9;-o&#xA;&#x9;--output FILENAME_FORMAT&#xA;&#x9;&#x9;Set the output file name EXCLUDING THE EXTENSION. Can include&#xA;&#x9;&#x9;formatting similar to youtube-dl, albeit much more limited.&#xA;&#x9;&#x9;See FORMAT OPTIONS below for a list of available format keys.&#xA;&#x9;&#x9;Default is &#39;%(title)s-%(id)s&#39;&#xA;&#xA;&#x9;--proxy &amp;lt;SCHEME&amp;gt;://[&amp;lt;USER&amp;gt;:&amp;lt;PASS&amp;gt;@]&amp;lt;HOST&amp;gt;:&amp;lt;PORT&amp;gt;&#xA;&#x9;&#x9;Specify a proxy to use for downloading. e.g.&#xA;&#x9;&#x9;&#x9;- socks5://127.0.0.1:1080&#xA;&#x9;&#x9;&#x9;- http://192.168.1.1:8080&#xA;&#x9;&#x9;&#x9;- http://user:password@proxy.example.com:8080&#xA;&#xA;&#x9;&#x9;HTTP, HTTPS and SOCKS5 proxy servers are supported.&#xA;&#xA;&#x9;-q&#xA;&#x9;--quiet&#xA;&#x9;&#x9;Print nothing to the console except information relevant for user input.&#xA;&#xA;&#x9;--retry-frags ATTEMPTS&#xA;&#x9;&#x9;Set the number of attempts to make when downloading a stream fragment.&#xA;&#x9;&#x9;Set to 0 to retry indefinitely, or until we are completely unable to.&#xA;&#x9;&#x9;Default is 10.&#xA;&#xA;&#x9;-r&#xA;&#x9;--retry-stream SECONDS&#xA;&#x9;&#x9;If waiting for a scheduled livestream, re-check if the stream is&#xA;&#x9;&#x9;up every SECONDS instead of waiting for the initial scheduled time.&#xA;&#x9;&#x9;If SECONDS is less than the poll delay youtube gives (typically&#xA;&#x9;&#x9;15 seconds), then this will be set to the value youtube provides.&#xA;&#xA;&#x9;--save&#xA;&#x9;&#x9;Automatically save any downloaded data and files if not having&#xA;&#x9;&#x9;ffmpeg run when manually cancelling the download. You will be prompted&#xA;&#x9;&#x9;otherwise. Does nothing if --merge is set.&#xA;&#xA;&#x9;--save-state&#xA;&#x9;&#x9;Automatically leave files alone and do not delete anything when manually&#xA;&#x9;&#x9;cancelling the download, allowing for resuming a download later when&#xA;&#x9;&#x9;possible. You will be prompted otherwise.&#xA;&#x9;&#x9;Resuming requires the stream be available to download as normal.&#xA;&#x9;&#x9;Does nothing if --merge or --save are set.&#xA;&#xA;&#x9;--separate-audio&#xA;&#x9;&#x9;Save the audio to a separate file, similar to when downloading&#xA;&#x9;&#x9;audio_only, alongside the final muxed file. This includes embedding&#xA;&#x9;&#x9;metadata and the thumbnail if set.&#xA;&#xA;&#x9;-td&#xA;&#x9;--temporary-dir DIRECTORY&#xA;&#x9;&#x9;Set the working directory for the download. This is where the&#xA;&#x9;&#x9;temporary files will be stored. If not set, the output directory&#xA;&#x9;&#x9;will be used.&#xA;&#xA;&#x9;--threads THREAD_COUNT&#xA;&#x9;&#x9;Set the number of threads to use for downloading audio and video&#xA;&#x9;&#x9;fragments. The total number of threads running will be&#xA;&#x9;&#x9;THREAD_COUNT * 2 + 3. Main thread, a thread for each audio and&#xA;&#x9;&#x9;video download, and THREAD_COUNT number of fragment downloaders&#xA;&#x9;&#x9;for both audio and video.&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;Setting this to a large number has a chance at causing the download&#xA;&#x9;&#x9;to start failing with HTTP 401. Restarting the download with a smaller&#xA;&#x9;&#x9;thread count until you no longer get 401s should work. Default is 1.&#xA;&#xA;&#x9;-t&#xA;&#x9;--thumbnail&#xA;&#x9;&#x9;Download and embed the stream thumbnail in the finished file.&#xA;&#x9;&#x9;Whether the thumbnail shows properly depends on your file browser.&#xA;&#x9;&#x9;Windows&#39; seems to work. Nemo on Linux seemingly does not.&#xA;&#xA;&#x9;--trace&#xA;&#x9;&#x9;Print just about any information that might have reason to be printed.&#xA;&#x9;&#x9;Very spammy, do not use this unless you have good reason.&#xA;&#xA;&#x9;-v&#xA;&#x9;--verbose&#xA;&#x9;&#x9;Print extra information.&#xA;&#xA;&#x9;-V&#xA;&#x9;--version&#xA;&#x9;&#x9;Print the version number and exit.&#xA;&#xA;&#x9;--video-url GOOGLEVIDEO_URL&#xA;&#x9;&#x9;Pass in the given url as the video fragment url. Must be a&#xA;&#x9;&#x9;Google Video url with an itag parameter that is not 140.&#xA;&#xA;&#x9;--vp9&#xA;&#x9;&#x9;If there is a VP9 version of your selected video quality,&#xA;&#x9;&#x9;download that instead of the usual h264.&#xA;&#xA;&#x9;-w&#xA;&#x9;--wait&#xA;&#x9;&#x9;Wait for a livestream if it&#39;s a future scheduled stream.&#xA;&#x9;&#x9;If this option is not used when a scheduled stream is provided,&#xA;&#x9;&#x9;you will be asked if you want to wait or not.&#xA;&#xA;&#x9;--warn&#xA;&#x9;&#x9;Print warning, errors, and general information. This is the default log&#xA;&#x9;&#x9;level.&#xA;&#xA;&#x9;--write-description&#xA;&#x9;&#x9;Write the video description to a separate .description file.&#xA;&#x9;&#xA;&#x9;--write-mux-file&#xA;&#x9;&#x9;Write the ffmpeg command that would mux audio and video or put audio&#xA;&#x9;&#x9;into an mp4 container instead of running the command automatically.&#xA;&#x9;&#x9;Useful if you want to tweak the command, want a higher log level, etc.&#xA;&#xA;&#x9;--write-thumbnail&#xA;&#x9;&#x9;Write the thumbnail to a separate file.&#xA;&#xA;Examples:&#xA;&#x9;ytarchive -w&#xA;&#x9;&#x9;Waits for a stream. Will prompt for a URL and quality.&#xA;&#xA;&#x9;ytarchive -w https://www.youtube.com/watch?v=CnWDmKx9cQQ 1080p60/best&#xA;&#x9;&#x9;Waits for the given stream URL. Will prioritize downloading in 1080p60.&#xA;&#x9;&#x9;If 1080p60 is not an available quality, it will choose the best of what&#xA;&#x9;&#x9;is available.&#xA;&#xA;&#x9;ytarchive --threads 3 https://www.youtube.com/watch?v=ZK1GXnz-1Lw best&#xA;&#x9;&#x9;Downloads the given stream with 3 threads in the best available quality.&#xA;&#x9;&#x9;Will ask if you want to wait if the stream is scheduled but not started.&#xA;&#xA;&#x9;ytarchive -r 30 https://www.youtube.com/channel/UCZlDXzGoo7d44bwdNObFacg/live best&#xA;&#x9;&#x9;Will wait for a livestream at the given URL, checking every 30 seconds.&#xA;&#xA;&#x9;ytarchive -c cookies-youtube-com.txt https://www.youtube.com/watch?v=_touw1GND-M best&#xA;&#x9;&#x9;Loads the given cookies file and attempts to download the given stream.&#xA;&#x9;&#x9;Will ask if you want to wait.&#xA;&#xA;&#x9;ytarchive --no-wait --add-metadata https://www.youtube.com/channel/UCvaTdHTWBGv3MKj3KVqJVCw/live best&#xA;&#x9;&#x9;Attempts to download the given stream, and will add metadata to the&#xA;&#x9;&#x9;final muxed file. Will not wait if there is no stream or if it has not&#xA;&#x9;&#x9;started.&#xA;&#xA;&#x9;ytarchive -o &#39;%(channel)s/%(upload_date)s_%(title)s&#39; https://www.youtube.com/watch?v=HxV9UAMN12o best&#xA;&#x9;&#x9;Download the given stream to a directory with the channel name, and a&#xA;&#x9;&#x9;file that will have the upload date and stream title. Will prompt to&#xA;&#x9;&#x9;wait.&#xA;&#xA;&#x9;ytarchive -w -k -t --vp9 --merge --no-frag-files https://www.youtube.com/watch?v=LE8V5iNemBA best&#xA;&#x9;&#x9;Waits, keeps the final .ts files, embeds the stream thumbnail, merges&#xA;&#x9;&#x9;the downloaded files if download is stopped manually, and keeps&#xA;&#x9;&#x9;fragments in memory instead of writing to intermediate files.&#xA;&#x9;&#x9;Downloads the stream video in VP9 if available. This set of flags will&#xA;&#x9;&#x9;not require any extra user input if something goes wrong.&#xA;&#xA;&#x9;ytarchive -k -t --vp9 --monitor-channel --no-frag-files https://www.youtube.com/channel/UCvaTdHTWBGv3MKj3KVqJVCw/live best&#xA;&#x9;&#x9;Same as above, but waits for a stream on the given channel, and will&#xA;&#x9;&#x9;repeat the cycle after downloading each stream.&#xA;&#xA;&#x9;ytarchive --proxy http://127.0.0.1:9050 https://www.youtube.com/watch?v=2aIdHTuyYMA best&#xA;&#x9;&#x9;Downloads the given stream with a local HTTP proxy.&#xA;&#xA;FORMAT TEMPLATE OPTIONS&#xA;&#x9;Format template keys provided are made to be the same as they would be for&#xA;&#x9;youtube-dl. See https://github.com/ytdl-org/youtube-dl#output-template&#xA;&#xA;&#x9;For file names, each template substitution is sanitized by replacing invalid file name&#xA;&#x9;characters with underscore (_).&#xA;&#xA;&#x9;id (string): Video identifier&#xA;&#x9;url (string): Video URL&#xA;&#x9;title (string): Video title&#xA;&#x9;channel_id (string): ID of the channel&#xA;&#x9;channel (string): Full name of the channel the livestream is on&#xA;&#x9;upload_date (string: YYYYMMDD): Technically stream start date, UTC timezone - see note below&#xA;&#x9;start_date (string: YYYYMMDD): Stream start date, UTC timezone&#xA;&#x9;publish_date (string: YYYYMMDD): Stream publish date, UTC timezone&#xA;&#x9;description (string): Video description [disallowed for file name format template]&#xA;&#xA;&#x9;Note on upload_date: rather than the actual upload date, stream start date is used to&#xA;&#x9;provide a better default date for youtube-dl output templates that use upload_date.&#xA;&#x9;To get the actual upload date, publish date seems to be the same as upload date for streams.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>IceBearAI/LLM-And-More</title>
    <updated>2024-04-16T01:30:15Z</updated>
    <id>tag:github.com,2024-04-16:/IceBearAI/LLM-And-More</id>
    <link href="https://github.com/IceBearAI/LLM-And-More" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LLM-And-More is a professional, plug-and-play, llm trainer and application builder that guides you through the complete LLM workflow from data to evaluation, from training to deployment, from idea to sevice. / LLM-And-More 是一个专业、开箱即用的大模型训练及应用构建一站式解决方案，包含从数据到评估、从训练到部署、从想法到服务的全流程最佳实践。&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/docs/figure/logo.png&#34; width=&#34;40%&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;h1&gt;&lt;b&gt;构建、训练、部署：LLM-And-More让一切变得更简单&lt;/b&gt;&lt;/h1&gt;&#xA;&lt;/div&gt; &#xA;&lt;!-- \[ [English](README.md) | 中文 \]--&gt; &#xA;&lt;h2&gt;LLM-And-More: 从创意到服务的一站式LLM解决方案&lt;/h2&gt; &#xA;&lt;p&gt;LLM-And-More 是一站式大模型训练及应用构建的解决方案，其覆盖了从数据处理到模型评估、从训练到部署、从想法到服务等整个流程。在本项目中，用户可以轻松地通过本项目进行模型训练并一键生成所需的产品服务。&lt;/p&gt; &#xA;&lt;p&gt;本项目的优势主要体现在以下三点:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;总结了不同应用场景下的专业知识和最佳实践，以保证模型在实际生产中的表现优异。&lt;/li&gt; &#xA; &lt;li&gt;集成了高性能模型并行框架，有效地减少了训练和推理时的算力开销。&lt;/li&gt; &#xA; &lt;li&gt;用户可以基于自身需要定制化模型及服务，便捷且自由度高。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/IceBearAI/LLM-And-More/assets/9782796/cc410f8e-00eb-46d3-820f-03860ea4f743&#34;&gt;https://github.com/IceBearAI/LLM-And-More/assets/9782796/cc410f8e-00eb-46d3-820f-03860ea4f743&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如有任何问题，欢迎加入我们的微信群交流！&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/docs/figure/wechat.jpg&#34; width=&#34;50%&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97&#34;&gt;功能模块&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E6%94%AF%E6%8C%81%E5%9C%BA%E6%99%AF&#34;&gt;支持场景&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E9%80%82%E9%85%8D%E6%A8%A1%E5%9E%8B&#34;&gt;适配模型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/deployment.md&#34;&gt;安装与使用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/sys_architecture.md&#34;&gt;系统架构设计&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能模块&lt;/h2&gt; &#xA;&lt;p&gt;LLM-And-More致力于为专业开发者和一线业务人员提供专业、易用的LLM应用构建方案。LLM-And-More将LLM应用开发过程分解为以下六个模块：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9D%97&#34;&gt;数据模块&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9D%97&#34;&gt;训练模块&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E7%9B%91%E6%8E%A7%E6%A8%A1%E5%9D%97&#34;&gt;监控模块&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E8%AF%84%E4%BC%B0%E6%A8%A1%E5%9D%97&#34;&gt;评估模块&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E9%83%A8%E7%BD%B2%E6%A8%A1%E5%9D%97&#34;&gt;部署模块&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%9D%97&#34;&gt;交互模块&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这些模块涵盖了开发一个LLM产品服务的所有细节。通过注入专业知识和性能优化组件，全流程协助用户构建符合自身需求的LLM应用。&lt;/p&gt; &#xA;&lt;h3&gt;数据模块&lt;/h3&gt; &#xA;&lt;p&gt;数据模块是构建LLM应用的首要组成部分，直接影响最终效果。LLM-And-More提供全面的数据标注平台，包括任务管理、分配和自主标注功能。标注完成后，数据自动转换为模型可处理的jsonl格式，并存入本地数据库，以便后续训练和评估模块使用。此外，LLM-And-More还提供了数据质量一键检测，用户可通过检测报告发现标注过程中可能存在的错误，从而提升模型训练的最终效果。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/docs/figure/autolabel.png&#34; alt=&#34;数据示例&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;训练模块&lt;/h3&gt; &#xA;&lt;p&gt;训练模块LLM应用构建中最关键、最复杂的部分。LLM-And-More提供了一个即开即用的高性能模型训练框架。该框架使用户无需深入了解深度学习，即可轻松实现最佳实践。在训练模块中，用户可以自由调整基座模型、训练方式、批处理大小、学习率等超参数。如果用户对此不甚了解，LLM-And-More提供智能默认参数，帮助用户选择和调整参数。此外，LLM-And-More还自动为用户提供DeepSpeed多卡多机加速适配，节省训练时间，最大程度利用算力资源。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/docs/figure/finetune-add.png&#34; alt=&#34;微调示例&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;监控模块&lt;/h3&gt; &#xA;&lt;p&gt;在训练过程中，用户可能会面临无法清晰观察模型性能变化的困扰。LLM-And-More提供智能化的模型训练监控模块，实时可视化显示CPU、GPU等核心算力资源的使用情况，并监控模型损失、学习率、训练步数的变化。此外，监控模块会智能提示用户可能存在的模型性能风险，并提供适当的解决方案建议。例如，当系统提示“过拟合风险”时，建议“停止训练，降低学习率或增大数据量”，用户可以据此调整训练策略，避免不必要的算力浪费，更准确地把握模型性能。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/docs/figure/finetune-graph.png&#34; alt=&#34;监控示例&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;评估模块&lt;/h3&gt; &#xA;&lt;p&gt;训练结束后，LLM-And-More提供评估模块，其分为两个主要任务：一是评估模型在训练任务上的性能，检验其在特定任务上的表现；二是评估模型在五个通用维度上的能力，包括推理、阅读理解、语言理解、指令遵从和创新。用户可根据两方面的评估结果调整训练数据和迭代次数，选择最适合的模型应用于线上系统。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/docs/figure/five.png&#34; alt=&#34;评估示例&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;部署模块(Coming Soon)&lt;/h3&gt; &#xA;&lt;h3&gt;交互模块(Coming Soon)&lt;/h3&gt; &#xA;&lt;h2&gt;支持场景&lt;/h2&gt; &#xA;&lt;p&gt;除了简单的提供输入输出训练LLM应用外，我们还提供了丰富的场景支持，可以帮助用户更好的解决在工作生产当中遇到的复杂问题。例如，用户可以基于FAQ场景适配方案，直接构建一个客服，协助完成识别客户意图、解决淘宝店铺自动回复的问题；或是基于RAG场景方案，构建一套企业内部规章制度问答机器人。所有场景均具备独立的六个功能模块，但拥有深度定制的UI和专业Know-How。LLM-And-More支持以下场景：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E9%80%9A%E7%94%A8%E5%9C%BA%E6%99%AF&#34;&gt;通用场景&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#FAQ%E5%9C%BA%E6%99%AF&#34;&gt;FAQ场景&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#RAG%E5%9C%BA%E6%99%AF&#34;&gt;RAG场景&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#%E5%88%9B%E6%84%8F%E5%86%99%E4%BD%9C%E5%9C%BA%E6%99%AF&#34;&gt;创意写作场景&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/#Agent%E5%9C%BA%E6%99%AF&#34;&gt;Agent场景&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;通用场景&lt;/h3&gt; &#xA;&lt;p&gt;该场景可以接受任意的输入输出，这是最基础的训练场景。在该场景中，我们没有针对数据特征、应用范围等做任何假设，在数据、训练、监控、评估、部署、交互模块中的各项参数均调整至最均衡的水平，并适配了任何场景均有收益的专业Know-How辅助模型训练。总的来说，如果用户不确定应该使用哪个场景，或认为LLM-And-More提供的任何场景均不符合您的要求，您可以选用该场景来开始您的构建。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/docs/figure/base.png&#34; alt=&#34;通用场景示例&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FAQ场景&lt;/h3&gt; &#xA;&lt;p&gt;该场景适用于FAQ客服或FAQ问答机器人。FAQ(Frequently Asked Questions) 即常见问题，通常应用于客服、快速助手、和在线论坛等场景，在这些场景中常见问题往往会反复出现，例如，用户经常以各种不同的表达方式询问发货时间。在FAQ场景中，用户的问题往往被归类，并对于每一类问题有一个统一的回答，例如针对询问发货时间的问题，统一回复“我们将尽快安排发货，请及时查看物流信息”。直接尝试使用大模型生成这些回答往往是事倍功半的，因为没有充分利用数据的特征，很难让大模型回复保持稳定，且常常会发生幻觉现象。为此，我们为FAQ场景设计了涵盖全部六个模块的全流程解决方案，主要引入用户意图识别，让LLM预测用户意图（在上述例子中，“查询物流信息”），而不是直接预测回复（在上述例子中，“我们将尽快安排发货，请及时查看物流信息”）。我们在大量FAQ场景中的实验表明，该解决方案可以提升30%以上的回复准确率，并显著降低模型过拟合风险与幻觉现象。&lt;/p&gt; &#xA;&lt;h3&gt;RAG场景(Coming Soon)&lt;/h3&gt; &#xA;&lt;h3&gt;创意写作场景(Coming Soon)&lt;/h3&gt; &#xA;&lt;h3&gt;Agent场景(Coming Soon)&lt;/h3&gt; &#xA;&lt;h2&gt;适配模型&lt;/h2&gt; &#xA;&lt;p&gt;为了支持更广泛的应用，LLM-And-More支持多种多样的模型，并支持用户选择多种不同的训练方式。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;模型名&lt;/th&gt; &#xA;   &lt;th&gt;模型大小&lt;/th&gt; &#xA;   &lt;th&gt;支持的训练方法&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/baichuan-inc&#34;&gt;Baichuan2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7B/13B&lt;/td&gt; &#xA;   &lt;td&gt;全参数训练/Lora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b&#34;&gt;ChatGLM3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;6B&lt;/td&gt; &#xA;   &lt;td&gt;全参数训练/Lora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/facebookresearch/llama&#34;&gt;LLaMA&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7B/13B/33B/65B&lt;/td&gt; &#xA;   &lt;td&gt;全参数训练/Lora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/meta-llama&#34;&gt;LLaMA-2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7B/13B/70B&lt;/td&gt; &#xA;   &lt;td&gt;全参数训练/Lora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/Qwen&#34;&gt;Qwen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0.5B/1.8B/4B/7B/14B/72B&lt;/td&gt; &#xA;   &lt;td&gt;全参数训练/Lora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;模型微调&lt;/h3&gt; &#xA;&lt;p&gt;为了实现模型的微调，您可以参考我们的详细指南：&lt;a href=&#34;https://raw.githubusercontent.com/IceBearAI/LLM-And-More/main/docs/model/finetune.md&#34;&gt;模型微调&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;模型部署与微调&lt;/h3&gt; &#xA;&lt;p&gt;您可以将模型部署到任意配备GPU的节点上，无论是私有的K8s集群、Docker集群，还是云服务商提供的K8s集群，均能轻松完成对接。&lt;/p&gt; &#xA;&lt;h2&gt;安装及使用&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;克隆项目: &lt;code&gt;git clone https://github.com/IceBearAI/LLM-And-More.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;进入项目: &lt;code&gt;cd aigc-web&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;该系统依赖&lt;strong&gt;Docker&lt;/strong&gt;需要安装此服务&lt;/p&gt; &#xA;&lt;p&gt;推理或训练节点只需要安装&lt;strong&gt;Docker&lt;/strong&gt;和&lt;strong&gt;Nvidia-Docker&lt;/strong&gt; 即可。&lt;a href=&#34;https://github.com/NVIDIA/nvidia-container-toolkit&#34;&gt;NVIDIA Container Toolkit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;本地开发&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/golang/go&#34;&gt;golang&lt;/a&gt;版本请安装go1.21以上版本&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装依赖包: &lt;code&gt;go mod tidy&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;本地启动: &lt;code&gt;make run&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;build成x86 Linux可执行文件: &lt;code&gt;make build-linux&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;build成当前电脑可执行文件: &lt;code&gt;make build&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;build完通常会保存在 &lt;code&gt;$(GOPATH)/bin/&lt;/code&gt; 目录下&lt;/p&gt; &#xA;&lt;h3&gt;Docker-compose部署&lt;/h3&gt; &#xA;&lt;p&gt;安装docker和docker-compose可以参考官网教程：&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Install Docker Engine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;需要在 当前目录下增加 &lt;code&gt;.env&lt;/code&gt; 文件来设置相关的环境变量。&lt;/p&gt; &#xA;&lt;p&gt;执行命令启动全部服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果不需要执行build流程，可以进入到&lt;code&gt;docker&lt;/code&gt;目录下执行&lt;code&gt;docker-compose up&lt;/code&gt;即可。或把&lt;code&gt;docker-compose.yaml&lt;/code&gt;的&lt;code&gt;build&lt;/code&gt;注释掉。&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; width=&#34;100%&#34;&gt; &lt;img src=&#34;https://starchart.cc/IceBearAI/LLM-And-More.svg?sanitize=true&#34; alt=&#34;Star History&#34; style=&#34;width: 100%; display: block; margin: auto;&#34;&gt; &lt;/p&gt;</summary>
  </entry>
</feed>