<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-07T01:32:35Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jvns/git-commit-folders</title>
    <updated>2023-12-07T01:32:35Z</updated>
    <id>tag:github.com,2023-12-07:/jvns/git-commit-folders</id>
    <link href="https://github.com/jvns/git-commit-folders" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;git commit folders&lt;/h1&gt; &#xA;&lt;p&gt;Gives you a folder for every commit in your git repository.&lt;/p&gt; &#xA;&lt;p&gt;Extremely experimental software with lots of bugs but it works for me and I&#39;ve found it a tiny bit useful.&lt;/p&gt; &#xA;&lt;h3&gt;how to use it&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;go build&#xA;./git-commit-folders -type nfs -mountpoint /tmp/mntdir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;ll mount a &lt;code&gt;/tmp/mntdir&lt;/code&gt; directory with all your commits in it, then in another terminal tab you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ls /tmp/mntdir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;how it works&lt;/h3&gt; &#xA;&lt;p&gt;It mounts a virtual filesystem (using NFS, fuse, or WebDav) and mounts it with the &lt;code&gt;mount&lt;/code&gt; command. It doesn&#39;t work on Windows but probably could be made to.&lt;/p&gt; &#xA;&lt;p&gt;Because the filesystem is backed by your &lt;code&gt;.git&lt;/code&gt; directory, it doesn&#39;t use any disk space. It more or less updates live, though I&#39;ve noticed that sometimes the NFS version lags behind a bit, probably because of caching.&lt;/p&gt; &#xA;&lt;h3&gt;NFS, FUSE, DAV&lt;/h3&gt; &#xA;&lt;p&gt;there are 3 different filesystem implementations. I&#39;d suggest:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-type fuse&lt;/code&gt; if you&#39;re on Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-type nfs&lt;/code&gt; if you&#39;re on Mac OS (because FUSE on Mac is annoying)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-type webdav&lt;/code&gt; is broken because I couldn&#39;t get symlinks on webdav to work. just leaving the webdav code in there in case it&#39;s salvageable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can try to use the FUSE version on Mac with MacFuse or FUSE-T if you want though.&lt;/p&gt; &#xA;&lt;h3&gt;a tour of the folders&lt;/h3&gt; &#xA;&lt;p&gt;I might change all of this but right now there are four main subfolders. &lt;code&gt;commits/&lt;/code&gt; contains all the commits, and everything else is a symlink to a commit.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls /tmp/mntdir&#xA;branches/  branch_histories/  commits/  tags/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;commits&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;the &lt;code&gt;commits/&lt;/code&gt; directory is split by commit prefix so that it isn&#39;t horrible to list. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls /tmp/mntdir/commits/&#xA;0a  02  1a  2c  3e  5a  6c  7e  9a  12  20  28  36  44  52  60  68  76&#xA;$ ls /tmp/mntdir/commits/73/73a0/&#xA;73a08ab44ccbf1a305c458c35ab35661f0b7a7f3&#xA;$ ls /tmp/mntdir/commits/da/da83/da83dce00782814ecfd33ef6d968ff9e43188a94/&#xA;branches.go  commit.go  go.mod  go.sum  main.go  symlink.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;tags&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls /tmp/mntdir/tags/&#xA;v0.000@&#xA;$ ls /tmp/mntdir/tags/v0.000/&#xA;branches.go  branch_histories.go  commit.go  go.mod  go.sum  main.go  symlink.go  tags.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;branches&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls /tmp/mntdir/branches/&#xA;main@  test@&#xA;$ ls /tmp/mntdir/branches/main/&#xA;branches.go  branch_histories.go  commit.go  go.mod  go.sum  main.go  symlink.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;branch histories&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;shows the last 100 commits on a branch. They&#39;re numbered, 0 is the most recent.&lt;/p&gt; &#xA;&lt;p&gt;here we&#39;ll look at the code from 4 versions ago&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls /tmp/mntdir/branch_histories/main/&#xA;00-f1e4200744ae2fbe584d3ad3638cf61593a11624@  02-dc49186e766bcdb62a3958533a62d3fd626b253e@  04-b9c9e9f09cc918825066f105d62c550cc3c0958e@&#xA;01-03bf66122c3acf44fb781f27cd41415af75fcbe4@  03-da83dce00782814ecfd33ef6d968ff9e43188a94@  05-97d8dea79acb702b3ad66e08218c26c2fda9b1de@&#xA;$ ls /tmp/mntdir/branch_histories/main/04-b9c9e9f09cc918825066f105d62c550cc3c0958e/&#xA;commit.go  go.mod  go.sum  main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;cool stuff you can do&lt;/h3&gt; &#xA;&lt;p&gt;you can go into your branch and grep for the code you deleted!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd /tmp/mntdir/branch_histories/main&#xA;$ grep &#39;func readBlob&#39; */commit.go&#xA;03-fc450bb99460b9b793fcc36ca79b74caf6a9bc2a/commit.go:func readBlob(repo *git.Repository, id plumbing.Hash) ([]byte, error) {&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;bugs&lt;/h3&gt; &#xA;&lt;p&gt;there are 1 million bugs and limitations. I may or may not ever fix any of them. It&#39;s read only so it shouldn&#39;t do any harm to your git repository though, I think the worst thing that can happen is that it&#39;ll mislead you about something or be really slow to unmount. Also it caches every commit ID in your repository in memory so maybe that&#39;s bad if you have a truly gigantic repository.&lt;/p&gt; &#xA;&lt;h3&gt;thanks&lt;/h3&gt; &#xA;&lt;p&gt;thanks to &lt;a href=&#34;https://github.com/vasi&#34;&gt;vasi&lt;/a&gt; for explaining one hundred things about filesystems to me&lt;/p&gt; &#xA;&lt;h3&gt;similar projects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust Git FUSE: &lt;a href=&#34;https://github.com/fanzeyi/giblefs&#34;&gt;https://github.com/fanzeyi/giblefs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Swift GIT FUSE: &lt;a href=&#34;https://belkadan.com/blog/2023/11/GitMounter/&#34;&gt;https://belkadan.com/blog/2023/11/GitMounter/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;git for plan 9: &lt;a href=&#34;https://orib.dev/git9.html&#34;&gt;https://orib.dev/git9.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>