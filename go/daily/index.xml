<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-19T01:35:18Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fanchunke/chatgpt-wecom</title>
    <updated>2023-02-19T01:35:18Z</updated>
    <id>tag:github.com,2023-02-19:/fanchunke/chatgpt-wecom</id>
    <link href="https://github.com/fanchunke/chatgpt-wecom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;企业微信接入 GPT3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chatgpt-wecom&lt;/h1&gt; &#xA;&lt;p&gt;企业微信接入 GPT3 接口。可以创建企业微信应用，体验 ChatGPT。&lt;/p&gt; &#xA;&lt;p&gt;相较于官方提供的 &lt;code&gt;CreateCompletion&lt;/code&gt; 接口，该项目增加了会话管理功能，能够较好地提供多轮对话能力。&lt;/p&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;修改配置&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;修改 &lt;code&gt;conf/online.conf&lt;/code&gt; 文件，主要涉及企业微信应用配置、GPT3 API Key、会话管理数据库配置等。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;企业微信应用配置 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;corp_id：在企业微信后台【我的企业】-【企业信息】处获取【企业ID】&lt;/li&gt; &#xA;   &lt;li&gt;corp_secret：在企业微信后台【应用管理】处获取【Secret】&lt;/li&gt; &#xA;   &lt;li&gt;agent_id：在企业微信后台【应用管理】处获取【AgentId】&lt;/li&gt; &#xA;   &lt;li&gt;encoding_aes_key：企业微信后台 【接收消息】- 【API 接收消息】获取【EncodingAESKey】，可以随机生成&lt;/li&gt; &#xA;   &lt;li&gt;token：企业微信后台 【接收消息】- 【API 接收消息】获取【Token】，可以随机生成&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open AI Key &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;需要自行申请&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;数据库 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;del&gt;数据库需要自行创建，数据表的创建可以通过命令行方式执行。&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;数据库支持 sqlite3，可以通过修改配置使用。如果使用 MySQL，需要自行创建数据库。&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;数据表在程序启动时自动创建。&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker&lt;/code&gt; 运行&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;del&gt;初始化数据表&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;数据表在程序启动时自动创建。&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;配置企业微信应用。在企业微信后台 【接收消息】- 【API 接收消息】配置接收消息服务器配置。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;URL 配置格式：&lt;code&gt;http[s]://ip:port/wecom/receive&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;怎么创建数据库&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;v0.1.1 版本中支持 sqlite3 数据库，只需要修改配置文件的配置，程序启动后便会初始化数据库和数据表，不需要额外的操作。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果使用的是 MySQL，则需要自行创建数据库，建库 SQL 可以参考下面的命令：&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE DATABASE chatgpt DEFAULT CHARACTER SET utf8mb4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;之后程序启动后，便可以自动创建数据表。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;数据库连接失败&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;首先检查数据库配置是否正确&lt;/li&gt; &#xA; &lt;li&gt;如果使用 docker 部署服务，需要确认容器内能否连接到数据库。最常见的一个问题是，在宿主机部署了 MySQL，但是在容器内配置 &lt;code&gt;127.0.0.1&lt;/code&gt;，这种情况需要配置宿主机的 IP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;数据库配置说明&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;v0.1.1 版本可以支持 MySQL、SQLite、PostgreSQL。常见的配置如下：&lt;/p&gt; &#xA;&lt;p&gt;MySQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[database]&#xA;# mysql&#xA;driver=&#34;mysql&#34;&#xA;dataSource=&#34;root:12345678@tcp(127.0.0.1:3306)/chatgpt?parseTime=True&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SQLite&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[database]&#xA;# sqlite3&#xA;driver=&#34;sqlite3&#34;&#xA;dataSource=&#34;file:chatgpt?_fk=1&amp;amp;parseTime=True&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;v0.1.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复 prompt 过长导致接口调用失败问题&lt;/li&gt; &#xA; &lt;li&gt;支持 sqlite3&lt;/li&gt; &#xA; &lt;li&gt;自动初始化数据库&lt;/li&gt; &#xA; &lt;li&gt;支持企业微信进入事件，可以配置进入事件回复语。需要先在企业微信上配置【上报进入应用事件】&lt;/li&gt; &#xA; &lt;li&gt;支持关闭会话功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v0.1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;项目初始化&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dgraph-io/dgraph</title>
    <updated>2023-02-19T01:35:18Z</updated>
    <id>tag:github.com,2023-02-19:/dgraph-io/dgraph</id>
    <link href="https://github.com/dgraph-io/dgraph" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Native GraphQL Database with graph backend&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source srcset=&#34;/logo-dark.png&#34; media=&#34;(prefers-color-scheme: dark)&#34;&gt; &#xA; &lt;source srcset=&#34;/logo.png&#34; media=&#34;(prefers-color-scheme: light), (prefers-color-scheme: no-preference)&#34;&gt; &#xA; &lt;img alt=&#34;Dgraph Logo&#34; src=&#34;https://raw.githubusercontent.com/dgraph-io/dgraph/main/logo.png&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;&lt;strong&gt;The Only Native GraphQL Database With A Graph Backend.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dgraph.io/docs/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/res-wiki-blue.svg?sanitize=true&#34; alt=&#34;Wiki&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dgraph-io/dgraph/actions/workflows/ci-dgraph-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/dgraph-io/dgraph/actions/workflows/ci-dgraph-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;ci-dgraph-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dgraph-io/dgraph/actions/workflows/ci-dgraph-load-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/dgraph-io/dgraph/actions/workflows/ci-dgraph-load-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;ci-dgraph-load-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dgraph-io/dgraph/actions/workflows/ci-golang-lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/dgraph-io/dgraph/actions/workflows/ci-golang-lint.yml/badge.svg?sanitize=true&#34; alt=&#34;ci-golang-lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dgraph-io/dgraph/actions/workflows/ci-aqua-security-trivy-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/dgraph-io/dgraph/actions/workflows/ci-aqua-security-trivy-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;ci-aqua-security-trivy-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/dgraph-io/dgraph?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/dgraph-io/dgraph/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/dgraph-io/dgraph&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/dgraph-io/dgraph&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.tickgit.com/browse?repo=github.com/dgraph-io/dgraph&amp;amp;branch=main&#34;&gt;&lt;img src=&#34;https://badgen.net/https/api.tickgit.com/badgen/github.com/dgraph-io/dgraph/main&#34; alt=&#34;TODOs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dgraph is a horizontally scalable and distributed GraphQL database with a graph backend. It provides ACID transactions, consistent replication, and linearizable reads. It&#39;s built from the ground up to perform a rich set of queries. Being a native GraphQL database, it tightly controls how the data is arranged on disk to optimize for query performance and throughput, reducing disk seeks and network calls in a cluster.&lt;/p&gt; &#xA;&lt;p&gt;Dgraph&#39;s goal is to provide Google production-level scale and throughput, with low enough latency to serve real-time user queries over terabytes of structured data. Dgraph supports &lt;a href=&#34;https://dgraph.io/docs/main/query-language/&#34;&gt;GraphQL query syntax&lt;/a&gt;, and responds in &lt;a href=&#34;http://www.json.org/&#34;&gt;JSON&lt;/a&gt; and &lt;a href=&#34;https://developers.google.com/protocol-buffers/&#34;&gt;Protocol Buffers&lt;/a&gt; over &lt;a href=&#34;http://www.grpc.io/&#34;&gt;GRPC&lt;/a&gt; and HTTP. Dgraph is written using the Go Programming Language.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Dgraph is at &lt;a href=&#34;https://github.com/dgraph-io/dgraph/releases/tag/v22.0.0&#34;&gt;version v22.0.2&lt;/a&gt; and is production-ready. Apart from the vast open source community, it is being used in production at multiple Fortune 500 companies, and by &lt;a href=&#34;https://github.com/intuit/katlas&#34;&gt;Intuit Katlas&lt;/a&gt; and &lt;a href=&#34;https://github.com/vmware/purser&#34;&gt;VMware Purser&lt;/a&gt;. A hosted version of Dgraph is available at &lt;a href=&#34;https://cloud.dgraph.io&#34;&gt;https://cloud.dgraph.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;Dgraph officially supports the Linux/amd64 architecture. Support for Linux/arm64 is in development. In order to take advantage of memory performance gains and other architecture-specific advancements in Linux, we dropped official support Mac and Windows in 2021, see &lt;a href=&#34;https://discuss.dgraph.io/t/dropping-support-for-windows-and-mac/12913&#34;&gt;this blog post&lt;/a&gt; for more information. You can still build and use Dgraph on other platforms (for live or bulk loading for instance), but support for platforms other than Linux/amd64 is not available.&lt;/p&gt; &#xA;&lt;p&gt;Running Dgraph in a Docker environment is the recommended testing and deployment method.&lt;/p&gt; &#xA;&lt;h2&gt;Install with Docker&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re using Docker, you can use the &lt;a href=&#34;https://hub.docker.com/r/dgraph/dgraph/&#34;&gt;official Dgraph image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull dgraph/dgraph:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on a variety Docker deployment methods including Docker Compose and Kubernetes, see the &lt;a href=&#34;https://dgraph.io/docs/installation/single-host-setup/#docker&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run a Quick Standalone Cluster&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it -p 8080:8080 -p 9080:9080 -v ~/dgraph:/dgraph dgraph/standalone:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install from Source&lt;/h2&gt; &#xA;&lt;p&gt;If you want to install from source, install Go 1.13+ or later and the following dependencies:&lt;/p&gt; &#xA;&lt;h4&gt;Ubuntu&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get install build-essential&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;p&gt;As a prerequisite, first install &lt;a href=&#34;https://apps.apple.com/us/app/xcode/id497799835?mt=12&#34;&gt;XCode&lt;/a&gt; (or the &lt;a href=&#34;https://developer.apple.com/downloads/&#34;&gt;XCode Command-line Tools&lt;/a&gt;) and &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Next, install the required dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew update&#xA;brew install jemalloc go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build and Install&lt;/h3&gt; &#xA;&lt;p&gt;Then clone the Dgraph repository and use &lt;code&gt;make install&lt;/code&gt; to install the Dgraph binary in the directory named by the GOBIN environment variable, which defaults to $GOPATH/bin or $HOME/go/bin if the GOPATH environment variable is not set.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/dgraph-io/dgraph.git&#xA;cd dgraph&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;To get started with Dgraph, follow:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation to queries in 3 steps via &lt;a href=&#34;https://dgraph.io/docs/get-started/&#34;&gt;dgraph.io/docs/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A longer interactive tutorial via &lt;a href=&#34;https://dgraph.io/tour/&#34;&gt;dgraph.io/tour/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Tutorial and presentation videos on &lt;a href=&#34;https://www.youtube.com/channel/UCghE41LR8nkKFlR3IFTRO4w/featured&#34;&gt;YouTube channel&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Is Dgraph the right choice for me?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do you have more than 10 SQL tables connected via foreign keys?&lt;/li&gt; &#xA; &lt;li&gt;Do you have sparse data, which doesn&#39;t elegantly fit into SQL tables?&lt;/li&gt; &#xA; &lt;li&gt;Do you want a simple and flexible schema, which is readable and maintainable over time?&lt;/li&gt; &#xA; &lt;li&gt;Do you care about speed and performance at scale?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the answers to the above are YES, then Dgraph would be a great fit for your application. Dgraph provides NoSQL like scalability while providing SQL like transactions and the ability to select, filter, and aggregate data points. It combines that with distributed joins, traversals, and graph operations, which makes it easy to build applications with it.&lt;/p&gt; &#xA;&lt;h2&gt;Dgraph compared to other graph DBs&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;   &lt;th&gt;Dgraph&lt;/th&gt; &#xA;   &lt;th&gt;Neo4j&lt;/th&gt; &#xA;   &lt;th&gt;Janus Graph&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Architecture&lt;/td&gt; &#xA;   &lt;td&gt;Sharded and Distributed&lt;/td&gt; &#xA;   &lt;td&gt;Single server (+ replicas in enterprise)&lt;/td&gt; &#xA;   &lt;td&gt;Layer on top of other distributed DBs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Replication&lt;/td&gt; &#xA;   &lt;td&gt;Consistent&lt;/td&gt; &#xA;   &lt;td&gt;None in community edition (only available in enterprise)&lt;/td&gt; &#xA;   &lt;td&gt;Via underlying DB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data movement for shard rebalancing&lt;/td&gt; &#xA;   &lt;td&gt;Automatic&lt;/td&gt; &#xA;   &lt;td&gt;Not applicable (all data lies on each server)&lt;/td&gt; &#xA;   &lt;td&gt;Via underlying DB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Language&lt;/td&gt; &#xA;   &lt;td&gt;GraphQL inspired&lt;/td&gt; &#xA;   &lt;td&gt;Cypher, Gremlin&lt;/td&gt; &#xA;   &lt;td&gt;Gremlin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Protocols&lt;/td&gt; &#xA;   &lt;td&gt;Grpc / HTTP + JSON / RDF&lt;/td&gt; &#xA;   &lt;td&gt;Bolt + Cypher&lt;/td&gt; &#xA;   &lt;td&gt;Websocket / HTTP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transactions&lt;/td&gt; &#xA;   &lt;td&gt;Distributed ACID transactions&lt;/td&gt; &#xA;   &lt;td&gt;Single server ACID transactions&lt;/td&gt; &#xA;   &lt;td&gt;Not typically ACID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Full-Text Search&lt;/td&gt; &#xA;   &lt;td&gt;Native support&lt;/td&gt; &#xA;   &lt;td&gt;Native support&lt;/td&gt; &#xA;   &lt;td&gt;Via External Indexing System&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Regular Expressions&lt;/td&gt; &#xA;   &lt;td&gt;Native support&lt;/td&gt; &#xA;   &lt;td&gt;Native support&lt;/td&gt; &#xA;   &lt;td&gt;Via External Indexing System&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Geo Search&lt;/td&gt; &#xA;   &lt;td&gt;Native support&lt;/td&gt; &#xA;   &lt;td&gt;External support only&lt;/td&gt; &#xA;   &lt;td&gt;Via External Indexing System&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;License&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;   &lt;td&gt;GPL v3&lt;/td&gt; &#xA;   &lt;td&gt;Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Users&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dgraph official documentation is present at &lt;a href=&#34;https://dgraph.io/docs/&#34;&gt;dgraph.io/docs/&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;For feature requests or questions, visit &lt;a href=&#34;https://discuss.dgraph.io&#34;&gt;https://discuss.dgraph.io&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;http://dgraph.io&#34;&gt;the demo at dgraph.io&lt;/a&gt; and &lt;a href=&#34;http://play.dgraph.io/&#34;&gt;the visualization at play.dgraph.io&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please see &lt;a href=&#34;https://github.com/dgraph-io/dgraph/releases&#34;&gt;releases tab&lt;/a&gt; to find the latest release and corresponding release notes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.dgraph.io/t/product-roadmap-2020/8479&#34;&gt;See the Roadmap&lt;/a&gt; for a list of working and planned features.&lt;/li&gt; &#xA; &lt;li&gt;Read about the latest updates from the Dgraph team &lt;a href=&#34;https://open.dgraph.io/&#34;&gt;on our blog&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Watch tech talks on our &lt;a href=&#34;https://www.youtube.com/channel/UCghE41LR8nkKFlR3IFTRO4w/featured&#34;&gt;YouTube channel&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See a list of issues &lt;a href=&#34;https://github.com/dgraph-io/dgraph/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;that we need help with&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please see &lt;a href=&#34;https://github.com/dgraph-io/dgraph/raw/main/CONTRIBUTING.md&#34;&gt;Contributing to Dgraph&lt;/a&gt; for guidelines on contributions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Client Libraries&lt;/h2&gt; &#xA;&lt;p&gt;The Dgraph team maintains several &lt;a href=&#34;https://dgraph.io/docs/clients/&#34;&gt;officially supported client libraries&lt;/a&gt;. There are also libraries contributed by the community &lt;a href=&#34;https://dgraph.io/docs/clients#unofficial-dgraph-clients&#34;&gt;unofficial client libraries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please use &lt;a href=&#34;https://discuss.dgraph.io&#34;&gt;discuss.dgraph.io&lt;/a&gt; for documentation, questions, feature requests and discussions.&lt;/li&gt; &#xA; &lt;li&gt;Please use &lt;a href=&#34;https://discuss.dgraph.io/c/issues/dgraph/38&#34;&gt;discuss.dgraph.io&lt;/a&gt; for filing bugs or feature requests.&lt;/li&gt; &#xA; &lt;li&gt;Follow us on Twitter &lt;a href=&#34;https://twitter.com/dgraphlabs&#34;&gt;@dgraphlabs&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>