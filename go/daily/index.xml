<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-16T01:31:59Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>edoardottt/scilla</title>
    <updated>2024-07-16T01:31:59Z</updated>
    <id>tag:github.com,2024-07-16:/edoardottt/scilla</id>
    <link href="https://github.com/edoardottt/scilla" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Information Gathering tool - DNS / Subdomains / Ports / Directories enumeration&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/edoardottt/images/raw/main/scilla/logo.png&#34;&gt;&lt;br&gt; &lt;b&gt;üè¥‚Äç‚ò†Ô∏è Information Gathering tool üè¥‚Äç‚ò†Ô∏è - DNS / Subdomains / Ports / Directories enumeration&lt;/b&gt;&lt;br&gt; &lt;br&gt; &#xA; &lt;!-- go-report-card --&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/edoardottt/scilla&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/edoardottt/scilla&#34; alt=&#34;go-report-card&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- workflows --&gt; &lt;a href=&#34;https://github.com/edoardottt/scilla/actions&#34;&gt; &lt;img src=&#34;https://github.com/edoardottt/scilla/workflows/Go/badge.svg?branch=main&#34; alt=&#34;workflows&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;sub&gt; Coded with üíô by edoardottt &lt;/sub&gt; &lt;br&gt; &#xA; &lt;!--Tweet button--&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fedoardottt%2Fscilla%20&amp;amp;text=Information%20Gathering%20tool%21&amp;amp;hashtags=pentesting%2Clinux%2Cgolang%2Cnetwork&#34; target=&#34;_blank&#34;&gt;Share on Twitter! &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/edoardottt/scilla/main/#installation-&#34;&gt;Install&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/edoardottt/scilla/main/#get-started-&#34;&gt;Get Started&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/edoardottt/scilla/main/#examples-&#34;&gt;Examples&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/edoardottt/scilla/main/#changelog-&#34;&gt;Changelog&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/edoardottt/scilla/main/#contributing-&#34;&gt;Contributing&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/edoardottt/scilla/main/#license-&#34;&gt;License&lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--[![asciicast](https://asciinema.org/a/406707.svg)](https://asciinema.org/a/406707)--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/edoardottt/images/raw/main/scilla/scilla.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation üì°&lt;/h2&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install scilla&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Snap&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo snap install scilla&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go install -v github.com/edoardottt/scilla/cmd/scilla@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building from source&lt;/h3&gt; &#xA;&lt;p&gt;You need &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git clone https://github.com/edoardottt/scilla.git&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd scilla&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;make linux&lt;/code&gt; (to install)&lt;/li&gt; &#xA;   &lt;li&gt;Edit the &lt;code&gt;~/.config/scilla/keys.yaml&lt;/code&gt; file if you want to use API keys&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;make unlinux&lt;/code&gt; (to uninstall)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; (executable works only in scilla folder. &lt;a href=&#34;https://github.com/edoardottt/scilla/issues/10&#34;&gt;Alias?&lt;/a&gt;)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git clone https://github.com/edoardottt/scilla.git&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd scilla&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;.\make.bat windows&lt;/code&gt; (to install)&lt;/li&gt; &#xA;   &lt;li&gt;Create a &lt;code&gt;keys.yaml&lt;/code&gt; file if you want to use api keys&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;.\make.bat unwindows&lt;/code&gt; (to uninstall)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t scilla .&#xA;docker run scilla help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get Started üéâ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;scilla help&lt;/code&gt; prints the help in the command line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;usage: scilla subcommand { options }&#xA;&#xA;   Available subcommands:&#xA;       - dns [-oj JSON output file]&#xA;             [-oh HTML output file]&#xA;             [-ot TXT output file]&#xA;             [-plain Print only results]&#xA;             -target &amp;lt;target (URL/IP)&amp;gt; REQUIRED&#xA;       - port [-p &amp;lt;start-end&amp;gt; or ports divided by comma]&#xA;              [-oj JSON output file]&#xA;              [-oh HTML output file]&#xA;              [-ot TXT output file]&#xA;              [-common scan common ports]&#xA;              [-plain Print only results]&#xA;              -target &amp;lt;target (URL/IP)&amp;gt; REQUIRED&#xA;       - subdomain [-w wordlist]&#xA;                   [-oj JSON output file]&#xA;                   [-oh HTML output file]&#xA;                   [-ot TXT output file]&#xA;                   [-i ignore status codes]&#xA;                   [-c use also a web crawler]&#xA;                   [-db use also a public database]&#xA;                   [-plain Print only results]&#xA;                   [-db -no-check Don&#39;t check status codes for subdomains]&#xA;                   [-db -vt Use VirusTotal as subdomains source]&#xA;                   [-db -bw Use BuiltWith as subdomains source]&#xA;                   [-ua Set the User Agent]&#xA;                   [-rua Generate a random user agent for each request]&#xA;                   [-dns Set DNS IP to resolve the subdomains]&#xA;                   [-alive Check also if the subdomains are alive]&#xA;                   -target &amp;lt;target (URL)&amp;gt; REQUIRED&#xA;       - dir [-w wordlist]&#xA;             [-oj JSON output file]&#xA;             [-oh HTML output file]&#xA;             [-ot TXT output file]&#xA;             [-i ignore status codes]&#xA;             [-c use also a web crawler]&#xA;             [-plain Print only results]&#xA;             [-nr No follow redirects]&#xA;             [-ua Set the User Agent]&#xA;             [-rua Generate a random user agent for each request]&#xA;             -target &amp;lt;target (URL/IP)&amp;gt; REQUIRED&#xA;       - report [-p &amp;lt;start-end&amp;gt; or ports divided by comma]&#xA;                [-ws subdomains wordlist]&#xA;                [-wd directories wordlist]&#xA;                [-oj JSON output file]&#xA;                [-oh HTML output file]&#xA;                [-ot TXT output file]&#xA;                [-id ignore status codes in directories scanning]&#xA;                [-is ignore status codes in subdomains scanning]&#xA;                [-cd use also a web crawler for directories scanning]&#xA;                [-cs use also a web crawler for subdomains scanning]&#xA;                [-db use also a public database for subdomains scanning]&#xA;                [-common scan common ports]&#xA;                [-nr No follow redirects]&#xA;                [-db -vt Use VirusTotal as subdomains source]&#xA;                [-ua Set the User Agent]&#xA;                [-rua Generate a random user agent for each request]&#xA;                [-dns Set DNS IP to resolve the subdomains]&#xA;                [-alive Check also if the subdomains are alive]&#xA;                -target &amp;lt;target (URL)&amp;gt; REQUIRED&#xA;       - help&#xA;       - examples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples üí°&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;DNS enumeration:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dns -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dns -oj output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dns -oh output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dns -ot output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dns -plain -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Subdomains enumeration:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -w wordlist.txt -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -oj output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -oh output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -ot output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -i 400 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -i 4** -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -c -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -db -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -plain -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -db -no-check -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -db -vt -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -db -bw -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -ua &#34;CustomUA&#34; -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -rua -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -dns 8.8.8.8 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla subdomain -alive -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Directories enumeration:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -w wordlist.txt -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -oj output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -oh output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -ot output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -i 500,401 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -i 5**,401 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -c -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -plain -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -nr -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -ua &#34;CustomUA&#34; -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;scilla dir -rua -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ports enumeration:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default (all ports, so 1-65635) &lt;code&gt;scilla port -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying ports range &lt;code&gt;scilla port -p 20-90 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying starting port (until the last one) &lt;code&gt;scilla port -p 20- -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying ending port (from the first one) &lt;code&gt;scilla port -p -90 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying single port &lt;code&gt;scilla port -p 80 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying output format (json)&lt;code&gt;scilla port -oj output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying output format (html)&lt;code&gt;scilla port -oh output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying output format (txt)&lt;code&gt;scilla port -ot output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying multiple ports &lt;code&gt;scilla port -p 21,25,80 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying common ports &lt;code&gt;scilla port -common -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Print only results &lt;code&gt;scilla port -plain -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Full report:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default (all ports, so 1-65635) &lt;code&gt;scilla report -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying ports range &lt;code&gt;scilla report -p 20-90 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying starting port (until the last one) &lt;code&gt;scilla report -p 20- -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying ending port (from the first one) &lt;code&gt;scilla report -p -90 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying single port &lt;code&gt;scilla report -p 80 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying output format (json)&lt;code&gt;scilla report -oj output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying output format (html)&lt;code&gt;scilla report -oh output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying output format (txt)&lt;code&gt;scilla report -ot output -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying directories wordlist &lt;code&gt;scilla report -wd dirs.txt -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying subdomains wordlist &lt;code&gt;scilla report -ws subdomains.txt -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying status codes to be ignored in directories scanning &lt;code&gt;scilla report -id 500,501,502 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying status codes to be ignored in subdomains scanning &lt;code&gt;scilla report -is 500,501,502 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying status codes classes to be ignored in directories scanning &lt;code&gt;scilla report -id 5**,4** -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying status codes classes to be ignored in subdomains scanning &lt;code&gt;scilla report -is 5**,4** -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use also a web crawler for directories enumeration &lt;code&gt;scilla report -cd -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use also a web crawler for subdomains enumeration &lt;code&gt;scilla report -cs -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use also a public database for subdomains enumeration &lt;code&gt;scilla report -db -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying multiple ports &lt;code&gt;scilla report -p 21,25,80 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Specifying common ports &lt;code&gt;scilla report -common -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;No follow redirects &lt;code&gt;scilla report -nr -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use VirusTotal as subdomains source &lt;code&gt;scilla report -db -vt -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Set the User Agent &lt;code&gt;scilla report -ua &#34;CustomUA&#34; -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Generate a random user agent for each request &lt;code&gt;scilla report -rua -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Set DNS IP to resolve the subdomains &lt;code&gt;scilla report -dns 8.8.8.8 -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Check also if the subdomains are alive &lt;code&gt;scilla report -alive -target target.domain&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog üìå&lt;/h2&gt; &#xA;&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&#34;https://github.com/edoardottt/scilla/releases&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing üõ†&lt;/h2&gt; &#xA;&lt;p&gt;Just open an &lt;a href=&#34;https://github.com/edoardottt/scilla/issues&#34;&gt;issue&lt;/a&gt; / &lt;a href=&#34;https://github.com/edoardottt/scilla/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Before opening a pull request, download &lt;a href=&#34;https://golangci-lint.run/usage/install/&#34;&gt;golangci-lint&lt;/a&gt; and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;golangci-lint run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If there aren&#39;t errors, go ahead :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To do:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Add more tests&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Tor support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Proxy support&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;In the news üì∞&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kalilinuxtutorials.com/scilla/&#34;&gt;Kali Linux Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/scilla-information-gathering-dns-subdomain-port-enumeration/&#34;&gt;GeeksForGeeks.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.briskinfosec.com/tooloftheday/toolofthedaydetail/Scilla&#34;&gt;Brisk Infosec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kalitut.com/scilla-nformation-gathering-tool/&#34;&gt;Kalitut&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License üìù&lt;/h2&gt; &#xA;&lt;p&gt;This repository is under &lt;a href=&#34;https://github.com/edoardottt/scilla/raw/main/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;.&lt;br&gt; &lt;a href=&#34;https://www.edoardoottavianelli.it&#34;&gt;edoardoottavianelli.it&lt;/a&gt; to contact me.&lt;/p&gt;</summary>
  </entry>
</feed>