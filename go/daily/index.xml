<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-04T01:31:58Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>glasskube/glasskube</title>
    <updated>2024-02-04T01:31:58Z</updated>
    <id>tag:github.com,2024-02-04:/glasskube/glasskube</id>
    <link href="https://github.com/glasskube/glasskube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🧊 The missing Package Manager for Kubernetes 📦 Featuring a GUI and a CLI. Glasskube packages are dependency aware, GitOps ready and get automatic updates via a central public package repository.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/glasskube/glasskube&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/glasskube/glasskube?style=flat&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://glasskube.dev/docs/?utm_source=github&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-glasskube.dev%2Fdocs-blue&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/SxH6KUCGH7&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/SxH6KUCGH7?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://api.scarf.sh/v2/packages/glasskube/98007d72-6335-4355-8979-7f268209f389/downloads-badge&#34; alt=&#34;scarf&#34;&gt; &lt;a href=&#34;https://x.com/intent/follow?screen_name=glasskube&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/glasskube?style=flat&#34; alt=&#34;twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://glasskube.dev?utm_source=github&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/glasskube/.github/main/images/glasskube-logo.png&#34; alt=&#34;Glasskube Logo&#34; height=&#34;160&#34;&gt; &lt;/a&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;🧊 The missing Package Manager for Kubernetes 📦&lt;/h3&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://glasskube.dev/docs/getting-started/install?utm_source=github&#34;&gt;&lt;strong&gt;Getting started »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://glasskube.dev?utm_source=github&#34;&gt;&lt;strong&gt;Explore our website »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/glasskube&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt; . &lt;a href=&#34;https://hub.docker.com/u/glasskube&#34; target=&#34;_blank&#34;&gt;Docker Hub&lt;/a&gt; . &lt;a href=&#34;https://artifacthub.io/packages/search?org=glasskube&#34; target=&#34;_blank&#34;&gt;Artifact Hub&lt;/a&gt; . &lt;a href=&#34;https://www.linkedin.com/company/glasskube/&#34; target=&#34;_blank&#34;&gt;LinkedIn&lt;/a&gt; . &lt;a href=&#34;https://x.com/intent/follow?screen_name=glasskube&#34; target=&#34;_blank&#34;&gt;Twitter / X&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/glasskube/operator/assets/3041752/71d0da0c-34ac-40b7-8740-bd2a81ca9f07&#34; alt=&#34;Glasskube GUI Mockup&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⭐️ Why Glasskube?&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;strong&gt;traditional package managers&lt;/strong&gt; or applying manifests directly can be &lt;strong&gt;super confusing&lt;/strong&gt; and doesn&#39;t scale. Therefore, Glasskube will help you to &lt;strong&gt;install your favorite Kubernetes packages&lt;/strong&gt; using the &lt;strong&gt;Glasskube UI&lt;/strong&gt; for reduced complexity and increased transparency. We are also providing a &lt;strong&gt;brew inspired CLI&lt;/strong&gt; for advanced users. Our &lt;strong&gt;packages are dependency aware&lt;/strong&gt;, as you would expect from a package manager. Designed as a cloud native application, so you can follow your &lt;strong&gt;GitOps approach&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💡 &lt;strong&gt;Streamlined UI and CLI Experience&lt;/strong&gt;: &lt;br&gt; We&#39;ve stripped away unnecessary complexities, providing a simple yet powerful user interface and command-line interface for easy package management.&lt;/li&gt; &#xA; &lt;li&gt;🔄 &lt;strong&gt;Automated Updates&lt;/strong&gt;: &lt;br&gt; Glasskube ensures your Kubernetes packages and apps are always up-to-date, minimizing the manual effort required for maintenance.&lt;/li&gt; &#xA; &lt;li&gt;🤝 &lt;strong&gt;Dependency Awareness&lt;/strong&gt;: &lt;br&gt; We understand the interconnected nature of Kubernetes packages. Glasskube intelligently manages dependencies.&lt;/li&gt; &#xA; &lt;li&gt;🛠️ &lt;strong&gt;GitOps Ready&lt;/strong&gt; with ArgoCD or Flux: &lt;br&gt; Seamlessly integrate Glasskube into your GitOps workflow with support for popular tools like ArgoCD or Flux.&lt;/li&gt; &#xA; &lt;li&gt;📦 &lt;strong&gt;Central Package Repository&lt;/strong&gt;: &lt;br&gt; Keep track of all your packages in one central repository, with a &lt;a href=&#34;https://glasskube.dev/roadmap/?utm_source=github&#34;&gt;planned&lt;/a&gt; feature for custom repositories.&lt;/li&gt; &#xA; &lt;li&gt;🔍 &lt;strong&gt;Cluster Scan&lt;/strong&gt; (&lt;a href=&#34;https://glasskube.dev/roadmap/?utm_source=github&#34;&gt;planned&lt;/a&gt;): &lt;br&gt; Introducing the Cluster Scan feature in a future version, which allows you to detect packages in your cluster, providing valuable insights for better management and upgrade paths.&lt;/li&gt; &#xA; &lt;li&gt;🔐 &lt;strong&gt;Version Pinning&lt;/strong&gt; (&lt;a href=&#34;https://glasskube.dev/roadmap/?utm_source=github&#34;&gt;planned&lt;/a&gt;): &lt;br&gt; With a future version, Glasskube will introduce Version Pinning, giving you control over your package versions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗄️ Table Of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasskube/#-quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasskube/glasskube#-supported-tools&#34;&gt;Supported Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasskube/glasskube#-how-to-install-you-first-package&#34;&gt;How to install your first package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasskube/glasskube#architecture-diagram&#34;&gt;Architecture Diagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasskube/glasskube#-need-help&#34;&gt;Need help?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasskube/glasskube#-related-projects&#34;&gt;Related projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasskube/glasskube#-how-to-contribute&#34;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasskube/glasskube#-supported-by&#34;&gt;Supported by&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Quick Start - Install your first package in less than 5 minutes.&lt;/h2&gt; &#xA;&lt;p&gt;You can install Glasskube via &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install glasskube/tap/glasskube&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other installation options check out our &lt;a href=&#34;https://glasskube.dev/docs/getting-started/install&#34;&gt;install guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once the CLI is installed, the first step is to install the necessary components in your cluster. To do that, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;glasskube bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After successfully bootstrapping your cluster, you are ready to start the package manager UI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;glasskube serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will open &lt;a href=&#34;http://localhost:8580&#34;&gt;&lt;code&gt;http://localhost:8580&lt;/code&gt;&lt;/a&gt; in your default browser. Congratulations, you can now explore and install all our available packages! 🎉&lt;/p&gt; &#xA;&lt;h2&gt;📦 Supported Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cert Manager &lt;a href=&#34;https://github.com/cert-manager/cert-manager&#34;&gt;&lt;code&gt;cert-manager/cert-manager&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ingress-NGINX Controller &lt;a href=&#34;https://github.com/kubernetes/ingress-nginx&#34;&gt;&lt;code&gt;kubernetes/ingress-nginx&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes Dashboard &lt;a href=&#34;https://github.com/kubernetes/dashboard&#34;&gt;&lt;code&gt;kubernetes/dashboard&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cyclops&lt;a href=&#34;https://github.com/cyclops-ui/cyclops&#34;&gt;&lt;code&gt;cyclops-ui/cyclops&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Coming Soon&lt;/h3&gt; &#xA;&lt;p&gt;In the next versions you will be able to install more packages like the &lt;a href=&#34;https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack&#34;&gt;Kube-Prometheus-Stack&lt;/a&gt;, &lt;a href=&#34;https://github.com/vmware-tanzu/velero&#34;&gt;Velero&lt;/a&gt; and the &lt;a href=&#34;https://github.com/cloudnative-pg/cloudnative-pg&#34;&gt;CloudNativePG&lt;/a&gt;. With v0.1.0 you will also be able to install apps like &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab&#34;&gt;GitLab&lt;/a&gt;, &lt;a href=&#34;https://github.com/keycloak/keycloak&#34;&gt;Keycloak&lt;/a&gt; or &lt;a href=&#34;https://github.com/hashicorp/vault&#34;&gt;Hashicorp Vault&lt;/a&gt; with the &lt;a href=&#34;https://github.com/glasskube/operator/&#34;&gt;Glasskube Apps Operator&lt;/a&gt;. You can find the full list and release schedule in our &lt;a href=&#34;https://glasskube.dev/roadmap/#packages-and-apps-schedule?utm_source=github&#34;&gt;roadmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Can&#39;t find a package or want your app included in the list? We are always adding new supported packages &amp;amp; apps, so just join us on &lt;a href=&#34;https://discord.gg/SxH6KUCGH7&#34;&gt;Discord&lt;/a&gt; or open up a new issue and let us know what is missing!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🎬 How to install you first package&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/glasskube/glasskube/assets/16959694/f8b936ca-7b58-4e2b-8845-17da089f2384&#34; alt=&#34;cast&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture Diagram&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;---&#xA;title: glasskube install [package]&#xA;---&#xA;flowchart BT&#xA;  UI([UI])-- via local server&amp;lt;br&amp;gt;http://localhost:8580 ---Client(Client)&#xA;  CLI([CLI])-- cobra cli ---Client&#xA;  Client-- 1. validate package --&amp;gt;Repo[(Public Glasskube&amp;lt;br&amp;gt;Package Repo)]&#xA;  Client-- 2. create&amp;lt;br&amp;gt;`Package` CR --&amp;gt;Kubernetes(((Kubernetes API)))&#xA;  subgraph Cluster&#xA;    Kubernetes-- 3. reconcile&amp;lt;br&amp;gt;`Package` --&amp;gt;PackageController&#xA;    PackageController-- 4. create `PackageInfo`&amp;lt;br&amp;gt;if not present--&amp;gt;Kubernetes&#xA;    Kubernetes-- 5. reconcile&amp;lt;br&amp;gt;`PackageInfo`--&amp;gt;PackageInfoController&#xA;    end&#xA;  PackageInfoController&amp;lt;-- 6. update package manifest --&amp;gt;Repo&#xA;  subgraph Cluster&#xA;    PackageInfoController-- 7. update manifest&amp;lt;br&amp;gt;in `PackageInfo` --&amp;gt;Kubernetes&#xA;    Kubernetes-- 8. reconcile&amp;lt;br&amp;gt;`PackageInfo` --&amp;gt;PackageController&#xA;    PackageController-- 9. deploy package --&amp;gt;Kubernetes&#xA;  end&#xA;&#xA;  Kubernetes-- 10. package status --&amp;gt;Client &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;☝️ Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any problems, we will be happy to support you wherever we can on our &lt;a href=&#34;https://discord.gg/SxH6KUCGH7&#34;&gt;Discord&lt;/a&gt;. For bugs, issues or feature requests fee free to &lt;a href=&#34;https://github.com/glasskube/glasskube/issues/new/choose&#34;&gt;open an issue&lt;/a&gt;. We are happy to assist you with anything related to the project.&lt;/p&gt; &#xA;&lt;h2&gt;📎 Related Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Glasskube Apps Operator &lt;a href=&#34;https://github.com/glasskube/operator/&#34;&gt;&lt;code&gt;glasskube/operator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🤝 How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/glasskube/glasskube/main/CONTRIBUTING.md&#34;&gt;the contributing guide&lt;/a&gt; for detailed instructions.&lt;/p&gt; &#xA;&lt;h2&gt;🤩 Thanks to all our Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to everyone, that is supporting this project. We are thankful, for evey contribution, no matter its size!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/glasskube/glasskube/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=glasskube/glasskube&#34;&gt; &lt;img referrerpolicy=&#34;no-referrer-when-downgrade&#34; src=&#34;https://static.scarf.sh/a.png?x-pxid=899d5aee-625c-4345-bad0-713d29caf929&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;📘 License&lt;/h2&gt; &#xA;&lt;p&gt;The Glasskube is licensed under the Apache 2.0 license. For more information check the &lt;a href=&#34;https://github.com/glasskube/glasskube/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>snyk/leaky-vessels-static-detector</title>
    <updated>2024-02-04T01:31:58Z</updated>
    <id>tag:github.com,2024-02-04:/snyk/leaky-vessels-static-detector</id>
    <link href="https://github.com/snyk/leaky-vessels-static-detector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Static detection tool for runc and Docker &#34;Leaky Vessels&#34; vulnerabilities&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Leaky Vessels Static Detector&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/snyk-labs/oss-images/raw/main/oss-community.jpg&#34; alt=&#34;snyk-oss-category&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A static analysis based exploit detector for runc and Docker vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;runc process.cwd &amp;amp; Leaked fds Container Breakout [CVE-2024-21626]&lt;/h3&gt; &#xA;&lt;p&gt;CVE-2024-21626 is a vulnerability in the &lt;code&gt;runc&lt;/code&gt; container runtime allowing an attacker to break out of the container isolation and achieve full root RCE via a crafted image that exploits an issue within the &lt;code&gt;WORKDIR&lt;/code&gt; instruction&#39;s handling. Since there&#39;s a &#34;race&#34; condition between the time some file descriptors to the host are opened and closed, an attacker can create a Dockerfile with the following instruction &lt;code&gt;WORKDIR /proc/self/fd/[ID]&lt;/code&gt; (with ID being a system dependent file descriptor) that will point to the underlying host machine&#39;s file system. This can be exploited when running:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;docker build&lt;/code&gt; - In 2 cases: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When the Dockerfile being built contains the exploit triggerting instruction.&lt;/li&gt; &#xA;   &lt;li&gt;When the Dockerfile being built refers to a base image via the &lt;code&gt;FROM&lt;/code&gt; instruction that contains an &lt;code&gt;ONBUILD&lt;/code&gt; command triggering the exploit e.e. &lt;code&gt;ONBUILD WORKDIR /proc/self/fd[ID]&lt;/code&gt;. The &lt;code&gt;ONBUILD&lt;/code&gt; instruction injects the command not in the image that contains it but in the image that uses it as a base image. This means that if a base image is compromised or intentionally nefarious i.e. hosted on Dockerhub or other public container registries, exploitation if possible even if nothing changes in the image that the &lt;code&gt;docker build&lt;/code&gt; command actually builds.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker run&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Thus, this vulnerability can put both build systems and production environments at risk.&lt;/p&gt; &#xA;&lt;h3&gt;Buildkit Mount Cache Race: Build-time Race Condition Container Breakout [CVE-2024-23651]&lt;/h3&gt; &#xA;&lt;p&gt;CVE-2024-23651 is a vulnerability in Docker where a &lt;code&gt;RUN&lt;/code&gt; command is using the &lt;code&gt;--mount=type=cache&lt;/code&gt; flag. There&#39;s a time-of-check/time-of-use (TOCTOU) vulnerability between the check that a &lt;code&gt;source&lt;/code&gt; dir exists on the Docker daemon&#39;s host and the actual call to the &lt;code&gt;mount&lt;/code&gt; syscall. An attacker is able to craft a Dockerfile that would plant a symlink in between these two calls to induce an arbitrary bind mount that results in full root RCE on the host. This vulnerability only affects the &lt;code&gt;docker build&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h3&gt;Buildkit GRPC SecurityMode Privilege Check [CVE-2024-23653]&lt;/h3&gt; &#xA;&lt;p&gt;CVE-2024-23653 is a vulnerability in Docker that occurs when using a custom Buildkit LLB generator is used with the &lt;code&gt;# syntax&lt;/code&gt; directive. The generator can use the Client.NewContainer and Container.Start GRPC calls to execute a new container during build. The StartRequest.SecurityMode argument is not appropriately checked against the privilege expectations of the docker daemon or docker build call, which allows the GRPC caller to create a privileged container during build. This new privileged container can then be escaped to gain full root RCE on the build host. This vulnerability only affects the &lt;code&gt;docker build&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h3&gt;Buildkit Build-time Container Teardown Arbitrary Delete [CVE-2024-23652]&lt;/h3&gt; &#xA;&lt;p&gt;CVE-2024-23652 is an arbitrary deletion vulnerability in Docker. When &lt;code&gt;RUN --mount&lt;/code&gt; is used in a Dockerfile, if the target of the mount does not exist it will be created for that environment. When the execution completes this created directory will be cleaned up. If the executing command changes the path used for the mount to a symbolic link, the cleanup procedure will traverse this symbolic link and potentially clean up arbitrary directories in the host root filesystem. This vulnerability only affects the &lt;code&gt;docker build&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;For a dynamic eBPF based detection approach, please see &lt;a href=&#34;https://github.com/snyk/leaky-vessels-runtime-detector&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The detector uses Buildkit&#39;s Dockerfile &lt;a href=&#34;https://pkg.go.dev/github.com/moby/buildkit/frontend/dockerfile/parser&#34;&gt;parser&lt;/a&gt; Go package to generate the AST (Abstract Syntax Tree) of a Dockerfile, traverses it and detects potential exploits using Regex matching on the instruction&#39;s arguments and flags. It can run the detection mechanism on an image history obtained from the local Docker daemon/Dockerhub as well. The image history is the output the user sees when running &lt;code&gt;docker image history [IMAGE_NAME]&lt;/code&gt;, e.g:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IMAGE          CREATED       CREATED BY                                      SIZE      COMMENT&#xA;5381a1ec32f5   4 days ago    CMD [&#34;/bin/sh&#34; &#34;-c&#34; &#34;/exploit&#34;]                 0B        buildkit.dockerfile.v0&#xA;&amp;lt;missing&amp;gt;      4 days ago    RUN /bin/sh -c /exploit # buildkit              0B        buildkit.dockerfile.v0&#xA;&amp;lt;missing&amp;gt;      4 days ago    COPY &amp;lt;&amp;lt;EOT /exploit # buildkit                  110B      buildkit.dockerfile.v0&#xA;&amp;lt;missing&amp;gt;      2 weeks ago   WORKDIR /proc/self/fd/7                         0B        buildkit.dockerfile.v0&#xA;&amp;lt;missing&amp;gt;      5 weeks ago   /bin/sh -c #(nop)  CMD [&#34;/bin/sh&#34;]              0B&#xA;&amp;lt;missing&amp;gt;      5 weeks ago   /bin/sh -c #(nop) ADD file:1f4eb46669b5b6275…   7.38MB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The image history is not a 1-to-1 representation of a Dockerfile so it doesn&#39;t contain all the instructions the latter would, but it has info on both &lt;code&gt;WORKDIR&lt;/code&gt; and &lt;code&gt;ONBUILD&lt;/code&gt; instructions deeming it useful for our purpose. We supplement this data by also using the inspection metadata received from &lt;code&gt;docker image inspect [IMAGE_NAME]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The detector receives a Dockerfile path as an input and can analyze it for the aforementioned vulnerabilities exploit attempts. It can also extract the base image or multiple ones (if a multi-staged Dockerfile is used), try to determine it&#39;s source and run the analysis. Currently we only support images from GCR, Dockerhub and the local Docker daemon.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a high-level breakdown of supported features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Regex based detection rule matching.&lt;/li&gt; &#xA; &lt;li&gt;Dockerfile detection - scan a Dockerfile and flag instructions potentially indicating an exploit attempt. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Automated base image analysis - for images from: &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;Local Docker daemon.&lt;/li&gt; &#xA;     &lt;li&gt;Dockerhub.&lt;/li&gt; &#xA;     &lt;li&gt;GCR - Google Container Registry.&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Image detection - runs rules directly on images hosted in one of the following sources: local daemon, Dockerhub and GCR. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For the local daemon and Dockerhub - analyzes the image layer history and inspection metadata.&lt;/li&gt; &#xA;   &lt;li&gt;For GCR - the image layer metadata doesn&#39;t contain instructions. As a workaround - pulls the image locally and runs the daemon analysis on it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strengths and Limitations&lt;/h3&gt; &#xA;&lt;p&gt;Compared with the dynamic eBPF-based detector mentioned, the static detector has the following pros and cons:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Doesn&#39;t require continuous running in the environment.&lt;/li&gt; &#xA; &lt;li&gt;Has a solid false-negative (miss) rate - if a Dockerfile is scanned and is clean, there&#39;s a good chance that running it is safe. This cannot be guaranteed 100%.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;On the other hand:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Less accurate - has higher false-positive rates. If a Dockerfile is matched, it&#39;s still potentially vulnerable and needs further verification.&lt;/li&gt; &#xA; &lt;li&gt;Does not cover everything that is built/executed - we tried to improve this by looking at the base image layer history but it&#39;s not perfect.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;p&gt;Simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;To run the main file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go run main.go [COMMAND] [ARGS]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the compiled binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./static-detector [COMMAND] [ARGS]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commands and Args&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Common args -&lt;/p&gt; &lt;p&gt;&lt;code&gt;--env [ENV_FILE_PATH]&lt;/code&gt; - path to .env file used to store. &lt;code&gt;--disable [RULES_LIST]&lt;/code&gt; - comma separated list of rule ids to turn off. &lt;code&gt;--debug&lt;/code&gt; - toggle debug logs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Commands -&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;dockerfile&lt;/code&gt; - run Dockerfile analysis.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;-f [DOCKERFILE_PATH]&lt;/code&gt; - path to Dockerfile.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--base&lt;/code&gt; - enable base image analysis.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;image&lt;/code&gt; - run image analysis.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;--name [IMAGE_NAME]&lt;/code&gt; - image name.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Credentials&lt;/h3&gt; &#xA;&lt;p&gt;Provide Dockerhub credentials either via &lt;code&gt;DH_USERNAME&lt;/code&gt; / &lt;code&gt;DH_PASSWORD_OR_PAT&lt;/code&gt; env vars or &lt;code&gt;.env&lt;/code&gt; file. &lt;code&gt;DH_PASSWORD_OR_PAT&lt;/code&gt; accepts both a password or a personal access token (PAT).&lt;/p&gt; &#xA;&lt;p&gt;Provide GCR credentials via &lt;code&gt;GOOGLE_SERVICE_ACCOUNT_JSON&lt;/code&gt; env var or &lt;code&gt;.env&lt;/code&gt; file. It should contain the JSON key of your service account obtained from running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gcloud iam service-accounts keys create [FILENAME] --iam-account=[SERVICE_ACCOUNT_NAME]@[PROJECT_ID].iam.gserviceaccount.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Return values&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;0&lt;/code&gt; - Successful, now rules were matched.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1&lt;/code&gt; - Successful, found matches.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2&lt;/code&gt; - Failed, an unknown error occurred.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3&lt;/code&gt; - Failed at base image analysis.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Results are printed to the console as a &lt;code&gt;json&lt;/code&gt; list.&lt;/p&gt; &#xA;&lt;h3&gt;Running in CI/CD&lt;/h3&gt; &#xA;&lt;p&gt;For an example of how this tool can be leveraged to scan all Dockerfiles in your Github org, please see our attached &lt;a href=&#34;https://raw.githubusercontent.com/snyk/leaky-vessels-static-detector/main/gh_crawler&#34;&gt;Github Crawler&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;A Note on Noise&lt;/h3&gt; &#xA;&lt;p&gt;The rules to detect the &lt;code&gt;--mount&lt;/code&gt; related CVEs - CVE-2024-23651 and CVE-2024-23652, can be extremely noisy. When one of these rules matches, it essentially means that you&#39;re just using &lt;code&gt;RUN --mount=type=cache&lt;/code&gt; or &lt;code&gt;RUN --mount&lt;/code&gt; in general rather than an actual exploit attempt taking place resulting in a false-positive. The reason is that due to the complexity of the exploit, statically detecting these rules is not feasible. In case of high false-positive rates, we offer the &lt;code&gt;--disable&lt;/code&gt; arg to turn these off or try out our &lt;a href=&#34;https://github.com/snyk/leaky-vessels-runtime-detector&#34;&gt;dynamic detector&lt;/a&gt; for more accurate results.&lt;/p&gt; &#xA;&lt;h1&gt;Issues&lt;/h1&gt; &#xA;&lt;p&gt;For an updated list of bugs and issues see the project issues.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome. See &lt;a href=&#34;https://raw.githubusercontent.com/snyk/leaky-vessels-static-detector/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Leaky Vessels Static Detector is under the Apache 2.0 License. See &lt;a href=&#34;https://raw.githubusercontent.com/snyk/leaky-vessels-static-detector/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zaigie/palworld-server-tool</title>
    <updated>2024-02-04T01:31:58Z</updated>
    <id>tag:github.com,2024-02-04:/zaigie/palworld-server-tool</id>
    <link href="https://github.com/zaigie/palworld-server-tool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于Level.sav存档解析和RCON优雅地用可视化界面管理幻兽帕鲁专用服务器。/ Through parse Level.sav and RCON, visual interface management PalWorld dedicated server.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;幻兽帕鲁服务器管理工具&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;简体中文&lt;/strong&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.en.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 通过可视化界面及 REST 接口管理幻兽帕鲁专用服务器，基于 SAV 存档文件解析及 RCON 实现&lt;br&gt; 并且花了很漫长且枯燥的时间去做了国际化... &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/zaigie/palworld-server-tool?style=for-the-badge&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img alt=&#34;Go&#34; src=&#34;https://img.shields.io/badge/Go-00ADD8?style=for-the-badge&amp;amp;logo=go&amp;amp;logoColor=white&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img alt=&#34;Python&#34; src=&#34;https://img.shields.io/badge/Python-FFD43B?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=blue&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img alt=&#34;Vue&#34; src=&#34;https://img.shields.io/badge/Vue%20js-35495E?style=for-the-badge&amp;amp;logo=vuedotjs&amp;amp;logoColor=4FC08D&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-1.png&#34; alt=&#34;PC&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;目前移动端适配良好，可查看下面 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E5%8A%9F%E8%83%BD%E6%88%AA%E5%9B%BE&#34;&gt;功能截图&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;当然深色模式也安排得妥妥的～&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;基于 &lt;code&gt;Level.sav&lt;/code&gt; 存档文件解析实现的功能及路线图：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 完整玩家数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 玩家帕鲁数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 公会数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 玩家背包数据&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;基于官方提供的 RCON 命令（仅服务器可用的）实现功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 获取服务器信息&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 在线玩家列表&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 踢出/封禁玩家&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 游戏内广播&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 平滑关闭服务器并广播消息&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;本工具使用 bbolt 单文件存储，将 RCON 和 Level.sav 文件的数据通过定时任务获取并保存，提供简单的可视化界面和 REST 接口和便于管理与开发。&lt;/p&gt; &#xA;&lt;p&gt;由于维护开发人员较少，虽有心但力不足，欢迎各前端和后端甚至数据工程师来提交 PR！&lt;/p&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;解析 &lt;code&gt;Level.sav&lt;/code&gt; 存档的任务需要在短时间（&amp;lt;20s）耗费一定的系统内存（1GB~3GB），这部分内存会在执行完解析任务后释放，因此你至少需要确保你的服务器有充足的内存。&lt;/p&gt; &#xA; &lt;p&gt;若不满足条件仍需使用，提供了 &lt;code&gt;pst-agent&lt;/code&gt; 部署在游戏服务器，而将 &lt;code&gt;pst&lt;/code&gt; 部署在 PC 或者其它有足够内存执行解析任务的服务器。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.agent.md&#34;&gt;pst-agent 部署教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;在 k8s 集群内可以直接通过 kubectl api 复制同步 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E4%BB%8E-k8s-pod-%E5%90%8C%E6%AD%A5%E5%AD%98%E6%A1%A3&#34;&gt;从 k8s-pod 同步存档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;请在以下地址下载最新版可执行文件&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zaigie/palworld-server-tool/releases&#34;&gt;Github Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/jokerwho/palworld-server-tool/releases&#34;&gt;(国内) Gitee Releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docker 部署请参考 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#docker-%E9%83%A8%E7%BD%B2&#34;&gt;Docker 部署&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zaigie/palworld-server-tool/assets/17232619/7a861091-94ee-4efe-8274-15df261d50b4&#34;&gt;https://github.com/zaigie/palworld-server-tool/assets/17232619/7a861091-94ee-4efe-8274-15df261d50b4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;桌面端&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-2.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-4.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;移动端&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-m-1.png&#34; width=&#34;30%&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-m-2.png&#34; width=&#34;30%&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-m-3.png&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;如何开启私服 RCON&lt;/h2&gt; &#xA;&lt;p&gt;需要开启服务器的 RCON 功能，如果你的私服教程有写更好，没有的话，修改 &lt;code&gt;PalWorldSettings.ini&lt;/code&gt; 文件&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;也就是修改游戏内各种倍数、概率的那个文件&lt;/strong&gt;，里面最后的位置有如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;AdminPassword=...,...,RCONEnabled=true,RCONPort=25575&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/rcon.png&#34; alt=&#34;RCON&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;请&lt;strong&gt;先关闭服务器再作修改&lt;/strong&gt;，你需要设置一个 AdminPassword，然后将 &lt;code&gt;RCONEnabled&lt;/code&gt; 和 &lt;code&gt;RCONPort&lt;/code&gt; 填写如上，再重启服务器即可。&lt;/p&gt; &#xA;&lt;h2&gt;安装部署&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2&#34;&gt;文件部署&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#linux&#34;&gt;Linux&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.agent.md#linux&#34;&gt;pst-agent 部署&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#windows&#34;&gt;Windows&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.agent.md#windows&#34;&gt;pst-agent 部署&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#docker-%E9%83%A8%E7%BD%B2&#34;&gt;Docker 部署&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E5%8D%95%E4%BD%93%E9%83%A8%E7%BD%B2&#34;&gt;单体部署&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#agent-%E9%83%A8%E7%BD%B2&#34;&gt;Agent 部署&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E4%BB%8E-k8s-pod-%E5%90%8C%E6%AD%A5%E5%AD%98%E6%A1%A3&#34;&gt;从 k8s-pod 同步存档&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E4%BB%8E-docker-%E5%AE%B9%E5%99%A8%E5%90%8C%E6%AD%A5%E5%AD%98%E6%A1%A3&#34;&gt;从 docker 容器同步存档&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这里&lt;strong&gt;默认为将 pst 工具和游戏服务器放在同一台物理机上&lt;/strong&gt;，在一些情况下你可能不想要它们部署在同一机器上：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需要单独部署在其它服务器&lt;/li&gt; &#xA; &lt;li&gt;只需要部署在本地个人电脑&lt;/li&gt; &#xA; &lt;li&gt;游戏服务器性能较弱不满足，采用上述两种方案之一&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;请参考 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.agent.md&#34;&gt;pst-agent 部署教程&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;文件部署&lt;/h3&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;h5&gt;下载解压&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 下载 pst_{version}_{platform}_{arch}.tar.gz 文件并解压到 pst 目录&#xA;mkdir -p pst &amp;amp;&amp;amp; tar -xzf pst_v0.5.0_linux_x86_64.tar.gz -C pst&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;配置&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;打开目录并允许可执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd pst&#xA;chmod +x pst sav_cli&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;找到其中的 &lt;code&gt;config.yaml&lt;/code&gt; 文件并按照说明修改。&lt;/p&gt; &lt;p&gt;关于其中的 &lt;code&gt;decode_path&lt;/code&gt;，一般就是解压后的 pst 目录加上 &lt;code&gt;sav_cli&lt;/code&gt; ，如果不知道绝对路径，在终端执行 &lt;code&gt;pwd&lt;/code&gt; 即可&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;web: # web 相关配置&#xA;  password: &#34;&#34; # web 管理模式密码&#xA;  port: 8080 # web 服务端口&#xA;  tls: false # 是否开启 TLS&#xA;  cert_path: &#34;&#34; # Cert 文件路径&#xA;  key_path: &#34;&#34; # Key 文件路径&#xA;rcon: # RCON 相关配置&#xA;  address: &#34;127.0.0.1:25575&#34; # RCON 地址&#xA;  password: &#34;&#34; # 设置的 AdminPassword&#xA;  timeout: 5 # 请求 RCON 超时时间，推荐 &amp;lt;= 5&#xA;  sync_interval: 60 # 定时向 RCON 服务获取玩家在线情况的间隔，单位秒&#xA;save: # 存档文件解析相关配置&#xA;  path: &#34;/path/to/you/Level.sav&#34; # 存档文件路径&#xA;  decode_path: &#34;/path/to/your/sav_cli&#34; # 存档解析工具路径，一般和 pst 在同一目录&#xA;  sync_interval: 120 # 定时从存档获取数据的间隔，单位秒，推荐 &amp;gt;= 120&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;运行&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./pst&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:75 | Starting PalWorld Server Tool...&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:76 | Version: Develop&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:77 | Listening on http://127.0.0.1:8080 or http://192.168.1.66:8080&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:78 | Swagger on http://127.0.0.1:8080/swagger/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;若需要后台运行（关闭 ssh 窗口后仍运行）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 后台运行并将日志保存在 server.log&#xA;nohup ./pst &amp;gt; server.log 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;# 查看日志&#xA;tail -f server.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;关闭后台运行&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kill $(ps aux | grep &#39;pst&#39; | awk &#39;{print $2}&#39;) | head -n 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;访问&lt;/h5&gt; &#xA;&lt;p&gt;请通过浏览器访问 &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt; 或 http://{局域网 IP}:8080&lt;/p&gt; &#xA;&lt;p&gt;云服务器开放防火墙及安全组后也可以访问 http://{服务器 IP}:8080&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 初次打开会显示空白没有内容，请&lt;strong&gt;等待第一次 sav 存档同步完成&lt;/strong&gt;再访问&lt;/p&gt; &#xA; &lt;p&gt;如果你的服务器配置足够且性能良好，你可以试着将 &lt;code&gt;save.sync_interval&lt;/code&gt; 改短一点&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;h5&gt;下载解压&lt;/h5&gt; &#xA;&lt;p&gt;解压 &lt;code&gt;pst_v0.5.0_windows_x86_64.zip&lt;/code&gt; 到任意目录（推荐命名文件夹目录名称为 &lt;code&gt;pst&lt;/code&gt;）&lt;/p&gt; &#xA;&lt;h5&gt;配置&lt;/h5&gt; &#xA;&lt;p&gt;找到解压目录中的 &lt;code&gt;config.yaml&lt;/code&gt; 文件并按照说明修改。&lt;/p&gt; &#xA;&lt;p&gt;关于其中的 &lt;code&gt;decode_path&lt;/code&gt;，一般就是解压后的 pst 目录加上 &lt;code&gt;sav_cli.exe&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;你也可以直接鼠标右键——“属性”，查看路径和文件名，再将它们拼接起来。（存档文件路径和工具路径同理）&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/windows_path.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 请不要直接将复制的路径粘贴到 &lt;code&gt;config.yaml&lt;/code&gt; 中，而是需要在所有的 &#39;\&#39; 前面再加一个 &#39;\&#39;，像下面展示的一样&lt;/p&gt; &#xA; &lt;p&gt;还有比较重要的是，请确保 &lt;code&gt;config.yaml&lt;/code&gt; 文件为 &lt;strong&gt;ANSI 编码&lt;/strong&gt;，其它编码格式将会导致路径错误等问题！！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;web: # web 相关配置&#xA;  password: &#34;&#34; # web 管理模式密码&#xA;  port: 8080 # web 服务端口&#xA;  tls: false # 是否开启 TLS&#xA;  cert_path: &#34;&#34; # Cert 文件路径&#xA;  key_path: &#34;&#34; # Key 文件路径&#xA;rcon: # RCON 相关配置&#xA;  address: &#34;127.0.0.1:25575&#34; # RCON 地址&#xA;  password: &#34;&#34; # 设置的 AdminPassword&#xA;  timeout: 5 # 请求 RCON 超时时间，推荐 &amp;lt;= 5&#xA;  sync_interval: 60 # 定时向 RCON 服务获取玩家在线情况的间隔，单位秒&#xA;save: # 存档文件解析相关配置&#xA;  path: &#34;C:\\path\\to\\you\\Level.sav&#34; # 存档文件路径&#xA;  decode_path: &#34;C:\\path\\to\\your\\sav_cli.exe&#34; # 存档解析工具路径，一般和 pst 在同一目录&#xA;  sync_interval: 120 # 定时从存档获取数据的间隔，单位秒，推荐 &amp;gt;= 120&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;运行&lt;/h5&gt; &#xA;&lt;p&gt;这里有两种方式可以在 Windows 下运行&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;start.bat（推荐）&lt;/p&gt; &lt;p&gt;找到解压目录下的 &lt;code&gt;start.bat&lt;/code&gt; 文件，双击运行&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;按下 &lt;code&gt;Win + R&lt;/code&gt;，输入 &lt;code&gt;powershell&lt;/code&gt; 打开 Powershell，通过 &lt;code&gt;cd&lt;/code&gt; 命令到下载的可执行文件目录&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\pst.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:75 | Starting PalWorld Server Tool...&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:76 | Version: Develop&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:77 | Listening on http://127.0.0.1:8080 or http://192.168.31.214:8080&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:78 | Swagger on http://127.0.0.1:8080/swagger/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;看到上述界面表示成功运行，请保持窗口打开&lt;/p&gt; &#xA;&lt;h5&gt;访问&lt;/h5&gt; &#xA;&lt;p&gt;请通过浏览器访问 &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt; 或 http://{局域网 IP}:8080&lt;/p&gt; &#xA;&lt;p&gt;云服务器开放防火墙及安全组后也可以访问 http://{服务器 IP}:8080&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 初次打开会显示空白没有内容，请&lt;strong&gt;等待第一次 sav 存档同步完成&lt;/strong&gt;再访问&lt;/p&gt; &#xA; &lt;p&gt;如果你的服务器配置足够且性能良好，你可以试着将 &lt;code&gt;save.sync_interval&lt;/code&gt; 改短一点&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Docker 部署&lt;/h3&gt; &#xA;&lt;h4&gt;单体部署&lt;/h4&gt; &#xA;&lt;p&gt;只需要一个容器，将游戏存档目录映射至容器内，与游戏服务器在同一物理主机上运行。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name pst \&#xA;-p 8080:8080 \&#xA;-v /path/to/your/Pal/Saved/SaveGames/0/E8F71231A51246429C7CCCCD51320C22:/game \&#xA;-e WEB__PASSWORD=&#34;your password&#34; \&#xA;-e RCON__ADDRESS=&#34;172.17.0.1:25575&#34; \&#xA;-e RCON__PASSWORD=&#34;your password&#34; \&#xA;-e SAVE__PATH=&#34;/game/Level.sav&#34; \&#xA;-e SAVE__SYNC_INTERVAL=120 \&#xA;jokerwho/palworld-server-tool:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;最重要的是需要 -v 到游戏存档文件（Level.sav）所在目录，将其映射到容器内的 /game 目录&lt;/p&gt; &#xA;&lt;h5&gt;持久化&lt;/h5&gt; &#xA;&lt;p&gt;如果需要持久化 &lt;code&gt;pst.db&lt;/code&gt; 文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 先创建文件，避免被识别为目录&#xA;touch pst.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后在 &lt;code&gt;docker run -v&lt;/code&gt; 中增加 &lt;code&gt;-v ./pst.db:/app/pst.db&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;环境变量&lt;/h5&gt; &#xA;&lt;p&gt;设置各环境变量，与 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E9%85%8D%E7%BD%AE&#34;&gt;&lt;code&gt;config.yaml&lt;/code&gt;&lt;/a&gt; 基本相似，表格如下：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 注意区分单个和多个下划线，若需修改最好请复制下表变量名！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;变量名&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB__PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Web 界面的管理员模式密码&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB__PORT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8080&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;若非必要不建议修改，而是更改容器映射端口&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__ADDRESS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;127.0.0.1:25575&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON 服务对应的地址，可以用容器网络 172.17.0.1:25575&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;服务器配置文件中的 AdminPassword&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__TIMEOUT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;单个请求 RCON 服务的超时时间&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__SYNC_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;请求 RCON 服务器同步玩家在线数据的间隔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__PATH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;游戏存档所在路径 &lt;strong&gt;请务必填写为容器内的路径&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__DECODE_PATH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;/app/sav_cli&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;⚠️ 容器内置，禁止修改，会导致存档解析工具错误&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__SYNC_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;600&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;同步玩家存档数据的间隔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Agent 部署&lt;/h4&gt; &#xA;&lt;p&gt;需要两个容器，分别是 &lt;code&gt;palworld-server-tool&lt;/code&gt; 和 &lt;code&gt;palworld-server-tool-agent&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;适用于：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需要单独部署在其它服务器&lt;/li&gt; &#xA; &lt;li&gt;只需要部署在本地个人电脑&lt;/li&gt; &#xA; &lt;li&gt;游戏服务器性能较弱不满足，采用上述两种方案之一&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;先运行 agent 容器&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name pst-agent \&#xA;-p 8081:8081 \&#xA;-v /path/to/your/Pal/Saved/SaveGames/0/E8F71231A51246429C7CCCCD51320C22:/game \&#xA;-e SAV_FILE=&#34;/game/Level.sav&#34; \&#xA;jokerwho/palworld-server-tool-agent:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;需要 -v 到游戏存档文件（Level.sav）所在目录，将其映射到容器内的 /game 目录&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;变量名&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAV_FILE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;游戏存档所在路径 &lt;strong&gt;请务必填写为容器内的路径&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;再运行 pst 容器&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name pst \&#xA;-p 8080:8080 \&#xA;-e WEB__PASSWORD=&#34;your password&#34; \&#xA;-e RCON__ADDRESS=&#34;游戏服务器IP:25575&#34; \&#xA;-e RCON__PASSWORD=&#34;your password&#34; \&#xA;-e SAVE__PATH=&#34;http://游戏服务器IP:Agent端口/sync&#34; \&#xA;-e SAVE__SYNC_INTERVAL=120 \&#xA;jokerwho/palworld-server-tool:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;持久化&lt;/h5&gt; &#xA;&lt;p&gt;如果需要持久化 &lt;code&gt;pst.db&lt;/code&gt; 文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 先创建文件，避免被识别为目录&#xA;touch pst.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后在 &lt;code&gt;docker run -v&lt;/code&gt; 中增加 &lt;code&gt;-v ./pst.db:/app/pst.db&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;环境变量&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 注意区分单个和多个下划线，若需修改最好请复制下表变量名！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;变量名&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB__PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Web 界面的管理员模式密码&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB__PORT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8080&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;若非必要不建议修改，而是更改容器映射端口&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__ADDRESS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;127.0.0.1:25575&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON 服务对应的地址，一般为游戏服务器 IP:25575&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;服务器配置文件中的 AdminPassword&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__TIMEOUT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;单个请求 RCON 服务的超时时间&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__SYNC_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;请求 RCON 服务器同步玩家在线数据的间隔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__PATH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pst-agent 所在服务地址，格式为&lt;br&gt; http://{游戏服务器 IP}:{Agent 端口}/sync&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__DECODE_PATH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;/app/sav_cli&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;⚠️ 容器内置，禁止修改，会导致存档解析工具错误&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__SYNC_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;600&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;同步玩家存档数据的间隔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;从 k8s-pod 同步存档&lt;/h4&gt; &#xA;&lt;p&gt;从 v0.5.3 开始，支持无需 agent 同步集群内游戏服务器存档。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;请确保 pst 所使用的 serviceaccount 具有 &#34;pods/exec&#34; 权限！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;只需要更改 &lt;code&gt;SAVE__PATH&lt;/code&gt; 环境变量即可，格式如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SAVE__PATH=&#34;k8s://&amp;lt;namespace&amp;gt;/&amp;lt;podname&amp;gt;/&amp;lt;container&amp;gt;:&amp;lt;游戏存档目录&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;比如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SAVE__PATH=&#34;k8s://default/palworld-server-0/palworld-server:/palworld/Pal/Saved&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;由于游戏服务器创建 Level.sav 文件的时间、位置（包含 HASH）在初次都不确定，您只需要指向 Saved 目录级别即可，程序会自动扫描&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;当 pst 与游戏服务器在同一 namespace 下时，您可以省略它：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SAVE__PATH=&#34;k8s://palworld-server-0/palworld-server:/palworld/Pal/Saved&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;从 docker 容器同步存档&lt;/h3&gt; &#xA;&lt;p&gt;从 v0.5.3 开始，支持无需 agent 同步容器内游戏服务器存档（&lt;strong&gt;暂时只支持以文件部署方式部署的 pst&lt;/strong&gt;）&lt;/p&gt; &#xA;&lt;p&gt;只需要更改 &lt;code&gt;SAVE__PATH&lt;/code&gt; 环境变量即可，格式如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SAVE__PATH=&#34;docker://&amp;lt;container_name_or_id&amp;gt;:&amp;lt;游戏存档目录&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;比如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SAVE__PATH=&#34;docker://palworld-server:/palworld/Pal/Saved&#34;&#xA;#or&#xA;SAVE__PATH=&#34;docker://04b0a9af4288:/palworld/Pal/Saved&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;由于游戏服务器创建 Level.sav 文件的时间、位置（包含 HASH）在初次都不确定，您只需要指向 Saved 目录级别即可，程序会自动扫描&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;接口文档&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://q4ly3bfcop.apifox.cn/&#34;&gt;APIFox 在线接口文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cheahjs/palworld-save-tools&#34;&gt;palworld-save-tools&lt;/a&gt; 提供了存档解析工具实现&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/magicbear/palworld-server-toolkit&#34;&gt;palworld-server-toolkit&lt;/a&gt; 提供了存档高性能解析部份实现&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EternalWraith/PalEdit&#34;&gt;PalEdit&lt;/a&gt; 提供了最初的数据化思路及逻辑&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gorcon/rcon&#34;&gt;gorcon&lt;/a&gt; 提供的 RCON 请求/接收基础能力&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;许可证&lt;/h2&gt; &#xA;&lt;p&gt;根据 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/LICENSE&#34;&gt;Apache2.0 许可证&lt;/a&gt; 授权，任何转载请在 README 和文件部分标明！任何商用行为请务必告知！&lt;/p&gt;</summary>
  </entry>
</feed>