<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-17T01:34:02Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sibprogrammer/xq</title>
    <updated>2022-11-17T01:34:02Z</updated>
    <id>tag:github.com,2022-11-17:/sibprogrammer/xq</id>
    <link href="https://github.com/sibprogrammer/xq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Command-line XML and HTML beautifier and content extractor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;xq&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sibprogrammer/xq/actions&#34;&gt;&lt;img src=&#34;https://github.com/sibprogrammer/xq/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://formulae.brew.sh/formula/xq&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/xq.json&amp;amp;query=$.versions.stable&amp;amp;label=homebrew&#34; alt=&#34;Homebrew&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command-line XML and HTML beautifier and content extractor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sibprogrammer/xq/master/assets/images/screenshot.png?raw=true&#34; alt=&#34;xq&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Syntax highlighting&lt;/li&gt; &#xA; &lt;li&gt;Automatic indentation and formatting&lt;/li&gt; &#xA; &lt;li&gt;Automatic pagination&lt;/li&gt; &#xA; &lt;li&gt;Node content extraction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Format an XML file and highlight the syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;xq test/data/xml/unformatted.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;xq&lt;/code&gt; also accepts input through &lt;code&gt;stdin&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -s https://www.w3schools.com/xml/note.xml | xq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HTML content can be formatted and highlighted as well (using &lt;code&gt;-m&lt;/code&gt; flag):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;xq -m test/data/html/formatted.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is possible to extract the content using XPath query language. &lt;code&gt;-x&lt;/code&gt; parameter accepts XPath expression.&lt;/p&gt; &#xA;&lt;p&gt;Extract the text content of all nodes with &lt;code&gt;city&lt;/code&gt; name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cat test/data/xml/unformatted.xml | xq -x //city&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extract the value of attribute named &lt;code&gt;status&lt;/code&gt; and belonging to &lt;code&gt;user&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cat test/data/xml/unformatted.xml | xq -x /user/@status&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://en.wikipedia.org/wiki/XPath&#34;&gt;https://en.wikipedia.org/wiki/XPath&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;The preferable ways to install the utility are described below.&lt;/p&gt; &#xA;&lt;p&gt;For macOS, via &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install xq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For macOS, via &lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo port install xq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -sSL https://bit.ly/install-xq | sudo bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Fedora via package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dnf install xq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have Go toolchain installed, you can use the following command to install &lt;code&gt;xq&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install github.com/sibprogrammer/xq@latest&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>hashicorp/golang-lru</title>
    <updated>2022-11-17T01:34:02Z</updated>
    <id>tag:github.com,2022-11-17:/hashicorp/golang-lru</id>
    <link href="https://github.com/hashicorp/golang-lru" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Golang LRU cache&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;golang-lru&lt;/h1&gt; &#xA;&lt;p&gt;This provides the &lt;code&gt;lru&lt;/code&gt; package which implements a fixed-size thread safe LRU cache. It is based on the cache in Groupcache.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Full docs are available on &lt;a href=&#34;https://pkg.go.dev/github.com/hashicorp/golang-lru/v2&#34;&gt;Go Packages&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;p&gt;Using the LRU is very simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;l, _ := New(128)&#xA;for i := 0; i &amp;lt; 256; i++ {&#xA;    l.Add(i, nil)&#xA;}&#xA;if l.Len() != 128 {&#xA;    panic(fmt.Sprintf(&#34;bad len: %v&#34;, l.Len()))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>google/uuid</title>
    <updated>2022-11-17T01:34:02Z</updated>
    <id>tag:github.com,2022-11-17:/google/uuid</id>
    <link href="https://github.com/google/uuid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go package for UUIDs based on RFC 4122 and DCE 1.1: Authentication and Security Services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uuid &lt;img src=&#34;https://travis-ci.org/google/uuid.svg?branch=master&#34; alt=&#34;build status&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The uuid package generates and inspects UUIDs based on &lt;a href=&#34;http://tools.ietf.org/html/rfc4122&#34;&gt;RFC 4122&lt;/a&gt; and DCE 1.1: Authentication and Security Services.&lt;/p&gt; &#xA;&lt;p&gt;This package is based on the github.com/pborman/uuid package (previously named code.google.com/p/go-uuid). It differs from these earlier packages in that a UUID is a 16 byte array rather than a byte slice. One loss due to this change is the ability to represent an invalid UUID (vs a NIL UUID).&lt;/p&gt; &#xA;&lt;h6&gt;Install&lt;/h6&gt; &#xA;&lt;p&gt;&lt;code&gt;go get github.com/google/uuid&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Documentation&lt;/h6&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://godoc.org/github.com/google/uuid&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/google/uuid?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Full &lt;code&gt;go doc&lt;/code&gt; style documentation for the package can be viewed online without installing this package by using the GoDoc site here: &lt;a href=&#34;http://pkg.go.dev/github.com/google/uuid&#34;&gt;http://pkg.go.dev/github.com/google/uuid&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>