<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-11T01:31:25Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>github/gh-ost</title>
    <updated>2023-09-11T01:31:25Z</updated>
    <id>tag:github.com,2023-09-11:/github/gh-ost</id>
    <link href="https://github.com/github/gh-ost" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GitHub&#39;s Online Schema-migration Tool for MySQL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gh-ost&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/github/gh-ost/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/github/gh-ost/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;ci&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/github/gh-ost/actions/workflows/replica-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/github/gh-ost/actions/workflows/replica-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;replica-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/github/gh-ost/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/github/gh-ost/total.svg?sanitize=true&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/github/gh-ost/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/github/gh-ost.svg?sanitize=true&#34; alt=&#34;release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;GitHub&#39;s online schema migration for MySQL &lt;img src=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/images/gh-ost-logo-light-160.png&#34; align=&#34;right&#34;&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; is a triggerless online schema migration solution for MySQL. It is testable and provides pausability, dynamic control/reconfiguration, auditing, and many operational perks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; produces a light workload on the master throughout the migration, decoupled from the existing workload on the migrated table.&lt;/p&gt; &#xA;&lt;p&gt;It has been designed based on years of experience with existing solutions, and changes the paradigm of table migrations.&lt;/p&gt; &#xA;&lt;h2&gt;How?&lt;/h2&gt; &#xA;&lt;p&gt;All existing online-schema-change tools operate in similar manner: they create a &lt;em&gt;ghost&lt;/em&gt; table in the likeness of your original table, migrate that table while empty, slowly and incrementally copy data from your original table to the &lt;em&gt;ghost&lt;/em&gt; table, meanwhile propagating ongoing changes (any &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; applied to your table) to the &lt;em&gt;ghost&lt;/em&gt; table. Finally, at the right time, they replace your original table with the &lt;em&gt;ghost&lt;/em&gt; table.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; uses the same pattern. However it differs from all existing tools by not using triggers. We have recognized the triggers to be the source of &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/why-triggerless.md&#34;&gt;many limitations and risks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Instead, &lt;code&gt;gh-ost&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/triggerless-design.md&#34;&gt;uses the binary log stream&lt;/a&gt; to capture table changes, and asynchronously applies them onto the &lt;em&gt;ghost&lt;/em&gt; table. &lt;code&gt;gh-ost&lt;/code&gt; takes upon itself some tasks that other tools leave for the database to perform. As result, &lt;code&gt;gh-ost&lt;/code&gt; has greater control over the migration process; can truly suspend it; can truly decouple the migration&#39;s write load from the master&#39;s workload.&lt;/p&gt; &#xA;&lt;p&gt;In addition, it offers many &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/perks.md&#34;&gt;operational perks&lt;/a&gt; that make it safer, trustworthy and fun to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/images/gh-ost-general-flow.png&#34; alt=&#34;gh-ost general flow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build your trust in &lt;code&gt;gh-ost&lt;/code&gt; by testing it on replicas. &lt;code&gt;gh-ost&lt;/code&gt; will issue same flow as it would have on the master, to migrate a table on a replica, without actually replacing the original table, leaving the replica with two tables you can then compare and satisfy yourself that the tool operates correctly. This is how we continuously test &lt;code&gt;gh-ost&lt;/code&gt; in production.&lt;/li&gt; &#xA; &lt;li&gt;True pause: when &lt;code&gt;gh-ost&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/throttle.md&#34;&gt;throttles&lt;/a&gt;, it truly ceases writes on master: no row copies and no ongoing events processing. By throttling, you return your master to its original workload&lt;/li&gt; &#xA; &lt;li&gt;Dynamic control: you can &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/interactive-commands.md&#34;&gt;interactively&lt;/a&gt; reconfigure &lt;code&gt;gh-ost&lt;/code&gt;, even as migration still runs. You may forcibly initiate throttling.&lt;/li&gt; &#xA; &lt;li&gt;Auditing: you may query &lt;code&gt;gh-ost&lt;/code&gt; for status. &lt;code&gt;gh-ost&lt;/code&gt; listens on unix socket or TCP.&lt;/li&gt; &#xA; &lt;li&gt;Control over cut-over phase: &lt;code&gt;gh-ost&lt;/code&gt; can be instructed to postpone what is probably the most critical step: the swap of tables, until such time that you&#39;re comfortably available. No need to worry about ETA being outside office hours.&lt;/li&gt; &#xA; &lt;li&gt;External &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/hooks.md&#34;&gt;hooks&lt;/a&gt; can couple &lt;code&gt;gh-ost&lt;/code&gt; with your particular environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc&#34;&gt;docs&lt;/a&gt; for more information. No, really, read the &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt; has it all. You may be interested in invoking &lt;code&gt;gh-ost&lt;/code&gt; in various modes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a &lt;em&gt;noop&lt;/em&gt; migration (merely testing that the migration is valid and good to go)&lt;/li&gt; &#xA; &lt;li&gt;a real migration, utilizing a replica (the migration runs on the master; &lt;code&gt;gh-ost&lt;/code&gt; figures out identities of servers involved. Required mode if your master uses Statement Based Replication)&lt;/li&gt; &#xA; &lt;li&gt;a real migration, run directly on the master (but &lt;code&gt;gh-ost&lt;/code&gt; prefers the former)&lt;/li&gt; &#xA; &lt;li&gt;a real migration on a replica (master untouched)&lt;/li&gt; &#xA; &lt;li&gt;a test migration on a replica, the way for you to build trust with &lt;code&gt;gh-ost&lt;/code&gt;&#39;s operation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Our tips:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/testing-on-replica.md&#34;&gt;Testing above all&lt;/a&gt;, try out &lt;code&gt;--test-on-replica&lt;/code&gt; first few times. Better yet, make it continuous. We have multiple replicas where we iterate our entire fleet of production tables, migrating them one by one, checksumming the results, verifying migration is good.&lt;/li&gt; &#xA; &lt;li&gt;For each master migration, first issue a &lt;em&gt;noop&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Then issue the real thing via &lt;code&gt;--execute&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More tips:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;--exact-rowcount&lt;/code&gt; for accurate progress indication&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;--postpone-cut-over-flag-file&lt;/code&gt; to gain control over cut-over timing&lt;/li&gt; &#xA; &lt;li&gt;Get familiar with the &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/interactive-commands.md&#34;&gt;interactive commands&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/requirements-and-limitations.md&#34;&gt;requirements and limitations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/questions.md&#34;&gt;common questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/what-if.md&#34;&gt;what if?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/the-fine-print.md&#34;&gt;the fine print&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/gh-ost/issues?q=label%3Aquestion&#34;&gt;Community questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/rds.md&#34;&gt;Using &lt;code&gt;gh-ost&lt;/code&gt; on AWS RDS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/azure.md&#34;&gt;Using &lt;code&gt;gh-ost&lt;/code&gt; on Azure Database for MySQL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What&#39;s in a name?&lt;/h2&gt; &#xA;&lt;p&gt;Originally this was named &lt;code&gt;gh-osc&lt;/code&gt;: GitHub Online Schema Change, in the likes of &lt;a href=&#34;https://www.facebook.com/notes/mysql-at-facebook/online-schema-change-for-mysql/430801045932/&#34;&gt;Facebook online schema change&lt;/a&gt; and &lt;a href=&#34;https://www.percona.com/doc/percona-toolkit/2.2/pt-online-schema-change.html&#34;&gt;pt-online-schema-change&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;But then a rare genetic mutation happened, and the &lt;code&gt;c&lt;/code&gt; transformed into &lt;code&gt;t&lt;/code&gt;. And that sent us down the path of trying to figure out a new acronym. &lt;code&gt;gh-ost&lt;/code&gt; (pronounce: &lt;em&gt;Ghost&lt;/em&gt;), stands for GitHub&#39;s Online Schema Transmogrifier/Translator/Transformer/Transfigurator&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; is licensed under the &lt;a href=&#34;https://github.com/github/gh-ost/raw/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; uses 3rd party libraries, each with their own license. These are found &lt;a href=&#34;https://github.com/github/gh-ost/tree/master/vendor&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; is released at a stable state, but with mileage to go. We are &lt;a href=&#34;https://github.com/github/gh-ost/raw/master/.github/CONTRIBUTING.md&#34;&gt;open to pull requests&lt;/a&gt;. Please first discuss your intentions via &lt;a href=&#34;https://github.com/github/gh-ost/issues&#34;&gt;Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We develop &lt;code&gt;gh-ost&lt;/code&gt; at GitHub and for the community. We may have different priorities than others. From time to time we may suggest a contribution that is not on our immediate roadmap but which may appeal to others.&lt;/p&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/github/gh-ost/master/doc/coding-ghost.md&#34;&gt;Coding gh-ost&lt;/a&gt; for a guide to getting started developing with gh-ost.&lt;/p&gt; &#xA;&lt;h2&gt;Download/binaries/source&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; is now GA and stable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; is available in binary format for Linux and Mac OS/X&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/github/gh-ost/releases/latest&#34;&gt;Download latest release here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; is a Go project; it is built with Go &lt;code&gt;1.15&lt;/code&gt; and above. To build on your own, use either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/gh-ost/raw/master/script/build&#34;&gt;script/build&lt;/a&gt; - this is the same build script used by CI hence the authoritative; artifact is &lt;code&gt;./bin/gh-ost&lt;/code&gt; binary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/gh-ost/raw/master/build.sh&#34;&gt;build.sh&lt;/a&gt; for building &lt;code&gt;tar.gz&lt;/code&gt; artifacts in &lt;code&gt;/tmp/gh-ost&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Generally speaking, &lt;code&gt;master&lt;/code&gt; branch is stable, but only &lt;a href=&#34;https://github.com/github/gh-ost/releases&#34;&gt;releases&lt;/a&gt; are to be used in production.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; is designed, authored, reviewed and tested by the database infrastructure team at GitHub:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonahberquist&#34;&gt;@jonahberquist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggunson&#34;&gt;@ggunson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomkrouper&#34;&gt;@tomkrouper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shlomi-noach&#34;&gt;@shlomi-noach&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jessbreckenridge&#34;&gt;@jessbreckenridge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gtowey&#34;&gt;@gtowey&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvaillancourt&#34;&gt;@timvaillancourt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>keybase/client</title>
    <updated>2023-09-11T01:31:25Z</updated>
    <id>tag:github.com,2023-09-11:/keybase/client</id>
    <link href="https://github.com/keybase/client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Keybase Go Library, Client, Service, OS X, iOS, Android, Electron&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Keybase &lt;a href=&#34;https://travis-ci.org/keybase/client&#34;&gt;&lt;img src=&#34;https://travis-ci.com/keybase/client.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/keybase/client-x5qrt/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/90mxorxtj6vixnum/branch/master?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Hi, and welcome to the Keybase client repo. All our client apps (macOS, Windows, Linux, iOS, and Android) are being actively developed in this repository. Please, dig around.&lt;/p&gt; &#xA;&lt;h3&gt;Warnings&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;d love you to read our source code.&lt;/p&gt; &#xA;&lt;p&gt;But - some of the things in this repo are explorations, and the app you build from source just &lt;em&gt;might not do what it says it&#39;s doing&lt;/em&gt;. So, if you just want to install Keybase on your computer, you should &lt;strong&gt;&lt;a href=&#34;https://keybase.io/download&#34;&gt;monitor our releases&lt;/a&gt;&lt;/strong&gt; for macOS, Linux, or Windows.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re interested in our Docker image releases, please check out &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keybase/client/master/packaging/linux/docker/README.md&#34;&gt;the Docker README&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://keybase.io/images/github/repo_share.png?&#34; alt=&#34;Sharing&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Code Layout&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;go&lt;/strong&gt;: Core crypto libraries; the Keybase service; the command line client. &lt;a href=&#34;https://raw.githubusercontent.com/keybase/client/master/go/README.md&#34;&gt;Learn More&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;shared/{android,ios}&lt;/strong&gt;: Android and iOS apps developed with &lt;a href=&#34;https://facebook.github.io/react-native/&#34;&gt;React Native&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;shared/desktop&lt;/strong&gt;: Desktop application for macOS, Linux, and Windows, made with the &lt;a href=&#34;https://github.com/atom/electron&#34;&gt;Electron&lt;/a&gt; framework, sharing React code with react-native.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;packaging&lt;/strong&gt;: Scripts for releasing packages across the various platforms.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt;: Defines the protocol for communication for clients to the Keybase services. Uses &lt;a href=&#34;http://avro.apache.org/docs/1.7.7/&#34;&gt;Avro&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/keybase/client/master/protocol/README.md&#34;&gt;Learn More&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;media&lt;/strong&gt;: Icons, graphics, media for Keybase apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;osx&lt;/strong&gt;: The macOS Keybase.app, development parallel to an Electron-based application above. &lt;a href=&#34;https://raw.githubusercontent.com/keybase/client/master/osx/README.md&#34;&gt;Learn More&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Problems?&lt;/h3&gt; &#xA;&lt;p&gt;Report any issues with client software on this GitHub &lt;a href=&#34;https://github.com/keybase/client/issues&#34;&gt;issue tracker&lt;/a&gt;. Internally, we track our progress using Jira, but all PRs come through GitHub for your review!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re having problems with the command line &lt;code&gt;keybase&lt;/code&gt; client, take a look at &lt;a href=&#34;https://raw.githubusercontent.com/keybase/client/master/go/doc/troubleshooting.md&#34;&gt;the troubleshooting doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re having problems with our Website, try the &lt;a href=&#34;https://github.com/keybase/keybase-issues&#34;&gt;keybase-issues&lt;/a&gt; issue tracker.&lt;/p&gt; &#xA;&lt;p&gt;We check and update both frequently.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Most code is released under the New BSD (3 Clause) License. If subdirectories include a different license, that license applies instead.&lt;/p&gt; &#xA;&lt;h3&gt;Development Guidelines&lt;/h3&gt; &#xA;&lt;p&gt;We check all git commits with pre-commit hooks generated via &lt;a href=&#34;http://pre-commit.com&#34;&gt;pre-commit.com&lt;/a&gt; pre-commit hooks. To enable use of these pre-commit hooks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://pre-commit.com/#install&#34;&gt;Install&lt;/a&gt; the &lt;code&gt;pre-commit&lt;/code&gt; utility. For some common cases: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;pip install pre-commit&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;brew install pre-commit&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Remove any existing pre-commit hooks via &lt;code&gt;rm .git/hooks/pre-commit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure via &lt;code&gt;pre-commit install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then proceed as normal.&lt;/p&gt; &#xA;&lt;h4&gt;External Contributors&lt;/h4&gt; &#xA;&lt;p&gt;If you forked this repository on GitHub and made a PR, then it&#39;ll show up as having failed Jenkins CI. We do not build external PRs because it&#39;s a security risk to do so without a review first. If your PR is successfully reviewed by a member of the Keybase team, then we will merge your commits to a branch on our primary fork and build from there.&lt;/p&gt; &#xA;&lt;h3&gt;Cryptography Notice&lt;/h3&gt; &#xA;&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country&#39;s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&#34;http://www.wassenaar.org/&#34;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>deepfence/PacketStreamer</title>
    <updated>2023-09-11T01:31:25Z</updated>
    <id>tag:github.com,2023-09-11:/deepfence/PacketStreamer</id>
    <link href="https://github.com/deepfence/PacketStreamer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⭐ ⭐ Distributed tcpdump for cloud native environments ⭐ ⭐&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://docs.deepfence.io/packetstreamer&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-read-green&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/deepfence/PacketStreamer/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/deepfence/PacketStreamer&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/deepfence/PacketStreamer/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/deepfence/PacketStreamer&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/deepfence/PacketStreamer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/hacktoberfest/2022/deepfence/PacketStreamer&#34; alt=&#34;Hacktoberfest&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/deepfence/PacketStreamer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/deepfence/PacketStreamer&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/deepfence-community/shared_invite/zt-podmzle9-5X~qYx8wMaLt9bGWwkSdgQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@deepfence-blue.svg?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;PacketStreamer&lt;/h1&gt; &#xA;&lt;p&gt;Deepfence PacketStreamer is a high-performance remote packet capture and collection tool. It is used by Deepfence&#39;s &lt;a href=&#34;https://deepfence.io/threatstryker/&#34;&gt;ThreatStryker&lt;/a&gt; security observability platform to gather network traffic on demand from cloud workloads for forensic analysis.&lt;/p&gt; &#xA;&lt;p&gt;Primary design goals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stay light, capture and stream, no additional processing&lt;/li&gt; &#xA; &lt;li&gt;Portability, works across &lt;strong&gt;virtual machines, Kubernetes and AWS Fargate&lt;/strong&gt;. Linux and Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;PacketStreamer &lt;strong&gt;sensors&lt;/strong&gt; are started on the target servers. Sensors capture traffic, apply filters, and then stream the traffic to a central reciever. Traffic streams may be compressed and/or encrypted using TLS.&lt;/p&gt; &#xA;&lt;p&gt;The PacketStreamer &lt;strong&gt;receiver&lt;/strong&gt; accepts PacketStreamer streams from multiple remote sensors, and writes the packets to a local &lt;code&gt;pcap&lt;/code&gt; capture file&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepfence/PacketStreamer/main/images/readme/packetstreamer.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;PacketStreamer sensors collect raw network packets on remote hosts. It selects packets to capture using a BPF filter, and forwards them to a central reciever process where they are written in pcap format. Sensors are very lightweight and impose little performance impact on the remote hosts. PacketStreamer sensors can be run on bare-metal servers, on Docker hosts, and on Kubernetes nodes.&lt;/p&gt; &#xA;&lt;p&gt;The PacketStreamer receiver accepts network traffic from multiple sensors, collecting it into a single, central &lt;code&gt;pcap&lt;/code&gt; file. You can then process the pcap file or live feed the traffic to the tooling of your choice, such as &lt;code&gt;Zeek&lt;/code&gt;, &lt;code&gt;Wireshark&lt;/code&gt; &lt;code&gt;Suricata&lt;/code&gt;, or as a live stream for Machine Learning models.&lt;/p&gt; &#xA;&lt;h2&gt;When to use PacketStreamer&lt;/h2&gt; &#xA;&lt;p&gt;PacketStreamer meets more general use cases than existing alternatives. For example , Use PacketStreamer if you need a lightweight, efficient method to collect raw network data from multiple machines for central logging and analysis.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepfence/PacketStreamer/main/docs/docs/packetstreamer/img/packetstreamer.svg?sanitize=true&#34; alt=&#34;PacketStreamer QuickStart&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For full instructions, refer to the &lt;a href=&#34;https://docs.deepfence.io/packetstreamer/&#34;&gt;PacketStreamer Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will need to install the golang toolchain and &lt;code&gt;libpcap-dev&lt;/code&gt; before building PacketStreamer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Pre-requisites (Ubuntu): sudo apt install golang-go libpcap-dev&#xA;git clone https://github.com/deepfence/PacketStreamer.git&#xA;cd PacketStreamer/&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run a PacketStreamer receiver, listening on port &lt;strong&gt;8081&lt;/strong&gt; and writing pcap output to &lt;strong&gt;/tmp/dump_file&lt;/strong&gt; (see &lt;a href=&#34;https://raw.githubusercontent.com/deepfence/PacketStreamer/main/contrib/config/receiver.yaml&#34;&gt;receiver.yaml&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./packetstreamer receiver --config ./contrib/config/receiver.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run one or more PacketStreamer sensors on local and remote hosts. Edit the &lt;strong&gt;server address&lt;/strong&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/deepfence/PacketStreamer/main/contrib/config/sensor-local.yaml&#34;&gt;sensor.yaml&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# run on the target hosts to capture and forward traffic&#xA;&#xA;# copy and edit the sample sensor-local.yaml file, and add the address of the receiver host&#xA;cp ./contrib/config/sensor-local.yaml ./contrib/config/sensor.yaml&#xA;&#xA;./packetstreamer sensor --config ./contrib/config/sensor.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Who uses PacketStreamer?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deepfence &lt;a href=&#34;https://deepfence.io/threatstryker/&#34;&gt;ThreatStryker&lt;/a&gt; uses PacketStreamer to capture traffic from production platforms for forensics and anomaly detection.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get in touch&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for using PacketStreamer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.deepfence.io/packetstreamer/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-read-green&#34;&gt;&lt;/a&gt; Start with the documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/deepfence-community/shared_invite/zt-podmzle9-5X~qYx8wMaLt9bGWwkSdgQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@deepfence-blue.svg?logo=slack&#34;&gt;&lt;/a&gt; Got a question, need some help? Find the Deepfence team on Slack&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/deepfence/PacketStreamer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/deepfence/PacketStreamer&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; Got a feature request or found a bug? Raise an issue&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/deepfence/PacketStreamer/main/SECURITY.md&#34;&gt;productsecurity &lt;em&gt;at&lt;/em&gt; deepfence &lt;em&gt;dot&lt;/em&gt; io&lt;/a&gt;: Found a security issue? Share it in confidence&lt;/li&gt; &#xA; &lt;li&gt;Find out more at &lt;a href=&#34;https://deepfence.io/&#34;&gt;deepfence.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security and Support&lt;/h2&gt; &#xA;&lt;p&gt;For any security-related issues in the PacketStreamer project, contact &lt;a href=&#34;https://raw.githubusercontent.com/deepfence/PacketStreamer/main/SECURITY.md&#34;&gt;productsecurity &lt;em&gt;at&lt;/em&gt; deepfence &lt;em&gt;dot&lt;/em&gt; io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please file GitHub issues as needed, and join the Deepfence Community &lt;a href=&#34;https://join.slack.com/t/deepfence-community/shared_invite/zt-podmzle9-5X~qYx8wMaLt9bGWwkSdgQ&#34;&gt;Slack channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Deepfence PacketStreamer project (this repository) is offered under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache2 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/deepfence/PacketStreamer/main/CONTRIBUTING.md&#34;&gt;Contributions&lt;/a&gt; to Deepfence PacketStreamer project are similarly accepted under the Apache2 license, as per &lt;a href=&#34;https://docs.github.com/en/github/site-policy/github-terms-of-service#6-contributions-under-repository-license&#34;&gt;GitHub&#39;s inbound=outbound policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>