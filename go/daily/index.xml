<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-24T01:44:26Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cloudwego/hertz</title>
    <updated>2022-06-24T01:44:26Z</updated>
    <id>tag:github.com,2022-06-24:/cloudwego/hertz</id>
    <link href="https://github.com/cloudwego/hertz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high-performance and strong-extensibility Go HTTP framework that helps developers build microservices.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hertz&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/cloudwego/hertz/develop/README_cn.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cloudwego/hertz/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/cloudwego/hertz&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cloudwego.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?up_message=cloudwego&amp;amp;url=https%3A%2F%2Fwww.cloudwego.io%2F&#34; alt=&#34;WebSite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cloudwego/hertz/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/cloudwego/hertz&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/cloudwego/hertz&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/cloudwego/hertz&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cloudwego/hertz/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/cloudwego/hertz&#34; alt=&#34;OpenIssue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cloudwego/hertz/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/cloudwego/hertz&#34; alt=&#34;ClosedIssue&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/cloudwego/hertz&#34; alt=&#34;Stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/cloudwego/hertz&#34; alt=&#34;Forks&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hertz [həːts] is a high-usability, high-performance and high-extensibility Golang HTTP framework that helps developers build microservices. It was designed with reference to other open-source frameworks like &lt;a href=&#34;https://github.com/valyala/fasthttp&#34;&gt;fasthttp&lt;/a&gt;, &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;gin&lt;/a&gt;, &lt;a href=&#34;https://github.com/labstack/echo&#34;&gt;echo&lt;/a&gt; and combined with the internal requirements in ByteDance. At present, it has been widely used inside ByteDance. Nowadays, more and more microservices use Golang. If you have requirements for microservice performance and hope that the framework can fully meet the internal customizable requirements, Hertz will be a good choice.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;High usability&lt;/p&gt; &lt;p&gt;During the development process, it is often more important to write the correct code quickly. Therefore, in the iterative process of Hertz, we actively listen to users&#39; opinions and continue to polish the framework, hoping to provide users with a better user experience and help users write correct code faster.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;High performance&lt;/p&gt; &lt;p&gt;Hertz uses the self-developed high-performance network library Netpoll by default. In some special scenarios, compared to Go Net, Hertz has certain advantages in QPS and time delay. For performance data, please refer to the Echo data in the figure below. &lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/hertz/develop/images/performance.png&#34; alt=&#34;Performance&#34;&gt; For detailed performance data, please refer to &lt;a href=&#34;https://github.com/cloudwego/hertz-benchmark&#34;&gt;hertz-benchmark&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;High extensibility&lt;/p&gt; &lt;p&gt;Hertz adopts a layered design, providing more interfaces and default extension implementations. Users can also extend by themselves. At the same time, thanks to the layered design of the framework, the extensibility of the framework will be much greater. At present, only stable capabilities are open-sourced to the community. More planning refers to &lt;a href=&#34;https://raw.githubusercontent.com/cloudwego/hertz/develop/ROADMAP.md&#34;&gt;RoadMap&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Multi-protocol support&lt;/p&gt; &lt;p&gt;The Hertz framework provides HTTP1.1, ALPN protocol support natively. In addition, due to the layered design, Hertz even supports custom build protocol resolution logic to meet any needs of protocol layer extensions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Network layer switching capability&lt;/p&gt; &lt;p&gt;Hertz implements the function to switch between Netpoll and Go Net on demand. Users can choose the appropriate network library for different scenarios. And Hertz also supports the extension of network library in the form of plug-ins.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.cloudwego.io/docs/hertz/getting-started/&#34;&gt;Getting Started&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;The Hertz-Examples repository provides code out of the box. &lt;a href=&#34;https://www.cloudwego.io/zh/docs/hertz/tutorials/example/&#34;&gt;more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Basic Features&lt;/h3&gt; &#xA;&lt;p&gt;Contains introduction and use of general middleware, context selection, data binding, data rendering, direct access, logging, error handling. &lt;a href=&#34;https://www.cloudwego.io/zh/docs/hertz/tutorials/basic-feature/&#34;&gt;more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Service Governance&lt;/h3&gt; &#xA;&lt;p&gt;Contains tracer monitor. &lt;a href=&#34;https://www.cloudwego.io/zh/docs/hertz/tutorials/service-governance/&#34;&gt;more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Framework Extension&lt;/h3&gt; &#xA;&lt;p&gt;Contains network library extensions. &lt;a href=&#34;https://www.cloudwego.io/zh/docs/hertz/tutorials/framework-exten/&#34;&gt;more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Reference&lt;/h3&gt; &#xA;&lt;p&gt;Apidoc, framework configurable items list. &lt;a href=&#34;https://www.cloudwego.io/zh/docs/hertz/reference/&#34;&gt;more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;p&gt;Frequently Asked Questions. &lt;a href=&#34;https://www.cloudwego.io/zh/docs/hertz/faq/&#34;&gt;more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Performance testing can only provide a relative reference. In production, there are many factors that can affect actual performance. We provide the hertz-benchmark project to track and compare the performance of Hertz and other frameworks in different situations for reference.&lt;/p&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudwego/netpoll&#34;&gt;Netpoll&lt;/a&gt;: A high-performance network library. Hertz integrated by default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hertz-contrib&#34;&gt;Hertz-Contrib&lt;/a&gt;: A partial extension library of Hertz, which users can integrate into Hertz through options according to their needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudwego/hertz-examples&#34;&gt;Example&lt;/a&gt;: Use examples of Hertz.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Blogs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cloudwego.io/blog/2021/10/09/bytedance-practices-on-go-network-library/&#34;&gt;ByteDance Practice on Go Network Library&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cloudwego/hertz/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;RoadMap&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudwego/hertz/develop/ROADMAP.md&#34;&gt;Hertz RoadMap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Hertz is distributed under the &lt;a href=&#34;https://github.com/cloudwego/hertz/raw/main/LICENSE&#34;&gt;Apache License, version 2.0&lt;/a&gt;. The licenses of third party dependencies of Hertz are explained &lt;a href=&#34;https://github.com/cloudwego/hertz/raw/main/licenses&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email: &lt;a href=&#34;https://raw.githubusercontent.com/cloudwego/hertz/develop/conduct@cloudwego.io&#34;&gt;conduct@cloudwego.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How to become a member: &lt;a href=&#34;https://github.com/cloudwego/community/raw/main/COMMUNITY_MEMBERSHIP.md&#34;&gt;COMMUNITY MEMBERSHIP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues: &lt;a href=&#34;https://github.com/cloudwego/hertz/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lark: Scan the QR code below with &lt;a href=&#34;https://www.larksuite.com/zh_cn/download&#34;&gt;Lark&lt;/a&gt; to join our CloudWeGo/hertz user group.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/hertz/develop/images/lark_group.png&#34; alt=&#34;LarkGroup&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WeChat: CloudWeGo community WeChat group.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudwego/hertz/develop/images/wechat_group_cn.png&#34; alt=&#34;WechatGroup&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Landscapes&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://landscape.cncf.io/images/left-logo.svg?sanitize=true&#34; width=&#34;150&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://landscape.cncf.io/images/right-logo.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &lt;br&gt;&lt;br&gt; CloudWeGo enriches the &lt;a href=&#34;https://landscape.cncf.io/&#34;&gt;CNCF CLOUD NATIVE Landscape&lt;/a&gt;. &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jiro4989/ojosama</title>
    <updated>2022-06-24T01:44:26Z</updated>
    <id>tag:github.com,2022-06-24:/jiro4989/ojosama</id>
    <link href="https://github.com/jiro4989/ojosama" rel="alternate"></link>
    <summary type="html">&lt;p&gt;テキストを壱百満天原サロメお嬢様風の口調に変換します&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ojosama&lt;/h1&gt; &#xA;&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt; &#xA; &lt;div id=&#34;toctitle&#34;&gt;&#xA;  Table of Contents&#xA; &lt;/div&gt; &#xA; &lt;ul class=&#34;sectlevel1&#34;&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;#_概要&#34;&gt;1. 概要&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;#_壱百満天原サロメお嬢様について&#34;&gt;2. 壱百満天原サロメお嬢様について&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;#_使い方&#34;&gt;3. 使い方&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jiro4989/ojosama/main/#_web&#34;&gt;3.1. Web&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;#_コマンド&#34;&gt;3.2. コマンド&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;#_ライブラリ&#34;&gt;3.3. ライブラリ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;#_インストール&#34;&gt;4. インストール&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;#_注意事項&#34;&gt;5. 注意事項&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;#_変換結果について&#34;&gt;5.1. 変換結果について&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;#_プログラムの使用について&#34;&gt;5.2. プログラムの使用について&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;#_既知のバグ&#34;&gt;6. 既知のバグ&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;#_派生プロジェクト&#34;&gt;7. 派生プロジェクト&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;#_開発者向け&#34;&gt;8. 開発者向け&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;#_開発環境&#34;&gt;8.1. 開発環境&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;#_ビルド&#34;&gt;8.2. ビルド&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;#_リリース&#34;&gt;8.3. リリース&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/div&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/jiro4989/ojosama/actions&#34;&gt;&lt;img src=&#34;https://github.com/jiro4989/ojosama/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;test&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://codecov.io/gh/jiro4989/ojosama&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/jiro4989/ojosama/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;テキストを壱百満天原サロメお嬢様風の口調に変換して出力します。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jiro4989/ojosama/main/docs/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_概要&#34;&gt;1. 概要&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;任意のテキストを壱百満天原サロメお嬢様風の口調風に変換する非公式プログラムです。 コマンドラインとライブラリの2つの方法で使えます。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;壱百満天原サロメお嬢様風の口調変換の例を以下に示します。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt; &#xA;   &lt;colgroup&gt; &#xA;    &lt;col style=&#34;width: 50%;&#34;&gt; &#xA;    &lt;col style=&#34;width: 50%;&#34;&gt; &#xA;   &lt;/colgroup&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;変換前&lt;/th&gt; &#xA;     &lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;変換後&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;〇〇をプレイする&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;〇〇をプレイいたしますわ&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;ビデオテープはどこで使うんですか&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;おビデオテープはどちらで使うんですの&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;汚いです！&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;きったねぇですわ～～！！！&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;わたしも使ってました&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;わたくしも使っておりましたわ&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;文の区切れ目や、文の変換結果の終端で「わ！」あるいは「わ？」で終わる場合は、 ランダムで「～」と「！」または「？」を追加します。 「～」「！」「？」の数は0～3個のいずれかになります。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt; &#xA;   &lt;colgroup&gt; &#xA;    &lt;col style=&#34;width: 50%;&#34;&gt; &#xA;    &lt;col style=&#34;width: 50%;&#34;&gt; &#xA;   &lt;/colgroup&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;変換前&lt;/th&gt; &#xA;     &lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;変換後&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;ハーブです！&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;おハーブですわ～～！！！&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;ハーブです？&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;おハーブですわ～～？？？&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;変換では、単語の品詞や読み、特定の単語の前後にある単語、 特定の単語の連続などの変換ルールを順番に評価して変換しています。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;文章に対して形態素解析を行っており、 形態素解析ライブラリの &lt;a href=&#34;https://github.com/ikawaha/kagome&#34;&gt;kagome&lt;/a&gt; を使用しています。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_壱百満天原サロメお嬢様について&#34;&gt;2. 壱百満天原サロメお嬢様について&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;本当のお嬢様に憧れる一般女性です。 麗しいお姿と独特な言葉選びと高貴なお声 が魅力的な圧倒的お嬢様です。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;毎回約1時間前後の枠で配信するスタイルなので、翌日が仕事の人にも視聴しやすいです。 また、配信冒頭に前回のあらすじを話してくださるため、 途中から配信を見始めた方も内容についていけるように配慮してくださっています。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;サロメイトにも、そうでない方にも等しく配慮をしてくださる高貴なお嬢様であるため ぜひ、まだ配信を見たことの無い方も配信を視聴してみてください。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;詳細は以下リンクをご参照ください。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.nijisanji.jp/members/salome-hyakumantenbara&#34;&gt;壱百満天原サロメ - にじさんじ公式サイト&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://twitter.com/1000000lome&#34;&gt;壱百満天原サロメ - Twitter&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCgIfLpQvelloDi8I0Ycbwpg&#34;&gt;壱百満天原サロメ / Hyakumantenbara Salome - Youtube&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_使い方&#34;&gt;3. 使い方&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_web&#34;&gt;3.1. Web&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Web版提供してます。特にツールのインストールは不要です。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://ojosama.herokuapp.com&#34; class=&#34;bare&#34;&gt;https://ojosama.herokuapp.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Web版のソースコードは以下です。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jiro4989/ojosama-web&#34; class=&#34;bare&#34;&gt;https://github.com/jiro4989/ojosama-web&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_コマンド&#34;&gt;3.2. コマンド&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;ワンライナーでテキストを変換する場合は、以下のように実行します。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ojosama -t ハーブがありました！&#xA;おハーブがありましたわ～！！&#xA;&#xA;# 標準入力&#xA;$ echo ハーブがありました！ | ojosama&#xA;おハーブがありましたわ～！！&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;テキストファイルをまるごと変換する場合は、以下のように実行します。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ojosama README.adoc&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;ファイルの文字コードを指定する場合は &lt;code&gt;-charcode&lt;/code&gt; オプションを指定します。 現状 &lt;code&gt;sjis&lt;/code&gt; と &lt;code&gt;utf8&lt;/code&gt; のみサポートしています。（デフォルトでは &lt;code&gt;utf8&lt;/code&gt;）&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ojosama -charcode sjis testdata/sample1_sjis.txt&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_ライブラリ&#34;&gt;3.3. ライブラリ&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Goのコードとして使う場合は以下のように使用します。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;package main&#xA;&#xA;import (&#xA;  &#34;fmt&#34;&#xA;&#xA;  &#34;github.com/jiro4989/ojosama&#34;&#xA;)&#xA;&#xA;func main() {&#xA;  s := &#34;ハーブがありました！&#34;&#xA;  text, err := ojosama.Convert(s, nil)&#xA;  if err != nil {&#xA;    panic(err)&#xA;  }&#xA;  fmt.Println(text)&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_インストール&#34;&gt;4. インストール&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;https://github.com/jiro4989/ojosama/releases&#34;&gt;Releases&lt;/a&gt;から実行可能ファイルをダウンロードしてください。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;あるいは以下のコマンドでインストールしてください。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ go install github.com/jiro4989/ojosama/cmd/ojosama@latest&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_注意事項&#34;&gt;5. 注意事項&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_変換結果について&#34;&gt;5.1. 変換結果について&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;まだまだ実装途中なので、怪しい変換をする場合があります。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;必ずしも、自分のイメージしているお嬢様の口調になっているとは限らないことをご了承ください。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_プログラムの使用について&#34;&gt;5.2. プログラムの使用について&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;壱百満天原サロメお嬢様、及びその所属の にじさんじ や、 その関係者、ファンコミュニティの方の迷惑にならないように使ってください。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;本プログラムは、にじさんじ所属の壱百満天原サロメお嬢様のキャラクターを題材にした二次創作の一つです。 故に、本プログラムは以下二次創作ガイドラインに従います。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://event.nijisanji.app/guidelines/&#34;&gt;ANYCOLOR二次創作ガイドライン&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;本プログラムを使う場合も上記ガイドラインを守ってお使いください。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_既知のバグ&#34;&gt;6. 既知のバグ&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;変換済みの文を更に変換すると変になります。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ojosama -t お願いします | ojosama&#xA;お願いいたしますわですわ&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_派生プロジェクト&#34;&gt;7. 派生プロジェクト&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;派生したプロジェクトのリンクです。多謝。&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wgdp/ojosama-discord-bot&#34; class=&#34;bare&#34;&gt;https://github.com/wgdp/ojosama-discord-bot&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Sigumaa/ojosama-commit&#34; class=&#34;bare&#34;&gt;https://github.com/Sigumaa/ojosama-commit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_開発者向け&#34;&gt;8. 開発者向け&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_開発環境&#34;&gt;8.1. 開発環境&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Go 1.18.2&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Ubuntu 22.04 on Docker&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;make (なくてもいい)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_ビルド&#34;&gt;8.2. ビルド&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;以下のコマンドでビルドします。 実行すると内部で単体テストも実施されるので、とりあえずこれがパスすればOK。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ make&#xA;$ ls -lah ./bin/ojosama&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_リリース&#34;&gt;8.3. リリース&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;git tag打ったらCIが走って自動でリリースする。&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>dtm-labs/dtm</title>
    <updated>2022-06-24T01:44:26Z</updated>
    <id>tag:github.com,2022-06-24:/dtm-labs/dtm</id>
    <link href="https://github.com/dtm-labs/dtm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A distributed transaction framework that supports multiple languages, supports saga, tcc, xa, 2-phase message, outbox patterns.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/dtm-labs/dtm&#34; alt=&#34;license&#34;&gt; &lt;img src=&#34;https://github.com/dtm-labs/dtm/actions/workflows/tests.yml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/dtm-labs/dtm&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/dtm-labs/dtm/branch/main/graph/badge.svg?token=UKKEYQLP3F&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/dtm-labs/dtm&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/dtm-labs/dtm&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/dtm-labs/dtm&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/dtm-labs/dtm.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go#database&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge-flat.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Go&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://github.com/dtm-labs/dtm/raw/main/helper/README-cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Distributed Transactions Manager&lt;/h1&gt; &#xA;&lt;h2&gt;What is DTM&lt;/h2&gt; &#xA;&lt;p&gt;DTM is a distributed transaction framework which provides cross-service eventual data consistency. It provides saga, tcc, xa, 2-phase message, outbox patterns for a variety of application scenarios. It also supports multiple languages and multiple store engine to form up a transaction as following:&lt;/p&gt; &#xA;&lt;img alt=&#34;function-picture&#34; src=&#34;https://en.dtm.pub/assets/function.7d5618f8.png&#34; height=&#34;250&#34;&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h2&gt;Who&#39;s using DTM (partial)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.dtm.pub/other/using.html#tencent&#34;&gt;Tencent&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.dtm.pub/other/using.html#bytedance&#34;&gt;Bytedance&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.dtm.pub/other/using.html#ivydad&#34;&gt;Ivydad&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.dtm.pub/other/using.html&#34;&gt;More&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://en.dtm.pub&#34;&gt;Cook Book&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;run dtm&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/dtm-labs/dtm &amp;amp;&amp;amp; cd dtm&#xA;go run main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start an example&lt;/h3&gt; &#xA;&lt;p&gt;Suppose we want to perform an inter-bank transfer. The operations of transfer out (TransOut) and transfer in (TransIn) are coded in separate micro-services.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example to illustrate a solution of dtm to this problem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/dtm-labs/dtmcli-go-sample &amp;amp;&amp;amp; cd dtmcli-go-sample&#xA;go run main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Code&lt;/h2&gt; &#xA;&lt;h3&gt;Use&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  // business micro-service address&#xA;  const qsBusi = &#34;http://localhost:8081/api/busi_saga&#34;&#xA;  // The address where DtmServer serves DTM, which is a url&#xA;  DtmServer := &#34;http://localhost:36789/api/dtmsvr&#34;&#xA;  req := &amp;amp;gin.H{&#34;amount&#34;: 30} // micro-service payload&#xA;&#x9;// DtmServer is the address of DTM micro-service&#xA;&#x9;saga := dtmcli.NewSaga(DtmServer, shortuuid.New()).&#xA;&#x9;&#x9;// add a TransOut subtraction，forward operation with url: qsBusi+&#34;/TransOut&#34;, reverse compensation operation with url: qsBusi+&#34;/TransOutCom&#34;&#xA;&#x9;&#x9;Add(qsBusi+&#34;/TransOut&#34;, qsBusi+&#34;/TransOutCom&#34;, req).&#xA;&#x9;&#x9;// add a TransIn subtraction, forward operation with url: qsBusi+&#34;/TransIn&#34;, reverse compensation operation with url: qsBusi+&#34;/TransInCom&#34;&#xA;&#x9;&#x9;Add(qsBusi+&#34;/TransIn&#34;, qsBusi+&#34;/TransInCom&#34;, req)&#xA;&#x9;// submit the created saga transaction，dtm ensures all subtractions either complete or get revoked&#xA;&#x9;err := saga.Submit()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When the above code runs, we can see in the console that services TransOut, TransIn has been called.&lt;/p&gt; &#xA;&lt;h4&gt;Timing diagram&lt;/h4&gt; &#xA;&lt;p&gt;A timing diagram for a successfully completed SAGA transaction would be as follows:&lt;/p&gt; &#xA;&lt;img alt=&#34;saga-success&#34; src=&#34;https://en.dtm.pub/assets/saga_normal.59a75c01.jpg&#34; height=&#34;450/&#34;&gt; &#xA;&lt;h4&gt;Rollback upon failure&lt;/h4&gt; &#xA;&lt;p&gt;If any forward operation fails, DTM invokes the corresponding compensating operation of each sub-transaction to roll back, after which the transaction is successfully rolled back.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s purposely fail the forward operation of the second sub-transaction and watch what happens&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;app.POST(qsBusiAPI+&#34;/TransIn&#34;, func(c *gin.Context) {&#xA;  log.Printf(&#34;TransIn&#34;)&#xA;  // c.JSON(200, &#34;&#34;)&#xA;  c.JSON(409, &#34;&#34;) // Status 409 for Failure. Won&#39;t be retried&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The timing diagram for the intended failure is as follows:&lt;/p&gt; &#xA;&lt;img alt=&#34;saga-failed&#34; src=&#34;https://en.dtm.pub/assets/saga_rollback.7989c866.jpg&#34; height=&#34;550&#34;&gt; &#xA;&lt;h2&gt;More examples&lt;/h2&gt; &#xA;&lt;p&gt;The above example mainly demonstrates the flow of a distributed transaction. More on this, including practical examples of how to interface with an actual database, how to do compensation, how to do rollback, etc. please refer to &lt;a href=&#34;https://github.com/dtm-labs/dtm-examples&#34;&gt;dtm-examples&lt;/a&gt; for more examples.&lt;/p&gt; &#xA;&lt;h2&gt;Chat Group&lt;/h2&gt; &#xA;&lt;p&gt;Join the chat via &lt;a href=&#34;https://discord.gg/dV9jS5Rb33&#34;&gt;https://discord.gg/dV9jS5Rb33&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Give a star! ⭐&lt;/h2&gt; &#xA;&lt;p&gt;If you think this project is interesting, or helpful to you, please give a star!&lt;/p&gt;</summary>
  </entry>
</feed>