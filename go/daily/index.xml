<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-29T01:44:44Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zinclabs/zinc</title>
    <updated>2022-06-29T01:44:44Z</updated>
    <id>tag:github.com,2022-06-29:/zinclabs/zinc</id>
    <link href="https://github.com/zinclabs/zinc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ZincSearch. A lightweight alternative to elasticsearch that requires minimal resources, written in Go.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/zinclabs/zinc&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/zinclabs/zinc&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://codebuild.us-west-2.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoid3creXFaUHdOZmJvWWFXM0RZckJqV0xhZG4vT1ZWUkREK05oZExmT3JMMitGNGJwOHVIdCtKdjNEQzVqWXpLQlY1QjF2QXRIa0dIRjUvTzBsTE9LR0c0PSIsIml2UGFyYW1ldGVyU3BlYyI6IjRzdjc5bWZxU2hJYXNYNzciLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&amp;amp;branch=main&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Zinc Search Engine&lt;/h1&gt; &#xA;&lt;p&gt;Zinc is a search engine that does full text indexing. It is a lightweight alternative to Elasticsearch and runs using a fraction of the resources. It uses &lt;a href=&#34;https://github.com/blugelabs/bluge&#34;&gt;bluge&lt;/a&gt; as the underlying indexing library.&lt;/p&gt; &#xA;&lt;p&gt;It is very simple and easy to operate as opposed to Elasticsearch which requires a couple dozen knobs to understand and tune which you can get up and running in 2 minutes&lt;/p&gt; &#xA;&lt;p&gt;It is a drop-in replacement for Elasticsearch if you are just ingesting data using APIs and searching using kibana (Kibana is not supported with zinc. Zinc provides its own UI).&lt;/p&gt; &#xA;&lt;p&gt;Check the below video for a quick demo of Zinc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aZXtuVjt1ow&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/zinc-youtube.jpg&#34; alt=&#34;Zinc Youtube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Playground Server&lt;/h1&gt; &#xA;&lt;p&gt;You could try ZincSearch without installing using below details:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://playground.dev.zincsearch.com&#34;&gt;https://playground.dev.zincsearch.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User ID&lt;/td&gt; &#xA;   &lt;td&gt;admin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Password&lt;/td&gt; &#xA;   &lt;td&gt;Complexpass#123&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: Do not store sensitive data on this server as its available to everyone on internet. Data will also be cleaned on this server regularly.&lt;/p&gt; &#xA;&lt;h1&gt;Join slack channel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/zinc-nvh4832/shared_invite/zt-11r96hv2b-UwxUILuSJ1duzl_6mhJwVg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/slack.png&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Why zinc&lt;/h1&gt; &#xA;&lt;p&gt;While Elasticsearch is a very good product, it is complex and requires lots of resources and is more than a decade old. I built Zinc so it becomes easier for folks to use full text search indexing without doing a lot of work.&lt;/p&gt; &#xA;&lt;h1&gt;Features:&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Provides full text indexing capability&lt;/li&gt; &#xA; &lt;li&gt;Single binary for installation and running. Binaries available under releases for multiple platforms.&lt;/li&gt; &#xA; &lt;li&gt;Web UI for querying data written in Vue&lt;/li&gt; &#xA; &lt;li&gt;Compatibility with Elasticsearch APIs for ingestion of data (single record and bulk API)&lt;/li&gt; &#xA; &lt;li&gt;Out of the box authentication&lt;/li&gt; &#xA; &lt;li&gt;Schema less - No need to define schema upfront and different documents in the same index can have different fields.&lt;/li&gt; &#xA; &lt;li&gt;Index storage in s3 and minio (experimental)&lt;/li&gt; &#xA; &lt;li&gt;aggregation support&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Roadmap items:&lt;/h1&gt; &#xA;&lt;p&gt;Public roadmap is available at &lt;a href=&#34;https://github.com/orgs/zinclabs/projects/3/views/1&#34;&gt;https://github.com/orgs/zinclabs/projects/3/views/1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please create an issue if you would like something to be added to the roadmap.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;h2&gt;Search screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/search_screen.jpg&#34; alt=&#34;Search screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;User management screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/users_screen.jpg&#34; alt=&#34;Users screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;h2&gt;Download / Installation / Run&lt;/h2&gt; &#xA;&lt;p&gt;Check installation &lt;a href=&#34;https://docs.zincsearch.com/04_installation/&#34;&gt;installation docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data ingestion&lt;/h2&gt; &#xA;&lt;h3&gt;Single record&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/single-record/&#34;&gt;single record ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bulk ingestion&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/bulk-ingestion/#bulk-ingestion&#34;&gt;bulk ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fluent bit&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/fluent-bit/&#34;&gt;fluent-bit ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Syslog-ng&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/syslog-ng/&#34;&gt;syslog-ng ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API Reference&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/API%20Reference/&#34;&gt;Zinc API docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Releases&lt;/h1&gt; &#xA;&lt;p&gt;ZincSearch currently has most of its API contracts frozen. It&#39;s data format may still experience changes as we improve things. Currently ZincSearch is in beta. Data format should become highly stable when we move to GA (version 1).&lt;/p&gt; &#xA;&lt;h1&gt;How to develop and contribute to Zinc&lt;/h1&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; . Also check the &lt;a href=&#34;https://github.com/orgs/zinclabs/projects/3&#34;&gt;roadmap items&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Who uses Zinc (Known users)?&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quadrantsec.com/&#34;&gt;Quadrantsec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rocboss/paopao-ce&#34;&gt;Paopao&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please do raise a PR adding your details if you are using Zinc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>davecgh/go-spew</title>
    <updated>2022-06-29T01:44:44Z</updated>
    <id>tag:github.com,2022-06-29:/davecgh/go-spew</id>
    <link href="https://github.com/davecgh/go-spew" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implements a deep pretty printer for Go data structures to aid in debugging&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go-spew&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/davecgh/go-spew&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/davecgh/go-spew.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://copyfree.org&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-ISC-blue.svg?sanitize=true&#34; alt=&#34;ISC License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/davecgh/go-spew?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/davecgh/go-spew.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Go-spew implements a deep pretty printer for Go data structures to aid in debugging. A comprehensive suite of tests with 100% test coverage is provided to ensure proper functionality. See &lt;code&gt;test_coverage.txt&lt;/code&gt; for the gocov coverage report. Go-spew is licensed under the liberal ISC license, so it may be used in open source or commercial projects.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re interested in reading about how this package came to life and some of the challenges involved in providing a deep pretty printer, there is a blog post about it &lt;a href=&#34;https://web.archive.org/web/20160304013555/https://blog.cyphertite.com/go-spew-a-journey-into-dumping-go-data-structures/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://godoc.org/github.com/davecgh/go-spew/spew&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/godoc-reference-blue.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Full &lt;code&gt;go doc&lt;/code&gt; style documentation for the project can be viewed online without installing this package by using the excellent GoDoc site here: &lt;a href=&#34;http://godoc.org/github.com/davecgh/go-spew/spew&#34;&gt;http://godoc.org/github.com/davecgh/go-spew/spew&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also view the documentation locally once the package is installed with the &lt;code&gt;godoc&lt;/code&gt; tool by running &lt;code&gt;godoc -http=&#34;:6060&#34;&lt;/code&gt; and pointing your browser to &lt;a href=&#34;http://localhost:6060/pkg/github.com/davecgh/go-spew/spew&#34;&gt;http://localhost:6060/pkg/github.com/davecgh/go-spew/spew&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go get -u github.com/davecgh/go-spew/spew&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Add this import line to the file you&#39;re working in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;import &#34;github.com/davecgh/go-spew/spew&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To dump a variable with full newlines, indentation, type, and pointer information use Dump, Fdump, or Sdump:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;spew.Dump(myVar1, myVar2, ...)&#xA;spew.Fdump(someWriter, myVar1, myVar2, ...)&#xA;str := spew.Sdump(myVar1, myVar2, ...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, if you would prefer to use format strings with a compacted inline printing style, use the convenience wrappers Printf, Fprintf, etc with %v (most compact), %+v (adds pointer addresses), %#v (adds types), or %#+v (adds types and pointer addresses):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;spew.Printf(&#34;myVar1: %v -- myVar2: %+v&#34;, myVar1, myVar2)&#xA;spew.Printf(&#34;myVar3: %#v -- myVar4: %#+v&#34;, myVar3, myVar4)&#xA;spew.Fprintf(someWriter, &#34;myVar1: %v -- myVar2: %+v&#34;, myVar1, myVar2)&#xA;spew.Fprintf(someWriter, &#34;myVar3: %#v -- myVar4: %#+v&#34;, myVar3, myVar4)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Debugging a Web Application Example&lt;/h2&gt; &#xA;&lt;p&gt;Here is an example of how you can use &lt;code&gt;spew.Sdump()&lt;/code&gt; to help debug a web application. Please be sure to wrap your output using the &lt;code&gt;html.EscapeString()&lt;/code&gt; function for safety reasons. You should also only use this debugging technique in a development environment, never in production.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;fmt&#34;&#xA;    &#34;html&#34;&#xA;    &#34;net/http&#34;&#xA;&#xA;    &#34;github.com/davecgh/go-spew/spew&#34;&#xA;)&#xA;&#xA;func handler(w http.ResponseWriter, r *http.Request) {&#xA;    w.Header().Set(&#34;Content-Type&#34;, &#34;text/html&#34;)&#xA;    fmt.Fprintf(w, &#34;Hi there, %s!&#34;, r.URL.Path[1:])&#xA;    fmt.Fprintf(w, &#34;&amp;lt;!--\n&#34; + html.EscapeString(spew.Sdump(w)) + &#34;\n--&amp;gt;&#34;)&#xA;}&#xA;&#xA;func main() {&#xA;    http.HandleFunc(&#34;/&#34;, handler)&#xA;    http.ListenAndServe(&#34;:8080&#34;, nil)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample Dump Output&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;(main.Foo) {&#xA; unexportedField: (*main.Bar)(0xf84002e210)({&#xA;  flag: (main.Flag) flagTwo,&#xA;  data: (uintptr) &amp;lt;nil&amp;gt;&#xA; }),&#xA; ExportedField: (map[interface {}]interface {}) {&#xA;  (string) &#34;one&#34;: (bool) true&#xA; }&#xA;}&#xA;([]uint8) {&#xA; 00000000  11 12 13 14 15 16 17 18  19 1a 1b 1c 1d 1e 1f 20  |............... |&#xA; 00000010  21 22 23 24 25 26 27 28  29 2a 2b 2c 2d 2e 2f 30  |!&#34;#$%&amp;amp;&#39;()*+,-./0|&#xA; 00000020  31 32                                             |12|&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample Formatter Output&lt;/h2&gt; &#xA;&lt;p&gt;Double pointer to a uint8:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;  %v: &amp;lt;**&amp;gt;5&#xA;&#x9; %+v: &amp;lt;**&amp;gt;(0xf8400420d0-&amp;gt;0xf8400420c8)5&#xA;&#x9; %#v: (**uint8)5&#xA;&#x9;%#+v: (**uint8)(0xf8400420d0-&amp;gt;0xf8400420c8)5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pointer to circular struct with a uint8 field and a pointer to itself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;  %v: &amp;lt;*&amp;gt;{1 &amp;lt;*&amp;gt;&amp;lt;shown&amp;gt;}&#xA;&#x9; %+v: &amp;lt;*&amp;gt;(0xf84003e260){ui8:1 c:&amp;lt;*&amp;gt;(0xf84003e260)&amp;lt;shown&amp;gt;}&#xA;&#x9; %#v: (*main.circular){ui8:(uint8)1 c:(*main.circular)&amp;lt;shown&amp;gt;}&#xA;&#x9;%#+v: (*main.circular)(0xf84003e260){ui8:(uint8)1 c:(*main.circular)(0xf84003e260)&amp;lt;shown&amp;gt;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration Options&lt;/h2&gt; &#xA;&lt;p&gt;Configuration of spew is handled by fields in the ConfigState type. For convenience, all of the top-level functions use a global state available via the spew.Config global.&lt;/p&gt; &#xA;&lt;p&gt;It is also possible to create a ConfigState instance that provides methods equivalent to the top-level functions. This allows concurrent configuration options. See the ConfigState documentation for more details.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;* Indent&#xA;&#x9;String to use for each indentation level for Dump functions.&#xA;&#x9;It is a single space by default.  A popular alternative is &#34;\t&#34;.&#xA;&#xA;* MaxDepth&#xA;&#x9;Maximum number of levels to descend into nested data structures.&#xA;&#x9;There is no limit by default.&#xA;&#xA;* DisableMethods&#xA;&#x9;Disables invocation of error and Stringer interface methods.&#xA;&#x9;Method invocation is enabled by default.&#xA;&#xA;* DisablePointerMethods&#xA;&#x9;Disables invocation of error and Stringer interface methods on types&#xA;&#x9;which only accept pointer receivers from non-pointer variables.  This option&#xA;&#x9;relies on access to the unsafe package, so it will not have any effect when&#xA;&#x9;running in environments without access to the unsafe package such as Google&#xA;&#x9;App Engine or with the &#34;safe&#34; build tag specified.&#xA;&#x9;Pointer method invocation is enabled by default.&#xA;&#xA;* DisablePointerAddresses&#xA;&#x9;DisablePointerAddresses specifies whether to disable the printing of&#xA;&#x9;pointer addresses. This is useful when diffing data structures in tests.&#xA;&#xA;* DisableCapacities&#xA;&#x9;DisableCapacities specifies whether to disable the printing of capacities&#xA;&#x9;for arrays, slices, maps and channels. This is useful when diffing data&#xA;&#x9;structures in tests.&#xA;&#xA;* ContinueOnMethod&#xA;&#x9;Enables recursion into types after invoking error and Stringer interface&#xA;&#x9;methods. Recursion after method invocation is disabled by default.&#xA;&#xA;* SortKeys&#xA;&#x9;Specifies map keys should be sorted before being printed. Use&#xA;&#x9;this to have a more deterministic, diffable output.  Note that&#xA;&#x9;only native types (bool, int, uint, floats, uintptr and string)&#xA;&#x9;and types which implement error or Stringer interfaces are supported,&#xA;&#x9;with other types sorted according to the reflect.Value.String() output&#xA;&#x9;which guarantees display stability.  Natural map order is used by&#xA;&#x9;default.&#xA;&#xA;* SpewKeys&#xA;&#x9;SpewKeys specifies that, as a last resort attempt, map keys should be&#xA;&#x9;spewed to strings and sorted by those strings.  This is only considered&#xA;&#x9;if SortKeys is true.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Unsafe Package Dependency&lt;/h2&gt; &#xA;&lt;p&gt;This package relies on the unsafe package to perform some of the more advanced features, however it also supports a &#34;limited&#34; mode which allows it to work in environments where the unsafe package is not available. By default, it will operate in this mode on Google App Engine and when compiled with GopherJS. The &#34;safe&#34; build tag may also be specified to force the package to build without using the unsafe package.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Go-spew is licensed under the &lt;a href=&#34;http://copyfree.org&#34;&gt;copyfree&lt;/a&gt; ISC License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>golang-migrate/migrate</title>
    <updated>2022-06-29T01:44:44Z</updated>
    <id>tag:github.com,2022-06-29:/golang-migrate/migrate</id>
    <link href="https://github.com/golang-migrate/migrate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Database migrations. CLI and Golang library.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/golang-migrate/migrate/actions/workflows/ci.yaml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/golang-migrate/migrate/CI/master&#34; alt=&#34;GitHub Workflow Status (branch)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/golang-migrate/migrate/v4&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/golang-migrate/migrate&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/golang-migrate/migrate?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/github/golang-migrate/migrate/master.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagecloud.io/golang-migrate/migrate?filter=debs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/deb-packagecloud.io-844fec.svg?sanitize=true&#34; alt=&#34;packagecloud.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/migrate/migrate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/migrate/migrate.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Go-1.17%2C%201.18-lightgrey.svg?sanitize=true&#34; alt=&#34;Supported Go Versions&#34;&gt; &lt;a href=&#34;https://github.com/golang-migrate/migrate/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/golang-migrate/migrate.svg?sanitize=true&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/golang-migrate/migrate&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/golang-migrate/migrate&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;migrate&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Database migrations written in Go. Use as &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/#cli-usage&#34;&gt;CLI&lt;/a&gt; or import as &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/#use-in-your-go-project&#34;&gt;library&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Migrate reads migrations from &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/#migration-sources&#34;&gt;sources&lt;/a&gt; and applies them in correct order to a &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/#databases&#34;&gt;database&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Drivers are &#34;dumb&#34;, migrate glues everything together and makes sure the logic is bulletproof. (Keeps the drivers lightweight, too.)&lt;/li&gt; &#xA; &lt;li&gt;Database drivers don&#39;t assume things or try to correct user input. When in doubt, fail.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Forked from &lt;a href=&#34;https://github.com/mattes/migrate&#34;&gt;mattes/migrate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Databases&lt;/h2&gt; &#xA;&lt;p&gt;Database drivers run migrations. &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/driver.go&#34;&gt;Add a new database?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/postgres&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/pgx&#34;&gt;PGX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/redshift&#34;&gt;Redshift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/ql&#34;&gt;Ql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/cassandra&#34;&gt;Cassandra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/sqlite&#34;&gt;SQLite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/sqlite3&#34;&gt;SQLite3&lt;/a&gt; (&lt;a href=&#34;https://github.com/mattes/migrate/issues/165&#34;&gt;todo #165&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/sqlcipher&#34;&gt;SQLCipher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/mysql&#34;&gt;MySQL/ MariaDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/neo4j&#34;&gt;Neo4j&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/mongodb&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/crate&#34;&gt;CrateDB&lt;/a&gt; (&lt;a href=&#34;https://github.com/mattes/migrate/issues/170&#34;&gt;todo #170&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/shell&#34;&gt;Shell&lt;/a&gt; (&lt;a href=&#34;https://github.com/mattes/migrate/issues/171&#34;&gt;todo #171&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/spanner&#34;&gt;Google Cloud Spanner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/cockroachdb&#34;&gt;CockroachDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/clickhouse&#34;&gt;ClickHouse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/firebird&#34;&gt;Firebird&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/sqlserver&#34;&gt;MS SQL Server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Database URLs&lt;/h3&gt; &#xA;&lt;p&gt;Database connection strings are specified via URLs. The URL format is driver dependent but generally has the form: &lt;code&gt;dbdriver://username:password@host:port/dbname?param1=true&amp;amp;param2=false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Any &lt;a href=&#34;https://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_reserved_characters&#34;&gt;reserved URL characters&lt;/a&gt; need to be escaped. Note, the &lt;code&gt;%&lt;/code&gt; character also &lt;a href=&#34;https://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_the_percent_character&#34;&gt;needs to be escaped&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Explicitly, the following characters need to be escaped: &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;&#39;&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s easiest to always run the URL parts of your DB connection URL (e.g. username, password, etc) through an URL encoder. See the example Python snippets below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python3 -c &#39;import urllib.parse; print(urllib.parse.quote(input(&#34;String to encode: &#34;), &#34;&#34;))&#39;&#xA;String to encode: FAKEpassword!#$%&amp;amp;&#39;()*+,/:;=?@[]&#xA;FAKEpassword%21%23%24%25%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D&#xA;$ python2 -c &#39;import urllib; print urllib.quote(raw_input(&#34;String to encode: &#34;), &#34;&#34;)&#39;&#xA;String to encode: FAKEpassword!#$%&amp;amp;&#39;()*+,/:;=?@[]&#xA;FAKEpassword%21%23%24%25%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Migration Sources&lt;/h2&gt; &#xA;&lt;p&gt;Source drivers read migrations from local or remote sources. &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/driver.go&#34;&gt;Add a new source?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/file&#34;&gt;Filesystem&lt;/a&gt; - read from filesystem&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/iofs&#34;&gt;io/fs&lt;/a&gt; - read from a Go &lt;a href=&#34;https://pkg.go.dev/io/fs#FS&#34;&gt;io/fs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/go_bindata&#34;&gt;Go-Bindata&lt;/a&gt; - read from embedded binary data (&lt;a href=&#34;https://github.com/jteeuwen/go-bindata&#34;&gt;jteeuwen/go-bindata&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/pkger&#34;&gt;pkger&lt;/a&gt; - read from embedded binary data (&lt;a href=&#34;https://github.com/markbates/pkger&#34;&gt;markbates/pkger&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/github&#34;&gt;GitHub&lt;/a&gt; - read from remote GitHub repositories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/github_ee&#34;&gt;GitHub Enterprise&lt;/a&gt; - read from remote GitHub Enterprise repositories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/bitbucket&#34;&gt;Bitbucket&lt;/a&gt; - read from remote Bitbucket repositories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/gitlab&#34;&gt;Gitlab&lt;/a&gt; - read from remote Gitlab repositories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/aws_s3&#34;&gt;AWS S3&lt;/a&gt; - read from Amazon Web Services S3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/source/google_cloud_storage&#34;&gt;Google Cloud Storage&lt;/a&gt; - read from Google Cloud Platform Storage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CLI usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple wrapper around this library.&lt;/li&gt; &#xA; &lt;li&gt;Handles ctrl+c (SIGINT) gracefully.&lt;/li&gt; &#xA; &lt;li&gt;No config search paths, no config files, no magic ENV var injections.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/cmd/migrate&#34;&gt;CLI Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ migrate -source file://path/to/migrations -database postgres://localhost:5432/database up 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -v {{ migration dir }}:/migrations --network host migrate/migrate&#xA;    -path=/migrations/ -database postgres://localhost:5432/database up 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use in your Go project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;API is stable and frozen for this release (v3 &amp;amp; v4).&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more&#34;&gt;Go modules&lt;/a&gt; to manage dependencies.&lt;/li&gt; &#xA; &lt;li&gt;To help prevent database corruptions, it supports graceful stops via &lt;code&gt;GracefulStop chan bool&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bring your own logger.&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;code&gt;io.Reader&lt;/code&gt; streams internally for low memory overhead.&lt;/li&gt; &#xA; &lt;li&gt;Thread-safe and no goroutine leaks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://godoc.org/github.com/golang-migrate/migrate&#34;&gt;Go Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;    &#34;github.com/golang-migrate/migrate/v4&#34;&#xA;    _ &#34;github.com/golang-migrate/migrate/v4/database/postgres&#34;&#xA;    _ &#34;github.com/golang-migrate/migrate/v4/source/github&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    m, err := migrate.New(&#xA;        &#34;github://mattes:personal-access-token@mattes/migrate_test&#34;,&#xA;        &#34;postgres://localhost:5432/database?sslmode=enable&#34;)&#xA;    m.Steps(2)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Want to use an existing database client?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;    &#34;database/sql&#34;&#xA;    _ &#34;github.com/lib/pq&#34;&#xA;    &#34;github.com/golang-migrate/migrate/v4&#34;&#xA;    &#34;github.com/golang-migrate/migrate/v4/database/postgres&#34;&#xA;    _ &#34;github.com/golang-migrate/migrate/v4/source/file&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    db, err := sql.Open(&#34;postgres&#34;, &#34;postgres://localhost:5432/database?sslmode=enable&#34;)&#xA;    driver, err := postgres.WithInstance(db, &amp;amp;postgres.Config{})&#xA;    m, err := migrate.NewWithDatabaseInstance(&#xA;        &#34;file:///migrations&#34;,&#xA;        &#34;postgres&#34;, driver)&#xA;    m.Up() // or m.Step(2) if you want to explicitly set the number of migrations to run&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/GETTING_STARTED.md&#34;&gt;getting started&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/cockroachdb/TUTORIAL.md&#34;&gt;CockroachDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/database/postgres/TUTORIAL.md&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(more tutorials to come)&lt;/p&gt; &#xA;&lt;h2&gt;Migration files&lt;/h2&gt; &#xA;&lt;p&gt;Each migration has an up and down migration. &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/FAQ.md#why-two-separate-files-up-and-down-for-a-migration&#34;&gt;Why?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;1481574547_create_users_table.up.sql&#xA;1481574547_create_users_table.down.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/MIGRATIONS.md&#34;&gt;Best practices: How to write migrations.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Supported?&lt;/th&gt; &#xA;   &lt;th&gt;Import&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;master&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;import &#34;github.com/golang-migrate/migrate/v4&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;New features and bug fixes arrive here first&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;v4&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;import &#34;github.com/golang-migrate/migrate/v4&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Used for stable releases&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;v3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;import &#34;github.com/golang-migrate/migrate&#34;&lt;/code&gt; (with package manager) or &lt;code&gt;import &#34;gopkg.in/golang-migrate/migrate.v3&#34;&lt;/code&gt; (not recommended)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DO NOT USE&lt;/strong&gt; - No longer supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Development and Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Yes, please! &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/Makefile&#34;&gt;&lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt; is your friend, read the &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/CONTRIBUTING.md&#34;&gt;development guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/golang-migrate/migrate/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Looking for alternatives? &lt;a href=&#34;https://awesome-go.com/#database&#34;&gt;https://awesome-go.com/#database&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>