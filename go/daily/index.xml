<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-08T01:43:30Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alist-org/alist</title>
    <updated>2022-06-08T01:43:30Z</updated>
    <id>tag:github.com,2022-06-08:/alist-org/alist</id>
    <link href="https://github.com/alist-org/alist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üóÇÔ∏èA file list program that supports multiple storage, powered by Gin and React. / ‰∏Ä‰∏™ÊîØÊåÅÂ§öÂ≠òÂÇ®ÁöÑÊñá‰ª∂ÂàóË°®Á®ãÂ∫èÔºå‰ΩøÁî® Gin Âíå React „ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://alist.nn.ci&#34;&gt;&lt;img height=&#34;100px&#34; alt=&#34;logo&#34; src=&#34;https://cdn.jsdelivr.net/gh/alist-org/logo@main/logo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;em&gt;üóÇÔ∏èAnother file list program that supports multiple storage, powered by Gin and React.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/Xhofe/alist/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/Xhofe/alist?style=flat-square&#34; alt=&#34;latest version&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Xhofe/alist/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/Xhofe/alist?color=%23ED8936&amp;amp;style=flat-square&#34; alt=&#34;discussions&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Xhofe/alist/actions?query=workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Xhofe/alist/build?style=flat-square&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Xhofe/alist/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Xhofe/alist/total?style=flat-square&amp;amp;color=%239F7AEA&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Xhofe/alist/raw/v2/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Xhofe/alist?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://pay.xhofe.top&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/%24-donate-ff69b4.svg?style=flat-square&#34; alt=&#34;donate&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/alist-org/alist/v2/README_cn.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/alist-org/alist/v2/CONTRIBUTORS.md&#34;&gt;Contributors&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/alist-org/alist/v2/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multiple storage &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Local storage&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.aliyundrive.com/&#34;&gt;Aliyundrive&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OneDrive / Sharepoint (&lt;a href=&#34;https://www.office.com/&#34;&gt;global&lt;/a&gt;, &lt;a href=&#34;https://portal.partner.microsoftonline.cn&#34;&gt;cn&lt;/a&gt;,de,us)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://cloud.189.cn&#34;&gt;189cloud&lt;/a&gt; (Personal, Family)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://drive.google.com/&#34;&gt;GoogleDrive&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.123pan.com/&#34;&gt;123pan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://pc.woozooo.com/&#34;&gt;Lanzou&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Xhofe/alist&#34;&gt;Alist&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; FTP&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.mypikpak.com/&#34;&gt;PikPak&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://shandianpan.com/&#34;&gt;ShandianPan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;S3&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WebDav(Support OneDrive/SharePoint without API)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Teambition(&lt;a href=&#34;https://www.teambition.com/&#34;&gt;China&lt;/a&gt;,&lt;a href=&#34;https://us.teambition.com/&#34;&gt;International&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.mediatrack.cn/&#34;&gt;Mediatrack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://yun.139.com/&#34;&gt;139yun&lt;/a&gt; (Personal, Family)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://disk.yandex.com/&#34;&gt;Yandex.Disk&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;http://pan.baidu.com/&#34;&gt;Baidu Disk&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://pan.quark.cn&#34;&gt;Quark&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://pan.xunlei.com/&#34;&gt;XunleiCloud&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SFTP&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://photo.baidu.com/&#34;&gt;Baidu.Photo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Easy to deploy and out-of-the-box&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File preview (PDF, markdown, code, plain text, ...)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Image preview in gallery mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Video and audio preview (mp4, mp3, ...)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Office documents preview (docx, pptx, xlsx, ...)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;README.md&lt;/code&gt; preview rendering&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File permalink copy and direct file download&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dark mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; I18n&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Protected routes (password protection and authentication)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WebDav (see &lt;a href=&#34;https://alist-doc.nn.ci/en/docs/webdav&#34;&gt;https://alist-doc.nn.ci/en/docs/webdav&lt;/a&gt; for details)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://hub.docker.com/r/xhofe/alist&#34;&gt;Docker Deploy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cloudflare workers proxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File/Folder package download&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support video list playback and subtitles(ass,srt,vtt)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Web upload(Can allow visitors to upload), delete, mkdir, rename, move and copy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Discussion&lt;/h2&gt; &#xA;&lt;p&gt;Please go to our &lt;a href=&#34;https://github.com/Xhofe/alist/discussions&#34;&gt;discussion forum&lt;/a&gt; for general questions, &lt;strong&gt;issues are for bug reports and feature request only.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Available at: &lt;a href=&#34;https://alist.nn.ci&#34;&gt;https://alist.nn.ci&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://store.heytapimage.com/cdo-portal/feedback/202202/20/b271627971e29f0c7c9d59935b6ef381.png&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Document&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://alist-doc.nn.ci/en/&#34;&gt;https://alist-doc.nn.ci/en/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special sponsors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhaoziyuan.la/&#34;&gt;Find Resources - Aliyundrive Resource Search Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains: Essential tools for software developers and teams&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;AList&lt;/code&gt; is open-source software licensed under the AGPL-3.0 license.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This program is a free and open source project. It is designed to share files on the network disk, which is convenient for downloading and learning golang. Please abide by relevant laws and regulations when using it, and do not abuse it;&lt;/li&gt; &#xA; &lt;li&gt;This program is implemented by calling the official sdk/interface, without destroying the official interface behavior;&lt;/li&gt; &#xA; &lt;li&gt;This program only does 302 redirect/traffic forwarding, and does not intercept, store, or tamper with any user data;&lt;/li&gt; &#xA; &lt;li&gt;Before using this program, you should understand and bear the corresponding risks, including but not limited to account ban, download speed limit, etc., which is none of this program&#39;s business;&lt;/li&gt; &#xA; &lt;li&gt;If there is any infringement, please contact me by &lt;a href=&#34;mailto:i@nn.ci&#34;&gt;email&lt;/a&gt;, and it will be dealt with in time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://nn.ci/&#34;&gt;@Blog&lt;/a&gt; ¬∑ &lt;a href=&#34;https://github.com/Xhofe&#34;&gt;@GitHub&lt;/a&gt; ¬∑ &lt;a href=&#34;https://t.me/alist_chat&#34;&gt;@TelegramGroup&lt;/a&gt; ¬∑ &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=YJJj2Gwb&#34;&gt;@QQGroup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>techschool/simplebank</title>
    <updated>2022-06-08T01:43:30Z</updated>
    <id>tag:github.com,2022-06-08:/techschool/simplebank</id>
    <link href="https://github.com/techschool/simplebank" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple Bank&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the codes of the &lt;a href=&#34;https://bit.ly/backendmaster&#34;&gt;Backend Master Class&lt;/a&gt; course by &lt;a href=&#34;https://dev.to/techschoolguru&#34;&gt;TECH SCHOOL&lt;/a&gt; on our &lt;a href=&#34;https://www.youtube.com/c/TECHSCHOOLGURU&#34;&gt;Youtube channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/techschool/simplebank/master/backend-master.png&#34; alt=&#34;Backend master class&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also find it on Udemy at &lt;a href=&#34;https://www.udemy.com/course/backend-master-class-golang-postgresql-kubernetes/?referralCode=DD082CB0A39D22EC43EE&#34;&gt;this link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In this course, you will learn step-by-step how to design, develop and deploy a backend web service from scratch. I believe the best way to learn programming is to build a real application. Therefore, throughout the course, you will learn how to build a backend web service for a simple bank. It will provide APIs for the frontend to do the following things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create and manage bank accounts.&lt;/li&gt; &#xA; &lt;li&gt;Record all balance changes to each of the accounts.&lt;/li&gt; &#xA; &lt;li&gt;Perform a money transfer between 2 accounts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The programming language we will use to develop the service is Golang, but the course is not just about coding in Go. The course is divided into 3 main parts:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In the first part, you will learn deeply about how to design the database, generate codes to talk to the DB in a consistent and reliable way using transactions, understand the DB isolation levels, and how to use it correctly in production. Besides the database, you will also learn how to use docker for local development, how to use Git to manage your codes, and how to use Github Action to run unit tests automatically.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the second part, you will learn how to build a set of RESTful HTTP APIs using Gin - one of the most popular Golang frameworks for building web services. This includes everything from loading app configs, mocking DB for more robust unit tests, handling errors, authenticating users, and securing the APIs with JWT and PASETO access tokens.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the last part, you will learn how to build your app with Docker and deploy it to a production Kubernetes cluster on AWS. The lectures are very detailed with a step-by-step guide, from how to build a minimal docker image, set up a free-tier AWS account, create a production database, store and retrieve production secrets, create a Kubernetes cluster with EKS, use Github Action to automatically build and deploy the image to the EKS cluster, buy a domain name and route the traffics to the service, secure the connection with HTTPs and auto-renew TLS certificate from Let&#39;s Encrypt.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This course is designed with a lot of details, so that everyone, even with very little programming experience can understand and do it by themselves. I strongly believe that after the course, you would be able to work much more confidently and effectively in your projects.&lt;/p&gt; &#xA;&lt;h2&gt;Course videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lecture #1: &lt;a href=&#34;https://www.youtube.com/watch?v=rx6CPDK_5mU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=1&#34;&gt;Design DB schema and generate SQL code with dbdiagram.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #2: &lt;a href=&#34;https://www.youtube.com/watch?v=Q9ipbLeqmQo&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=2&#34;&gt;Install &amp;amp; use Docker + Postgres + TablePlus to create DB schema&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #3: &lt;a href=&#34;https://www.youtube.com/watch?v=0CYkrGIJkpw&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=3&#34;&gt;How to write &amp;amp; run database migration in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #4: &lt;a href=&#34;https://www.youtube.com/watch?v=prh0hTyI1sU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=4&#34;&gt;Generate CRUD Golang code from SQL | Compare db/sql, gorm, sqlx &amp;amp; sqlc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #5: &lt;a href=&#34;https://www.youtube.com/watch?v=phHDfOHB2PU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=5&#34;&gt;Write unit tests for database CRUD with random data in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #6: &lt;a href=&#34;https://www.youtube.com/watch?v=gBh__1eFwVI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=6&#34;&gt;A clean way to implement database transaction in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #7: &lt;a href=&#34;https://www.youtube.com/watch?v=G2aggv_3Bbg&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=7&#34;&gt;DB transaction lock &amp;amp; How to handle deadlock in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #8: &lt;a href=&#34;https://www.youtube.com/watch?v=qn3-5wdOfoA&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=8&#34;&gt;How to avoid deadlock in DB transaction? Queries order matters!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #9: &lt;a href=&#34;https://www.youtube.com/watch?v=4EajrPgJAk0&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=9&#34;&gt;Deeply understand transaction isolation levels &amp;amp; read phenomena in MySQL &amp;amp; PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #10: &lt;a href=&#34;https://www.youtube.com/watch?v=3mzQRJY1GVE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=10&#34;&gt;Setup Github Actions for Golang + Postgres to run automated tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #11: &lt;a href=&#34;https://www.youtube.com/watch?v=n_Y_YisgqTw&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=11&#34;&gt;Implement RESTful HTTP API in Go using Gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #12: &lt;a href=&#34;https://www.youtube.com/watch?v=n5p8HkO6bnE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=12&#34;&gt;Load config from file &amp;amp; environment variables in Go with Viper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #13: &lt;a href=&#34;https://www.youtube.com/watch?v=rL0aeMutoJ0&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=13&#34;&gt;Mock DB for testing HTTP API in Go and achieve 100% coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #14: &lt;a href=&#34;https://www.youtube.com/watch?v=5q_wsashJZA&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=14&#34;&gt;Implement transfer money API with a custom params validator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #15: &lt;a href=&#34;https://www.youtube.com/watch?v=D4VtNC3vQUs&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=15&#34;&gt;Add users table with unique &amp;amp; foreign key constraints in PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #16: &lt;a href=&#34;https://www.youtube.com/watch?v=mJ8b5GcvoxQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=16&#34;&gt;How to handle DB errors in Golang correctly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #17: &lt;a href=&#34;https://www.youtube.com/watch?v=B3xnJI2lHmc&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=17&#34;&gt;How to securely store passwords? Hash password in Go with Bcrypt!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #18: &lt;a href=&#34;https://www.youtube.com/watch?v=DuzBE0jKOgE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=18&#34;&gt;How to write stronger unit tests with a custom gomock matcher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #19: &lt;a href=&#34;https://www.youtube.com/watch?v=nBGx-q52KAY&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=19&#34;&gt;Why PASETO is better than JWT for token-based authentication?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #20: &lt;a href=&#34;https://www.youtube.com/watch?v=Oi4FHDGILuY&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=20&#34;&gt;How to create and verify JWT &amp;amp; PASETO token in Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #21: &lt;a href=&#34;https://www.youtube.com/watch?v=lnHbZ9GOGAs&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=21&#34;&gt;Implement login user API that returns PASETO or JWT access token in Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #22: &lt;a href=&#34;https://www.youtube.com/watch?v=Pw8fVBRS4jA&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=22&#34;&gt;Implement authentication middleware and authorization rules in Golang using Gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #23: &lt;a href=&#34;https://www.youtube.com/watch?v=p1dwLKAxUxA&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=23&#34;&gt;Build a minimal Golang Docker image with a multistage Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #24: &lt;a href=&#34;https://www.youtube.com/watch?v=VcFnqQarpjI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=24&#34;&gt;How to use docker network to connect 2 stand-alone containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #25: &lt;a href=&#34;https://www.youtube.com/watch?v=jf6sQsz0M1M&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=25&#34;&gt;How to write docker-compose file and control service start-up orders with wait-for.sh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #26: &lt;a href=&#34;https://www.youtube.com/watch?v=4UqN1P8pIkM&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=26&#34;&gt;How to create a free tier AWS account&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #27: &lt;a href=&#34;https://www.youtube.com/watch?v=3M4MPmSWt9E&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=27&#34;&gt;Auto build &amp;amp; push docker image to AWS ECR with Github Actions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #28: &lt;a href=&#34;https://www.youtube.com/watch?v=0EaG3T4Q5fQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=28&#34;&gt;How to create a production DB on AWS RDS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #29: &lt;a href=&#34;https://www.youtube.com/watch?v=3i1mQ_Ye8jE&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=29&#34;&gt;Store &amp;amp; retrieve production secrets with AWS secrets manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #30: &lt;a href=&#34;https://www.youtube.com/watch?v=TxnCMhYhqRU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=30&#34;&gt;Kubernetes architecture &amp;amp; How to create an EKS cluster on AWS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #31: &lt;a href=&#34;https://www.youtube.com/watch?v=hwMevai3_wQ&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=31&#34;&gt;How to use kubectl &amp;amp; k9s to connect to a kubernetes cluster on AWS EKS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #32: &lt;a href=&#34;https://www.youtube.com/watch?v=PH-Mcd0Rs1w&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=32&#34;&gt;How to deploy a web app to Kubernetes cluster on AWS EKS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #33: &lt;a href=&#34;https://www.youtube.com/watch?v=-JF2ukmW3i8&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=33&#34;&gt;Register a domain name &amp;amp; set up A-record using Route53&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #34: &lt;a href=&#34;https://www.youtube.com/watch?v=lBrqP6FkNsU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=34&#34;&gt;How to use Ingress to route traffics to different services in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #35: &lt;a href=&#34;https://www.youtube.com/watch?v=nU4FTjrgSKI&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=35&#34;&gt;Automatic issue TLS certificates in Kubernetes with Let&#39;s Encrypt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #36: &lt;a href=&#34;https://www.youtube.com/watch?v=GVY-zze0V_U&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=36&#34;&gt;Automatic deploy to Kubernetes with Github Action&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #37: &lt;a href=&#34;https://www.youtube.com/watch?v=rT20ylRLm5U&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=37&#34;&gt;How to manage user session with refresh token - Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #38: &lt;a href=&#34;https://www.youtube.com/watch?v=dGfVwsPr-IU&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=38&#34;&gt;Generate DB documentation page and schema SQL dump from DBML&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #39: &lt;a href=&#34;https://www.youtube.com/watch?v=mRGnA3wPxMM&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=39&#34;&gt;Introduction to gRPC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lecture #40: &lt;a href=&#34;https://www.youtube.com/watch?v=mVWgEmyAhvM&amp;amp;list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&amp;amp;index=40&#34;&gt;Define gRPC API and generate Go code with protobuf&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Simple bank service&lt;/h2&gt; &#xA;&lt;p&gt;The service that we‚Äôre going to build is a simple bank. It will provide APIs for the frontend to do following things:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create and manage bank accounts, which are composed of owner‚Äôs name, balance, and currency.&lt;/li&gt; &#xA; &lt;li&gt;Record all balance changes to each of the account. So every time some money is added to or subtracted from the account, an account entry record will be created.&lt;/li&gt; &#xA; &lt;li&gt;Perform a money transfer between 2 accounts. This should happen within a transaction, so that either both accounts‚Äô balance are updated successfully or none of them are.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Setup local development&lt;/h2&gt; &#xA;&lt;h3&gt;Install tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker desktop&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://tableplus.com/&#34;&gt;TablePlus&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Golang&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/golang-migrate/migrate/tree/master/cmd/migrate&#34;&gt;Migrate&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install golang-migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dbdocs.io/docs&#34;&gt;DB Docs&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g dbdocs&#xA;dbdocs login&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.dbml.org/cli/#installation&#34;&gt;DBML CLI&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g @dbml/cli&#xA;dbml2sql --version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kyleconroy/sqlc#installation&#34;&gt;Sqlc&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install sqlc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/golang/mock&#34;&gt;Gomock&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/golang/mock/mockgen@v1.6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup infrastructure&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the bank-network&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make network&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start postgres container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create simple_bank database:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make createdb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run db migration up all versions:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make migrateup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run db migration up 1 version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make migrateup1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run db migration down all versions:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make migratedown&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run db migration down 1 version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make migratedown1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate DB documentation:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make db_docs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the DB documentation at &lt;a href=&#34;https://dbdocs.io/techschool.guru/simple_bank&#34;&gt;this address&lt;/a&gt;. Password: &lt;code&gt;secret&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to generate code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate schema SQL file with DBML:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make db_schema&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate SQL CRUD with sqlc:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make sqlc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate DB mock with gomock:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make mock&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new db migration:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;migrate create -ext sql -dir db/migration -seq &amp;lt;migration_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run test:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploy to kubernetes cluster&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/deploy/#aws&#34;&gt;Install nginx ingress controller&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.48.1/deploy/static/provider/aws/deploy.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cert-manager.io/docs/installation/kubernetes/&#34;&gt;Install cert-manager&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.4.0/cert-manager.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>open-policy-agent/opa</title>
    <updated>2022-06-08T01:43:30Z</updated>
    <id>tag:github.com,2022-06-08:/open-policy-agent/opa</id>
    <link href="https://github.com/open-policy-agent/opa" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open source, general-purpose policy engine.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/open-policy-agent/opa/main/logo/logo-144x144.png&#34; alt=&#34;logo&#34;&gt; Open Policy Agent&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.openpolicyagent.org&#34;&gt;&lt;img src=&#34;http://slack.openpolicyagent.org/badge.svg?sanitize=true&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-policy-agent/opa/actions&#34;&gt;&lt;img src=&#34;https://github.com/open-policy-agent/opa/workflows/Post%20Merge/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/open-policy-agent/opa&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/open-policy-agent/opa&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1768&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1768/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.netlify.com/sites/openpolicyagent/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/4a0a092a-8741-4826-a28f-826d4a576cab/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open Policy Agent (OPA) is an open source, general-purpose policy engine that enables unified, context-aware policy enforcement across the entire stack.&lt;/p&gt; &#xA;&lt;p&gt;OPA is proud to be a graduated project in the &lt;a href=&#34;https://cncf.io&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF) landscape. For details read the CNCF &lt;a href=&#34;https://www.cncf.io/announcements/2021/02/04/cloud-native-computing-foundation-announces-open-policy-agent-graduation/&#34;&gt;announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Want to connect with the community or get support for OPA?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join the &lt;a href=&#34;https://slack.openpolicyagent.org&#34;&gt;OPA Slack&lt;/a&gt; for day-to-day conversations with the OPA community.&lt;/li&gt; &#xA; &lt;li&gt;Need Support? Go to the &lt;a href=&#34;https://github.com/open-policy-agent/feedback/discussions&#34;&gt;Discussions Board&lt;/a&gt; to ask questions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Want to learn more about OPA?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://www.openpolicyagent.org&#34;&gt;openpolicyagent.org&lt;/a&gt; to get started with documentation and tutorials.&lt;/li&gt; &#xA; &lt;li&gt;Browse &lt;a href=&#34;https://blog.openpolicyagent.org&#34;&gt;blog.openpolicyagent.org&lt;/a&gt; for news about OPA, community, policy and authorization.&lt;/li&gt; &#xA; &lt;li&gt;Try OPA with the &lt;a href=&#34;https://play.openpolicyagent.org&#34;&gt;Rego Playground&lt;/a&gt; to experiment with policies and share your work.&lt;/li&gt; &#xA; &lt;li&gt;View the &lt;a href=&#34;https://docs.google.com/presentation/d/16QV6gvLDOV3I0_guPC3_19g6jHkEg3X9xqMYgtoCKrs/edit?usp=sharing&#34;&gt;OPA Roadmap&lt;/a&gt; to see a high-level snapshot of OPA features in-progress and planned.&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/open-policy-agent/opa/main/ADOPTERS.md&#34;&gt;ADOPTERS.md&lt;/a&gt; file for a list of production adopters. Does your organization use OPA in production? Support the OPA project by submitting a PR to add your organization to the list with a short description of your OPA use cases!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Want to get OPA?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/openpolicyagent/opa/tags/&#34;&gt;Docker Hub&lt;/a&gt; for Docker images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-policy-agent/opa/releases&#34;&gt;GitHub releases&lt;/a&gt; for binary releases and changelogs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Want to integrate OPA?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://godoc.org/github.com/open-policy-agent/opa/rego&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/open-policy-agent/opa?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; to integrate OPA with services written in Go.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://www.openpolicyagent.org/docs/rest-api.html&#34;&gt;REST API&lt;/a&gt; to integrate OPA with services written in other languages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Want to contribute to OPA?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://www.openpolicyagent.org/docs/latest/contributing/&#34;&gt;Contributing Guide&lt;/a&gt; to learn how to make your first contribution.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://openpolicyagent.slack.com/archives/C02L1TLPN59&#34;&gt;#development&lt;/a&gt; in Slack to talk to the OPA maintainers and other contributors.&lt;/li&gt; &#xA; &lt;li&gt;File a &lt;a href=&#34;https://github.com/open-policy-agent/opa/issues&#34;&gt;GitHub Issue&lt;/a&gt; to request features or report bugs.&lt;/li&gt; &#xA; &lt;li&gt;Join the OPA bi-weekly meetings every other Tuesday at 10:00 (Pacific Timezone): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1v6l2gmkRKAn5UIg3V2QdeeCcXMElxsNzEzDkVlWDVg8/edit?usp=sharing&#34;&gt;Meeting Notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://zoom.us/j/97827947600&#34;&gt;Zoom&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://calendar.google.com/event?action=TEMPLATE&amp;amp;tmeid=MnRvb2M4amtldXBuZ2E1azY0MTJndjh0ODRfMjAxODA5MThUMTcwMDAwWiBzdHlyYS5jb21fY28zOXVzc3VobnE2amUzN2l2dHQyYmNiZGdAZw&amp;amp;tmsrc=styra.com_co39ussuhnq6je37ivtt2bcbdg%40group.calendar.google.com&amp;amp;scp=ALL&#34;&gt;Calendar Invite&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How does OPA work?&lt;/h2&gt; &#xA;&lt;p&gt;OPA gives you a high-level declarative language to author and enforce policies across your stack.&lt;/p&gt; &#xA;&lt;p&gt;With OPA, you define &lt;em&gt;rules&lt;/em&gt; that govern how your system should behave. These rules exist to answer questions like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Can user X call operation Y on resource Z?&lt;/li&gt; &#xA; &lt;li&gt;What clusters should workload W be deployed to?&lt;/li&gt; &#xA; &lt;li&gt;What tags must be set on resource R before it&#39;s created?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You integrate services with OPA so that these kinds of policy decisions do not have to be &lt;em&gt;hardcoded&lt;/em&gt; in your service. Services integrate with OPA by executing &lt;em&gt;queries&lt;/em&gt; when policy decisions are needed.&lt;/p&gt; &#xA;&lt;p&gt;When you query OPA for a policy decision, OPA evaluates the rules and data (which you give it) to produce an answer. The policy decision is sent back as the result of the query.&lt;/p&gt; &#xA;&lt;p&gt;For example, in a simple API authorization use case:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You write rules that allow (or deny) access to your service APIs.&lt;/li&gt; &#xA; &lt;li&gt;Your service queries OPA when it receives API requests.&lt;/li&gt; &#xA; &lt;li&gt;OPA returns allow (or deny) decisions to your service.&lt;/li&gt; &#xA; &lt;li&gt;Your service &lt;em&gt;enforces&lt;/em&gt; the decisions by accepting or rejecting requests accordingly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For concrete examples of how to integrate OPA with systems like &lt;a href=&#34;https://www.openpolicyagent.org/docs/kubernetes-admission-control.html&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://www.openpolicyagent.org/docs/terraform.html&#34;&gt;Terraform&lt;/a&gt;, &lt;a href=&#34;https://www.openpolicyagent.org/docs/docker-authorization.html&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://www.openpolicyagent.org/docs/ssh-and-sudo-authorization.html&#34;&gt;SSH&lt;/a&gt;, and more, see &lt;a href=&#34;https://www.openpolicyagent.org&#34;&gt;openpolicyagent.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Presentations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open Policy Agent Intro @ KubeCon EU 2021: &lt;a href=&#34;https://www.youtube.com/watch?v=2CgeiWkliaw&#34;&gt;Video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using Open Policy Agent to Meet Evolving Policy Requirements @ KubeCon NA 2020: &lt;a href=&#34;https://www.youtube.com/watch?v=zVuM7F_BTyc&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Applying Policy Throughout The Application Lifecycle with Open Policy Agent @ CloudNativeCon 2019: &lt;a href=&#34;https://www.youtube.com/watch?v=cXfsaE6RKfc&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open Policy Agent Introduction @ CloudNativeCon EU 2018: &lt;a href=&#34;https://youtu.be/XEHeexPpgrA&#34;&gt;video&lt;/a&gt;, &lt;a href=&#34;https://www.slideshare.net/TorinSandall/opa-the-cloud-native-policy-engine&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rego Deep Dive @ CloudNativeCon EU 2018: &lt;a href=&#34;https://youtu.be/4mBJSIhs2xQ&#34;&gt;video&lt;/a&gt;, &lt;a href=&#34;https://www.slideshare.net/TorinSandall/rego-deep-dive&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How Netflix Is Solving Authorization Across Their Cloud @ CloudNativeCon US 2017: &lt;a href=&#34;https://www.youtube.com/watch?v=R6tUNpRpdnY&#34;&gt;video&lt;/a&gt;, &lt;a href=&#34;https://www.slideshare.net/TorinSandall/how-netflix-is-solving-authorization-across-their-cloud&#34;&gt;slides&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Policy-based Resource Placement in Kubernetes Federation @ LinuxCon Beijing 2017: &lt;a href=&#34;https://www.slideshare.net/TorinSandall/policybased-resource-placement-across-hybrid-cloud&#34;&gt;slides&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=hRz13baBhfg&amp;amp;feature=youtu.be&#34;&gt;screencast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enforcing Bespoke Policies In Kubernetes @ KubeCon US 2017: &lt;a href=&#34;https://www.youtube.com/watch?v=llDI8VvkUj8&#34;&gt;video&lt;/a&gt;, &lt;a href=&#34;https://www.slideshare.net/TorinSandall/enforcing-bespoke-policies-in-kubernetes&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Istio&#39;s Mixer: Policy Enforcement with Custom Adapters @ CloudNativeCon US 2017: &lt;a href=&#34;https://www.youtube.com/watch?v=czZLXUqzd24&#34;&gt;video&lt;/a&gt;, &lt;a href=&#34;https://www.slideshare.net/TorinSandall/istios-mixer-policy-enforcement-with-custom-adapters-cloud-nativecon-17&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security Audit&lt;/h2&gt; &#xA;&lt;p&gt;A third party security audit was performed by Cure53, you can see the full report &lt;a href=&#34;https://raw.githubusercontent.com/open-policy-agent/opa/main/SECURITY_AUDIT.pdf&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please report vulnerabilities by email to &lt;a href=&#34;mailto:open-policy-agent-security@googlegroups.com&#34;&gt;open-policy-agent-security&lt;/a&gt;. We will send a confirmation message to acknowledge that we have received the report and then we will send additional messages to follow up once the issue has been investigated.&lt;/p&gt;</summary>
  </entry>
</feed>