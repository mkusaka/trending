<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-13T01:30:56Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>icereed/paperless-gpt</title>
    <updated>2025-01-13T01:30:56Z</updated>
    <id>tag:github.com,2025-01-13:/icereed/paperless-gpt</id>
    <link href="https://github.com/icereed/paperless-gpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use LLMs and LLM Vision (OCR) to handle paperless-ngx - Document Digitalization powered by AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;paperless-gpt&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/icereed/paperless-gpt&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/icereed/paperless-gpt&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/icereed/paperless-gpt&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/paperless-gpt-screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;paperless-gpt&lt;/strong&gt; seamlessly pairs with &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx&#34;&gt;paperless-ngx&lt;/a&gt; to generate &lt;strong&gt;AI-powered document titles&lt;/strong&gt; and &lt;strong&gt;tags&lt;/strong&gt;, saving you hours of manual sorting. While other tools may offer AI chat features, &lt;strong&gt;paperless-gpt&lt;/strong&gt; stands out by &lt;strong&gt;supercharging OCR with LLMs&lt;/strong&gt;—ensuring high accuracy, even with tricky scans. If you’re craving next-level text extraction and effortless document organization, this is your solution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/bd5d38b9-9309-40b9-93ca-918dfa4f3fd4&#34;&gt;https://github.com/user-attachments/assets/bd5d38b9-9309-40b9-93ca-918dfa4f3fd4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Key Highlights&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;LLM-Enhanced OCR&lt;/strong&gt;&lt;br&gt; Harness Large Language Models (OpenAI or Ollama) for &lt;strong&gt;better-than-traditional&lt;/strong&gt; OCR—turn messy or low-quality scans into context-aware, high-fidelity text.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic Title &amp;amp; Tag Generation&lt;/strong&gt;&lt;br&gt; No more guesswork. Let the AI do the naming and categorizing. You can easily review suggestions and refine them if needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extensive Customization&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Prompt Templates&lt;/strong&gt;: Tweak your AI prompts to reflect your domain, style, or preference.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Tagging&lt;/strong&gt;: Decide how documents get tagged—manually, automatically, or via OCR-based flows.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Simple Docker Deployment&lt;/strong&gt;&lt;br&gt; A few environment variables, and you’re off! Compose it alongside paperless-ngx with minimal fuss.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unified Web UI&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Manual Review&lt;/strong&gt;: Approve or tweak AI’s suggestions.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Auto Processing&lt;/strong&gt;: Focus only on edge cases while the rest is sorted for you.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Opt-In LLM-based OCR&lt;/strong&gt;&lt;br&gt; If you opt in, your images get read by a Vision LLM, pushing boundaries beyond standard OCR tools.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#key-highlights&#34;&gt;Key Highlights&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#docker-compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#manual-setup&#34;&gt;Manual Setup&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#custom-prompt-templates&#34;&gt;Custom Prompt Templates&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#prompt-templates-directory&#34;&gt;Prompt Templates Directory&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#mounting-the-prompts-directory&#34;&gt;Mounting the Prompts Directory&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#editing-the-prompt-templates&#34;&gt;Editing the Prompt Templates&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#template-syntax-and-variables&#34;&gt;Template Syntax and Variables&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#llm-based-ocr-compare-for-yourself&#34;&gt;OCR using AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#star-history&#34;&gt;Star History&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/#disclaimer&#34;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; installed.&lt;/li&gt; &#xA; &lt;li&gt;A running instance of &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx&#34;&gt;paperless-ngx&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Access to an LLM provider: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;OpenAI&lt;/strong&gt;: An API key with models like &lt;code&gt;gpt-4o&lt;/code&gt; or &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Ollama&lt;/strong&gt;: A running Ollama server with models like &lt;code&gt;llama2&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;h4&gt;Docker Compose&lt;/h4&gt; &#xA;&lt;p&gt;Here’s an example &lt;code&gt;docker-compose.yml&lt;/code&gt; to spin up &lt;strong&gt;paperless-gpt&lt;/strong&gt; alongside paperless-ngx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3.7&#39;&#xA;services:&#xA;  paperless-ngx:&#xA;    image: ghcr.io/paperless-ngx/paperless-ngx:latest&#xA;    # ... (your existing paperless-ngx config)&#xA;&#xA;  paperless-gpt:&#xA;    image: icereed/paperless-gpt:latest&#xA;    environment:&#xA;      PAPERLESS_BASE_URL: &#39;http://paperless-ngx:8000&#39;&#xA;      PAPERLESS_API_TOKEN: &#39;your_paperless_api_token&#39;&#xA;      PAPERLESS_PUBLIC_URL: &#39;http://paperless.mydomain.com&#39; # Optional&#xA;      MANUAL_TAG: &#39;paperless-gpt&#39;          # Optional, default: paperless-gpt&#xA;      AUTO_TAG: &#39;paperless-gpt-auto&#39;       # Optional, default: paperless-gpt-auto&#xA;      LLM_PROVIDER: &#39;openai&#39;               # or &#39;ollama&#39;&#xA;      LLM_MODEL: &#39;gpt-4o&#39;                  # or &#39;llama2&#39;&#xA;      OPENAI_API_KEY: &#39;your_openai_api_key&#39;&#xA;      # Optional - OPENAI_BASE_URL: &#39;https://litellm.yourinstallationof.it.com/v1&#39;&#xA;      LLM_LANGUAGE: &#39;English&#39;              # Optional, default: English&#xA;      OLLAMA_HOST: &#39;http://host.docker.internal:11434&#39; # If using Ollama&#xA;      VISION_LLM_PROVIDER: &#39;ollama&#39;        # (for OCR) - openai or ollama&#xA;      VISION_LLM_MODEL: &#39;minicpm-v&#39;        # (for OCR) - minicpm-v (ollama example), gpt-4o (for openai), etc.&#xA;      AUTO_OCR_TAG: &#39;paperless-gpt-ocr-auto&#39; # Optional, default: paperless-gpt-ocr-auto&#xA;      OCR_LIMIT_PAGES: &#39;5&#39;                 # Optional, default: 5. Set to 0 for no limit.&#xA;      LOG_LEVEL: &#39;info&#39;                    # Optional: debug, warn, error&#xA;    volumes:&#xA;      - ./prompts:/app/prompts   # Mount the prompts directory&#xA;    ports:&#xA;      - &#39;8080:8080&#39;&#xA;    depends_on:&#xA;      - paperless-ngx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pro Tip&lt;/strong&gt;: Replace placeholders with real values and read the logs if something looks off.&lt;/p&gt; &#xA;&lt;h4&gt;Manual Setup&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/icereed/paperless-gpt.git&#xA;cd paperless-gpt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create a &lt;code&gt;prompts&lt;/code&gt; Directory&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir prompts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Build the Docker Image&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t paperless-gpt .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run the Container&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  -e PAPERLESS_BASE_URL=&#39;http://your_paperless_ngx_url&#39; \&#xA;  -e PAPERLESS_API_TOKEN=&#39;your_paperless_api_token&#39; \&#xA;  -e LLM_PROVIDER=&#39;openai&#39; \&#xA;  -e LLM_MODEL=&#39;gpt-4o&#39; \&#xA;  -e OPENAI_API_KEY=&#39;your_openai_api_key&#39; \&#xA;  -e LLM_LANGUAGE=&#39;English&#39; \&#xA;  -e VISION_LLM_PROVIDER=&#39;ollama&#39; \&#xA;  -e VISION_LLM_MODEL=&#39;minicpm-v&#39; \&#xA;  -e LOG_LEVEL=&#39;info&#39; \&#xA;  -v $(pwd)/prompts:/app/prompts \&#xA;  -p 8080:8080 \&#xA;  paperless-gpt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PAPERLESS_BASE_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;URL of your paperless-ngx instance (e.g. &lt;code&gt;http://paperless-ngx:8000&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PAPERLESS_API_TOKEN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;API token for paperless-ngx. Generate one in paperless-ngx admin.&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PAPERLESS_PUBLIC_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Public URL for Paperless (if different from &lt;code&gt;PAPERLESS_BASE_URL&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MANUAL_TAG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tag for manual processing. Default: &lt;code&gt;paperless-gpt&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AUTO_TAG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tag for auto processing. Default: &lt;code&gt;paperless-gpt-auto&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LLM_PROVIDER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AI backend (&lt;code&gt;openai&lt;/code&gt; or &lt;code&gt;ollama&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LLM_MODEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AI model name, e.g. &lt;code&gt;gpt-4o&lt;/code&gt;, &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;, &lt;code&gt;llama2&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI API key (required if using OpenAI).&lt;/td&gt; &#xA;   &lt;td&gt;Cond.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_BASE_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI base URL (optional, if using a custom OpenAI compatible service like LiteLLM).&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LLM_LANGUAGE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Likely language for documents (e.g. &lt;code&gt;English&lt;/code&gt;). Default: &lt;code&gt;English&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OLLAMA_HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ollama server URL (e.g. &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;VISION_LLM_PROVIDER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AI backend for OCR (&lt;code&gt;openai&lt;/code&gt; or &lt;code&gt;ollama&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;VISION_LLM_MODEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Model name for OCR (e.g. &lt;code&gt;minicpm-v&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AUTO_OCR_TAG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tag for automatically processing docs with OCR. Default: &lt;code&gt;paperless-gpt-ocr-auto&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LOG_LEVEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Application log level (&lt;code&gt;info&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;). Default: &lt;code&gt;info&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LISTEN_INTERFACE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Network interface to listen on. Default: &lt;code&gt;:8080&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WEBUI_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path for static content. Default: &lt;code&gt;./web-app/dist&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AUTO_GENERATE_TITLE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generate titles automatically if &lt;code&gt;paperless-gpt-auto&lt;/code&gt; is used. Default: &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AUTO_GENERATE_TAGS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generate tags automatically if &lt;code&gt;paperless-gpt-auto&lt;/code&gt; is used. Default: &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OCR_LIMIT_PAGES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Limit the number of pages for OCR. Set to &lt;code&gt;0&lt;/code&gt; for no limit. Default: &lt;code&gt;5&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Custom Prompt Templates&lt;/h3&gt; &#xA;&lt;p&gt;paperless-gpt’s flexible &lt;strong&gt;prompt templates&lt;/strong&gt; let you shape how AI responds:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;title_prompt.tmpl&lt;/code&gt;&lt;/strong&gt;: For document titles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;tag_prompt.tmpl&lt;/code&gt;&lt;/strong&gt;: For tagging logic.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;ocr_prompt.tmpl&lt;/code&gt;&lt;/strong&gt;: For LLM OCR.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Mount them into your container via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  volumes:&#xA;    - ./prompts:/app/prompts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then tweak at will—&lt;strong&gt;paperless-gpt&lt;/strong&gt; reloads them automatically on startup!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tag Documents&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;paperless-gpt&lt;/code&gt; or your custom tag to the docs you want to AI-ify.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Visit Web UI&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Go to &lt;code&gt;http://localhost:8080&lt;/code&gt; (or your host) in your browser.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generate &amp;amp; Apply Suggestions&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click “Generate Suggestions” to see AI-proposed titles/tags.&lt;/li&gt; &#xA;   &lt;li&gt;Approve, edit, or discard. Hit “Apply” to finalize in paperless-ngx.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Try LLM-Based OCR (Experimental)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you enabled &lt;code&gt;VISION_LLM_PROVIDER&lt;/code&gt; and &lt;code&gt;VISION_LLM_MODEL&lt;/code&gt;, let AI-based OCR read your scanned PDFs.&lt;/li&gt; &#xA;   &lt;li&gt;Tag those documents with &lt;code&gt;paperless-gpt-ocr-auto&lt;/code&gt; (or your custom &lt;code&gt;AUTO_OCR_TAG&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: The entire pipeline can be &lt;strong&gt;fully automated&lt;/strong&gt; if you prefer minimal manual intervention.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;LLM-Based OCR: Compare for Yourself&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to expand the vanilla OCR vs. AI-powered OCR comparison&lt;/summary&gt; &#xA; &lt;h3&gt;Example 1&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Image&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/demo/ocr-example1.jpg&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Vanilla Paperless-ngx OCR&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;La Grande Recre&#xA;&#xA;Gentre Gommercial 1&#39;Esplanade&#xA;1349 LOLNAIN LA NEWWE&#xA;TA BERBOGAAL Tel =. 010 45,96 12&#xA;Ticket 1440112 03/11/2006 a 13597:&#xA;4007176614518. DINOS. TYRAMNESA&#xA;TOTAET.T.LES&#xA;ReslE par Lask-Euron&#xA;Rencu en Cash Euro&#xA;V.14.6 -Hotgese = VALERTE&#xA;TICKET A-GONGERVER PORR TONT. EEHANGE&#xA;HERET ET A BIENTOT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;LLM-Powered OCR (OpenAI gpt-4o)&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;La Grande Récré&#xA;Centre Commercial l&#39;Esplanade&#xA;1348 LOUVAIN LA NEUVE&#xA;TVA 860826401 Tel : 010 45 95 12&#xA;Ticket 14421 le 03/11/2006 à 15:27:18&#xA;4007176614518 DINOS TYRANNOSA 14.90&#xA;TOTAL T.T.C. 14.90&#xA;Réglé par Cash Euro 50.00&#xA;Rendu en Cash Euro 35.10&#xA;V.14.6 Hôtesse : VALERIE&#xA;TICKET A CONSERVER POUR TOUT ECHANGE&#xA;MERCI ET A BIENTOT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA; &lt;h3&gt;Example 2&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Image&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/demo/ocr-example2.jpg&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Vanilla Paperless-ngx OCR&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;Invoice Number: 1-996-84199&#xA;&#xA;Fed: Invoica Date: Sep01, 2014&#xA;Accaunt Number: 1334-8037-4&#xA;Page: 1012&#xA;&#xA;Fod£x Tax ID 71.0427007&#xA;&#xA;IRISINC&#xA;SHARON ANDERSON&#xA;4731 W ATLANTIC AVE STE BI&#xA;DELRAY BEACH FL 33445-3897 ’ a&#xA;Invoice Questions?&#xA;&#xA;Bing, ‚Account Shipping Address: Contact FedEx Reı&#xA;&#xA;ISINC&#xA;4731 W ATLANTIC AVE Phone: (800) 622-1147 M-F 7-6 (CST)&#xA;DELRAY BEACH FL 33445-3897 US Fax: (800) 548-3020&#xA;&#xA;Internet: www.fedex.com&#xA;&#xA;Invoice Summary Sep 01, 2014&#xA;&#xA;FodEx Ground Services&#xA;Other Charges 11.00&#xA;Total Charges 11.00 Da £&#xA;&amp;gt;&#xA;polo) Fz// /G&#xA;TOTAL THIS INVOICE .... usps 11.00 P 2/1 f&#xA;&#xA;‘The only charges accrued for this period is the Weekly Service Charge.&#xA;&#xA;The Fedix Ground aceounts teferencedin his involce have been transteired and assigned 10, are owned by,andare payable to FedEx Express:&#xA;&#xA;To onsurs propor credit, plasa raturn this portion wirh your payment 10 FodEx&#xA;‚Please do not staple or fold. Ploase make your chack payablı to FedEx.&#xA;&#xA;[TI For change ol address, hc har and camphat lrm or never ide&#xA;&#xA;Remittance Advice&#xA;Your payment is due by Sep 16, 2004&#xA;&#xA;Number Number Dus&#xA;&#xA;1334803719968 41993200000110071&#xA;&#xA;AT 01 0391292 468448196 A**aDGT&#xA;&#xA;IRISINC Illallun elalalssollallansdHilalellund&#xA;SHARON ANDERSON&#xA;&#xA;4731 W ATLANTIC AVE STEBI FedEx&#xA;&#xA;DELRAY BEACH FL 334453897 PO. Box 94516&#xA;&#xA;PALATINE IL 60094-4515&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;LLM-Powered OCR (OpenAI gpt-4o)&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;FedEx.                                                                                      Invoice Number: 1-996-84199&#xA;                                                                                           Invoice Date: Sep 01, 2014&#xA;                                                                                           Account Number: 1334-8037-4&#xA;                                                                                           Page: 1 of 2&#xA;                                                                                           FedEx Tax ID: 71-0427007&#xA;&#xA;I R I S INC&#xA;SHARON ANDERSON&#xA;4731 W ATLANTIC AVE STE B1&#xA;DELRAY BEACH FL 33445-3897&#xA;                                                                                           Invoice Questions?&#xA;Billing Account Shipping Address:                                                          Contact FedEx Revenue Services&#xA;I R I S INC                                                                                Phone: (800) 622-1147 M-F 7-6 (CST)&#xA;4731 W ATLANTIC AVE                                                                        Fax: (800) 548-3020&#xA;DELRAY BEACH FL 33445-3897 US                                                              Internet: www.fedex.com&#xA;&#xA;Invoice Summary Sep 01, 2014&#xA;&#xA;FedEx Ground Services&#xA;Other Charges                                                                 11.00&#xA;&#xA;Total Charges .......................................................... USD $          11.00&#xA;&#xA;TOTAL THIS INVOICE .............................................. USD $                 11.00&#xA;&#xA;The only charges accrued for this period is the Weekly Service Charge.&#xA;&#xA;                                                                                           RECEIVED&#xA;                                                                                           SEP _ 8 REC&#39;D&#xA;                                                                                           BY: _&#xA;&#xA;                                                                                           posted 9/21/14&#xA;&#xA;The FedEx Ground accounts referenced in this invoice have been transferred and assigned to, are owned by, and are payable to FedEx Express.&#xA;&#xA;To ensure proper credit, please return this portion with your payment to FedEx.&#xA;Please do not staple or fold. Please make your check payable to FedEx.&#xA;&#xA;❑ For change of address, check here and complete form on reverse side.&#xA;&#xA;Remittance Advice&#xA;Your payment is due by Sep 16, 2004&#xA;&#xA;Invoice&#xA;Number&#xA;1-996-84199&#xA;&#xA;Account&#xA;Number&#xA;1334-8037-4&#xA;&#xA;Amount&#xA;Due&#xA;USD $ 11.00&#xA;&#xA;133480371996841993200000110071&#xA;&#xA;AT 01 031292 468448196 A**3DGT&#xA;&#xA;I R I S INC&#xA;SHARON ANDERSON&#xA;4731 W ATLANTIC AVE STE B1&#xA;DELRAY BEACH FL 33445-3897&#xA;&#xA;FedEx&#xA;P.O. Box 94515&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why Does It Matter?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Traditional OCR often jumbles text from complex or low-quality scans.&lt;/li&gt; &#xA; &lt;li&gt;Large Language Models interpret context and correct likely errors, producing results that are more precise and readable.&lt;/li&gt; &#xA; &lt;li&gt;You can integrate these cleaned-up texts into your &lt;strong&gt;paperless-ngx&lt;/strong&gt; pipeline for better tagging, searching, and archiving.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How It Works&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vanilla OCR&lt;/strong&gt; typically uses classical methods or Tesseract-like engines to extract text, which can result in garbled outputs for complex fonts or poor-quality scans.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LLM-Powered OCR&lt;/strong&gt; uses your chosen AI backend—OpenAI or Ollama—to interpret the image’s text in a more context-aware manner. This leads to fewer errors and more coherent text.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pull requests&lt;/strong&gt; and &lt;strong&gt;issues&lt;/strong&gt; are welcome!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repo&lt;/li&gt; &#xA; &lt;li&gt;Create a branch (&lt;code&gt;feature/my-awesome-update&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit changes (&lt;code&gt;git commit -m &#34;Improve X&#34;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a PR&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;paperless-gpt is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/icereed/paperless-gpt/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;. Feel free to adapt and share!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#icereed/paperless-gpt&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=icereed/paperless-gpt&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project is &lt;strong&gt;not&lt;/strong&gt; officially affiliated with &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx&#34;&gt;paperless-ngx&lt;/a&gt;. Use at your own risk.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;paperless-gpt&lt;/strong&gt;: The &lt;strong&gt;LLM-based&lt;/strong&gt; companion your doc management has been waiting for. Enjoy effortless, intelligent document titles, tags, and next-level OCR.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dlvhdr/gh-dash</title>
    <updated>2025-01-13T01:30:56Z</updated>
    <id>tag:github.com,2025-01-13:/dlvhdr/gh-dash</id>
    <link href="https://github.com/dlvhdr/gh-dash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A beautiful CLI dashboard for GitHub 🚀&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gh-dash&lt;/h1&gt; &#xA;&lt;p&gt;✨ A GitHub (&lt;code&gt;gh&lt;/code&gt;) CLI extension to display a dashboard with &lt;strong&gt;pull requests&lt;/strong&gt; and &lt;strong&gt;issues&lt;/strong&gt; by filters you care about.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/charmbracelet/bubbletea/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/dlvhdr/gh-dash.svg?sanitize=true&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/6196971/198704107-6775a0ba-669d-418b-9ae9-59228aaa84d1.gif&#34;&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌅 fully configurable - define sections using GitHub filters&lt;/li&gt; &#xA; &lt;li&gt;🔍 search for both prs and issues&lt;/li&gt; &#xA; &lt;li&gt;📝 customize columns with &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;grow&lt;/code&gt; props&lt;/li&gt; &#xA; &lt;li&gt;⚡️ act on prs and issues with checkout, comment, open, merge, diff, etc...&lt;/li&gt; &#xA; &lt;li&gt;⌨️ set custom actions with new keybindings&lt;/li&gt; &#xA; &lt;li&gt;💅 use custom themes&lt;/li&gt; &#xA; &lt;li&gt;🔭 view details about a pr/issue with a detailed sidebar&lt;/li&gt; &#xA; &lt;li&gt;🪟 write multiple configuration files to easily switch between completely different dashboards&lt;/li&gt; &#xA; &lt;li&gt;♻️ set an interval for auto refreshing the dashboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📃 Docs&lt;/h2&gt; &#xA;&lt;p&gt;See the docs site at &lt;a href=&#34;https://dlvhdr.github.io/gh-dash&#34;&gt;dlvhdr.github.io/gh-dash&lt;/a&gt; to get started, or just skim this README.&lt;/p&gt; &#xA;&lt;h2&gt;📦 Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the &lt;code&gt;gh&lt;/code&gt; CLI - see the &lt;a href=&#34;https://github.com/cli/cli#installation&#34;&gt;installation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Installation requires a minimum version (2.0.0) of the GitHub CLI that supports extensions.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install this extension:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gh extension install dlvhdr/gh-dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To get the icons to render properly you should download and install a Nerd font from &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;https://www.nerdfonts.com/&lt;/a&gt;. Then, select that font as your font for the terminal.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Installing Manually&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;If you want to install this extension &lt;strong&gt;manually&lt;/strong&gt;, follow these steps:&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Clone the repo&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# git&#xA;git clone https://github.com/dlvhdr/gh-dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# GitHub CLI&#xA;gh repo clone dlvhdr/gh-dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Cd into it&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd gh-dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build it&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Install it locally&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gh extension install .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;   &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Updating from an older version&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gh extension upgrade dlvhdr/gh-dash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do I get these exact colors and font?&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;I&#39;m using &lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;Alacritty&lt;/a&gt; with the &lt;a href=&#34;https://github.com/folke/tokyonight.nvim&#34;&gt;tokyonight theme&lt;/a&gt; and the &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/FiraCode&#34;&gt;Fira Code&lt;/a&gt; Nerd Font. For my full setup check out &lt;a href=&#34;https://github.com/dlvhdr/dotfiles/raw/main/.config/alacritty/alacritty.yml&#34;&gt;my dotfiles&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;⚡️ Usage&lt;/h2&gt; &#xA;&lt;p&gt;Run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gh dash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then press &lt;kbd&gt;?&lt;/kbd&gt; for help.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;gh dash --help&lt;/code&gt; for more info:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  gh dash [flags]&#xA;&#xA;Flags:&#xA;  -c, --config string   use this configuration file &#xA;                        (default lookup:&#xA;                          1. a .gh-dash.yml file if inside a git repo&#xA;                          2. $GH_DASH_CONFIG env var&#xA;                          3. $XDG_CONFIG_HOME/gh-dash/config.yml&#xA;                        )&#xA;      --debug           passing this flag will allow writing debug output to debug.log&#xA;  -h, --help            help for gh-dash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚙️ Configuring&lt;/h2&gt; &#xA;&lt;p&gt;A section is defined by a:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;title - shown in the TUI&lt;/li&gt; &#xA; &lt;li&gt;filters - how the repo&#39;s PRs should be filtered - these are plain &lt;a href=&#34;https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests&#34;&gt;GitHub filters&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All configuration is provided within a &lt;code&gt;config.yml&lt;/code&gt; file under the extension&#39;s directory (either a &lt;code&gt;.gh-dash.yml&lt;/code&gt; file if inside a repo, &lt;code&gt;$XDG_CONFIG_HOME/gh-dash&lt;/code&gt; or &lt;code&gt;~/.config/gh-dash/&lt;/code&gt; or your OS config dir) or &lt;code&gt;$GH_DASH_CONFIG&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An example &lt;code&gt;config.yml&lt;/code&gt; file contains:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;prSections:&#xA;  - title: My Pull Requests&#xA;    filters: is:open author:@me&#xA;    layout:&#xA;      author:&#xA;        hidden: true&#xA;        # width: &amp;lt;number of columns&amp;gt;&#xA;        # grow: &amp;lt;bool&amp;gt; this will make the column grow in size&#xA;  - title: Needs My Review&#xA;    filters: is:open review-requested:@me&#xA;  - title: Subscribed&#xA;    filters: is:open -author:@me repo:cli/cli repo:dlvhdr/gh-dash&#xA;    limit: 50 # optional limit of rows fetched for this section&#xA;issuesSections:&#xA;  - title: Created&#xA;    filters: is:open author:@me&#xA;  - title: Assigned&#xA;    filters: is:open assignee:@me&#xA;  - title: Subscribed&#xA;    filters: is:open -author:@me repo:microsoft/vscode repo:dlvhdr/gh-dash&#xA;defaults:&#xA;  layout:&#xA;    prs:&#xA;      repo:&#xA;        grow: true,&#xA;        width: 10&#xA;        hidden: false&#xA;    # issues: same structure as prs&#xA;  prsLimit: 20 # global limit&#xA;  issuesLimit: 20 # global limit&#xA;  preview:&#xA;    open: true # whether to have the preview pane open by default&#xA;    width: 60 # width in columns&#xA;  refetchIntervalMinutes: 30 # will re-fetch all sections every 30 minutes&#xA;repoPaths: # configure where to locate repos when checking out PRs&#xA;  :owner/:repo: ~/src/github.com/:owner/:repo # template if you always clone GitHub repos in a consistent location&#xA;  dlvhdr/*: ~/code/repos/dlvhdr/* # will match dlvhdr/repo-name to ~/code/repos/dlvhdr/repo-name&#xA;  dlvhdr/gh-dash: ~/code/gh-dash # will not match wildcard and map to specified path&#xA;keybindings: # optional, define custom keybindings - see more info below&#xA;theme: # optional, see more info below&#xA;pager:&#xA;  diff: less # or delta for example&#xA;confirmQuit: false # show prompt on quit or not&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🗃 Running with a different config file&lt;/h3&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;gh dash --config &amp;lt;path-to-file&amp;gt;&lt;/code&gt; to run &lt;code&gt;gh-dash&lt;/code&gt; against another config file.&lt;/p&gt; &#xA;&lt;p&gt;This lets you easily define multiple dashboards with different sections.&lt;br&gt; It can be useful if you want to have a 🧳 work and 👩‍💻 personal dashboards, or if you want to view multiple dashboards at the same time.&lt;/p&gt; &#xA;&lt;h3&gt;⌨️ Keybindings&lt;/h3&gt; &#xA;&lt;p&gt;You can:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Override the builtin commands keybindings&lt;/li&gt; &#xA; &lt;li&gt;Define your own custom keybindings to run bash commands using &lt;a href=&#34;https://pkg.go.dev/text/template&#34;&gt;Go Templates&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Overriding builtin commands keybindings&lt;/h4&gt; &#xA;&lt;p&gt;To override the &#34;checkout&#34; keybinding you can include this in your &lt;code&gt;config.yml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;keybindings:&#xA;  prs:&#xA;    - key: O&#xA;      builtin: checkout&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The list of available builtin commands are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;universal&lt;/code&gt;: up, down, firstLine, lastLine, togglePreview, openGithub, refresh, refreshAll, pageDown, pageUp, nextSection, prevSection, search, copyurl, copyNumber, help, quit&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prs&lt;/code&gt;: approve, assign, unassign, comment, diff, checkout, close, ready, reopen, merge, update, watchChecks, viewIssues&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Issues&lt;/code&gt;: assign, unassign, comment, close, reopen, viewPrs&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To unbind the &#34;esc&#34; keybinding you can include this in your &lt;code&gt;config.yml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;keybindings:&#xA;  prs:&#xA;    - key: esc&#xA;      builtin:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Defining custom keybindings&lt;/h4&gt; &#xA;&lt;p&gt;This is available for both PRs and Issues. For PRs, the available arguments are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;RepoName&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The full name of the repo (e.g. &lt;code&gt;dlvhdr/gh-dash&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;RepoPath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The path to the Repo, using the &lt;code&gt;config.yml&lt;/code&gt; &lt;code&gt;repoPaths&lt;/code&gt; key to get the mapping&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PrNumber&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The PR number&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HeadRefName&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The PR&#39;s remote branch name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BaseRefName&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The PR&#39;s base branch name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For Issues, the available arguments are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;RepoName&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The full name of the repo (e.g. &lt;code&gt;dlvhdr/gh-dash&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;RepoPath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The path to the Repo, using the &lt;code&gt;config.yml&lt;/code&gt; &lt;code&gt;repoPaths&lt;/code&gt; key to get the mapping&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IssueNumber&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Issue number&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To review a PR with either Neovim or VSCode include the following in your &lt;code&gt;config.yml&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;repoPaths:&#xA;  dlvhdr/gh-dash: ~/code/gh-dash&#xA;&#xA;keybindings:&#xA;  prs:&#xA;    - key: c&#xA;      command: &amp;gt;&#xA;        tmux new-window -c {{.RepoPath}} &#39;&#xA;          gh pr checkout {{.PrNumber}} &amp;amp;&amp;amp;&#xA;          nvim -c &#34;:DiffviewOpen master...{{.HeadRefName}}&#34;&#xA;        &#39;&#xA;    - key: v&#xA;      command: &amp;gt;&#xA;        cd {{.RepoPath}} &amp;amp;&amp;amp;&#xA;        code . &amp;amp;&amp;amp;&#xA;        gh pr checkout {{.PrNumber}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;To pin an issue include the following in your &lt;code&gt;config.yml&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;keybindings:&#xA;  issues:&#xA;    - key: P&#xA;      command: gh issue pin {{.IssueNumber}} --repo {{.RepoName}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🚥 Repo Path Matching&lt;/h3&gt; &#xA;&lt;p&gt;Repo name to path mappings can be exact match (full name, full path) or wildcard matched using the &lt;code&gt;owner&lt;/code&gt; and partial path.&lt;/p&gt; &#xA;&lt;p&gt;An exact match for the full repo name to a full path takes priority over a matching wildcard, and wildcard matches must match to a wildcard path.&lt;/p&gt; &#xA;&lt;p&gt;An &lt;code&gt;:owner/:repo&lt;/code&gt; template can be specified as a generic fallback.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;repoPaths:&#xA;  :owner/:repo: ~/src/github.com/:owner/:repo # template if you always clone GitHub repos in a consistent location&#xA;  dlvhdr/*: ~/code/repos/dlvhdr/* # will match dlvhdr/repo-name to ~/code/repos/dlvhdr/repo-name&#xA;  dlvhdr/gh-dash: ~/code/gh-dash # will not match wildcard and map to specified path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;RepoName&lt;/code&gt; and &lt;code&gt;RepoPath&lt;/code&gt; keybinding arguments are fully expanded when sent to the command.&lt;/p&gt; &#xA;&lt;h3&gt;💅 Custom Themes&lt;/h3&gt; &#xA;&lt;p&gt;To override the default set of terminal colors and instead create your own color scheme, you can define one in your &lt;code&gt;config.yml&lt;/code&gt; file. If you choose to go this route, you need to specify &lt;em&gt;all&lt;/em&gt; of the following keys as colors in hex format (&lt;code&gt;#RRGGBB&lt;/code&gt;), otherwise validation will fail.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;theme:&#xA;  ui:&#xA;    sectionsShowCount: true&#xA;    table:&#xA;      showSeparator: true&#xA;  colors:&#xA;    text:&#xA;      primary: &#34;#E2E1ED&#34;&#xA;      secondary: &#34;#666CA6&#34;&#xA;      inverted: &#34;#242347&#34;&#xA;      faint: &#34;#3E4057&#34;&#xA;      warning: &#34;#F23D5C&#34;&#xA;      success: &#34;#3DF294&#34;&#xA;      error: &#34;#D20F39&#34;&#xA;    background:&#xA;      selected: &#34;#39386B&#34;&#xA;    border:&#xA;      primary: &#34;#383B5B&#34;&#xA;      secondary: &#34;#39386B&#34;&#xA;      faint: &#34;#2B2B40&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🪟 Layout&lt;/h3&gt; &#xA;&lt;p&gt;You can customize each section&#39;s layout as well as the global layout.&lt;/p&gt; &#xA;&lt;p&gt;For example, to hide the &lt;code&gt;author&lt;/code&gt; column for &lt;strong&gt;all&lt;/strong&gt; PR sections, include the following in your &lt;code&gt;config.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;defaults:&#xA;  layout:&#xA;    prs:&#xA;      author:&#xA;        hidden: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For &lt;code&gt;prs&lt;/code&gt; the column names are: &lt;code&gt;updatedAt, repo, author, title, reviewStatus, state, ci, lines, assignees, base&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;issues&lt;/code&gt; the column names are: &lt;code&gt;updatedAt, state, repo, title, creator, assignees, comments, reactions&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The available properties to control are: &lt;code&gt;grow&lt;/code&gt; (false, true), &lt;code&gt;width&lt;/code&gt; (number of cells), and &lt;code&gt;hidden&lt;/code&gt; (false, true).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Dolev Hadar &lt;a href=&#34;mailto:dolevc2@gmail.com&#34;&gt;dolevc2@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>