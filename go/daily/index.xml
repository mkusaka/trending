<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-25T01:31:48Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>weibaohui/k8m</title>
    <updated>2025-06-25T01:31:48Z</updated>
    <id>tag:github.com,2025-06-25:/weibaohui/k8m</id>
    <link href="https://github.com/weibaohui/k8m" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款轻量级、跨平台的 Mini Kubernetes AI Dashboard，支持大模型+智能体+MCP(支持设置操作权限)，集成多集群管理、智能分析、实时异常检测等功能，支持多架构并可单文件部署，助力高效集群管理与运维优化。&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;K8M&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/README_en.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/README.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/weibaohui/k8m/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue?style=flat-square&#34; alt=&#34;k8m&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/9fde094e5c9a1d4c530e875864ee7919b17d0690.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;k8m&lt;/strong&gt; 是一款AI驱动的 Mini Kubernetes AI Dashboard 轻量级控制台工具，专为简化集群管理设计。它基于 AMIS 构建，并通过 &lt;a href=&#34;https://github.com/weibaohui/kom&#34;&gt; &lt;code&gt;kom&lt;/code&gt;&lt;/a&gt; 作为 Kubernetes API 客户端，&lt;strong&gt;k8m&lt;/strong&gt; 内置了 Qwen2.5-Coder-7B，支持deepseek-ai/DeepSeek-R1-Distill-Qwen-7B模型 模型交互能力，同时支持接入您自己的私有化大模型（包括ollama）。&lt;/p&gt; &#xA;&lt;h3&gt;演示DEMO&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://107.150.119.151:3618&#34;&gt;DEMO&lt;/a&gt; 用户名密码 demo/demo&lt;/p&gt; &#xA;&lt;h3&gt;文档&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;详细的配置和使用说明请参考&lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/docs/README.md&#34;&gt;文档&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;更新日志请参考&lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/CHANGELOG.md&#34;&gt;更新日志&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;如需自定义大模型参数、配置私有化大模型，请参考&lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/docs/use-self-hosted-ai.md&#34;&gt;自托管/自定义大模型支持&lt;/a&gt; 和 &lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/docs/ollama.md&#34;&gt;Ollama配置&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;详细的配置选项说明请参考&lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/docs/config.md&#34;&gt;配置选项说明&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;数据库配置请参考&lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/docs/database.md&#34;&gt;数据库配置说明&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;DeepWiki 文档：&lt;a href=&#34;https://deepwiki.com/weibaohui/k8m&#34;&gt;开发设计文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;主要特点&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;迷你化设计&lt;/strong&gt;：所有功能整合在一个单一的可执行文件中，部署便捷，使用简单。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;简便易用&lt;/strong&gt;：友好的用户界面和直观的操作流程，让 Kubernetes 管理更加轻松。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;高效性能&lt;/strong&gt;：后端采用 Golang 构建，前端基于百度 AMIS，保证资源利用率高、响应速度快。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI驱动融合&lt;/strong&gt; ：基于ChatGPT实现划词解释、资源指南、YAML属性自动翻译、Describe信息解读、日志AI问诊、运行命令推荐,并集成了&lt;a href=&#34;https://github.com/k8sgpt-ai/k8sgpt&#34;&gt;k8s-gpt&lt;/a&gt; 功能，实现中文展现，为管理k8s提供智能化支持。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCP集成&lt;/strong&gt;:可视化管理MCP，实现大模型调用Tools，内置k8s多集群MCP工具49种，可组合实现超百种集群操作，可作为MCP Server 供其他大模型软件使用。轻松实现大模型管理k8s。可详细记录每一次MCP调用。支持mcp.so主流服务。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCP权限打通&lt;/strong&gt;:多集群管理权限与MCP大模型调用权限打通，一句话概述：谁使用大模型，就用谁的权限执行MCP。安全使用，无后顾之忧，避免操作越权。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多集群管理&lt;/strong&gt;：自动识别集群内部使用InCluster模式，配置kubeconfig路径后自动扫描同级目录下的配置文件，同时注册管理多个集群。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多集群权限管理&lt;/strong&gt;：支持对用户、用户组进行授权，可按集群授权，包括集群只读、Exec命令、集群管理员三种权限。对用户组授权后，组内用户均获得相应授权。支持设置命名空间黑白名单。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持k8s最新特性&lt;/strong&gt;:支持APIGateway、OpenKruise等功能特性。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pod 文件管理&lt;/strong&gt;：支持 Pod 内文件的浏览、编辑、上传、下载、删除，简化日常操作。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pod 运行管理&lt;/strong&gt;：支持实时查看 Pod 日志，下载日志，并在 Pod 内直接执行 Shell 命令。支持grep -A -B高亮搜索&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API开放&lt;/strong&gt;:支持创建API KEY，从第三方外部访问，提供swagger接口管理页面。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;集群巡检支持&lt;/strong&gt;：支持定时巡检、自定义巡检规则，支持lua脚本规则。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CRD 管理&lt;/strong&gt;：可自动发现并管理 CRD 资源，提高工作效率。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Helm 市场&lt;/strong&gt;：支持Helm自由添加仓库，一键安装、卸载、升级 Helm 应用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;跨平台支持&lt;/strong&gt;：兼容 Linux、macOS 和 Windows，并支持 x86、ARM 等多种架构，确保多平台无缝运行。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多数据库支持&lt;/strong&gt;：支持SQLite、MySql、PostgreSql等多种数据库。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;完全开源&lt;/strong&gt;：开放所有源码，无任何限制，可自由定制和扩展，可商业使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;k8m&lt;/strong&gt; 的设计理念是“AI驱动，轻便高效，化繁为简”，它帮助开发者和运维人员快速上手，轻松管理 Kubernetes 集群。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/0951d6c1-389c-49cb-b247-84de15b6ec0e&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;运行&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;下载&lt;/strong&gt;：从 &lt;a href=&#34;https://github.com/weibaohui/k8m/releases&#34;&gt;GitHub release&lt;/a&gt; 下载最新版本。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;运行&lt;/strong&gt;：使用 &lt;code&gt;./k8m&lt;/code&gt; 命令启动,访问&lt;a href=&#34;http://127.0.0.1:3618&#34;&gt;http://127.0.0.1:3618&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;登录用户名密码&lt;/strong&gt;： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;用户名：&lt;code&gt;k8m&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;密码：&lt;code&gt;k8m&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;请注意上线后修改用户名密码、启用两步验证。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;参数&lt;/strong&gt;：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Usage of ./k8m:&#xA;      --enable-temp-admin                是否启用临时管理员账户配置，默认关闭&#xA;      --admin-password string            管理员密码，启用临时管理员账户配置后生效 &#xA;      --admin-username string            管理员用户名，启用临时管理员账户配置后生效&#xA;      --print-config                     是否打印配置信息 (default false)&#xA;      --connect-cluster                  启动集群是是否自动连接现有集群，默认关闭&#xA;  -d, --debug                            调试模式&#xA;      --in-cluster                       是否自动注册纳管宿主集群，默认启用&#xA;      --jwt-token-secret string          登录后生成JWT token 使用的Secret (default &#34;your-secret-key&#34;)&#xA;  -c, --kubeconfig string                kubeconfig文件路径 (default &#34;/root/.kube/config&#34;)&#xA;      --kubectl-shell-image string       Kubectl Shell 镜像。默认为 bitnami/kubectl:latest，必须包含kubectl命令 (default &#34;bitnami/kubectl:latest&#34;)&#xA;      --log-v int                        klog的日志级别klog.V(2) (default 2)&#xA;      --login-type string                登录方式，password, oauth, token等,default is password (default &#34;password&#34;)&#xA;      --image-pull-timeout               Node Shell、Kubectl Shell 镜像拉取超时时间。默认为 30 秒&#xA;      --node-shell-image string          NodeShell 镜像。 默认为 alpine:latest，必须包含`nsenter`命令 (default &#34;alpine:latest&#34;)&#xA;  -p, --port int                         监听端口 (default 3618)&#xA;  -v, --v Level                          klog的日志级别 (default 2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;也可以直接通过docker-compose(推荐)启动：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  k8m:&#xA;    container_name: k8m&#xA;    image: registry.cn-hangzhou.aliyuncs.com/minik8m/k8m&#xA;    restart: always&#xA;    ports:&#xA;      - &#34;3618:3618&#34;&#xA;    environment:&#xA;      TZ: Asia/Shanghai&#xA;    volumes:&#xA;      - ./data:/app/data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动之后，访问&lt;code&gt;3618&lt;/code&gt;端口，默认用户：&lt;code&gt;k8m&lt;/code&gt;，默认密码&lt;code&gt;k8m&lt;/code&gt;。 如果你想通过在线环境快速拉起体验，可以访问：&lt;a href=&#34;https://cnb.cool/znb/qifei/-/tree/main/letsfly/justforfun/k8m&#34;&gt;k8m&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;ChatGPT 配置指南&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;内置GPT&lt;/h3&gt; &#xA;&lt;p&gt;从v0.0.8版本开始，将内置GPT，无需配置。 如果您需要使用自己的GPT，请参考以下文档。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/use-self-hosted-ai.md&#34;&gt;自托管/自定义大模型支持&lt;/a&gt; - 如何使用自托管的&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/ollama.md&#34;&gt;Ollama配置&lt;/a&gt; - 如何配置使用Ollama大模型。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;ChatGPT 状态调试&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;如果设置参数后，依然没有效果，请尝试使用&lt;code&gt;./k8m -v 6&lt;/code&gt;获取更多的调试信息。 会输出以下信息，通过查看日志，确认是否启用ChatGPT。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;ChatGPT 开启状态:true&#xA;ChatGPT 启用 key:sk-hl**********************************************, url:https: // api.siliconflow.cn/v1&#xA;ChatGPT 使用环境变量中设置的模型:Qwen/Qwen2.5-7B-Instruc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;strong&gt;ChatGPT 账户&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;本项目集成了&lt;a href=&#34;https://github.com/sashabaranov/go-openai&#34;&gt;github.com/sashabaranov/go-openai&lt;/a&gt;SDK。 国内访问推荐使用&lt;a href=&#34;https://cloud.siliconflow.cn/&#34;&gt;硅基流动&lt;/a&gt;的服务。 登录后，在&lt;a href=&#34;https://cloud.siliconflow.cn/account/ak&#34;&gt;https://cloud.siliconflow.cn/account/ak&lt;/a&gt;创建API_KEY&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;k8m 支持环境变量设置&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;k8m 支持通过环境变量和命令行参数灵活配置，主要参数如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;环境变量&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;3618&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;监听的端口号&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KUBECONFIG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;~/.kube/config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubeconfig&lt;/code&gt; 文件路径，会自动扫描识别同级目录下所有的配置文件&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ANY_SELECT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;true&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;是否开启任意选择划词解释，默认开启 (default true)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LOGIN_TYPE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;password&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;登录方式（如 &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;oauth&lt;/code&gt;, &lt;code&gt;token&lt;/code&gt;）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ENABLE_TEMP_ADMIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;false&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;是否启用临时管理员账户配置，默认关闭。初次登录、忘记密码时使用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ADMIN_USERNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;管理员用户名，启用临时管理员账户配置后生效&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ADMIN_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;管理员密码，启用临时管理员账户配置后生效&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;false&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;是否开启 &lt;code&gt;debug&lt;/code&gt; 模式&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LOG_V&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;2&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;log输出日志，同klog用法&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;JWT_TOKEN_SECRET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;your-secret-key&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;用于 JWT Token 生成的密钥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KUBECTL_SHELL_IMAGE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bitnami/kubectl:latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;kubectl shell 镜像地址&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;NODE_SHELL_IMAGE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;alpine:latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node shell 镜像地址&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMAGE_PULL_TIMEOUT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node shell、kubectl shell 镜像拉取超时时间（秒）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CONNECT_CLUSTER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;false&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;启动程序后，是否自动连接发现的集群，默认关闭&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PRINT_CONFIG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;false&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;是否打印配置信息&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;详细参数说明和更多配置方式请参考 &lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/docs/README.md&#34;&gt;docs/readme.md&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;这些环境变量可以通过在运行应用程序时设置，例如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export PORT=8080&#xA;export GIN_MODE=&#34;release&#34;&#xA;./k8m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其他参数请参考 &lt;a href=&#34;https://raw.githubusercontent.com/weibaohui/k8m/main/docs/README.md&#34;&gt;docs/readme.md&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;容器化k8s集群方式运行&lt;/h2&gt; &#xA;&lt;p&gt;使用&lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/&#34;&gt;KinD&lt;/a&gt;、&lt;a href=&#34;https://minikube.sigs.k8s.io/docs/start/&#34;&gt;MiniKube&lt;/a&gt; 安装一个小型k8s集群&lt;/p&gt; &#xA;&lt;h2&gt;KinD方式&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;创建 KinD Kubernetes 集群&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;创建新的 Kubernetes 集群：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;kind create cluster --name k8sgpt-demo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;将k8m部署到集群中体验&lt;/h2&gt; &#xA;&lt;h3&gt;安装脚本&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/weibaohui/k8m/refs/heads/main/deploy/k8m.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;访问： 默认使用了nodePort开放，请访问31999端口。或自行配置Ingress &lt;a href=&#34;http://NodePortIP:31999&#34;&gt;http://NodePortIP:31999&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;修改配置&lt;/h3&gt; &#xA;&lt;p&gt;首选建议通过修改环境变量方式进行修改。 例如增加deploy.yaml中的env参数&lt;/p&gt; &#xA;&lt;h2&gt;开发调试&lt;/h2&gt; &#xA;&lt;p&gt;如果你想在本地开发调试，请先执行一次本地前端构建，自动生成dist目录。因为本项目采用了二进制嵌入，没有dist前端会报错。&lt;/p&gt; &#xA;&lt;h4&gt;第一步编译前端&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ui&#xA;pnpm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;编译调试后端&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;air&#xA;#或者&#xA;go run main.go &#xA;# 监听localhost:3618端口&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;前端热加载&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ui&#xA;pnpm run dev&#xA;#Vite服务会监听在localhost:3000端口&#xA;#Vite转发后端访问到3618端口&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;访问&lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;HELP &amp;amp; SUPPORT&lt;/h3&gt; &#xA;&lt;p&gt;如果你有任何进一步的问题或需要额外的帮助，请随时与我联系！&lt;/p&gt; &#xA;&lt;h3&gt;特别鸣谢&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zhaomingcheng01&#34;&gt;zhaomingcheng01&lt;/a&gt;：提出了诸多非常高质量的建议，为k8m的易用好用做出了卓越贡献~&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/La0jin&#34;&gt;La0jin&lt;/a&gt;:提供在线资源及维护，极大提升了k8m的展示效果&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eryajf&#34;&gt;eryajf&lt;/a&gt;:为我们提供了非常好用的github actions，为k8m增加了自动化的发版、构建、发布等功能&lt;/p&gt; &#xA;&lt;h2&gt;联系我&lt;/h2&gt; &#xA;&lt;p&gt;微信（大罗马的太阳） 搜索ID：daluomadetaiyang,备注k8m。 &lt;br&gt;&lt;img width=&#34;214&#34; alt=&#34;Image&#34; src=&#34;https://github.com/user-attachments/assets/166db141-42c5-42c4-9964-8e25cf12d04c&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;微信群&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://foruda.gitee.com/images/1750260119732715094/a1ed9e5b_77493.png&#34; alt=&#34;输入图片说明&#34; title=&#34;屏幕截图&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>