<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-09T01:36:38Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hyperledger/fabric-samples</title>
    <updated>2022-11-09T01:36:38Z</updated>
    <id>tag:github.com,2022-11-09:/hyperledger/fabric-samples</id>
    <link href="https://github.com/hyperledger/fabric-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hyperledger Fabric Samples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/Hyperledger/Fabric-Samples/_build/latest?definitionId=28&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/Hyperledger/Fabric-Samples/_apis/build/status/Fabric-Samples?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use Fabric samples to get started working with Hyperledger Fabric, explore important Fabric features, and learn how to build applications that can interact with blockchain networks using the Fabric SDKs. To learn more about Hyperledger Fabric, visit the &lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest&#34;&gt;Fabric documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started with the Fabric samples&lt;/h2&gt; &#xA;&lt;p&gt;To use the Fabric samples, you need to download the Fabric Docker images and the Fabric CLI tools. First, make sure that you have installed all of the &lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html&#34;&gt;Fabric prerequisites&lt;/a&gt;. You can then follow the instructions to &lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest/install.html&#34;&gt;Install the Fabric Samples, Binaries, and Docker Images&lt;/a&gt; in the Fabric documentation. In addition to downloading the Fabric images and tool binaries, the Fabric samples will also be cloned to your local machine.&lt;/p&gt; &#xA;&lt;h2&gt;Test network&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/test-network&#34;&gt;Fabric test network&lt;/a&gt; in the samples repository provides a Docker Compose based test network with two Organization peers and an ordering service node. You can use it on your local machine to run the samples listed below. You can also use it to deploy and test your own Fabric chaincodes and applications. To get started, see the &lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest/test_network.html&#34;&gt;test network tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/test-network-k8s&#34;&gt;Kubernetes Test Network&lt;/a&gt; sample builds upon the Compose network, constructing a Fabric network with peer, orderer, and CA infrastructure nodes running on Kubernetes. In addition to providing a sample Kubernetes guide, the Kube test network can be used as a platform to author and debug &lt;em&gt;cloud ready&lt;/em&gt; Fabric Client applications on a development or CI workstation.&lt;/p&gt; &#xA;&lt;h2&gt;Asset transfer samples and tutorials&lt;/h2&gt; &#xA;&lt;p&gt;The asset transfer series provides a series of sample smart contracts and applications to demonstrate how to store and transfer assets using Hyperledger Fabric. Each sample and associated tutorial in the series demonstrates a different core capability in Hyperledger Fabric. The &lt;strong&gt;Basic&lt;/strong&gt; sample provides an introduction on how to write smart contracts and how to interact with a Fabric network using the Fabric SDKs. The &lt;strong&gt;Ledger queries&lt;/strong&gt;, &lt;strong&gt;Private data&lt;/strong&gt;, and &lt;strong&gt;State-based endorsement&lt;/strong&gt; samples demonstrate these additional capabilities. Finally, the &lt;strong&gt;Secured agreement&lt;/strong&gt; sample demonstrates how to bring all the capabilities together to securely transfer an asset in a more realistic transfer scenario.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Smart Contract&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Tutorial&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Smart contract languages&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Application languages&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-basic&#34;&gt;Basic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Basic sample smart contract that allows you to create and transfer an asset by putting data on the ledger and retrieving it. This sample is recommended for new Fabric users.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html&#34;&gt;Writing your first application&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go, JavaScript, TypeScript, Java&lt;/td&gt; &#xA;   &lt;td&gt;Go, JavaScript, TypeScript, Java&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-ledger-queries&#34;&gt;Ledger queries&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The ledger queries sample demonstrates range queries and transaction updates using range queries (applicable for both LevelDB and CouchDB state databases), and how to deploy an index with your chaincode to support JSON queries (applicable for CouchDB state database only).&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest/couchdb_tutorial.html&#34;&gt;Using CouchDB&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go, JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;Java, JavaScript&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-private-data&#34;&gt;Private data&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This sample demonstrates the use of private data collections, how to manage private data collections with the chaincode lifecycle, and how the private data hash can be used to verify private data on the ledger. It also demonstrates how to control asset updates and transfers using client-based ownership and access control.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest/private_data_tutorial.html&#34;&gt;Using Private Data&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go, Java&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-sbe&#34;&gt;State-Based Endorsement&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This sample demonstrates how to override the chaincode-level endorsement policy to set endorsement policies at the key-level (data/asset level).&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hyperledger/fabric-samples/tree/main/asset-transfer-sbe&#34;&gt;Using State-based endorsement&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java, TypeScript&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-secured-agreement&#34;&gt;Secured agreement&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Smart contract that uses implicit private data collections, state-based endorsement, and organization-based ownership and access control to keep data private and securely transfer an asset with the consent of both the current owner and buyer.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest/secured_asset_transfer/secured_private_asset_transfer_tutorial.html&#34;&gt;Secured asset transfer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-events&#34;&gt;Events&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The events sample demonstrates how smart contracts can emit events that are read by the applications interacting with the network.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-events/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript, Java&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-abac&#34;&gt;Attribute-based access control&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates the use of attribute and identity based access control using a simple asset transfer scenario&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-abac/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Additional samples&lt;/h2&gt; &#xA;&lt;p&gt;Additional samples demonstrate various Fabric use cases and application patterns.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Sample&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/off_chain_data&#34;&gt;Off chain data&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to use block events to build an off-chain database for reporting and analytics.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/latest/peer_event_services.html&#34;&gt;Peer channel-based event services&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-erc-20&#34;&gt;Token ERC-20&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Smart contract demonstrating how to create and transfer fungible tokens using an account-based model.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-erc-20/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-utxo&#34;&gt;Token UTXO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Smart contract demonstrating how to create and transfer fungible tokens using a UTXO (unspent transaction output) model.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-utxo/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-erc-1155&#34;&gt;Token ERC-1155&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Smart contract demonstrating how to create and transfer multiple tokens (both fungible and non-fungible) using an account based model.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-erc-1155/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-erc-721&#34;&gt;Token ERC-721&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Smart contract demonstrating how to create and transfer non-fungible tokens using an account-based model.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-erc-721/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/high-throughput&#34;&gt;High throughput&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how you can design your smart contract to avoid transaction collisions in high volume environments.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/high-throughput/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/auction-simple&#34;&gt;Simple Auction&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run an auction where bids are kept private until the auction is closed, after which users can reveal their bid.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/auction-simple/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/auction-dutch&#34;&gt;Dutch Auction&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run an auction in which multiple items of the same type can be sold to more than one buyer. This example also includes the ability to add an auditor organization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/auction-dutch/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/chaincode&#34;&gt;Chaincode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A set of other sample smart contracts, many of which were used in tutorials prior to the asset transfer sample series.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/interest_rate_swaps&#34;&gt;Interest rate swaps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Deprecated in favor of state based endorsement asset transfer sample&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/fabcar&#34;&gt;Fabcar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Deprecated in favor of basic asset transfer sample&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License &lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Hyperledger Project source code files are made available under the Apache License, Version 2.0 (Apache-2.0), located in the &lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file. Hyperledger Project documentation files are made available under the Creative Commons Attribution 4.0 International License (CC-BY-4.0), available at &lt;a href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;http://creativecommons.org/licenses/by/4.0/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>libp2p/go-libp2p</title>
    <updated>2022-11-09T01:36:38Z</updated>
    <id>tag:github.com,2022-11-09:/libp2p/go-libp2p</id>
    <link href="https://github.com/libp2p/go-libp2p" rel="alternate"></link>
    <summary type="html">&lt;p&gt;libp2p implementation in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/libp2p.io&#34;&gt;&lt;img width=&#34;250&#34; src=&#34;https://github.com/libp2p/libp2p/raw/master/logo/black-bg-2.png?raw=true&#34; alt=&#34;libp2p hex logo&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;The Go implementation of the libp2p Networking Stack.&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://protocol.ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://libp2p.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/project-libp2p-yellow.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/libp2p/go-libp2p&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/libp2p/go-libp2p.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discuss.libp2p.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discuss.libp2p.io/posts.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#development&#34;&gt;Development&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#using-the-go-libp2p-workspace&#34;&gt;Using the go-libp2p Workspace&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#tests&#34;&gt;Tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#packages&#34;&gt;Packages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/#supported-go-versions&#34;&gt;Supported Go Versions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libp2p/specs&#34;&gt;libp2p&lt;/a&gt; is a networking stack and library modularized out of &lt;a href=&#34;https://github.com/ipfs/ipfs&#34;&gt;The IPFS Project&lt;/a&gt;, and bundled separately for other tools to use.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;libp2p is the product of a long, and arduous quest of understanding -- a deep dive into the internet&#39;s network stack, and plentiful peer-to-peer protocols from the past. Building large-scale peer-to-peer systems has been complex and difficult in the last 15 years, and libp2p is a way to fix that. It is a &#34;network stack&#34; -- a protocol suite -- that cleanly separates concerns, and enables sophisticated applications to only use the protocols they absolutely need, without giving up interoperability and upgradeability. libp2p grew out of IPFS, but it is built so that lots of people can use it, for lots of different projects.&lt;/p&gt; &#xA;&lt;p&gt;To learn more, check out the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.libp2p.io&#34;&gt;&lt;strong&gt;Our documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.libp2p.io&#34;&gt;&lt;strong&gt;Our community discussion forum&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libp2p/specs&#34;&gt;&lt;strong&gt;The libp2p Specification&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libp2p/js-libp2p&#34;&gt;&lt;strong&gt;js-libp2p implementation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libp2p/rust-libp2p&#34;&gt;&lt;strong&gt;rust-libp2p implementation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Our roadmap for go-libp2p can be found here: &lt;a href=&#34;https://github.com/libp2p/go-libp2p/raw/master/ROADMAP.md&#34;&gt;https://github.com/libp2p/go-libp2p/blob/master/ROADMAP.md&lt;/a&gt; This document represents current projects the go-libp2p team is focused on and provides an estimation of completion targets. It is a completementary roadmap to the overarching libp2p project roadmap: &lt;a href=&#34;https://github.com/libp2p/specs/raw/master/ROADMAP.md&#34;&gt;https://github.com/libp2p/specs/blob/master/ROADMAP.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;This repository (&lt;code&gt;go-libp2p&lt;/code&gt;) serves as the entrypoint to the universe of packages that compose the Go implementation of the libp2p stack.&lt;/p&gt; &#xA;&lt;p&gt;You can start using go-libp2p in your Go application simply by adding imports from our repos, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;github.com/libp2p/go-libp2p&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;Examples can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/libp2p/go-libp2p/master/examples&#34;&gt;examples folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;go test ./...&lt;/code&gt; will run all tests in the repo.&lt;/p&gt; &#xA;&lt;h1&gt;Contribute&lt;/h1&gt; &#xA;&lt;p&gt;go-libp2p is part of &lt;a href=&#34;https://github.com/ipfs/ipfs&#34;&gt;The IPFS Project&lt;/a&gt;, and is MIT-licensed open source software. We welcome contributions big and small! Take a look at the &lt;a href=&#34;https://github.com/ipfs/community/raw/master/CONTRIBUTING.md&#34;&gt;community contributing notes&lt;/a&gt;. Please make sure to check the &lt;a href=&#34;https://github.com/ipfs/go-libp2p/issues&#34;&gt;issues&lt;/a&gt;. Search the closed ones before reporting things, and help us with the open ones.&lt;/p&gt; &#xA;&lt;p&gt;Guidelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;read the &lt;a href=&#34;https://github.com/libp2p/specs&#34;&gt;libp2p spec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ask questions or talk about things in our &lt;a href=&#34;https://discuss.libp2p.io&#34;&gt;discussion forums&lt;/a&gt;, or open an &lt;a href=&#34;https://github.com/libp2p/go-libp2p/issues&#34;&gt;issue&lt;/a&gt; for bug reports, or #libp2p on freenode.&lt;/li&gt; &#xA; &lt;li&gt;ensure you are able to contribute (no legal issues please -- we use the DCO)&lt;/li&gt; &#xA; &lt;li&gt;get in touch with @marten-seemann about how best to contribute&lt;/li&gt; &#xA; &lt;li&gt;have fun!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There&#39;s a few things you can do right now to help out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go through the modules below and &lt;strong&gt;check out existing issues&lt;/strong&gt;. This would be especially useful for modules in active development. Some knowledge of IPFS/libp2p may be required, as well as the infrasture behind it - for instance, you may need to read up on p2p and more complex operations like muxing to be able to help technically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Perform code reviews&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add tests&lt;/strong&gt;. There can never be enough tests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Go Versions&lt;/h2&gt; &#xA;&lt;p&gt;We test against and support the two most recent major releases of Go. This is informed by Go&#39;s own &lt;a href=&#34;https://go.dev/security&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>VictoriaMetrics/VictoriaMetrics</title>
    <updated>2022-11-09T01:36:38Z</updated>
    <id>tag:github.com,2022-11-09:/VictoriaMetrics/VictoriaMetrics</id>
    <link href="https://github.com/VictoriaMetrics/VictoriaMetrics" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VictoriaMetrics: fast, cost-effective monitoring solution and time series database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VictoriaMetrics&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/VictoriaMetrics/VictoriaMetrics.svg?style=flat-square&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/victoriametrics/victoria-metrics&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/victoriametrics/victoria-metrics.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slack.victoriametrics.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join%20slack-%23victoriametrics-brightgreen.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/VictoriaMetrics/VictoriaMetrics.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/VictoriaMetrics/VictoriaMetrics&#34; alt=&#34;Go Report&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/actions&#34;&gt;&lt;img src=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/workflows/main/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/VictoriaMetrics/VictoriaMetrics&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/VictoriaMetrics/VictoriaMetrics/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/logo.png&#34; width=&#34;300&#34; alt=&#34;VictoriaMetrics logo&#34;&gt; &#xA;&lt;p&gt;VictoriaMetrics is a fast, cost-effective and scalable monitoring solution and time series database.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics is available in &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;binary releases&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/victoriametrics/victoria-metrics/&#34;&gt;Docker images&lt;/a&gt;, &lt;a href=&#34;https://snapcraft.io/victoriametrics&#34;&gt;Snap packages&lt;/a&gt; and &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;source code&lt;/a&gt;. Just download &lt;a href=&#34;https://docs.victoriametrics.com/CHANGELOG.html&#34;&gt;the latest version of VictoriaMetrics&lt;/a&gt; and follow &lt;a href=&#34;https://docs.victoriametrics.com/Quick-Start.html&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The cluster version of VictoriaMetrics is available &lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about &lt;a href=&#34;https://docs.victoriametrics.com/keyConcepts.html&#34;&gt;key concepts&lt;/a&gt; of VictoriaMetrics and follow the &lt;a href=&#34;https://docs.victoriametrics.com/Quick-Start.html&#34;&gt;quick start guide&lt;/a&gt; for a better experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:info@victoriametrics.com&#34;&gt;Contact us&lt;/a&gt; if you need enterprise support for VictoriaMetrics. See &lt;a href=&#34;https://docs.victoriametrics.com/enterprise.html&#34;&gt;features available in enterprise package&lt;/a&gt;. Enterprise binaries can be downloaded and evaluated for free from &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;the releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics is developed at a fast pace, so it is recommended periodically checking the &lt;a href=&#34;https://docs.victoriametrics.com/CHANGELOG.html&#34;&gt;CHANGELOG&lt;/a&gt; and performing &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-upgrade-victoriametrics&#34;&gt;regular upgrades&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics has achieved security certifications for Database Software Development and Software-Based Monitoring Services. We apply strict security measures in everything we do. See our &lt;a href=&#34;https://victoriametrics.com/security/&#34;&gt;Security page&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Prominent features&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics has the following prominent features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It can be used as long-term storage for Prometheus. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#prometheus-setup&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;It can be used as a drop-in replacement for Prometheus in Grafana, because it supports &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#prometheus-querying-api-usage&#34;&gt;Prometheus querying API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It can be used as a drop-in replacement for Graphite in Grafana, because it supports &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#graphite-api-usage&#34;&gt;Graphite API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It features easy setup and operation: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;VictoriaMetrics consists of a single &lt;a href=&#34;https://medium.com/@valyala/stripping-dependency-bloat-in-victoriametrics-docker-image-983fb5912b0d&#34;&gt;small executable&lt;/a&gt; without external dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;All the configuration is done via explicit command-line flags with reasonable defaults.&lt;/li&gt; &#xA;   &lt;li&gt;All the data is stored in a single directory pointed by &lt;code&gt;-storageDataPath&lt;/code&gt; command-line flag.&lt;/li&gt; &#xA;   &lt;li&gt;Easy and fast backups from &lt;a href=&#34;https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;instant snapshots&lt;/a&gt; to S3 or GCS can be done with &lt;a href=&#34;https://docs.victoriametrics.com/vmbackup.html&#34;&gt;vmbackup&lt;/a&gt; / &lt;a href=&#34;https://docs.victoriametrics.com/vmrestore.html&#34;&gt;vmrestore&lt;/a&gt; tools. See &lt;a href=&#34;https://medium.com/@valyala/speeding-up-backups-for-big-time-series-databases-533c1a927883&#34;&gt;this article&lt;/a&gt; for more details.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;It implements PromQL-based query language - &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html&#34;&gt;MetricsQL&lt;/a&gt;, which provides improved functionality on top of PromQL.&lt;/li&gt; &#xA; &lt;li&gt;It provides global query view. Multiple Prometheus instances or any other data sources may ingest data into VictoriaMetrics. Later this data may be queried via a single query.&lt;/li&gt; &#xA; &lt;li&gt;It provides high performance and good vertical and horizontal scalability for both &lt;a href=&#34;https://medium.com/@valyala/high-cardinality-tsdb-benchmarks-victoriametrics-vs-timescaledb-vs-influxdb-13e6ee64dd6b&#34;&gt;data ingestion&lt;/a&gt; and &lt;a href=&#34;https://medium.com/@valyala/when-size-matters-benchmarking-victoriametrics-vs-timescale-and-influxdb-6035811952d4&#34;&gt;data querying&lt;/a&gt;. It &lt;a href=&#34;https://medium.com/@valyala/measuring-vertical-scalability-for-time-series-databases-in-google-cloud-92550d78d8ae&#34;&gt;outperforms InfluxDB and TimescaleDB by up to 20x&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It &lt;a href=&#34;https://medium.com/@valyala/insert-benchmarks-with-inch-influxdb-vs-victoriametrics-e31a41ae2893&#34;&gt;uses 10x less RAM than InfluxDB&lt;/a&gt; and &lt;a href=&#34;https://valyala.medium.com/prometheus-vs-victoriametrics-benchmark-on-node-exporter-metrics-4ca29c75590f&#34;&gt;up to 7x less RAM than Prometheus, Thanos or Cortex&lt;/a&gt; when dealing with millions of unique time series (aka &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-cardinality&#34;&gt;high cardinality&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;It is optimized for time series with &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;high churn rate&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It provides high data compression, so &lt;a href=&#34;https://medium.com/@valyala/when-size-matters-benchmarking-victoriametrics-vs-timescale-and-influxdb-6035811952d4&#34;&gt;up to 70x more data points&lt;/a&gt; may be crammed into limited storage comparing to TimescaleDB and &lt;a href=&#34;https://valyala.medium.com/prometheus-vs-victoriametrics-benchmark-on-node-exporter-metrics-4ca29c75590f&#34;&gt;up to 7x less storage space is required compared to Prometheus, Thanos or Cortex&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It is optimized for storage with high-latency IO and low IOPS (HDD and network storage in AWS, Google Cloud, Microsoft Azure, etc). See &lt;a href=&#34;https://medium.com/@valyala/high-cardinality-tsdb-benchmarks-victoriametrics-vs-timescaledb-vs-influxdb-13e6ee64dd6b&#34;&gt;disk IO graphs from these benchmarks&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A single-node VictoriaMetrics may substitute moderately sized clusters built with competing solutions such as Thanos, M3DB, Cortex, InfluxDB or TimescaleDB. See &lt;a href=&#34;https://medium.com/@valyala/measuring-vertical-scalability-for-time-series-databases-in-google-cloud-92550d78d8ae&#34;&gt;vertical scalability benchmarks&lt;/a&gt;, &lt;a href=&#34;https://medium.com/@valyala/comparing-thanos-to-victoriametrics-cluster-b193bea1683&#34;&gt;comparing Thanos to VictoriaMetrics cluster&lt;/a&gt; and &lt;a href=&#34;https://promcon.io/2019-munich/talks/remote-write-storage-wars/&#34;&gt;Remote Write Storage Wars&lt;/a&gt; talk from &lt;a href=&#34;https://promcon.io/2019-munich/talks/remote-write-storage-wars/&#34;&gt;PromCon 2019&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It protects the storage from data corruption on unclean shutdown (i.e. OOM, hardware reset or &lt;code&gt;kill -9&lt;/code&gt;) thanks to &lt;a href=&#34;https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;the storage architecture&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It supports metrics&#39; scraping, ingestion and &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#backfilling&#34;&gt;backfilling&lt;/a&gt; via the following protocols: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-scrape-prometheus-exporters-such-as-node-exporter&#34;&gt;Metrics scraping from Prometheus exporters&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#prometheus-setup&#34;&gt;Prometheus remote write API&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-prometheus-exposition-format&#34;&gt;Prometheus exposition format&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-send-data-from-influxdb-compatible-agents-such-as-telegraf&#34;&gt;InfluxDB line protocol&lt;/a&gt; over HTTP, TCP and UDP.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-send-data-from-graphite-compatible-agents-such-as-statsd&#34;&gt;Graphite plaintext protocol&lt;/a&gt; with &lt;a href=&#34;https://graphite.readthedocs.io/en/latest/tags.html#carbon&#34;&gt;tags&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#sending-data-via-telnet-put-protocol&#34;&gt;OpenTSDB put message&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#sending-opentsdb-data-via-http-apiput-requests&#34;&gt;HTTP OpenTSDB /api/put requests&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-json-line-format&#34;&gt;JSON line format&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-csv-data&#34;&gt;Arbitrary CSV data&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-native-format&#34;&gt;Native binary format&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-send-data-from-datadog-agent&#34;&gt;DataDog agent or DogStatsD&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;It supports metrics &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#relabeling&#34;&gt;relabeling&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It can deal with &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-cardinality&#34;&gt;high cardinality issues&lt;/a&gt; and &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;high churn rate&lt;/a&gt; issues via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#cardinality-limiter&#34;&gt;series limiter&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It ideally works with big amounts of time series data from APM, Kubernetes, IoT sensors, connected cars, industrial telemetry, financial data and various &lt;a href=&#34;https://docs.victoriametrics.com/enterprise.html&#34;&gt;Enterprise workloads&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It has open source &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/tree/cluster&#34;&gt;cluster version&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It can store data on &lt;a href=&#34;https://en.wikipedia.org/wiki/Network_File_System&#34;&gt;NFS-based storages&lt;/a&gt; such as &lt;a href=&#34;https://aws.amazon.com/efs/&#34;&gt;Amazon EFS&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/filestore&#34;&gt;Google Filestore&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://docs.victoriametrics.com/Articles.html&#34;&gt;various Articles about VictoriaMetrics&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Case studies and talks&lt;/h2&gt; &#xA;&lt;p&gt;Case studies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#abiosgaming&#34;&gt;AbiosGaming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#adidas&#34;&gt;adidas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#adsterra&#34;&gt;Adsterra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#arnes&#34;&gt;ARNES&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#brandwatch&#34;&gt;Brandwatch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#cern&#34;&gt;CERN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#colopl&#34;&gt;COLOPL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#dreamteam&#34;&gt;Dreamteam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#flyio&#34;&gt;Fly.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#german-research-center-for-artificial-intelligence&#34;&gt;German Research Center for Artificial Intelligence&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#grammarly&#34;&gt;Grammarly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#groove-x&#34;&gt;Groove X&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#idealode&#34;&gt;Idealo.de&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#mhi-vestas-offshore-wind&#34;&gt;MHI Vestas Offshore Wind&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#razorpay&#34;&gt;Razorpay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#percona&#34;&gt;Percona&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#sensedia&#34;&gt;Sensedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#smarkets&#34;&gt;Smarkets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#synthesio&#34;&gt;Synthesio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#wedoscom&#34;&gt;Wedos.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#wixcom&#34;&gt;Wix.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#zerodha&#34;&gt;Zerodha&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html#zhihu&#34;&gt;zhihu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://docs.victoriametrics.com/Articles.html#third-party-articles-and-slides-about-victoriametrics&#34;&gt;articles and slides about VictoriaMetrics from our users&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Operation&lt;/h2&gt; &#xA;&lt;h3&gt;How to start VictoriaMetrics&lt;/h3&gt; &#xA;&lt;p&gt;Just download &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;VictoriaMetrics executable&lt;/a&gt; or &lt;a href=&#34;https://hub.docker.com/r/victoriametrics/victoria-metrics/&#34;&gt;Docker image&lt;/a&gt; and start it with the desired command-line flags. See also &lt;a href=&#34;https://docs.victoriametrics.com/Quick-Start.html&#34;&gt;QuickStart guide&lt;/a&gt; for additional information.&lt;/p&gt; &#xA;&lt;p&gt;The following command-line flags are used the most:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-storageDataPath&lt;/code&gt; - VictoriaMetrics stores all the data in this directory. Default path is &lt;code&gt;victoria-metrics-data&lt;/code&gt; in the current working directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-retentionPeriod&lt;/code&gt; - retention for stored data. Older data is automatically deleted. Default retention is 1 month. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#retention&#34;&gt;the Retention section&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other flags have good enough default values, so set them only if you really need this. Pass &lt;code&gt;-help&lt;/code&gt; to see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#list-of-command-line-flags&#34;&gt;all the available flags with description and default values&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following docs may be useful during initial VictoriaMetrics setup:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/#how-to-scrape-prometheus-exporters-such-as-node-exporter&#34;&gt;How to set up scraping of Prometheus-compatible targets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-time-series-data&#34;&gt;How to ingest data to VictoriaMetrics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/#prometheus-setup&#34;&gt;How to set up Prometheus to write data to VictoriaMetrics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#grafana-setup&#34;&gt;How to query VictoriaMetrics via Grafana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#graphite-api-usage&#34;&gt;How to query VictoriaMetrics via Graphite API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#alerting&#34;&gt;How to handle alerts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#prometheus-querying-api-usage&#34;&gt;Prometheus querying API requests&lt;/a&gt; on port &lt;code&gt;8428&lt;/code&gt; by default.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended setting up &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#monitoring&#34;&gt;monitoring&lt;/a&gt; for VictoriaMetrics.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics is developed at a fast pace, so it is recommended periodically checking the &lt;a href=&#34;https://docs.victoriametrics.com/CHANGELOG.html&#34;&gt;CHANGELOG&lt;/a&gt; and performing &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-upgrade-victoriametrics&#34;&gt;regular upgrades&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;All the VictoriaMetrics components allow referring environment variables in command-line flags via &lt;code&gt;%{ENV_VAR}&lt;/code&gt; syntax. For example, &lt;code&gt;-metricsAuthKey=%{METRICS_AUTH_KEY}&lt;/code&gt; is automatically expanded to &lt;code&gt;-metricsAuthKey=top-secret&lt;/code&gt; if &lt;code&gt;METRICS_AUTH_KEY=top-secret&lt;/code&gt; environment variable exists at VictoriaMetrics startup. This expansion is performed by VictoriaMetrics itself.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics recursively expands &lt;code&gt;%{ENV_VAR}&lt;/code&gt; references in environment variables on startup. For example, &lt;code&gt;FOO=%{BAR}&lt;/code&gt; environment variable is expanded to &lt;code&gt;FOO=abc&lt;/code&gt; if &lt;code&gt;BAR=a%{BAZ}&lt;/code&gt; and &lt;code&gt;BAZ=bc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, all the VictoriaMetrics components allow setting flag values via environment variables according to these rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;-envflag.enable&lt;/code&gt; flag must be set.&lt;/li&gt; &#xA; &lt;li&gt;Each &lt;code&gt;.&lt;/code&gt; char in flag name must be substituted with &lt;code&gt;_&lt;/code&gt; (for example &lt;code&gt;-insert.maxQueueDuration &amp;lt;duration&amp;gt;&lt;/code&gt; will translate to &lt;code&gt;insert_maxQueueDuration=&amp;lt;duration&amp;gt;&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;For repeating flags an alternative syntax can be used by joining the different values into one using &lt;code&gt;,&lt;/code&gt; char as separator (for example &lt;code&gt;-storageNode &amp;lt;nodeA&amp;gt; -storageNode &amp;lt;nodeB&amp;gt;&lt;/code&gt; will translate to &lt;code&gt;storageNode=&amp;lt;nodeA&amp;gt;,&amp;lt;nodeB&amp;gt;&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Environment var prefix can be set via &lt;code&gt;-envflag.prefix&lt;/code&gt; flag. For instance, if &lt;code&gt;-envflag.prefix=VM_&lt;/code&gt;, then env vars must be prepended with &lt;code&gt;VM_&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configuration with snap package&lt;/h3&gt; &#xA;&lt;p&gt;Snap package for VictoriaMetrics is available &lt;a href=&#34;https://snapcraft.io/victoriametrics&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Command-line flags for Snap package can be set with following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;echo &#39;FLAGS=&#34;-selfScrapeInterval=10s -search.logSlowQueryDuration=20s&#34;&#39; &amp;gt; $SNAP_DATA/var/snap/victoriametrics/current/extra_flags&#xA;snap restart victoriametrics&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Do not change value for &lt;code&gt;-storageDataPath&lt;/code&gt; flag, because snap package has limited access to host filesystem.&lt;/p&gt; &#xA;&lt;p&gt;Changing scrape configuration is possible with text editor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;vi $SNAP_DATA/var/snap/victoriametrics/current/etc/victoriametrics-scrape-config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After changes were made, trigger config re-read with the command &lt;code&gt;curl 127.0.0.1:8248/-/reload&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Prometheus setup&lt;/h2&gt; &#xA;&lt;p&gt;Add the following lines to Prometheus config file (it is usually located at &lt;code&gt;/etc/prometheus/prometheus.yml&lt;/code&gt;) in order to send data to VictoriaMetrics:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;remote_write:&#xA;  - url: http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/write&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Substitute &lt;code&gt;&amp;lt;victoriametrics-addr&amp;gt;&lt;/code&gt; with hostname or IP address of VictoriaMetrics. Then apply new config via the following command:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kill -HUP `pidof prometheus`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Prometheus writes incoming data to local storage and replicates it to remote storage in parallel. This means that data remains available in local storage for &lt;code&gt;--storage.tsdb.retention.time&lt;/code&gt; duration even if remote storage is unavailable.&lt;/p&gt; &#xA;&lt;p&gt;If you plan sending data to VictoriaMetrics from multiple Prometheus instances, then add the following lines into &lt;code&gt;global&lt;/code&gt; section of &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#configuration-file&#34;&gt;Prometheus config&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;global:&#xA;  external_labels:&#xA;    datacenter: dc-123&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This instructs Prometheus to add &lt;code&gt;datacenter=dc-123&lt;/code&gt; label to each sample before sending it to remote storage. The label name can be arbitrary - &lt;code&gt;datacenter&lt;/code&gt; is just an example. The label value must be unique across Prometheus instances, so time series could be filtered and grouped by this label.&lt;/p&gt; &#xA;&lt;p&gt;For highly loaded Prometheus instances (200k+ samples per second) the following tuning may be applied:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;remote_write:&#xA;  - url: http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/write&#xA;    queue_config:&#xA;      max_samples_per_send: 10000&#xA;      capacity: 20000&#xA;      max_shards: 30&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Using remote write increases memory usage for Prometheus by up to ~25%. If you are experiencing issues with too high memory consumption of Prometheus, then try to lower &lt;code&gt;max_samples_per_send&lt;/code&gt; and &lt;code&gt;capacity&lt;/code&gt; params. Keep in mind that these two params are tightly connected. Read more about tuning remote write for Prometheus &lt;a href=&#34;https://prometheus.io/docs/practices/remote_write&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended upgrading Prometheus to &lt;a href=&#34;https://github.com/prometheus/prometheus/releases&#34;&gt;v2.12.0&lt;/a&gt; or newer, since previous versions may have issues with &lt;code&gt;remote_write&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Take a look also at &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt; and &lt;a href=&#34;https://docs.victoriametrics.com/vmalert.html&#34;&gt;vmalert&lt;/a&gt;, which can be used as faster and less resource-hungry alternative to Prometheus.&lt;/p&gt; &#xA;&lt;h2&gt;Grafana setup&lt;/h2&gt; &#xA;&lt;p&gt;Create &lt;a href=&#34;http://docs.grafana.org/features/datasources/prometheus/&#34;&gt;Prometheus datasource&lt;/a&gt; in Grafana with the following url:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-url&#34;&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Substitute &lt;code&gt;&amp;lt;victoriametrics-addr&amp;gt;&lt;/code&gt; with the hostname or IP address of VictoriaMetrics.&lt;/p&gt; &#xA;&lt;p&gt;Then build graphs and dashboards for the created datasource using &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/&#34;&gt;PromQL&lt;/a&gt; or &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html&#34;&gt;MetricsQL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to upgrade VictoriaMetrics&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics is developed at a fast pace, so it is recommended periodically checking &lt;a href=&#34;https://docs.victoriametrics.com/CHANGELOG.html&#34;&gt;the CHANGELOG page&lt;/a&gt; and performing regular upgrades.&lt;/p&gt; &#xA;&lt;p&gt;It is safe upgrading VictoriaMetrics to new versions unless &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;release notes&lt;/a&gt; say otherwise. It is safe skipping multiple versions during the upgrade unless &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;release notes&lt;/a&gt; say otherwise. It is recommended performing regular upgrades to the latest version, since it may contain important bug fixes, performance optimizations or new features.&lt;/p&gt; &#xA;&lt;p&gt;It is also safe downgrading to older versions unless &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;release notes&lt;/a&gt; say otherwise.&lt;/p&gt; &#xA;&lt;p&gt;The following steps must be performed during the upgrade / downgrade procedure:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Send &lt;code&gt;SIGINT&lt;/code&gt; signal to VictoriaMetrics process in order to gracefully stop it. See &lt;a href=&#34;https://stackoverflow.com/questions/33239959/send-signal-to-process-from-command-line&#34;&gt;how to send signals to processes&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Wait until the process stops. This can take a few seconds.&lt;/li&gt; &#xA; &lt;li&gt;Start the upgraded VictoriaMetrics.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Prometheus doesn&#39;t drop data during VictoriaMetrics restart. See &lt;a href=&#34;https://grafana.com/blog/2019/03/25/whats-new-in-prometheus-2.8-wal-based-remote-write/&#34;&gt;this article&lt;/a&gt; for details. The same applies also to &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;vmui&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics provides UI for query troubleshooting and exploration. The UI is available at &lt;code&gt;http://victoriametrics:8428/vmui&lt;/code&gt;. The UI allows exploring query results via graphs and tables. It also provides the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#cardinality-explorer&#34;&gt;cardinality explorer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#query-tracing&#34;&gt;query tracer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#top-queries&#34;&gt;top queries explorer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Graphs in vmui support scrolling and zooming:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Select the needed time range on the graph in order to zoom in into the selected time range. Hold &lt;code&gt;ctrl&lt;/code&gt; (or &lt;code&gt;cmd&lt;/code&gt; on MacOS) and scroll down in order to zoom out.&lt;/li&gt; &#xA; &lt;li&gt;Hold &lt;code&gt;ctrl&lt;/code&gt; (or &lt;code&gt;cmd&lt;/code&gt; on MacOS) and scroll up in order to zoom in the area under cursor.&lt;/li&gt; &#xA; &lt;li&gt;Hold &lt;code&gt;ctrl&lt;/code&gt; (or &lt;code&gt;cmd&lt;/code&gt; on MacOS) and drag the graph to the left / right in order to move the displayed time range into the future / past.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Query history can be navigated by holding &lt;code&gt;Ctrl&lt;/code&gt; (or &lt;code&gt;Cmd&lt;/code&gt; on MacOS) and pressing &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;down&lt;/code&gt; arrows on the keyboard while the cursor is located in the query input field.&lt;/p&gt; &#xA;&lt;p&gt;Multi-line queries can be entered by pressing &lt;code&gt;Shift-Enter&lt;/code&gt; in query input field.&lt;/p&gt; &#xA;&lt;p&gt;When querying the &lt;a href=&#34;https://docs.victoriametrics.com/#backfilling&#34;&gt;backfilled data&lt;/a&gt; or during &lt;a href=&#34;https://docs.victoriametrics.com/Troubleshooting.html#unexpected-query-results&#34;&gt;query troubleshooting&lt;/a&gt;, it may be useful disabling response cache by clicking &lt;code&gt;Disable cache&lt;/code&gt; checkbox.&lt;/p&gt; &#xA;&lt;p&gt;VMUI automatically adjusts the interval between datapoints on the graph depending on the horizontal resolution and on the selected time range. The step value can be customized by changing &lt;code&gt;Step value&lt;/code&gt; input.&lt;/p&gt; &#xA;&lt;p&gt;VMUI allows investigating correlations between multiple queries on the same graph. Just click &lt;code&gt;Add Query&lt;/code&gt; button, enter an additional query in the newly appeared input field and press &lt;code&gt;Ctrl+Enter&lt;/code&gt;. Results for all the queries should be displayed simultaneously on the same graph.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://play.victoriametrics.com/select/accounting/1/6a716b0f-38bc-4856-90ce-448fd713e3fe/prometheus/graph/?g0.expr=100%20*%20sum(rate(process_cpu_seconds_total))%20by%20(job)&amp;amp;g0.range_input=1d&#34;&gt;example VMUI at VictoriaMetrics playground&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Top queries&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#vmui&#34;&gt;VMUI&lt;/a&gt; provides &lt;code&gt;top queries&lt;/code&gt; tab, which can help determining the following query types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the most frequently executed queries;&lt;/li&gt; &#xA; &lt;li&gt;queries with the biggest average execution duration;&lt;/li&gt; &#xA; &lt;li&gt;queries that took the most summary time for execution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cardinality explorer&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics provides an ability to explore time series cardinality at &lt;code&gt;cardinality&lt;/code&gt; tab in &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#vmui&#34;&gt;vmui&lt;/a&gt; in the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To identify metric names with the highest number of series.&lt;/li&gt; &#xA; &lt;li&gt;To identify labels with the highest number of series.&lt;/li&gt; &#xA; &lt;li&gt;To identify values with the highest number of series for the selected label (aka &lt;code&gt;focusLabel&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;To identify label=name pairs with the highest number of series.&lt;/li&gt; &#xA; &lt;li&gt;To identify labels with the highest number of unique values. Note that &lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html&#34;&gt;cluster version of VictoriaMetrics&lt;/a&gt; may show lower than expected number of unique label values for labels with small number of unique values. This is because of &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/raw/5a6e617b5e41c9170e7c562aecd15ee0c901d489/app/vmselect/netstorage/netstorage.go#L1039-L1045&#34;&gt;implementation limits&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default cardinality explorer analyzes time series for the current date. It provides the ability to select different day at the top right corner. By default all the time series for the selected date are analyzed. It is possible to narrow down the analysis to series matching the specified &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/#time-series-selectors&#34;&gt;series selector&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Cardinality explorer is built on top of &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#tsdb-stats&#34;&gt;/api/v1/status/tsdb&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://play.victoriametrics.com/select/accounting/1/6a716b0f-38bc-4856-90ce-448fd713e3fe/prometheus/graph/#/cardinality&#34;&gt;cardinality explorer playground&lt;/a&gt;. See the example of using the cardinality explorer &lt;a href=&#34;https://victoriametrics.com/blog/cardinality-explorer/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to apply new config to VictoriaMetrics&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics is configured via command-line flags, so it must be restarted when new command-line flags should be applied:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Send &lt;code&gt;SIGINT&lt;/code&gt; signal to VictoriaMetrics process in order to gracefully stop it.&lt;/li&gt; &#xA; &lt;li&gt;Wait until the process stops. This can take a few seconds.&lt;/li&gt; &#xA; &lt;li&gt;Start VictoriaMetrics with the new command-line flags.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Prometheus doesn&#39;t drop data during VictoriaMetrics restart. See &lt;a href=&#34;https://grafana.com/blog/2019/03/25/whats-new-in-prometheus-2.8-wal-based-remote-write/&#34;&gt;this article&lt;/a&gt; for details. The same applies also to &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to scrape Prometheus exporters such as &lt;a href=&#34;https://github.com/prometheus/node_exporter&#34;&gt;node-exporter&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics can be used as drop-in replacement for Prometheus for scraping targets configured in &lt;code&gt;prometheus.yml&lt;/code&gt; config file according to &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#configuration-file&#34;&gt;the specification&lt;/a&gt;. Just set &lt;code&gt;-promscrape.config&lt;/code&gt; command-line flag to the path to &lt;code&gt;prometheus.yml&lt;/code&gt; config - and VictoriaMetrics should start scraping the configured targets.&lt;/p&gt; &#xA;&lt;p&gt;The file pointed by &lt;code&gt;-promscrape.config&lt;/code&gt; may contain &lt;code&gt;%{ENV_VAR}&lt;/code&gt; placeholders, which are substituted by the corresponding &lt;code&gt;ENV_VAR&lt;/code&gt; environment variable values.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.victoriametrics.com/sd_configs.html&#34;&gt;the list of supported service discovery types for Prometheus scrape targets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics also supports &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-prometheus-exposition-format&#34;&gt;importing data in Prometheus exposition format&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt;, which can be used as drop-in replacement for Prometheus.&lt;/p&gt; &#xA;&lt;h2&gt;How to send data from DataDog agent&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts data from &lt;a href=&#34;https://docs.datadoghq.com/agent/&#34;&gt;DataDog agent&lt;/a&gt; or &lt;a href=&#34;https://docs.datadoghq.com/developers/dogstatsd/&#34;&gt;DogStatsD&lt;/a&gt; via &lt;a href=&#34;https://docs.datadoghq.com/api/latest/metrics/#submit-metrics&#34;&gt;&#34;submit metrics&#34; API&lt;/a&gt; at &lt;code&gt;/datadog/api/v1/series&lt;/code&gt; path.&lt;/p&gt; &#xA;&lt;h3&gt;Sending metrics to VictoriaMetrics&lt;/h3&gt; &#xA;&lt;p&gt;DataDog agent allows configuring destinations for metrics sending via ENV variable &lt;code&gt;DD_DD_URL&lt;/code&gt; or via &lt;a href=&#34;https://docs.datadoghq.com/agent/guide/agent-configuration-files/&#34;&gt;configuration file&lt;/a&gt; in section &lt;code&gt;dd_url&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/Single-server-VictoriaMetrics-sending_DD_metrics_to_VM.png&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;To configure DataDog agent via ENV variable add the following prefix:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code&gt;DD_DD_URL=http://victoriametrics:8428/datadog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;em&gt;Choose correct URL for VictoriaMetrics &lt;a href=&#34;https://docs.victoriametrics.com/url-examples.html#datadog&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To configure DataDog agent via &lt;a href=&#34;https://docs.datadoghq.com/agent/guide/agent-configuration-files&#34;&gt;configuration file&lt;/a&gt; add the following line:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code&gt;dd_url: http://victoriametrics:8428/datadog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;vmagent also can accept Datadog metrics format. Depending on where vmagent will forward data, pick &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/(https://docs.victoriametrics.com/url-examples.html#datadog)&#34;&gt;single-node or cluster URL&lt;/a&gt; formats.&lt;/p&gt; &#xA;&lt;h3&gt;Sending metrics to Datadog and VictoriaMetrics&lt;/h3&gt; &#xA;&lt;p&gt;DataDog allows configuring &lt;a href=&#34;https://docs.datadoghq.com/agent/guide/dual-shipping/&#34;&gt;Dual Shipping&lt;/a&gt; for metrics sending via ENV variable &lt;code&gt;DD_ADDITIONAL_ENDPOINTS&lt;/code&gt; or via configuration file &lt;code&gt;additional_endpoints&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/Single-server-VictoriaMetrics-sending_DD_metrics_to_VM_and_DD.png&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Run DataDog using the following ENV variable with VictoriaMetrics as additional metrics receiver:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code&gt;DD_ADDITIONAL_ENDPOINTS=&#39;{\&#34;http://victoriametrics:8428/datadog\&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;em&gt;Choose correct URL for VictoriaMetrics &lt;a href=&#34;https://docs.victoriametrics.com/url-examples.html#datadog&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To configure DataDog Dual Shipping via &lt;a href=&#34;https://docs.datadoghq.com/agent/guide/agent-configuration-files&#34;&gt;configuration file&lt;/a&gt; add the following line:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code&gt;additional_endpoints: http://victoriametrics:8428/datadog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Send via cURL&lt;/h3&gt; &#xA;&lt;p&gt;See how to send data to VictoriaMetrics via &lt;a href=&#34;https://docs.victoriametrics.com/url-examples.html#datadogapiv1series&#34;&gt;DataDog &#34;submit metrics&#34;&lt;/a&gt; from command line.&lt;/p&gt; &#xA;&lt;p&gt;The imported data can be read via &lt;a href=&#34;https://docs.victoriametrics.com/url-examples.html#apiv1export&#34;&gt;export API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Additional details&lt;/h3&gt; &#xA;&lt;p&gt;VictoriaMetrics automatically sanitizes metric names for the data ingested via DataDog protocol according to &lt;a href=&#34;https://docs.datadoghq.com/metrics/custom_metrics/#naming-custom-metrics&#34;&gt;DataDog metric naming recommendations&lt;/a&gt;. If you need accepting metric names as is without sanitizing, then pass &lt;code&gt;-datadog.sanitizeMetricName=false&lt;/code&gt; command-line flag to VictoriaMetrics.&lt;/p&gt; &#xA;&lt;p&gt;Extra labels may be added to all the written time series by passing &lt;code&gt;extra_label=name=value&lt;/code&gt; query args. For example, &lt;code&gt;/datadog/api/v1/series?extra_label=foo=bar&lt;/code&gt; would add &lt;code&gt;{foo=&#34;bar&#34;}&lt;/code&gt; label to all the ingested metrics.&lt;/p&gt; &#xA;&lt;p&gt;DataDog agent sends the &lt;a href=&#34;https://docs.datadoghq.com/getting_started/tagging/&#34;&gt;configured tags&lt;/a&gt; to undocumented endpoint - &lt;code&gt;/datadog/intake&lt;/code&gt;. This endpoint isn&#39;t supported by VictoriaMetrics yet. This prevents from adding the configured tags to DataDog agent data sent into VictoriaMetrics. The workaround is to run a sidecar &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt; alongside every DataDog agent, which must run with &lt;code&gt;DD_DD_URL=http://localhost:8429/datadog&lt;/code&gt; environment variable. The sidecar &lt;code&gt;vmagent&lt;/code&gt; must be configured with the needed tags via &lt;code&gt;-remoteWrite.label&lt;/code&gt; command-line flag and must forward incoming data with the added tags to a centralized VictoriaMetrics specified via &lt;code&gt;-remoteWrite.url&lt;/code&gt; command-line flag.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html#adding-labels-to-metrics&#34;&gt;these docs&lt;/a&gt; for details on how to add labels to metrics at &lt;code&gt;vmagent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to send data from InfluxDB-compatible agents such as &lt;a href=&#34;https://www.influxdata.com/time-series-platform/telegraf/&#34;&gt;Telegraf&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428&lt;/code&gt; url instead of InfluxDB url in agents&#39; configs. For instance, put the following lines into &lt;code&gt;Telegraf&lt;/code&gt; config, so it sends data to VictoriaMetrics instead of InfluxDB:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[outputs.influxdb]]&#xA;  urls = [&#34;http://&amp;lt;victoriametrics-addr&amp;gt;:8428&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another option is to enable TCP and UDP receiver for InfluxDB line protocol via &lt;code&gt;-influxListenAddr&lt;/code&gt; command-line flag and stream plain InfluxDB line protocol data to the configured TCP and/or UDP addresses.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics performs the following transformations to the ingested InfluxDB data:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/tools/api/#write-http-endpoint&#34;&gt;db query arg&lt;/a&gt; is mapped into &lt;code&gt;db&lt;/code&gt; label value unless &lt;code&gt;db&lt;/code&gt; tag exists in the InfluxDB line. The &lt;code&gt;db&lt;/code&gt; label name can be overridden via &lt;code&gt;-influxDBLabel&lt;/code&gt; command-line flag.&lt;/li&gt; &#xA; &lt;li&gt;Field names are mapped to time series names prefixed with &lt;code&gt;{measurement}{separator}&lt;/code&gt; value, where &lt;code&gt;{separator}&lt;/code&gt; equals to &lt;code&gt;_&lt;/code&gt; by default. It can be changed with &lt;code&gt;-influxMeasurementFieldSeparator&lt;/code&gt; command-line flag. See also &lt;code&gt;-influxSkipSingleField&lt;/code&gt; command-line flag. If &lt;code&gt;{measurement}&lt;/code&gt; is empty or if &lt;code&gt;-influxSkipMeasurement&lt;/code&gt; command-line flag is set, then time series names correspond to field names.&lt;/li&gt; &#xA; &lt;li&gt;Field values are mapped to time series values.&lt;/li&gt; &#xA; &lt;li&gt;Tags are mapped to Prometheus labels as-is.&lt;/li&gt; &#xA; &lt;li&gt;If &lt;code&gt;-usePromCompatibleNaming&lt;/code&gt; command-line flag is set, then all the metric names and label names are normalized to &lt;a href=&#34;https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels&#34;&gt;Prometheus-compatible naming&lt;/a&gt; by replacing unsupported chars with &lt;code&gt;_&lt;/code&gt;. For example, &lt;code&gt;foo.bar-baz/1&lt;/code&gt; metric name or label name is substituted with &lt;code&gt;foo_bar_baz_1&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, the following InfluxDB line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-raw&#34;&gt;foo,tag1=value1,tag2=value2 field1=12,field2=40&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;is converted into the following Prometheus data points:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-raw&#34;&gt;foo_field1{tag1=&#34;value1&#34;, tag2=&#34;value2&#34;} 12&#xA;foo_field2{tag1=&#34;value1&#34;, tag2=&#34;value2&#34;} 40&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example for writing data with &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/write_protocols/line_protocol_tutorial/&#34;&gt;InfluxDB line protocol&lt;/a&gt; to local VictoriaMetrics using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -d &#39;measurement,tag1=value1,tag2=value2 field1=123,field2=1.23&#39; -X POST &#39;http://localhost:8428/write&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;An arbitrary number of lines delimited by &#39;\n&#39; (aka newline char) can be sent in a single request. After that the data may be read via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-json-line-format&#34;&gt;/api/v1/export&lt;/a&gt; endpoint:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -G &#39;http://localhost:8428/api/v1/export&#39; -d &#39;match={__name__=~&#34;measurement_.*&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The &lt;code&gt;/api/v1/export&lt;/code&gt; endpoint should return the following response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;measurement_field1&#34;,&#34;tag1&#34;:&#34;value1&#34;,&#34;tag2&#34;:&#34;value2&#34;},&#34;values&#34;:[123],&#34;timestamps&#34;:[1560272508147]}&#xA;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;measurement_field2&#34;,&#34;tag1&#34;:&#34;value1&#34;,&#34;tag2&#34;:&#34;value2&#34;},&#34;values&#34;:[1.23],&#34;timestamps&#34;:[1560272508147]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that InfluxDB line protocol expects &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/write_protocols/line_protocol_tutorial/#timestamp&#34;&gt;timestamps in &lt;em&gt;nanoseconds&lt;/em&gt; by default&lt;/a&gt;, while VictoriaMetrics stores them with &lt;em&gt;milliseconds&lt;/em&gt; precision.&lt;/p&gt; &#xA;&lt;p&gt;Extra labels may be added to all the written time series by passing &lt;code&gt;extra_label=name=value&lt;/code&gt; query args. For example, &lt;code&gt;/write?extra_label=foo=bar&lt;/code&gt; would add &lt;code&gt;{foo=&#34;bar&#34;}&lt;/code&gt; label to all the ingested metrics.&lt;/p&gt; &#xA;&lt;p&gt;Some plugins for Telegraf such as &lt;a href=&#34;https://github.com/fangli/fluent-plugin-influxdb&#34;&gt;fluentd&lt;/a&gt;, &lt;a href=&#34;https://github.com/Juniper/open-nti&#34;&gt;Juniper/open-nti&lt;/a&gt; or &lt;a href=&#34;https://github.com/Juniper/jtimon&#34;&gt;Juniper/jitmon&lt;/a&gt; send &lt;code&gt;SHOW DATABASES&lt;/code&gt; query to &lt;code&gt;/query&lt;/code&gt; and expect a particular database name in the response. Comma-separated list of expected databases can be passed to VictoriaMetrics via &lt;code&gt;-influx.databaseNames&lt;/code&gt; command-line flag.&lt;/p&gt; &#xA;&lt;h2&gt;How to send data from Graphite-compatible agents such as &lt;a href=&#34;https://github.com/etsy/statsd&#34;&gt;StatsD&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Enable Graphite receiver in VictoriaMetrics by setting &lt;code&gt;-graphiteListenAddr&lt;/code&gt; command line flag. For instance, the following command will enable Graphite receiver in VictoriaMetrics on TCP and UDP port &lt;code&gt;2003&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;/path/to/victoria-metrics-prod -graphiteListenAddr=:2003&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the configured address in Graphite-compatible agents. For instance, set &lt;code&gt;graphiteHost&lt;/code&gt; to the VictoriaMetrics host in &lt;code&gt;StatsD&lt;/code&gt; configs.&lt;/p&gt; &#xA;&lt;p&gt;Example for writing data with Graphite plaintext protocol to local VictoriaMetrics using &lt;code&gt;nc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo &#34;foo.bar.baz;tag1=value1;tag2=value2 123 `date +%s`&#34; | nc -N localhost 2003&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;VictoriaMetrics sets the current time if the timestamp is omitted. An arbitrary number of lines delimited by &lt;code&gt;\n&lt;/code&gt; (aka newline char) can be sent in one go. After that the data may be read via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-json-line-format&#34;&gt;/api/v1/export&lt;/a&gt; endpoint:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -G &#39;http://localhost:8428/api/v1/export&#39; -d &#39;match=foo.bar.baz&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The &lt;code&gt;/api/v1/export&lt;/code&gt; endpoint should return the following response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;foo.bar.baz&#34;,&#34;tag1&#34;:&#34;value1&#34;,&#34;tag2&#34;:&#34;value2&#34;},&#34;values&#34;:[123],&#34;timestamps&#34;:[1560277406000]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html#graphite-relabeling&#34;&gt;Graphite relabeling&lt;/a&gt; can be used if the imported Graphite data is going to be queried via &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html&#34;&gt;MetricsQL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Querying Graphite data&lt;/h2&gt; &#xA;&lt;p&gt;Data sent to VictoriaMetrics via &lt;code&gt;Graphite plaintext protocol&lt;/code&gt; may be read via the following APIs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#graphite-api-usage&#34;&gt;Graphite API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#prometheus-querying-api-usage&#34;&gt;Prometheus querying API&lt;/a&gt;. See also &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#selecting-graphite-metrics&#34;&gt;selecting Graphite metrics&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-graphite/carbonapi/raw/main/cmd/carbonapi/carbonapi.example.victoriametrics.yaml&#34;&gt;go-graphite/carbonapi&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Selecting Graphite metrics&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics supports &lt;code&gt;__graphite__&lt;/code&gt; pseudo-label for selecting time series with Graphite-compatible filters in &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html&#34;&gt;MetricsQL&lt;/a&gt;. For example, &lt;code&gt;{__graphite__=&#34;foo.*.bar&#34;}&lt;/code&gt; is equivalent to &lt;code&gt;{__name__=~&#34;foo[.][^.]*[.]bar&#34;}&lt;/code&gt;, but it works faster and it is easier to use when migrating from Graphite to VictoriaMetrics. See &lt;a href=&#34;https://graphite.readthedocs.io/en/latest/render_api.html#paths-and-wildcards&#34;&gt;docs for Graphite paths and wildcards&lt;/a&gt;. VictoriaMetrics also supports &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#label_graphite_group&#34;&gt;label_graphite_group&lt;/a&gt; function for extracting the given groups from Graphite metric name.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;__graphite__&lt;/code&gt; pseudo-label supports e.g. alternate regexp filters such as &lt;code&gt;(value1|...|valueN)&lt;/code&gt;. They are transparently converted to &lt;code&gt;{value1,...,valueN}&lt;/code&gt; syntax &lt;a href=&#34;https://graphite.readthedocs.io/en/latest/render_api.html#paths-and-wildcards&#34;&gt;used in Graphite&lt;/a&gt;. This allows using &lt;a href=&#34;https://grafana.com/docs/grafana/latest/variables/formatting-multi-value-variables/&#34;&gt;multi-value template variables in Grafana&lt;/a&gt; inside &lt;code&gt;__graphite__&lt;/code&gt; pseudo-label. For example, Grafana expands &lt;code&gt;{__graphite__=~&#34;foo.($bar).baz&#34;}&lt;/code&gt; into &lt;code&gt;{__graphite__=~&#34;foo.(x|y).baz&#34;}&lt;/code&gt; if &lt;code&gt;$bar&lt;/code&gt; template variable contains &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values. In this case the query is automatically converted into &lt;code&gt;{__graphite__=~&#34;foo.{x,y}.baz&#34;}&lt;/code&gt; before execution.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics also supports Graphite query language - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#graphite-render-api-usage&#34;&gt;these docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to send data from OpenTSDB-compatible agents&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics supports &lt;a href=&#34;http://opentsdb.net/docs/build/html/api_telnet/put.html&#34;&gt;telnet put protocol&lt;/a&gt; and &lt;a href=&#34;http://opentsdb.net/docs/build/html/api_http/put.html&#34;&gt;HTTP /api/put requests&lt;/a&gt; for ingesting OpenTSDB data. The same protocol is used for &lt;a href=&#34;https://kairosdb.github.io/docs/PushingData.html&#34;&gt;ingesting data in KairosDB&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Sending data via &lt;code&gt;telnet put&lt;/code&gt; protocol&lt;/h3&gt; &#xA;&lt;p&gt;Enable OpenTSDB receiver in VictoriaMetrics by setting &lt;code&gt;-opentsdbListenAddr&lt;/code&gt; command line flag. For instance, the following command enables OpenTSDB receiver in VictoriaMetrics on TCP and UDP port &lt;code&gt;4242&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;/path/to/victoria-metrics-prod -opentsdbListenAddr=:4242&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Send data to the given address from OpenTSDB-compatible agents.&lt;/p&gt; &#xA;&lt;p&gt;Example for writing data with OpenTSDB protocol to local VictoriaMetrics using &lt;code&gt;nc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo &#34;put foo.bar.baz `date +%s` 123 tag1=value1 tag2=value2&#34; | nc -N localhost 4242&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;An arbitrary number of lines delimited by &lt;code&gt;\n&lt;/code&gt; (aka newline char) can be sent in one go. After that the data may be read via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-json-line-format&#34;&gt;/api/v1/export&lt;/a&gt; endpoint:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -G &#39;http://localhost:8428/api/v1/export&#39; -d &#39;match=foo.bar.baz&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The &lt;code&gt;/api/v1/export&lt;/code&gt; endpoint should return the following response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;foo.bar.baz&#34;,&#34;tag1&#34;:&#34;value1&#34;,&#34;tag2&#34;:&#34;value2&#34;},&#34;values&#34;:[123],&#34;timestamps&#34;:[1560277292000]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sending OpenTSDB data via HTTP &lt;code&gt;/api/put&lt;/code&gt; requests&lt;/h3&gt; &#xA;&lt;p&gt;Enable HTTP server for OpenTSDB &lt;code&gt;/api/put&lt;/code&gt; requests by setting &lt;code&gt;-opentsdbHTTPListenAddr&lt;/code&gt; command line flag. For instance, the following command enables OpenTSDB HTTP server on port &lt;code&gt;4242&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;/path/to/victoria-metrics-prod -opentsdbHTTPListenAddr=:4242&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Send data to the given address from OpenTSDB-compatible agents.&lt;/p&gt; &#xA;&lt;p&gt;Example for writing a single data point:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -H &#39;Content-Type: application/json&#39; -d &#39;{&#34;metric&#34;:&#34;x.y.z&#34;,&#34;value&#34;:45.34,&#34;tags&#34;:{&#34;t1&#34;:&#34;v1&#34;,&#34;t2&#34;:&#34;v2&#34;}}&#39; http://localhost:4242/api/put&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Example for writing multiple data points in a single request:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -H &#39;Content-Type: application/json&#39; -d &#39;[{&#34;metric&#34;:&#34;foo&#34;,&#34;value&#34;:45.34},{&#34;metric&#34;:&#34;bar&#34;,&#34;value&#34;:43}]&#39; http://localhost:4242/api/put&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;After that the data may be read via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-json-line-format&#34;&gt;/api/v1/export&lt;/a&gt; endpoint:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -G &#39;http://localhost:8428/api/v1/export&#39; -d &#39;match[]=x.y.z&#39; -d &#39;match[]=foo&#39; -d &#39;match[]=bar&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The &lt;code&gt;/api/v1/export&lt;/code&gt; endpoint should return the following response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;foo&#34;},&#34;values&#34;:[45.34],&#34;timestamps&#34;:[1566464846000]}&#xA;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;bar&#34;},&#34;values&#34;:[43],&#34;timestamps&#34;:[1566464846000]}&#xA;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;x.y.z&#34;,&#34;t1&#34;:&#34;v1&#34;,&#34;t2&#34;:&#34;v2&#34;},&#34;values&#34;:[45.34],&#34;timestamps&#34;:[1566464763000]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extra labels may be added to all the imported time series by passing &lt;code&gt;extra_label=name=value&lt;/code&gt; query args. For example, &lt;code&gt;/api/put?extra_label=foo=bar&lt;/code&gt; would add &lt;code&gt;{foo=&#34;bar&#34;}&lt;/code&gt; label to all the ingested metrics.&lt;/p&gt; &#xA;&lt;h2&gt;Prometheus querying API usage&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics supports the following handlers from &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/&#34;&gt;Prometheus querying API&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/keyConcepts.html#instant-query&#34;&gt;/api/v1/query&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/keyConcepts.html#range-query&#34;&gt;/api/v1/query_range&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#finding-series-by-label-matchers&#34;&gt;/api/v1/series&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#getting-label-names&#34;&gt;/api/v1/labels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#querying-label-values&#34;&gt;/api/v1/label/.../values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-stats&#34;&gt;/api/v1/status/tsdb&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#tsdb-stats&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#targets&#34;&gt;/api/v1/targets&lt;/a&gt; - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-scrape-prometheus-exporters-such-as-node-exporter&#34;&gt;these docs&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/federation/&#34;&gt;/federate&lt;/a&gt; - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#federation&#34;&gt;these docs&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These handlers can be queried from Prometheus-compatible clients such as Grafana or curl. All the Prometheus querying API handlers can be prepended with &lt;code&gt;/prometheus&lt;/code&gt; prefix. For example, both &lt;code&gt;/prometheus/api/v1/query&lt;/code&gt; and &lt;code&gt;/api/v1/query&lt;/code&gt; should work.&lt;/p&gt; &#xA;&lt;h3&gt;Prometheus querying API enhancements&lt;/h3&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts optional &lt;code&gt;extra_label=&amp;lt;label_name&amp;gt;=&amp;lt;label_value&amp;gt;&lt;/code&gt; query arg, which can be used for enforcing additional label filters for queries. For example, &lt;code&gt;/api/v1/query_range?extra_label=user_id=123&amp;amp;extra_label=group_id=456&amp;amp;query=&amp;lt;query&amp;gt;&lt;/code&gt; would automatically add &lt;code&gt;{user_id=&#34;123&#34;,group_id=&#34;456&#34;}&lt;/code&gt; label filters to the given &lt;code&gt;&amp;lt;query&amp;gt;&lt;/code&gt;. This functionality can be used for limiting the scope of time series visible to the given tenant. It is expected that the &lt;code&gt;extra_label&lt;/code&gt; query args are automatically set by auth proxy sitting in front of VictoriaMetrics. See &lt;a href=&#34;https://docs.victoriametrics.com/vmauth.html&#34;&gt;vmauth&lt;/a&gt; and &lt;a href=&#34;https://docs.victoriametrics.com/vmgateway.html&#34;&gt;vmgateway&lt;/a&gt; as examples of such proxies.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts optional &lt;code&gt;extra_filters[]=series_selector&lt;/code&gt; query arg, which can be used for enforcing arbitrary label filters for queries. For example, &lt;code&gt;/api/v1/query_range?extra_filters[]={env=~&#34;prod|staging&#34;,user=&#34;xyz&#34;}&amp;amp;query=&amp;lt;query&amp;gt;&lt;/code&gt; would automatically add &lt;code&gt;{env=~&#34;prod|staging&#34;,user=&#34;xyz&#34;}&lt;/code&gt; label filters to the given &lt;code&gt;&amp;lt;query&amp;gt;&lt;/code&gt;. This functionality can be used for limiting the scope of time series visible to the given tenant. It is expected that the &lt;code&gt;extra_filters[]&lt;/code&gt; query args are automatically set by auth proxy sitting in front of VictoriaMetrics. See &lt;a href=&#34;https://docs.victoriametrics.com/vmauth.html&#34;&gt;vmauth&lt;/a&gt; and &lt;a href=&#34;https://docs.victoriametrics.com/vmgateway.html&#34;&gt;vmgateway&lt;/a&gt; as examples of such proxies.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts relative times in &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; query args additionally to unix timestamps and &lt;a href=&#34;https://www.ietf.org/rfc/rfc3339.txt&#34;&gt;RFC3339&lt;/a&gt;. For example, the following query would return data for the last 30 minutes: &lt;code&gt;/api/v1/query_range?start=-30m&amp;amp;query=...&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts &lt;code&gt;round_digits&lt;/code&gt; query arg for &lt;code&gt;/api/v1/query&lt;/code&gt; and &lt;code&gt;/api/v1/query_range&lt;/code&gt; handlers. It can be used for rounding response values to the given number of digits after the decimal point. For example, &lt;code&gt;/api/v1/query?query=avg_over_time(temperature[1h])&amp;amp;round_digits=2&lt;/code&gt; would round response values to up to two digits after the decimal point.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts &lt;code&gt;limit&lt;/code&gt; query arg for &lt;code&gt;/api/v1/labels&lt;/code&gt; and &lt;code&gt;/api/v1/label/&amp;lt;labelName&amp;gt;/values&lt;/code&gt; handlers for limiting the number of returned entries. For example, the query to &lt;code&gt;/api/v1/labels?limit=5&lt;/code&gt; returns a sample of up to 5 unique labels, while ignoring the rest of labels. If the provided &lt;code&gt;limit&lt;/code&gt; value exceeds the corresponding &lt;code&gt;-search.maxTagKeys&lt;/code&gt; / &lt;code&gt;-search.maxTagValues&lt;/code&gt; command-line flag values, then limits specified in the command-line flags are used.&lt;/p&gt; &#xA;&lt;p&gt;By default, VictoriaMetrics returns time series for the last 5 minutes from &lt;code&gt;/api/v1/series&lt;/code&gt;, &lt;code&gt;/api/v1/labels&lt;/code&gt; and &lt;code&gt;/api/v1/label/&amp;lt;labelName&amp;gt;/values&lt;/code&gt; while the Prometheus API defaults to all time. Explicitly set &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; to select the desired time range. VictoriaMetrics accepts &lt;code&gt;limit&lt;/code&gt; query arg for &lt;code&gt;/api/v1/series&lt;/code&gt; handlers for limiting the number of returned entries. For example, the query to &lt;code&gt;/api/v1/series?limit=5&lt;/code&gt; returns a sample of up to 5 series, while ignoring the rest. If the provided &lt;code&gt;limit&lt;/code&gt; value exceeds the corresponding &lt;code&gt;-search.maxSeries&lt;/code&gt; command-line flag values, then limits specified in the command-line flags are used.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, VictoriaMetrics provides the following handlers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;/vmui&lt;/code&gt; - Basic Web UI. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#vmui&#34;&gt;these docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;/api/v1/series/count&lt;/code&gt; - returns the total number of time series in the database. Some notes:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the handler scans all the inverted index, so it can be slow if the database contains tens of millions of time series;&lt;/li&gt; &#xA;   &lt;li&gt;the handler may count &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-delete-time-series&#34;&gt;deleted time series&lt;/a&gt; additionally to normal time series due to internal implementation restrictions;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;/api/v1/status/active_queries&lt;/code&gt; - returns a list of currently running queries.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;/api/v1/status/top_queries&lt;/code&gt; - returns the following query lists:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the most frequently executed queries - &lt;code&gt;topByCount&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;queries with the biggest average execution duration - &lt;code&gt;topByAvgDuration&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;queries that took the most time for execution - &lt;code&gt;topBySumDuration&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;The number of returned queries can be limited via &lt;code&gt;topN&lt;/code&gt; query arg. Old queries can be filtered out with &lt;code&gt;maxLifetime&lt;/code&gt; query arg. For example, request to &lt;code&gt;/api/v1/status/top_queries?topN=5&amp;amp;maxLifetime=30s&lt;/code&gt; would return up to 5 queries per list, which were executed during the last 30 seconds. VictoriaMetrics tracks the last &lt;code&gt;-search.queryStats.lastQueriesCount&lt;/code&gt; queries with durations at least &lt;code&gt;-search.queryStats.minQueryDuration&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Graphite API usage&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics supports data ingestion in Graphite protocol - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-send-data-from-graphite-compatible-agents-such-as-statsd&#34;&gt;these docs&lt;/a&gt; for details. VictoriaMetrics supports the following Graphite querying APIs, which are needed for &lt;a href=&#34;https://grafana.com/docs/grafana/latest/datasources/graphite/&#34;&gt;Graphite datasource in Grafana&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Render API - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#graphite-render-api-usage&#34;&gt;these docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Metrics API - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#graphite-metrics-api-usage&#34;&gt;these docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Tags API - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#graphite-tags-api-usage&#34;&gt;these docs&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All the Graphite handlers can be pre-pended with &lt;code&gt;/graphite&lt;/code&gt; prefix. For example, both &lt;code&gt;/graphite/metrics/find&lt;/code&gt; and &lt;code&gt;/metrics/find&lt;/code&gt; should work.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts optional query args: &lt;code&gt;extra_label=&amp;lt;label_name&amp;gt;=&amp;lt;label_value&amp;gt;&lt;/code&gt; and &lt;code&gt;extra_filters[]=series_selector&lt;/code&gt; query args for all the Graphite APIs. These args can be used for limiting the scope of time series visible to the given tenant. It is expected that the &lt;code&gt;extra_label&lt;/code&gt; query arg is automatically set by auth proxy sitting in front of VictoriaMetrics. See &lt;a href=&#34;https://docs.victoriametrics.com/vmauth.html&#34;&gt;vmauth&lt;/a&gt; and &lt;a href=&#34;https://docs.victoriametrics.com/vmgateway.html&#34;&gt;vmgateway&lt;/a&gt; as examples of such proxies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:sales@victoriametrics.com&#34;&gt;Contact us&lt;/a&gt; if you need assistance with such a proxy.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics supports &lt;code&gt;__graphite__&lt;/code&gt; pseudo-label for filtering time series with Graphite-compatible filters in &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html&#34;&gt;MetricsQL&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#selecting-graphite-metrics&#34;&gt;these docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Graphite Render API usage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.victoriametrics.com/enterprise.html&#34;&gt;VictoriaMetrics Enterprise&lt;/a&gt; supports &lt;a href=&#34;https://graphite.readthedocs.io/en/stable/render_api.html&#34;&gt;Graphite Render API&lt;/a&gt; subset at &lt;code&gt;/render&lt;/code&gt; endpoint, which is used by &lt;a href=&#34;https://grafana.com/docs/grafana/latest/datasources/graphite/&#34;&gt;Graphite datasource in Grafana&lt;/a&gt;. When configuring Graphite datasource in Grafana, the &lt;code&gt;Storage-Step&lt;/code&gt; http request header must be set to a step between Graphite data points stored in VictoriaMetrics. For example, &lt;code&gt;Storage-Step: 10s&lt;/code&gt; would mean 10 seconds distance between Graphite datapoints stored in VictoriaMetrics. Enterprise binaries can be downloaded and evaluated for free from &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;the releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Graphite Metrics API usage&lt;/h3&gt; &#xA;&lt;p&gt;VictoriaMetrics supports the following handlers from &lt;a href=&#34;https://graphite-api.readthedocs.io/en/latest/api.html#the-metrics-api&#34;&gt;Graphite Metrics API&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite-api.readthedocs.io/en/latest/api.html#metrics-find&#34;&gt;/metrics/find&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite-api.readthedocs.io/en/latest/api.html#metrics-expand&#34;&gt;/metrics/expand&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite-api.readthedocs.io/en/latest/api.html#metrics-index-json&#34;&gt;/metrics/index.json&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts the following additional query args at &lt;code&gt;/metrics/find&lt;/code&gt; and &lt;code&gt;/metrics/expand&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;label&lt;/code&gt; - for selecting arbitrary label values. By default &lt;code&gt;label=__name__&lt;/code&gt;, i.e. metric names are selected.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;delimiter&lt;/code&gt; - for using different delimiters in metric name hierarchy. For example, &lt;code&gt;/metrics/find?delimiter=_&amp;amp;query=node_*&lt;/code&gt; would return all the metric name prefixes that start with &lt;code&gt;node_&lt;/code&gt;. By default &lt;code&gt;delimiter=.&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Graphite Tags API usage&lt;/h3&gt; &#xA;&lt;p&gt;VictoriaMetrics supports the following handlers from &lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html&#34;&gt;Graphite Tags API&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html#adding-series-to-the-tagdb&#34;&gt;/tags/tagSeries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html#adding-series-to-the-tagdb&#34;&gt;/tags/tagMultiSeries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html#exploring-tags&#34;&gt;/tags&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html#exploring-tags&#34;&gt;/tags/{tag_name}&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html#exploring-tags&#34;&gt;/tags/findSeries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html#auto-complete-support&#34;&gt;/tags/autoComplete/tags&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html#auto-complete-support&#34;&gt;/tags/autoComplete/values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphite.readthedocs.io/en/stable/tags.html#removing-series-from-the-tagdb&#34;&gt;/tags/delSeries&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to build from sources&lt;/h2&gt; &#xA;&lt;p&gt;We recommend using either &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;binary releases&lt;/a&gt; or &lt;a href=&#34;https://hub.docker.com/r/victoriametrics/victoria-metrics/&#34;&gt;docker images&lt;/a&gt; instead of building VictoriaMetrics from sources. Building from sources is reasonable when developing additional features specific to your needs or when testing bugfixes.&lt;/p&gt; &#xA;&lt;h3&gt;Development build&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Install Go&lt;/a&gt;. The minimum supported version is Go 1.19.2.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make victoria-metrics&lt;/code&gt; from the root folder of &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;the repository&lt;/a&gt;. It builds &lt;code&gt;victoria-metrics&lt;/code&gt; binary and puts it into the &lt;code&gt;bin&lt;/code&gt; folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Production build&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Install docker&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make victoria-metrics-prod&lt;/code&gt; from the root folder of &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;the repository&lt;/a&gt;. It builds &lt;code&gt;victoria-metrics-prod&lt;/code&gt; binary and puts it into the &lt;code&gt;bin&lt;/code&gt; folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;ARM build&lt;/h3&gt; &#xA;&lt;p&gt;ARM build may run on Raspberry Pi or on &lt;a href=&#34;https://blog.cloudflare.com/arm-takes-wing/&#34;&gt;energy-efficient ARM servers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Development ARM build&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Install Go&lt;/a&gt;. The minimum supported version is Go 1.19.2.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make victoria-metrics-linux-arm&lt;/code&gt; or &lt;code&gt;make victoria-metrics-linux-arm64&lt;/code&gt; from the root folder of &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;the repository&lt;/a&gt;. It builds &lt;code&gt;victoria-metrics-linux-arm&lt;/code&gt; or &lt;code&gt;victoria-metrics-linux-arm64&lt;/code&gt; binary respectively and puts it into the &lt;code&gt;bin&lt;/code&gt; folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Production ARM build&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Install docker&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make victoria-metrics-linux-arm-prod&lt;/code&gt; or &lt;code&gt;make victoria-metrics-linux-arm64-prod&lt;/code&gt; from the root folder of &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;the repository&lt;/a&gt;. It builds &lt;code&gt;victoria-metrics-linux-arm-prod&lt;/code&gt; or &lt;code&gt;victoria-metrics-linux-arm64-prod&lt;/code&gt; binary respectively and puts it into the &lt;code&gt;bin&lt;/code&gt; folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Pure Go build (CGO_ENABLED=0)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Pure Go&lt;/code&gt; mode builds only Go code without &lt;a href=&#34;https://golang.org/cmd/cgo/&#34;&gt;cgo&lt;/a&gt; dependencies.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Install Go&lt;/a&gt;. The minimum supported version is Go 1.19.2.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make victoria-metrics-pure&lt;/code&gt; from the root folder of &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;the repository&lt;/a&gt;. It builds &lt;code&gt;victoria-metrics-pure&lt;/code&gt; binary and puts it into the &lt;code&gt;bin&lt;/code&gt; folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Building docker images&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make package-victoria-metrics&lt;/code&gt;. It builds &lt;code&gt;victoriametrics/victoria-metrics:&amp;lt;PKG_TAG&amp;gt;&lt;/code&gt; docker image locally. &lt;code&gt;&amp;lt;PKG_TAG&amp;gt;&lt;/code&gt; is auto-generated image tag, which depends on source code in the repository. The &lt;code&gt;&amp;lt;PKG_TAG&amp;gt;&lt;/code&gt; may be manually set via &lt;code&gt;PKG_TAG=foobar make package-victoria-metrics&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The base docker image is &lt;a href=&#34;https://hub.docker.com/_/alpine&#34;&gt;alpine&lt;/a&gt; but it is possible to use any other base image by setting it via &lt;code&gt;&amp;lt;ROOT_IMAGE&amp;gt;&lt;/code&gt; environment variable. For example, the following command builds the image on top of &lt;a href=&#34;https://hub.docker.com/_/scratch&#34;&gt;scratch&lt;/a&gt; image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ROOT_IMAGE=scratch make package-victoria-metrics&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Start with docker-compose&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/deployment/docker/docker-compose.yml&#34;&gt;Docker-compose&lt;/a&gt; helps to spin up VictoriaMetrics, &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt; and Grafana with one command. More details may be found &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/tree/master/deployment/docker#folder-contains-basic-images-and-tools-for-building-and-running-victoria-metrics-in-docker&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setting up service&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/issues/43&#34;&gt;instructions&lt;/a&gt; on how to set up VictoriaMetrics as a service for your OS. A &lt;a href=&#34;https://snapcraft.io/victoriametrics&#34;&gt;snap package&lt;/a&gt; is available for Ubuntu.&lt;/p&gt; &#xA;&lt;h2&gt;How to work with snapshots&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics can create &lt;a href=&#34;https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;instant snapshots&lt;/a&gt; for all the data stored under &lt;code&gt;-storageDataPath&lt;/code&gt; directory. Navigate to &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/snapshot/create&lt;/code&gt; in order to create an instant snapshot. The page will return the following JSON response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;status&#34;:&#34;ok&#34;,&#34;snapshot&#34;:&#34;&amp;lt;snapshot-name&amp;gt;&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Snapshots are created under &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;/snapshots&lt;/code&gt; directory, where &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;&lt;/code&gt; is the command-line flag value. Snapshots can be archived to backup storage at any time with &lt;a href=&#34;https://docs.victoriametrics.com/vmbackup.html&#34;&gt;vmbackup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/snapshot/list&lt;/code&gt; page contains the list of available snapshots.&lt;/p&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/snapshot/delete?snapshot=&amp;lt;snapshot-name&amp;gt;&lt;/code&gt; in order to delete &lt;code&gt;&amp;lt;snapshot-name&amp;gt;&lt;/code&gt; snapshot.&lt;/p&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/snapshot/delete_all&lt;/code&gt; in order to delete all the snapshots.&lt;/p&gt; &#xA;&lt;p&gt;Steps for restoring from a snapshot:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Stop VictoriaMetrics with &lt;code&gt;kill -INT&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Restore snapshot contents from backup with &lt;a href=&#34;https://docs.victoriametrics.com/vmrestore.html&#34;&gt;vmrestore&lt;/a&gt; to the directory pointed by &lt;code&gt;-storageDataPath&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Start VictoriaMetrics.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to delete time series&lt;/h2&gt; &#xA;&lt;p&gt;Send a request to &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/admin/tsdb/delete_series?match[]=&amp;lt;timeseries_selector_for_delete&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;timeseries_selector_for_delete&amp;gt;&lt;/code&gt; may contain any &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/#time-series-selectors&#34;&gt;time series selector&lt;/a&gt; for metrics to delete. Delete API doesn&#39;t support the deletion of specific time ranges, the series can only be deleted completely. Storage space for the deleted time series isn&#39;t freed instantly - it is freed during subsequent &lt;a href=&#34;https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;background merges of data files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that background merges may never occur for data from previous months, so storage space won&#39;t be freed for historical data. In this case &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#forced-merge&#34;&gt;forced merge&lt;/a&gt; may help freeing up storage space.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended verifying which metrics will be deleted with the call to &lt;code&gt;http://&amp;lt;victoria-metrics-addr&amp;gt;:8428/api/v1/series?match[]=&amp;lt;timeseries_selector_for_delete&amp;gt;&lt;/code&gt; before actually deleting the metrics. By default this query will only scan series in the past 5 minutes, so you may need to adjust &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; to a suitable range to achieve match hits.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;/api/v1/admin/tsdb/delete_series&lt;/code&gt; handler may be protected with &lt;code&gt;authKey&lt;/code&gt; if &lt;code&gt;-deleteAuthKey&lt;/code&gt; command-line flag is set.&lt;/p&gt; &#xA;&lt;p&gt;The delete API is intended mainly for the following cases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;One-off deleting of accidentally written invalid (or undesired) time series.&lt;/li&gt; &#xA; &lt;li&gt;One-off deleting of user data due to &lt;a href=&#34;https://en.wikipedia.org/wiki/General_Data_Protection_Regulation&#34;&gt;GDPR&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using the delete API is not recommended in the following cases, since it brings a non-zero overhead:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Regular cleanups for unneeded data. Just prevent writing unneeded data into VictoriaMetrics. This can be done with &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#relabeling&#34;&gt;relabeling&lt;/a&gt;. See &lt;a href=&#34;https://www.robustperception.io/relabelling-can-discard-targets-timeseries-and-alerts&#34;&gt;this article&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;Reducing disk space usage by deleting unneeded time series. This doesn&#39;t work as expected, since the deleted time series occupy disk space until the next merge operation, which can never occur when deleting too old data. &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#forced-merge&#34;&gt;Forced merge&lt;/a&gt; may be used for freeing up disk space occupied by old data. Note that VictoriaMetrics doesn&#39;t delete entries from inverted index (aka &lt;code&gt;indexdb&lt;/code&gt;) for the deleted time series. Inverted index is cleaned up once per the configured &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#retention&#34;&gt;retention&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s better to use the &lt;code&gt;-retentionPeriod&lt;/code&gt; command-line flag for efficient pruning of old data.&lt;/p&gt; &#xA;&lt;h2&gt;Forced merge&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics performs &lt;a href=&#34;https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;data compactions in background&lt;/a&gt; in order to keep good performance characteristics when accepting new data. These compactions (merges) are performed independently on per-month partitions. This means that compactions are stopped for per-month partitions if no new data is ingested into these partitions. Sometimes it is necessary to trigger compactions for old partitions. For instance, in order to free up disk space occupied by &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-delete-time-series&#34;&gt;deleted time series&lt;/a&gt;. In this case forced compaction may be initiated on the specified per-month partition by sending request to &lt;code&gt;/internal/force_merge?partition_prefix=YYYY_MM&lt;/code&gt;, where &lt;code&gt;YYYY_MM&lt;/code&gt; is per-month partition name. For example, &lt;code&gt;http://victoriametrics:8428/internal/force_merge?partition_prefix=2020_08&lt;/code&gt; would initiate forced merge for August 2020 partition. The call to &lt;code&gt;/internal/force_merge&lt;/code&gt; returns immediately, while the corresponding forced merge continues running in background.&lt;/p&gt; &#xA;&lt;p&gt;Forced merges may require additional CPU, disk IO and storage space resources. It is unnecessary to run forced merge under normal conditions, since VictoriaMetrics automatically performs &lt;a href=&#34;https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;optimal merges in background&lt;/a&gt; when new data is ingested into it.&lt;/p&gt; &#xA;&lt;h2&gt;How to export time series&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics provides the following handlers for exporting data:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/api/v1/export&lt;/code&gt; for exporting data in JSON line format. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-json-line-format&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/api/v1/export/csv&lt;/code&gt; for exporting data in CSV. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-csv-data&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/api/v1/export/native&lt;/code&gt; for exporting data in native binary format. This is the most efficient format for data export. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-native-format&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to export data in JSON line format&lt;/h3&gt; &#xA;&lt;p&gt;Send a request to &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export?match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;timeseries_selector_for_export&amp;gt;&lt;/code&gt; may contain any &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/#time-series-selectors&#34;&gt;time series selector&lt;/a&gt; for metrics to export. Use &lt;code&gt;{__name__!=&#34;&#34;}&lt;/code&gt; selector for fetching all the time series. The response would contain all the data for the selected time series in &lt;a href=&#34;https://en.wikipedia.org/wiki/JSON_streaming#Line-delimited_JSON&#34;&gt;JSON streaming format&lt;/a&gt;. Each JSON line contains samples for a single time series. An example output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;up&#34;,&#34;job&#34;:&#34;node_exporter&#34;,&#34;instance&#34;:&#34;localhost:9100&#34;},&#34;values&#34;:[0,0,0],&#34;timestamps&#34;:[1549891472010,1549891487724,1549891503438]}&#xA;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;up&#34;,&#34;job&#34;:&#34;prometheus&#34;,&#34;instance&#34;:&#34;localhost:9090&#34;},&#34;values&#34;:[1,1,1],&#34;timestamps&#34;:[1549891461511,1549891476511,1549891491511]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; args may be added to the request in order to limit the time frame for the exported data. These args may contain either unix timestamp in seconds or &lt;a href=&#34;https://www.ietf.org/rfc/rfc3339.txt&#34;&gt;RFC3339&lt;/a&gt; values. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export -d &#39;match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&#39; -d &#39;start=1654543486&#39; -d &#39;end=1654543486&#39;&#xA;curl http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export -d &#39;match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&#39; -d &#39;start=2022-06-06T19:25:48+00:00&#39; -d &#39;end=2022-06-06T19:29:07+00:00&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional &lt;code&gt;max_rows_per_line&lt;/code&gt; arg may be added to the request for limiting the maximum number of rows exported per each JSON line. Optional &lt;code&gt;reduce_mem_usage=1&lt;/code&gt; arg may be added to the request for reducing memory usage when exporting big number of time series. In this case the output may contain multiple lines with samples for the same time series.&lt;/p&gt; &#xA;&lt;p&gt;Pass &lt;code&gt;Accept-Encoding: gzip&lt;/code&gt; HTTP header in the request to &lt;code&gt;/api/v1/export&lt;/code&gt; in order to reduce network bandwidth during exporting big amounts of time series data. This enables gzip compression for the exported data. Example for exporting gzipped data:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -H &#39;Accept-Encoding: gzip&#39; http://localhost:8428/api/v1/export -d &#39;match[]={__name__!=&#34;&#34;}&#39; &amp;gt; data.jsonl.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The maximum duration for each request to &lt;code&gt;/api/v1/export&lt;/code&gt; is limited by &lt;code&gt;-search.maxExportDuration&lt;/code&gt; command-line flag.&lt;/p&gt; &#xA;&lt;p&gt;Exported data can be imported via POST&#39;ing it to &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-json-line-format&#34;&gt;/api/v1/import&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#deduplication&#34;&gt;deduplication&lt;/a&gt; is applied to the data exported via &lt;code&gt;/api/v1/export&lt;/code&gt; by default. The deduplication isn&#39;t applied if &lt;code&gt;reduce_mem_usage=1&lt;/code&gt; query arg is passed to the request.&lt;/p&gt; &#xA;&lt;h3&gt;How to export CSV data&lt;/h3&gt; &#xA;&lt;p&gt;Send a request to &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export/csv?format=&amp;lt;format&amp;gt;&amp;amp;match=&amp;lt;timeseries_selector_for_export&amp;gt;&lt;/code&gt;, where:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; must contain comma-delimited label names for the exported CSV. The following special label names are supported:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;__name__&lt;/code&gt; - metric name&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;__value__&lt;/code&gt; - sample value&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;__timestamp__:&amp;lt;ts_format&amp;gt;&lt;/code&gt; - sample timestamp. &lt;code&gt;&amp;lt;ts_format&amp;gt;&lt;/code&gt; can have the following values: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;unix_s&lt;/code&gt; - unix seconds&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;unix_ms&lt;/code&gt; - unix milliseconds&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;unix_ns&lt;/code&gt; - unix nanoseconds&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;rfc3339&lt;/code&gt; - &lt;a href=&#34;https://www.ietf.org/rfc/rfc3339.txt&#34;&gt;RFC3339&lt;/a&gt; time&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;custom:&amp;lt;layout&amp;gt;&lt;/code&gt; - custom layout for time that is supported by &lt;a href=&#34;https://golang.org/pkg/time/#Time.Format&#34;&gt;time.Format&lt;/a&gt; function from Go.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;&amp;lt;timeseries_selector_for_export&amp;gt;&lt;/code&gt; may contain any &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/#time-series-selectors&#34;&gt;time series selector&lt;/a&gt; for metrics to export.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; args may be added to the request in order to limit the time frame for the exported data. These args may contain either unix timestamp in seconds or &lt;a href=&#34;https://www.ietf.org/rfc/rfc3339.txt&#34;&gt;RFC3339&lt;/a&gt; values. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export/csv -d &#39;format=&amp;lt;format&amp;gt;&#39; -d &#39;match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&#39; -d &#39;start=1654543486&#39; -d &#39;end=1654543486&#39;&#xA;curl http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export/csv -d &#39;format=&amp;lt;format&amp;gt;&#39; -d &#39;match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&#39; -d &#39;start=2022-06-06T19:25:48+00:00&#39; -d &#39;end=2022-06-06T19:29:07+00:00&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The exported CSV data can be imported to VictoriaMetrics via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-csv-data&#34;&gt;/api/v1/import/csv&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#deduplication&#34;&gt;deduplication&lt;/a&gt; is applied for the data exported in CSV by default. It is possible to export raw data without de-duplication by passing &lt;code&gt;reduce_mem_usage=1&lt;/code&gt; query arg to &lt;code&gt;/api/v1/export/csv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How to export data in native format&lt;/h3&gt; &#xA;&lt;p&gt;Send a request to &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export/native?match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;timeseries_selector_for_export&amp;gt;&lt;/code&gt; may contain any &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/#time-series-selectors&#34;&gt;time series selector&lt;/a&gt; for metrics to export. Use &lt;code&gt;{__name__=~&#34;.*&#34;}&lt;/code&gt; selector for fetching all the time series.&lt;/p&gt; &#xA;&lt;p&gt;On large databases you may experience problems with limit on the number of time series, which can be exported. In this case you need to adjust &lt;code&gt;-search.maxExportSeries&lt;/code&gt; command-line flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# count unique time series in database&#xA;wget -O- -q &#39;http://your_victoriametrics_instance:8428/api/v1/series/count&#39; | jq &#39;.data[0]&#39;&#xA;&#xA;# relaunch victoriametrics with search.maxExportSeries more than value from previous command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; args may be added to the request in order to limit the time frame for the exported data. These args may contain either unix timestamp in seconds or &lt;a href=&#34;https://www.ietf.org/rfc/rfc3339.txt&#34;&gt;RFC3339&lt;/a&gt; values. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export/native -d &#39;match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&#39; -d &#39;start=1654543486&#39; -d &#39;end=1654543486&#39;&#xA;curl http://&amp;lt;victoriametrics-addr&amp;gt;:8428/api/v1/export/native -d &#39;match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&#39; -d &#39;start=2022-06-06T19:25:48+00:00&#39; -d &#39;end=2022-06-06T19:29:07+00:00&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The exported data can be imported to VictoriaMetrics via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-native-format&#34;&gt;/api/v1/import/native&lt;/a&gt;. The native export format may change in incompatible way between VictoriaMetrics releases, so the data exported from the release X can fail to be imported into VictoriaMetrics release Y.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#deduplication&#34;&gt;deduplication&lt;/a&gt; isn&#39;t applied for the data exported in native format. It is expected that the de-duplication is performed during data import.&lt;/p&gt; &#xA;&lt;h2&gt;How to import time series data&lt;/h2&gt; &#xA;&lt;p&gt;Time series data can be imported into VictoriaMetrics via any supported data ingestion protocol:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write&#34;&gt;Prometheus remote_write API&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#prometheus-setup&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;DataDog &lt;code&gt;submit metrics&lt;/code&gt; API. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-send-data-from-datadog-agent&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;InfluxDB line protocol. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-send-data-from-influxdb-compatible-agents-such-as-telegraf&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;Graphite plaintext protocol. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-send-data-from-graphite-compatible-agents-such-as-statsd&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;OpenTSDB telnet put protocol. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#sending-data-via-telnet-put-protocol&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;OpenTSDB http &lt;code&gt;/api/put&lt;/code&gt; protocol. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#sending-opentsdb-data-via-http-apiput-requests&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/api/v1/import&lt;/code&gt; for importing data obtained from &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-json-line-format&#34;&gt;/api/v1/export&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-json-line-format&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/api/v1/import/native&lt;/code&gt; for importing data obtained from &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-native-format&#34;&gt;/api/v1/export/native&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-native-format&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/api/v1/import/csv&lt;/code&gt; for importing arbitrary CSV data. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-csv-data&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/api/v1/import/prometheus&lt;/code&gt; for importing data in Prometheus exposition format. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-prometheus-exposition-format&#34;&gt;these docs&lt;/a&gt; for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to import data in JSON line format&lt;/h3&gt; &#xA;&lt;p&gt;Example for importing data obtained via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-json-line-format&#34;&gt;/api/v1/export&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Export the data from &amp;lt;source-victoriametrics&amp;gt;:&#xA;curl http://source-victoriametrics:8428/api/v1/export -d &#39;match={__name__!=&#34;&#34;}&#39; &amp;gt; exported_data.jsonl&#xA;&#xA;# Import the data to &amp;lt;destination-victoriametrics&amp;gt;:&#xA;curl -X POST http://destination-victoriametrics:8428/api/v1/import -T exported_data.jsonl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pass &lt;code&gt;Content-Encoding: gzip&lt;/code&gt; HTTP request header to &lt;code&gt;/api/v1/import&lt;/code&gt; for importing gzipped data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Export gzipped data from &amp;lt;source-victoriametrics&amp;gt;:&#xA;curl -H &#39;Accept-Encoding: gzip&#39; http://source-victoriametrics:8428/api/v1/export -d &#39;match={__name__!=&#34;&#34;}&#39; &amp;gt; exported_data.jsonl.gz&#xA;&#xA;# Import gzipped data to &amp;lt;destination-victoriametrics&amp;gt;:&#xA;curl -X POST -H &#39;Content-Encoding: gzip&#39; http://destination-victoriametrics:8428/api/v1/import -T exported_data.jsonl.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extra labels may be added to all the imported time series by passing &lt;code&gt;extra_label=name=value&lt;/code&gt; query args. For example, &lt;code&gt;/api/v1/import?extra_label=foo=bar&lt;/code&gt; would add &lt;code&gt;&#34;foo&#34;:&#34;bar&#34;&lt;/code&gt; label to all the imported time series.&lt;/p&gt; &#xA;&lt;p&gt;Note that it could be required to flush response cache after importing historical data. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#backfilling&#34;&gt;these docs&lt;/a&gt; for detail.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics parses input JSON lines one-by-one. It loads the whole JSON line in memory, then parses it and then saves the parsed samples into persistent storage. This means that VictoriaMetrics can occupy big amounts of RAM when importing too long JSON lines. The solution is to split too long JSON lines into smaller lines. It is OK if samples for a single time series are split among multiple JSON lines.&lt;/p&gt; &#xA;&lt;h3&gt;How to import data in native format&lt;/h3&gt; &#xA;&lt;p&gt;The specification of VictoriaMetrics&#39; native format may yet change and is not formally documented yet. So currently we do not recommend that external clients attempt to pack their own metrics in native format file.&lt;/p&gt; &#xA;&lt;p&gt;If you have a native format file obtained via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-native-format&#34;&gt;/api/v1/export/native&lt;/a&gt; however this is the most efficient protocol for importing data in.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Export the data from &amp;lt;source-victoriametrics&amp;gt;:&#xA;curl http://source-victoriametrics:8428/api/v1/export/native -d &#39;match={__name__!=&#34;&#34;}&#39; &amp;gt; exported_data.bin&#xA;&#xA;# Import the data to &amp;lt;destination-victoriametrics&amp;gt;:&#xA;curl -X POST http://destination-victoriametrics:8428/api/v1/import/native -T exported_data.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extra labels may be added to all the imported time series by passing &lt;code&gt;extra_label=name=value&lt;/code&gt; query args. For example, &lt;code&gt;/api/v1/import/native?extra_label=foo=bar&lt;/code&gt; would add &lt;code&gt;&#34;foo&#34;:&#34;bar&#34;&lt;/code&gt; label to all the imported time series.&lt;/p&gt; &#xA;&lt;p&gt;Note that it could be required to flush response cache after importing historical data. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#backfilling&#34;&gt;these docs&lt;/a&gt; for detail.&lt;/p&gt; &#xA;&lt;h3&gt;How to import CSV data&lt;/h3&gt; &#xA;&lt;p&gt;Arbitrary CSV data can be imported via &lt;code&gt;/api/v1/import/csv&lt;/code&gt;. The CSV data is imported according to the provided &lt;code&gt;format&lt;/code&gt; query arg. The &lt;code&gt;format&lt;/code&gt; query arg must contain comma-separated list of parsing rules for CSV fields. Each rule consists of three parts delimited by a colon:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;column_pos&amp;gt;:&amp;lt;type&amp;gt;:&amp;lt;context&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;column_pos&amp;gt;&lt;/code&gt; is the position of the CSV column (field). Column numbering starts from 1. The order of parsing rules may be arbitrary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; describes the column type. Supported types are: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;metric&lt;/code&gt; - the corresponding CSV column at &lt;code&gt;&amp;lt;column_pos&amp;gt;&lt;/code&gt; contains metric value, which must be integer or floating-point number. The metric name is read from the &lt;code&gt;&amp;lt;context&amp;gt;&lt;/code&gt;. CSV line must have at least a single metric field. Multiple metric fields per CSV line is OK.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;label&lt;/code&gt; - the corresponding CSV column at &lt;code&gt;&amp;lt;column_pos&amp;gt;&lt;/code&gt; contains label value. The label name is read from the &lt;code&gt;&amp;lt;context&amp;gt;&lt;/code&gt;. CSV line may have arbitrary number of label fields. All these labels are attached to all the configured metrics.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;time&lt;/code&gt; - the corresponding CSV column at &lt;code&gt;&amp;lt;column_pos&amp;gt;&lt;/code&gt; contains metric time. CSV line may contain either one or zero columns with time. If CSV line has no time, then the current time is used. The time is applied to all the configured metrics. The format of the time is configured via &lt;code&gt;&amp;lt;context&amp;gt;&lt;/code&gt;. Supported time formats are: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;unix_s&lt;/code&gt; - unix timestamp in seconds.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;unix_ms&lt;/code&gt; - unix timestamp in milliseconds.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;unix_ns&lt;/code&gt; - unix timestamp in nanoseconds. Note that VictoriaMetrics rounds the timestamp to milliseconds.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;rfc3339&lt;/code&gt; - timestamp in &lt;a href=&#34;https://tools.ietf.org/html/rfc3339&#34;&gt;RFC3339&lt;/a&gt; format, i.e. &lt;code&gt;2006-01-02T15:04:05Z&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;custom:&amp;lt;layout&amp;gt;&lt;/code&gt; - custom layout for the timestamp. The &lt;code&gt;&amp;lt;layout&amp;gt;&lt;/code&gt; may contain arbitrary time layout according to &lt;a href=&#34;https://golang.org/pkg/time/#Parse&#34;&gt;time.Parse rules in Go&lt;/a&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each request to &lt;code&gt;/api/v1/import/csv&lt;/code&gt; may contain arbitrary number of CSV lines.&lt;/p&gt; &#xA;&lt;p&gt;Example for importing CSV data via &lt;code&gt;/api/v1/import/csv&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -d &#34;GOOG,1.23,4.56,NYSE&#34; &#39;http://localhost:8428/api/v1/import/csv?format=2:metric:ask,3:metric:bid,1&lt;span&gt;🏷&lt;/span&gt;ticker,4&lt;span&gt;🏷&lt;/span&gt;market&#39;&#xA;curl -d &#34;MSFT,3.21,1.67,NASDAQ&#34; &#39;http://localhost:8428/api/v1/import/csv?format=2:metric:ask,3:metric:bid,1&lt;span&gt;🏷&lt;/span&gt;ticker,4&lt;span&gt;🏷&lt;/span&gt;market&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that the data may be read via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-export-data-in-json-line-format&#34;&gt;/api/v1/export&lt;/a&gt; endpoint:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -G &#39;http://localhost:8428/api/v1/export&#39; -d &#39;match[]={ticker!=&#34;&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following response should be returned:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;bid&#34;,&#34;market&#34;:&#34;NASDAQ&#34;,&#34;ticker&#34;:&#34;MSFT&#34;},&#34;values&#34;:[1.67],&#34;timestamps&#34;:[1583865146520]}&#xA;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;bid&#34;,&#34;market&#34;:&#34;NYSE&#34;,&#34;ticker&#34;:&#34;GOOG&#34;},&#34;values&#34;:[4.56],&#34;timestamps&#34;:[1583865146495]}&#xA;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;ask&#34;,&#34;market&#34;:&#34;NASDAQ&#34;,&#34;ticker&#34;:&#34;MSFT&#34;},&#34;values&#34;:[3.21],&#34;timestamps&#34;:[1583865146520]}&#xA;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;ask&#34;,&#34;market&#34;:&#34;NYSE&#34;,&#34;ticker&#34;:&#34;GOOG&#34;},&#34;values&#34;:[1.23],&#34;timestamps&#34;:[1583865146495]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extra labels may be added to all the imported lines by passing &lt;code&gt;extra_label=name=value&lt;/code&gt; query args. For example, &lt;code&gt;/api/v1/import/csv?extra_label=foo=bar&lt;/code&gt; would add &lt;code&gt;&#34;foo&#34;:&#34;bar&#34;&lt;/code&gt; label to all the imported lines.&lt;/p&gt; &#xA;&lt;p&gt;Note that it could be required to flush response cache after importing historical data. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#backfilling&#34;&gt;these docs&lt;/a&gt; for detail.&lt;/p&gt; &#xA;&lt;h3&gt;How to import data in Prometheus exposition format&lt;/h3&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts data in &lt;a href=&#34;https://github.com/prometheus/docs/raw/master/content/docs/instrumenting/exposition_formats.md#text-based-format&#34;&gt;Prometheus exposition format&lt;/a&gt; and in &lt;a href=&#34;https://github.com/OpenObservability/OpenMetrics/raw/master/specification/OpenMetrics.md&#34;&gt;OpenMetrics format&lt;/a&gt; via &lt;code&gt;/api/v1/import/prometheus&lt;/code&gt; path. For example, the following line imports a single line in Prometheus exposition format into VictoriaMetrics:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -d &#39;foo{bar=&#34;baz&#34;} 123&#39; -X POST &#39;http://localhost:8428/api/v1/import/prometheus&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The following command may be used for verifying the imported data:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -G &#39;http://localhost:8428/api/v1/export&#39; -d &#39;match={__name__=~&#34;foo&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;It should return something like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;metric&#34;:{&#34;__name__&#34;:&#34;foo&#34;,&#34;bar&#34;:&#34;baz&#34;},&#34;values&#34;:[123],&#34;timestamps&#34;:[1594370496905]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pass &lt;code&gt;Content-Encoding: gzip&lt;/code&gt; HTTP request header to &lt;code&gt;/api/v1/import/prometheus&lt;/code&gt; for importing gzipped data:&lt;/p&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Import gzipped data to &amp;lt;destination-victoriametrics&amp;gt;:&#xA;curl -X POST -H &#39;Content-Encoding: gzip&#39; http://destination-victoriametrics:8428/api/v1/import/prometheus -T prometheus_data.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Extra labels may be added to all the imported metrics by passing &lt;code&gt;extra_label=name=value&lt;/code&gt; query args. For example, &lt;code&gt;/api/v1/import/prometheus?extra_label=foo=bar&lt;/code&gt; would add &lt;code&gt;{foo=&#34;bar&#34;}&lt;/code&gt; label to all the imported metrics.&lt;/p&gt; &#xA;&lt;p&gt;If timestamp is missing in &lt;code&gt;&amp;lt;metric&amp;gt; &amp;lt;value&amp;gt; &amp;lt;timestamp&amp;gt;&lt;/code&gt; Prometheus exposition format line, then the current timestamp is used during data ingestion. It can be overridden by passing unix timestamp in &lt;em&gt;milliseconds&lt;/em&gt; via &lt;code&gt;timestamp&lt;/code&gt; query arg. For example, &lt;code&gt;/api/v1/import/prometheus?timestamp=1594370496905&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts arbitrary number of lines in a single request to &lt;code&gt;/api/v1/import/prometheus&lt;/code&gt;, i.e. it supports data streaming.&lt;/p&gt; &#xA;&lt;p&gt;Note that it could be required to flush response cache after importing historical data. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#backfilling&#34;&gt;these docs&lt;/a&gt; for detail.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics also may scrape Prometheus targets - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-scrape-prometheus-exporters-such-as-node-exporter&#34;&gt;these docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Relabeling&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics supports Prometheus-compatible relabeling for all the ingested metrics if &lt;code&gt;-relabelConfig&lt;/code&gt; command-line flag points to a file containing a list of &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config&#34;&gt;relabel_config&lt;/a&gt; entries. The &lt;code&gt;-relabelConfig&lt;/code&gt; also can point to http or https url. For example, &lt;code&gt;-relabelConfig=https://config-server/relabel_config.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following docs can be useful in understanding the relabeling:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/relabeling.html&#34;&gt;Cookbook for common relabeling tasks&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://valyala.medium.com/how-to-use-relabeling-in-prometheus-and-victoriametrics-8b90fc22c4b2&#34;&gt;Relabeling tips and tricks&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;-relabelConfig&lt;/code&gt; files can contain special placeholders in the form &lt;code&gt;%{ENV_VAR}&lt;/code&gt;, which are replaced by the corresponding environment variable values.&lt;/p&gt; &#xA;&lt;p&gt;Example contents for &lt;code&gt;-relabelConfig&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;# Add {cluster=&#34;dev&#34;} label.&#xA;- target_label: cluster&#xA;  replacement: dev&#xA;&#xA;# Drop the metric (or scrape target) with `{__meta_kubernetes_pod_container_init=&#34;true&#34;}` label.&#xA;- action: drop&#xA;  source_labels: [__meta_kubernetes_pod_container_init]&#xA;  regex: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;VictoriaMetrics provides additional relabeling features such as Graphite-style relabeling. See &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html#relabeling&#34;&gt;these docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Federation&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics exports &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/federation/&#34;&gt;Prometheus-compatible federation data&lt;/a&gt; at &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/federate?match[]=&amp;lt;timeseries_selector_for_federation&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Optional &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; args may be added to the request in order to scrape the last point for each selected time series on the &lt;code&gt;[start ... end]&lt;/code&gt; interval. &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; may contain either unix timestamp in seconds or &lt;a href=&#34;https://www.ietf.org/rfc/rfc3339.txt&#34;&gt;RFC3339&lt;/a&gt; values. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl http://&amp;lt;victoriametrics-addr&amp;gt;:8428/federate -d &#39;match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&#39; -d &#39;start=1654543486&#39; -d &#39;end=1654543486&#39;&#xA;curl http://&amp;lt;victoriametrics-addr&amp;gt;:8428/federate -d &#39;match[]=&amp;lt;timeseries_selector_for_export&amp;gt;&#39; -d &#39;start=2022-06-06T19:25:48+00:00&#39; -d &#39;end=2022-06-06T19:29:07+00:00&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the last point on the interval &lt;code&gt;[now - max_lookback ... now]&lt;/code&gt; is scraped for each time series. The default value for &lt;code&gt;max_lookback&lt;/code&gt; is &lt;code&gt;5m&lt;/code&gt; (5 minutes), but it can be overridden with &lt;code&gt;max_lookback&lt;/code&gt; query arg. For instance, &lt;code&gt;/federate?match[]=up&amp;amp;max_lookback=1h&lt;/code&gt; would return last points on the &lt;code&gt;[now - 1h ... now]&lt;/code&gt; interval. This may be useful for time series federation with scrape intervals exceeding &lt;code&gt;5m&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Capacity planning&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics uses lower amounts of CPU, RAM and storage space on production workloads compared to competing solutions (Prometheus, Thanos, Cortex, TimescaleDB, InfluxDB, QuestDB, M3DB) according to &lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html&#34;&gt;our case studies&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics capacity scales linearly with the available resources. The needed amounts of CPU and RAM highly depends on the workload - the number of &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-an-active-time-series&#34;&gt;active time series&lt;/a&gt;, series &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;churn rate&lt;/a&gt;, query types, query qps, etc. It is recommended setting up a test VictoriaMetrics for your production workload and iteratively scaling CPU and RAM resources until it becomes stable according to &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#troubleshooting&#34;&gt;troubleshooting docs&lt;/a&gt;. A single-node VictoriaMetrics works perfectly with the following production workload according to &lt;a href=&#34;https://docs.victoriametrics.com/CaseStudies.html&#34;&gt;our case studies&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ingestion rate: 1.5+ million samples per second&lt;/li&gt; &#xA; &lt;li&gt;Active time series: 50+ million&lt;/li&gt; &#xA; &lt;li&gt;Total time series: 5+ billion&lt;/li&gt; &#xA; &lt;li&gt;Time series churn rate: 150+ million of new series per day&lt;/li&gt; &#xA; &lt;li&gt;Total number of samples: 10+ trillion&lt;/li&gt; &#xA; &lt;li&gt;Queries: 200+ qps&lt;/li&gt; &#xA; &lt;li&gt;Query latency (99th percentile): 1 second&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The needed storage space for the given retention (the retention is set via &lt;code&gt;-retentionPeriod&lt;/code&gt; command-line flag) can be extrapolated from disk space usage in a test run. For example, if &lt;code&gt;-storageDataPath&lt;/code&gt; directory size becomes 10GB after a day-long test run on a production workload, then it will need at least &lt;code&gt;10GB*100=1TB&lt;/code&gt; of disk space for &lt;code&gt;-retentionPeriod=100d&lt;/code&gt; (100-days retention period).&lt;/p&gt; &#xA;&lt;p&gt;It is recommended leaving the following amounts of spare resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;50% of free RAM for reducing the probability of OOM (out of memory) crashes and slowdowns during temporary spikes in workload.&lt;/li&gt; &#xA; &lt;li&gt;50% of spare CPU for reducing the probability of slowdowns during temporary spikes in workload.&lt;/li&gt; &#xA; &lt;li&gt;At least &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#storage&#34;&gt;20% of free storage space&lt;/a&gt; at the directory pointed by &lt;code&gt;-storageDataPath&lt;/code&gt; command-line flag. See also &lt;code&gt;-storage.minFreeDiskSpaceBytes&lt;/code&gt; command-line flag description &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#list-of-command-line-flags&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#resource-usage-limits&#34;&gt;resource usage limits docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Resource usage limits&lt;/h2&gt; &#xA;&lt;p&gt;By default VictoriaMetrics is tuned for an optimal resource usage under typical workloads. Some workloads may need fine-grained resource usage limits. In these cases the following command-line flags may be useful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-memory.allowedPercent&lt;/code&gt; and &lt;code&gt;-memory.allowedBytes&lt;/code&gt; limit the amounts of memory, which may be used for various internal caches at VictoriaMetrics. Note that VictoriaMetrics may use more memory, since these flags don&#39;t limit additional memory, which may be needed on a per-query basis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxMemoryPerQuery&lt;/code&gt; limits the amounts of memory, which can be used for processing a single query. Queries, which need more memory, are rejected. Heavy queries, which select big number of time series, may exceed the per-query memory limit by a small percent. The total memory limit for concurrently executed queries can be estimated as &lt;code&gt;-search.maxMemoryPerQuery&lt;/code&gt; multiplied by &lt;code&gt;-search.maxConcurrentRequests&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxUniqueTimeseries&lt;/code&gt; limits the number of unique time series a single query can find and process. VictoriaMetrics keeps in memory some metainformation about the time series located by each query and spends some CPU time for processing the found time series. This means that the maximum memory usage and CPU usage a single query can use is proportional to &lt;code&gt;-search.maxUniqueTimeseries&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxQueryDuration&lt;/code&gt; limits the duration of a single query. If the query takes longer than the given duration, then it is canceled. This allows saving CPU and RAM when executing unexpected heavy queries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxConcurrentRequests&lt;/code&gt; limits the number of concurrent requests VictoriaMetrics can process. Bigger number of concurrent requests usually means bigger memory usage. For example, if a single query needs 100 MiB of additional memory during its execution, then 100 concurrent queries may need &lt;code&gt;100 * 100 MiB = 10 GiB&lt;/code&gt; of additional memory. So it is better to limit the number of concurrent queries, while suspending additional incoming queries if the concurrency limit is reached. VictoriaMetrics provides &lt;code&gt;-search.maxQueueDuration&lt;/code&gt; command-line flag for limiting the max wait time for suspended queries. See also &lt;code&gt;-search.maxMemoryPerQuery&lt;/code&gt; command-line flag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxSamplesPerSeries&lt;/code&gt; limits the number of raw samples the query can process per each time series. VictoriaMetrics sequentially processes raw samples per each found time series during the query. It unpacks raw samples on the selected time range per each time series into memory and then applies the given &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#rollup-functions&#34;&gt;rollup function&lt;/a&gt;. The &lt;code&gt;-search.maxSamplesPerSeries&lt;/code&gt; command-line flag allows limiting memory usage in the case when the query is executed on a time range, which contains hundreds of millions of raw samples per each located time series.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxSamplesPerQuery&lt;/code&gt; limits the number of raw samples a single query can process. This allows limiting CPU usage for heavy queries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxPointsPerTimeseries&lt;/code&gt; limits the number of calculated points, which can be returned per each matching time series from &lt;a href=&#34;https://docs.victoriametrics.com/keyConcepts.html#range-query&#34;&gt;range query&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxPointsSubqueryPerTimeseries&lt;/code&gt; limits the number of calculated points, which can be generated per each matching time series during &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#subqueries&#34;&gt;subquery&lt;/a&gt; evaluation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxSeries&lt;/code&gt; limits the number of time series, which may be returned from &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#finding-series-by-label-matchers&#34;&gt;/api/v1/series&lt;/a&gt;. This endpoint is used mostly by Grafana for auto-completion of metric names, label names and label values. Queries to this endpoint may take big amounts of CPU time and memory when the database contains big number of unique time series because of &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;high churn rate&lt;/a&gt;. In this case it might be useful to set the &lt;code&gt;-search.maxSeries&lt;/code&gt; to quite low value in order limit CPU and memory usage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxTagKeys&lt;/code&gt; limits the number of items, which may be returned from &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#getting-label-names&#34;&gt;/api/v1/labels&lt;/a&gt;. This endpoint is used mostly by Grafana for auto-completion of label names. Queries to this endpoint may take big amounts of CPU time and memory when the database contains big number of unique time series because of &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;high churn rate&lt;/a&gt;. In this case it might be useful to set the &lt;code&gt;-search.maxTagKeys&lt;/code&gt; to quite low value in order to limit CPU and memory usage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxTagValues&lt;/code&gt; limits the number of items, which may be returned from &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#querying-label-values&#34;&gt;/api/v1/label/.../values&lt;/a&gt;. This endpoint is used mostly by Grafana for auto-completion of label values. Queries to this endpoint may take big amounts of CPU time and memory when the database contains big number of unique time series because of &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;high churn rate&lt;/a&gt;. In this case it might be useful to set the &lt;code&gt;-search.maxTagValues&lt;/code&gt; to quite low value in order to limit CPU and memory usage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.maxTagValueSuffixesPerSearch&lt;/code&gt; limits the number of entries, which may be returned from &lt;code&gt;/metrics/find&lt;/code&gt; endpoint. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#graphite-metrics-api-usage&#34;&gt;Graphite Metrics API usage docs&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#cardinality-limiter&#34;&gt;cardinality limiter&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#capacity-planning&#34;&gt;capacity planning docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;High availability&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install multiple VictoriaMetrics instances in distinct datacenters (availability zones).&lt;/li&gt; &#xA; &lt;li&gt;Pass addresses of these instances to &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt; via &lt;code&gt;-remoteWrite.url&lt;/code&gt; command-line flag:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;/path/to/vmagent -remoteWrite.url=http://&amp;lt;victoriametrics-addr-1&amp;gt;:8428/api/v1/write -remoteWrite.url=http://&amp;lt;victoriametrics-addr-2&amp;gt;:8428/api/v1/write&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively these addresses may be passed to &lt;code&gt;remote_write&lt;/code&gt; section in Prometheus config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;remote_write:&#xA;  - url: http://&amp;lt;victoriametrics-addr-1&amp;gt;:8428/api/v1/write&#xA;    queue_config:&#xA;      max_samples_per_send: 10000&#xA;  # ...&#xA;  - url: http://&amp;lt;victoriametrics-addr-N&amp;gt;:8428/api/v1/write&#xA;    queue_config:&#xA;      max_samples_per_send: 10000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apply the updated config:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kill -HUP `pidof prometheus`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is recommended to use &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt; instead of Prometheus for highly loaded setups.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Now Prometheus should write data into all the configured &lt;code&gt;remote_write&lt;/code&gt; urls in parallel.&lt;/li&gt; &#xA; &lt;li&gt;Set up &lt;a href=&#34;https://github.com/jacksontj/promxy&#34;&gt;Promxy&lt;/a&gt; in front of all the VictoriaMetrics replicas.&lt;/li&gt; &#xA; &lt;li&gt;Set up Prometheus datasource in Grafana that points to Promxy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have Prometheus HA pairs with replicas &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt; in each pair, then configure each &lt;code&gt;r1&lt;/code&gt; to write data to &lt;code&gt;victoriametrics-addr-1&lt;/code&gt;, while each &lt;code&gt;r2&lt;/code&gt; should write data to &lt;code&gt;victoriametrics-addr-2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Another option is to write data simultaneously from Prometheus HA pair to a pair of VictoriaMetrics instances with the enabled de-duplication. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#deduplication&#34;&gt;this section&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Deduplication&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics leaves a single raw sample with the biggest timestamp per each &lt;code&gt;-dedup.minScrapeInterval&lt;/code&gt; discrete interval if &lt;code&gt;-dedup.minScrapeInterval&lt;/code&gt; is set to positive duration. For example, &lt;code&gt;-dedup.minScrapeInterval=60s&lt;/code&gt; would leave a single raw sample with the biggest timestamp per each discrete 60s interval. If multiple raw samples have the same biggest timestamp on the given &lt;code&gt;-dedup.minScrapeInterval&lt;/code&gt; discrete interval, then an arbitrary sample out of these samples is left. This aligns with the &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/#staleness&#34;&gt;staleness rules in Prometheus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;-dedup.minScrapeInterval=D&lt;/code&gt; is equivalent to &lt;code&gt;-downsampling.period=0s:D&lt;/code&gt; if &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#downsampling&#34;&gt;downsampling&lt;/a&gt; is enabled. So it is safe to use deduplication and downsampling simultaneously.&lt;/p&gt; &#xA;&lt;p&gt;The recommended value for &lt;code&gt;-dedup.minScrapeInterval&lt;/code&gt; must equal to &lt;code&gt;scrape_interval&lt;/code&gt; config from Prometheus configs. It is recommended to have a single &lt;code&gt;scrape_interval&lt;/code&gt; across all the scrape targets. See &lt;a href=&#34;https://www.robustperception.io/keep-it-simple-scrape_interval-id&#34;&gt;this article&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;The de-duplication reduces disk space usage if multiple identically configured &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt; or Prometheus instances in HA pair write data to the same VictoriaMetrics instance. These vmagent or Prometheus instances must have identical &lt;code&gt;external_labels&lt;/code&gt; section in their configs, so they write data to the same time series. See also &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html#scraping-big-number-of-targets&#34;&gt;how to set up multiple vmagent instances for scraping the same targets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended passing different &lt;code&gt;-promscrape.cluster.name&lt;/code&gt; values to HA pairs of &lt;code&gt;vmagent&lt;/code&gt; instances, so the de-duplication consistently leaves samples for one &lt;code&gt;vmagent&lt;/code&gt; instance and removes duplicate samples from other &lt;code&gt;vmagent&lt;/code&gt; instances. See &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html#high-availability&#34;&gt;these docs&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Storage&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics stores time series data in &lt;a href=&#34;https://en.wikipedia.org/wiki/Log-structured_merge-tree&#34;&gt;MergeTree&lt;/a&gt;-like data structures. On insert, VictoriaMetrics accumulates up to 1s of data and dumps it on disk to &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;/data/small/YYYY_MM/&lt;/code&gt; subdirectory forming a &lt;code&gt;part&lt;/code&gt; with the following name pattern: &lt;code&gt;rowsCount_blocksCount_minTimestamp_maxTimestamp&lt;/code&gt;. Each part consists of two &#34;columns&#34;: values and timestamps. These are sorted and compressed raw time series values. Additionally, part contains index files for searching for specific series in the values and timestamps files.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Parts&lt;/code&gt; are periodically merged into the bigger parts. The resulting &lt;code&gt;part&lt;/code&gt; is constructed under &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;/data/{small,big}/YYYY_MM/tmp&lt;/code&gt; subdirectory. When the resulting &lt;code&gt;part&lt;/code&gt; is complete, it is atomically moved from the &lt;code&gt;tmp&lt;/code&gt; to its own subdirectory, while the source parts are atomically removed. The end result is that the source parts are substituted by a single resulting bigger &lt;code&gt;part&lt;/code&gt; in the &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;/data/{small,big}/YYYY_MM/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics doesn&#39;t merge parts if their summary size exceeds free disk space. This prevents from potential out of disk space errors during merge. The number of parts may significantly increase over time under free disk space shortage. This increases overhead during data querying, since VictoriaMetrics needs to read data from bigger number of parts per each request. That&#39;s why it is recommended to have at least 20% of free disk space under directory pointed by &lt;code&gt;-storageDataPath&lt;/code&gt; command-line flag.&lt;/p&gt; &#xA;&lt;p&gt;Information about merging process is available in &lt;a href=&#34;https://grafana.com/dashboards/10229&#34;&gt;single-node VictoriaMetrics&lt;/a&gt; and &lt;a href=&#34;https://grafana.com/grafana/dashboards/11176&#34;&gt;clustered VictoriaMetrics&lt;/a&gt; Grafana dashboards. See more details in &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#monitoring&#34;&gt;monitoring docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;merge&lt;/code&gt; process improves compression rate and keeps number of &lt;code&gt;parts&lt;/code&gt; on disk relatively low. Benefits of doing the merge process are the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;it improves query performance, since lower number of &lt;code&gt;parts&lt;/code&gt; are inspected with each query&lt;/li&gt; &#xA; &lt;li&gt;it reduces the number of data files, since each &lt;code&gt;part&lt;/code&gt; contains fixed number of files&lt;/li&gt; &#xA; &lt;li&gt;various background maintenance tasks such as &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#deduplication&#34;&gt;de-duplication&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#downsampling&#34;&gt;downsampling&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-delete-time-series&#34;&gt;freeing up disk space for the deleted time series&lt;/a&gt; are performed during the merge.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Newly added &lt;code&gt;parts&lt;/code&gt; either appear in the storage or fail to appear. Storage never contains partially created parts. The same applies to merge process — &lt;code&gt;parts&lt;/code&gt; are either fully merged into a new &lt;code&gt;part&lt;/code&gt; or fail to merge. MergeTree doesn&#39;t contain partially merged &lt;code&gt;parts&lt;/code&gt;. &lt;code&gt;Part&lt;/code&gt; contents in MergeTree never change. Parts are immutable. They may be only deleted after the merge to a bigger &lt;code&gt;part&lt;/code&gt; or when the &lt;code&gt;part&lt;/code&gt; contents goes outside the configured &lt;code&gt;-retentionPeriod&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://valyala.medium.com/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;this article&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-work-with-snapshots&#34;&gt;how to work with snapshots&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Retention&lt;/h2&gt; &#xA;&lt;p&gt;Retention is configured with the &lt;code&gt;-retentionPeriod&lt;/code&gt; command-line flag, which takes a number followed by a time unit character - &lt;code&gt;h(ours)&lt;/code&gt;, &lt;code&gt;d(ays)&lt;/code&gt;, &lt;code&gt;w(eeks)&lt;/code&gt;, &lt;code&gt;y(ears)&lt;/code&gt;. If the time unit is not specified, a month is assumed. For instance, &lt;code&gt;-retentionPeriod=3&lt;/code&gt; means that the data will be stored for 3 months and then deleted. The default retention period is one month.&lt;/p&gt; &#xA;&lt;p&gt;Data is split in per-month partitions inside &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;/data/{small,big}&lt;/code&gt; folders. Data partitions outside the configured retention are deleted on the first day of the new month. Each partition consists of one or more data parts with the following name pattern &lt;code&gt;rowsCount_blocksCount_minTimestamp_maxTimestamp&lt;/code&gt;. Data parts outside of the configured retention are eventually deleted during &lt;a href=&#34;https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;background merge&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The maximum disk space usage for a given &lt;code&gt;-retentionPeriod&lt;/code&gt; is going to be (&lt;code&gt;-retentionPeriod&lt;/code&gt; + 1) months. For example, if &lt;code&gt;-retentionPeriod&lt;/code&gt; is set to 1, data for January is deleted on March 1st.&lt;/p&gt; &#xA;&lt;p&gt;Please note, the time range covered by data part is not limited by retention period unit. Hence, data part may contain data for multiple days and will be deleted only when fully outside of the configured retention.&lt;/p&gt; &#xA;&lt;p&gt;It is safe to extend &lt;code&gt;-retentionPeriod&lt;/code&gt; on existing data. If &lt;code&gt;-retentionPeriod&lt;/code&gt; is set to a lower value than before, then data outside the configured period will be eventually deleted.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics does not support indefinite retention, but you can specify an arbitrarily high duration, e.g. &lt;code&gt;-retentionPeriod=100y&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Multiple retentions&lt;/h2&gt; &#xA;&lt;p&gt;Distinct retentions for distinct time series can be configured via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#retention-filters&#34;&gt;retention filters&lt;/a&gt; in &lt;a href=&#34;https://docs.victoriametrics.com/enterprise.html&#34;&gt;VictoriaMetrics enterprise&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Community version of VictoriaMetrics supports only a single retention, which can be configured via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#retention&#34;&gt;-retentionPeriod&lt;/a&gt; command-line flag. If you need multiple retentions in community version of VictoriaMetrics, then you may start multiple VictoriaMetrics instances with distinct values for the following flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-retentionPeriod&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-storageDataPath&lt;/code&gt;, so the data for each retention period is saved in a separate directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-httpListenAddr&lt;/code&gt;, so clients may reach VictoriaMetrics instance with proper retention&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then set up &lt;a href=&#34;https://docs.victoriametrics.com/vmauth.html&#34;&gt;vmauth&lt;/a&gt; in front of VictoriaMetrics instances, so it could route requests from particular user to VictoriaMetrics with the desired retention.&lt;/p&gt; &#xA;&lt;p&gt;Similar scheme can be applied for multiple tenants in &lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html&#34;&gt;VictoriaMetrics cluster&lt;/a&gt;. See &lt;a href=&#34;https://docs.victoriametrics.com/guides/guide-vmcluster-multiple-retention-setup.html&#34;&gt;these docs&lt;/a&gt; for multi-retention setup details.&lt;/p&gt; &#xA;&lt;h2&gt;Retention filters&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.victoriametrics.com/enterprise.html&#34;&gt;Enterprise version of VictoriaMetrics&lt;/a&gt; supports e.g. &lt;code&gt;retention filters&lt;/code&gt;, which allow configuring multiple retentions for distinct sets of time series matching the configured &lt;a href=&#34;https://docs.victoriametrics.com/keyConcepts.html#filtering&#34;&gt;series filters&lt;/a&gt; via &lt;code&gt;-retentionFilter&lt;/code&gt; command-line flag. This flag accepts &lt;code&gt;filter:duration&lt;/code&gt; options, where &lt;code&gt;filter&lt;/code&gt; must be a valid &lt;a href=&#34;https://docs.victoriametrics.com/keyConcepts.html#filtering&#34;&gt;series filter&lt;/a&gt;, while the &lt;code&gt;duration&lt;/code&gt; must contain valid &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#retention&#34;&gt;retention&lt;/a&gt; for time series matching the given &lt;code&gt;filter&lt;/code&gt;. If series doesn&#39;t match any configured &lt;code&gt;-retentionFilter&lt;/code&gt;, then the retention configured via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#retention&#34;&gt;-retentionPeriod&lt;/a&gt; command-line flag is applied to it. If series matches multiple configured retention filters, then the smallest retention is applied.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following config sets 3 days retention for time series with &lt;code&gt;team=&#34;juniors&#34;&lt;/code&gt; label, 30 days retention for time series with &lt;code&gt;env=&#34;dev&#34;&lt;/code&gt; or &lt;code&gt;env=&#34;staging&#34;&lt;/code&gt; label and 1 year retention for the remaining time series:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-retentionFilter=&#39;{team=&#34;juniors&#34;}:3d&#39; -retentionFilter=&#39;{env=~&#34;dev|staging&#34;}:30d&#39; -retentionPeriod=1y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Important notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The data outside of the configured retention isn&#39;t deleted instantly - it is deleted eventually during &lt;a href=&#34;https://docs.victoriametrics.com/#storage&#34;&gt;background merges&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;-retentionFilter&lt;/code&gt; doesn&#39;t remove old data from &lt;code&gt;indexdb&lt;/code&gt; (aka inverted index) until the configured &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#retention&#34;&gt;-retentionPeriod&lt;/a&gt;. So the &lt;code&gt;indexdb&lt;/code&gt; size can grow big under &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;high churn rate&lt;/a&gt; even for small retentions configured via &lt;code&gt;-retentionFilter&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is safe updating &lt;code&gt;-retentionFilter&lt;/code&gt; during VictoriaMetrics restarts - the updated retention filters are applied eventually to historical data.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#retention-filters&#34;&gt;how to configure multiple retentions in VictoriaMetrics cluster&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Retention filters can be evaluated for free by downloading and using enterprise binaries from &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;the releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Downsampling&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.victoriametrics.com/enterprise.html&#34;&gt;VictoriaMetrics Enterprise&lt;/a&gt; supports multi-level downsampling with &lt;code&gt;-downsampling.period&lt;/code&gt; command-line flag. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-downsampling.period=30d:5m&lt;/code&gt; instructs VictoriaMetrics to &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#deduplication&#34;&gt;deduplicate&lt;/a&gt; samples older than 30 days with 5 minutes interval.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-downsampling.period=30d:5m,180d:1h&lt;/code&gt; instructs VictoriaMetrics to deduplicate samples older than 30 days with 5 minutes interval and to deduplicate samples older than 180 days with 1 hour interval.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Downsampling is applied independently per each time series. It can reduce disk space usage and improve query performance if it is applied to time series with big number of samples per each series. The downsampling doesn&#39;t improve query performance if the database contains big number of time series with small number of samples per each series (aka &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;high churn rate&lt;/a&gt;), since downsampling doesn&#39;t reduce the number of time series. So the majority of time is spent on searching for the matching time series. It is possible to use recording rules in &lt;a href=&#34;https://docs.victoriametrics.com/vmalert.html&#34;&gt;vmalert&lt;/a&gt; in order to reduce the number of time series. See &lt;a href=&#34;https://docs.victoriametrics.com/vmalert.html#downsampling-and-aggregation-via-vmalert&#34;&gt;these docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The downsampling can be evaluated for free by downloading and using enterprise binaries from &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;the releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Multi-tenancy&lt;/h2&gt; &#xA;&lt;p&gt;Single-node VictoriaMetrics doesn&#39;t support multi-tenancy. Use the &lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#multitenancy&#34;&gt;cluster version&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Scalability and cluster version&lt;/h2&gt; &#xA;&lt;p&gt;Though single-node VictoriaMetrics cannot scale to multiple nodes, it is optimized for resource usage - storage size / bandwidth / IOPS, RAM, CPU. This means that a single-node VictoriaMetrics may scale vertically and substitute a moderately sized cluster built with competing solutions such as Thanos, Uber M3, InfluxDB or TimescaleDB. See &lt;a href=&#34;https://medium.com/@valyala/measuring-vertical-scalability-for-time-series-databases-in-google-cloud-92550d78d8ae&#34;&gt;vertical scalability benchmarks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;So try single-node VictoriaMetrics at first and then &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/tree/cluster&#34;&gt;switch to the cluster version&lt;/a&gt; if you still need horizontally scalable long-term remote storage for really large Prometheus deployments. &lt;a href=&#34;mailto:info@victoriametrics.com&#34;&gt;Contact us&lt;/a&gt; for enterprise support.&lt;/p&gt; &#xA;&lt;h2&gt;Alerting&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended using &lt;a href=&#34;https://docs.victoriametrics.com/vmalert.html&#34;&gt;vmalert&lt;/a&gt; for alerting.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, alerting can be set up with the following tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;With Prometheus - see &lt;a href=&#34;https://prometheus.io/docs/alerting/overview/&#34;&gt;the corresponding docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;With Promxy - see &lt;a href=&#34;https://github.com/jacksontj/promxy/raw/master/README.md#how-do-i-use-alertingrecording-rules-in-promxy&#34;&gt;the corresponding docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;With Grafana - see &lt;a href=&#34;https://grafana.com/docs/alerting/rules/&#34;&gt;the corresponding docs&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;General security recommendations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All the VictoriaMetrics components must run in protected private networks without direct access from untrusted networks such as Internet. The exception is &lt;a href=&#34;https://docs.victoriametrics.com/vmauth.html&#34;&gt;vmauth&lt;/a&gt; and &lt;a href=&#34;https://docs.victoriametrics.com/vmgateway.html&#34;&gt;vmgateway&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;All the requests from untrusted networks to VictoriaMetrics components must go through auth proxy such as vmauth or vmgateway. The proxy must be set up with proper authentication and authorization.&lt;/li&gt; &#xA; &lt;li&gt;Prefer using lists of allowed API endpoints, while disallowing access to other endpoints when configuring auth proxy in front of VictoriaMetrics components.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;VictoriaMetrics provides the following security-related command-line flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-tls&lt;/code&gt;, &lt;code&gt;-tlsCertFile&lt;/code&gt; and &lt;code&gt;-tlsKeyFile&lt;/code&gt; for switching from HTTP to HTTPS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-httpAuth.username&lt;/code&gt; and &lt;code&gt;-httpAuth.password&lt;/code&gt; for protecting all the HTTP endpoints with &lt;a href=&#34;https://en.wikipedia.org/wiki/Basic_access_authentication&#34;&gt;HTTP Basic Authentication&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-deleteAuthKey&lt;/code&gt; for protecting &lt;code&gt;/api/v1/admin/tsdb/delete_series&lt;/code&gt; endpoint. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-delete-time-series&#34;&gt;how to delete time series&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-snapshotAuthKey&lt;/code&gt; for protecting &lt;code&gt;/snapshot*&lt;/code&gt; endpoints. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-work-with-snapshots&#34;&gt;how to work with snapshots&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-forceMergeAuthKey&lt;/code&gt; for protecting &lt;code&gt;/internal/force_merge&lt;/code&gt; endpoint. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#forced-merge&#34;&gt;force merge docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-search.resetCacheAuthKey&lt;/code&gt; for protecting &lt;code&gt;/internal/resetRollupResultCache&lt;/code&gt; endpoint. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#backfilling&#34;&gt;backfilling&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-configAuthKey&lt;/code&gt; for protecting &lt;code&gt;/config&lt;/code&gt; endpoint, since it may contain sensitive information such as passwords.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-flagsAuthKey&lt;/code&gt; for protecting &lt;code&gt;/flags&lt;/code&gt; endpoint.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-pprofAuthKey&lt;/code&gt; for protecting &lt;code&gt;/debug/pprof/*&lt;/code&gt; endpoints, which can be used for &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#profiling&#34;&gt;profiling&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-denyQueryTracing&lt;/code&gt; for disallowing &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#query-tracing&#34;&gt;query tracing&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Explicitly set internal network interface for TCP and UDP ports for data ingestion with Graphite and OpenTSDB formats. For example, substitute &lt;code&gt;-graphiteListenAddr=:2003&lt;/code&gt; with &lt;code&gt;-graphiteListenAddr=&amp;lt;internal_iface_ip&amp;gt;:2003&lt;/code&gt;. This protects from unexpected requests from untrusted network interfaces.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics has achieved security certifications for Database Software Development and Software-Based Monitoring Services. We apply strict security measures in everything we do. See our &lt;a href=&#34;https://victoriametrics.com/security/&#34;&gt;Security page&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Tuning&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No need in tuning for VictoriaMetrics - it uses reasonable defaults for command-line flags, which are automatically adjusted for the available CPU and RAM resources.&lt;/li&gt; &#xA; &lt;li&gt;No need in tuning for Operating System - VictoriaMetrics is optimized for default OS settings. The only option is increasing the limit on &lt;a href=&#34;https://medium.com/@muhammadtriwibowo/set-permanently-ulimit-n-open-files-in-ubuntu-4d61064429a&#34;&gt;the number of open files in the OS&lt;/a&gt;. The recommendation is not specific for VictoriaMetrics only but also for any service which handles many HTTP connections and stores data on disk.&lt;/li&gt; &#xA; &lt;li&gt;VictoriaMetrics is a write-heavy application and its performance depends on disk performance. So be careful with other applications or utilities (like &lt;a href=&#34;http://manpages.ubuntu.com/manpages/bionic/man8/fstrim.8.html&#34;&gt;fstrim&lt;/a&gt;) which could &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/issues/1521&#34;&gt;exhaust disk resources&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The recommended filesystem is &lt;code&gt;ext4&lt;/code&gt;, the recommended persistent storage is &lt;a href=&#34;https://cloud.google.com/compute/docs/disks/#pdspecs&#34;&gt;persistent HDD-based disk on GCP&lt;/a&gt;, since it is protected from hardware failures via internal replication and it can be &lt;a href=&#34;https://cloud.google.com/compute/docs/disks/add-persistent-disk#resize_pd&#34;&gt;resized on the fly&lt;/a&gt;. If you plan to store more than 1TB of data on &lt;code&gt;ext4&lt;/code&gt; partition or plan extending it to more than 16TB, then the following options are recommended to pass to &lt;code&gt;mkfs.ext4&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;mkfs.ext4 ... -O 64bit,huge_file,extent -T huge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics exports internal metrics in Prometheus exposition format at &lt;code&gt;/metrics&lt;/code&gt; page. These metrics can be scraped via &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt; or Prometheus. Alternatively, single-node VictoriaMetrics can self-scrape the metrics when &lt;code&gt;-selfScrapeInterval&lt;/code&gt; command-line flag is set to duration greater than 0. For example, &lt;code&gt;-selfScrapeInterval=10s&lt;/code&gt; would enable self-scraping of &lt;code&gt;/metrics&lt;/code&gt; page with 10 seconds interval.&lt;/p&gt; &#xA;&lt;p&gt;Official Grafana dashboards available for &lt;a href=&#34;https://grafana.com/dashboards/10229&#34;&gt;single-node&lt;/a&gt; and &lt;a href=&#34;https://grafana.com/grafana/dashboards/11176&#34;&gt;clustered&lt;/a&gt; VictoriaMetrics. See an &lt;a href=&#34;https://grafana.com/grafana/dashboards/11831&#34;&gt;alternative dashboard for clustered VictoriaMetrics&lt;/a&gt; created by community.&lt;/p&gt; &#xA;&lt;p&gt;Graphs on the dashboards contain useful hints - hover the &lt;code&gt;i&lt;/code&gt; icon in the top left corner of each graph to read it.&lt;/p&gt; &#xA;&lt;p&gt;We recommend setting up &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/deployment/docker/alerts.yml&#34;&gt;alerts&lt;/a&gt; via &lt;a href=&#34;https://docs.victoriametrics.com/vmalert.html&#34;&gt;vmalert&lt;/a&gt; or via Prometheus.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics exposes currently running queries and their execution times at &lt;code&gt;/api/v1/status/active_queries&lt;/code&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;VictoriaMetrics exposes queries, which take the most time to execute, at &lt;code&gt;/api/v1/status/top_queries&lt;/code&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://victoriametrics.com/blog/victoriametrics-monitoring/&#34;&gt;VictoriaMetrics Monitoring&lt;/a&gt; and &lt;a href=&#34;https://docs.victoriametrics.com/Troubleshooting.html&#34;&gt;troubleshooting docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;TSDB stats&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics returns TSDB stats at &lt;code&gt;/api/v1/status/tsdb&lt;/code&gt; page in the way similar to Prometheus - see &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-stats&#34;&gt;these Prometheus docs&lt;/a&gt;. VictoriaMetrics accepts the following optional query args at &lt;code&gt;/api/v1/status/tsdb&lt;/code&gt; page:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;topN=N&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the number of top entries to return in the response. By default top 10 entries are returned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date=YYYY-MM-DD&lt;/code&gt; where &lt;code&gt;YYYY-MM-DD&lt;/code&gt; is the date for collecting the stats. By default the stats is collected for the current day. Pass &lt;code&gt;date=1970-01-01&lt;/code&gt; in order to collect global stats across all the days.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;focusLabel=LABEL_NAME&lt;/code&gt; returns label values with the highest number of time series for the given &lt;code&gt;LABEL_NAME&lt;/code&gt; in the &lt;code&gt;seriesCountByFocusLabelValue&lt;/code&gt; list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;match[]=SELECTOR&lt;/code&gt; where &lt;code&gt;SELECTOR&lt;/code&gt; is an arbitrary &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/#time-series-selectors&#34;&gt;time series selector&lt;/a&gt; for series to take into account during stats calculation. By default all the series are taken into account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extra_label=LABEL=VALUE&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#prometheus-querying-api-enhancements&#34;&gt;these docs&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;VictoriaMetrics provides an UI on top of &lt;code&gt;/api/v1/status/tsdb&lt;/code&gt; - see &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#cardinality-explorer&#34;&gt;cardinality explorer docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Query tracing&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics supports query tracing, which can be used for determining bottlenecks during query processing. This is like &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt; from Postgresql.&lt;/p&gt; &#xA;&lt;p&gt;Query tracing can be enabled for a specific query by passing &lt;code&gt;trace=1&lt;/code&gt; query arg. In this case VictoriaMetrics puts query trace into &lt;code&gt;trace&lt;/code&gt; field in the output JSON.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl http://localhost:8428/api/v1/query_range -d &#39;query=2*rand()&#39; -d &#39;start=-1h&#39; -d &#39;step=1m&#39; -d &#39;trace=1&#39; | jq &#39;.trace&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;would return the following trace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;duration_msec&#34;: 0.099,&#xA;  &#34;message&#34;: &#34;/api/v1/query_range: start=1654034340000, end=1654037880000, step=60000, query=\&#34;2*rand()\&#34;: series=1&#34;,&#xA;  &#34;children&#34;: [&#xA;    {&#xA;      &#34;duration_msec&#34;: 0.034,&#xA;      &#34;message&#34;: &#34;eval: query=2 * rand(), timeRange=[1654034340000..1654037880000], step=60000, mayCache=true: series=1, points=60, pointsPerSeries=60&#34;,&#xA;      &#34;children&#34;: [&#xA;        {&#xA;          &#34;duration_msec&#34;: 0.032,&#xA;          &#34;message&#34;: &#34;binary op \&#34;*\&#34;: series=1&#34;,&#xA;          &#34;children&#34;: [&#xA;            {&#xA;              &#34;duration_msec&#34;: 0.009,&#xA;              &#34;message&#34;: &#34;eval: query=2, timeRange=[1654034340000..1654037880000], step=60000, mayCache=true: series=1, points=60, pointsPerSeries=60&#34;&#xA;            },&#xA;            {&#xA;              &#34;duration_msec&#34;: 0.017,&#xA;              &#34;message&#34;: &#34;eval: query=rand(), timeRange=[1654034340000..1654037880000], step=60000, mayCache=true: series=1, points=60, pointsPerSeries=60&#34;,&#xA;              &#34;children&#34;: [&#xA;                {&#xA;                  &#34;duration_msec&#34;: 0.015,&#xA;                  &#34;message&#34;: &#34;transform rand(): series=1&#34;&#xA;                }&#xA;              ]&#xA;            }&#xA;          ]&#xA;        }&#xA;      ]&#xA;    },&#xA;    {&#xA;      &#34;duration_msec&#34;: 0.004,&#xA;      &#34;message&#34;: &#34;sort series by metric name and labels&#34;&#xA;    },&#xA;    {&#xA;      &#34;duration_msec&#34;: 0.044,&#xA;      &#34;message&#34;: &#34;generate /api/v1/query_range response for series=1, points=60&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All the durations and timestamps in traces are in milliseconds.&lt;/p&gt; &#xA;&lt;p&gt;Query tracing is allowed by default. It can be denied by passing &lt;code&gt;-denyQueryTracing&lt;/code&gt; command-line flag to VictoriaMetrics.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#vmui&#34;&gt;VMUI&lt;/a&gt; provides an UI for query tracing - just click &lt;code&gt;Trace query&lt;/code&gt; checkbox and re-run the query in order to investigate its&#39; trace.&lt;/p&gt; &#xA;&lt;h2&gt;Cardinality limiter&lt;/h2&gt; &#xA;&lt;p&gt;By default VictoriaMetrics doesn&#39;t limit the number of stored time series. The limit can be enforced by setting the following command-line flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-storage.maxHourlySeries&lt;/code&gt; - limits the number of time series that can be added during the last hour. Useful for limiting the number of &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-an-active-time-series&#34;&gt;active time series&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-storage.maxDailySeries&lt;/code&gt; - limits the number of time series that can be added during the last day. Useful for limiting daily &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;churn rate&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both limits can be set simultaneously. If any of these limits is reached, then incoming samples for new time series are dropped. A sample of dropped series is put in the log with &lt;code&gt;WARNING&lt;/code&gt; level.&lt;/p&gt; &#xA;&lt;p&gt;The exceeded limits can be &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#monitoring&#34;&gt;monitored&lt;/a&gt; with the following metrics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;vm_hourly_series_limit_rows_dropped_total&lt;/code&gt; - the number of metrics dropped due to exceeded hourly limit on the number of unique time series.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;vm_hourly_series_limit_max_series&lt;/code&gt; - the hourly series limit set via &lt;code&gt;-storage.maxHourlySeries&lt;/code&gt; command-line flag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;vm_hourly_series_limit_current_series&lt;/code&gt; - the current number of unique series during the last hour. The following query can be useful for alerting when the number of unique series during the last hour exceeds 90% of the &lt;code&gt;-storage.maxHourlySeries&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-metricsql&#34;&gt;vm_hourly_series_limit_current_series / vm_hourly_series_limit_max_series &amp;gt; 0.9&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;vm_daily_series_limit_rows_dropped_total&lt;/code&gt; - the number of metrics dropped due to exceeded daily limit on the number of unique time series.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;vm_daily_series_limit_max_series&lt;/code&gt; - the daily series limit set via &lt;code&gt;-storage.maxDailySeries&lt;/code&gt; command-line flag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;vm_daily_series_limit_current_series&lt;/code&gt; - the current number of unique series during the last day. The following query can be useful for alerting when the number of unique series during the last day exceeds 90% of the &lt;code&gt;-storage.maxDailySeries&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-metricsql&#34;&gt;vm_daily_series_limit_current_series / vm_daily_series_limit_max_series &amp;gt; 0.9&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These limits are approximate, so VictoriaMetrics can underflow/overflow the limit by a small percentage (usually less than 1%).&lt;/p&gt; &#xA;&lt;p&gt;See also more advanced &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html#cardinality-limiter&#34;&gt;cardinality limiter in vmagent&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#cardinality-explorer&#34;&gt;cardinality explorer docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended to use default command-line flag values (i.e. don&#39;t set them explicitly) until the need of tweaking these flag values arises.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended inspecting logs during troubleshooting, since they may contain useful information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended upgrading to the latest available release from &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;this page&lt;/a&gt;, since the encountered issue could be already fixed there.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended to have at least 50% of spare resources for CPU, disk IO and RAM, so VictoriaMetrics could handle short spikes in the workload without performance issues.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;VictoriaMetrics requires free disk space for &lt;a href=&#34;https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&#34;&gt;merging data files to bigger ones&lt;/a&gt;. It may slow down when there is no enough free space left. So make sure &lt;code&gt;-storageDataPath&lt;/code&gt; directory has at least 20% of free space. The remaining amount of free space can be &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#monitoring&#34;&gt;monitored&lt;/a&gt; via &lt;code&gt;vm_free_disk_space_bytes&lt;/code&gt; metric. The total size of data stored on the disk can be monitored via sum of &lt;code&gt;vm_data_size_bytes&lt;/code&gt; metrics. See also &lt;code&gt;vm_merge_need_free_disk_space&lt;/code&gt; metrics, which are set to values higher than 0 if background merge cannot be initiated due to free disk space shortage. The value shows the number of per-month partitions, which would start background merge if they had more free disk space.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;VictoriaMetrics buffers incoming data in memory for up to a few seconds before flushing it to persistent storage. This may lead to the following &#34;issues&#34;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Data becomes available for querying in a few seconds after inserting. It is possible to flush in-memory buffers to persistent storage by requesting &lt;code&gt;/internal/force_flush&lt;/code&gt; http handler. This handler is mostly needed for testing and debugging purposes.&lt;/li&gt; &#xA;   &lt;li&gt;The last few seconds of inserted data may be lost on unclean shutdown (i.e. OOM, &lt;code&gt;kill -9&lt;/code&gt; or hardware reset). See &lt;a href=&#34;https://valyala.medium.com/wal-usage-looks-broken-in-modern-time-series-databases-b62a627ab704&#34;&gt;this article for technical details&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If VictoriaMetrics works slowly and eats more than a CPU core per 100K ingested data points per second, then it is likely you have too many &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-an-active-time-series&#34;&gt;active time series&lt;/a&gt; for the current amount of RAM. VictoriaMetrics &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#monitoring&#34;&gt;exposes&lt;/a&gt; &lt;code&gt;vm_slow_*&lt;/code&gt; metrics such as &lt;code&gt;vm_slow_row_inserts_total&lt;/code&gt; and &lt;code&gt;vm_slow_metric_name_loads_total&lt;/code&gt;, which could be used as an indicator of low amounts of RAM. It is recommended increasing the amount of RAM on the node with VictoriaMetrics in order to improve ingestion and query performance in this case.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the order of labels for the same metrics can change over time (e.g. if &lt;code&gt;metric{k1=&#34;v1&#34;,k2=&#34;v2&#34;}&lt;/code&gt; may become &lt;code&gt;metric{k2=&#34;v2&#34;,k1=&#34;v1&#34;}&lt;/code&gt;), then it is recommended running VictoriaMetrics with &lt;code&gt;-sortLabels&lt;/code&gt; command-line flag in order to reduce memory usage and CPU usage.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;VictoriaMetrics prioritizes data ingestion over data querying. So if it has no enough resources for data ingestion, then data querying may slow down significantly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If VictoriaMetrics doesn&#39;t work because of certain parts are corrupted due to disk errors, then just remove directories with broken parts. It is safe removing subdirectories under &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;/data/{big,small}/YYYY_MM&lt;/code&gt; directories when VictoriaMetrics isn&#39;t running. This recovers VictoriaMetrics at the cost of data loss stored in the deleted broken parts. In the future, &lt;code&gt;vmrecover&lt;/code&gt; tool will be created for automatic recovering from such errors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you see gaps on the graphs, try resetting the cache by sending request to &lt;code&gt;/internal/resetRollupResultCache&lt;/code&gt;. If this removes gaps on the graphs, then it is likely data with timestamps older than &lt;code&gt;-search.cacheTimestampOffset&lt;/code&gt; is ingested into VictoriaMetrics. Make sure that data sources have synchronized time with VictoriaMetrics.&lt;/p&gt; &lt;p&gt;If the gaps are related to irregular intervals between samples, then try adjusting &lt;code&gt;-search.minStalenessInterval&lt;/code&gt; command-line flag to value close to the maximum interval between samples.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are switching from InfluxDB or TimescaleDB, then it may be needed to set &lt;code&gt;-search.setLookbackToStep&lt;/code&gt; command-line flag. This suppresses default gap filling algorithm used by VictoriaMetrics - by default it assumes each time series is continuous instead of discrete, so it fills gaps between real samples with regular intervals.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Metrics and labels leading to &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-cardinality&#34;&gt;high cardinality&lt;/a&gt; or &lt;a href=&#34;https://docs.victoriametrics.com/FAQ.html#what-is-high-churn-rate&#34;&gt;high churn rate&lt;/a&gt; can be determined via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#cardinality-explorer&#34;&gt;cardinality explorer&lt;/a&gt; and via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#tsdb-stats&#34;&gt;/api/v1/status/tsdb&lt;/a&gt; endpoint.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;New time series can be logged if &lt;code&gt;-logNewSeries&lt;/code&gt; command-line flag is passed to VictoriaMetrics.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;VictoriaMetrics limits the number of labels per each metric with &lt;code&gt;-maxLabelsPerTimeseries&lt;/code&gt; command-line flag. This prevents from ingesting metrics with too many labels. It is recommended &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#monitoring&#34;&gt;monitoring&lt;/a&gt; &lt;code&gt;vm_metrics_with_dropped_labels_total&lt;/code&gt; metric in order to determine whether &lt;code&gt;-maxLabelsPerTimeseries&lt;/code&gt; must be adjusted for your workload.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you store Graphite metrics like &lt;code&gt;foo.bar.baz&lt;/code&gt; in VictoriaMetrics, then &lt;code&gt;{__graphite__=&#34;foo.*.baz&#34;}&lt;/code&gt; filter can be used for selecting such metrics. See &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#selecting-graphite-metrics&#34;&gt;these docs&lt;/a&gt; for details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;VictoriaMetrics ignores &lt;code&gt;NaN&lt;/code&gt; values during data ingestion.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://docs.victoriametrics.com/Troubleshooting.html&#34;&gt;troubleshooting docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Push metrics&lt;/h2&gt; &#xA;&lt;p&gt;All the VictoriaMetrics components support pushing their metrics exposed at &lt;code&gt;/metrics&lt;/code&gt; page to remote storage in Prometheus text exposition format. This functionality may be used instead of &lt;a href=&#34;https://docs.victoriametrics.com/#how-to-scrape-prometheus-exporters-such-as-node-exporter&#34;&gt;classic Prometheus-like metrics scraping&lt;/a&gt; if VictoriaMetrics components are located in isolated networks, so they cannot be scraped by local &lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html&#34;&gt;vmagent&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following command-line flags are related to pushing metrics from VictoriaMetrics components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-pushmetrics.url&lt;/code&gt; - the url to push metrics to. For example, &lt;code&gt;-pushmetrics.url=http://victoria-metrics:8428/api/v1/import/prometheus&lt;/code&gt; instructs to push internal metrics to &lt;code&gt;/api/v1/import/prometheus&lt;/code&gt; endpoint according to &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-data-in-prometheus-exposition-format&#34;&gt;these docs&lt;/a&gt;. The &lt;code&gt;-pushmetrics.url&lt;/code&gt; can be specified multiple times. In this case metrics are pushed to all the specified urls. The url can contain basic auth params in the form &lt;code&gt;http://user:pass@hostname/api/v1/import/prometheus&lt;/code&gt;. Metrics are pushed to the provided &lt;code&gt;-pushmetrics.url&lt;/code&gt; in a compressed form with &lt;code&gt;Content-Encoding: gzip&lt;/code&gt; request header. This allows reducing the required network bandwidth for metrics push.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-pushmetrics.extraLabel&lt;/code&gt; - labels to add to all the metrics before sending them to &lt;code&gt;-pushmetrics.url&lt;/code&gt;. Each label must be specified in the format &lt;code&gt;label=&#34;value&#34;&lt;/code&gt;. It is OK to specify multiple &lt;code&gt;-pushmetrics.extraLabel&lt;/code&gt; command-line flags. In this case all the specified labels are added to all the metrics before sending them to all the configured &lt;code&gt;-pushmetrics.url&lt;/code&gt; addresses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-pushmetrics.interval&lt;/code&gt; - the interval between pushes. By default it is set to 10 seconds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, the following command instructs VictoriaMetrics to push metrics from &lt;code&gt;/metrics&lt;/code&gt; page to &lt;code&gt;https://maas.victoriametrics.com/api/v1/import/prometheus&lt;/code&gt; with &lt;code&gt;user:pass&lt;/code&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Basic_access_authentication&#34;&gt;Basic auth&lt;/a&gt;. The &lt;code&gt;instance=&#34;foobar&#34;&lt;/code&gt; and &lt;code&gt;job=&#34;vm&#34;&lt;/code&gt; labels are added to all the metrics before sending them to the remote storage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;/path/to/victoria-metrics \&#xA;  -pushmetrics.url=https://user:pass@maas.victoriametrics.com/api/v1/import/prometheus \&#xA;  -pushmetrics.extraLabel=&#39;instance=&#34;foobar&#34;&#39; \&#xA;  -pushmetrics.extraLabel=&#39;job=&#34;vm&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cache removal&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics uses various internal caches. These caches are stored to &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;/cache&lt;/code&gt; directory during graceful shutdown (e.g. when VictoriaMetrics is stopped by sending &lt;code&gt;SIGINT&lt;/code&gt; signal). The caches are read on the next VictoriaMetrics startup. Sometimes it is needed to remove such caches on the next startup. This can be performed by placing &lt;code&gt;reset_cache_on_startup&lt;/code&gt; file inside the &lt;code&gt;&amp;lt;-storageDataPath&amp;gt;/cache&lt;/code&gt; directory before the restart of VictoriaMetrics. See &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/issues/1447&#34;&gt;this issue&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Cache tuning&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics uses various in-memory caches for faster data ingestion and query performance. The following metrics for each type of cache are exported at &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#monitoring&#34;&gt;&lt;code&gt;/metrics&lt;/code&gt; page&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;vm_cache_size_bytes&lt;/code&gt; - the actual cache size&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vm_cache_size_max_bytes&lt;/code&gt; - cache size limit&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vm_cache_requests_total&lt;/code&gt; - the number of requests to the cache&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vm_cache_misses_total&lt;/code&gt; - the number of cache misses&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vm_cache_entries&lt;/code&gt; - the number of entries in the cache&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both Grafana dashboards for &lt;a href=&#34;https://grafana.com/dashboards/10229&#34;&gt;single-node VictoriaMetrics&lt;/a&gt; and &lt;a href=&#34;https://grafana.com/grafana/dashboards/11176&#34;&gt;clustered VictoriaMetrics&lt;/a&gt; contain &lt;code&gt;Caches&lt;/code&gt; section with cache metrics visualized. The panels show the current memory usage by each type of cache, and also a cache hit rate. If hit rate is close to 100% then cache efficiency is already very high and does not need any tuning. The panel &lt;code&gt;Cache usage %&lt;/code&gt; in &lt;code&gt;Troubleshooting&lt;/code&gt; section shows the percentage of used cache size from the allowed size by type. If the percentage is below 100%, then no further tuning needed.&lt;/p&gt; &#xA;&lt;p&gt;Please note, default cache sizes were carefully adjusted accordingly to the most practical scenarios and workloads. Change the defaults only if you understand the implications and vmstorage has enough free memory to accommodate new cache sizes.&lt;/p&gt; &#xA;&lt;p&gt;To override the default values see command-line flags with &lt;code&gt;-storage.cacheSize&lt;/code&gt; prefix. See the full description of flags &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#list-of-command-line-flags&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Data migration&lt;/h2&gt; &#xA;&lt;h3&gt;From VictoriaMetrics&lt;/h3&gt; &#xA;&lt;p&gt;The simplest way to migrate data from one single-node (source) to another (destination), or from one vmstorage node to another do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Stop the VictoriaMetrics (source) with &lt;code&gt;kill -INT&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Copy (via &lt;a href=&#34;https://en.wikipedia.org/wiki/Rsync&#34;&gt;rsync&lt;/a&gt; or any other tool) the entire folder specified via &lt;code&gt;-storageDataPath&lt;/code&gt; from the source node to the empty folder at the destination node.&lt;/li&gt; &#xA; &lt;li&gt;Once copy is done, stop the VictoriaMetrics (destination) with &lt;code&gt;kill -INT&lt;/code&gt; and verify that its &lt;code&gt;-storageDataPath&lt;/code&gt; points to the copied folder from p.2;&lt;/li&gt; &#xA; &lt;li&gt;Start the VictoriaMetrics (destination). The copied data should be now available.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Things to consider when copying data:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Data formats between single-node and vmstorage node aren&#39;t compatible and can&#39;t be copied.&lt;/li&gt; &#xA; &lt;li&gt;Copying data folder means complete replacement of the previous data on destination VictoriaMetrics.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more complex scenarios like single-to-cluster, cluster-to-single, re-sharding or migrating only a fraction of data - see &lt;a href=&#34;https://docs.victoriametrics.com/vmctl.html#migrating-data-from-victoriametrics&#34;&gt;vmctl. Migrating data from VictoriaMetrics&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;From other systems&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://docs.victoriametrics.com/vmctl.html&#34;&gt;vmctl&lt;/a&gt; for data migration. It supports the following data migration types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From Prometheus to VictoriaMetrics&lt;/li&gt; &#xA; &lt;li&gt;From InfluxDB to VictoriaMetrics&lt;/li&gt; &#xA; &lt;li&gt;From VictoriaMetrics to VictoriaMetrics&lt;/li&gt; &#xA; &lt;li&gt;From OpenTSDB to VictoriaMetrics&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.victoriametrics.com/vmctl.html&#34;&gt;vmctl docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Backfilling&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics accepts historical data in arbitrary order of time via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-import-time-series-data&#34;&gt;any supported ingestion method&lt;/a&gt;. See &lt;a href=&#34;https://docs.victoriametrics.com/vmalert.html#rules-backfilling&#34;&gt;how to backfill data with recording rules in vmalert&lt;/a&gt;. Make sure that configured &lt;code&gt;-retentionPeriod&lt;/code&gt; covers timestamps for the backfilled data.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended disabling query cache with &lt;code&gt;-search.disableCache&lt;/code&gt; command-line flag when writing historical data with timestamps from the past, since the cache assumes that the data is written with the current timestamps. Query cache can be enabled after the backfilling is complete.&lt;/p&gt; &#xA;&lt;p&gt;An alternative solution is to query &lt;code&gt;/internal/resetRollupResultCache&lt;/code&gt; url after backfilling is complete. This will reset the query cache, which could contain incomplete data cached during the backfilling.&lt;/p&gt; &#xA;&lt;p&gt;Yet another solution is to increase &lt;code&gt;-search.cacheTimestampOffset&lt;/code&gt; flag value in order to disable caching for data with timestamps close to the current time. Single-node VictoriaMetrics automatically resets response cache when samples with timestamps older than &lt;code&gt;now - search.cacheTimestampOffset&lt;/code&gt; are ingested to it.&lt;/p&gt; &#xA;&lt;h2&gt;Data updates&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics doesn&#39;t support updating already existing sample values to new ones. It stores all the ingested data points for the same time series with identical timestamps. While it is possible substituting old time series with new time series via &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#how-to-delete-time-series&#34;&gt;removal of old time series&lt;/a&gt; and then &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#backfilling&#34;&gt;writing new time series&lt;/a&gt;, this approach should be used only for one-off updates. It shouldn&#39;t be used for frequent updates because of non-zero overhead related to data removal.&lt;/p&gt; &#xA;&lt;h2&gt;Replication&lt;/h2&gt; &#xA;&lt;p&gt;Single-node VictoriaMetrics doesn&#39;t support application-level replication. Use cluster version instead. See &lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#replication-and-data-safety&#34;&gt;these docs&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Storage-level replication may be offloaded to durable persistent storage such as &lt;a href=&#34;https://cloud.google.com/compute/docs/disks#pdspecs&#34;&gt;Google Cloud disks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#high-availability&#34;&gt;high availability docs&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/#backups&#34;&gt;backup docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Backups&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics supports backups via &lt;a href=&#34;https://docs.victoriametrics.com/vmbackup.html&#34;&gt;vmbackup&lt;/a&gt; and &lt;a href=&#34;https://docs.victoriametrics.com/vmrestore.html&#34;&gt;vmrestore&lt;/a&gt; tools. We also provide &lt;a href=&#34;https://docs.victoriametrics.com/vmbackupmanager.html&#34;&gt;vmbackupmanager&lt;/a&gt; tool for enterprise subscribers. Enterprise binaries can be downloaded and evaluated for free from &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;the releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;vmalert&lt;/h2&gt; &#xA;&lt;p&gt;A single-node VictoriaMetrics is capable of proxying requests to &lt;a href=&#34;https://docs.victoriametrics.com/vmalert.html&#34;&gt;vmalert&lt;/a&gt; when &lt;code&gt;-vmalert.proxyURL&lt;/code&gt; flag is set. Use this feature for the following cases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;for proxying requests from &lt;a href=&#34;https://grafana.com/docs/grafana/latest/alerting/&#34;&gt;Grafana Alerting UI&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;for accessing vmalert&#39;s UI through single-node VictoriaMetrics Web interface.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For accessing vmalert&#39;s UI through single-node VictoriaMetrics configure &lt;code&gt;-vmalert.proxyURL&lt;/code&gt; flag and visit &lt;code&gt;http://&amp;lt;victoriametrics-addr&amp;gt;:8428/vmalert/&lt;/code&gt; link.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Note, that vendors (including VictoriaMetrics) are often biased when doing such tests. E.g. they try highlighting the best parts of their product, while highlighting the worst parts of competing products. So we encourage users and all independent third parties to conduct their benchmarks for various products they are evaluating in production and publish the results.&lt;/p&gt; &#xA;&lt;p&gt;As a reference, please see &lt;a href=&#34;https://docs.victoriametrics.com/Articles.html#benchmarks&#34;&gt;benchmarks&lt;/a&gt; conducted by VictoriaMetrics team. Please also see the &lt;a href=&#34;https://github.com/VictoriaMetrics/benchmark&#34;&gt;helm chart&lt;/a&gt; for running ingestion benchmarks based on node_exporter metrics.&lt;/p&gt; &#xA;&lt;h2&gt;Profiling&lt;/h2&gt; &#xA;&lt;p&gt;VictoriaMetrics provides handlers for collecting the following &lt;a href=&#34;https://blog.golang.org/profiling-go-programs&#34;&gt;Go profiles&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Memory profile. It can be collected with the following command (replace &lt;code&gt;0.0.0.0&lt;/code&gt; with hostname if needed):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl http://0.0.0.0:8428/debug/pprof/heap &amp;gt; mem.pprof&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU profile. It can be collected with the following command (replace &lt;code&gt;0.0.0.0&lt;/code&gt; with hostname if needed):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div class=&#34;with-copy&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl http://0.0.0.0:8428/debug/pprof/profile &amp;gt; cpu.pprof&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The command for collecting CPU profile waits for 30 seconds before returning.&lt;/p&gt; &#xA;&lt;p&gt;The collected profiles may be analyzed with &lt;a href=&#34;https://github.com/google/pprof&#34;&gt;go tool pprof&lt;/a&gt;. It is safe sharing the collected profiles from security point of view, since they do not contain sensitive information.&lt;/p&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/helm-charts&#34;&gt;Helm charts for single-node and cluster versions of VictoriaMetrics&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/operator&#34;&gt;Kubernetes operator for VictoriaMetrics&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/netdata/netdata&#34;&gt;netdata&lt;/a&gt; can push data into VictoriaMetrics via &lt;code&gt;Prometheus remote_write API&lt;/code&gt;. See &lt;a href=&#34;https://github.com/netdata/netdata#integrations&#34;&gt;these docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/go-graphite/carbonapi&#34;&gt;go-graphite/carbonapi&lt;/a&gt; can use VictoriaMetrics as time series backend. See &lt;a href=&#34;https://github.com/go-graphite/carbonapi/raw/main/cmd/carbonapi/carbonapi.example.victoriametrics.yaml&#34;&gt;this example&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/ansible-playbooks&#34;&gt;Ansible role for installing cluster VictoriaMetrics (by VictoriaMetrics)&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Slapper/ansible-victoriametrics-cluster-role&#34;&gt;Ansible role for installing cluster VictoriaMetrics (by community)&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dreamteam-gg/ansible-victoriametrics-role&#34;&gt;Ansible role for installing single-node VictoriaMetrics (by community)&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://snapcraft.io/victoriametrics&#34;&gt;Snap package for VictoriaMetrics&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aorfanos/vmalert-cli&#34;&gt;vmalert-cli&lt;/a&gt; - a CLI application for managing &lt;a href=&#34;https://docs.victoriametrics.com/vmalert.html&#34;&gt;vmalert&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Third-party contributions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/antonpatsev/VictoriaMetrics/&#34;&gt;Unofficial yum repository&lt;/a&gt; (&lt;a href=&#34;https://github.com/patsevanton/victoriametrics-rpm&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryotarai/prometheus-tsdb-dump&#34;&gt;Prometheus -&amp;gt; VictoriaMetrics exporter #1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AnchorFree/tsdb-remote-write&#34;&gt;Prometheus -&amp;gt; VictoriaMetrics exporter #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/optima_public/prometheus_oauth_proxy&#34;&gt;Prometheus Oauth proxy&lt;/a&gt; - see &lt;a href=&#34;https://medium.com/@richard.holly/powerful-saas-solution-for-detection-metrics-c67b9208d362&#34;&gt;this article&lt;/a&gt; for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;p&gt;Contact us with any questions regarding VictoriaMetrics at &lt;a href=&#34;mailto:info@victoriametrics.com&#34;&gt;info@victoriametrics.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community and contributions&lt;/h2&gt; &#xA;&lt;p&gt;Feel free asking any questions regarding VictoriaMetrics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.victoriametrics.com/&#34;&gt;slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/company/victoriametrics/&#34;&gt;linkedin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/VictoriaMetrics/&#34;&gt;reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/VictoriaMetrics_en&#34;&gt;telegram-en&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/VictoriaMetrics_ru1&#34;&gt;telegram-ru&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/denisgolius/victoriametrics-ru-links&#34;&gt;articles and talks about VictoriaMetrics in Russian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/victorametrics-users&#34;&gt;google groups&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you like VictoriaMetrics and want to contribute, then we need the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Filing issues and feature requests &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/issues&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Spreading a word about VictoriaMetrics: conference talks, articles, comments, experience sharing with colleagues.&lt;/li&gt; &#xA; &lt;li&gt;Updating documentation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are open to third-party pull requests provided they follow &lt;a href=&#34;https://en.wikipedia.org/wiki/KISS_principle&#34;&gt;KISS design principle&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prefer simple code and architecture.&lt;/li&gt; &#xA; &lt;li&gt;Avoid complex abstractions.&lt;/li&gt; &#xA; &lt;li&gt;Avoid magic code and fancy algorithms.&lt;/li&gt; &#xA; &lt;li&gt;Avoid &lt;a href=&#34;https://medium.com/@valyala/stripping-dependency-bloat-in-victoriametrics-docker-image-983fb5912b0d&#34;&gt;big external dependencies&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Minimize the number of moving parts in the distributed system.&lt;/li&gt; &#xA; &lt;li&gt;Avoid automated decisions, which may hurt cluster availability, consistency or performance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Adhering &lt;code&gt;KISS&lt;/code&gt; principle simplifies the resulting code and architecture, so it can be reviewed, understood and verified by many people.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting bugs&lt;/h2&gt; &#xA;&lt;p&gt;Report bugs and propose new features &lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;VictoriaMetrics Logo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/VM_logo.zip&#34;&gt;Zip&lt;/a&gt; contains three folders with different image orientations (main color and inverted version).&lt;/p&gt; &#xA;&lt;p&gt;Files included in each folder:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2 JPEG Preview files&lt;/li&gt; &#xA; &lt;li&gt;2 PNG Preview files with transparent background&lt;/li&gt; &#xA; &lt;li&gt;2 EPS Adobe Illustrator EPS10 files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Logo Usage Guidelines&lt;/h3&gt; &#xA;&lt;h4&gt;Font used&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lato Black&lt;/li&gt; &#xA; &lt;li&gt;Lato Regular&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Color Palette&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HEX &lt;a href=&#34;https://www.color-hex.com/color/110f0f&#34;&gt;#110f0f&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HEX &lt;a href=&#34;https://www.color-hex.com/color/ffffff&#34;&gt;#ffffff&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;We kindly ask&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please don&#39;t use any other font instead of suggested.&lt;/li&gt; &#xA; &lt;li&gt;To keep enough clear space around the logo.&lt;/li&gt; &#xA; &lt;li&gt;Do not change spacing, alignment, or relative locations of the design elements.&lt;/li&gt; &#xA; &lt;li&gt;Do not change the proportions for any of the design elements or the design itself. You may resize as needed but must retain all proportions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;List of command-line flags&lt;/h2&gt; &#xA;&lt;p&gt;Pass &lt;code&gt;-help&lt;/code&gt; to VictoriaMetrics in order to see the list of supported command-line flags with their description:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -bigMergeConcurrency int&#xA;     The maximum number of CPU cores to use for big merges. Default value is used if set to 0&#xA;  -configAuthKey string&#xA;     Authorization key for accessing /config page. It must be passed via authKey query arg&#xA;  -csvTrimTimestamp duration&#xA;     Trim timestamps when importing csv data to this duration. Minimum practical duration is 1ms. Higher duration (i.e. 1s) may be used for reducing disk space usage for timestamp data (default 1ms)&#xA;  -datadog.maxInsertRequestSize size&#xA;     The maximum size in bytes of a single DataDog POST request to /api/v1/series&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 67108864)&#xA;  -datadog.sanitizeMetricName&#xA;     Sanitize metric names for the ingested DataDog data to comply with DataDog behaviour described at https://docs.datadoghq.com/metrics/custom_metrics/#naming-custom-metrics (default true)&#xA;  -dedup.minScrapeInterval duration&#xA;     Leave only the last sample in every time series per each discrete interval equal to -dedup.minScrapeInterval &amp;gt; 0. See https://docs.victoriametrics.com/#deduplication and https://docs.victoriametrics.com/#downsampling&#xA;  -deleteAuthKey string&#xA;     authKey for metrics&#39; deletion via /api/v1/admin/tsdb/delete_series and /tags/delSeries&#xA;  -denyQueriesOutsideRetention&#xA;     Whether to deny queries outside of the configured -retentionPeriod. When set, then /api/v1/query_range would return &#39;503 Service Unavailable&#39; error for queries with &#39;from&#39; value outside -retentionPeriod. This may be useful when multiple data sources with distinct retentions are hidden behind query-tee&#xA;  -denyQueryTracing&#xA;     Whether to disable the ability to trace queries. See https://docs.victoriametrics.com/#query-tracing&#xA;  -downsampling.period array&#xA;     Comma-separated downsampling periods in the format &#39;offset:period&#39;. For example, &#39;30d:10m&#39; instructs to leave a single sample per 10 minutes for samples older than 30 days. See https://docs.victoriametrics.com/#downsampling for details. This flag is available only in enterprise version of VictoriaMetrics&#xA;     Supports an array of values separated by comma or specified via multiple flags.&#xA;  -dryRun&#xA;     Whether to check only -promscrape.config and then exit. Unknown config entries aren&#39;t allowed in -promscrape.config by default. This can be changed with -promscrape.config.strictParse=false command-line flag&#xA;  -enableTCP6&#xA;     Whether to enable IPv6 for listening and dialing. By default only IPv4 TCP and UDP is used&#xA;  -envflag.enable&#xA;     Whether to enable reading flags from environment variables additionally to command line. Command line flag values have priority over values from environment vars. Flags are read only from command line if this flag isn&#39;t set. See https://docs.victoriametrics.com/#environment-variables for more details&#xA;  -envflag.prefix string&#xA;     Prefix for environment variables if -envflag.enable is set&#xA;  -eula&#xA;     By specifying this flag, you confirm that you have an enterprise license and accept the EULA https://victoriametrics.com/assets/VM_EULA.pdf . This flag is available only in enterprise version of VictoriaMetrics&#xA;  -finalMergeDelay duration&#xA;     The delay before starting final merge for per-month partition after no new data is ingested into it. Final merge may require additional disk IO and CPU resources. Final merge may increase query speed and reduce disk space usage in some cases. Zero value disables final merge&#xA;  -flagsAuthKey string&#xA;     Auth key for /flags endpoint. It must be passed via authKey query arg. It overrides httpAuth.* settings&#xA;  -forceFlushAuthKey string&#xA;     authKey, which must be passed in query string to /internal/force_flush pages&#xA;  -forceMergeAuthKey string&#xA;     authKey, which must be passed in query string to /internal/force_merge pages&#xA;  -fs.disableMmap&#xA;     Whether to use pread() instead of mmap() for reading data files. By default mmap() is used for 64-bit arches and pread() is used for 32-bit arches, since they cannot read data files bigger than 2^32 bytes in memory. mmap() is usually faster for reading small data chunks than pread()&#xA;  -graphiteListenAddr string&#xA;     TCP and UDP address to listen for Graphite plaintext data. Usually :2003 must be set. Doesn&#39;t work if empty&#xA;  -graphiteTrimTimestamp duration&#xA;     Trim timestamps for Graphite data to this duration. Minimum practical duration is 1s. Higher duration (i.e. 1m) may be used for reducing disk space usage for timestamp data (default 1s)&#xA;  -http.connTimeout duration&#xA;     Incoming http connections are closed after the configured timeout. This may help to spread the incoming load among a cluster of services behind a load balancer. Please note that the real timeout may be bigger by up to 10% as a protection against the thundering herd problem (default 2m0s)&#xA;  -http.disableResponseCompression&#xA;     Disable compression of HTTP responses to save CPU resources. By default compression is enabled to save network bandwidth&#xA;  -http.idleConnTimeout duration&#xA;     Timeout for incoming idle http connections (default 1m0s)&#xA;  -http.maxGracefulShutdownDuration duration&#xA;     The maximum duration for a graceful shutdown of the HTTP server. A highly loaded server may require increased value for a graceful shutdown (default 7s)&#xA;  -http.pathPrefix string&#xA;     An optional prefix to add to all the paths handled by http server. For example, if &#39;-http.pathPrefix=/foo/bar&#39; is set, then all the http requests will be handled on &#39;/foo/bar/*&#39; paths. This may be useful for proxied requests. See https://www.robustperception.io/using-external-urls-and-proxies-with-prometheus&#xA;  -http.shutdownDelay duration&#xA;     Optional delay before http server shutdown. During this delay, the server returns non-OK responses from /health page, so load balancers can route new requests to other servers&#xA;  -httpAuth.password string&#xA;     Password for HTTP Basic Auth. The authentication is disabled if -httpAuth.username is empty&#xA;  -httpAuth.username string&#xA;     Username for HTTP Basic Auth. The authentication is disabled if empty. See also -httpAuth.password&#xA;  -httpListenAddr string&#xA;     TCP address to listen for http connections (default &#34;:8428&#34;)&#xA;  -import.maxLineLen size&#xA;     The maximum length in bytes of a single line accepted by /api/v1/import; the line length can be limited with &#39;max_rows_per_line&#39; query arg passed to /api/v1/export&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 104857600)&#xA;  -influx.databaseNames array&#xA;     Comma-separated list of database names to return from /query and /influx/query API. This can be needed for accepting data from Telegraf plugins such as https://github.com/fangli/fluent-plugin-influxdb&#xA;     Supports an array of values separated by comma or specified via multiple flags.&#xA;  -influx.maxLineSize size&#xA;     The maximum size in bytes for a single InfluxDB line during parsing&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 262144)&#xA;  -influxDBLabel string&#xA;     Default label for the DB name sent over &#39;?db={db_name}&#39; query parameter (default &#34;db&#34;)&#xA;  -influxListenAddr string&#xA;     TCP and UDP address to listen for InfluxDB line protocol data. Usually :8089 must be set. Doesn&#39;t work if empty. This flag isn&#39;t needed when ingesting data over HTTP - just send it to http://&amp;lt;victoriametrics&amp;gt;:8428/write&#xA;  -influxMeasurementFieldSeparator string&#xA;     Separator for &#39;{measurement}{separator}{field_name}&#39; metric name when inserted via InfluxDB line protocol (default &#34;_&#34;)&#xA;  -influxSkipMeasurement&#xA;     Uses &#39;{field_name}&#39; as a metric name while ignoring &#39;{measurement}&#39; and &#39;-influxMeasurementFieldSeparator&#39;&#xA;  -influxSkipSingleField&#xA;     Uses &#39;{measurement}&#39; instead of &#39;{measurement}{separator}{field_name}&#39; for metic name if InfluxDB line contains only a single field&#xA;  -influxTrimTimestamp duration&#xA;     Trim timestamps for InfluxDB line protocol data to this duration. Minimum practical duration is 1ms. Higher duration (i.e. 1s) may be used for reducing disk space usage for timestamp data (default 1ms)&#xA;  -insert.maxQueueDuration duration&#xA;     The maximum duration for waiting in the queue for insert requests due to -maxConcurrentInserts (default 1m0s)&#xA;  -logNewSeries&#xA;     Whether to log new series. This option is for debug purposes only. It can lead to performance issues when big number of new series are ingested into VictoriaMetrics&#xA;  -loggerDisableTimestamps&#xA;     Whether to disable writing timestamps in logs&#xA;  -loggerErrorsPerSecondLimit int&#xA;     Per-second limit on the number of ERROR messages. If more than the given number of errors are emitted per second, the remaining errors are suppressed. Zero values disable the rate limit&#xA;  -loggerFormat string&#xA;     Format for logs. Possible values: default, json (default &#34;default&#34;)&#xA;  -loggerLevel string&#xA;     Minimum level of errors to log. Possible values: INFO, WARN, ERROR, FATAL, PANIC (default &#34;INFO&#34;)&#xA;  -loggerOutput string&#xA;     Output for the logs. Supported values: stderr, stdout (default &#34;stderr&#34;)&#xA;  -loggerTimezone string&#xA;     Timezone to use for timestamps in logs. Timezone must be a valid IANA Time Zone. For example: America/New_York, Europe/Berlin, Etc/GMT+3 or Local (default &#34;UTC&#34;)&#xA;  -loggerWarnsPerSecondLimit int&#xA;     Per-second limit on the number of WARN messages. If more than the given number of warns are emitted per second, then the remaining warns are suppressed. Zero values disable the rate limit&#xA;  -maxConcurrentInserts int&#xA;     The maximum number of concurrent inserts. Default value should work for most cases, since it minimizes the overhead for concurrent inserts. This option is tigthly coupled with -insert.maxQueueDuration (default 16)&#xA;  -maxInsertRequestSize size&#xA;     The maximum size in bytes of a single Prometheus remote_write API request&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 33554432)&#xA;  -maxLabelValueLen int&#xA;     The maximum length of label values in the accepted time series. Longer label values are truncated. In this case the vm_too_long_label_values_total metric at /metrics page is incremented (default 16384)&#xA;  -maxLabelsPerTimeseries int&#xA;     The maximum number of labels accepted per time series. Superfluous labels are dropped. In this case the vm_metrics_with_dropped_labels_total metric at /metrics page is incremented (default 30)&#xA;  -memory.allowedBytes size&#xA;     Allowed size of system memory VictoriaMetrics caches may occupy. This option overrides -memory.allowedPercent if set to a non-zero value. Too low a value may increase the cache miss rate usually resulting in higher CPU and disk IO usage. Too high a value may evict too much data from OS page cache resulting in higher disk IO usage&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 0)&#xA;  -memory.allowedPercent float&#xA;     Allowed percent of system memory VictoriaMetrics caches may occupy. See also -memory.allowedBytes. Too low a value may increase cache miss rate usually resulting in higher CPU and disk IO usage. Too high a value may evict too much data from OS page cache which will result in higher disk IO usage (default 60)&#xA;  -metricsAuthKey string&#xA;     Auth key for /metrics endpoint. It must be passed via authKey query arg. It overrides httpAuth.* settings&#xA;  -opentsdbHTTPListenAddr string&#xA;     TCP address to listen for OpentTSDB HTTP put requests. Usually :4242 must be set. Doesn&#39;t work if empty&#xA;  -opentsdbListenAddr string&#xA;     TCP and UDP address to listen for OpentTSDB metrics. Telnet put messages and HTTP /api/put messages are simultaneously served on TCP port. Usually :4242 must be set. Doesn&#39;t work if empty&#xA;  -opentsdbTrimTimestamp duration&#xA;     Trim timestamps for OpenTSDB &#39;telnet put&#39; data to this duration. Minimum practical duration is 1s. Higher duration (i.e. 1m) may be used for reducing disk space usage for timestamp data (default 1s)&#xA;  -opentsdbhttp.maxInsertRequestSize size&#xA;     The maximum size of OpenTSDB HTTP put request&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 33554432)&#xA;  -opentsdbhttpTrimTimestamp duration&#xA;     Trim timestamps for OpenTSDB HTTP data to this duration. Minimum practical duration is 1ms. Higher duration (i.e. 1s) may be used for reducing disk space usage for timestamp data (default 1ms)&#xA;  -pprofAuthKey string&#xA;     Auth key for /debug/pprof/* endpoints. It must be passed via authKey query arg. It overrides httpAuth.* settings&#xA;  -precisionBits int&#xA;     The number of precision bits to store per each value. Lower precision bits improves data compression at the cost of precision loss (default 64)&#xA;  -promscrape.azureSDCheckInterval duration&#xA;     Interval for checking for changes in Azure. This works only if azure_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#azure_sd_configs for details (default 1m0s)&#xA;  -promscrape.cluster.memberNum string&#xA;     The number of number in the cluster of scrapers. It must be an unique value in the range 0 ... promscrape.cluster.membersCount-1 across scrapers in the cluster. Can be specified as pod name of Kubernetes StatefulSet - pod-name-Num, where Num is a numeric part of pod name (default &#34;0&#34;)&#xA;  -promscrape.cluster.membersCount int&#xA;     The number of members in a cluster of scrapers. Each member must have an unique -promscrape.cluster.memberNum in the range 0 ... promscrape.cluster.membersCount-1 . Each member then scrapes roughly 1/N of all the targets. By default cluster scraping is disabled, i.e. a single scraper scrapes all the targets&#xA;  -promscrape.cluster.name string&#xA;     Optional name of the cluster. If multiple vmagent clusters scrape the same targets, then each cluster must have unique name in order to properly de-duplicate samples received from these clusters. See https://github.com/VictoriaMetrics/VictoriaMetrics/issues/2679&#xA;  -promscrape.cluster.replicationFactor int&#xA;     The number of members in the cluster, which scrape the same targets. If the replication factor is greater than 1, then the deduplication must be enabled at remote storage side. See https://docs.victoriametrics.com/#deduplication (default 1)&#xA;  -promscrape.config string&#xA;     Optional path to Prometheus config file with &#39;scrape_configs&#39; section containing targets to scrape. The path can point to local file and to http url. See https://docs.victoriametrics.com/#how-to-scrape-prometheus-exporters-such-as-node-exporter for details&#xA;  -promscrape.config.dryRun&#xA;     Checks -promscrape.config file for errors and unsupported fields and then exits. Returns non-zero exit code on parsing errors and emits these errors to stderr. See also -promscrape.config.strictParse command-line flag. Pass -loggerLevel=ERROR if you don&#39;t need to see info messages in the output.&#xA;  -promscrape.config.strictParse&#xA;     Whether to deny unsupported fields in -promscrape.config . Set to false in order to silently skip unsupported fields (default true)&#xA;  -promscrape.configCheckInterval duration&#xA;     Interval for checking for changes in &#39;-promscrape.config&#39; file. By default the checking is disabled. Send SIGHUP signal in order to force config check for changes&#xA;  -promscrape.consul.waitTime duration&#xA;     Wait time used by Consul service discovery. Default value is used if not set&#xA;  -promscrape.consulSDCheckInterval duration&#xA;     Interval for checking for changes in Consul. This works only if consul_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#consul_sd_configs for details (default 30s)&#xA;  -promscrape.digitaloceanSDCheckInterval duration&#xA;     Interval for checking for changes in digital ocean. This works only if digitalocean_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#digitalocean_sd_configs for details (default 1m0s)&#xA;  -promscrape.disableCompression&#xA;     Whether to disable sending &#39;Accept-Encoding: gzip&#39; request headers to all the scrape targets. This may reduce CPU usage on scrape targets at the cost of higher network bandwidth utilization. It is possible to set &#39;disable_compression: true&#39; individually per each &#39;scrape_config&#39; section in &#39;-promscrape.config&#39; for fine grained control&#xA;  -promscrape.disableKeepAlive&#xA;     Whether to disable HTTP keep-alive connections when scraping all the targets. This may be useful when targets has no support for HTTP keep-alive connection. It is possible to set &#39;disable_keepalive: true&#39; individually per each &#39;scrape_config&#39; section in &#39;-promscrape.config&#39; for fine grained control. Note that disabling HTTP keep-alive may increase load on both vmagent and scrape targets&#xA;  -promscrape.discovery.concurrency int&#xA;     The maximum number of concurrent requests to Prometheus autodiscovery API (Consul, Kubernetes, etc.) (default 100)&#xA;  -promscrape.discovery.concurrentWaitTime duration&#xA;     The maximum duration for waiting to perform API requests if more than -promscrape.discovery.concurrency requests are simultaneously performed (default 1m0s)&#xA;  -promscrape.dnsSDCheckInterval duration&#xA;     Interval for checking for changes in dns. This works only if dns_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#dns_sd_configs for details (default 30s)&#xA;  -promscrape.dockerSDCheckInterval duration&#xA;     Interval for checking for changes in docker. This works only if docker_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#docker_sd_configs for details (default 30s)&#xA;  -promscrape.dockerswarmSDCheckInterval duration&#xA;     Interval for checking for changes in dockerswarm. This works only if dockerswarm_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#dockerswarm_sd_configs for details (default 30s)&#xA;  -promscrape.dropOriginalLabels&#xA;     Whether to drop original labels for scrape targets at /targets and /api/v1/targets pages. This may be needed for reducing memory usage when original labels for big number of scrape targets occupy big amounts of memory. Note that this reduces debuggability for improper per-target relabeling configs&#xA;  -promscrape.ec2SDCheckInterval duration&#xA;     Interval for checking for changes in ec2. This works only if ec2_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#ec2_sd_configs for details (default 1m0s)&#xA;  -promscrape.eurekaSDCheckInterval duration&#xA;     Interval for checking for changes in eureka. This works only if eureka_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#eureka_sd_configs for details (default 30s)&#xA;  -promscrape.fileSDCheckInterval duration&#xA;     Interval for checking for changes in &#39;file_sd_config&#39;. See https://docs.victoriametrics.com/sd_configs.html#file_sd_configs for details (default 1m0s)&#xA;  -promscrape.gceSDCheckInterval duration&#xA;     Interval for checking for changes in gce. This works only if gce_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#gce_sd_configs for details (default 1m0s)&#xA;  -promscrape.httpSDCheckInterval duration&#xA;     Interval for checking for changes in http endpoint service discovery. This works only if http_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#http_sd_configs for details (default 1m0s)&#xA;  -promscrape.kubernetes.apiServerTimeout duration&#xA;     How frequently to reload the full state from Kubernetes API server (default 30m0s)&#xA;  -promscrape.kubernetesSDCheckInterval duration&#xA;     Interval for checking for changes in Kubernetes API server. This works only if kubernetes_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#kubernetes_sd_configs for details (default 30s)&#xA;  -promscrape.maxDroppedTargets int&#xA;     The maximum number of droppedTargets to show at /api/v1/targets page. Increase this value if your setup drops more scrape targets during relabeling and you need investigating labels for all the dropped targets. Note that the increased number of tracked dropped targets may result in increased memory usage (default 1000)&#xA;  -promscrape.maxResponseHeadersSize size&#xA;     The maximum size of http response headers from Prometheus scrape targets&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 4096)&#xA;  -promscrape.maxScrapeSize size&#xA;     The maximum size of scrape response in bytes to process from Prometheus targets. Bigger responses are rejected&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 16777216)&#xA;  -promscrape.minResponseSizeForStreamParse size&#xA;     The minimum target response size for automatic switching to stream parsing mode, which can reduce memory usage. See https://docs.victoriametrics.com/vmagent.html#stream-parsing-mode&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 1000000)&#xA;  -promscrape.noStaleMarkers&#xA;     Whether to disable sending Prometheus stale markers for metrics when scrape target disappears. This option may reduce memory usage if stale markers aren&#39;t needed for your setup. This option also disables populating the scrape_series_added metric. See https://prometheus.io/docs/concepts/jobs_instances/#automatically-generated-labels-and-time-series&#xA;  -promscrape.openstackSDCheckInterval duration&#xA;     Interval for checking for changes in openstack API server. This works only if openstack_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#openstack_sd_configs for details (default 30s)&#xA;  -promscrape.seriesLimitPerTarget int&#xA;     Optional limit on the number of unique time series a single scrape target can expose. See https://docs.victoriametrics.com/vmagent.html#cardinality-limiter for more info&#xA;  -promscrape.streamParse&#xA;     Whether to enable stream parsing for metrics obtained from scrape targets. This may be useful for reducing memory usage when millions of metrics are exposed per each scrape target. It is posible to set &#39;stream_parse: true&#39; individually per each &#39;scrape_config&#39; section in &#39;-promscrape.config&#39; for fine grained control&#xA;  -promscrape.suppressDuplicateScrapeTargetErrors&#xA;     Whether to suppress &#39;duplicate scrape target&#39; errors; see https://docs.victoriametrics.com/vmagent.html#troubleshooting for details&#xA;  -promscrape.suppressScrapeErrors&#xA;     Whether to suppress scrape errors logging. The last error for each target is always available at &#39;/targets&#39; page even if scrape errors logging is suppressed. See also -promscrape.suppressScrapeErrorsDelay&#xA;  -promscrape.suppressScrapeErrorsDelay duration&#xA;     The delay for suppressing repeated scrape errors logging per each scrape targets. This may be used for reducing the number of log lines related to scrape errors. See also -promscrape.suppressScrapeErrors&#xA;  -promscrape.yandexcloudSDCheckInterval duration&#xA;     Interval for checking for changes in Yandex Cloud API. This works only if yandexcloud_sd_configs is configured in &#39;-promscrape.config&#39; file. See https://docs.victoriametrics.com/sd_configs.html#yandexcloud_sd_configs for details (default 30s)&#xA;  -pushmetrics.extraLabel array&#xA;     Optional labels to add to metrics pushed to -pushmetrics.url . For example, -pushmetrics.extraLabel=&#39;instance=&#34;foo&#34;&#39; adds instance=&#34;foo&#34; label to all the metrics pushed to -pushmetrics.url&#xA;     Supports an array of values separated by comma or specified via multiple flags.&#xA;  -pushmetrics.interval duration&#xA;     Interval for pushing metrics to -pushmetrics.url (default 10s)&#xA;  -pushmetrics.url array&#xA;     Optional URL to push metrics exposed at /metrics page. See https://docs.victoriametrics.com/#push-metrics . By default metrics exposed at /metrics page aren&#39;t pushed to any remote storage&#xA;     Supports an array of values separated by comma or specified via multiple flags.&#xA;  -relabelConfig string&#xA;     Optional path to a file with relabeling rules, which are applied to all the ingested metrics. The path can point either to local file or to http url. See https://docs.victoriametrics.com/#relabeling for details. The config is reloaded on SIGHUP signal&#xA;  -relabelDebug&#xA;     Whether to log metrics before and after relabeling with -relabelConfig. If the -relabelDebug is enabled, then the metrics aren&#39;t sent to storage. This is useful for debugging the relabeling configs&#xA;  -retentionFilter array&#xA;     Retention filter in the format &#39;filter:retention&#39;. For example, &#39;{env=&#34;dev&#34;}:3d&#39; configures the retention for time series with env=&#34;dev&#34; label to 3 days. See https://docs.victoriametrics.com/#retention-filters for details. This flag is available only in enterprise version of VictoriaMetrics&#xA;     Supports an array of values separated by comma or specified via multiple flags.&#xA;  -retentionPeriod value&#xA;     Data with timestamps outside the retentionPeriod is automatically deleted. See also -retentionFilter&#xA;     The following optional suffixes are supported: h (hour), d (day), w (week), y (year). If suffix isn&#39;t set, then the duration is counted in months (default 1)&#xA;  -retentionTimezoneOffset duration&#xA;     The offset for performing indexdb rotation. If set to 0, then the indexdb rotation is performed at 4am UTC time per each -retentionPeriod. If set to 2h, then the indexdb rotation is performed at 4am EET time (the timezone with +2h offset)&#xA;  -search.cacheTimestampOffset duration&#xA;     The maximum duration since the current time for response data, which is always queried from the original raw data, without using the response cache. Increase this value if you see gaps in responses due to time synchronization issues between VictoriaMetrics and data sources. See also -search.disableAutoCacheReset (default 5m0s)&#xA;  -search.disableAutoCacheReset&#xA;     Whether to disable automatic response cache reset if a sample with timestamp outside -search.cacheTimestampOffset is inserted into VictoriaMetrics&#xA;  -search.disableCache&#xA;     Whether to disable response caching. This may be useful during data backfilling&#xA;  -search.graphiteMaxPointsPerSeries int&#xA;     The maximum number of points per series Graphite render API can return. This flag is available only in enterprise version of VictoriaMetrics (default 1000000)&#xA;  -search.graphiteStorageStep duration&#xA;     The interval between datapoints stored in the database. It is used at Graphite Render API handler for normalizing the interval between datapoints in case it isn&#39;t normalized. It can be overridden by sending &#39;storage_step&#39; query arg to /render API or by sending the desired interval via &#39;Storage-Step&#39; http header during querying /render API. This flag is available only in enterprise version of VictoriaMetrics (default 10s)&#xA;  -search.latencyOffset duration&#xA;     The time when data points become visible in query results after the collection. Too small value can result in incomplete last points for query results (default 30s)&#xA;  -search.logSlowQueryDuration duration&#xA;     Log queries with execution time exceeding this value. Zero disables slow query logging (default 5s)&#xA;  -search.maxConcurrentRequests int&#xA;     The maximum number of concurrent search requests. It shouldn&#39;t be high, since a single request can saturate all the CPU cores, while many concurrently executed requests may require high amounts of memory. See also -search.maxQueueDuration and -search.maxMemoryPerQuery (default 8)&#xA;  -search.maxExportDuration duration&#xA;     The maximum duration for /api/v1/export call (default 720h0m0s)&#xA;  -search.maxExportSeries int&#xA;     The maximum number of time series, which can be returned from /api/v1/export* APIs. This option allows limiting memory usage (default 10000000)&#xA;  -search.maxFederateSeries int&#xA;     The maximum number of time series, which can be returned from /federate. This option allows limiting memory usage (default 1000000)&#xA;  -search.maxGraphiteSeries int&#xA;     The maximum number of time series, which can be scanned during queries to Graphite Render API. See https://docs.victoriametrics.com/#graphite-render-api-usage . This flag is available only in enterprise version of VictoriaMetrics (default 300000)&#xA;  -search.maxLookback duration&#xA;     Synonym to -search.lookback-delta from Prometheus. The value is dynamically detected from interval between time series datapoints if not set. It can be overridden on per-query basis via max_lookback arg. See also &#39;-search.maxStalenessInterval&#39; flag, which has the same meaining due to historical reasons&#xA;  -search.maxMemoryPerQuery size&#xA;     The maximum amounts of memory a single query may consume. Queries requiring more memory are rejected. The total memory limit for concurrently executed queries can be estimated as -search.maxMemoryPerQuery multiplied by -search.maxConcurrentRequests&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 0)&#xA;  -search.maxPointsPerTimeseries int&#xA;     The maximum points per a single timeseries returned from /api/v1/query_range. This option doesn&#39;t limit the number of scanned raw samples in the database. The main purpose of this option is to limit the number of per-series points returned to graphing UI such as VMUI or Grafana. There is no sense in setting this limit to values bigger than the horizontal resolution of the graph (default 30000)&#xA;  -search.maxPointsSubqueryPerTimeseries int&#xA;     The maximum number of points per series, which can be generated by subquery. See https://valyala.medium.com/prometheus-subqueries-in-victoriametrics-9b1492b720b3 (default 100000)&#xA;  -search.maxQueryDuration duration&#xA;     The maximum duration for query execution (default 30s)&#xA;  -search.maxQueryLen size&#xA;     The maximum search query length in bytes&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 16384)&#xA;  -search.maxQueueDuration duration&#xA;     The maximum time the request waits for execution when -search.maxConcurrentRequests limit is reached; see also -search.maxQueryDuration (default 10s)&#xA;  -search.maxSamplesPerQuery int&#xA;     The maximum number of raw samples a single query can process across all time series. This protects from heavy queries, which select unexpectedly high number of raw samples. See also -search.maxSamplesPerSeries (default 1000000000)&#xA;  -search.maxSamplesPerSeries int&#xA;     The maximum number of raw samples a single query can scan per each time series. This option allows limiting memory usage (default 30000000)&#xA;  -search.maxSeries int&#xA;     The maximum number of time series, which can be returned from /api/v1/series. This option allows limiting memory usage (default 30000)&#xA;  -search.maxStalenessInterval duration&#xA;     The maximum interval for staleness calculations. By default it is automatically calculated from the median interval between samples. This flag could be useful for tuning Prometheus data model closer to Influx-style data model. See https://prometheus.io/docs/prometheus/latest/querying/basics/#staleness for details. See also &#39;-search.setLookbackToStep&#39; flag&#xA;  -search.maxStatusRequestDuration duration&#xA;     The maximum duration for /api/v1/status/* requests (default 5m0s)&#xA;  -search.maxStepForPointsAdjustment duration&#xA;     The maximum step when /api/v1/query_range handler adjusts points with timestamps closer than -search.latencyOffset to the current time. The adjustment is needed because such points may contain incomplete data (default 1m0s)&#xA;  -search.maxTSDBStatusSeries int&#xA;     The maximum number of time series, which can be processed during the call to /api/v1/status/tsdb. This option allows limiting memory usage (default 10000000)&#xA;  -search.maxTagKeys int&#xA;     The maximum number of tag keys returned from /api/v1/labels (default 100000)&#xA;  -search.maxTagValueSuffixesPerSearch int&#xA;     The maximum number of tag value suffixes returned from /metrics/find (default 100000)&#xA;  -search.maxTagValues int&#xA;     The maximum number of tag values returned from /api/v1/label/&amp;lt;label_name&amp;gt;/values (default 100000)&#xA;  -search.maxUniqueTimeseries int&#xA;     The maximum number of unique time series, which can be selected during /api/v1/query and /api/v1/query_range queries. This option allows limiting memory usage (default 300000)&#xA;  -search.minStalenessInterval duration&#xA;     The minimum interval for staleness calculations. This flag could be useful for removing gaps on graphs generated from time series with irregular intervals between samples. See also &#39;-search.maxStalenessInterval&#39;&#xA;  -search.noStaleMarkers&#xA;     Set this flag to true if the database doesn&#39;t contain Prometheus stale markers, so there is no need in spending additional CPU time on its handling. Staleness markers may exist only in data obtained from Prometheus scrape targets&#xA;  -search.queryStats.lastQueriesCount int&#xA;     Query stats for /api/v1/status/top_queries is tracked on this number of last queries. Zero value disables query stats tracking (default 20000)&#xA;  -search.queryStats.minQueryDuration duration&#xA;     The minimum duration for queries to track in query stats at /api/v1/status/top_queries. Queries with lower duration are ignored in query stats (default 1ms)&#xA;  -search.resetCacheAuthKey string&#xA;     Optional authKey for resetting rollup cache via /internal/resetRollupResultCache call&#xA;  -search.setLookbackToStep&#xA;     Whether to fix lookback interval to &#39;step&#39; query arg value. If set to true, the query model becomes closer to InfluxDB data model. If set to true, then -search.maxLookback and -search.maxStalenessInterval are ignored&#xA;  -search.treatDotsAsIsInRegexps&#xA;     Whether to treat dots as is in regexp label filters used in queries. For example, foo{bar=~&#34;a.b.c&#34;} will be automatically converted to foo{bar=~&#34;a\\.b\\.c&#34;}, i.e. all the dots in regexp filters will be automatically escaped in order to match only dot char instead of matching any char. Dots in &#34;.+&#34;, &#34;.*&#34; and &#34;.{n}&#34; regexps aren&#39;t escaped. This option is DEPRECATED in favor of {__graphite__=&#34;a.*.c&#34;} syntax for selecting metrics matching the given Graphite metrics filter&#xA;  -selfScrapeInstance string&#xA;     Value for &#39;instance&#39; label, which is added to self-scraped metrics (default &#34;self&#34;)&#xA;  -selfScrapeInterval duration&#xA;     Interval for self-scraping own metrics at /metrics page&#xA;  -selfScrapeJob string&#xA;     Value for &#39;job&#39; label, which is added to self-scraped metrics (default &#34;victoria-metrics&#34;)&#xA;  -smallMergeConcurrency int&#xA;     The maximum number of CPU cores to use for small merges. Default value is used if set to 0&#xA;  -snapshotAuthKey string&#xA;     authKey, which must be passed in query string to /snapshot* pages&#xA;  -snapshotsMaxAge value&#xA;     Automatically delete snapshots older than -snapshotsMaxAge if it is set to non-zero duration. Make sure that backup process has enough time to finish the backup before the corresponding snapshot is automatically deleted&#xA;     The following optional suffixes are supported: h (hour), d (day), w (week), y (year). If suffix isn&#39;t set, then the duration is counted in months (default 0)&#xA;  -sortLabels&#xA;     Whether to sort labels for incoming samples before writing them to storage. This may be needed for reducing memory usage at storage when the order of labels in incoming samples is random. For example, if m{k1=&#34;v1&#34;,k2=&#34;v2&#34;} may be sent as m{k2=&#34;v2&#34;,k1=&#34;v1&#34;}. Enabled sorting for labels can slow down ingestion performance a bit&#xA;  -storage.cacheSizeIndexDBDataBlocks size&#xA;     Overrides max size for indexdb/dataBlocks cache. See https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#cache-tuning&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 0)&#xA;  -storage.cacheSizeIndexDBIndexBlocks size&#xA;     Overrides max size for indexdb/indexBlocks cache. See https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#cache-tuning&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 0)&#xA;  -storage.cacheSizeIndexDBTagFilters size&#xA;     Overrides max size for indexdb/tagFiltersToMetricIDs cache. See https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#cache-tuning&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 0)&#xA;  -storage.cacheSizeStorageTSID size&#xA;     Overrides max size for storage/tsid cache. See https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#cache-tuning&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 0)&#xA;  -storage.maxDailySeries int&#xA;     The maximum number of unique series can be added to the storage during the last 24 hours. Excess series are logged and dropped. This can be useful for limiting series churn rate. See https://docs.victoriametrics.com/#cardinality-limiter . See also -storage.maxHourlySeries&#xA;  -storage.maxHourlySeries int&#xA;     The maximum number of unique series can be added to the storage during the last hour. Excess series are logged and dropped. This can be useful for limiting series cardinality. See https://docs.victoriametrics.com/#cardinality-limiter . See also -storage.maxDailySeries&#xA;  -storage.minFreeDiskSpaceBytes size&#xA;     The minimum free disk space at -storageDataPath after which the storage stops accepting new data&#xA;     Supports the following optional suffixes for size values: KB, MB, GB, KiB, MiB, GiB (default 10000000)&#xA;  -storageDataPath string&#xA;     Path to storage data (default &#34;victoria-metrics-data&#34;)&#xA;  -tls&#xA;     Whether to enable TLS for incoming HTTP requests at -httpListenAddr (aka https). -tlsCertFile and -tlsKeyFile must be set if -tls is set&#xA;  -tlsCertFile string&#xA;     Path to file with TLS certificate if -tls is set. Prefer ECDSA certs instead of RSA certs as RSA certs are slower. The provided certificate file is automatically re-read every second, so it can be dynamically updated&#xA;  -tlsCipherSuites array&#xA;     Optional list of TLS cipher suites for incoming requests over HTTPS if -tls is set. See the list of supported cipher suites at https://pkg.go.dev/crypto/tls#pkg-constants&#xA;     Supports an array of values separated by comma or specified via multiple flags.&#xA;  -tlsKeyFile string&#xA;     Path to file with TLS key if -tls is set. The provided key file is automatically re-read every second, so it can be dynamically updated&#xA;  -tlsMinVersion string&#xA;     Optional minimum TLS version to use for incoming requests over HTTPS if -tls is set. Supported values: TLS10, TLS11, TLS12, TLS13&#xA;  -usePromCompatibleNaming&#xA;     Whether to replace characters unsupported by Prometheus with underscores in the ingested metric names and label names. For example, foo.bar{a.b=&#39;c&#39;} is transformed into foo_bar{a_b=&#39;c&#39;} during data ingestion if this flag is set. See https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels&#xA;  -version&#xA;     Show VictoriaMetrics version&#xA;  -vmalert.proxyURL string&#xA;     Optional URL for proxying requests to vmalert. For example, if -vmalert.proxyURL=http://vmalert:8880 , then alerting API requests such as /api/v1/rules from Grafana will be proxied to http://vmalert:8880/api/v1/rules&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>