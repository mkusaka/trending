<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-30T01:42:49Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pulumi/pulumi</title>
    <updated>2022-07-30T01:42:49Z</updated>
    <id>tag:github.com,2022-07-30:/pulumi/pulumi</id>
    <link href="https://github.com/pulumi/pulumi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pulumi - Universal Infrastructure as Code. Your Cloud, Your Language, Your Way 🚀&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://www.pulumi.com?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=top-logo&#34; title=&#34;Pulumi - Modern Infrastructure as Code - AWS Azure Kubernetes Containers Serverless&#34;&gt; &lt;img src=&#34;https://www.pulumi.com/images/logo/logo-on-white-box.svg?&#34; width=&#34;350&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.pulumi.com?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=slack-badge&#34;&gt;&lt;img src=&#34;http://www.pulumi.com/images/docs/badges/slack.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/discussions/pulumi/pulumi&#34; alt=&#34;GitHub Discussions&#34;&gt; &lt;a href=&#34;https://npmjs.com/package/@pulumi/pulumi&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/%40pulumi%2Fpulumi.svg?sanitize=true&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pulumi&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/pulumi.svg?sanitize=true&#34; alt=&#34;Python version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/nu/pulumi&#34;&gt;&lt;img src=&#34;https://badge.fury.io/nu/pulumi.svg?sanitize=true&#34; alt=&#34;NuGet version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/pulumi/pulumi&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/pulumi/pulumi?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pulumi/pulumi&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/pulumi/pulumi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.pulumi.com/docs/get-started/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=get-started-button&#34; title=&#34;Get Started&#34;&gt; &lt;img src=&#34;https://www.pulumi.com/images/get-started.svg?&#34; align=&#34;right&#34; width=&#34;120&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pulumi&#39;s Infrastructure as Code SDK&lt;/strong&gt; is the easiest way to create and deploy cloud software that use containers, serverless functions, hosted services, and infrastructure, on any cloud.&lt;/p&gt; &#xA;&lt;p&gt;Simply write code in your favorite language and Pulumi automatically provisions and manages your &lt;a href=&#34;https://www.pulumi.com/docs/reference/clouds/aws/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=aws-reference-link&#34;&gt;AWS&lt;/a&gt;, &lt;a href=&#34;https://www.pulumi.com/docs/reference/clouds/azure/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=azure-reference-link&#34;&gt;Azure&lt;/a&gt;, &lt;a href=&#34;https://www.pulumi.com/docs/reference/clouds/gcp/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=gcp-reference-link&#34;&gt;Google Cloud Platform&lt;/a&gt;, and/or &lt;a href=&#34;https://www.pulumi.com/docs/reference/clouds/kubernetes/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=kuberneters-reference-link&#34;&gt;Kubernetes&lt;/a&gt; resources, using an &lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_Code&#34;&gt;infrastructure-as-code&lt;/a&gt; approach. Skip the YAML, and use standard language features like loops, functions, classes, and package management that you already know and love.&lt;/p&gt; &#xA;&lt;p&gt;For example, create three web servers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;let aws = require(&#34;@pulumi/aws&#34;);&#xA;let sg = new aws.ec2.SecurityGroup(&#34;web-sg&#34;, {&#xA;    ingress: [{ protocol: &#34;tcp&#34;, fromPort: 80, toPort: 80, cidrBlocks: [&#34;0.0.0.0/0&#34;]}],&#xA;});&#xA;for (let i = 0; i &amp;lt; 3; i++) {&#xA;    new aws.ec2.Instance(`web-${i}`, {&#xA;        ami: &#34;ami-7172b611&#34;,&#xA;        instanceType: &#34;t2.micro&#34;,&#xA;        securityGroups: [ sg.name ],&#xA;        userData: `#!/bin/bash&#xA;            echo &#34;Hello, World!&#34; &amp;gt; index.html&#xA;            nohup python -m SimpleHTTPServer 80 &amp;amp;`,&#xA;    });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or a simple serverless timer that archives Hacker News every day at 8:30AM:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const aws = require(&#34;@pulumi/aws&#34;);&#xA;&#xA;const snapshots = new aws.dynamodb.Table(&#34;snapshots&#34;, {&#xA;    attributes: [{ name: &#34;id&#34;, type: &#34;S&#34;, }],&#xA;    hashKey: &#34;id&#34;, billingMode: &#34;PAY_PER_REQUEST&#34;,&#xA;});&#xA;&#xA;aws.cloudwatch.onSchedule(&#34;daily-yc-snapshot&#34;, &#34;cron(30 8 * * ? *)&#34;, () =&amp;gt; {&#xA;    require(&#34;https&#34;).get(&#34;https://news.ycombinator.com&#34;, res =&amp;gt; {&#xA;        let content = &#34;&#34;;&#xA;        res.setEncoding(&#34;utf8&#34;);&#xA;        res.on(&#34;data&#34;, chunk =&amp;gt; content += chunk);&#xA;        res.on(&#34;end&#34;, () =&amp;gt; new aws.sdk.DynamoDB.DocumentClient().put({&#xA;            TableName: snapshots.name.get(),&#xA;            Item: { date: Date.now(), content },&#xA;        }).promise());&#xA;    }).end();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Many examples are available spanning containers, serverless, and infrastructure in &lt;a href=&#34;https://github.com/pulumi/examples&#34;&gt;pulumi/examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pulumi is open source under the Apache 2.0 license, supports many languages and clouds, and is easy to extend. This repo contains the &lt;code&gt;pulumi&lt;/code&gt; CLI, language SDKs, and core Pulumi engine, and individual libraries are in their own repos.&lt;/p&gt; &#xA;&lt;h2&gt;Welcome&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;400&#34; src=&#34;https://www.pulumi.com/images/docs/quickstart/console.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.pulumi.com/docs/get-started/&#34;&gt;Get Started with Pulumi&lt;/a&gt;&lt;/strong&gt;: Deploy a simple application in AWS, Azure, Google Cloud, or Kubernetes using Pulumi.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.pulumi.com/learn/&#34;&gt;Learn&lt;/a&gt;&lt;/strong&gt;: Follow Pulumi learning pathways to learn best practices and architectural patterns through authentic examples.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pulumi/examples&#34;&gt;Examples&lt;/a&gt;&lt;/strong&gt;: Browse several examples across many languages, clouds, and scenarios including containers, serverless, and infrastructure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.pulumi.com/docs/&#34;&gt;Docs&lt;/a&gt;&lt;/strong&gt;: Learn about Pulumi concepts, follow user-guides, and consult the reference documentation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.pulumi.com/registry/&#34;&gt;Registry&lt;/a&gt;&lt;/strong&gt;: Find the Pulumi Package with the resources you need. Install the package directly into your project, browse the API documentation, and start building.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/orgs/pulumi/projects/44&#34;&gt;Pulumi Roadmap&lt;/a&gt;&lt;/strong&gt;: Review the planned work for the upcoming quarter and a selected backlog of issues that are on our mind but not yet scheduled.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://slack.pulumi.com/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=welcome-slack&#34;&gt;Community Slack&lt;/a&gt;&lt;/strong&gt;: Join us in Pulumi Community Slack. All conversations and questions are welcome.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pulumi/pulumi/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/strong&gt;: Ask questions or share what you&#39;re building with Pulumi.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;getting-started&#34;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6f8KF6UGN7g&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pulumi/pulumi/master/youtube_preview_image.png&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.pulumi.com/docs/quickstart/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=getting-started-quickstart&#34;&gt;Get Started&lt;/a&gt; guide to quickly get started with Pulumi on your platform and cloud of choice.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, the following steps demonstrate how to deploy your first Pulumi program, using AWS Serverless Lambdas, in minutes:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;To install the latest Pulumi release, run the following (see full &lt;a href=&#34;https://www.pulumi.com/docs/reference/install/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=getting-started-install&#34;&gt;installation instructions&lt;/a&gt; for additional installation options):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -fsSL https://get.pulumi.com/ | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Project&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;After installing, you can get started with the &lt;code&gt;pulumi new&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir pulumi-demo &amp;amp;&amp;amp; cd pulumi-demo&#xA;$ pulumi new hello-aws-javascript&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;new&lt;/code&gt; command offers templates for all languages and clouds. Run it without an argument and it&#39;ll prompt you with available projects. This command created an AWS Serverless Lambda project written in JavaScript.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deploy to the Cloud&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;pulumi up&lt;/code&gt; to get your code to the cloud:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pulumi up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This makes all cloud resources needed to run your code. Simply make edits to your project, and subsequent &lt;code&gt;pulumi up&lt;/code&gt;s will compute the minimal diff to deploy your changes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use Your Program&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Now that your code is deployed, you can interact with it. In the above example, we can curl the endpoint:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl $(pulumi stack output url)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the Logs&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;If you&#39;re using containers or functions, Pulumi&#39;s unified logging command will show all of your logs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pulumi logs -f&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Destroy your Resources&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;After you&#39;re done, you can remove all resources created by your program:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pulumi destroy -y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To learn more, head over to &lt;a href=&#34;https://pulumi.com/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=getting-started-learn-more-home&#34;&gt;pulumi.com&lt;/a&gt; for much more information, including &lt;a href=&#34;https://www.pulumi.com/docs/reference/tutorials/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=getting-started-learn-more-tutorials&#34;&gt;tutorials&lt;/a&gt;, &lt;a href=&#34;https://github.com/pulumi/examples&#34;&gt;examples&lt;/a&gt;, and details of the core Pulumi CLI and &lt;a href=&#34;https://www.pulumi.com/docs/reference/concepts/?utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_source=github.com&amp;amp;utm_medium=getting-started-learn-more-concepts&#34;&gt;programming model concepts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;platform&#34;&gt;&lt;/a&gt;Platform&lt;/h2&gt; &#xA;&lt;h3&gt;CLI&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;   &lt;th&gt;Build Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux/macOS x64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pulumi/pulumi/actions/workflows/master.yml&#34;&gt;&lt;img src=&#34;https://github.com/pulumi/pulumi/actions/workflows/master.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux x64 Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows x64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/pulumi/pulumi&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/uqrduw6qnoss7g4i?svg=true&amp;amp;branch=master&#34; alt=&#34;Windows x64 Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;EOL Releases&lt;/h4&gt; &#xA;&lt;p&gt;The Pulumi CLI v1 and v2 are no longer supported. If you are not yet running v3, please consider migrating to v3 to continue getting the latest and greatest Pulumi has to offer! &lt;span&gt;💪&lt;/span&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To migrate from v2 to v3, please see our &lt;a href=&#34;https://www.pulumi.com/docs/get-started/install/migrating-3.0/&#34;&gt;v3 Migration Guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To migrate to v2 from v1, please see our &lt;a href=&#34;https://www.pulumi.com/docs/get-started/install/migrating-2.0/&#34;&gt;v2 Migration Guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Languages&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Runtime&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.pulumi.com/logos/tech/logo-js.png&#34; height=&#34;38&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi/master/sdk/nodejs&#34;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;Node.js 12+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.pulumi.com/logos/tech/logo-ts.png&#34; height=&#34;38&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi/master/sdk/nodejs&#34;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;Node.js 12+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.pulumi.com/logos/tech/logo-python.png&#34; height=&#34;38&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi/master/sdk/python&#34;&gt;Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;Python 3.6+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.pulumi.com/logos/tech/logo-golang.png&#34; height=&#34;38&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi/master/sdk/go&#34;&gt;Go&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;Go 1.14+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.pulumi.com/logos/tech/dotnet.png&#34; height=&#34;38&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi/master/sdk/dotnet&#34;&gt;.NET (C#/F#/VB.NET)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;.NET Core 3.1+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Clouds&lt;/h3&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://www.pulumi.com/registry/&#34;&gt;Registry&lt;/a&gt; for the full list of supported cloud and infrastructure providers.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://github.com/pulumi/pulumi/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for information on building Pulumi from source or contributing improvements.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/pprof</title>
    <updated>2022-07-30T01:42:49Z</updated>
    <id>tag:github.com,2022-07-30:/google/pprof</id>
    <link href="https://github.com/google/pprof" rel="alternate"></link>
    <summary type="html">&lt;p&gt;pprof is a tool for visualization and analysis of profiling data&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/google/pprof/actions&#34;&gt;&lt;img src=&#34;https://github.com/google/pprof/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;Github Action CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/google/pprof&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/google/pprof/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/google/pprof/profile&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/google/pprof/profile.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;pprof is a tool for visualization and analysis of profiling data.&lt;/p&gt; &#xA;&lt;p&gt;pprof reads a collection of profiling samples in profile.proto format and generates reports to visualize and help analyze the data. It can generate both text and graphical reports (through the use of the dot visualization package).&lt;/p&gt; &#xA;&lt;p&gt;profile.proto is a protocol buffer that describes a set of callstacks and symbolization information. A common usage is to represent a set of sampled callstacks from statistical profiling. The format is described on the &lt;a href=&#34;https://raw.githubusercontent.com/google/pprof/main/proto/profile.proto&#34;&gt;proto/profile.proto&lt;/a&gt; file. For details on protocol buffers, see &lt;a href=&#34;https://developers.google.com/protocol-buffers&#34;&gt;https://developers.google.com/protocol-buffers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Profiles can be read from a local file, or over http. Multiple profiles of the same type can be aggregated or compared.&lt;/p&gt; &#xA;&lt;p&gt;If the profile samples contain machine addresses, pprof can symbolize them through the use of the native binutils tools (addr2line and nm).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is not an official Google product.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building pprof&lt;/h1&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Go development kit of a &lt;a href=&#34;https://golang.org/doc/devel/release.html#policy&#34;&gt;supported version&lt;/a&gt;. Follow &lt;a href=&#34;http://golang.org/doc/code.html&#34;&gt;these instructions&lt;/a&gt; to prepare the environment.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Graphviz: &lt;a href=&#34;http://www.graphviz.org/&#34;&gt;http://www.graphviz.org/&lt;/a&gt; Optional, used to generate graphic visualizations of profiles&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To build and install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install github.com/google/pprof@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The binary will be installed &lt;code&gt;$GOPATH/bin&lt;/code&gt; (&lt;code&gt;$HOME/go/bin&lt;/code&gt; by default).&lt;/p&gt; &#xA;&lt;h1&gt;Basic usage&lt;/h1&gt; &#xA;&lt;p&gt;pprof can read a profile from a file or directly from a server via http. Specify the profile input(s) in the command line, and use options to indicate how to format the report.&lt;/p&gt; &#xA;&lt;h2&gt;Generate a text report of the profile, sorted by hotness:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;% pprof -top [main_binary] profile.pb.gz&#xA;Where&#xA;    main_binary:  Local path to the main program binary, to enable symbolization&#xA;    profile.pb.gz: Local path to the profile in a compressed protobuf, or&#xA;                   URL to the http service that serves a profile.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Generate a graph in an SVG file, and open it with a web browser:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pprof -web [main_binary] profile.pb.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run pprof on interactive mode:&lt;/h2&gt; &#xA;&lt;p&gt;If no output formatting option is specified, pprof runs on interactive mode, where reads the profile and accepts interactive commands for visualization and refinement of the profile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pprof [main_binary] profile.pb.gz&#xA;&#xA;This will open a simple shell that takes pprof commands to generate reports.&#xA;Type &#39;help&#39; for available commands/options.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run pprof via a web interface&lt;/h2&gt; &#xA;&lt;p&gt;If the &lt;code&gt;-http&lt;/code&gt; flag is specified, pprof starts a web server at the specified host:port that provides an interactive web-based interface to pprof. Host is optional, and is &#34;localhost&#34; by default. Port is optional, and is a random available port by default. &lt;code&gt;-http=&#34;:&#34;&lt;/code&gt; starts a server locally at a random port.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pprof -http=[host]:[port] [main_binary] profile.pb.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The preceding command should automatically open your web browser at the right page; if not, you can manually visit the specified port in your web browser.&lt;/p&gt; &#xA;&lt;h2&gt;Using pprof with Linux Perf&lt;/h2&gt; &#xA;&lt;p&gt;pprof can read &lt;code&gt;perf.data&lt;/code&gt; files generated by the &lt;a href=&#34;https://perf.wiki.kernel.org/index.php/Main_Page&#34;&gt;Linux perf&lt;/a&gt; tool by using the &lt;code&gt;perf_to_profile&lt;/code&gt; program from the &lt;a href=&#34;https://github.com/google/perf_data_converter&#34;&gt;perf_data_converter&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;h2&gt;Viewing disassembly on Windows&lt;/h2&gt; &#xA;&lt;p&gt;To view disassembly of profiles collected from Go programs compiled as Windows executables, the executable must be built with &lt;code&gt;go build -buildmode=exe&lt;/code&gt;. LLVM or GCC must be installed, so required tools like &lt;code&gt;addr2line&lt;/code&gt; and &lt;code&gt;nm&lt;/code&gt; are available to &lt;code&gt;pprof&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Further documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/pprof/main/doc/README.md&#34;&gt;doc/README.md&lt;/a&gt; for more detailed end-user documentation.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/pprof/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for contribution documentation.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/pprof/main/proto/README.md&#34;&gt;proto/README.md&lt;/a&gt; for a description of the profile.proto format.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>passer-W/shc_bypass</title>
    <updated>2022-07-30T01:42:49Z</updated>
    <id>tag:github.com,2022-07-30:/passer-W/shc_bypass</id>
    <link href="https://github.com/passer-W/shc_bypass" rel="alternate"></link>
    <summary type="html">&lt;p&gt;内存加载shellcode绕过waf&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Sch_Bypass&lt;/h2&gt; &#xA;&lt;h4&gt;IOX_NEW&lt;/h4&gt; &#xA;&lt;p&gt;略微修改iox，使其在以shellcode形式加载时能正确接收参数：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/passer-W/shc_bypass/master/images/image-20220725114311884.png&#34; alt=&#34;image-20220725114311884&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python_Schloader&lt;/h4&gt; &#xA;&lt;p&gt;python加载器，采用多重异或加密，支持远程加载shellcode： &lt;img src=&#34;https://raw.githubusercontent.com/passer-W/shc_bypass/master/images/image-20220725114818175.png&#34; alt=&#34;image-20220725114818175&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/passer-W/shc_bypass/master/images/image-20220725114914673.png&#34; alt=&#34;image-20220725114914673&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Godzilla_Plugins&lt;/h4&gt; &#xA;&lt;p&gt;哥斯拉插件，基于4.0版本内置shellcode内存加载功能，一键加载pe文件至JVM内存中，目前支持iox、mimikatz、runshc：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;javashellcoder加载iox会报错，可使用runshc间接加载&lt;/p&gt; &#xA; &lt;p&gt;scan -&amp;gt; 扫描程序，体积过大暂时无法加载&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/passer-W/shc_bypass/master/images/image-20220725115205818.png&#34; alt=&#34;image-20220725115205818&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/passer-W/shc_bypass/master/images/image-20220725115438046.png&#34; alt=&#34;image-20220725115438046&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>