<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-04T01:32:02Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hypermodeinc/ristretto</title>
    <updated>2025-07-04T01:32:02Z</updated>
    <id>tag:github.com,2025-07-04:/hypermodeinc/ristretto</id>
    <link href="https://github.com/hypermodeinc/ristretto" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high performance memory-bound Go cache&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ristretto&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hypermodeinc/ristretto?tab=Apache-2.0-1-ov-file#readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/hypermodeinc/ristretto&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.hypermode.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1267579648657850441&#34; alt=&#34;chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hypermodeinc/ristretto/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/hypermodeinc/ristretto&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hypermodeinc/ristretto/commits/main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/hypermodeinc/ristretto&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/dgraph-io/ristretto&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go%20report-A%2B-brightgreen&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ristretto is a fast, concurrent cache library built with a focus on performance and correctness.&lt;/p&gt; &#xA;&lt;p&gt;The motivation to build Ristretto comes from the need for a contention-free cache in &lt;a href=&#34;https://github.com/hypermodeinc/dgraph&#34;&gt;Dgraph&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;High Hit Ratios&lt;/strong&gt; - with our unique admission/eviction policy pairing, Ristretto&#39;s performance is best in class. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Eviction: SampledLFU&lt;/strong&gt; - on par with exact LRU and better performance on Search and Database traces.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Admission: TinyLFU&lt;/strong&gt; - extra performance with little memory overhead (12 bits per counter).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast Throughput&lt;/strong&gt; - we use a variety of techniques for managing contention and the result is excellent throughput.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cost-Based Eviction&lt;/strong&gt; - any large new item deemed valuable can evict multiple smaller items (cost could be anything).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully Concurrent&lt;/strong&gt; - you can use as many goroutines as you want with little throughput degradation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Metrics&lt;/strong&gt; - optional performance metrics for throughput, hit ratios, and other stats.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple API&lt;/strong&gt; - just figure out your ideal &lt;code&gt;Config&lt;/code&gt; values and you&#39;re off and running.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Ristretto is production-ready. See &lt;a href=&#34;https://raw.githubusercontent.com/hypermodeinc/ristretto/main/#projects-using-ristretto&#34;&gt;Projects using Ristretto&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;p&gt;To start using Ristretto, install Go 1.21 or above. Ristretto needs go modules. From your project, run the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go get github.com/dgraph-io/ristretto/v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will retrieve the library.&lt;/p&gt; &#xA;&lt;h4&gt;Choosing a version&lt;/h4&gt; &#xA;&lt;p&gt;Following these rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;v1.x.x is the first version used in most programs with Ristretto dependencies.&lt;/li&gt; &#xA; &lt;li&gt;v2.x.x is the new version with support for generics, for which it has a slightly different interface. This version is designed to solve compatibility problems of programs using the old version of Ristretto. If you start writing a new program, it is recommended to use this version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;  &#34;fmt&#34;&#xA;&#xA;  &#34;github.com/dgraph-io/ristretto/v2&#34;&#xA;)&#xA;&#xA;func main() {&#xA;  cache, err := ristretto.NewCache(&amp;amp;ristretto.Config[string, string]{&#xA;    NumCounters: 1e7,     // number of keys to track frequency of (10M).&#xA;    MaxCost:     1 &amp;lt;&amp;lt; 30, // maximum cost of cache (1GB).&#xA;    BufferItems: 64,      // number of keys per Get buffer.&#xA;  })&#xA;  if err != nil {&#xA;    panic(err)&#xA;  }&#xA;  defer cache.Close()&#xA;&#xA;  // set a value with a cost of 1&#xA;  cache.Set(&#34;key&#34;, &#34;value&#34;, 1)&#xA;&#xA;  // wait for value to pass through buffers&#xA;  cache.Wait()&#xA;&#xA;  // get value from cache&#xA;  value, found := cache.Get(&#34;key&#34;)&#xA;  if !found {&#xA;    panic(&#34;missing value&#34;)&#xA;  }&#xA;  fmt.Println(value)&#xA;&#xA;  // del value from cache&#xA;  cache.Del(&#34;key&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;The benchmarks can be found in &lt;a href=&#34;https://github.com/hypermodeinc/dgraph-benchmarks/tree/main/cachebench/ristretto&#34;&gt;https://github.com/hypermodeinc/dgraph-benchmarks/tree/main/cachebench/ristretto&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Hit Ratios for Search&lt;/h3&gt; &#xA;&lt;p&gt;This trace is described as &#34;disk read accesses initiated by a large commercial search engine in response to various web search requests.&#34;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hypermodeinc/ristretto/main/benchmarks/Hit%20Ratios%20-%20Search%20(ARC-S3).svg?sanitize=true&#34; alt=&#34;Graph showing hit ratios comparison for search workload&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Hit Ratio for Database&lt;/h3&gt; &#xA;&lt;p&gt;This trace is described as &#34;a database server running at a commercial site running an ERP application on top of a commercial database.&#34;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hypermodeinc/ristretto/main/benchmarks/Hit%20Ratios%20-%20Database%20(ARC-DS1).svg?sanitize=true&#34; alt=&#34;Graph showing hit ratios comparison for database workload&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Hit Ratio for Looping&lt;/h3&gt; &#xA;&lt;p&gt;This trace demonstrates a looping access pattern.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hypermodeinc/ristretto/main/benchmarks/Hit%20Ratios%20-%20Glimpse%20(LIRS-GLI).svg?sanitize=true&#34; alt=&#34;Graph showing hit ratios comparison for looping access pattern&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Hit Ratio for CODASYL&lt;/h3&gt; &#xA;&lt;p&gt;This trace is described as &#34;references to a CODASYL database for a one hour period.&#34;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hypermodeinc/ristretto/main/benchmarks/Hit%20Ratios%20-%20CODASYL%20(ARC-OLTP).svg?sanitize=true&#34; alt=&#34;Graph showing hit ratios comparison for CODASYL workload&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Throughput for Mixed Workload&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hypermodeinc/ristretto/main/benchmarks/Throughput%20-%20Mixed.svg?sanitize=true&#34; alt=&#34;Graph showing throughput comparison for mixed workload&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Throughput ffor Read Workload&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hypermodeinc/ristretto/main/benchmarks/Throughput%20-%20Read%20(Zipfian).svg?sanitize=true&#34; alt=&#34;Graph showing throughput comparison for read workload&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Through for Write Workload&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hypermodeinc/ristretto/main/benchmarks/Throughput%20-%20Write%20(Zipfian).svg?sanitize=true&#34; alt=&#34;Graph showing throughput comparison for write workload&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Projects Using Ristretto&lt;/h2&gt; &#xA;&lt;p&gt;Below is a list of known projects that use Ristretto:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hypermodeinc/badger&#34;&gt;Badger&lt;/a&gt; - Embeddable key-value DB in Go&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hypermodeinc/dgraph&#34;&gt;Dgraph&lt;/a&gt; - Horizontally scalable and distributed GraphQL database with a graph backend&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How are you achieving this performance? What shortcuts are you taking?&lt;/h3&gt; &#xA;&lt;p&gt;We go into detail in the &lt;a href=&#34;https://hypermode.com/blog/introducing-ristretto-high-perf-go-cache/&#34;&gt;Ristretto blog post&lt;/a&gt;, but in short: our throughput performance can be attributed to a mix of batching and eventual consistency. Our hit ratio performance is mostly due to an excellent &lt;a href=&#34;https://arxiv.org/abs/1512.00727&#34;&gt;admission policy&lt;/a&gt; and SampledLFU eviction policy.&lt;/p&gt; &#xA;&lt;p&gt;As for &#34;shortcuts,&#34; the only thing Ristretto does that could be construed as one is dropping some Set calls. That means a Set call for a new item (updates are guaranteed) isn&#39;t guaranteed to make it into the cache. The new item could be dropped at two points: when passing through the Set buffer or when passing through the admission policy. However, this doesn&#39;t affect hit ratios much at all as we expect the most popular items to be Set multiple times and eventually make it in the cache.&lt;/p&gt; &#xA;&lt;h3&gt;Is Ristretto distributed?&lt;/h3&gt; &#xA;&lt;p&gt;No, it&#39;s just like any other Go library that you can import into your project and use in a single process.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>go-dev-frame/sponge</title>
    <updated>2025-07-04T01:32:02Z</updated>
    <id>tag:github.com,2025-07-04:/go-dev-frame/sponge</id>
    <link href="https://github.com/go-dev-frame/sponge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A powerful and easy-to-use Go development framework that enables you to effortlessly build stable, reliable, and high-performance backend services with a &#34;low-code&#34; approach.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/readme-cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;500px&#34; src=&#34;https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/go-dev-frame/sponge&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/go-dev-frame/sponge&#34; alt=&#34;Go Report&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/go-dev-frame/sponge&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/go-dev-frame/sponge/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/go-dev-frame/sponge&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/go-dev-frame/sponge.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/go-dev-frame/sponge/actions&#34;&gt;&lt;img src=&#34;https://github.com/go-dev-frame/sponge/workflows/Go/badge.svg?sanitize=true&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/github/license/go-dev-frame/sponge&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/go-dev-frame/sponge&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sponge&lt;/strong&gt; is a powerful and easy-to-use Go development framework. Its core philosophy is &lt;strong&gt;&#34;Definition is Code&#34;&lt;/strong&gt;, means generating modular Go code by parsing &lt;code&gt;SQL&lt;/code&gt;, &lt;code&gt;Protobuf&lt;/code&gt;, and &lt;code&gt;JSON&lt;/code&gt; files. These code modules can be flexibly combined to build various types of complete backend services.&lt;/p&gt; &#xA;&lt;p&gt;Sponge provides a one-stop project development solution that covers code generation, development, testing, API documentation, and deployment. It helps developers easily build stable, reliable, and high-performance backend services (including RESTful APIs, gRPC, HTTP+gRPC, gRPC Gateway, etc.) in a &#34;low-code&#34; approach, greatly improve the efficiency and quality of project development.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Applicable Scenarios&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sponge&lt;/strong&gt; is ideal for rapidly building various types of high-performance backend services. Applicable scenarios include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Developing RESTful API services&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Building microservices projects&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud-native development&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Refactoring old projects&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Serving as a starting point for Go beginners or teams to learn Go project structure and best practices&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, developers can generate business-specific code by customizing templates.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Key Features&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;One-click generation of complete backend service code&lt;/strong&gt;&lt;br&gt; For &lt;code&gt;Web&lt;/code&gt;, &lt;code&gt;gRPC&lt;/code&gt; or &lt;code&gt;HTTP+gRPC&lt;/code&gt; services that only require &lt;code&gt;CRUD APIs&lt;/code&gt;, no &lt;code&gt;Go&lt;/code&gt; code needs to be written. Simply connect to a database (e.g., &lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;MongoDB&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt;, &lt;code&gt;SQLite&lt;/code&gt;) to one-click generate complete backend service code and easily deploy it to Linux servers, Docker, or Kubernetes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Efficient development of general-purpose services&lt;/strong&gt;&lt;br&gt; When developing general-purpose &lt;code&gt;Web&lt;/code&gt;, &lt;code&gt;gRPC&lt;/code&gt;, &lt;code&gt;HTTP+gRPC&lt;/code&gt;, or &lt;code&gt;gRPC Gateway&lt;/code&gt; services, you only need to focus on three aspects:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Defining database tables;&lt;/li&gt; &#xA;   &lt;li&gt;Defining API descriptions in Protobuf files;&lt;/li&gt; &#xA;   &lt;li&gt;In the generated templates, use built-in AI assistants or manually write business logic code.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;The framework code and CRUD API code are all automatically generated by sponge.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support for custom templates, offering flexible extensibility&lt;/strong&gt;&lt;br&gt; Sponge supports generating various types of project-specific code using custom templates, not limited to the &lt;code&gt;Go&lt;/code&gt; language. For example &lt;code&gt;backend code&lt;/code&gt;, &lt;code&gt;frontend code&lt;/code&gt;, &lt;code&gt;test code&lt;/code&gt;, &lt;code&gt;build and deployment scripts&lt;/code&gt;, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generate code on the page, simple and easy to use&lt;/strong&gt;&lt;br&gt; Sponge provides code generation on the page, avoiding complex command-line operations, simply filling in parameters on the page to generate code with one click.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sponge and AI Assistant Collaborative Development to Form a Closed-Loop Workflow&lt;/strong&gt;&lt;br&gt; Sponge, combined with built-in AI assistants (DeepSeek, ChatGPT, Gemini), forms a complete and efficient development solution:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Sponge&lt;/strong&gt;: Responsible for infrastructure code generation, including &lt;code&gt;service framework&lt;/code&gt;, &lt;code&gt;CRUD API&lt;/code&gt;, &lt;code&gt;custom API (lacking business logic)&lt;/code&gt;, etc.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;AI assistant&lt;/strong&gt;: Focuses on business logic implementation, including &lt;code&gt;table structure DDL design&lt;/code&gt;, &lt;code&gt;custom API design&lt;/code&gt;, &lt;code&gt;business logic&lt;/code&gt;, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install sponge&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Sponge supports installation on Windows, macOS, Linux and Docker. Click to view the &lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/assets/install-en.md&#34;&gt;&lt;strong&gt;sponge installation guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the code generation UI&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;After installation, run the following command to open the sponge UI:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sponge run&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Access &lt;code&gt;http://localhost:24631&lt;/code&gt; in a local browser to generate code through the UI interface, as shown below:&lt;/p&gt; &lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1500px&#34; src=&#34;https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/en_sponge-ui.png&#34;&gt; &lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;To access from a browser on a different host, specify the host IP or domain when starting the UI, e.g., &lt;code&gt;sponge run -a http://your_host_ip:24631&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Components&lt;/h3&gt; &#xA;&lt;p&gt;Sponge has built-in rich components (for on-demand use):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Components&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Examples&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Web framework &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;gin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/internal/routers/routers.go#L32&#34;&gt;gin example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/gin/middleware/README.md&#34;&gt;gin middleware examples&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;RPC framework &lt;a href=&#34;https://github.com/grpc/grpc-go&#34;&gt;gRPC&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/internal/server/grpc.go#L312&#34;&gt;gRPC example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/grpc/interceptor/README.md&#34;&gt;gRPC interceptor examples&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Configuration parsing &lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;viper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/conf/README.md#example-of-use&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Logging &lt;a href=&#34;https://github.com/uber-go/zap&#34;&gt;zap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/logger/README.md#example-of-use&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ORM &lt;a href=&#34;https://github.com/go-gorm/gorm&#34;&gt;gorm&lt;/a&gt;, &lt;a href=&#34;https://github.com/mongodb/mongo-go-driver&#34;&gt;mongo-go-driver&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/sgorm/README.md#examples-of-use&#34;&gt;gorm example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/mgo/README.md#example-of-use&#34;&gt;mongodb example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Cache &lt;a href=&#34;https://github.com/go-redis/redis&#34;&gt;go-redis&lt;/a&gt;, &lt;a href=&#34;https://github.com/dgraph-io/ristretto&#34;&gt;ristretto&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/goredis/README.md#example-of-use&#34;&gt;go-redis example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/cache/memory.go#L25&#34;&gt;ristretto example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Automated API documentation &lt;a href=&#34;https://github.com/swaggo/swag&#34;&gt;swagger&lt;/a&gt;, &lt;a href=&#34;https://github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2&#34;&gt;protoc-gen-openapiv2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authentication &lt;a href=&#34;https://github.com/golang-jwt/jwt&#34;&gt;jwt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/jwt/README.md#example-of-use&#34;&gt;jwt example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/gin/middleware/README.md#jwt-authorization-middleware&#34;&gt;gin example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/grpc/interceptor/README.md#jwt-authentication-interceptor&#34;&gt;gRPC example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Parameter &lt;a href=&#34;https://github.com/go-playground/validator&#34;&gt;validator&lt;/a&gt;, &lt;a href=&#34;https://github.com/bufbuild/protoc-gen-validate&#34;&gt;protoc-gen-validate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/internal/types/userExample_types.go#L17&#34;&gt;validator example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/api/serverNameExample/v1/userExample.proto#L156&#34;&gt;protoc-gen-validate example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Websocket &lt;a href=&#34;https://github.com/gorilla/websocket&#34;&gt;gorilla/websocket&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/ws/README.md#example-of-use&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://html.spec.whatwg.org/multipage/server-sent-events.html&#34;&gt;SSE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/sse/README.md#example-of-use&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crontab &lt;a href=&#34;https://github.com/robfig/cron&#34;&gt;cron&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/gocron/README.md#example-of-use&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Message Queue &lt;a href=&#34;https://github.com/rabbitmq/amqp091-go&#34;&gt;rabbitmq&lt;/a&gt;, &lt;a href=&#34;https://github.com/IBM/sarama&#34;&gt;kafka&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/rabbitmq/README.md#example-of-use&#34;&gt;rabbitmq example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/kafka/README.md#example-of-use&#34;&gt;kafka example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Distributed transaction manager &lt;a href=&#34;https://github.com/dtm-labs/dtm&#34;&gt;dtm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/raw/main/_11_sponge-dtm-service-registration-discovery/internal/rpcclient/dtmservice.go#L31&#34;&gt;dtm service discovery example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/raw/main/_12_sponge-dtm-flashSale/grpc%2Bhttp/internal/service/flashSale.go#L67&#34;&gt;dtm flash sale example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Distributed lock &lt;a href=&#34;https://github.com/go-dev-frame/sponge/tree/main/pkg/dlock&#34;&gt;dlock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/dlock/README.md#example-of-use&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Adaptive rate limiting &lt;a href=&#34;https://github.com/go-dev-frame/sponge/tree/main/pkg/shield/ratelimit&#34;&gt;ratelimit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/gin/middleware/README.md#rate-limiter-middleware&#34;&gt;gin example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/gin/middleware/README.md#rate-limiter-interceptor&#34;&gt;gRPC example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Adaptive circuit breaking &lt;a href=&#34;https://github.com/go-dev-frame/sponge/tree/main/pkg/shield/circuitbreaker&#34;&gt;circuitbreaker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/gin/middleware/README.md#circuit-breaker-middleware&#34;&gt;gin example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/grpc/interceptor/README.md#circuit-breaker-interceptor&#34;&gt;gRPC example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Distributed tracing &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go&#34;&gt;opentelemetry&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/gin/middleware/README.md#tracing-middleware&#34;&gt;gin example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/grpc/interceptor/README.md#tracing-interceptor&#34;&gt;gRPC example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/tracer/example-en.md&#34;&gt;cross-service tracing example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Metrics monitoring &lt;a href=&#34;https://github.com/prometheus/client_golang/prometheus&#34;&gt;prometheus&lt;/a&gt;, &lt;a href=&#34;https://github.com/grafana/grafana&#34;&gt;grafana&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/gin/middleware/metrics/README.md#example-of-use&#34;&gt;gin example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/grpc/metrics/README.md#example-of-use&#34;&gt;gRPC example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/grpc/metrics/monitor-example-en.md&#34;&gt;web and gRPC monitor example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Service registration and discovery &lt;a href=&#34;https://github.com/etcd-io/etcd&#34;&gt;etcd&lt;/a&gt;, &lt;a href=&#34;https://github.com/hashicorp/consul&#34;&gt;consul&lt;/a&gt;, &lt;a href=&#34;https://github.com/alibaba/nacos&#34;&gt;nacos&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/servicerd/registry/README.md#example-of-use&#34;&gt;service registration example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/servicerd/discovery/README.md#example-of-use&#34;&gt;service discovery example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Adaptive collecting &lt;a href=&#34;https://go.dev/blog/pprof&#34;&gt;profile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/pkg/prof/go-profile-en.md&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Resource statistics &lt;a href=&#34;https://github.com/shirou/gopsutil&#34;&gt;gopsutil&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/tree/main/pkg/stat#example-of-use&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Configuration center &lt;a href=&#34;https://github.com/alibaba/nacos&#34;&gt;nacos&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://go-sponge.com/component/config-center.html&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Code quality checking &lt;a href=&#34;https://github.com/golangci/golangci-lint&#34;&gt;golangci-lint&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Continuous integration and deployment CI/CD &lt;a href=&#34;https://github.com/kubernetes/kubernetes&#34;&gt;kubernetes&lt;/a&gt;, &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt;, &lt;a href=&#34;https://github.com/jenkinsci/jenkins&#34;&gt;jenkins&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://go-sponge.com/deployment/kubernetes.html&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Generate project business architecture diagram &lt;a href=&#34;https://github.com/go-dev-frame/spograph&#34;&gt;spograph&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/spograph?tab=readme-ov-file#example-of-use&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Custom template generation code &lt;a href=&#34;https://pkg.go.dev/text/template@go1.23.3&#34;&gt;go template&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://go-sponge.com/guide/customize/template-json.html&#34;&gt;json example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://go-sponge.com/guide/customize/template-sql.html&#34;&gt;sql example&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://go-sponge.com/guide/customize/template-protobuf.html&#34;&gt;protobuf example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AI assistant &lt;a href=&#34;https://deepseek.com&#34;&gt;DeepSeek&lt;/a&gt;, &lt;a href=&#34;https://chatgpt.com&#34;&gt;ChatGPT&lt;/a&gt;, &lt;a href=&#34;https://gemini.google.com&#34;&gt;Gemini&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge/raw/main/cmd/sponge/commands/assistant/generate.go#L44&#34;&gt;example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Code Generation Engine&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sponge&lt;/strong&gt; provides powerful code generation capabilities, supporting both &lt;code&gt;built-in templates&lt;/code&gt; and &lt;code&gt;custom templates&lt;/code&gt; to quickly generate the code required for your project. It also integrates an &lt;code&gt;AI assistant&lt;/code&gt; to help generate business logic code.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Sponge generates a code framework based on built-in templates, as shown in the diagram below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1500px&#34; src=&#34;https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/sponge-framework.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Sponge generates a code framework based on custom templates, as shown in the diagram below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1200px&#34; src=&#34;https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/template-framework.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Sponge generates a business logic code framework based on functions and comments, as shown in the diagram below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1200px&#34; src=&#34;https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/ai-assistant-framework.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Microservice framework&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sponge&lt;/strong&gt; is a modern Go microservice framework that adopts a typical layered microservice architecture. It comes with a rich set of built-in service governance features, enabling developers to quickly build and maintain complex microservice systems. The structure of the framework is shown in the diagram below:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1000px&#34; src=&#34;https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/en_microservices-framework.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Performance testing of http and grpc service code created by the microservices framework: 50 concurrent, 1 million total requests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhufuyi/microservices_framework_benchmark/main/test/assets/http-server.png&#34; alt=&#34;http-server&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhufuyi/microservices_framework_benchmark/main/test/assets/grpc-server.png&#34; alt=&#34;grpc-server&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click to view the &lt;a href=&#34;https://github.com/zhufuyi/microservices_framework_benchmark&#34;&gt;&lt;strong&gt;test code&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Project Code Directory Structure&lt;/h3&gt; &#xA;&lt;p&gt;The project code directory structure created by sponge follows the &lt;a href=&#34;https://github.com/golang-standards/project-layout&#34;&gt;project-layout&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sponge supports creating three types of project code structures: &lt;code&gt;Monolithic application monorepo (monolith)&lt;/code&gt;, &lt;code&gt;Microservices multi-repo (multi-repo)&lt;/code&gt;, and &lt;code&gt;Microservices monorepo (mono-repo)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The code directory structure for creating a &lt;code&gt;Monolithic application monorepo (monolith)&lt;/code&gt; or &lt;code&gt;Microservices multi-repo (multi-repo)&lt;/code&gt; is as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;.&#xA;├── api            # Protobuf files and generated * pb.go directory&#xA;├── assets         # Store various static resources, such as images, markdown files, etc.&#xA;├── cmd            # Program entry directory&#xA;├── configs        # Directory for configuration files&#xA;├── deployments    # Bare metal, docker, k8s deployment script directory.&#xA;├── docs           # Directory for API interface Swagger documentation.&#xA;├── internal       # Directory for project internal code.&#xA;│    ├── cache        # Cache directory wrapped around business logic.&#xA;│    ├── config       # Directory for Go structure configuration files.&#xA;│    ├── dao          # Data access directory.&#xA;│    ├── database     # Directory for database initialization and migration.&#xA;│    ├── ecode        # Directory for system error codes and custom business error codes.&#xA;│    ├── handler      # Directory for implementing HTTP business functionality (specific to web services).&#xA;│    ├── model        # Database model directory.&#xA;│    ├── routers      # HTTP routing directory.&#xA;│    ├── rpcclient    # Directory for client-side code that connects to grpc services.&#xA;│    ├── server       # Directory for creating servers, including HTTP and grpc.&#xA;│    ├── service      # Directory for implementing grpc business functionality (specific to grpc services).&#xA;│    └── types        # Directory for defining request and response parameter structures for HTTP.&#xA;├── pkg            # Directory for shared libraries.&#xA;├── scripts        # Directory for scripts.&#xA;├── test           # Directory for scripts required for testing services  and test SQL.&#xA;├── third_party    # Directory for third-party protobuf files or external helper programs.&#xA;├── Makefile       # Develop, test, deploy related command sets .&#xA;├── go.mod         # Go module dependencies and version control file.&#xA;└── go.sum         # Go module dependencies key and checksum file.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;The code directory structure for creating a &lt;code&gt;Microservices monorepo (mono-repo)&lt;/code&gt; (large repository code directory structure) is as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;.&#xA;├── api&#xA;│    ├── server1       # Protobuf files and generated *pb.go directory for service 1.&#xA;│    ├── server2       # Protobuf files and generated *pb.go directory for service 2.&#xA;│    ├── server3       # Protobuf files and generated *pb.go directory for service 3.&#xA;│    └── ...&#xA;├── server1        # Code directory for Service 1, it has a similar structure to the microservice multi repo directory.&#xA;├── server2        # Code directory for Service 2, it has a similar structure to the microservice multi repo directory.&#xA;├── server3        # Code directory for Service 3, it has a similar structure to the microservice multi repo directory.&#xA;├── ...&#xA;├── third_party    # Third-party protobuf files.&#xA;├── go.mod         # Go module dependencies and version control file.&#xA;└── go.sum         # Go module dependencies&#39; checksums and hash keys.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Sponge Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Click to view &lt;a href=&#34;https://go-sponge.com/&#34;&gt;Sponge Documentation&lt;/a&gt;, which covers core content such as code generation, development process, system configuration and deployment plan in detail.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Sponge Create Server Code Examples&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/1_web-gin-CRUD&#34;&gt;Create &lt;strong&gt;web&lt;/strong&gt; service based on &lt;strong&gt;sql&lt;/strong&gt; (including CRUD)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/2_micro-grpc-CRUD&#34;&gt;Create &lt;strong&gt;grpc&lt;/strong&gt; service based on &lt;strong&gt;sql&lt;/strong&gt; (including CRUD)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/3_web-gin-protobuf&#34;&gt;Create &lt;strong&gt;web&lt;/strong&gt; service based on &lt;strong&gt;protobuf&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/4_micro-grpc-protobuf&#34;&gt;Create &lt;strong&gt;grpc&lt;/strong&gt; service based on &lt;strong&gt;protobuf&lt;/strong&gt; &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/5_micro-gin-rpc-gateway&#34;&gt;Create &lt;strong&gt;grpc gateway&lt;/strong&gt; service based on &lt;strong&gt;protobuf&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/_10_micro-grpc-http-protobuf&#34;&gt;Create &lt;strong&gt;grpc+http&lt;/strong&gt; service based on &lt;strong&gt;protobuf&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sponge+DTM Distributed Transaction Examples&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/9_order-grpc-distributed-transaction&#34;&gt;Simple distributed order system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/_12_sponge-dtm-flashSale&#34;&gt;Flash sale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/_14_eshop&#34;&gt;E-Commerce system&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sponge+AI Assistant Collaborative Development Examples&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/_15_appliance_store&#34;&gt;Home appliance retail management&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sponge Development Project Examples&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/7_community-single&#34;&gt;Community backend services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-dev-frame/sponge_examples/tree/main/8_community-cluster&#34;&gt;Monolithic service split into microservices&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;If it&#39;s help to you, give it a star ⭐.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>kagent-dev/kagent</title>
    <updated>2025-07-04T01:32:02Z</updated>
    <id>tag:github.com,2025-07-04:/kagent-dev/kagent</id>
    <link href="https://github.com/kagent-dev/kagent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud Native Agentic AI | Discord: https://bit.ly/kagentdiscord&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-dark.svg&#34; alt=&#34;kagent&#34; width=&#34;400&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-light.svg&#34; alt=&#34;kagent&#34; width=&#34;400&#34;&gt; &#xA;  &lt;img alt=&#34;kagent&#34; src=&#34;https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-light.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://github.com/kagent-dev/kagent/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/kagent-dev/kagent?style=flat&amp;amp;label=Latest%20version&#34; alt=&#34;Release&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/kagent-dev/kagent/actions/workflows/ci.yaml&#34;&gt; &lt;img src=&#34;https://github.com/kagent-dev/kagent/actions/workflows/ci.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34; height=&#34;20&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-Apache2.0-brightgreen.svg?style=flat&#34; alt=&#34;License: Apache 2.0&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/kagent-dev/kagent&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/kagent-dev/kagent.svg?style=flat&amp;amp;logo=github&amp;amp;label=Stars&#34; alt=&#34;Stars&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://discord.gg/Fu3k65f2k3&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1346225185166065826?style=flat&amp;amp;label=Join%20Discord&amp;amp;color=6D28D9&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://deepwiki.com/kagent-dev/kagent&#34;&gt;&lt;img src=&#34;https://deepwiki.com/badge.svg?sanitize=true&#34; alt=&#34;Ask DeepWiki&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://codespaces.new/kagent-dev/kagent&#34;&gt; &lt;img src=&#34;https://github.com/codespaces/badge.svg?sanitize=true&#34; alt=&#34;Open in Github Codespaces&#34; style=&#34;max-width: 100%;&#34; height=&#34;20&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;kagent&lt;/strong&gt; is a Kubernetes native framework for building AI agents. Kubernetes is the most popular orchestration platform for running workloads, and &lt;strong&gt;kagent&lt;/strong&gt; makes it easy to build, deploy and manage AI agents in Kubernetes. The &lt;strong&gt;kagent&lt;/strong&gt; framework is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/kagent-dev/kagent/main/img/hero.png&#34; alt=&#34;Autogen Framework&#34; width=&#34;500&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kagent.dev/docs/getting-started/quickstart&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kagent.dev/docs/introduction/installation&#34;&gt;Installation guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The kagent documentation is available at &lt;a href=&#34;https://kagent.dev/docs&#34;&gt;kagent.dev/docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Core Concepts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Agents&lt;/strong&gt;: Agents are the main building block of kagent. They are a system prompt, a set of tools and agents, and an LLM configuration represented with a Kubernetes custom resource called &#34;Agent&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LLM Providers&lt;/strong&gt;: Kagent supports multiple LLM providers, including &lt;a href=&#34;https://kagent.dev/docs/supported-providers/openai&#34;&gt;OpenAI&lt;/a&gt;, &lt;a href=&#34;https://kagent.dev/docs/supported-providers/azure-openai&#34;&gt;Azure OpenAI&lt;/a&gt;, &lt;a href=&#34;https://kagent.dev/docs/supported-providers/anthropic&#34;&gt;Anthropic&lt;/a&gt;, &lt;a href=&#34;https://kagent.dev/docs/supported-providers/google-vertexai&#34;&gt;Google Vertex AI&lt;/a&gt;, &lt;a href=&#34;https://kagent.dev/docs/supported-providers/ollama&#34;&gt;Ollama&lt;/a&gt; and any other &lt;a href=&#34;https://kagent.dev/docs/supported-providers/custom-models&#34;&gt;custom providers and models&lt;/a&gt; accessible via AI gateways. Providers are represented by the ModelConfig resource.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCP Tools&lt;/strong&gt;: Agents can connect to any MCP server that provides tools. Kagent comes with an MCP server with tools for Kubernetes, Istio, Helm, Argo, Prometheus, Grafana, Cilium and others. All tools are as Kubernetes custom resources (ToolServers) and can be used by multiple agents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: Using the &lt;a href=&#34;https://kagent.dev/docs/concepts/memory&#34;&gt;memory&lt;/a&gt; your agents can always have access to the latest and most up to date information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt;: Kagent supports &lt;a href=&#34;https://kagent.dev/docs/getting-started/tracing&#34;&gt;OpenTelemetry tracing&lt;/a&gt; which allows you to monitor what&#39;s happening with your agents and tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Core Principles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kubernetes Native&lt;/strong&gt;: Kagent is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Kagent is designed to be extensible, so you can add your own agents and tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt;: Kagent is designed to be flexible, to suit any AI agent use case.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Observable&lt;/strong&gt;: Kagent is designed to be observable, so you can monitor the agents and tools using all common monitoring frameworks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Declarative&lt;/strong&gt;: Kagent is designed to be declarative, so you can define the agents and tools in a yaml file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Testable&lt;/strong&gt;: Kagent is designed to be tested and debugged easily. This is especially important for AI agent applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The kagent framework is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/kagent-dev/kagent/main/img/arch.png&#34; alt=&#34;Autogen Framework&#34; width=&#34;500&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Kagent has 4 core components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Controller&lt;/strong&gt;: The controller is a Kubernetes controller that watches the kagent custom resources and creates the necessary resources to run the agents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: The UI is a web UI that allows you to manage the agents and tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Engine&lt;/strong&gt;: The engine is a Python application that runs the agents and tools. The engine is built using &lt;a href=&#34;https://github.com/microsoft/autogen&#34;&gt;Autogen&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CLI&lt;/strong&gt;: The CLI is a command line tool that allows you to manage the agents and tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;kagent&lt;/code&gt; is currently in active development. You can check out the full roadmap in the project Kanban board &lt;a href=&#34;https://github.com/orgs/kagent-dev/projects/3&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Local development&lt;/h2&gt; &#xA;&lt;p&gt;For instructions on how to run everything locally, see the &lt;a href=&#34;https://raw.githubusercontent.com/kagent-dev/kagent/main/DEVELOPMENT.md&#34;&gt;DEVELOPMENT.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For instructions on how to contribute to the kagent project, see the &lt;a href=&#34;https://raw.githubusercontent.com/kagent-dev/kagent/main/CONTRIBUTION.md&#34;&gt;CONTRIBUTION.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all contributors who are helping to make kagent better.&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/kagent-dev/kagent/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=kagent-dev/kagent&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://www.star-history.com/#kagent-dev/kagent&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star history of kagent-dev/kagent over time&#34; src=&#34;https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
</feed>