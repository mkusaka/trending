<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-25T01:32:25Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>litmuschaos/litmus</title>
    <updated>2024-01-25T01:32:25Z</updated>
    <id>tag:github.com,2024-01-25:/litmuschaos/litmus</id>
    <link href="https://github.com/litmuschaos/litmus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Litmus helps SREs and developers practice chaos engineering in a Cloud-native way. Chaos experiments are published at the ChaosHub (https://hub.litmuschaos.io). Community notes is at https://hackmd.io/a4Zu_sH4TZGeih-xCimi3Q&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;LitmusChaos&#34; src=&#34;https://avatars.githubusercontent.com/u/49853472?s=200&amp;amp;v=4&#34; width=&#34;200&#34; align=&#34;left&#34;&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://litmuschaos.io/&#34;&gt;LitmusChaos&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;Open Source Chaos Engineering Platform&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.litmuschaos.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-Join-purple&#34; alt=&#34;Slack Channel&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/litmuschaos/litmus/actions/workflows/push.yml/badge.svg?branch=master&#34; alt=&#34;GitHub Workflow&#34;&gt; &lt;a href=&#34;https://hub.docker.com/r/litmuschaos/chaos-operator&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/litmuschaos/chaos-operator.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/litmuschaos/litmus/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/litmuschaos/litmus?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/litmuschaos/litmus/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/litmuschaos/litmus&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/LitmusChaos&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/litmuschaos?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3202&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3202/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCa57PMqmz_j0wnteRa9nCaw&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/YouTube-Subscribe-red&#34; alt=&#34;YouTube Channel&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;em&gt;Read this in &lt;a href=&#34;https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/TRANSLATIONS.md&#34;&gt;other languages&lt;/a&gt;.&lt;/em&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/README-ko.md&#34;&gt;üá∞üá∑&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/README-chn.md&#34;&gt;üá®üá≥&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/README-pt-br.md&#34;&gt;üáßüá∑&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/README-hi.md&#34;&gt;üáÆüá≥&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;LitmusChaos is an open source Chaos Engineering platform that enables teams to identify weaknesses &amp;amp; potential outages in infrastructures by inducing chaos tests in a controlled way. Developers &amp;amp; SREs can practice Chaos Engineering with LitmusChaos as it is easy to use, based on modern Chaos Engineering principles &amp;amp; community collaborated. It is 100% open source &amp;amp; a CNCF project.&lt;/p&gt; &#xA;&lt;p&gt;LitmusChaos takes a cloud-native approach to create, manage and monitor chaos. The platform itself runs as a set of microservices and uses Kubernetes custom resources (CRs) to define the chaos intent, as well as the steady state hypothesis.&lt;/p&gt; &#xA;&lt;p&gt;At a high-level, Litmus comprises of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chaos Control Plane&lt;/strong&gt;: A centralized chaos management tool called chaos-center, which helps construct, schedule and visualize Litmus chaos workflows&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chaos Execution Plane Services&lt;/strong&gt;: Made up of a chaos agent and multiple operators that execute &amp;amp; monitor the experiment within a defined target Kubernetes environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/litmuschaos/litmus/master/images/litmus-control-and-execution-plane-overview.png&#34; alt=&#34;architecture summary&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;At the heart of the platform are the following chaos custom resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ChaosExperiment&lt;/strong&gt;: A resource to group the configuration parameters of a particular fault. ChaosExperiment CRs are essentially installable templates that describe the library carrying out the fault, indicate permissions needed to run it &amp;amp; the defaults it will operate with. Through the ChaosExperiment, Litmus supports BYOC (bring-your-own-chaos) that helps integrate (optional) any third-party tooling to perform the fault injection.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ChaosEngine&lt;/strong&gt;: A resource to link a Kubernetes application workload/service, node or an infra component to a fault described by the ChaosExperiment. It also provides options to tune the run properties and specify the steady state validation constraints using &#39;probes&#39;. ChaosEngine is watched by the Chaos-Operator, which reconciles it (triggers experiment execution) via runners.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The ChaosExperiment &amp;amp; ChaosEngine CRs are embedded within a Workflow object that can string together one or more experiments in a desired order.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ChaosResult&lt;/strong&gt;: A resource to hold the results of the experiment run. It provides details of the success of each validation constraint, the revert/rollback status of the fault as well as a verdict. The Chaos-exporter reads the results and exposes information as prometheus metrics. ChaosResults are especially useful during automated runs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ChaosExperiment CRs are hosted on &lt;a href=&#34;https://hub.litmuschaos.io&#34; target=&#34;_blank&#34;&gt;hub.litmuschaos.io&lt;/a&gt;. It is a central hub where the application developers or vendors share their chaos experiments so that their users can use them to increase the resilience of the applications in production.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/litmuschaos/litmus/master/images/chaos-operator-flow.png&#34; alt=&#34;chaos-operator-flow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;For Developers&lt;/strong&gt;: To run chaos experiments during application development as an extension of unit testing or integration testing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For CI/CD pipeline builders&lt;/strong&gt;: To run chaos as a pipeline stage to find bugs when the application is subjected to fail paths in a pipeline.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For SREs&lt;/strong&gt;: To plan and schedule chaos experiments into the application and/or surrounding infrastructure. This practice identifies the weaknesses in the deployment system and increases resilience.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started with Litmus&lt;/h2&gt; &#xA;&lt;p&gt;To get started, check out the &lt;a href=&#34;https://docs.litmuschaos.io/docs/introduction/what-is-litmus&#34; target=&#34;_blank&#34;&gt;Litmus Docs&lt;/a&gt; and specifically the &lt;a href=&#34;https://docs.litmuschaos.io/docs/getting-started/installation#prerequisites&#34; target=&#34;_blank&#34;&gt;Installation section&lt;/a&gt; of the &lt;a href=&#34;https://docs.litmuschaos.io/docs/getting-started/installation&#34; target=&#34;_blank&#34;&gt;Getting Started with Litmus&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Chaos Hub&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/litmuschaos/community-charts/raw/master/CONTRIBUTING.md&#34; target=&#34;_blank&#34;&gt;Contributing Guidelines for the Chaos Hub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;h3&gt;Community Resources:&lt;/h3&gt; &#xA;&lt;p&gt;Feel free to reach out if you have any queries,concerns, or feature requests&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Give us a star ‚≠êÔ∏è - If you are using LitmusChaos or think it is an interesting project, we would love a star ‚ù§Ô∏è&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow LitmusChaos on Twitter &lt;a href=&#34;https://twitter.com/LitmusChaos&#34;&gt;@LitmusChaos&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Subscribe to the &lt;a href=&#34;https://www.youtube.com/channel/UCa57PMqmz_j0wnteRa9nCaw&#34;&gt;LitmusChaos YouTube channel&lt;/a&gt; for regular updates &amp;amp; meeting recordings.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To join our &lt;a href=&#34;https://slack.litmuschaos.io/&#34;&gt;Slack Community&lt;/a&gt; and meet our community members, put forward your questions &amp;amp; opinions, join the #litmus channel on the &lt;a href=&#34;https://slack.k8s.io/&#34;&gt;Kubernetes Slack&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community Meetings&lt;/h3&gt; &#xA;&lt;p&gt;The Litmus community meets on the third wednesday of every month at 10:00PM IST/6:30 PM CEST/9:30 AM PST.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://harness-io.zoom.us/j/95100368978?pwd=b2VrdCtaakE5U3dhOElFMUJOaXVOUT09&#34;&gt;Sync Up Meeting Link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackmd.io/a4Zu_sH4TZGeih-xCimi3Q&#34;&gt;Sync Up Agenda &amp;amp; Meeting Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/litmuschaos/litmus/milestones&#34;&gt;Release Tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Videos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/hOghvd9qCzI&#34;&gt;Cloud Native Live: Litmus Chaos Engine and a microservices demo app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/_x_7SiesjF0&#34;&gt;Chaos Engineering hands-on - An SRE ideating Chaos Experiments and using LitmusChaos | July 2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/PQrmBHgk0ps&#34;&gt;Achieve Digital Product Resiliency with Chaos Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/mwu5eLgUKq4&#34;&gt;How to create Chaos Experiments with Litmus | Litmus Chaos tutorial&lt;/a&gt; @ &lt;a href=&#34;https://www.youtube.com/c/IsitObservable&#34;&gt;Is it Observable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/pMWqhS-F3tQ&#34;&gt;Cloud Native Chaos Engineering Preview With LitmusChaos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/5CI8d-SKBfc&#34;&gt;Get started with Chaos Engineering with Litmus&lt;/a&gt; @ &lt;a href=&#34;https://www.youtube.com/c/ContainersfromtheCouch&#34;&gt;Containers from the Couch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/B8DfYnDh2F4&#34;&gt;Litmus 2 - Chaos Engineering Meets Argo Workflows&lt;/a&gt; @ &lt;a href=&#34;https://youtube.com/c/devopstoolkit&#34;&gt;DevOps Toolkit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/D0t3emVLLko&#34;&gt;Hands-on with Litmus 2.0 | Rawkode Live&lt;/a&gt; @ &lt;a href=&#34;https://www.youtube.com/channel/UCrber_mFvp_FEF7D9u8PDEA&#34;&gt;Rawkode Academy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/97BiCNtJbDw&#34;&gt;Introducing LitmusChaos 2.0 / Dok Talks #74&lt;/a&gt; @ &lt;a href=&#34;https://www.youtube.com/channel/UCUnXJbHQ89R2uSfKsqQwGvQ&#34;&gt;DoK.community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/LK0oDLQE4S8&#34;&gt;Introduction to Cloud Native Chaos Engineering&lt;/a&gt; @ &lt;a href=&#34;https://www.youtube.com/channel/UCBGOUQHNNtNGcGzVq5rIXjw&#34;&gt;Kunal Kushwaha&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/IiyrEiK4stQ&#34;&gt;#EveryoneCanContribute cafe: Litmus - Chaos Engineering for your Kubernetes&lt;/a&gt; @ &lt;a href=&#34;https://www.youtube.com/channel/UCMtZ0sc1HHNtGGWZFDRTh5A&#34;&gt;GitLab Unfiltered&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/rDQ9XKbSJIc&#34;&gt;Litmus - Chaos Engineering for Kubernetes (CNCFMinutes 9)&lt;/a&gt; @ &lt;a href=&#34;https://www.youtube.com/channel/UCi-1nnN0eC9nRleXdZA6ncg&#34;&gt;Saiyam Pathak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/eyAG0svCsQA&#34;&gt;Chaos Engineering with Litmus Chaos by Prithvi Raj || HACKODISHA Workshop&lt;/a&gt; @ &lt;a href=&#34;https://www.youtube.com/channel/UC9yM_PkV0QIIsPA3qPrp&#34;&gt;Webwiz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCa57PMqmz_j0wnteRa9nCaw&#34;&gt;And More....&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Blogs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CNCF: &lt;a href=&#34;https://www.cncf.io/blog/2020/08/28/introduction-to-litmuschaos/&#34;&gt;Introduction to LitmusChaos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hackernoon: &lt;a href=&#34;https://hackernoon.com/solid-tips-on-how-to-manage-and-monitor-chaos-via-litmus-custom-resources-5g1s33m9&#34;&gt;Manage and Monitor Chaos via Litmus Custom Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/ksatchit/observability-considerations-in-chaos-the-metrics-story-6cb&#34;&gt;Observability Considerations in Chaos: The Metrics Story&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Community Blogs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Daniyal Rayn: &lt;a href=&#34;https://maveric-systems.com/blog/do-i-need-chaos-engineering-on-my-environment-trust-me-you-need-it/&#34;&gt;Do I need Chaos Engineering on my environment? Trust me you need it!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LiveWyer: &lt;a href=&#34;https://livewyer.io/blog/2021/03/22/litmuschaos-showcase-chaos-experiments-in-a-helm-chart-test-suite/&#34;&gt;LitmusChaos Showcase: Chaos Experiments in a Helm Chart Test Suite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jessica Cherry: &lt;a href=&#34;https://opensource.com/article/21/6/kubernetes-litmus-chaos&#34;&gt;Test Kubernetes cluster failures and experiments in your terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Yang Chuansheng(KubeSphere): &lt;a href=&#34;https://kubesphere.io/zh/blogs/litmus-kubesphere/&#34;&gt;KubeSphere ÈÉ®ÁΩ≤ Litmus Ëá≥ Kubernetes ÂºÄÂêØÊ∑∑Ê≤åÂÆûÈ™å&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Saiyam Pathak(Civo): &lt;a href=&#34;https://www.civo.com/learn/chaos-engineering-kubernetes-litmus&#34;&gt;Chaos Experiments on Kubernetes using Litmus to ensure your cluster is production ready&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andreas Krivas(Container Solutions):&lt;a href=&#34;https://blog.container-solutions.com/comparing-chaos-engineering-tools&#34;&gt;Comparing Chaos Engineering Tools for Kubernetes Workloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Akram Riahi(WeScale):&lt;a href=&#34;https://blog.wescale.fr/2021/03/11/chaos-engineering-litmus-sous-tous-les-angles/&#34;&gt;Chaos Engineering : Litmus sous tous les angles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prashanto Priyanshu(LensKart):&lt;a href=&#34;https://blog.lenskart.com/lenskarts-approach-to-chaos-engineering-part-2-6290e4f3a74e&#34;&gt;Lenskart‚Äôs approach to Chaos Engineering-Part 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DevsDay.ru(Russian):&lt;a href=&#34;https://devsday.ru/blog/details/40746&#34;&gt;LitmusChaos at Kubecon EU &#39;21&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ryan Pei(Armory): &lt;a href=&#34;https://www.armory.io/blog/litmuschaos-in-your-spinnaker-pipeline/&#34;&gt;LitmusChaos in your Spinnaker Pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;David Gildeh(Zebrium): &lt;a href=&#34;https://www.zebrium.com/blog/using-autonomous-monitoring-with-litmus-chaos-engine-on-kubernetes&#34;&gt;Using Autonomous Monitoring with Litmus Chaos Engine on Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/litmuschaos/litmus/raw/master/ADOPTERS.md&#34; target=&#34;_blank&#34;&gt;Adopters of LitmusChaos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;(&lt;em&gt;Send a PR to the above page if you are using Litmus in your chaos engineering practice&lt;/em&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Litmus is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/litmuschaos/litmus/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text. Some of the projects used by the Litmus project may be governed by a different license, please refer to its specific license.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Litmus Chaos is part of the CNCF Projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://landscape.cncf.io/?selected=litmus&#34;&gt;&lt;img src=&#34;https://github.com/cncf/artwork/raw/master/other/cncf/horizontal/color/cncf-color.png&#34; alt=&#34;CNCF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Important Links&lt;/h2&gt; &#xA;&lt;a href=&#34;https://docs.litmuschaos.io&#34;&gt; Litmus Docs &lt;img src=&#34;https://avatars0.githubusercontent.com/u/49853472?s=200&amp;amp;v=4&#34; alt=&#34;Litmus Docs&#34; height=&#34;15&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://landscape.cncf.io/?selected=litmus&#34;&gt; CNCF Landscape &lt;img src=&#34;https://landscape.cncf.io/images/left-logo.svg?sanitize=true&#34; alt=&#34;Litmus on CNCF Landscape&#34; height=&#34;15&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>ffenix113/zigbee_home</title>
    <updated>2024-01-25T01:32:25Z</updated>
    <id>tag:github.com,2024-01-25:/ffenix113/zigbee_home</id>
    <link href="https://github.com/ffenix113/zigbee_home" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Project to provide functionality similar to ESPHome but for Zigbee instead of WiFi for nRF52&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zigbee Home&lt;/h1&gt; &#xA;&lt;p&gt;Project that aims to provide similar functionality to &lt;a href=&#34;https://github.com/esphome/esphome&#34;&gt;ESPHome&lt;/a&gt;, but for Zigbee devices.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;span&gt;‚Ñπ&lt;/span&gt; Note&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;dev&lt;/code&gt; branch is for experiments and exploration. It cannot be used to determine quality of resulting project.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Currently work is being carried to develop CLI application and adding sensors.&lt;/p&gt; &#xA;&lt;h3&gt;Source Generation&lt;/h3&gt; &#xA;&lt;p&gt;CLI can generate source, which can then be built and flashed.&lt;/p&gt; &#xA;&lt;p&gt;&#34;Source&#34; includes C source code, app config(&lt;code&gt;proj.conf&lt;/code&gt;) and overlay (&lt;code&gt;app.overlay&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;CLI can&#39;t build the application yet, as building it requires environment to be properly set up (nrf- and zephyr-specific).&lt;/p&gt; &#xA;&lt;h3&gt;Flashing&lt;/h3&gt; &#xA;&lt;p&gt;CLI can flash already built application with a couple of methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;nrfutil&lt;/li&gt; &#xA; &lt;li&gt;mcuboot&lt;/li&gt; &#xA; &lt;li&gt;west&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported devices&lt;/h3&gt; &#xA;&lt;p&gt;This project is being developed based on &lt;a href=&#34;https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dongle&#34;&gt;nRF52840 Dongle&lt;/a&gt; from &lt;a href=&#34;https://www.nordicsemi.com/&#34;&gt;Nordic Semiconductors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Initial goal of the project is to support nRF52840 based devices, with expansion to nRF53 series.&lt;/p&gt; &#xA;&lt;h2&gt;Using in Home Assistant&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/zha/&#34;&gt;ZHA&lt;/a&gt; integration can figure out device capabilities without pre-defined configuration.&lt;/p&gt; &#xA;&lt;p&gt;Firmware provided by this project is already working on the Dongle and reporting defined values when connected through ZHA.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.zigbee2mqtt.io/&#34;&gt;Zigbee2MQTT&lt;/a&gt; &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/releases/tag/1.35.0&#34;&gt;recently&lt;/a&gt; added ability to generate definitions for unknown devices, as ZHA does. While it may not support all clusters and functionalities yet, there is active work going on to make support better.&lt;/p&gt; &#xA;&lt;h2&gt;CLI&lt;/h2&gt; &#xA;&lt;p&gt;Go CLI application available in &lt;code&gt;/cli&lt;/code&gt; will provide necessary options to build and upload firmware based on provided configuration.&lt;/p&gt; &#xA;&lt;p&gt;For this to work user would need to already have nRF Connect SDK set up, with &lt;code&gt;west&lt;/code&gt; and probably some flash tool applications available and working.&lt;/p&gt; &#xA;&lt;p&gt;Defined flash tools are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nrfutil&lt;/code&gt; - already working&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mcuboot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;west&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Default configuration file called &lt;code&gt;zigbee.yml&lt;/code&gt; will be loaded and used to configure. See bare example in &lt;code&gt;cli/zigbee.yml&lt;/code&gt;, or original configuration definition in &lt;code&gt;cli/config/device.go:Device&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To flash the board with built firmware run &lt;code&gt;go run ./cli/cmd/zigbee firmware --workdir &amp;lt;path_to_project&amp;gt; flash&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Users can flash built applications with &lt;a href=&#34;https://www.nordicsemi.com/Products/Development-tools/nRF-Connect-for-Desktop&#34;&gt;nRF Connect for Desktop&lt;/a&gt; as well, if CLI tool is not suited for some cases.&lt;/p&gt; &#xA;&lt;p&gt;This project needs nRF Connect SDK version 2.5.0. Other versions are not yet tested.&lt;/p&gt; &#xA;&lt;h3&gt;Licenses&lt;/h3&gt; &#xA;&lt;p&gt;This project uses information from ZBOSS SDK, license for which can be found in &lt;code&gt;zboss_license.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;nRF Connect SDK&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nordicsemi.com/Products/Development-software/nRF-Connect-SDK&#34;&gt;Download page&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nrfconnect/sdk-nrf&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zephyrproject.org/&#34;&gt;Zephyr project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://esphome.io/&#34;&gt;ESPHome&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://csa-iot.org/wp-content/uploads/2022/01/07-5123-08-Zigbee-Cluster-Library-1.pdf&#34;&gt;Zigbee Cluster Library&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>