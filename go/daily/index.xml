<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-21T01:36:08Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>go-swagger/go-swagger</title>
    <updated>2023-04-21T01:36:08Z</updated>
    <id>tag:github.com,2023-04-21:/go-swagger/go-swagger</id>
    <link href="https://github.com/go-swagger/go-swagger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Swagger 2.0 implementation for go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swagger 2.0 &lt;a href=&#34;https://github.com/go-swagger/go-swagger/actions/workflows/test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/go-swagger/go-swagger/actions/workflows/test.yaml/badge.svg?sanitize=true&#34; alt=&#34;Run CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/go-swagger/go-swagger&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/go-swagger/go-swagger/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/gh/go-swagger%2Fgo-swagger&#34;&gt;&lt;img src=&#34;https://badge.fury.io/gh/go-swagger%2Fgo-swagger.svg?sanitize=true&#34; alt=&#34;GitHub version&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slackin.goswagger.io&#34;&gt;&lt;img src=&#34;https://slackin.goswagger.io/badge.svg?sanitize=true&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/swagger-api/swagger-spec/master/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-Apache%20v2-orange.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://godoc.org/github.com/go-swagger/go-swagger&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/go-swagger/go-swagger?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/goswagger/swagger&#34;&gt;&lt;img src=&#34;https://quay.io/repository/goswagger/swagger/status&#34; alt=&#34;Docker Repository on Quay&#34; title=&#34;Docker Repository on Quay&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fgo-swagger%2Fgo-swagger?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fgo-swagger%2Fgo-swagger.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golangci.com&#34;&gt;&lt;img src=&#34;https://golangci.com/badges/github.com/go-swagger/go-swagger.svg?sanitize=true&#34; alt=&#34;GolangCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/go-swagger/go-swagger&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/go-swagger/go-swagger&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This package contains a golang implementation of Swagger 2.0 (aka &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification/raw/master/versions/2.0.md&#34;&gt;OpenAPI 2.0&lt;/a&gt;): it knows how to serialize and deserialize swagger specifications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swagger.io/&#34;&gt;Swagger&lt;/a&gt; is a simple yet powerful representation of your RESTful API.&lt;br&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/go-swagger/go-swagger/master/docs/favicon-16x16.png&#34; alt=&#34;swagger&#34;&gt; &lt;strong&gt;Swagger in a nutshell&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;With the largest ecosystem of API tooling on the planet, thousands of developers are supporting Swagger in almost every modern programming language and deployment environment.&lt;/p&gt; &#xA; &lt;p&gt;With a Swagger-enabled API, you get interactive documentation, client SDK generation and discoverability. We created Swagger to help fulfill the promise of APIs.&lt;/p&gt; &#xA; &lt;p&gt;Swagger helps companies like Apigee, Getty Images, Intuit, LivingSocial, McKesson, Microsoft, Morningstar, and PayPal build the best possible services with RESTful APIs. Now in version 2.0, Swagger is more enabling than ever. And it&#39;s 100% open source software.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go-swagger&lt;/code&gt; brings to the go community a complete suite of fully-featured, high-performance, API components to work with a Swagger API: server, client and data model.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generates a server from a swagger specification&lt;/li&gt; &#xA; &lt;li&gt;Generates a client from a swagger specification&lt;/li&gt; &#xA; &lt;li&gt;Generates a CLI (command line tool) from a swagger specification (alpha stage)&lt;/li&gt; &#xA; &lt;li&gt;Supports most features offered by jsonschema and swagger, including polymorphism&lt;/li&gt; &#xA; &lt;li&gt;Generates a swagger specification from annotated go code&lt;/li&gt; &#xA; &lt;li&gt;Additional tools to work with a swagger spec&lt;/li&gt; &#xA; &lt;li&gt;Great customization features, with vendor extensions and customizable templates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Our focus with code generation is to produce idiomatic, fast go code, which plays nice with golint, go vet etc.&lt;/p&gt; &#xA;&lt;h2&gt;Project status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go-swagger&lt;/code&gt; is now feature complete and has stabilized its API.&lt;/p&gt; &#xA;&lt;p&gt;Most features and building blocks are now in a stable state, with a rich set of CI tests.&lt;/p&gt; &#xA;&lt;p&gt;The go-openapi community actively continues bringing fixes and enhancements to this code base.&lt;/p&gt; &#xA;&lt;p&gt;There is still much room for improvement: contributors and PR&#39;s are welcome. You may also get in touch with maintainers on &lt;a href=&#34;https://slackin.goswagger.io&#34;&gt;our slack channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goswagger.io&#34;&gt;https://goswagger.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Q&amp;amp;A contributed by the community:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goswagger.io/faq/&#34;&gt;https://goswagger.io/faq/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How is this different from go generator in swagger-codegen?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; The main difference at this moment is that this one actually works...&lt;/p&gt; &#xA;&lt;p&gt;The swagger-codegen project only generates a &lt;em&gt;workable&lt;/em&gt; go client and even there it will only support flat models. Further, the go server generated by swagger-codegen is mostly a stub.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Motivation&lt;/strong&gt; Why is this not done as a part of the swagger-codegen project? Because:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;I don&#39;t really know java very well and so I&#39;d be learning both java and the object model of the codegen which was in heavy flux as opposed to doing go and I really wanted to go experience of designing a large codebase with it.&lt;/li&gt; &#xA;  &lt;li&gt;Go&#39;s super limited type system makes it so that it doesn&#39;t fit well in the model of swagger-codegen&lt;/li&gt; &#xA;  &lt;li&gt;Go&#39;s idea of polymorphism doesn&#39;t reconcile very well with a solution designed for languages that actually have inheritance and so forth.&lt;/li&gt; &#xA;  &lt;li&gt;For supporting types like &lt;code&gt;[][][]map[string][][]int64&lt;/code&gt; I don&#39;t think it&#39;s possible with mustache&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;I gravely underestimated the amount of work that would be involved in making something useful out of it. My personal mission: I want the jvm to go away, it was great way back when now it&#39;s just silly (vm in container on vm in vm in container)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;What&#39;s inside?&lt;/h2&gt; &#xA;&lt;p&gt;Here is an outline of available features (see the full list &lt;a href=&#34;https://goswagger.io/features.html&#34;&gt;here&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An object model that serializes swagger-compliant yaml or json&lt;/li&gt; &#xA; &lt;li&gt;A tool to work with swagger &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Serve swagger UI for any swagger spec file&lt;/li&gt; &#xA;   &lt;li&gt;Flexible code generation, with customizable templates &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Generate go API server based on swagger spec&lt;/li&gt; &#xA;     &lt;li&gt;Generate go API client from a swagger spec&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Validate a swagger spec document, with extra rules outlined &lt;a href=&#34;https://github.com/apigee-127/sway/raw/master/docs/README.md#semantic-validation&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Generate a spec document based on annotated code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A runtime to work with Rest API and middlewares &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Serve spec&lt;/li&gt; &#xA;   &lt;li&gt;Routing&lt;/li&gt; &#xA;   &lt;li&gt;Validation&lt;/li&gt; &#xA;   &lt;li&gt;Authorization&lt;/li&gt; &#xA;   &lt;li&gt;Swagger docs UI&lt;/li&gt; &#xA;   &lt;li&gt;A Diff tool which will cause a build to fail if a change in the spec breaks backwards compatibility&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is more to that...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://goswagger.io/use/model.html&#34;&gt;typed JSON Schema implementation&lt;/a&gt;, supporting most Draft 4 features&lt;/li&gt; &#xA; &lt;li&gt;Extended string and numeric formats: &lt;a href=&#34;https://github.com/go-openapi/strfmt&#34;&gt;strfmt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Utilities to work with JSON, convert data types and pointers: &lt;a href=&#34;https://github.com/go-openapi/swag&#34;&gt;swag&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A jsonschema (Draft 4) validator, with full $ref support: &lt;a href=&#34;https://github.com/go-openapi/validate&#34;&gt;validate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Custom validation interface&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go-swagger&lt;/code&gt; is available as binary or docker releases as well as from source: &lt;a href=&#34;https://goswagger.io/install.html&#34;&gt;more details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Use-cases&lt;/h2&gt; &#xA;&lt;p&gt;The main package of the toolkit, go-swagger/go-swagger, provides command line tools to help working with swagger.&lt;/p&gt; &#xA;&lt;p&gt;The toolkit is highly customizable and allows endless possibilities to work with OpenAPI2.0 specifications.&lt;/p&gt; &#xA;&lt;p&gt;Beside the go-swagger CLI tool and generator, the &lt;a href=&#34;https://github.com/go-openapi&#34;&gt;go-openapi packages&lt;/a&gt; provide modular functionality to build custom solutions on top of OpenAPI.&lt;/p&gt; &#xA;&lt;p&gt;The CLI supports shell autocompletion utilities: see &lt;a href=&#34;https://goswagger.io/cli_helpers.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Serve specification UI&lt;/h3&gt; &#xA;&lt;p&gt;Most basic use-case: serve a UI for your spec:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger serve https://raw.githubusercontent.com/swagger-api/swagger-spec/master/examples/v2.0/json/petstore-expanded.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Validate a specification&lt;/h3&gt; &#xA;&lt;p&gt;To &lt;a href=&#34;https://goswagger.io/usage/validate.html&#34;&gt;validate&lt;/a&gt; a Swagger specification:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger validate https://raw.githubusercontent.com/swagger-api/swagger-spec/master/examples/v2.0/json/petstore-expanded.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate an API server&lt;/h3&gt; &#xA;&lt;p&gt;To generate a &lt;a href=&#34;https://goswagger.io/generate/server.html&#34;&gt;server for a swagger spec&lt;/a&gt; document:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger generate server [-f ./swagger.json] -A [application-name [--principal [principal-name]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate an API client&lt;/h3&gt; &#xA;&lt;p&gt;To generate a &lt;a href=&#34;https://goswagger.io/generate/client.html&#34;&gt;client for a swagger spec&lt;/a&gt; document:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger generate client [-f ./swagger.json] -A [application-name [--principal [principal-name]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate an CLI (Command line tool)&lt;/h3&gt; &#xA;&lt;p&gt;To generate a &lt;a href=&#34;https://github.com/go-swagger/go-swagger/tree/master/examples/cli&#34;&gt;CLI for a swagger spec&lt;/a&gt; document:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger generate cli [-f ./swagger.json] -A [application-name [--principal [principal-name]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate a spec from source&lt;/h3&gt; &#xA;&lt;p&gt;To generate a &lt;a href=&#34;https://goswagger.io/generate/spec.html&#34;&gt;swagger spec document for a go application&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger generate spec -o ./swagger.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate a data model&lt;/h3&gt; &#xA;&lt;p&gt;To generate model structures and validators exposed by the API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger generate model --spec={spec}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Transform specs&lt;/h3&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://goswagger.io/use/transform.html&#34;&gt;several commands&lt;/a&gt; allowing you to transform your spec.&lt;/p&gt; &#xA;&lt;p&gt;Resolve and expand $ref&#39;s in your spec as inline definitions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger expand {spec}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Flatten your spec: all external $ref&#39;s are imported into the main document and inline schemas reorganized as definitions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger flatten {spec}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Merge specifications (composition):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger mixin {spec1} {spec2}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compare specs&lt;/h3&gt; &#xA;&lt;p&gt;The diff command allows you to check backwards compatibility. Type &lt;code&gt;swagger diff --help&lt;/code&gt; for info.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger diff {spec1} {spec2}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate spec markdown spec&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger generate markdown -f {spec} --output swagger.mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Try it&lt;/h2&gt; &#xA;&lt;p&gt;Try &lt;code&gt;go-swagger&lt;/code&gt; in a free online workspace using Gitpod:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io#https://github.com/go-swagger/go-swagger&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;The toolkit itself is licensed as Apache Software License 2.0. Just like swagger, this does not cover code generated by the toolkit. That code is entirely yours to license however you see fit.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fgo-swagger%2Fgo-swagger?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fgo-swagger%2Fgo-swagger.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Who is using this project?&lt;/h2&gt; &#xA;&lt;p&gt;To name but a few... (feel free to sign in there if you are using this project):&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;In the list below, we tried to figure out the public repos where you&#39;ll find examples on how to use &lt;code&gt;go-swagger&lt;/code&gt; and &lt;code&gt;go-openapi&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/3DSIM&#34;&gt;3DSIM&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/alibaba/pouch&#34;&gt;Alibaba PouchAPI&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/checkr/flagr&#34;&gt;CheckR&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/cilium/cilium&#34;&gt;Cilium&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/coreos/go-quay&#34;&gt;CoreOS&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/netbox-community/go-netbox&#34;&gt;NetBox Community&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/evecentral&#34;&gt;EVE Central&lt;/a&gt;&lt;br&gt; Iron.io &lt;a href=&#34;https://github.com/jaegertracing/jaeger&#34;&gt;JaegerTracing&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/kubernetes-helm/monocular&#34;&gt;Kubernetes-Helm&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://godoc.org/k8s.io/apiextensions-apiserver/pkg/apiserver&#34;&gt;Kubernetes&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/manifoldco&#34;&gt;ManifoldCo&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/metaparticle-io/metaparticle-ast&#34;&gt;Metaparticle.io&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/netlify/open-api&#34;&gt;Netlify&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/nutanix&#34;&gt;Nutanix&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/hypnoglow/oas2&#34;&gt;OAS2&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/appscode/go-ovh&#34;&gt;OVH API&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/RackHD/RackHD&#34;&gt;RackHD&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/authclub/billforward&#34;&gt;ScaleFT&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Stratoscale/swagger&#34;&gt;StratoScale&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/dikhan/terraform-provider-openapi&#34;&gt;Terraform Provider OpenAPI&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/vmware/dispatch&#34;&gt;VMware&lt;/a&gt;&lt;br&gt; ...&lt;/p&gt; &#xA;&lt;h2&gt;Note to users migrating from older releases&lt;/h2&gt; &#xA;&lt;h3&gt;Migrating from 0.25 to [master]&lt;/h3&gt; &#xA;&lt;p&gt;Changes in the behavior of the generated client regarding defaults in parameters and response headers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;default values for parameters are no more hydrated by default and sent over the wire (assuming the server uses defaults).&lt;/li&gt; &#xA; &lt;li&gt;the previous behavior (explicitly sending defaults over the wire) can be obtained with the SetDefaults() and WithDefaults() parameter methods.&lt;/li&gt; &#xA; &lt;li&gt;the body parameter is not pre-hydrated with the default from it schema&lt;/li&gt; &#xA; &lt;li&gt;default values for response headers are hydrated when the header is not received (previously, headers remained with their zero value)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Migrating from 0.24 to 0.25&lt;/h3&gt; &#xA;&lt;p&gt;The options for &lt;code&gt;generate model --all-definitions&lt;/code&gt; and &lt;code&gt;--skip-struct&lt;/code&gt; are marked for deprecation.&lt;/p&gt; &#xA;&lt;p&gt;For now, the CLI continues to accept these options. They will be removed in a future version.&lt;/p&gt; &#xA;&lt;p&gt;Generating all definitions is now the default behavior when no other option filters the generation scope. The &lt;code&gt;--skip-struct&lt;/code&gt; option had no effect.&lt;/p&gt; &#xA;&lt;h3&gt;Migrating from 0.14 to 0.15&lt;/h3&gt; &#xA;&lt;p&gt;Generated servers no more import the following package (replaced by go1.8 native functionality):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github.com/tylerb/graceful&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Spec flattening now defaults to minimal changes to models and should be workable for 0.12 users.&lt;/p&gt; &#xA;&lt;p&gt;Users who prefer to stick to 0.13 and 0.14 default flattening mode may now use the &lt;code&gt;--with-flatten=full&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;Note that the &lt;code&gt;--skip-flatten&lt;/code&gt; option has been phased out and replaced by the more explicit &lt;code&gt;--with-expand&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h3&gt;Migrating from 0.12 to 0.13&lt;/h3&gt; &#xA;&lt;p&gt;Spec flattening and $ref resolution brought breaking changes in model generation, since all complex things generate their own definitions.&lt;/p&gt; &#xA;&lt;h3&gt;Migrating from 0.5.0 to 0.6.0&lt;/h3&gt; &#xA;&lt;p&gt;You will have to rename some imports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github.com/go-swagger/go-swagger/httpkit/validate to github.com/go-openapi/validate&#xA;github.com/go-swagger/go-swagger/httpkit to github.com/go-openapi/runtime&#xA;github.com/naoina/denco to github.com/go-openapi/runtime/middleware/denco&#xA;github.com/go-swagger/go-swagger to github.com/go-openapi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using 0.5.0&lt;/h3&gt; &#xA;&lt;p&gt;Because 0.5.0 and master have diverged significantly, you should checkout the tag 0.5.0 for go-swagger when you use the currently released version.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>devfullcycle/fclx</title>
    <updated>2023-04-21T01:36:08Z</updated>
    <id>tag:github.com,2023-04-21:/devfullcycle/fclx</id>
    <link href="https://github.com/devfullcycle/fclx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>looCiprian/GC2-sheet</title>
    <updated>2023-04-21T01:36:08Z</updated>
    <id>tag:github.com,2023-04-21:/looCiprian/GC2-sheet</id>
    <link href="https://github.com/looCiprian/GC2-sheet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GC2 is a Command and Control application that allows an attacker to execute commands on the target machine using Google Sheet and exfiltrate data using Google Drive.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GC2&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Logo&#34; src=&#34;https://raw.githubusercontent.com/looCiprian/GC2-sheet/master/img/GC2.png&#34; height=&#34;30%&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;GC2 (Google Command and Control) is a Command and Control application that allows an attacker to execute commands on the target machine using Google Sheet and exfiltrates data using Google Drive.&lt;/p&gt; &#xA;&lt;h1&gt;Why&lt;/h1&gt; &#xA;&lt;p&gt;This program has been developed in order to provide a command and control that does not require any particular set up (like: a custom domain, VPS, CDN, ...) during Red Teaming activities.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, the program will interact only with Google&#39;s domains (*.google.com) to make detection more difficult.&lt;/p&gt; &#xA;&lt;h1&gt;Set up&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build executable&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/looCiprian/GC2-sheet&#xA;cd GC2-sheet&#xA;go build gc2-sheet.go&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a new google &#34;service account&#34;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create a new google &#34;service account&#34; using &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;https://console.cloud.google.com/&lt;/a&gt;, create a .json key file for the service account&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enable Google Sheet API and Google Drive API&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Enable Google Drive API &lt;a href=&#34;https://developers.google.com/drive/api/v3/enable-drive-api&#34;&gt;https://developers.google.com/drive/api/v3/enable-drive-api&lt;/a&gt; and Google Sheet API &lt;a href=&#34;https://developers.google.com/sheets/api/quickstart/go&#34;&gt;https://developers.google.com/sheets/api/quickstart/go&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set up Google Sheet and Google Drive&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create a new Google Sheet and add the service account to the editor group of the spreadsheet (to add the service account use its email)&lt;/p&gt; &lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Sheet Permission&#34; src=&#34;https://raw.githubusercontent.com/looCiprian/GC2-sheet/master/img/sheet_permissions.png&#34; height=&#34;60%&#34; width=&#34;60%&#34;&gt; &lt;/p&gt; &lt;p&gt;Create a new Google Drive folder and add the service account to the editor group of the folder (to add the service account use its email)&lt;/p&gt; &lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Sheet Permission&#34; src=&#34;https://raw.githubusercontent.com/looCiprian/GC2-sheet/master/img/drive_permissions.png&#34; height=&#34;60%&#34; width=&#34;60%&#34;&gt; &lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the C2&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;gc2-sheet --key &amp;lt;GCP service account credential file .JSON &amp;gt; --sheet &amp;lt;Google sheet ID&amp;gt; --drive &amp;lt;Google drive ID&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;PS: you can also hardcode the parameters in the code, so you will upload only the executable on the target machine (look at comments in root.go and authentication.go)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command execution using Google Sheet as a console&lt;/li&gt; &#xA; &lt;li&gt;Download files on the target using Google Drive&lt;/li&gt; &#xA; &lt;li&gt;Data exfiltration using Google Drive&lt;/li&gt; &#xA; &lt;li&gt;Exit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Command execution&lt;/h3&gt; &#xA;&lt;p&gt;The program will perform a request to the spreedsheet every 5 sec to check if there are some new commands. Commands must be inserted in the column &#34;A&#34;, and the output will be printed in the column &#34;B&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;Data exfiltration file&lt;/h3&gt; &#xA;&lt;p&gt;Special commands are reserved to perform the upload and download to the target machine&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;From Target to Google Drive&#xA;upload;&amp;lt;remote path&amp;gt;&#xA;Example:&#xA;upload;/etc/passwd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download file&lt;/h3&gt; &#xA;&lt;p&gt;Special commands are reserved to perform the upload and download to the target machine&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;From Google Drive to Target&#xA;download;&amp;lt;google drive file id&amp;gt;;&amp;lt;remote path&amp;gt;&#xA;Example:&#xA;download;&amp;lt;file ID&amp;gt;;/home/user/downloaded.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Exit&lt;/h3&gt; &#xA;&lt;p&gt;By sending the command &lt;em&gt;exit&lt;/em&gt;, the program will delete itself from the target and kill its process&lt;/p&gt; &#xA;&lt;p&gt;PS: From &lt;em&gt;os&lt;/em&gt; documentation: &lt;em&gt;If a symlink was used to start the process, depending on the operating system, the result might be the symlink or the path it pointed to&lt;/em&gt;. In this case the symlink is deleted.&lt;/p&gt; &#xA;&lt;h3&gt;WorkFlow&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Work Flow&#34; src=&#34;https://raw.githubusercontent.com/looCiprian/GC2-sheet/master/img/GC2-workflow.png&#34; height=&#34;60%&#34; width=&#34;60%&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Demo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/n2dFlSaBBKo&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;The owner of this project is not responsible for any illegal usage of this program.&lt;/p&gt; &#xA;&lt;p&gt;This is an open source project meant to be used with authorization to assess the security posture and for research purposes.&lt;/p&gt; &#xA;&lt;p&gt;The final user is solely responsible for their actions and decisions. The use of this project is at your own risk. The owner of this project does not accept any liability for any loss or damage caused by the use of this project.&lt;/p&gt; &#xA;&lt;h1&gt;Support the project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pull request&lt;/strong&gt; or &lt;a href=&#34;https://www.paypal.com/donate?hosted_button_id=8EWYXPED4ZU5E&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>