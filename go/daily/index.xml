<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-02T01:25:29Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>runreveal/pql</title>
    <updated>2024-03-02T01:25:29Z</updated>
    <id>tag:github.com,2024-03-02:/runreveal/pql</id>
    <link href="https://github.com/runreveal/pql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pipelined Query Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pipelined query language&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pql.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/INTRO-WEB-blue?style=for-the-badge&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pql.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/INTRO-PLAYGROUND-blue?style=for-the-badge&#34; alt=&#34;Playground&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/PbeXzrWP&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1120882187785470113?label=discord%20chat&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This Go library compiles a pipelined-based query language (inspired by the &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/&#34;&gt;Kusto Query Language&lt;/a&gt;) into SQL. It has been specifically tested to work with the &lt;a href=&#34;https://clickhouse.com/docs/en/sql-reference&#34;&gt;Clickhouse SQL dialect&lt;/a&gt;, but the generated SQL is intentionally database agnostic. This repository contains a the Go library, and a CLI to invoke the library.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following expression:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plain&#34;&gt;StormEvents&#xA;| where DamageProperty &amp;gt; 5000 and EventType == &#34;Thunderstorm Wind&#34;&#xA;| top 3 by DamageProperty&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will be compiled to SQL that is similar to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT *&#xA;FROM StormEvents&#xA;WHERE DamageProperty &amp;gt; 5000 AND EventType = &#39;Thunderstorm Wind&#39;&#xA;ORDER BY DamageProperty DESC&#xA;LIMIT 3;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to see a demo along with some examples, check out &lt;a href=&#34;https://pql.dev&#34;&gt;https://pql.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use pql in your go code, a minimal example might look like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;github.com/runreveal/pql&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;sql, err := pql.Compile(&#34;users | project id, email | limit 5&#34;)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;panic(err)&#xA;&#x9;}&#xA;&#x9;println(sql)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running this program should give you the following output&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ go run test.go&#xA;&#xA;WITH &#34;__subquery0&#34; AS (SELECT &#34;id&#34; AS &#34;id&#34;, &#34;email&#34; AS &#34;email&#34; FROM &#34;users&#34;)&#xA;SELECT * FROM &#34;__subquery0&#34; LIMIT 5;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The following tabular operators are supported and the Microsoft KQL documentation is representative of the current pql api.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/as-operator&#34;&gt;&lt;code&gt;as&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/count-operator&#34;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/join-operator&#34;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/project-operator&#34;&gt;&lt;code&gt;project&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/extend-operator&#34;&gt;&lt;code&gt;extend&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/sort-operator&#34;&gt;&lt;code&gt;sort&lt;/code&gt;/&lt;code&gt;order&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/summarize-operator&#34;&gt;&lt;code&gt;summarize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/take-operator&#34;&gt;&lt;code&gt;take&lt;/code&gt;/&lt;code&gt;limit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/top-operator&#34;&gt;&lt;code&gt;top&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/where-operator&#34;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following scalar functions implemented within pql. Functions not in this list will be passed through to the underlying SQL engine. This allows the usage of the full APIs implemented by the underlying&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/not-function&#34;&gt;&lt;code&gt;not&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/isnull-function&#34;&gt;&lt;code&gt;isnull&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/isnotnull-function&#34;&gt;&lt;code&gt;isnotnull&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/strcat-function&#34;&gt;&lt;code&gt;strcat&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/iff-function&#34;&gt;&lt;code&gt;iff&lt;/code&gt;/&lt;code&gt;iif&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/count-aggregation-function&#34;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/countif-aggregation-function&#34;&gt;&lt;code&gt;countif&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Column names with special characters can be escaped with backticks.&lt;/p&gt; &#xA;&lt;h2&gt;Get involved&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://discord.gg/XWKF5s5g&#34;&gt;discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Contribute a &lt;a href=&#34;https://raw.githubusercontent.com/runreveal/pql/main/CONTRIBUTING.md&#34;&gt;scalar function&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/runreveal/pql/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>