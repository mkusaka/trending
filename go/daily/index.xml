<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-10T01:33:32Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>memphisdev/memphis-broker</title>
    <updated>2022-11-10T01:33:32Z</updated>
    <id>tag:github.com,2022-11-10:/memphisdev/memphis-broker</id>
    <link href="https://github.com/memphisdev/memphis-broker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Memphis is an Open-Source, Real-Time Data Processing Platform&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/memphisdev/memphis-broker/raw/master/logo-white.png?raw=true#gh-dark-mode-only&#34; alt=&#34;Memphis light logo&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/memphisdev/memphis-broker/raw/master/logo-black.png?raw=true#gh-light-mode-only&#34; alt=&#34;Memphis light logo&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Real-Time Data Processing Platform&lt;/h1&gt; &#xA; &lt;h4&gt;&#34;It took me three minutes to build in Memphis what took me weeks in Kafka&#34;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img width=&#34;750&#34; alt=&#34;Memphis UI&#34; src=&#34;https://user-images.githubusercontent.com/70286779/182241744-2016dc1a-c758-48ba-8666-40b883242ea9.png&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA; &lt;img width=&#34;200&#34; alt=&#34;CNCF Silver Member&#34; src=&#34;https://github.com/cncf/artwork/raw/master/other/cncf-member/silver/white/cncf-member-silver-white.svg#gh-dark-mode-only&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;200&#34; alt=&#34;CNCF Silver Member&#34; src=&#34;https://github.com/cncf/artwork/raw/master/other/cncf-member/silver/color/cncf-member-silver-color.svg#gh-light-mode-only&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://demo.memphis.dev/&#34;&gt;Playground&lt;/a&gt; - &lt;a href=&#34;https://sandbox.memphis.dev/&#34; target=&#34;_blank&#34;&gt;Sandbox&lt;/a&gt; - &lt;a href=&#34;https://memphis.dev/docs/&#34;&gt;Docs&lt;/a&gt; - &lt;a href=&#34;https://twitter.com/Memphis_Dev&#34;&gt;Twitter&lt;/a&gt; - &lt;a href=&#34;https://www.youtube.com/channel/UCVdMDLCSxXOqtgrBaRUHKKg&#34;&gt;YouTube&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/WZpysvAeTf&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/963333392844328961?color=6557ff&amp;amp;label=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/memphisdev/memphis-broker?color=6557ff&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/memphisdev/memphis-broker/raw/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Code%20of%20Conduct-v1.0-ff69b4.svg?color=ffc633&#34; alt=&#34;Code Of Conduct&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/memphisdev/memphis-broker/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/memphisdev/memphis-broker?color=ffc633&#34;&gt;&lt;/a&gt; &lt;img alt=&#34;GitHub release (latest by date)&#34; src=&#34;https://img.shields.io/github/v/release/memphisdev/memphis-broker?color=61dfc6&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/memphisdev/memphis-broker?color=61dfc6&amp;amp;label=last%20commit&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://memphis.dev&#34;&gt;Memphis{dev}&lt;/a&gt;&lt;/strong&gt; is an open-source real-time data processing platform&lt;br&gt; that provides end-to-end support for in-app streaming use cases using Memphis distributed message broker.&lt;br&gt; Memphis&#39; platform requires zero ops, enables rapid development, extreme cost reduction, &lt;br&gt; eliminates coding barriers, and saves a great amount of dev time for data-oriented developers and data engineers.&lt;/p&gt; &#xA;&lt;h2&gt;üì∏ Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Dashboard&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Station (Topic) overview&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CLI&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;300&#34; alt=&#34;Dashboard&#34; src=&#34;https://user-images.githubusercontent.com/70286779/182221769-3aa953cc-df71-4c0e-b0d2-9dd4ab83fea9.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;300&#34; alt=&#34;Station Overview&#34; src=&#34;https://user-images.githubusercontent.com/70286779/182221788-0a159007-ab93-46aa-9c81-222671144a05.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/70286779/175806007-9a37e130-3e5a-4606-bdda-a71a89efae7f.png&#34; alt=&#34;drawing&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;‚≠êÔ∏è Why&lt;/h2&gt; &#xA;&lt;p&gt;Working with data streaming is HARD.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;As a developer, you need to build a dedicated pipeline for each data source,&lt;br&gt; work with schemas, formats, serializations, analyze each source individually,&lt;br&gt; enrich the data with other sources, constantly change APIs, and scale for better performance ü•µ.&lt;br&gt; Besides that, it constantly crashes and requires adaptation to different rate limits.&lt;br&gt; &lt;strong&gt;It takes time and resources that you probably don&#39;t have.&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Message broker acts as the middleman and supports streaming architecture,&lt;br&gt; but then you encounter Apache Kafka and its documentation and run back to the monolith and batch jobs.&lt;br&gt; &lt;strong&gt;Give memphis{dev} a spin before.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üëâ Use-cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Async task management&lt;/li&gt; &#xA; &lt;li&gt;Real-time streaming pipelines&lt;/li&gt; &#xA; &lt;li&gt;Data ingestion&lt;/li&gt; &#xA; &lt;li&gt;Cloud Messaging &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Services (microservices, service mesh)&lt;/li&gt; &#xA;   &lt;li&gt;Event/Data Streaming (observability, analytics, ML/AI)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Queuing&lt;/li&gt; &#xA; &lt;li&gt;N:N communication patterns&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orgs/memphisdev/projects/2/views/1&#34;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.memphis.dev/memphis/release-notes/releases/v0.4.0-beta&#34;&gt;v0.4.0&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üöÄ Fully optimized message broker in under 3 minutes&lt;/li&gt; &#xA; &lt;li&gt;üíª Easy-to-use UI, CLI, and SDKs&lt;/li&gt; &#xA; &lt;li&gt;üì∫ Data-level observability&lt;/li&gt; &#xA; &lt;li&gt;‚ò†Ô∏è Dead-Letter Queue with automatic message retransmit&lt;/li&gt; &#xA; &lt;li&gt;üî§ Schemaverse - Embedded schema management for produced data&lt;/li&gt; &#xA; &lt;li&gt;‚õì SDKs: Node.JS, Go, Python, Typescript, NestJS&lt;/li&gt; &#xA; &lt;li&gt;üê≥‚ò∏ Runs on your Docker or Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª Community driven&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sandbox.memphis.dev&#34;&gt;Sandbox&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/playlist?list=PL_7iYjqhtXpWpZT2U0zDYo2eGOoGmg2mm&#34;&gt;Installation videos&lt;/a&gt;&lt;br&gt;&lt;br&gt; Helm for Kubernetes‚ò∏&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm repo add memphis https://k8s.memphis.dev/charts/ --force-update &amp;amp;&amp;amp; \&#xA;helm install my-memphis memphis/memphis --create-namespace --namespace memphis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dockerüê≥ Compose&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -s https://memphisdev.github.io/memphis-docker/docker-compose.yml -o docker-compose.yml &amp;amp;&amp;amp; \&#xA;docker compose -f docker-compose.yml -p memphis up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://youtu.be/-5YmxYRQsdw&#34;&gt;&lt;img align=&#34;center&#34; alt=&#34;connect your first app&#34; src=&#34;https://img.youtube.com/vi/-5YmxYRQsdw/0.jpg&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://medium.com/memphis-dev/how-to-build-your-own-wolt-app-b220d738bb71&#34;&gt; Build an event-driven food delivery app &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;High-Level Architecture&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;memphis.dev Architecture&#34; height=&#34;500&#34; src=&#34;https://user-images.githubusercontent.com/70286779/193022748-42ed5f37-3083-4fee-a2d0-dabf2ccafb23.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Local access&lt;/h2&gt; &#xA;&lt;h3&gt;Via Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;To access Memphis UI from localhost, run the below commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubectl port-forward service/memphis-ui 9000:80 --namespace memphis &amp;gt; /dev/null &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access Memphis using CLI or SDK from localhost, run the below commands:&lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubectl port-forward service/memphis-cluster 6666:6666 5555:5555 --namespace memphis &amp;gt; /dev/null &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dashboard: &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt;&lt;br&gt; Memphis broker: &lt;a href=&#34;http://localhost:6666&#34;&gt;http://localhost:6666&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Production Environments&lt;/strong&gt; Please expose the UI, Cluster, and Control-plane via k8s ingress / load balancer / nodeport&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker&lt;/h3&gt; &#xA;&lt;p&gt;UI - &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt;&lt;br&gt; Broker - &lt;a href=&#34;http://localhost:6666&#34;&gt;http://localhost:6666&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Beta&lt;/h2&gt; &#xA;&lt;p&gt;Memphis{dev} is currently in Beta version. This means that we are still working on essential features like real-time messages tracing, schema registry and inline processing as well as making more SDKs and supporting materials.&lt;/p&gt; &#xA;&lt;p&gt;How does it affect you? Well... mostly it doesn&#39;t.&lt;br&gt; (a) The core of memphis broker is highly stable&lt;br&gt; (b) We learn and fix fast&lt;br&gt;&lt;br&gt; But we need your love, and any help we can get by stars, PR, feedback, issues, and enhancements.&lt;br&gt; Read more on &lt;a href=&#34;https://memphis.dev/docs&#34;&gt;Memphis{dev} Documentation üìÉ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support üôã‚Äç‚ôÇÔ∏èü§ù&lt;/h2&gt; &#xA;&lt;h3&gt;Ask a question ‚ùì about Memphis{dev} or something related to us:&lt;/h3&gt; &#xA;&lt;p&gt;We welcome you to our discord server with your questions, doubts and feedback.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/WZpysvAeTf&#34;&gt;&lt;img src=&#34;https://amplication.com/images/discord_banner_purple.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Create a bug üêû report&lt;/h3&gt; &#xA;&lt;p&gt;If you see an error message or run into an issue, please &lt;a href=&#34;https://github.com/memphisdev/memphis-broker/issues/new?assignees=&amp;amp;labels=type%3A%20bug&amp;amp;template=bug_report.md&amp;amp;title=&#34;&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all Memphis{dev} users.&lt;/p&gt; &#xA;&lt;h3&gt;Submit a feature üí° request&lt;/h3&gt; &#xA;&lt;p&gt;If you have an idea, or you think that we&#39;re missing a capability that would make development easier and more robust, please &lt;a href=&#34;https://github.com/memphisdev/memphis-broker/issues/new?assignees=&amp;amp;labels=type%3A%20feature%20request&#34;&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If an issue‚ùówith similar feature request already exists, don&#39;t forget to leave a &#34;+1&#34;. If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Memphis{dev} is an open-source project.&lt;br&gt; We are committed to a fully transparent development process and appreciate highly any contributions.&lt;br&gt; Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the Memphis{dev} community.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/memphisdev/memphis-broker/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/memphisdev/memphis-broker/master/code_of_conduct.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people ‚ù§:&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/memphisdev/memphis-broker/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=memphisdev/memphis-broker&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License üìÉ&lt;/h2&gt; &#xA;&lt;p&gt;Please check out &lt;a href=&#34;https://raw.githubusercontent.com/memphisdev/memphis-broker/master/LICENSE&#34;&gt;License&lt;/a&gt; to read the full text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>projectdiscovery/katana</title>
    <updated>2022-11-10T01:33:32Z</updated>
    <id>tag:github.com,2022-11-10:/projectdiscovery/katana</id>
    <link href="https://github.com/projectdiscovery/katana" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A next-generation crawling and spidering framework.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/8293321/196779266-421c79d4-643a-4f73-9b54-3da379bbac09.png&#34; alt=&#34;katana&#34; width=&#34;200px&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;A next-generation crawling and spidering framework&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/projectdiscovery/katana&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/projectdiscovery/katana&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/katana/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/katana/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/projectdiscovery/katana&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/pdiscoveryio&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/pdiscoveryio.svg?logo=twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/695645237418131507.svg?logo=discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/katana/main/#features&#34;&gt;Features&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/katana/main/#installation&#34;&gt;Installation&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/katana/main/#usage&#34;&gt;Usage&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/katana/main/#scope-control&#34;&gt;Scope&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/katana/main/#crawler-configuration&#34;&gt;Config&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/katana/main/#filters&#34;&gt;Filters&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;Join Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8293321/199371558-daba03b6-bf9c-4883-8506-76497c6c3a44.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast And fully configurable web crawling&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; and &lt;strong&gt;Headless&lt;/strong&gt; mode support&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; parsing / crawling&lt;/li&gt; &#xA; &lt;li&gt;Customizable &lt;strong&gt;automatic form filling&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scope control&lt;/strong&gt; - Preconfigured field / Regex&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable output&lt;/strong&gt; - Preconfigured fields&lt;/li&gt; &#xA; &lt;li&gt;INPUT - &lt;strong&gt;STDIN&lt;/strong&gt;, &lt;strong&gt;URL&lt;/strong&gt; and &lt;strong&gt;LIST&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;OUTPUT - &lt;strong&gt;STDOUT&lt;/strong&gt;, &lt;strong&gt;FILE&lt;/strong&gt; and &lt;strong&gt;JSON&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;katana requires &lt;strong&gt;Go 1.18&lt;/strong&gt; to install successfully. To install, just run the below command or download pre-compiled binary from &lt;a href=&#34;https://github.com/projectdiscovery/katana/releases&#34;&gt;release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go install github.com/projectdiscovery/katana/cmd/katana@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;katana -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will display help for the tool. Here are all the switches it supports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Usage:&#xA;  ./katana [flags]&#xA;&#xA;Flags:&#xA;INPUT:&#xA;   -u, -list string[]  target url / list to crawl&#xA;&#xA;CONFIGURATION:&#xA;   -d, -depth int                maximum depth to crawl (default 2)&#xA;   -jc, -js-crawl                enable endpoint parsing / crawling in javascript file&#xA;   -ct, -crawl-duration int      maximum duration to crawl the target for&#xA;   -kf, -known-files string      enable crawling of known files (all,robotstxt,sitemapxml)&#xA;   -mrs, -max-response-size int  maximum response size to read (default 2097152)&#xA;   -timeout int                  time to wait for request in seconds (default 10)&#xA;   -aff, -automatic-form-fill    enable optional automatic form filling (experimental)&#xA;   -retry int                    number of times to retry the request (default 1)&#xA;   -proxy string                 http/socks5 proxy to use&#xA;   -H, -headers string[]         custom header/cookie to include in request&#xA;   -config string                path to the katana configuration file&#xA;   -fc, -form-config string      path to custom form configuration file&#xA;&#xA;HEADLESS:&#xA;   -hl, -headless       enable headless hybrid crawling (experimental)&#xA;   -sc, -system-chrome  use local installed chrome browser instead of katana installed&#xA;   -sb, -show-browser   show the browser on the screen with headless mode&#xA;&#xA;SCOPE:&#xA;   -cs, -crawl-scope string[]       in scope url regex to be followed by crawler&#xA;   -cos, -crawl-out-scope string[]  out of scope url regex to be excluded by crawler&#xA;   -fs, -field-scope string         pre-defined scope field (dn,rdn,fqdn) (default &#34;rdn&#34;)&#xA;   -ns, -no-scope                   disables host based default scope&#xA;   -do, -display-out-scope          display external endpoint from scoped crawling&#xA;&#xA;FILTER:&#xA;   -f, -field string                field to display in output (url,path,fqdn,rdn,rurl,qurl,qpath,file,key,value,kv,dir,udir)&#xA;   -sf, -store-field string         field to store in per-host output (url,path,fqdn,rdn,rurl,qurl,qpath,file,key,value,kv,dir,udir)&#xA;   -em, -extension-match string[]   match output for given extension (eg, -em php,html,js)&#xA;   -ef, -extension-filter string[]  filter output for given extension (eg, -ef png,css)&#xA;&#xA;RATE-LIMIT:&#xA;   -c, -concurrency int          number of concurrent fetchers to use (default 10)&#xA;   -p, -parallelism int          number of concurrent inputs to process (default 10)&#xA;   -rd, -delay int               request delay between each request in seconds&#xA;   -rl, -rate-limit int          maximum requests to send per second (default 150)&#xA;   -rlm, -rate-limit-minute int  maximum number of requests to send per minute&#xA;&#xA;OUTPUT:&#xA;   -o, -output string  file to write output to&#xA;   -j, -json           write output in JSONL(ines) format&#xA;   -nc, -no-color      disable output content coloring (ANSI escape codes)&#xA;   -silent             display output only&#xA;   -v, -verbose        display verbose output&#xA;   -version            display project version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Katana&lt;/h2&gt; &#xA;&lt;h3&gt;Input for katana&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;katana&lt;/strong&gt; requires &lt;strong&gt;url&lt;/strong&gt; or &lt;strong&gt;endpoint&lt;/strong&gt; to crawl and accepts single or multiple inputs.&lt;/p&gt; &#xA;&lt;p&gt;Input URL can be provided using &lt;code&gt;-u&lt;/code&gt; option, and multiple values can be provided using comma-separated input, similarly &lt;strong&gt;file&lt;/strong&gt; input is supported using &lt;code&gt;-list&lt;/code&gt; option and additionally piped input (stdin) is also supported.&lt;/p&gt; &#xA;&lt;h4&gt;URL Input&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;katana -u https://tesla.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Multiple URL Input (comma-separated)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;katana -u https://tesla.com,https://google.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;List Input&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cat url_list.txt&#xA;&#xA;https://tesla.com&#xA;https://google.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -list url_list.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;STDIN (piped) Input&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;echo https://tesla.com | katana&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cat domains | httpx | katana&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example running katana -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;katana -u https://youtube.com&#xA;&#xA;   __        __                &#xA;  / /_____ _/ /____ ____  ___ _&#xA; /  &#39;_/ _  / __/ _  / _ \/ _  /&#xA;/_/\_\\_,_/\__/\_,_/_//_/\_,_/ v0.0.1                     &#xA;&#xA;      projectdiscovery.io&#xA;&#xA;[WRN] Use with caution. You are responsible for your actions.&#xA;[WRN] Developers assume no liability and are not responsible for any misuse or damage.&#xA;https://www.youtube.com/&#xA;https://www.youtube.com/about/&#xA;https://www.youtube.com/about/press/&#xA;https://www.youtube.com/about/copyright/&#xA;https://www.youtube.com/t/contact_us/&#xA;https://www.youtube.com/creators/&#xA;https://www.youtube.com/ads/&#xA;https://www.youtube.com/t/terms&#xA;https://www.youtube.com/t/privacy&#xA;https://www.youtube.com/about/policies/&#xA;https://www.youtube.com/howyoutubeworks?utm_campaign=ytgen&amp;amp;utm_source=ythp&amp;amp;utm_medium=LeftNav&amp;amp;utm_content=txt&amp;amp;u=https%3A%2F%2Fwww.youtube.com%2Fhowyoutubeworks%3Futm_source%3Dythp%26utm_medium%3DLeftNav%26utm_campaign%3Dytgen&#xA;https://www.youtube.com/new&#xA;https://m.youtube.com/&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/desktop_polymer.vflset/desktop_polymer.js&#xA;https://www.youtube.com/s/desktop/4965577f/cssbin/www-main-desktop-home-page-skeleton.css&#xA;https://www.youtube.com/s/desktop/4965577f/cssbin/www-onepick.css&#xA;https://www.youtube.com/s/_/ytmainappweb/_/ss/k=ytmainappweb.kevlar_base.0Zo5FUcPkCg.L.B1.O/am=gAE/d=0/rs=AGKMywG5nh5Qp-BGPbOaI1evhF5BVGRZGA&#xA;https://www.youtube.com/opensearch?locale=en_GB&#xA;https://www.youtube.com/manifest.webmanifest&#xA;https://www.youtube.com/s/desktop/4965577f/cssbin/www-main-desktop-watch-page-skeleton.css&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/web-animations-next-lite.min.vflset/web-animations-next-lite.min.js&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/custom-elements-es5-adapter.vflset/custom-elements-es5-adapter.js&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/webcomponents-sd.vflset/webcomponents-sd.js&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/intersection-observer.min.vflset/intersection-observer.min.js&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/scheduler.vflset/scheduler.js&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/www-i18n-constants-en_GB.vflset/www-i18n-constants.js&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/www-tampering.vflset/www-tampering.js&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/spf.vflset/spf.js&#xA;https://www.youtube.com/s/desktop/4965577f/jsbin/network.vflset/network.js&#xA;https://www.youtube.com/howyoutubeworks/&#xA;https://www.youtube.com/trends/&#xA;https://www.youtube.com/jobs/&#xA;https://www.youtube.com/kids/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Crawling Mode&lt;/h2&gt; &#xA;&lt;h3&gt;Standard Mode&lt;/h3&gt; &#xA;&lt;p&gt;Standard crawling modality uses the standard go http library under the hood to handle HTTP requests/responses. This modality is much faster as it doesn&#39;t have the browser overhead. Still, it analyzes HTTP responses body as is, without any javascript or DOM rendering, potentially missing post-dom-rendered endpoints or asynchronous endpoint calls that might happen in complex web applications depending, for example, on browser-specific events.&lt;/p&gt; &#xA;&lt;h3&gt;Headless Mode&lt;/h3&gt; &#xA;&lt;p&gt;Headless mode hooks internal headless calls to handle HTTP requests/responses directly within the browser context. This offers two advantages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The HTTP fingerprint (TLS and user agent) fully identify the client as a legitimate browser&lt;/li&gt; &#xA; &lt;li&gt;Better coverage since the endpoints are discovered analyzing the standard raw response, as in the previous modality, and also the browser-rendered one with javascript enabled.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Headless crawling is optional and can be enabled using &lt;code&gt;-headless&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;Here are other headless CLI options -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;katana -h headless&#xA;&#xA;Flags:&#xA;HEADLESS:&#xA;   -hl, -headless       enable experimental headless hybrid crawling&#xA;   -sc, -system-chrome  use local installed chrome browser instead of katana installed&#xA;   -sb, -show-browser   show the browser on the screen with headless mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scope Control&lt;/h2&gt; &#xA;&lt;p&gt;Crawling can be endless if not scoped, as such katana comes with multiple support to define the crawl scope.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-field-scope&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Most handy option to define scope with predefined field name, &lt;code&gt;rdn&lt;/code&gt; being default option for field scope.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;rdn&lt;/code&gt; - crawling scoped to root domain name and all subdomains (default)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fqdn&lt;/code&gt; - crawling scoped to given sub(domain)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dn&lt;/code&gt; - crawling scoped to domain name keyword&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -fs dn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-crawl-scope&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For advanced scope control, &lt;code&gt;-cs&lt;/code&gt; option can be used that comes with &lt;strong&gt;regex&lt;/strong&gt; support.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -cs login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For multiple in scope rules, file input with multiline string / regex can be passed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cat in_scope.txt&#xA;&#xA;login/&#xA;admin/&#xA;app/&#xA;wordpress/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -cs in_scope.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-crawl-out-scope&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For defining what not to crawl, &lt;code&gt;-cos&lt;/code&gt; option can be used and also support &lt;strong&gt;regex&lt;/strong&gt; input.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -cos logout&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For multiple out of scope rules, file input with multiline string / regex can be passed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cat out_of_scope.txt&#xA;&#xA;/logout&#xA;/log_out&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -cos out_of_scope.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-no-scope&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Katana is default to scope &lt;code&gt;*.domain&lt;/code&gt;, to disable this &lt;code&gt;-ns&lt;/code&gt; option can be used and also to crawl the internet.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -ns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-display-out-scope&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;As default, when scope option is used, it also applies for the links to display as output, as such &lt;strong&gt;external URLs are default to exclude&lt;/strong&gt; and to overwrite this behavior, &lt;code&gt;-do&lt;/code&gt; option can be used to display all the external URLs that exist in targets scoped URL / Endpoint.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -do&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is all the CLI options for the scope control -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;katana -h scope&#xA;&#xA;Flags:&#xA;SCOPE:&#xA;   -cs, -crawl-scope string[]       in scope url regex to be followed by crawler&#xA;   -cos, -crawl-out-scope string[]  out of scope url regex to be excluded by crawler&#xA;   -fs, -field-scope string         pre-defined scope field (dn,rdn,fqdn) (default &#34;rdn&#34;)&#xA;   -ns, -no-scope                   disables host based default scope&#xA;   -do, -display-out-scope          display external endpoint from scoped crawling&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Crawler Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Katana comes with multiple options to configure and control the crawl as the way we want.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-depth&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Option to define the &lt;code&gt;depth&lt;/code&gt; to follow the urls for crawling, the more depth the more number of endpoint being crawled + time for crawl.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -d 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-js-crawl&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Option to enable JavaScript file parsing + crawling the endpoints discovered in JavaScript files, disabled as default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -jc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-crawl-duration&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Option to predefined crawl duration, disabled as default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -ct 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-known-files&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Option to enable crawling &lt;code&gt;robots.txt&lt;/code&gt; and &lt;code&gt;sitemap.xml&lt;/code&gt; file, disabled as default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -kf robotstxt,sitemapxml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-automatic-form-fill&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Option to enable automatic form filling for known / unknown fields, known field values can be customized as needed by updating form config file at &lt;code&gt;$HOME/.config/katana/form-config.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Automatic form filling is experimental feature.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   -aff, -automatic-form-fill  enable optional automatic form filling (experimental)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are more options to configure when needed, here is all the config related CLI options -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;katana -h config&#xA;&#xA;Flags:&#xA;CONFIGURATION:&#xA;   -d, -depth int                maximum depth to crawl (default 2)&#xA;   -jc, -js-crawl                enable endpoint parsing / crawling in javascript file&#xA;   -ct, -crawl-duration int      maximum duration to crawl the target for&#xA;   -kf, -known-files string      enable crawling of known files (all,robotstxt,sitemapxml)&#xA;   -mrs, -max-response-size int  maximum response size to read (default 2097152)&#xA;   -timeout int                  time to wait for request in seconds (default 10)&#xA;   -retry int                    number of times to retry the request (default 1)&#xA;   -proxy string                 http/socks5 proxy to use&#xA;   -H, -headers string[]         custom header/cookie to include in request&#xA;   -config string                path to the katana configuration file&#xA;   -fc, -form-config string      path to custom form configuration file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Filters&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-field&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Katana comes with build in fields that can be used to filter the output for the desired information, &lt;code&gt;-f&lt;/code&gt; option can be used to specify any of the available fields.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   -f, -field string  field to display in output (url,path,fqdn,rdn,rurl,qurl,qpath,file,key,value,kv,dir,udir)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is a table with examples of each field and expected output when used -&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;FIELD&lt;/th&gt; &#xA;   &lt;th&gt;DESCRIPTION&lt;/th&gt; &#xA;   &lt;th&gt;EXAMPLE&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;URL Endpoint&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://admin.projectdiscovery.io/admin/login?user=admin&amp;amp;password=admin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;qurl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;URL including query param&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://admin.projectdiscovery.io/admin/login.php?user=admin&amp;amp;password=admin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;qpath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path including query param&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/login?user=admin&amp;amp;password=admin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;URL Path&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://admin.projectdiscovery.io/admin/login&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;fqdn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fully Qualified Domain name&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;admin.projectdiscovery.io&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;rdn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root Domain name&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;projectdiscovery.io&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;rurl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://admin.projectdiscovery.io&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename in URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;login.php&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;key&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Parameter keys in URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;user,password&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;value&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Parameter values in URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;admin,admin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kv&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Keys=Values in URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;user=admin&amp;amp;password=admin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;URL Directory name&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/admin/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;udir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;URL with Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://admin.projectdiscovery.io/admin/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Here is an example of using field option to only display all the urls with query parameter in it -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -f qurl -silent&#xA;&#xA;https://shop.tesla.com/en_au?redirect=no&#xA;https://shop.tesla.com/en_nz?redirect=no&#xA;https://shop.tesla.com/product/men_s-raven-lightweight-zip-up-bomber-jacket?sku=1740250-00-A&#xA;https://shop.tesla.com/product/tesla-shop-gift-card?sku=1767247-00-A&#xA;https://shop.tesla.com/product/men_s-chill-crew-neck-sweatshirt?sku=1740176-00-A&#xA;https://www.tesla.com/about?redirect=no&#xA;https://www.tesla.com/about/legal?redirect=no&#xA;https://www.tesla.com/findus/list?redirect=no&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-store-field&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To compliment &lt;code&gt;field&lt;/code&gt; option which is useful to filter output at run time, there is &lt;code&gt;-sf, -store-fields&lt;/code&gt; option which works exactly like field option except instead of filtering, it stores all the information on the disk under &lt;code&gt;katana_output&lt;/code&gt; directory sorted by target url.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -sf key,fqdn,qurl -silent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls katana_output/&#xA;&#xA;https_www.tesla.com_fqdn.txt&#xA;https_www.tesla.com_key.txt&#xA;https_www.tesla.com_qurl.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;code&gt;store-field&lt;/code&gt; option can come handy to collect information to build a target aware wordlist for followings but not limited to -&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Most / commonly used &lt;strong&gt;parameters&lt;/strong&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Most / commonly used &lt;strong&gt;paths&lt;/strong&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Most / commonly &lt;strong&gt;files&lt;/strong&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Related / unknown &lt;strong&gt;sub(domains)&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Here are additonal filter options -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;   -f, -field string                field to display in output (url,path,fqdn,rdn,rurl,qurl,file,key,value,kv,dir,udir)&#xA;   -sf, -store-field string         field to store in per-host output (url,path,fqdn,rdn,rurl,qurl,file,key,value,kv,dir,udir)&#xA;   -em, -extension-match string[]   match output for given extension (eg, -em php,html,js)&#xA;   -ef, -extension-filter string[]  filter output for given extension (eg, -ef png,css)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Rate Limit &amp;amp; Delay&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s easy to get blocked / banned while crawling if not following target websites limits, katana comes with multiple option to tune the crawl to go as fast / slow we want.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-delay&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;option to introduce a delay in seconds between each new request katana makes while crawling, disabled as default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -delay 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-concurrency&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;option to control the number of urls per target to fetch at the same time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -c 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-parallelism&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;option to define number of target to process at same time from list input.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -p 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-rate-limit&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;option to use to define max number of request can go out per second.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -rl 100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-rate-limit-minute&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;option to use to define max number of request can go out per minute.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;katana -u https://tesla.com -rlm 500&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is all long / short CLI options for rate limit control -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;katana -h rate-limit&#xA;&#xA;Flags:&#xA;RATE-LIMIT:&#xA;   -c, -concurrency int          number of concurrent fetchers to use (default 10)&#xA;   -p, -parallelism int          number of concurrent inputs to process (default 10)&#xA;   -rd, -delay int               request delay between each request in seconds&#xA;   -rl, -rate-limit int          maximum requests to send per second (default 150)&#xA;   -rlm, -rate-limit-minute int  maximum number of requests to send per minute&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Output&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;code&gt;-json&lt;/code&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Katana support both file output in plain text format as well as JSON which includes additional information like, &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;tag&lt;/code&gt;, and &lt;code&gt;attribute&lt;/code&gt; name to co-related the discovered endpoint.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;katana -u https://example.com -json -do | jq .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;timestamp&#34;: &#34;2022-11-05T22:33:27.745815+05:30&#34;,&#xA;  &#34;endpoint&#34;: &#34;https://www.iana.org/domains/example&#34;,&#xA;  &#34;source&#34;: &#34;https://example.com&#34;,&#xA;  &#34;tag&#34;: &#34;a&#34;,&#xA;  &#34;attribute&#34;: &#34;href&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here are additional CLI options related to output -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;katana -h output&#xA;&#xA;OUTPUT:&#xA;   -o, -output string  file to write output to&#xA;   -j, -json           write output in JSONL(ines) format&#xA;   -nc, -no-color      disable output content coloring (ANSI escape codes)&#xA;   -silent             display output only&#xA;   -v, -verbose        display verbose output&#xA;   -version  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;katana is made with ‚ù§Ô∏è by the &lt;a href=&#34;https://projectdiscovery.io&#34;&gt;projectdiscovery&lt;/a&gt; team and distributed under &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/katana/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/projectdiscovery/nuclei-burp-plugin/main/static/join-discord.png&#34; width=&#34;300&#34; alt=&#34;Join Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>json-iterator/go</title>
    <updated>2022-11-10T01:33:32Z</updated>
    <id>tag:github.com,2022-11-10:/json-iterator/go</id>
    <link href="https://github.com/json-iterator/go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high-performance 100% compatible drop-in replacement of &#34;encoding/json&#34;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://sourcegraph.com/github.com/json-iterator/go?badge&#34;&gt;&lt;img src=&#34;https://sourcegraph.com/github.com/json-iterator/go/-/badge.svg?sanitize=true&#34; alt=&#34;Sourcegraph&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/json-iterator/go&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/go-documentation-blue.svg?style=flat-square&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/json-iterator/go&#34;&gt;&lt;img src=&#34;https://travis-ci.org/json-iterator/go.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/json-iterator/go&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/json-iterator/go/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/json-iterator/go&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/json-iterator/go&#34; alt=&#34;rcard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/json-iterator/go/master/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-mit-blue.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/json-iterator/Lobby&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/gitterHQ/gitter.png&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A high-performance 100% compatible drop-in replacement of &#34;encoding/json&#34;&lt;/p&gt; &#xA;&lt;h1&gt;Benchmark&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://jsoniter.com/benchmarks/go-benchmark.png&#34; alt=&#34;benchmark&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Source code: &lt;a href=&#34;https://github.com/json-iterator/go-benchmark/raw/master/src/github.com/json-iterator/go-benchmark/benchmark_medium_payload_test.go&#34;&gt;https://github.com/json-iterator/go-benchmark/blob/master/src/github.com/json-iterator/go-benchmark/benchmark_medium_payload_test.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Raw Result (easyjson requires static code generation)&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;ns/op&lt;/th&gt; &#xA;   &lt;th&gt;allocation bytes&lt;/th&gt; &#xA;   &lt;th&gt;allocation times&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;std decode&lt;/td&gt; &#xA;   &lt;td&gt;35510 ns/op&lt;/td&gt; &#xA;   &lt;td&gt;1960 B/op&lt;/td&gt; &#xA;   &lt;td&gt;99 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;easyjson decode&lt;/td&gt; &#xA;   &lt;td&gt;8499 ns/op&lt;/td&gt; &#xA;   &lt;td&gt;160 B/op&lt;/td&gt; &#xA;   &lt;td&gt;4 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jsoniter decode&lt;/td&gt; &#xA;   &lt;td&gt;5623 ns/op&lt;/td&gt; &#xA;   &lt;td&gt;160 B/op&lt;/td&gt; &#xA;   &lt;td&gt;3 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;std encode&lt;/td&gt; &#xA;   &lt;td&gt;2213 ns/op&lt;/td&gt; &#xA;   &lt;td&gt;712 B/op&lt;/td&gt; &#xA;   &lt;td&gt;5 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;easyjson encode&lt;/td&gt; &#xA;   &lt;td&gt;883 ns/op&lt;/td&gt; &#xA;   &lt;td&gt;576 B/op&lt;/td&gt; &#xA;   &lt;td&gt;3 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jsoniter encode&lt;/td&gt; &#xA;   &lt;td&gt;837 ns/op&lt;/td&gt; &#xA;   &lt;td&gt;384 B/op&lt;/td&gt; &#xA;   &lt;td&gt;4 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Always benchmark with your own workload. The result depends heavily on the data input.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;100% compatibility with standard lib&lt;/p&gt; &#xA;&lt;p&gt;Replace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;encoding/json&#34;&#xA;json.Marshal(&amp;amp;data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import jsoniter &#34;github.com/json-iterator/go&#34;&#xA;&#xA;var json = jsoniter.ConfigCompatibleWithStandardLibrary&#xA;json.Marshal(&amp;amp;data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;encoding/json&#34;&#xA;json.Unmarshal(input, &amp;amp;data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import jsoniter &#34;github.com/json-iterator/go&#34;&#xA;&#xA;var json = jsoniter.ConfigCompatibleWithStandardLibrary&#xA;json.Unmarshal(input, &amp;amp;data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://jsoniter.com/migrate-from-go-std.html&#34;&gt;More documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to get&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/json-iterator/go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contribution Welcomed !&lt;/h1&gt; &#xA;&lt;p&gt;Contributors&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thockin&#34;&gt;thockin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mattn&#34;&gt;mattn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cch123&#34;&gt;cch123&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/olegshaldybin&#34;&gt;Oleg Shaldybin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/toffaletti&#34;&gt;Jason Toffaletti&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Report issue or pull request, or email &lt;a href=&#34;mailto:taowen@gmail.com&#34;&gt;taowen@gmail.com&lt;/a&gt;, or &lt;a href=&#34;https://gitter.im/json-iterator/Lobby&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/gitterHQ/gitter.png&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>