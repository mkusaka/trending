<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-26T01:36:54Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kubescape/kubescape</title>
    <updated>2022-08-26T01:36:54Z</updated>
    <id>tag:github.com,2022-08-26:/kubescape/kubescape</id>
    <link href="https://github.com/kubescape/kubescape" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kubescape is a K8s open-source tool providing a multi-cloud K8s single pane of glass, including risk analysis, security compliance, RBAC visualizer and image vulnerabilities scanning.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/kubescape.png&#34; width=&#34;300&#34; alt=&#34;logo&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubescape/kubescape/actions/workflows/build.yaml&#34;&gt;&lt;img src=&#34;https://github.com/kubescape/kubescape/actions/workflows/build.yaml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/kubescape/kubescape&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/kubescape/kubescape&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üòé&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#being-a-part-of-the-team&#34;&gt;Want to contribute?&lt;/a&gt; &lt;span&gt;üòá&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Kubescape is a K8s open-source tool providing a Kubernetes single pane of glass, including risk analysis, security compliance, RBAC visualizer, and image vulnerabilities scanning. Kubescape scans K8s clusters, YAML files, and HELM charts, detecting misconfigurations according to multiple frameworks (such as the &lt;a href=&#34;https://www.armosec.io/blog/kubernetes-hardening-guidance-summary-by-armo/?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;NSA-CISA&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/security/blog/2021/03/23/secure-containerized-environments-with-updated-threat-matrix-for-kubernetes/&#34;&gt;MITRE ATT&amp;amp;CK¬Æ&lt;/a&gt;), software vulnerabilities, and RBAC (role-based-access-control) violations at early stages of the CI/CD pipeline, calculates risk score instantly and shows risk trends over time.&lt;/p&gt; &#xA;&lt;p&gt;It has become one of the fastest-growing Kubernetes tools among developers due to its easy-to-use CLI interface, flexible output formats, and automated scanning capabilities, saving Kubernetes users and admins precious time, effort, and resources. Kubescape integrates natively with other DevOps tools, including Jenkins, CircleCI, Github workflows, Prometheus, and Slack, and supports multi-cloud K8s deployments like EKS, GKE, and AKS.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Kubescape CLI:&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/demo.gif&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;TL;DR&lt;/h1&gt; &#xA;&lt;h2&gt;Install:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#install-on-windows&#34;&gt;Install on windows&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#install-on-macos&#34;&gt;Install on macOS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#install-on-nixos-or-with-nix-community&#34;&gt;Install on NixOS or Linux/macOS via nix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#install-using-go&#34;&gt;Install using Go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubescape scan --submit --enable-host-scan --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/summary.png&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kubescape is an open source project. We welcome your feedback and ideas for improvement. We‚Äôre also aiming to collaborate with the Kubernetes community to help make the tests more robust and complete as Kubernetes develops.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Click &lt;a href=&#34;https://github.com/kubescape/kubescape/stargazers&#34;&gt;üëç&lt;/a&gt; if you want us to continue to develop and improve Kubescape üòÄ&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Being a part of the team&lt;/h1&gt; &#xA;&lt;p&gt;We invite you to our team! We are excited about this project and want to return the love we get.&lt;/p&gt; &#xA;&lt;p&gt;Want to contribute? Want to discuss something? Have an issue?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Feel free to pick a task from the &lt;a href=&#34;https://github.com/kubescape/kubescape/issues?q=is%3Aissue+is%3Aopen+label%3A%22open+for+contribution%22&#34;&gt;issues&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/roadmap.md&#34;&gt;roadmap&lt;/a&gt; or suggest a feature of your own. &lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/MAINTAINERS.md&#34;&gt;Contact us&lt;/a&gt; directly for more information :)&lt;/li&gt; &#xA; &lt;li&gt;Open an issue, we are trying to respond within 48 hours&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/invite/WKZRaCtBxN&#34;&gt;Join us&lt;/a&gt; in the discussion on our discord server!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/WKZRaCtBxN&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/discord-banner.png&#34; width=&#34;100&#34; alt=&#34;logo&#34; align=&#34;center&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/discord/893048809884643379&#34; alt=&#34;discord&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Options and examples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.armosec.io/docs?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Kubescape docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Playground&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://killercoda.com/saiyampathak/scenario/kubescape&#34;&gt;Kubescape playground&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/wdBkt_0Qhbg&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ZATGiDIDBQk&#34;&gt;How To Secure Kubernetes Clusters With Kubescape And Armo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/Ox6DaR7_4ZI&#34;&gt;Scan Kubernetes YAML files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/IGXL9s37smM&#34;&gt;Scan Kubescape on an air-gapped environment (offline support)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/OzpvxGmCR80&#34;&gt;Managing exceptions in the Kubescape SaaS version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/12Sanq_rEhs&#34;&gt;Configure and run customized frameworks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Customize control configurations. &lt;a href=&#34;https://youtu.be/955psg6TVu4&#34;&gt;Kubescape CLI&lt;/a&gt;, &lt;a href=&#34;https://youtu.be/lIMVSVhH33o&#34;&gt;Kubescape SaaS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install on Windows&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Windows&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Requires powershell v5.0+&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;iwr -useb https://raw.githubusercontent.com/kubescape/kubescape/master/install.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Note: if you get an error you might need to change the execution policy (i.e. enable Powershell) with&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy RemoteSigned -scope CurrentUser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Install on macOS&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;MacOS&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt; brew tap kubescape/tap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt; brew install kubescape-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Install on NixOS or with nix (Community)&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Nix/NixOS&lt;/summary&gt; &#xA; &lt;p&gt;Direct issues installing &lt;code&gt;kubescape&lt;/code&gt; via &lt;code&gt;nix&lt;/code&gt; through the channels mentioned &lt;a href=&#34;https://nixos.wiki/wiki/Support&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;You can use &lt;code&gt;nix&lt;/code&gt; on Linux or macOS and on other platforms unofficially.&lt;/p&gt; &#xA; &lt;p&gt;Try it out in an ephemeral shell: &lt;code&gt;nix-shell -p kubescape&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Install declarative as usual&lt;/p&gt; &#xA; &lt;p&gt;NixOS:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;  # your other config ...&#xA;  environment.systemPackages = with pkgs; [&#xA;    # your other packages ...&#xA;    kubescape&#xA;  ];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;home-manager:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;  # your other config ...&#xA;  home.packages = with pkgs; [&#xA;    # your other packages ...&#xA;    kubescape&#xA;  ];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or to your profile (not preferred): &lt;code&gt;nix-env --install -A nixpkgs.kubescape&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage &amp;amp; Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Scan a running Kubernetes cluster and submit results to the &lt;a href=&#34;https://cloud.armosec.io?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Kubescape SaaS version&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --submit --enable-host-scan  --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Read &lt;a href=&#34;https://hub.armosec.io/docs/host-sensor?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;here&lt;/a&gt; more about the &lt;code&gt;enable-host-scan&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Scan a running Kubernetes cluster with &lt;a href=&#34;https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/2716980/nsa-cisa-release-kubernetes-hardening-guidance/&#34;&gt;&lt;code&gt;nsa&lt;/code&gt;&lt;/a&gt; framework and submit results to the &lt;a href=&#34;https://cloud.armosec.io?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Kubescape SaaS version&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan framework nsa --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan a running Kubernetes cluster with &lt;a href=&#34;https://www.microsoft.com/security/blog/2021/03/23/secure-containerized-environments-with-updated-threat-matrix-for-kubernetes/&#34;&gt;&lt;code&gt;MITRE ATT&amp;amp;CK¬Æ&lt;/code&gt;&lt;/a&gt; framework and submit results to the &lt;a href=&#34;https://cloud.armosec.io?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Kubescape SaaS version&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan framework mitre --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan a running Kubernetes cluster with a specific control using the control name or control ID. &lt;a href=&#34;https://hub.armosec.io/docs/controls?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;List of controls&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan control &#34;Privileged container&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan specific namespaces&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --include-namespaces development,staging,production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan cluster and exclude some namespaces&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --exclude-namespaces kube-system,kube-public&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan local &lt;code&gt;yaml&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt; files before deploying. &lt;a href=&#34;https://youtu.be/Ox6DaR7_4ZI&#34;&gt;Take a look at the demonstration&lt;/a&gt; Submit the results in case the directory is a git repo. &lt;a href=&#34;https://hub.armosec.io/docs/repository-scanning?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;docs&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan *.yaml --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan kubernetes manifest files from a git repository &lt;a href=&#34;https://hub.armosec.io/docs/repository-scanning?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;and submit the results&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan https://github.com/kubescape/kubescape --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Display all scanned resources (including the resources which passed)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output in &lt;code&gt;json&lt;/code&gt; format&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Add the &lt;code&gt;--format-version v2&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --format json --format-version v2 --output results.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output in &lt;code&gt;junit xml&lt;/code&gt; format&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --format junit --output results.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output in &lt;code&gt;pdf&lt;/code&gt; format - Contributed by &lt;a href=&#34;https://github.com/alegrey91&#34;&gt;@alegrey91&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --format pdf --output results.pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output in &lt;code&gt;prometheus&lt;/code&gt; metrics format - Contributed by &lt;a href=&#34;https://github.com/Joibel&#34;&gt;@Joibel&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --format prometheus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan with exceptions, objects with exceptions will be presented as &lt;code&gt;exclude&lt;/code&gt; and not &lt;code&gt;fail&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/examples/exceptions/README.md&#34;&gt;Full documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --exceptions examples/exceptions/exclude-kube-namespaces.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan Helm charts&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan &amp;lt;/path/to/directory&amp;gt; --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kubescape will load the default value file&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Offline/Air-gaped Environment Support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/IGXL9s37smM&#34;&gt;Video tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is possible to run Kubescape offline!&lt;/p&gt; &#xA;&lt;h4&gt;Download all artifacts&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and save in local directory, if path not specified, will save all in &lt;code&gt;~/.kubescape&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape download artifacts --output path/to/local/dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the downloaded artifacts to the air-gaped/offline environment&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scan using the downloaded artifacts&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --use-artifacts-from path/to/local/dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download a single artifact&lt;/h4&gt; &#xA;&lt;p&gt;You can also download a single artifact and scan with the &lt;code&gt;--use-from&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and save in file, if file name is not specified, will save in &lt;code&gt;~/.kubescape/&amp;lt;framework name&amp;gt;.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape download framework nsa --output /path/nsa.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the downloaded artifacts to the air-gaped/offline environment&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scan using the downloaded framework&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan framework nsa --use-from /path/nsa.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scan Periodically using Helm&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.armosec.io/docs/installation-of-armo-in-cluster?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Please follow the instructions here&lt;/a&gt; &lt;a href=&#34;https://github.com/armosec/armo-helm&#34;&gt;helm chart repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Integrations&lt;/h1&gt; &#xA;&lt;h2&gt;VS Code Extension&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/d/kubescape.kubescape?label=VScode&#34; alt=&#34;Visual Studio Marketplace Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/open-vsx/dt/kubescape/kubescape?label=openVSX&amp;amp;color=yellowgreen&#34; alt=&#34;Open VSX&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scan the YAML files while writing them using the &lt;a href=&#34;https://github.com/armosec/vscode-kubescape/raw/master/README.md&#34;&gt;vs code extension&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lens Extension&lt;/h2&gt; &#xA;&lt;p&gt;View Kubescape scan results directly in &lt;a href=&#34;https://k8slens.dev/&#34;&gt;Lens IDE&lt;/a&gt; using kubescape &lt;a href=&#34;https://github.com/armosec/lens-kubescape/raw/master/README.md&#34;&gt;Lens extension&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building Kubescape&lt;/h1&gt; &#xA;&lt;h2&gt;Build on Windows&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Windows&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Install MSYS2 &amp;amp; build libgit &lt;em&gt;(needed only for the first time)&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;build.bat all&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;You can install MSYS2 separately by running &lt;code&gt;build.bat install&lt;/code&gt; and build libgit2 separately by running &lt;code&gt;build.bat build&lt;/code&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build kubescape&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;OR&lt;/p&gt; &lt;pre&gt;&lt;code&gt;go build -tags=static .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Build on Linux/MacOS&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Linux / MacOS&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Install libgit2 dependency &lt;em&gt;(needed only for the first time)&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make libgit2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;code&gt;cmake&lt;/code&gt; is required to build libgit2. You can install it by running &lt;code&gt;sudo apt-get install cmake&lt;/code&gt; (Linux) or &lt;code&gt;brew install cmake&lt;/code&gt; (macOS)&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build kubescape&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;OR&lt;/p&gt; &lt;pre&gt;&lt;code&gt;go build -tags=static .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Test&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;VS code configuration samples&lt;/h2&gt; &#xA;&lt;p&gt;You can use the sample files below to setup your VS code environment for building and debugging purposes.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;.vscode/settings.json&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;// .vscode/settings.json&#xA;{&#xA;    &#34;go.testTags&#34;: &#34;static&#34;,&#xA;    &#34;go.buildTags&#34;: &#34;static&#34;,&#xA;    &#34;go.toolsEnvVars&#34;: {&#xA;        &#34;CGO_ENABLED&#34;: &#34;1&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;.vscode/launch.json&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;// .vscode/launch.json&#xA;{&#xA;    &#34;version&#34;: &#34;0.2.0&#34;,&#xA;    &#34;configurations&#34;: [&#xA;        {&#xA;            &#34;name&#34;: &#34;Launch Package&#34;,&#xA;            &#34;type&#34;: &#34;go&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;mode&#34;: &#34;auto&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/main.go&#34;,&#xA;            &#34;args&#34;: [&#xA;                &#34;scan&#34;,&#xA;                &#34;--logger&#34;,&#xA;                &#34;debug&#34;&#xA;            ],&#xA;            &#34;buildFlags&#34;: &#34;-tags=static&#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Under the hood&lt;/h1&gt; &#xA;&lt;h2&gt;Technology&lt;/h2&gt; &#xA;&lt;p&gt;Kubescape is based on the &lt;a href=&#34;https://github.com/open-policy-agent/opa&#34;&gt;OPA engine&lt;/a&gt; and ARMO&#39;s posture controls.&lt;/p&gt; &#xA;&lt;p&gt;The tools retrieve Kubernetes objects from the API server and run a set of &lt;a href=&#34;https://www.openpolicyagent.org/docs/latest/policy-language/&#34;&gt;rego&#39;s snippets&lt;/a&gt; developed by &lt;a href=&#34;https://www.armosec.io?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;ARMO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The results by default are printed in a pretty &#34;console friendly&#34; manner, but they can be retrieved in JSON format for further processing.&lt;/p&gt; &#xA;&lt;p&gt;Kubescape is an open source project, we welcome your feedback and ideas for improvement. We‚Äôre also aiming to collaborate with the Kubernetes community to help make the tests more robust and complete as Kubernetes develops.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks to all the contributors ‚ù§Ô∏è&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/kubescape/kubescape/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=kubescape/kubescape&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>hyperledger/fabric</title>
    <updated>2022-08-26T01:36:54Z</updated>
    <id>tag:github.com,2022-08-26:/hyperledger/fabric</id>
    <link href="https://github.com/hyperledger/fabric" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hyperledger Fabric is an enterprise-grade permissioned distributed ledger framework for developing solutions and applications. Its modular and versatile design satisfies a broad range of industry use cases. It offers a unique approach to consensus that enables performance at scale while preserving privacy.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hyperledger Fabric&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/Hyperledger/Fabric/_build/latest?definitionId=51&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/Hyperledger/Fabric/_apis/build/status/Merge?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/955&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/955/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/hyperledger/fabric&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/hyperledger/fabric&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/hyperledger/fabric&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/hyperledger/fabric?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/hyperledger-fabric/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is a &lt;em&gt;Graduated&lt;/em&gt; Hyperledger project. For more information on the history of this project see the &lt;a href=&#34;https://wiki.hyperledger.org/display/fabric&#34;&gt;Fabric wiki page&lt;/a&gt;. Information on what &lt;em&gt;Graduated&lt;/em&gt; entails can be found in the &lt;a href=&#34;https://tsc.hyperledger.org/project-lifecycle.html&#34;&gt;Hyperledger Project Lifecycle document&lt;/a&gt;. Hyperledger Fabric is a platform for distributed ledger solutions, underpinned by a modular architecture delivering high degrees of confidentiality, resiliency, flexibility and scalability. It is designed to support pluggable implementations of different components, and accommodate the complexity and intricacies that exist across the economic ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;Hyperledger Fabric delivers a uniquely elastic and extensible architecture, distinguishing it from alternative blockchain solutions. Planning for the future of enterprise blockchain requires building on top of a fully-vetted, open source architecture; Hyperledger Fabric is your starting point.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Fabric provides a release approximately once every four months with new features and improvements. Additionally, certain releases are designated as long-term support (LTS) releases. Important fixes will be backported to the most recent LTS release, and to the prior LTS release during periods of LTS release overlap. For more details see the &lt;a href=&#34;https://github.com/hyperledger/fabric-rfcs/raw/main/text/0005-lts-release-strategy.md&#34;&gt;LTS strategy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;LTS releases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/release-2.2/whatsnew.html&#34;&gt;v2.2.x&lt;/a&gt; (current LTS release)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/release-1.4/whatsnew.html&#34;&gt;v1.4.x&lt;/a&gt; (prior LTS release, maintained through April 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unless specified otherwise, all releases will be upgradable from the prior minor release. Additionally, each LTS release is upgradable to the next LTS release.&lt;/p&gt; &#xA;&lt;p&gt;Fabric releases and release notes can be found on the &lt;a href=&#34;https://github.com/hyperledger/fabric/releases&#34;&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please visit the &lt;a href=&#34;https://github.com/hyperledger/fabric/labels/Epic&#34;&gt;GitHub issues with Epic label&lt;/a&gt; for our release roadmap.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation, Getting Started and Developer Guides&lt;/h2&gt; &#xA;&lt;p&gt;Please visit our online documentation for information on getting started using and developing with the fabric, SDK and chaincode:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-2.4/&#34;&gt;v2.4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-2.3/&#34;&gt;v2.3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-2.2/&#34;&gt;v2.2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-2.1/&#34;&gt;v2.1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-2.0/&#34;&gt;v2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-1.4/&#34;&gt;v1.4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-1.3/&#34;&gt;v1.3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-1.2/&#34;&gt;v1.2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/release-1.1/&#34;&gt;v1.1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/latest/&#34;&gt;main branch (development)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s recommended for first-time users to begin by going through the Getting Started section of the documentation in order to gain familiarity with the Hyperledger Fabric components and the basic transaction flow.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to the Hyperledger Fabric project in many forms. There‚Äôs always plenty to do! Check &lt;a href=&#34;http://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html&#34;&gt;the documentation on how to contribute to this project&lt;/a&gt; for the full details.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.hyperledger.org/community&#34;&gt;Hyperledger Community&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://lists.hyperledger.org/&#34;&gt;Hyperledger mailing lists and archives&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/hyperledger&#34;&gt;Hyperledger Discord Chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hyperledger/fabric/issues&#34;&gt;Hyperledger Fabric Issue Tracking (GitHub Issues)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.hyperledger.org/display/Fabric&#34;&gt;Hyperledger Fabric Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.hyperledger.org/&#34;&gt;Hyperledger Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.hyperledger.org/display/HYP/Hyperledger+Code+of+Conduct&#34;&gt;Hyperledger Code of Conduct&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings&#34;&gt;Community Calendar&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License &lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Hyperledger Project source code files are made available under the Apache License, Version 2.0 (Apache-2.0), located in the &lt;a href=&#34;https://raw.githubusercontent.com/hyperledger/fabric/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file. Hyperledger Project documentation files are made available under the Creative Commons Attribution 4.0 International License (CC-BY-4.0), available at &lt;a href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;http://creativecommons.org/licenses/by/4.0/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>stakater/Reloader</title>
    <updated>2022-08-26T01:36:54Z</updated>
    <id>tag:github.com,2022-08-26:/stakater/Reloader</id>
    <link href="https://github.com/stakater/Reloader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Kubernetes controller to watch changes in ConfigMap and Secrets and do rolling upgrades on Pods with their associated Deployment, StatefulSet, DaemonSet and DeploymentConfig ‚Äì [‚ú©Star] if you&#39;re using it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stakater/Reloader/master/assets/web/reloader-round-100px.png&#34; alt=&#34;&#34;&gt; RELOADER&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/stakater/reloader&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/stakater/reloader?style=flat-square&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://godoc.org/github.com/stakater/reloader&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/godoc-reference-blue.svg?style=flat-square&#34; alt=&#34;Go Doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stakater/reloader/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/stakater/reloader.svg?style=flat-square&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stakater/reloader/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/stakater/reloader.svg?style=flat-square&#34; alt=&#34;GitHub tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/stakater/reloader/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/stakater/reloader.svg?style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/stakater/reloader/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/stakater/reloader.svg?style=flat-square&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/stakater/Reloader/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/stakater/reloader.svg?style=flat-square&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stakater.com/?utm_source=Reloader&amp;amp;utm_medium=github&#34;&gt;&lt;img src=&#34;https://stakater.github.io/README/stakater-github-banner.png&#34; alt=&#34;Get started with Stakater&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Problem&lt;/h2&gt; &#xA;&lt;p&gt;We would like to watch if some change happens in &lt;code&gt;ConfigMap&lt;/code&gt; and/or &lt;code&gt;Secret&lt;/code&gt;; then perform a rolling upgrade on relevant &lt;code&gt;DeploymentConfig&lt;/code&gt;, &lt;code&gt;Deployment&lt;/code&gt;, &lt;code&gt;Daemonset&lt;/code&gt;, &lt;code&gt;Statefulset&lt;/code&gt; and &lt;code&gt;Rollout&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Solution&lt;/h2&gt; &#xA;&lt;p&gt;Reloader can watch changes in &lt;code&gt;ConfigMap&lt;/code&gt; and &lt;code&gt;Secret&lt;/code&gt; and do rolling upgrades on Pods with their associated &lt;code&gt;DeploymentConfigs&lt;/code&gt;, &lt;code&gt;Deployments&lt;/code&gt;, &lt;code&gt;Daemonsets&lt;/code&gt; &lt;code&gt;Statefulsets&lt;/code&gt; and &lt;code&gt;Rollouts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Reloader is compatible with kubernetes &amp;gt;= 1.9&lt;/p&gt; &#xA;&lt;h2&gt;How to use Reloader&lt;/h2&gt; &#xA;&lt;p&gt;For a &lt;code&gt;Deployment&lt;/code&gt; called &lt;code&gt;foo&lt;/code&gt; have a &lt;code&gt;ConfigMap&lt;/code&gt; called &lt;code&gt;foo-configmap&lt;/code&gt; or &lt;code&gt;Secret&lt;/code&gt; called &lt;code&gt;foo-secret&lt;/code&gt; or both. Then add your annotation (by default &lt;code&gt;reloader.stakater.com/auto&lt;/code&gt;) to main metadata of your &lt;code&gt;Deployment&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: Deployment&#xA;metadata:&#xA;  annotations:&#xA;    reloader.stakater.com/auto: &#34;true&#34;&#xA;spec:&#xA;  template:&#xA;    metadata:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will discover deploymentconfigs/deployments/daemonsets/statefulset/rollouts automatically where &lt;code&gt;foo-configmap&lt;/code&gt; or &lt;code&gt;foo-secret&lt;/code&gt; is being used either via environment variable or from volume mount. And it will perform rolling upgrade on related pods when &lt;code&gt;foo-configmap&lt;/code&gt; or &lt;code&gt;foo-secret&lt;/code&gt;are updated.&lt;/p&gt; &#xA;&lt;p&gt;You can restrict this discovery to only &lt;code&gt;ConfigMap&lt;/code&gt; or &lt;code&gt;Secret&lt;/code&gt; objects that are tagged with a special annotation. To take advantage of that, annotate your deploymentconfigs/deployments/daemonsets/statefulset/rollouts like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: Deployment&#xA;metadata:&#xA;  annotations:&#xA;    reloader.stakater.com/search: &#34;true&#34;&#xA;spec:&#xA;  template:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and Reloader will trigger the rolling upgrade upon modification of any &lt;code&gt;ConfigMap&lt;/code&gt; or &lt;code&gt;Secret&lt;/code&gt; annotated like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: ConfigMap&#xA;metadata:&#xA;  annotations:&#xA;    reloader.stakater.com/match: &#34;true&#34;&#xA;data:&#xA;  key: value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;provided the secret/configmap is being used in an environment variable, or a volume mount.&lt;/p&gt; &#xA;&lt;p&gt;Please note that &lt;code&gt;reloader.stakater.com/search&lt;/code&gt; and &lt;code&gt;reloader.stakater.com/auto&lt;/code&gt; do not work together. If you have the &lt;code&gt;reloader.stakater.com/auto: &#34;true&#34;&lt;/code&gt; annotation on your deployment, then it will always restart upon a change in configmaps or secrets it uses, regardless of whether they have the &lt;code&gt;reloader.stakater.com/match: &#34;true&#34;&lt;/code&gt; annotation or not.&lt;/p&gt; &#xA;&lt;p&gt;We can also specify a specific configmap or secret which would trigger rolling upgrade only upon change in our specified configmap or secret, this way, it will not trigger rolling upgrade upon changes in all configmaps or secrets used in a deploymentconfig, deployment, daemonset, statefulset or rollout. To do this either set the auto annotation to &lt;code&gt;&#34;false&#34;&lt;/code&gt; (&lt;code&gt;reloader.stakater.com/auto: &#34;false&#34;&lt;/code&gt;) or remove it altogether, and use annotations mentioned &lt;a href=&#34;https://raw.githubusercontent.com/stakater/Reloader/master/#Configmap&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/stakater/Reloader/master/#Secret&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configmap&lt;/h3&gt; &#xA;&lt;p&gt;To perform rolling upgrade when change happens only on specific configmaps use below annotation.&lt;/p&gt; &#xA;&lt;p&gt;For a &lt;code&gt;Deployment&lt;/code&gt; called &lt;code&gt;foo&lt;/code&gt; have a &lt;code&gt;ConfigMap&lt;/code&gt; called &lt;code&gt;foo-configmap&lt;/code&gt;. Then add this annotation to main metadata of your &lt;code&gt;Deployment&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: Deployment&#xA;metadata:&#xA;  annotations:&#xA;    configmap.reloader.stakater.com/reload: &#34;foo-configmap&#34;&#xA;spec:&#xA;  template:&#xA;    metadata:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use comma separated list to define multiple configmaps.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: Deployment&#xA;metadata:&#xA;  annotations:&#xA;    configmap.reloader.stakater.com/reload: &#34;foo-configmap,bar-configmap,baz-configmap&#34;&#xA;spec:&#xA;  template: &#xA;    metadata:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Secret&lt;/h3&gt; &#xA;&lt;p&gt;To perform rolling upgrade when change happens only on specific secrets use below annotation.&lt;/p&gt; &#xA;&lt;p&gt;For a &lt;code&gt;Deployment&lt;/code&gt; called &lt;code&gt;foo&lt;/code&gt; have a &lt;code&gt;Secret&lt;/code&gt; called &lt;code&gt;foo-secret&lt;/code&gt;. Then add this annotation to main metadata of your &lt;code&gt;Deployment&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: Deployment&#xA;metadata:&#xA;  annotations:&#xA;    secret.reloader.stakater.com/reload: &#34;foo-secret&#34;&#xA;spec:&#xA;  template: &#xA;    metadata:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use comma separated list to define multiple secrets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: Deployment&#xA;metadata:&#xA;  annotations:&#xA;    secret.reloader.stakater.com/reload: &#34;foo-secret,bar-secret,baz-secret&#34;&#xA;spec:&#xA;  template: &#xA;    metadata:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;NOTES&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reloader also supports &lt;a href=&#34;https://github.com/bitnami-labs/sealed-secrets&#34;&gt;sealed-secrets&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/stakater/Reloader/master/docs/Reloader-with-Sealed-Secrets.md&#34;&gt;Here&lt;/a&gt; are the steps to use sealed-secrets with reloader.&lt;/li&gt; &#xA; &lt;li&gt;For &lt;a href=&#34;https://github.com/argoproj/argo-rollouts/&#34;&gt;rollouts&lt;/a&gt; reloader simply triggers a change is up to you how you configure the rollout strategy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;reloader.stakater.com/auto: &#34;true&#34;&lt;/code&gt; will only reload the pod, if the configmap or secret is used (as a volume mount or as an env) in &lt;code&gt;DeploymentConfigs/Deployment/Daemonsets/Statefulsets&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;secret.reloader.stakater.com/reload&lt;/code&gt; or &lt;code&gt;configmap.reloader.stakater.com/reload&lt;/code&gt; annotation will reload the pod upon changes in specified configmap or secret, irrespective of the usage of configmap or secret.&lt;/li&gt; &#xA; &lt;li&gt;you may override the auto annotation with the &lt;code&gt;--auto-annotation&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;you may override the search annotation with the &lt;code&gt;--auto-search-annotation&lt;/code&gt; flag and the match annotation with the &lt;code&gt;--search-match-annotation&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;you may override the configmap annotation with the &lt;code&gt;--configmap-annotation&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;you may override the secret annotation with the &lt;code&gt;--secret-annotation&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;you may want to prevent watching certain namespaces with the &lt;code&gt;--namespaces-to-ignore&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;you may want to prevent watching certain resources with the &lt;code&gt;--resources-to-ignore&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;you can configure logging in JSON format with the &lt;code&gt;--log-format=json&lt;/code&gt; option&lt;/li&gt; &#xA; &lt;li&gt;you can configure the &#34;reload strategy&#34; with the &lt;code&gt;--reload-strategy=&amp;lt;strategy-name&amp;gt;&lt;/code&gt; option (details below)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reload Strategies&lt;/h2&gt; &#xA;&lt;p&gt;Reloader supports multiple &#34;reload&#34; strategies for performing rolling upgrades to resources. The following list describes them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;env-vars&lt;/strong&gt;: When a tracked &lt;code&gt;configMap&lt;/code&gt;/&lt;code&gt;secret&lt;/code&gt; is updated, this strategy attaches a Reloader specific environment variable to any containers referencing the changed &lt;code&gt;configMap&lt;/code&gt; or &lt;code&gt;secret&lt;/code&gt; on the owning resource (e.g., &lt;code&gt;Deployment&lt;/code&gt;, &lt;code&gt;StatefulSet&lt;/code&gt;, etc.). This strategy can be specified with the &lt;code&gt;--reload-strategy=env-vars&lt;/code&gt; argument. Note: This is the default reload strategy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;annotations&lt;/strong&gt;: When a tracked &lt;code&gt;configMap&lt;/code&gt;/&lt;code&gt;secret&lt;/code&gt; is updated, this strategy attaches a &lt;code&gt;reloader.stakater.com/last-reloaded-from&lt;/code&gt; pod template annotation on the owning resource (e.g., &lt;code&gt;Deployment&lt;/code&gt;, &lt;code&gt;StatefulSet&lt;/code&gt;, etc.). This strategy is useful when using resource syncing tools like ArgoCD, since it will not cause these tools to detect configuration drift after a resource is reloaded. Note: Since the attached pod template annotation only tracks the last reload source, this strategy will reload any tracked resource should its &lt;code&gt;configMap&lt;/code&gt; or &lt;code&gt;secret&lt;/code&gt; be deleted and recreated. This strategy can be specified with the &lt;code&gt;--reload-strategy=annotations&lt;/code&gt; argument.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploying to Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;You can deploy Reloader by following methods:&lt;/p&gt; &#xA;&lt;h3&gt;Vanilla Manifests&lt;/h3&gt; &#xA;&lt;p&gt;You can apply vanilla manifests by changing &lt;code&gt;RELEASE-NAME&lt;/code&gt; placeholder provided in manifest with a proper value and apply it by running the command given below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/stakater/Reloader/master/deployments/kubernetes/reloader.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, Reloader gets deployed in &lt;code&gt;default&lt;/code&gt; namespace and watches changes &lt;code&gt;secrets&lt;/code&gt; and &lt;code&gt;configmaps&lt;/code&gt; in all namespaces.&lt;/p&gt; &#xA;&lt;p&gt;Reloader can be configured to ignore the resources &lt;code&gt;secrets&lt;/code&gt; and &lt;code&gt;configmaps&lt;/code&gt; by passing the following args (&lt;code&gt;spec.template.spec.containers.args&lt;/code&gt;) to its container :&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Args&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--resources-to-ignore=configMaps&lt;/td&gt; &#xA;   &lt;td&gt;To ignore configMaps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--resources-to-ignore=secrets&lt;/td&gt; &#xA;   &lt;td&gt;To ignore secrets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;Note&lt;/code&gt;: At one time only one of these resource can be ignored, trying to do it will cause error in Reloader. Workaround for ignoring both resources is by scaling down the reloader pods to &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Vanilla kustomize&lt;/h3&gt; &#xA;&lt;p&gt;You can also apply the vanilla manifests by running the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -k https://github.com/stakater/Reloader/deployments/kubernetes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Similarly to vanilla manifests get deployed in &lt;code&gt;default&lt;/code&gt; namespace and watches changes &lt;code&gt;secrets&lt;/code&gt; and &lt;code&gt;configmaps&lt;/code&gt; in all namespaces.&lt;/p&gt; &#xA;&lt;h3&gt;Kustomize&lt;/h3&gt; &#xA;&lt;p&gt;You can write your own &lt;code&gt;kustomization.yaml&lt;/code&gt; using ours as a &#39;base&#39; and write patches to tweak the configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: kustomize.config.k8s.io/v1beta1&#xA;kind: Kustomization&#xA;&#xA;bases:&#xA;  - https://github.com/stakater/Reloader/deployments/kubernetes&#xA;&#xA;namespace: reloader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Helm Charts&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively if you have configured helm on your cluster, you can add reloader to helm from our public chart repository and deploy it via helm using below mentioned commands. Follow &lt;a href=&#34;https://raw.githubusercontent.com/stakater/Reloader/master/docs/Helm2-to-Helm3.md&#34;&gt;this&lt;/a&gt; guide, in case you have trouble migrating reloader from Helm2 to Helm3&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;helm repo add stakater https://stakater.github.io/stakater-charts&#xA;&#xA;helm repo update&#xA;&#xA;helm install stakater/reloader # For helm3 add --generate-name flag or set the release name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; By default reloader watches in all namespaces. To watch in single namespace, please run following command. It will install reloader in &lt;code&gt;test&lt;/code&gt; namespace which will only watch &lt;code&gt;Deployments&lt;/code&gt;, &lt;code&gt;Daemonsets&lt;/code&gt; &lt;code&gt;Statefulsets&lt;/code&gt; and &lt;code&gt;Rollouts&lt;/code&gt; in &lt;code&gt;test&lt;/code&gt; namespace.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;helm install stakater/reloader --set reloader.watchGlobally=false --namespace test # For helm3 add --generate-name flag or set the release name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reloader can be configured to ignore the resources &lt;code&gt;secrets&lt;/code&gt; and &lt;code&gt;configmaps&lt;/code&gt; by using the following parameters of &lt;code&gt;values.yaml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ignoreSecrets&lt;/td&gt; &#xA;   &lt;td&gt;To ignore secrets. Valid value are either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ignoreConfigMaps&lt;/td&gt; &#xA;   &lt;td&gt;To ignore configMaps. Valid value are either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;Note&lt;/code&gt;: At one time only one of these resource can be ignored, trying to do it will cause error in helm template compilation.&lt;/p&gt; &#xA;&lt;p&gt;You can also set the log format of Reloader to json by setting &lt;code&gt;logFormat&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt; in values.yaml and apply the chart&lt;/p&gt; &#xA;&lt;p&gt;You can enable to scrape Reloader&#39;s Prometheus metrics by setting &lt;code&gt;serviceMonitor.enabled&lt;/code&gt; or &lt;code&gt;podMonitor.enabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in values.yaml file. Service monitor will be removed in future releases of reloader in favour of Pod monitor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Reloading of OpenShift (DeploymentConfig) and/or Argo Rollouts has to be enabled explicitly because it might not be always possible to use it on a cluster with restricted permissions. This can be done by changing the following parameters:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isOpenshift&lt;/td&gt; &#xA;   &lt;td&gt;Enable OpenShift DeploymentConfigs. Valid value are either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isArgoRollouts&lt;/td&gt; &#xA;   &lt;td&gt;Enable Argo Rollouts. Valid value are either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reloadOnCreate&lt;/td&gt; &#xA;   &lt;td&gt;Enable reload on create events. Valid value are either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;You can find more documentation &lt;a href=&#34;https://raw.githubusercontent.com/stakater/Reloader/master/docs&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Have a question?&lt;/h3&gt; &#xA;&lt;p&gt;File a GitHub &lt;a href=&#34;https://github.com/stakater/Reloader/issues&#34;&gt;issue&lt;/a&gt;, or send us an &lt;a href=&#34;mailto:stakater@gmail.com&#34;&gt;email&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Talk to us on Slack&lt;/h3&gt; &#xA;&lt;p&gt;Join and talk to us on Slack for discussing Reloader&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.stakater.com/&#34;&gt;&lt;img src=&#34;https://stakater.github.io/README/stakater-join-slack-btn.png&#34; alt=&#34;Join Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stakater-community.slack.com/messages/CC5S05S12&#34;&gt;&lt;img src=&#34;https://stakater.github.io/README/stakater-chat-btn.png&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;Bug Reports &amp;amp; Feature Requests&lt;/h3&gt; &#xA;&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/stakater/Reloader/issues&#34;&gt;issue tracker&lt;/a&gt; to report any bugs or file feature requests.&lt;/p&gt; &#xA;&lt;h3&gt;Developing&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Deploy Reloader.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;okteto up&lt;/code&gt; to activate your development container.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make build&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./Reloader&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;PRs are welcome. In general, we follow the &#34;fork-and-pull&#34; Git workflow.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; the repo on GitHub&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone&lt;/strong&gt; the project to your own machine&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Commit&lt;/strong&gt; changes to your own branch&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Push&lt;/strong&gt; your work back up to your fork&lt;/li&gt; &#xA; &lt;li&gt;Submit a &lt;strong&gt;Pull request&lt;/strong&gt; so that we can review your changes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE: Be sure to merge the latest from &#34;upstream&#34; before making a pull request!&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;View our closed &lt;a href=&#34;https://github.com/stakater/Reloader/pulls?q=is%3Apr+is%3Aclosed&#34;&gt;Pull Requests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache2 ¬© &lt;a href=&#34;http://stakater.com&#34;&gt;Stakater&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Reloader&lt;/code&gt; is maintained by &lt;a href=&#34;http://stakater.com/&#34;&gt;Stakater&lt;/a&gt;. Like it? Please let us know at &lt;a href=&#34;mailto:hello@stakater.com&#34;&gt;hello@stakater.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/stakater/&#34;&gt;our other projects&lt;/a&gt; or contact us in case of professional services and queries on &lt;a href=&#34;mailto:hello@stakater.com&#34;&gt;hello@stakater.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fabric8io/configmapcontroller&#34;&gt;ConfigmapController&lt;/a&gt;; We documented here why we re-created &lt;a href=&#34;https://raw.githubusercontent.com/stakater/Reloader/master/docs/Reloader-vs-ConfigmapController.md&#34;&gt;Reloader&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>