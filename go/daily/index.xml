<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-15T01:35:14Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>869413421/chatgpt-web</title>
    <updated>2023-02-15T01:35:14Z</updated>
    <id>tag:github.com,2023-02-15:/869413421/chatgpt-web</id>
    <link href="https://github.com/869413421/chatgpt-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一键部署属于自己定制化的 chatgpt web程序&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chatgpt-web&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/869413421/wechatbot/releases/tag/v1.1.3&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/869413421/chatgpt-web.svg?style=flat-square&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/869413421/chatgpt-web.svg?sanitize=true&#34; alt=&#34;Github stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/869413421/chatgpt-web.svg?style=flat-square&#34; alt=&#34;Forks&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本项目可以一键部署属于自己定制化的 chatgpt web程序， 只需下载release中对应平台的项目文件，修改配置后执行，打开 &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt; ，便可以获得属于自己的chatgpt网站。&lt;/p&gt; &#xA; &lt;p&gt;参考项目：&lt;a href=&#34;https://github.com/git-cloner/codegen&#34;&gt;codegen&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;项目当前默认为示例中AI聊天机器人参数，可以根据自己需求定制化。&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;注意，每个参数都可能影响你得到不一样的聊天效果,改变一个参数你就可能得到另一种回答，所以请自己尝试去调试，不要上来就抱怨人工智障。文档中有二十多中参数示例，如AI聊天机器人 ，产品名称生成，python代码修复器等等等...&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;详情参考官方详细&lt;a href=&#34;https://beta.openai.com/examples&#34;&gt;参数示例&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;项目初衷&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;自chatgpt流行以后，一直在使用其作为自己的编码工具。奈何官网时常在问题问到一半时短路，一些得到的答案就此丢失。 为了解决这个问题，我选择了更加稳定的API套上客户端来作为自己的工具。定制化地做了一些功能，如存储提问记录，统计提问信息等一些功能，同时做上内网穿透提供给没有办法体验chatgpt的朋友使用，由此大大降低了使用门槛。 当前项目是初始功能版本，开源出来给有需要的朋友使用。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;项目功能&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基本问答界面&lt;/li&gt; &#xA; &lt;li&gt;机器人参数可配置&lt;/li&gt; &#xA; &lt;li&gt;markdown语法&lt;/li&gt; &#xA; &lt;li&gt;提问上下文&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;使用前提&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;有openai账号，并且创建好api_key，注册事项可以参考&lt;a href=&#34;https://juejin.cn/post/7173447848292253704&#34;&gt;此文章&lt;/a&gt; 。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;快速开始&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;第一种：直接下载二进制(适合对编程不了解的同学)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;非技术人员请直接下载release中的&lt;a href=&#34;https://github.com/869413421/chatgpt-web/releases&#34;&gt;压缩包&lt;/a&gt; ，请根据自己系统以及架构选择合适的压缩包，下载之后直接解压运行。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;下载之后，在本地解压，即可看到可执行程序，与配置文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# windows&#xA;1.下载压缩包解压&#xA;2.复制文件中config.dev.json更改为config.json&#xA;3.将config.json中的api_key替换为自己的&#xA;4.双击exe运行，启动服务&#xA;&#xA;# linux&#xA;$ tar xf chatgpt-web-v0.0.2-darwin-arm64.tar.gz # 解压&#xA;$ cd chatgpt-web-v0.0.2-darwin-arm64&#xA;$ cp config.dev.json # 根据情况调整配置文件内容&#xA;$ ./chatgpt-web  # 直接运行&#xA;&#xA;# 如果要守护在后台运行&#xA;$ nohup ./chatgpt-web &amp;amp;&amp;gt; run.log &amp;amp;&#xA;$ tail -f run.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;第二种：基于源码运行(适合了解go语言编程的同学)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 获取项目&#xA;$ git clone https://github.com/869413421/chatgpt-web.git&#xA;&#xA;# 进入项目目录&#xA;$ cd chatgpt-web&#xA;&#xA;# 复制配置文件&#xA;$ copy config.dev.json config.json&#xA;&#xA;# 启动项目&#xA;$ go run main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;使用docker运行&lt;/h1&gt; &#xA;&lt;p&gt;你可以使用docker快速运行本项目。 &lt;code&gt;第一种：基于环境变量运行&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 运行项目，环境变量参考下方配置说明&#xA;$ docker run -itd --name chatgpt-web --restart=always \&#xA; -e APIKEY=换成你的key \&#xA; -e MODEL=text-davinci-003 \&#xA; -e MAX_TOKENS=512 \&#xA; -e TEMPREATURE=0.9 \&#xA; -e TOP_P=1 \&#xA; -e FREQ=0.0 \&#xA; -e PRES=0.6 \&#xA; -p 8080:8080 \&#xA; qingshui869413421/chatgpt-web:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;运行命令中映射的配置文件参考下边的配置文件说明。&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;第二种：基于配置文件挂载运行&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 复制配置文件，根据自己实际情况，调整配置里的内容&#xA;$ cp config.dev.json config.json  # 其中 config.dev.json 从项目的根目录获取&#xA;&#xA;# 运行项目&#xA;$ docker run -itd --name chatgpt-web -v `pwd`/config.json:/app/config.json -p 8080:8080 qingshui869413421/chatgpt-web:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中配置文件参考下边的配置文件说明。&lt;/p&gt; &#xA;&lt;h1&gt;配置文件说明&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;api_key&#34;: &#34;your api key&#34;,&#xA;  &#34;port&#34;: 8080,&#xA;  &#34;bot_desc&#34;: &#34;以下是与AI助手的对话。助手乐于助人，富有创造力，聪明且非常友好。&#34;,&#xA;  &#34;max_tokens&#34;: 512,&#xA;  &#34;model&#34;: &#34;text-davinci-003&#34;,&#xA;  &#34;temperature&#34;: 0.9,&#xA;  &#34;top_p&#34;: 1,&#xA;  &#34;frequency_penalty&#34;: 0.0,&#xA;  &#34;presence_penalty&#34;: 0.6&#xA;}&#xA;&#xA;api_key：openai api_key&#xA;port: http服务端口&#xA;bot_desc：AI特征，非常重要，功能等同给与AI一个身份设定&#xA;max_tokens: GPT响应字符数，最大2048，默认值512。max_tokens会影响接口响应速度，字符越大响应越慢。&#xA;model: GPT选用模型，默认text-davinci-003，具体选项参考官网训练场&#xA;temperature: GPT热度，0到1，默认0.9。数字越大创造力越强，但更偏离训练事实，越低越接近训练事实&#xA;top_p: 使用温度采样的替代方法称为核心采样，其中模型考虑具有top_p概率质量的令牌的结果。因此，0.1 意味着只考虑包含前 10% 概率质量的代币。&#xA;frequency_penalty: &#xA;presence_penalty:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;免责声明 Disclaimers&lt;/h1&gt; &#xA;&lt;p&gt;The code is for demo and testing only. 代码仅用于演示和测试。&lt;/p&gt; &#xA;&lt;p&gt;⚠⚠⚠请勿将本系统代码用于商业用途！&lt;/p&gt; &#xA;&lt;p&gt;仿冒或冒用ChatGPT、OpenAI名义开展经营活动，可能构成《商标法》、《反不正当竞争法》下的一系列侵权行为； 以之牟利造成消费者损失的，可能产生《商标法》、《反不正当竞争法》、《消费者权益保护法》下的民事或行政责任，情节严重并造成重大损失的，还有可能构成刑事犯罪； 如果提供这种跨境经营服务存在私自搭建国际信道的情形，还有可能违反《网络安全法》、《刑法》的相关规定，承担行政责任或构成刑事犯罪。&lt;/p&gt;</summary>
  </entry>
</feed>