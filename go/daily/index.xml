<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-27T01:31:23Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>thomaspoignant/go-feature-flag</title>
    <updated>2024-10-27T01:31:23Z</updated>
    <id>tag:github.com,2024-10-27:/thomaspoignant/go-feature-flag</id>
    <link href="https://github.com/thomaspoignant/go-feature-flag" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GO Feature Flag is a simple, complete and lightweight self-hosted feature flag solution 100% Open Source. üéõÔ∏è&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;400&#34; src=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/gofeatureflag.svg?sanitize=true&#34; alt=&#34;go-feature-flag logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;üéõÔ∏è GO Feature Flag&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/thomaspoignant/go-feature-flag/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/thomaspoignant/go-feature-flag/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/thomaspoignant/go-feature-flag&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/thomaspoignant/go-feature-flag/branch/main/graph/badge.svg?token=T59ACQWW1H&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=thomaspoignant_go-feature-flag&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=thomaspoignant_go-feature-flag&amp;amp;metric=alert_status&#34; alt=&#34;Sonarcloud Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/thomaspoignant/go-feature-flag/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/thomaspoignant/go-feature-flag/workflows/CodeQL/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/thomaspoignant/go-feature-flag/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/thomaspoignant/go-feature-flag&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/thomaspoignant/go-feature-flag/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/thomaspoignant/go-feature-flag&#34; alt=&#34;Release version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/thomaspoignant/go-feature-flag&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/thomaspoignant/go-feature-flag?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/thomaspoignant/go-feature-flag?logo=go%20version&#34; alt=&#34;Go version&#34;&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go/#server-applications&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gofeatureflag.org/slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&amp;amp;logo=slack&amp;amp;colorB=green&#34; alt=&#34;Join us on slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/thomaspoignant&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/thomaspoignant?logo=GitHub%20Sponsors&#34; alt=&#34;Sponsords&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;üôè&lt;/span&gt; If you are using &lt;strong&gt;GO Feature Flag&lt;/strong&gt; please consider to add yourself in the &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/ADOPTERS.md&#34;&gt;adopters&lt;/a&gt; list.&lt;br&gt; This simple act significantly boosts the project&#39;s visibility and credibility, making a substantial contribution to its advancement.&lt;/p&gt; &#xA; &lt;p&gt;If you want to support me and GO Feature Flag, you can also &lt;a href=&#34;https://github.com/sponsors/thomaspoignant&#34;&gt;become a sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#%EF%B8%8F-go-feature-flag&#34;&gt;üéõÔ∏è GO Feature Flag&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#what-is-go-feature-flag&#34;&gt;What is GO Feature Flag?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#what-can-i-do-with-go-feature-flag&#34;&gt;What can I do with GO Feature Flag?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#getting-started&#34;&gt;Getting started with GO Feature Flag&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#can-i-use-go-feature-flag-with-any-language&#34;&gt;Can I use GO Feature Flag with any language?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#where-do-i-store-my-flags-file&#34;&gt;Where do I store my flags file?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#flags-file-format&#34;&gt;Flags file format&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#rule-format&#34;&gt;Rule format&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#evaluation-context&#34;&gt;Evaluation Context&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#variations&#34;&gt;Variations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#rollout&#34;&gt;Rollout&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#complex-rollout-strategy-available&#34;&gt;Complex rollout strategy available&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#notifiers&#34;&gt;Notifiers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#export-data&#34;&gt;Export data&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#linter&#34;&gt;Linter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#how-can-i-contribute&#34;&gt;How can I contribute?&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#community-meetings&#34;&gt;Community Meetings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/#adopters&#34;&gt;Adopters&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is GO Feature Flag?&lt;/h2&gt; &#xA;&lt;p&gt;GO Feature Flag is a lightweight and open-source solution that provides a simple and complete feature flag implementation.&lt;/p&gt; &#xA;&lt;p&gt;The solution has been built to facilitate the usage of feature flags in your code with the easiest setup possible.&lt;/p&gt; &#xA;&lt;p&gt;Originally, &lt;strong&gt;GO Feature Flag&lt;/strong&gt; was designed as a solution exclusively for the &lt;code&gt;GO&lt;/code&gt; language. With the new standardization of feature flags by the &lt;a href=&#34;https://openfeature.dev/&#34;&gt;Openfeature&lt;/a&gt; project, the solution is now available for multiple languages &lt;em&gt;(&lt;a href=&#34;https://gofeatureflag.org/docs/openfeature_sdk/sdk&#34;&gt;list of supported languages&lt;/a&gt;)&lt;/em&gt; through a simple API server called the relay proxy, which can be hosted.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] If you are not familiar with feature flags, I&#39;ve written an &lt;a href=&#34;https://medium.com/better-programming/feature-flags-and-how-to-iterate-quickly-7e3371b9986&#34;&gt;article&lt;/a&gt; which explains why feature flags can fasten your iteration cycle.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;What can I do with GO Feature Flag?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Storing your configuration flags file on various locations (&lt;code&gt;HTTP&lt;/code&gt;, &lt;code&gt;S3&lt;/code&gt;, &lt;code&gt;Kubernetes&lt;/code&gt;, &lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/store_your_flags&#34;&gt;&lt;em&gt;see full list&lt;/em&gt;&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Configuring your flags in various &lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/flag_format&#34;&gt;format&lt;/a&gt; (&lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;TOML&lt;/code&gt; and &lt;code&gt;YAML&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Adding complex &lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/flag_format#rule-format&#34;&gt;rules&lt;/a&gt; to target your users.&lt;/li&gt; &#xA; &lt;li&gt;Use a complex rollout strategy for your flags : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/rollout/experimentation&#34;&gt;Run A/B testing experimentation&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/rollout/progressive&#34;&gt;Progressively rollout a feature&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/rollout/scheduled&#34;&gt;Schedule your flag updates&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Exporting your flags usage data to various destinations such as &lt;em&gt;(&lt;code&gt;S3&lt;/code&gt;, &lt;code&gt;Google cloud storage&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, see the &lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/export_flags_usage&#34;&gt;&lt;em&gt;full list&lt;/em&gt;&lt;/a&gt;)&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Getting notified when a flag has been changed &lt;em&gt;(&lt;code&gt;webhook&lt;/code&gt; and &lt;code&gt;slack&lt;/code&gt;)&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;GO Feature Flag&lt;/strong&gt; in several languages with &lt;strong&gt;Open Feature SDKs&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Support your full stack, from the backend to the frontend including your mobile apps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/17908063/211581747-f6354a9d-8be6-4e52-aa53-7f0d6a40827e.mp4&#34;&gt;https://user-images.githubusercontent.com/17908063/211581747-f6354a9d-8be6-4e52-aa53-7f0d6a40827e.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The code of this demo is available in &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/examples/demo&#34;&gt;&lt;code&gt;examples/demo&lt;/code&gt;&lt;/a&gt; repository&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Before starting to use &lt;strong&gt;GO Feature Flag&lt;/strong&gt; you should decide if you want to use Open Feature SDKs or if you want to use GO Feature Flag as a GO Module.&lt;/p&gt; &#xA; &lt;p&gt;We recommend using the relay-proxy for a central flag management and evaluation solution, it enables the multi-languages support, and it integrates seamlessly with the Open Feature SDKs.&lt;br&gt; This is the best way to get full potential of GO Feature Flag.&lt;/p&gt; &#xA; &lt;p&gt;If your project is exclusively in GO, the GO module is an option. It will perform the flag evaluation directly in your GO code.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a id=&#34;using-open-feature&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Using Open Feature SDKs&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;h3&gt;Create a feature flag configuration&lt;/h3&gt; &#xA; &lt;p&gt;Create a new &lt;code&gt;YAML&lt;/code&gt; file containing your first flag configuration.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# 20% of the users will use the variation &#34;my-new-feature&#34;&#xA;test-flag:&#xA;  variations:&#xA;    my-new-feature: true&#xA;    my-old-feature: false&#xA;  defaultRule:&#xA;    percentage:&#xA;      my-new-feature: 20&#xA;      my-old-feature: 80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This flag split the usage of this flag, 20% will use the variation &lt;code&gt;my-new-feature&lt;/code&gt; and 80% the variation &lt;code&gt;my-old-feature&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;h3&gt;Create a relay proxy configuration file&lt;/h3&gt; &#xA; &lt;p&gt;Create a new &lt;code&gt;YAML&lt;/code&gt; file containing the configuration of your relay proxy.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;listen: 1031&#xA;pollingInterval: 1000&#xA;startWithRetrieverError: false&#xA;retriever:&#xA;  kind: file&#xA;  path: /goff/flag-config.yaml&#xA;exporter:&#xA;  kind: log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Install the relay proxy&lt;/h3&gt; &#xA; &lt;p&gt;And we will run the &lt;strong&gt;relay proxy&lt;/strong&gt; locally to make the API available.&lt;br&gt; The default port will be &lt;code&gt;1031&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Launch the container&#xA;docker run \&#xA;  -p 1031:1031 \&#xA;  -v $(pwd)/flag-config.yaml:/goff/flag-config.yaml \&#xA;  -v $(pwd)/goff-proxy.yaml:/goff/goff-proxy.yaml \&#xA;  gofeatureflag/go-feature-flag:latest&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;em&gt;If you don&#39;t want to use docker to install the &lt;strong&gt;relay proxy&lt;/strong&gt; you can follow other ways to install it in the &lt;a href=&#34;https://gofeatureflag.org/docs/relay_proxy/install_relay_proxy&#34;&gt;documentation&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Use Open Feature SDK&lt;/h3&gt; &#xA; &lt;p&gt;&lt;em&gt;In this example, we are using the &lt;strong&gt;nodejs SDK&lt;/strong&gt;, but you can check other languages &lt;a href=&#34;https://gofeatureflag.org/docs/openfeature_sdk/sdk&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;h4&gt;Install dependencies&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm i @openfeature/server-sdk @openfeature/go-feature-flag-provider&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Init your Open Feature client&lt;/h4&gt; &#xA; &lt;p&gt;In your app initialization, you have to create a client using the Open Feature SDK and initialize it.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const {OpenFeature} = require(&#34;@openfeature/server-sdk&#34;);&#xA;const {GoFeatureFlagProvider} = require(&#34;@openfeature/go-feature-flag-provider&#34;);&#xA;&#xA;&#xA;// init Open Feature SDK with GO Feature Flag provider&#xA;const goFeatureFlagProvider = new GoFeatureFlagProvider({&#xA;  endpoint: &#39;http://localhost:1031/&#39; // DNS of your instance of relay proxy&#xA;});&#xA;OpenFeature.setProvider(goFeatureFlagProvider);&#xA;const featureFlagClient = OpenFeature.getClient(&#39;my-app&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Evaluate your flag&lt;/h4&gt; &#xA; &lt;p&gt;Now you can evaluate your flags anywhere in your code using this client.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Context of your flag evaluation.&#xA;// With GO Feature Flag you MUST provide a targetingKey that is a unique identifier of the user.&#xA;const evaluationContext = {&#xA;  targetingKey: &#39;1d1b9238-2591-4a47-94cf-d2bc080892f1&#39;, // user unique identifier (mandatory)&#xA;  firstname: &#39;john&#39;,&#xA;  lastname: &#39;doe&#39;,&#xA;  email: &#39;john.doe@gofeatureflag.org&#39;,&#xA;  admin: true, // this field is used in the targeting rule of the flag &#34;flag-only-for-admin&#34;&#xA;  // ...&#xA;};&#xA;&#xA;const adminFlag = await featureFlagClient.getBooleanValue(&#39;flag-only-for-admin&#39;, false, evaluationContext);&#xA;if (adminFlag) {&#xA;  // flag &#34;flag-only-for-admin&#34; is true for the user&#xA;  console.log(&#34;new feature&#34;);&#xA;} else {&#xA;  // flag &#34;flag-only-for-admin&#34; is false for the user&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a id=&#34;using-go-module&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Using the GO Module&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;h3&gt;Installation&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get github.com/thomaspoignant/go-feature-flag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Create a feature flag configuration&lt;/h3&gt; &#xA; &lt;p&gt;Create a new &lt;code&gt;YAML&lt;/code&gt; file containing your first flag configuration.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# 20% of the users will use the variation &#34;my-new-feature&#34;&#xA;test-flag:&#xA;  variations:&#xA;    my-new-feature: true&#xA;    my-old-feature: false&#xA;  defaultRule:&#xA;    percentage:&#xA;      my-new-feature: 20&#xA;      my-old-feature: 80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This flag split the usage of this flag, 20% will use the variation &lt;code&gt;my-new-feature&lt;/code&gt; and 80% the variation &lt;code&gt;my-old-feature&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;h3&gt;SDK Initialisation&lt;/h3&gt; &#xA; &lt;p&gt;First, you need to initialize the &lt;code&gt;ffclient&lt;/code&gt; with the location of your backend file.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;err := ffclient.Init(ffclient.Config{&#xA;  PollingInterval: 3 * time.Second,&#xA;  Retriever:      &amp;amp;fileretriever.Retriever{&#xA;    Path: &#34;flag-config.goff.yaml&#34;,&#xA;  },&#xA;})&#xA;defer ffclient.Close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;em&gt;This example will load a file from your local computer and will refresh the flags every 3 seconds (if you omit the PollingInterval, the default value is 60 seconds).&lt;/em&gt;&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;‚Ñπ info&lt;br&gt; This is a basic configuration to test locally, in production it is better to use a remote place to store your feature flag configuration file.&lt;br&gt; Look at the list of available options in the &lt;a href=&#34;https://gofeatureflag.org/docs/go_module/store_file/&#34;&gt;&lt;strong&gt;Store your feature flag file&lt;/strong&gt; page&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h3&gt;Evaluate your flags&lt;/h3&gt; &#xA; &lt;p&gt;Now you can evaluate your flags anywhere in your code.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;user := ffcontext.NewEvaluationContext(&#34;user-unique-key&#34;)&#xA;hasFlag, _ := ffclient.BoolVariation(&#34;test-flag&#34;, user, false)&#xA;if hasFlag {&#xA;  // flag &#34;test-flag&#34; is true for the user&#xA;} else {&#xA;  // flag &#34;test-flag&#34; is false for the user&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The full documentation is available on &lt;a href=&#34;https://docs.gofeatureflag.org&#34;&gt;https://docs.gofeatureflag.org&lt;/a&gt;&lt;br&gt; You can find more examples in the &lt;a href=&#34;https://github.com/thomaspoignant/go-feature-flag/tree/main/examples&#34;&gt;examples/&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Can I use GO Feature Flag with any language?&lt;/h2&gt; &#xA;&lt;p&gt;Originally GO Feature Flag was built to be a GOlang only library, but it limits the ecosystem too much.&lt;br&gt; To be compatible with more languages we have implemented the &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/cmd/relayproxy/&#34;&gt;GO Feature Flag Relay Proxy&lt;/a&gt;. It is a service you can host that provides an API to evaluate your flags, you can call it using HTTP to get your variation.&lt;/p&gt; &#xA;&lt;p&gt;Since we believe in standardization we are also implementing &lt;a href=&#34;https://github.com/open-feature&#34;&gt;OpenFeature&lt;/a&gt; providers to interact with this API in the language of your choice.&lt;br&gt; &lt;em&gt;(OpenFeature is still at an early stage, so not all languages are supported and expect some changes in the future)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;For now, we have providers for:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Provider Source&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-feature/go-sdk-contrib/tree/main/providers/go-feature-flag&#34;&gt;Go Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-feature/go-sdk-contrib/tree/main/providers/go-feature-flag&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fproxy.golang.org%2Fgithub.com%2Fopen-feature%2Fgo-sdk-contrib%2Fproviders%2Fgo-feature-flag%2F%40latest&amp;amp;query=%24.Version&amp;amp;label=GO&amp;amp;color=blue&amp;amp;style=flat-square&amp;amp;logo=golang&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java / Kotlin (server)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-feature/java-sdk-contrib/tree/main/providers/go-feature-flag&#34;&gt;Java Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://central.sonatype.com/artifact/dev.openfeature.contrib.providers/go-feature-flag&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/dev.openfeature.contrib.providers/go-feature-flag?color=blue&amp;amp;style=flat-square&amp;amp;logo=java&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android / Kotlin (client)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/openfeature/providers/kotlin-provider&#34;&gt;Kotlin Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://central.sonatype.com/artifact/org.gofeatureflag.openfeature/gofeatureflag-kotlin-provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.gofeatureflag.openfeature/gofeatureflag-kotlin-provider?color=blue&amp;amp;style=flat-square&amp;amp;logo=android&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Javascript/Typescript (server)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-feature/js-sdk-contrib/tree/main/libs/providers/go-feature-flag&#34;&gt;Server Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@openfeature/go-feature-flag-provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40openfeature%2Fgo-feature-flag-provider?color=blue&amp;amp;style=flat-square&amp;amp;logo=npm&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Javascript/Typescript (client)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-feature/js-sdk-contrib/tree/main/libs/providers/go-feature-flag-web&#34;&gt;Client Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@openfeature/go-feature-flag-web-provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40openfeature%2Fgo-feature-flag-web-provider?color=blue&amp;amp;style=flat-square&amp;amp;logo=npm&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/openfeature/providers/python-provider&#34;&gt;Python Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/gofeatureflag-python-provider/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/gofeatureflag-python-provider?color=blue&amp;amp;style=flat-square&amp;amp;logo=pypi&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.Net&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-feature/dotnet-sdk-contrib/tree/main/src/OpenFeature.Contrib.Providers.GOFeatureFlag&#34;&gt;.Net Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://nuget.info/packages/OpenFeature.Contrib.GOFeatureFlag&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/OpenFeature.Contrib.GOFeatureFlag?color=blue&amp;amp;style=flat-square&amp;amp;logo=nuget&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ruby&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-feature/ruby-sdk-contrib/tree/main/providers/openfeature-go-feature-flag-provider&#34;&gt;Ruby Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/openfeature-go-feature-flag-provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/openfeature-go-feature-flag-provider?color=blue&amp;amp;style=flat-square&amp;amp;logo=ruby&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swift&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/go-feature-flag/openfeature-swift-provider&#34;&gt;Swift Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/go-feature-flag/openfeature-swift-provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/go-feature-flag/openfeature-swift-provider?label=Swift&amp;amp;display_name=tag&amp;amp;style=flat-square&amp;amp;logo=Swift&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-feature/php-sdk-contrib/tree/main/providers/GoFeatureFlag&#34;&gt;PHP Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://packagist.org/packages/open-feature/go-feature-flag-provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/open-feature/go-feature-flag-provider?logo=php&amp;amp;color=blue&amp;amp;style=flat-square&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Where do I store my flags file?&lt;/h2&gt; &#xA;&lt;p&gt;The module supports different ways of retrieving the flag file.&lt;br&gt; The available retrievers are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitLab&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HTTP endpoint&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AWS S3&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local file&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Google Cloud Storage&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kubernetes ConfigMaps&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/store_your_flags&#34;&gt;See the full list and more information.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Flags file format&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;GO Feature Flag&lt;/strong&gt; core feature is to centralize all your feature flags in a single file and to avoid hosting and maintaining a backend server to manage them.&lt;/p&gt; &#xA;&lt;p&gt;Your file should be a &lt;code&gt;YAML&lt;/code&gt;, &lt;code&gt;JSON&lt;/code&gt; or &lt;code&gt;TOML&lt;/code&gt; file with a list of flags &lt;em&gt;(examples: &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/testdata/flag-config.yaml&#34;&gt;&lt;code&gt;YAML&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/testdata/flag-config.json&#34;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/testdata/flag-config.toml&#34;&gt;&lt;code&gt;TOML&lt;/code&gt;&lt;/a&gt;)&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to create your configuration file is to use &lt;strong&gt;GO Feature Flag Editor&lt;/strong&gt; available at &lt;a href=&#34;https://editor.gofeatureflag.org&#34;&gt;https://editor.gofeatureflag.org&lt;/a&gt;.&lt;br&gt; If you prefer to do it manually please follow the instruction below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A flag configuration looks like this:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;YAML&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# This is your configuration for your first flag&#xA;first-flag:&#xA;  variations: # All possible return value for your feature flag&#xA;    A: false&#xA;    B: true&#xA;  targeting: # If you want to target a subset of your users in particular&#xA;    - query: key eq &#34;random-key&#34;&#xA;      percentage:&#xA;        A: 0&#xA;        B: 100&#xA;  defaultRule: # When no targeting match we use the defaultRule&#xA;    variation: A&#xA;&#xA;# A second example of a flag configuration&#xA;second-flag:&#xA;  variations:&#xA;    A: &#34;valueA&#34;&#xA;    B: &#34;valueB&#34;&#xA;    defaultValue: &#34;a default value&#34;&#xA;  targeting:&#xA;    - name: notkey_rule&#xA;      query: key eq &#34;not-a-key&#34;&#xA;      percentage:&#xA;        A: 10&#xA;        B: 90&#xA;  defaultRule:&#xA;    variation: defaultValue&#xA;  version: &#34;12&#34;&#xA;  experimentation:&#xA;    start: 2021-03-20T00:00:00.1-05:00&#xA;    end: 2021-03-21T00:00:00.1-05:00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;JSON&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;first-flag&#34;: {&#xA;    &#34;variations&#34;: {&#xA;      &#34;A&#34;: false,&#xA;      &#34;B&#34;: true&#xA;    },&#xA;    &#34;targeting&#34;: [&#xA;      {&#xA;        &#34;query&#34;: &#34;key eq \&#34;random-key\&#34;&#34;,&#xA;        &#34;percentage&#34;: {&#xA;          &#34;A&#34;: 0,&#xA;          &#34;B&#34;: 100&#xA;        }&#xA;      }&#xA;    ],&#xA;    &#34;defaultRule&#34;: {&#xA;      &#34;variation&#34;: &#34;A&#34;&#xA;    }&#xA;  },&#xA;&#xA;  &#34;second-flag&#34;: {&#xA;    &#34;variations&#34;: {&#xA;      &#34;A&#34;: &#34;valueA&#34;,&#xA;      &#34;B&#34;: &#34;valueB&#34;,&#xA;      &#34;defaultValue&#34;: &#34;a default value&#34;&#xA;    },&#xA;    &#34;targeting&#34;: [&#xA;      {&#xA;        &#34;name&#34;: &#34;notkey_rule&#34;,&#xA;        &#34;query&#34;: &#34;key eq \&#34;not-a-key\&#34;&#34;,&#xA;        &#34;percentage&#34;: {&#xA;          &#34;A&#34;: 10,&#xA;          &#34;B&#34;: 90&#xA;        }&#xA;      }&#xA;    ],&#xA;    &#34;defaultRule&#34;: {&#xA;      &#34;variation&#34;: &#34;defaultValue&#34;&#xA;    },&#xA;    &#34;version&#34;: &#34;12&#34;,&#xA;    &#34;experimentation&#34;: {&#xA;      &#34;start&#34;: &#34;2021-03-20T05:00:00.100Z&#34;,&#xA;      &#34;end&#34;: &#34;2021-03-21T05:00:00.100Z&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TOML&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[first-flag.variations]&#xA;A = false&#xA;B = true&#xA;&#xA;[[first-flag.targeting]]&#xA;query = &#39;key eq &#34;random-key&#34;&#39;&#xA;&#xA;[first-flag.targeting.percentage]&#xA;A = 0&#xA;B = 100&#xA;&#xA;[first-flag.defaultRule]&#xA;variation = &#34;A&#34;&#xA;&#xA;[second-flag]&#xA;version = &#34;12&#34;&#xA;&#xA;[second-flag.variations]&#xA;A = &#34;valueA&#34;&#xA;B = &#34;valueB&#34;&#xA;defaultValue = &#34;a default value&#34;&#xA;&#xA;[[second-flag.targeting]]&#xA;name = &#34;notkey_rule&#34;&#xA;query = &#39;key eq &#34;not-a-key&#34;&#39;&#xA;&#xA;[second-flag.targeting.percentage]&#xA;A = 10&#xA;B = 90&#xA;&#xA;[second-flag.defaultRule]&#xA;variation = &#34;defaultValue&#34;&#xA;&#xA;[second-flag.experimentation]&#xA;start = 2021-03-20T05:00:00.100Z&#xA;end = 2021-03-21T05:00:00.100Z&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;For detailed information on the fields required to create a flag, please refer to the &lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/flag_format&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Rule format&lt;/h2&gt; &#xA;&lt;p&gt;The query format is based on the &lt;a href=&#34;https://github.com/nikunjy/rules&#34;&gt;&lt;code&gt;nikunjy/rules&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;All the operations can be written in capitalized or lowercase (ex: &lt;code&gt;eq&lt;/code&gt; or &lt;code&gt;EQ&lt;/code&gt; can be used).&lt;br&gt; Logical Operations supported are &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;OR&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Compare Expression and their definitions (&lt;code&gt;a|b&lt;/code&gt; means you can use either one of the two &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;eq|==: equals to &#xA;ne|!=: not equals to&#xA;lt|&amp;lt;: less than &#xA;gt|&amp;gt;: greater than&#xA;le|&amp;lt;=: less than equal to&#xA;ge|&amp;gt;=: greater than equal to &#xA;co: contains &#xA;sw: starts with &#xA;ew: ends with&#xA;in: in a list&#xA;pr: present&#xA;not: not of a logical expression&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Select a specific user: &lt;code&gt;key eq &#34;example@example.com&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select all identified users: &lt;code&gt;anonymous ne true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select a user with a custom property: &lt;code&gt;userId eq &#34;12345&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Evaluation Context&lt;/h2&gt; &#xA;&lt;p&gt;An evaluation context in a feature flagging system is crucial for determining the output of a feature flag evaluation. It&#39;s a collection of pertinent data about the conditions under which the evaluation is being made. This data can be supplied through a mix of static information &lt;em&gt;(server name, IP, etc ...)&lt;/em&gt; and dynamic inputs (information about the user performing the action, etc ...), along with state information that is implicitly carried through the execution of the program.&lt;/p&gt; &#xA;&lt;p&gt;When using GO Feature Flag, it&#39;s often necessary to personalize the experience for different users. This is where the concept of a &lt;strong&gt;targeting key&lt;/strong&gt; comes into play. A targeting key is a unique identifier that represents the context of the evaluation &lt;em&gt;(email, session id, a fingerprint or anything that is consistent)&lt;/em&gt;, ensuring that they are consistently exposed to the same variation of a feature, even across multiple visits or sessions.&lt;/p&gt; &#xA;&lt;p&gt;For instance, GO Feature Flag ensures that in cases where a feature is being rolled out to a percentage of users, based on the targeting key, they will see the same variation each time they encounter the feature flag.&lt;/p&gt; &#xA;&lt;p&gt;The targeting key is a fundamental part of the evaluation context because it directly affects the determination of which feature variant is served to a particular user, and it maintains that continuity over time. To do so GO Feature Flag to do a hash to define if the flag can apply to this evaluation context or not.&lt;br&gt; &lt;strong&gt;We recommend using a hash if possible.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Feature flag targeting and rollouts are all determined by the user you pass to your evaluation calls.&lt;/p&gt; &#xA;&lt;h2&gt;Custom bucketing&lt;/h2&gt; &#xA;&lt;p&gt;In some cases, you might need to &lt;em&gt;bucket&lt;/em&gt; users based on a different key, e.g. a &lt;code&gt;teamId&lt;/code&gt;, so that users within the same team get exposed to the same flag variation and get a consistent experience.&lt;/p&gt; &#xA;&lt;p&gt;This can be achieved by defining the &lt;code&gt;bucketingKey&lt;/code&gt; field in the flag configuration. When present, the value corresponding to the &lt;code&gt;bucketingKey&lt;/code&gt; will be extracted from the attributes, and that value used for hashing and determining the outcome in place of the &lt;code&gt;targetingKey&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Variations&lt;/h2&gt; &#xA;&lt;p&gt;Variations are the different values possible for a feature flag.&lt;br&gt; GO Feature Flag can manage more than just &lt;code&gt;boolean&lt;/code&gt; values; the value of your flag can be any of the following types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;float&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json array&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json object&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Boolean result = featureFlagClient.getBooleanValue(&#34;your.feature.key&#34;, false, userContext);&#xA;&#xA;// this example is using the java SDK&#xA;// result is now true or false depending on the setting of this boolean feature flag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Variation methods take the feature &lt;strong&gt;flag key&lt;/strong&gt;, an &lt;strong&gt;evaluation context&lt;/strong&gt;, and a &lt;strong&gt;default value&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why do we need a default value?&lt;/strong&gt; If we have any error during the evaluation of the flag, we will return the default value, you will always get a value return from the function and we will never throw an error.&lt;/p&gt; &#xA;&lt;p&gt;In the example, if the flag &lt;code&gt;your.feature.key&lt;/code&gt; does not exist, the result will be &lt;code&gt;false&lt;/code&gt;.&lt;br&gt; Note that the result will always provide a usable value.&lt;/p&gt; &#xA;&lt;h2&gt;Rollout&lt;/h2&gt; &#xA;&lt;p&gt;A critical part of every new feature release is orchestrating the actual launch schedule between the Product, Engineering, and Marketing teams.&lt;/p&gt; &#xA;&lt;p&gt;Delivering powerful user experiences typically requires software teams to manage complex releases and make manual updates at inconvenient times.&lt;/p&gt; &#xA;&lt;p&gt;But it does not have to, having a complex &lt;strong&gt;rollout&lt;/strong&gt; strategy allows you to have a lifecycle for your flags.&lt;/p&gt; &#xA;&lt;h3&gt;Complex rollout strategy available&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/rollout/canary&#34;&gt;Canary releases&lt;/a&gt; - impact randomly a subset of your users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/rollout/progressive&#34;&gt;Progressive rollout&lt;/a&gt; - increase the percentage of your flag over time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/rollout/scheduled/&#34;&gt;Scheduled rollout&lt;/a&gt; - update your flag over time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gofeatureflag.org/docs/configure_flag/rollout/experimentation&#34;&gt;Experimentation rollout&lt;/a&gt; - serve your feature only for a determined time &lt;em&gt;(perfect for A/B testing)&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notifiers&lt;/h2&gt; &#xA;&lt;p&gt;If you want to be informed when a flag has changed, you can configure a &lt;a href=&#34;https://pkg.go.dev/github.com/thomaspoignant/go-feature-flag#NotifierConfig&#34;&gt;&lt;strong&gt;notifier&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A notifier will send one notification to the targeted system to inform them that a new flag configuration has been loaded.&lt;/p&gt; &#xA;&lt;p&gt;‚ÑπÔ∏è &lt;strong&gt;GO Feature Flag&lt;/strong&gt; can handle more than one notifier at a time.&lt;/p&gt; &#xA;&lt;p&gt;Available notifiers are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Webhook&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Export data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;GO Feature Flag&lt;/strong&gt; allows you to export data about the usage of your flags.&lt;br&gt; It collects all variation events and can save these events in several locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local file&lt;/strong&gt; &lt;em&gt;- create local files with the variation usages.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Log&lt;/strong&gt; &lt;em&gt;- use your logger to write the variation usages.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AWS S3&lt;/strong&gt; &lt;em&gt;- export your variation usages to S3.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Google Cloud Storage&lt;/strong&gt; &lt;em&gt;- export your variation usages to Google Cloud Storage.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Webhook&lt;/strong&gt; &lt;em&gt;- export your variation usages by calling a webhook.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AWS SQS&lt;/strong&gt; &lt;em&gt;- export your variation usages by sending events to SQS.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Google PubSub&lt;/strong&gt; &lt;em&gt;- export your variation usages by publishing events to PubSub topic.&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently, we are supporting only feature events.&lt;br&gt; It represents individual flag evaluations and is considered &#34;full fidelity&#34; events.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;An example feature event below:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;kind&#34;: &#34;feature&#34;,&#xA;  &#34;contextKind&#34;: &#34;anonymousUser&#34;,&#xA;  &#34;userKey&#34;: &#34;ABCD&#34;,&#xA;  &#34;creationDate&#34;: 1618228297,&#xA;  &#34;key&#34;: &#34;test-flag&#34;,&#xA;  &#34;variation&#34;: &#34;Default&#34;,&#xA;  &#34;value&#34;: false,&#xA;  &#34;default&#34;: false,&#xA;  &#34;source&#34;: &#34;SERVER&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The format of the data is &lt;a href=&#34;https://gofeatureflag.org/docs/&#34;&gt;described in the documentation&lt;/a&gt;. Events are collected and sent in bulk to avoid spamming your exporter.&lt;/p&gt; &#xA;&lt;h2&gt;Linter&lt;/h2&gt; &#xA;&lt;p&gt;A command line tool is available to help you lint your configuration file: &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/cmd/lint/README.md&#34;&gt;go-feature-flag-lint&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;How can I contribute?&lt;/h1&gt; &#xA;&lt;p&gt;This project welcomes contributions from the community. If you&#39;re interested in contributing, see the &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/CONTRIBUTING.md&#34;&gt;contributors&#39; guide&lt;/a&gt; for some helpful tips.&lt;/p&gt; &#xA;&lt;h2&gt;Community meetings&lt;/h2&gt; &#xA;&lt;p&gt;Since everyone&#39;s voice is important we want to hear back from the community.&lt;br&gt; For this reason, we are launching a community meeting every 2 weeks and it is the perfect place to discuss the future of GO Feature Flag and help you use it at full potential.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Meeting Time&lt;/th&gt; &#xA;   &lt;th&gt;Meeting Notes&lt;/th&gt; &#xA;   &lt;th&gt;Discussions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GO Feature Flag Community Meeting&lt;/td&gt; &#xA;   &lt;td&gt;Every other Thursday at 10:00 am ET / 16:00 CET&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.google.com/document/d/13hVS1Eoq6iHwegdk4lveTE3jV4mUehVGqUtf5TLH2pY/edit&#34;&gt;Google Doc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://meet.google.com/fpg-ckxs-vmr&#34;&gt;VC Link (meet)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bit.ly/gofeatureflag-calendar&#34;&gt;Calendar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendar.google.com/calendar/ical/30ba1a7fbba6dc31596a2686f6ab22e9971e8785289033f8bb32319c93dd3b59%40group.calendar.google.com/public/basic.ics&#34;&gt;ICS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendar.google.com/calendar/embed?src=30ba1a7fbba6dc31596a2686f6ab22e9971e8785289033f8bb32319c93dd3b59%40group.calendar.google.com&amp;amp;ctz=Europe%2FParis&#34;&gt;Web&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks so much to our contributors.&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/thomaspoignant/go-feature-flag/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=thomaspoignant/go-feature-flag&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/thomaspoignant&#34;&gt;Become a sponsor&lt;/a&gt; and show your support to GO Feature Flag.&lt;/p&gt; &#xA;&lt;p&gt;These are our really cool sponsors!&lt;/p&gt; &#xA;&lt;!-- sponsors --&gt;&#xA;&lt;a href=&#34;https://github.com/cybozu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2433152?v=4&#34; width=&#34;60px&#34; alt=&#34;Cybozu&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/clemsau&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/36474372?u=792957256f1997cbdad8a6c6e7b60c2db0205a8f&amp;amp;v=4&#34; width=&#34;60px&#34; alt=&#34;Cl√©ment Sauvage&#34;&gt;&lt;/a&gt;&#xA;&lt;!-- sponsors --&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;If you are using &lt;code&gt;go-feature-flag&lt;/code&gt;, we encourage you to include your company&#39;s name in this list. This simple act significantly boosts the project&#39;s visibility and credibility, making a substantial contribution to its advancement. To do so, kindly add yourself to &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/ADOPTERS.md&#34;&gt;adopters&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is the list of &lt;a href=&#34;https://raw.githubusercontent.com/thomaspoignant/go-feature-flag/main/ADOPTERS.md&#34;&gt;adopters&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>