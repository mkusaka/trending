<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-20T01:35:12Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>charmbracelet/pop</title>
    <updated>2023-07-20T01:35:12Z</updated>
    <id>tag:github.com,2023-07-20:/charmbracelet/pop</id>
    <link href="https://github.com/charmbracelet/pop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Send emails from your terminal üì¨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pop&lt;/h1&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://stuff.charm.sh/pop/pop-logo.png&#34; width=&#34;400&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/charmbracelet/pop/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/charmbracelet/pop.svg?sanitize=true&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/charmbracelet/pop?tab=doc&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/golang/gddo?status.svg?sanitize=true&#34; alt=&#34;Go Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/charmbracelet/pop/actions&#34;&gt;&lt;img src=&#34;https://github.com/charmbracelet/vhs/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Send emails from your terminal.&lt;/p&gt; &#xA;&lt;img width=&#34;500&#34; src=&#34;https://vhs.charm.sh/vhs-5Dyv3pvzB2YwtUSr72LqSz.gif&#34; alt=&#34;pop mail text-based client&#34;&gt; &#xA;&lt;h2&gt;Text-based User Interface&lt;/h2&gt; &#xA;&lt;p&gt;Launch the TUI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Command Line Interface&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pop &amp;lt; message.md \&#xA;    --from &#34;me@example.com&#34; \&#xA;    --to &#34;you@example.com&#34; \&#xA;    --subject &#34;Hello, world!&#34; \&#xA;    --attach invoice.pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;500&#34; src=&#34;https://vhs.charm.sh/vhs-5Cr6Gt1YVBjxGr9zdS85AO.gif&#34; alt=&#34;pop mail command line client&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;img width=&#34;600&#34; src=&#34;https://stuff.charm.sh/pop/resend-x-charm.png&#34; alt=&#34;Resend and Charm logos&#34;&gt; &#xA;&lt;p&gt;To use &lt;code&gt;pop&lt;/code&gt;, you will need a &lt;code&gt;RESEND_API_KEY&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can grab one from: &lt;a href=&#34;https://resend.com/api-keys&#34;&gt;https://resend.com/api-keys&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Environment&lt;/h3&gt; &#xA;&lt;p&gt;To avoid typing your &lt;code&gt;From: &lt;/code&gt; email address, you can also set the &lt;code&gt;POP_FROM&lt;/code&gt; environment to pre-fill the field anytime you launch &lt;code&gt;pop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export RESEND_API_KEY=$(pass RESEND_API_KEY)&#xA;export POP_FROM=pop@charm.sh&#xA;export POP_SIGNATURE=&#34;Sent with [Pop](https://github.com/charmbracelet/pop)!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use a package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# macOS or Linux&#xA;brew install pop&#xA;&#xA;# Nix (coming soon)&#xA;nix-env -iA nixpkgs.pop&#xA;&#xA;# Arch (btw)&#xA;yay -S pop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install with Go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/charmbracelet/pop@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or download a binary from the &lt;a href=&#34;https://github.com/charmbracelet/pop/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Pop can be combined with other tools to create powerful email pipelines, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/charmbracelet/mods&#34;&gt;&lt;code&gt;charmbracelet/mods&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/charmbracelet/gum&#34;&gt;&lt;code&gt;charmbracelet/gum&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maaslalani/invoice&#34;&gt;&lt;code&gt;maaslalani/invoice&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Mods&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://github.com/charmbracelet/mods&#34;&gt;&lt;code&gt;mods&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;pop&lt;/code&gt; to write an email body with AI:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Use the &lt;code&gt;--preview&lt;/code&gt; flag to preview the email and make changes before sending.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pop &amp;lt;&amp;lt;&amp;lt; &#39;$(mods -f &#34;Explain why CLIs are awesome&#34;)&#39; \&#xA;    --subject &#34;The command line is the best&#34; \&#xA;    --preview&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;600&#34; src=&#34;https://vhs.charm.sh/vhs-1O3zo8Nsi2kPVW3vOBw4WH.gif&#34; alt=&#34;Generate email with mods and send email with pop.&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/charmbracelet/mods&#34;&gt;&lt;code&gt;charmbracelet/mods&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Gum&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://github.com/charmbracelet/gum&#34;&gt;&lt;code&gt;gum&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;pop&lt;/code&gt; to choose an email to send to and from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pop --from $(gum choose &#34;vt52@charm.sh&#34; &#34;vt78@charm.sh&#34; &#34;vt100@charm.sh&#34;)&#xA;    --to $(gum filter &amp;lt; contacts.txt)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;600&#34; src=&#34;https://vhs.charm.sh/vhs-Et9ooHB6L1XVWDL9U1TfI.gif&#34; alt=&#34;Select contact information with gum and send email with pop.&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/charmbracelet/gum&#34;&gt;&lt;code&gt;charmbracelet/gum&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Invoice&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://github.com/maaslalani/invoice&#34;&gt;&lt;code&gt;invoice&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;pop&lt;/code&gt; to generate and send invoices entirely from the command line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;FILENAME=invoice.pdf&#xA;invoice generate --item &#34;Rubber Ducky&#34; --rate 25 --quantity 2 --output $FILENAME&#xA;pop --attach $FILENAME --body &#34;See attached invoice.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;600&#34; src=&#34;https://vhs.charm.sh/vhs-4TRyv82BBDKOutgWdvyshr.gif&#34; alt=&#34;Generate invoice with invoice and attach file and send email with pop.&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maaslalani/invoice&#34;&gt;&lt;code&gt;maaslalani/invoice&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/charmbracelet/pop/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;We‚Äôd love to hear your thoughts on this project. Feel free to drop us a note!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/charmcli&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mastodon.social/@charmcli&#34;&gt;The Fediverse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://charm.sh/chat&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/charmbracelet/pop/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Part of &lt;a href=&#34;https://charm.sh&#34;&gt;Charm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://charm.sh/&#34;&gt; &lt;img alt=&#34;The Charm logo&#34; width=&#34;400&#34; src=&#34;https://stuff.charm.sh/charm-badge.jpg&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Charm ÁÉ≠Áà±ÂºÄÊ∫ê ‚Ä¢ Charm loves open source&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>okx/go-wallet-sdk</title>
    <updated>2023-07-20T01:35:12Z</updated>
    <id>tag:github.com,2023-07-20:/okx/go-wallet-sdk</id>
    <link href="https://github.com/okx/go-wallet-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multi-chain golang signature sdk, supports bitcoin, ethereum, aptos, cosmos, etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go-wallet-sdk&lt;/h1&gt; &#xA;&lt;p&gt;This is a Go language wallet solution that supports offline transactions. We currently support various mainstream public blockchains, and will gradually release the source codes for each blockchain.&lt;/p&gt; &#xA;&lt;h2&gt;Supported chains&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BTC: Supports transaction creation and signing. Also Supports BRC20-related functions, including inscription creation, BRC20 buying and selling.&lt;/li&gt; &#xA; &lt;li&gt;Ethereum: Supports transaction creation and signing.&lt;/li&gt; &#xA; &lt;li&gt;Filecoin: Supports transaction creation and signing.&lt;/li&gt; &#xA; &lt;li&gt;Polkadot: Supports transaction creation and signing.&lt;/li&gt; &#xA; &lt;li&gt;Starknet: Supports transaction creation and signing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main modules&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;coins: Implements transaction creation and signature in each coin type.&lt;/li&gt; &#xA; &lt;li&gt;crypto: Handles general security and signature algorithms.&lt;/li&gt; &#xA; &lt;li&gt;util: Provides various utility class methods.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;For specific usage examples of each coin type, please refer to the corresponding test files. Remember to replace the placeholder private key with your own private key, which is generally in hex format.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;You can provide feedback directly in GitHub Issues, and we will respond promptly.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mariocandela/beelzebub</title>
    <updated>2023-07-20T01:35:12Z</updated>
    <id>tag:github.com,2023-07-20:/mariocandela/beelzebub</id>
    <link href="https://github.com/mariocandela/beelzebub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go based low code Honeypot Framework with Enhanced Security, leveraging OpenAI GPT for System Virtualization&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Beelzebub&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mariocandela/beelzebub/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/mariocandela/beelzebub/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mariocandela/beelzebub/actions/workflows/docker-image.yml&#34;&gt;&lt;img src=&#34;https://github.com/mariocandela/beelzebub/actions/workflows/docker-image.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mariocandela/beelzebub/actions/workflows/codeql.yml&#34;&gt;&lt;img src=&#34;https://github.com/mariocandela/beelzebub/actions/workflows/codeql.yml/badge.svg?sanitize=true&#34; alt=&#34;codeql&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Beelzebub is an advanced honeypot framework designed to provide a highly secure environment for detecting and analyzing cyber attacks. It offers a low code approach for easy implementation and utilizes virtualization techniques powered by GPT-3, the OpenAI language model.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/KvbsJFp3/logo-1.png&#34; alt=&#34;Beelzebub Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OpenAI GPT Integration&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to integrate Beelzebub with OpenAI GPT-3 by referring to our comprehensive guide on Medium: &lt;a href=&#34;https://medium.com/@mario.candela.personal/how-to-build-a-highly-effective-honeypot-with-beelzebub-and-chatgpt-a2f0f05b3e1&#34;&gt;Medium Article&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For a visual representation of the integration, you can explore the following diagram:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://static.swimlanes.io/24d6634a381aa8eb0decf5bac7ae214d.png&#34;&gt;&lt;img src=&#34;https://static.swimlanes.io/24d6634a381aa8eb0decf5bac7ae214d.png&#34; alt=&#34;OpenAI Integration Diagram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Telegram Bot for Real-Time Attacks&lt;/h2&gt; &#xA;&lt;p&gt;Stay updated on real-time attacks by joining our dedicated Telegram channel: &lt;a href=&#34;https://t.me/beelzebubhoneypot&#34;&gt;Telegram Channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;To better understand the capabilities of Beelzebub, you can explore our example repository: &lt;a href=&#34;https://github.com/mariocandela/beelzebub-example&#34;&gt;mariocandela/beelzebub-example&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;We provide two quick start options for build and run Beelzebub: using Docker Compose or the Go compiler.&lt;/p&gt; &#xA;&lt;h3&gt;Using Docker Compose&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the Docker images:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Beelzebub in detached mode:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Using Go Compiler&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the necessary Go modules:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go mod download&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the Beelzebub executable:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run Beelzebub:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./beelzebub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;We provide two types of tests: unit tests and integration tests.&lt;/p&gt; &#xA;&lt;h3&gt;Unit Tests&lt;/h3&gt; &#xA;&lt;p&gt;To run unit tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make test.unit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration Tests&lt;/h3&gt; &#xA;&lt;p&gt;To run integration tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make test.integration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;p&gt;Beelzebub offers a wide range of features to enhance your honeypot environment:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenAPI ChatBot GPT-3 Linux virtualization&lt;/li&gt; &#xA; &lt;li&gt;SSH Honeypot&lt;/li&gt; &#xA; &lt;li&gt;HTTP Honeypot&lt;/li&gt; &#xA; &lt;li&gt;TCP Honeypot&lt;/li&gt; &#xA; &lt;li&gt;Prometheus openmetrics integration&lt;/li&gt; &#xA; &lt;li&gt;Docker integration&lt;/li&gt; &#xA; &lt;li&gt;RabbitMQ integration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Beelzebub allows easy configuration for different services and ports. Simply create a new file for each service/port within the &lt;code&gt;/configurations/services&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;To execute Beelzebub with your custom path, use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./beelzebub --confCore ./configurations/beelzebub.yaml --confServices ./configurations/services/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here are some example configurations for different honeypot scenarios:&lt;/p&gt; &#xA;&lt;h4&gt;Example HTTP Honeypot on Port 80&lt;/h4&gt; &#xA;&lt;h6&gt;http-80.yaml&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: &#34;v1&#34;&#xA;protocol: &#34;http&#34;&#xA;address: &#34;:80&#34;&#xA;description: &#34;Wordpress 6.0&#34;&#xA;commands:&#xA;  - regex: &#34;^(/index.php|/index.html|/)$&#34;&#xA;    handler:&#xA;      &amp;lt;html&amp;gt;&#xA;        &amp;lt;header&amp;gt;&#xA;          &amp;lt;title&amp;gt;Wordpress 6 test page&amp;lt;/title&amp;gt;&#xA;        &amp;lt;/header&amp;gt;&#xA;        &amp;lt;body&amp;gt;&#xA;          &amp;lt;h1&amp;gt;Hello from Wordpress&amp;lt;/h1&amp;gt;&#xA;        &amp;lt;/body&amp;gt;&#xA;      &amp;lt;/html&amp;gt;&#xA;    headers:&#xA;      - &#34;Content-Type: text/html&#34;&#xA;      - &#34;Server: Apache/2.4.53 (Debian)&#34;&#xA;      - &#34;X-Powered-By: PHP/7.4.29&#34;&#xA;    statusCode: 200&#xA;  - regex: &#34;^(/wp-login.php|/wp-admin)$&#34;&#xA;    handler:&#xA;      &amp;lt;html&amp;gt;&#xA;        &amp;lt;header&amp;gt;&#xA;          &amp;lt;title&amp;gt;Wordpress 6 test page&amp;lt;/title&amp;gt;&#xA;        &amp;lt;/header&amp;gt;&#xA;        &amp;lt;body&amp;gt;&#xA;          &amp;lt;form action=&#34;&#34; method=&#34;post&#34;&amp;gt;&#xA;            &amp;lt;label for=&#34;uname&#34;&amp;gt;&amp;lt;b&amp;gt;Username&amp;lt;/b&amp;gt;&amp;lt;/label&amp;gt;&#xA;            &amp;lt;input type=&#34;text&#34; placeholder=&#34;Enter Username&#34; name=&#34;uname&#34; required&amp;gt;&#xA;&#xA;            &amp;lt;label for=&#34;psw&#34;&amp;gt;&amp;lt;b&amp;gt;Password&amp;lt;/b&amp;gt;&amp;lt;/label&amp;gt;&#xA;            &amp;lt;input type=&#34;password&#34; placeholder=&#34;Enter Password&#34; name=&#34;psw&#34; required&amp;gt;&#xA;&#xA;            &amp;lt;button type=&#34;submit&#34;&amp;gt;Login&amp;lt;/button&amp;gt;&#xA;          &amp;lt;/form&amp;gt;&#xA;        &amp;lt;/body&amp;gt;&#xA;      &amp;lt;/html&amp;gt;&#xA;    headers:&#xA;      - &#34;Content-Type: text/html&#34;&#xA;      - &#34;Server: Apache/2.4.53 (Debian)&#34;&#xA;      - &#34;X-Powered-By: PHP/7.4.29&#34;&#xA;    statusCode: 200&#xA;  - regex: &#34;^.*$&#34;&#xA;    handler:&#xA;      &amp;lt;html&amp;gt;&#xA;        &amp;lt;header&amp;gt;&#xA;          &amp;lt;title&amp;gt;404&amp;lt;/title&amp;gt;&#xA;        &amp;lt;/header&amp;gt;&#xA;        &amp;lt;body&amp;gt;&#xA;          &amp;lt;h1&amp;gt;Not found!&amp;lt;/h1&amp;gt;&#xA;        &amp;lt;/body&amp;gt;&#xA;      &amp;lt;/html&amp;gt;&#xA;    headers:&#xA;      - &#34;Content-Type: text/html&#34;&#xA;      - &#34;Server: Apache/2.4.53 (Debian)&#34;&#xA;      - &#34;X-Powered-By: PHP/7.4.29&#34;&#xA;    statusCode: 404&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example HTTP Honeypot on Port 8080&lt;/h4&gt; &#xA;&lt;h6&gt;http-8080.yaml&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: &#34;v1&#34;&#xA;protocol: &#34;http&#34;&#xA;address: &#34;:8080&#34;&#xA;description: &#34;Apache 401&#34;&#xA;commands:&#xA;  - regex: &#34;.*&#34;&#xA;    handler: &#34;Unauthorized&#34;&#xA;    headers:&#xA;      - &#34;www-Authenticate: Basic&#34;&#xA;      - &#34;server: Apache&#34;&#xA;    statusCode: 401&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example SSH Honeypot&lt;/h4&gt; &#xA;&lt;h6&gt;Honeypot with GPT-3 on Port 2222&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: &#34;v1&#34;&#xA;protocol: &#34;ssh&#34;&#xA;address: &#34;:2222&#34;&#xA;description: &#34;SSH interactive ChatGPT&#34;&#xA;commands:&#xA;  - regex: &#34;^(.+)$&#34;&#xA;    plugin: &#34;OpenAIGPTLinuxTerminal&#34;&#xA;serverVersion: &#34;OpenSSH&#34;&#xA;serverName: &#34;ubuntu&#34;&#xA;passwordRegex: &#34;^(root|qwerty|Smoker666|123456|jenkins|minecraft|sinus|alex|postgres|Ly123456)$&#34;&#xA;deadlineTimeoutSeconds: 60&#xA;plugin:&#xA;  openAPIChatGPTSecretKey: &#34;Your OpenAI Secret Key&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;SSH Honeypot on Port 22&lt;/h6&gt; &#xA;&lt;h6&gt;ssh-22.yaml&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: &#34;v1&#34;&#xA;protocol: &#34;ssh&#34;&#xA;address: &#34;:22&#34;&#xA;&#xA;&#xA;description: &#34;SSH interactive&#34;&#xA;commands:&#xA;  - regex: &#34;^ls$&#34;&#xA;    handler: &#34;Documents Images Desktop Downloads .m2 .kube .ssh .docker&#34;&#xA;  - regex: &#34;^pwd$&#34;&#xA;    handler: &#34;/home/&#34;&#xA;  - regex: &#34;^uname -m$&#34;&#xA;    handler: &#34;x86_64&#34;&#xA;  - regex: &#34;^docker ps$&#34;&#xA;    handler: &#34;CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES&#34;&#xA;  - regex: &#34;^docker .*$&#34;&#xA;    handler: &#34;Error response from daemon: dial unix docker.raw.sock: connect: connection refused&#34;&#xA;  - regex: &#34;^uname$&#34;&#xA;    handler: &#34;Linux&#34;&#xA;  - regex: &#34;^ps$&#34;&#xA;    handler: &#34;PID TTY TIME CMD\n21642 ttys000 0:00.07 /bin/dockerd&#34;&#xA;  - regex: &#34;^(.+)$&#34;&#xA;    handler: &#34;command not found&#34;&#xA;serverVersion: &#34;OpenSSH&#34;&#xA;serverName: &#34;ubuntu&#34;&#xA;passwordRegex: &#34;^(root|qwerty|Smoker666)$&#34;&#xA;deadlineTimeoutSeconds: 60&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/jdpfT0LB/Schermata-2022-06-02-alle-12-46-50.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Our future plans for Beelzebub include developing it into a robust PaaS platform.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The Beelzebub team welcomes contributions and project participation. Whether you want to report bugs, contribute new features, or have any questions, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/mariocandela/beelzebub/main/CONTRIBUTING.md&#34;&gt;Contributor Guide&lt;/a&gt; for detailed information. We encourage all participants and maintainers to adhere to our &lt;a href=&#34;https://raw.githubusercontent.com/mariocandela/beelzebub/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; and foster a supportive and respectful community.&lt;/p&gt; &#xA;&lt;p&gt;Happy hacking!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Beelzebub is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/mariocandela/beelzebub/main/LICENSE&#34;&gt;GNU GPL 3 License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/donate/?business=P75FH5LXKQTAC&amp;amp;no_recurring=0&amp;amp;currency_code=EUR&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>