<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-18T01:32:37Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hashicorp/packer</title>
    <updated>2022-12-18T01:32:37Z</updated>
    <id>tag:github.com,2022-12-18:/hashicorp/packer</id>
    <link href="https://github.com/hashicorp/packer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Packer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hashicorp/packer/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/hashicorp/packer/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discuss.hashicorp.com/c/packer&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discuss-packer-3d89ff?style=flat&#34; alt=&#34;Discuss&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/hashicorp/packer&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/hashicorp/packer&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/hashicorp/packer&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/hashicorp/packer&#34; alt=&#34;GoReportCard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;text-align:center;&#34;&gt; &lt;a href=&#34;https://www.packer.io&#34;&gt; &lt;img alt=&#34;HashiCorp Packer logo&#34; src=&#34;https://raw.githubusercontent.com/hashicorp/packer/main/website/public/img/logo-packer-padded.svg?sanitize=true&#34; width=&#34;500&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Packer is a tool for building identical machine images for multiple platforms from a single source configuration.&lt;/p&gt; &#xA;&lt;p&gt;Packer is lightweight, runs on every major operating system, and is highly performant, creating machine images for multiple platforms in parallel. Packer comes out of the box with support for many platforms, the full list of which can be found at &lt;a href=&#34;https://www.packer.io/docs/builders&#34;&gt;https://www.packer.io/docs/builders&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Support for other platforms can be added via plugins.&lt;/p&gt; &#xA;&lt;p&gt;The images that Packer creates can easily be turned into &lt;a href=&#34;http://www.vagrantup.com&#34;&gt;Vagrant&lt;/a&gt; boxes.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There is a great &lt;a href=&#34;https://learn.hashicorp.com/tutorials/packer/get-started-install-cli&#34;&gt;introduction and getting started guide&lt;/a&gt; for those with a bit more patience. Otherwise, the quick start below will get you up and running quickly, at the sacrifice of not explaining some key points.&lt;/p&gt; &#xA;&lt;p&gt;First, &lt;a href=&#34;https://www.packer.io/downloads.html&#34;&gt;download a pre-built Packer binary&lt;/a&gt; for your operating system or &lt;a href=&#34;https://github.com/hashicorp/packer/raw/master/.github/CONTRIBUTING.md#setting-up-go-to-work-on-packer&#34;&gt;compile Packer yourself&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After Packer is installed, create your first template, which tells Packer what platforms to build images for and how you want to build them. In our case, we&#39;ll create a simple AMI that has Redis pre-installed.&lt;/p&gt; &#xA;&lt;p&gt;Save this file as &lt;code&gt;quick-start.pkr.hcl&lt;/code&gt;. Export your AWS credentials as the &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; environment variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;variable &#34;access_key&#34; {&#xA;  type    = string&#xA;  default = &#34;${env(&#34;AWS_ACCESS_KEY_ID&#34;)}&#34;&#xA;}&#xA;&#xA;variable &#34;secret_key&#34; {&#xA;  type      = string&#xA;  default   = &#34;${env(&#34;AWS_SECRET_ACCESS_KEY&#34;)}&#34;&#xA;  sensitive = true&#xA;}&#xA;&#xA;locals { timestamp = regex_replace(timestamp(), &#34;[- TZ:]&#34;, &#34;&#34;) }&#xA;&#xA;source &#34;amazon-ebs&#34; &#34;quick-start&#34; {&#xA;  access_key    = &#34;${var.access_key}&#34;&#xA;  ami_name      = &#34;packer-example ${local.timestamp}&#34;&#xA;  instance_type = &#34;t2.micro&#34;&#xA;  region        = &#34;us-east-1&#34;&#xA;  secret_key    = &#34;${var.secret_key}&#34;&#xA;  source_ami    = &#34;ami-af22d9b9&#34;&#xA;  ssh_username  = &#34;ubuntu&#34;&#xA;}&#xA;&#xA;build {&#xA;  sources = [&#34;source.amazon-ebs.quick-start&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, tell Packer to build the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ packer build quick-start.pkr.hcl&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Packer will build an AMI according to the &#34;quick-start&#34; template. The AMI will be available in your AWS account. To delete the AMI, you must manually delete it using the &lt;a href=&#34;https://console.aws.amazon.com/&#34;&gt;AWS console&lt;/a&gt;. Packer builds your images, it does not manage their lifecycle. Where they go, how they&#39;re run, etc., is up to you.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Comprehensive documentation is viewable on the Packer website at &lt;a href=&#34;https://www.packer.io/docs&#34;&gt;https://www.packer.io/docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Packer&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/hashicorp/packer/raw/master/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for best practices and instructions on setting up your development environment to work on Packer.&lt;/p&gt; &#xA;&lt;h2&gt;Unmaintained Plugins&lt;/h2&gt; &#xA;&lt;p&gt;As contributors&#39; circumstances change, development on a community maintained plugin can slow. When this happens, HashiCorp may use GitHub&#39;s option to archive the pluginâ€™s repository, to clearly signal the plugin&#39;s status to users.&lt;/p&gt; &#xA;&lt;p&gt;What does &lt;strong&gt;unmaintained&lt;/strong&gt; mean?&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The code repository and all commit history will still be available.&lt;/li&gt; &#xA; &lt;li&gt;Documentation will remain on the Packer website.&lt;/li&gt; &#xA; &lt;li&gt;Issues and pull requests are monitored as a best effort.&lt;/li&gt; &#xA; &lt;li&gt;No active development will be performed by HashiCorp.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you are interested in maintaining an unmaintained or archived plugin, please reach out to us at &lt;a href=&#34;mailto:packer@hashicorp.com&#34;&gt;packer@hashicorp.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aquasecurity/tracee</title>
    <updated>2022-12-18T01:32:37Z</updated>
    <id>tag:github.com,2022-12-18:/aquasecurity/tracee</id>
    <link href="https://github.com/aquasecurity/tracee" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux Runtime Security and Forensics using eBPF&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aquasecurity/tracee/main/docs/images/tracee.png&#34; alt=&#34;Tracee Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aquasecurity/tracee/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/aquasecurity/tracee&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/aquasecurity/tracee&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/aquasecurity/tracee&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aquasecurity/tracee/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/aquasecurity/tracee&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/aquasec/tracee&#34;&gt;&lt;img src=&#34;https://badgen.net/docker/pulls/aquasec/tracee&#34; alt=&#34;docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aquasecurity/tracee/actions/workflows/release-snapshot.yaml&#34;&gt;&lt;img src=&#34;https://github.com/aquasecurity/tracee/actions/workflows/release-snapshot.yaml/badge.svg?sanitize=true&#34; alt=&#34;Release Snapshot&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aquasecurity/tracee/actions/workflows/test-os-packaging-daily.yaml&#34;&gt;&lt;img src=&#34;https://github.com/aquasecurity/tracee/actions/workflows/test-os-packaging-daily.yaml/badge.svg?sanitize=true&#34; alt=&#34;OS Packages (DAILY)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aquasecurity/tracee/actions/workflows/test-daily.yaml&#34;&gt;&lt;img src=&#34;https://github.com/aquasecurity/tracee/actions/workflows/test-daily.yaml/badge.svg?sanitize=true&#34; alt=&#34;Tests (DAILY)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Tracee: Runtime Security and Forensics using eBPF&lt;/h1&gt; &#xA;&lt;p&gt;Tracee is a runtime security and forensics tool for Linux based cloud deployments. It uses &lt;strong&gt;eBPF&lt;/strong&gt; to trace the host OS and applications &lt;strong&gt;at runtime&lt;/strong&gt;, and analyzes collected events in order to detect &lt;strong&gt;suspicious behavioral patterns&lt;/strong&gt;. It can be run as a daemon-set in your kubernetes environment, but is flexible to be run for many purposes on any Linux based hosts. It can be delivered via Helm, as a docker container, or as a small set of static binaries.&lt;/p&gt; &#xA;&lt;p&gt;The goal of Tracee is to serve as an easy to use and effective solution for learning when cloud native attacks occur in your environment. By leveraging Aqua&#39;s advanced security research, performant eBPF based detection, and cloud native first approach Tracee makes runtime detection accesible, powerful, and effective.&lt;/p&gt; &#xA;&lt;p&gt;Watch a quick video demo of Tracee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/x2_iF0KjPKs?t=2971&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aquasecurity/tracee/main/docs/images/tracee_video_thumbnail.png&#34; alt=&#34;Tracee Live Demo AND Q&amp;amp;A&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://info.aquasec.com/ebpf-runtime-security&#34;&gt;Tracee video hub&lt;/a&gt; for more videos.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The full documentation of Tracee is available at &lt;a href=&#34;https://aquasecurity.github.io/tracee/dev&#34;&gt;https://aquasecurity.github.io/tracee/dev&lt;/a&gt;. You can use the version selector on top to view documentation for a specific version of Tracee.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart (Kubernetes)&lt;/h2&gt; &#xA;&lt;p&gt;Tracee is designed to monitor hosts in kubernetes clusters. To see this in action check out the quickstart &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/tracee/main/docs/getting-started/kubernetes-quickstart.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart (docker)&lt;/h2&gt; &#xA;&lt;p&gt;To get a closer feel for what tracee accomplishes, you can run tracee on your local machine. Follow along to the quickstart &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/tracee/main/docs/getting-started/docker-quickstart.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Execute docker container with the word &lt;code&gt;trace&lt;/code&gt; as an initial argument, and &lt;strong&gt;tracee-ebpf&lt;/strong&gt; will be executed, instead of the full tracee detection engine.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;docker run \&#xA;  --name tracee --rm -it \&#xA;  --pid=host --cgroupns=host --privileged \&#xA;  -v /etc/os-release:/etc/os-release-host:ro \&#xA;  -e LIBBPFGO_OSRELEASE_FILE=/etc/os-release-host \&#xA;  aquasec/tracee:latest \&#xA;  trace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;Tracee is composed of the following sub-projects, which are hosted in the aquasecurity/tracee repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aquasecurity.github.io/tracee/dev/docs/tracing/&#34;&gt;Tracee-eBPF&lt;/a&gt; - Linux Tracing and Forensics using eBPF&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aquasecurity.github.io/tracee/dev/docs/detecting/&#34;&gt;Tracee-Rules&lt;/a&gt; - Runtime Security Detection Engine&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Tracee is an &lt;a href=&#34;https://aquasec.com&#34;&gt;Aqua Security&lt;/a&gt; open source project. Learn about our open source work and portfolio &lt;a href=&#34;https://www.aquasec.com/products/open-source-projects/&#34;&gt;Here&lt;/a&gt;. Join the community, and talk to us about any matter in &lt;a href=&#34;https://github.com/aquasecurity/tracee/discussions&#34;&gt;GitHub Discussion&lt;/a&gt; or &lt;a href=&#34;https://slack.aquasec.com&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cue-lang/cue</title>
    <updated>2022-12-18T01:32:37Z</updated>
    <id>tag:github.com,2022-12-18:/cue-lang/cue</id>
    <link href="https://github.com/cue-lang/cue" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The new home of the CUE language! Validate and define text-based and dynamic configuration&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/cuelang.org/go&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/cuelang.org/go.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cue-lang/cue/actions/workflows/trybot.yml?query=branch%3Amaster+event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/cue-lang/cue/actions/workflows/trybot.yml/badge.svg?sanitize=true&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golangci.com/r/github.com/cue-lang/cue&#34;&gt;&lt;img src=&#34;https://golangci.com/badges/github.com/cue-lang/cue.svg?sanitize=true&#34; alt=&#34;GolangCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/dl/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go-1.18-9cf.svg?sanitize=true&#34; alt=&#34;Go 1.18+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platforms-linux%7Cwindows%7Cmacos-inactive.svg?sanitize=true&#34; alt=&#34;platforms&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The CUE Data Constraint Language&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Configure, Unify, Execute&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;CUE is an open source data constraint language which aims to simplify tasks involving defining and using data.&lt;/p&gt; &#xA;&lt;p&gt;It is a superset of JSON, allowing users familiar with JSON to get started quickly.&lt;/p&gt; &#xA;&lt;h3&gt;What is it for?&lt;/h3&gt; &#xA;&lt;p&gt;You can use CUE to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;define a detailed validation schema for your data (manually or automatically from data)&lt;/li&gt; &#xA; &lt;li&gt;reduce boilerplate in your data (manually or automatically from schema)&lt;/li&gt; &#xA; &lt;li&gt;extract a schema from code&lt;/li&gt; &#xA; &lt;li&gt;generate type definitions and validation code&lt;/li&gt; &#xA; &lt;li&gt;merge JSON in a principled way&lt;/li&gt; &#xA; &lt;li&gt;define and run declarative scripts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How?&lt;/h3&gt; &#xA;&lt;p&gt;CUE merges the notion of schema and data. The same CUE definition can simultaneously be used for validating data and act as a template to reduce boilerplate. Schema definition is enriched with fine-grained value definitions and default values. At the same time, data can be simplified by removing values implied by such detailed definitions. The merging of these two concepts enables many tasks to be handled in a principled way.&lt;/p&gt; &#xA;&lt;p&gt;Constraints provide a simple and well-defined, yet powerful, alternative to inheritance, a common source of complexity with configuration languages.&lt;/p&gt; &#xA;&lt;h3&gt;CUE Scripting&lt;/h3&gt; &#xA;&lt;p&gt;The CUE scripting layer defines declarative scripting, expressed in CUE, on top of data. This solves three problems: working around the closedness of CUE definitions (we say CUE is hermetic), providing an easy way to share common scripts and workflows for using data, and giving CUE the knowledge of how data is used to optimize validation.&lt;/p&gt; &#xA;&lt;p&gt;There are many tools that interpret data or use a specialized language for a specific domain (Kustomize, Ksonnet). This solves dealing with data on one level, but the problem it solves may repeat itself at a higher level when integrating other systems in a workflow. CUE scripting is generic and allows users to define any workflow.&lt;/p&gt; &#xA;&lt;h3&gt;Tooling&lt;/h3&gt; &#xA;&lt;p&gt;CUE is designed for automation. Some aspects of this are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;convert existing YAML and JSON&lt;/li&gt; &#xA; &lt;li&gt;automatically simplify configurations&lt;/li&gt; &#xA; &lt;li&gt;rich APIs designed for automated tooling&lt;/li&gt; &#xA; &lt;li&gt;formatter&lt;/li&gt; &#xA; &lt;li&gt;arbitrary-precision arithmetic&lt;/li&gt; &#xA; &lt;li&gt;generate CUE templates from source code&lt;/li&gt; &#xA; &lt;li&gt;generate source code from CUE definitions (TODO)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Download and Install&lt;/h3&gt; &#xA;&lt;h4&gt;Release builds&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cue-lang/cue/releases&#34;&gt;Download&lt;/a&gt; the latest release from GitHub.&lt;/p&gt; &#xA;&lt;h4&gt;Install using Homebrew&lt;/h4&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;, you can install using the CUE Homebrew tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install cue-lang/tap/cue&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install from Source&lt;/h4&gt; &#xA;&lt;!-- Keep the following in sync with cmd/cue/cmd/testdata/script/install*.txtar --&gt; &#xA;&lt;p&gt;To install the &lt;code&gt;cue&lt;/code&gt; command line tool, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install cuelang.org/go/cmd/cue@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details, see &lt;a href=&#34;https://raw.githubusercontent.com/cue-lang/cue/master/doc/install.md&#34;&gt;Installing CUE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Learning CUE&lt;/h3&gt; &#xA;&lt;p&gt;The fastest way to learn the basics is to follow the &lt;a href=&#34;https://raw.githubusercontent.com/cue-lang/cue/master/doc/tutorial/basics/Readme.md&#34;&gt;tutorial on basic language constructs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A more elaborate tutorial demonstrating of how to convert and restructure an existing set of Kubernetes configurations is available in &lt;a href=&#34;https://raw.githubusercontent.com/cue-lang/cue/master/doc/tutorial/kubernetes/README.md&#34;&gt;written form&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cue-lang/cue/master/doc/ref/spec.md&#34;&gt;Language Specification&lt;/a&gt;: official CUE Language specification.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/cuelang.org/go/cue&#34;&gt;API&lt;/a&gt;: the API on pkg.go.dev&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/cuelang.org/go/pkg&#34;&gt;Builtin packages&lt;/a&gt;: builtins available from CUE programs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cue-lang/cue/master/doc/cmd/cue.md&#34;&gt;&lt;code&gt;cue&lt;/code&gt; Command line reference&lt;/a&gt;: the &lt;code&gt;cue&lt;/code&gt; command&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Our canonical Git repository is located at &lt;a href=&#34;https://review.gerrithub.io/q/project:cue-lang%252Fcue&#34;&gt;https://review.gerrithub.io/q/project:cue-lang%252Fcue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To contribute, please read the &lt;a href=&#34;https://raw.githubusercontent.com/cue-lang/cue/master/doc/contribute.md&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To report issues or make a feature request, use the &lt;a href=&#34;https://cuelang.org/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Changes can be contributed using Gerrit or Github pull requests.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Guidelines for participating in CUE community spaces and a reporting process for handling issues can be found in the &lt;a href=&#34;https://cuelang.org/docs/contribution_guidelines/conduct&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;You can get in touch with the cuelang community in the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask questions via &lt;a href=&#34;https://github.com/cue-lang/cue/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chat with us on our &lt;a href=&#34;https://join.slack.com/t/cuelang/shared_invite/enQtNzQwODc3NzYzNTA0LTAxNWQwZGU2YWFiOWFiOWQ4MjVjNGQ2ZTNlMmIxODc4MDVjMDg5YmIyOTMyMjQ2MTkzMTU5ZjA1OGE0OGE1NmE&#34;&gt;Slack workspace&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Unless otherwise noted, the CUE source files are distributed under the Apache 2.0 license found in the LICENSE file.&lt;/p&gt; &#xA;&lt;p&gt;This is not an officially supported Google product.&lt;/p&gt;</summary>
  </entry>
</feed>