<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-16T01:35:38Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mtlynch/picoshare</title>
    <updated>2023-02-16T01:35:38Z</updated>
    <id>tag:github.com,2023-02-16:/mtlynch/picoshare</id>
    <link href="https://github.com/mtlynch/picoshare" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A minimalist, easy-to-host service for sharing images and other files&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PicoShare&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/mtlynch/picoshare&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/mtlynch/picoshare.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/mtlynch/picoshare/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/mtlynch/picoshare?sort=semver&amp;amp;maxAge=86400&#34; alt=&#34;Docker Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mtlynch/picoshare/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/mtlynch/picoshare&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mtlynch/picoshare/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/mtlynch/picoshare&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mtlynch/picoshare/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/mtlynch/picoshare&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/mtlynch/picoshare/master/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/:license-agpl-blue.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;PicoShare is a minimalist service that allows you to share files easily.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://demo.pico.rocks&#34;&gt;Live demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mtlynch/picoshare/master/docs/readme-assets/demo-full.gif&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mtlynch/picoshare/master/docs/readme-assets/demo.gif&#34; alt=&#34;PicoShare demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why PicoShare?&lt;/h2&gt; &#xA;&lt;p&gt;There are a million services for sharing files, but none of them are quite like PicoShare. Here are PicoShare&#39;s advantages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Direct download links&lt;/strong&gt;: PicoShare gives you a direct download link you can share with anyone. They can view or download the file with no ads or signups.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No file restrictions&lt;/strong&gt;: Unlike sites like imgur, Vimeo, or SoundCloud that only allow you to share specific types of files, PicoShare lets you share any file of any size.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No resizing/re-encoding&lt;/strong&gt;: If you upload media like images, video, or audio, PicoShare never forces you to wait on re-encoding. You get a direct download link as soon as you upload the file, and PicoShare never resizes or re-encodes your file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run PicoShare&lt;/h2&gt; &#xA;&lt;h3&gt;From source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PS_SHARED_SECRET=somesecretpass PORT=4001 \&#xA;  go run cmd/picoshare/main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From Docker&lt;/h3&gt; &#xA;&lt;p&gt;To run PicoShare within a Docker container, mount a volume from your local system to store the PicoShare sqlite database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run \&#xA;  --env &#34;PORT=4001&#34; \&#xA;  --env &#34;PS_SHARED_SECRET=somesecretpass&#34; \&#xA;  --publish 4001:4001/tcp \&#xA;  --volume &#34;${PWD}/data:/data&#34; \&#xA;  --name picoshare \&#xA;  mtlynch/picoshare&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From Docker + cloud data replication&lt;/h3&gt; &#xA;&lt;p&gt;If you specify settings for a &lt;a href=&#34;https://litestream.io/&#34;&gt;Litestream&lt;/a&gt;-compatible cloud storage location, PicoShare will automatically replicate your data.&lt;/p&gt; &#xA;&lt;p&gt;You can kill the container and start it later, and PicoShare will restore your data from the cloud storage location and continue as if there was no interruption.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PORT=4001&#xA;PS_SHARED_SECRET=&#34;somesecretpass&#34;&#xA;LITESTREAM_BUCKET=YOUR-LITESTREAM-BUCKET&#xA;LITESTREAM_ENDPOINT=YOUR-LITESTREAM-ENDPOINT&#xA;LITESTREAM_ACCESS_KEY_ID=YOUR-ACCESS-ID&#xA;LITESTREAM_SECRET_ACCESS_KEY=YOUR-SECRET-ACCESS-KEY&#xA;&#xA;docker run \&#xA;  --publish &#34;${PORT}:${PORT}/tcp&#34; \&#xA;  --env &#34;PORT=${PORT}&#34; \&#xA;  --env &#34;PS_SHARED_SECRET=${PS_SHARED_SECRET}&#34; \&#xA;  --env &#34;LITESTREAM_ACCESS_KEY_ID=${LITESTREAM_ACCESS_KEY_ID}&#34; \&#xA;  --env &#34;LITESTREAM_SECRET_ACCESS_KEY=${LITESTREAM_SECRET_ACCESS_KEY}&#34; \&#xA;  --env &#34;LITESTREAM_BUCKET=${LITESTREAM_BUCKET}&#34; \&#xA;  --env &#34;LITESTREAM_ENDPOINT=${LITESTREAM_ENDPOINT}&#34; \&#xA;  --name picoshare \&#xA;  mtlynch/picoshare&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only run one Docker container for each Litestream location. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PicoShare can&#39;t sync writes across multiple instances.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;To run PicoShare under docker-compose, copy the following to a file called &lt;code&gt;docker-compose.yml&lt;/code&gt; and then run &lt;code&gt;docker-compose up&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3.2&#34;&#xA;services:&#xA;  picoshare:&#xA;    image: mtlynch/picoshare&#xA;    environment:&#xA;      - PORT=4001&#xA;      - PS_SHARED_SECRET=dummypass # Change to any password&#xA;    ports:&#xA;      - 4001:4001&#xA;    command: -db /data/store.db&#xA;    volumes:&#xA;      - ./data:/data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;h3&gt;Command-line flags&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Flag&lt;/th&gt; &#xA;   &lt;th&gt;Meaning&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-db&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to SQLite database&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;data/store.db&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-vacuum&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Vacuum database periodically to reclaim disk space (increases RAM usage)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Docker environment variables&lt;/h3&gt; &#xA;&lt;p&gt;You can adjust behavior of the Docker container by passing these parameters with &lt;code&gt;docker run -e&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th&gt;Meaning&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TCP port on which to listen for HTTP connections (defaults to 4001).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LITESTREAM_BUCKET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Litestream-compatible cloud storage bucket where Litestream should replicate data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LITESTREAM_ENDPOINT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Litestream-compatible cloud storage endpoint where Litestream should replicate data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LITESTREAM_ACCESS_KEY_ID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Litestream-compatible cloud storage access key ID to the bucket where you want to replicate data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LITESTREAM_SECRET_ACCESS_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Litestream-compatible cloud storage secret access key to the bucket where you want to replicate data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Docker build args&lt;/h3&gt; &#xA;&lt;p&gt;If you rebuild the Docker image from source, you can adjust the build behavior with &lt;code&gt;docker build --build-arg&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Build Arg&lt;/th&gt; &#xA;   &lt;th&gt;Meaning&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;litestream_version&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Version of &lt;a href=&#34;https://litestream.io/&#34;&gt;Litestream&lt;/a&gt; to use for data replication&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0.3.9&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;PicoShare is easy to deploy to cloud hosting platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mtlynch/picoshare/master/docs/deployment/fly.io.md&#34;&gt;fly.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>prometheus/snmp_exporter</title>
    <updated>2023-02-16T01:35:38Z</updated>
    <id>tag:github.com,2023-02-16:/prometheus/snmp_exporter</id>
    <link href="https://github.com/prometheus/snmp_exporter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SNMP Exporter for Prometheus&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prometheus SNMP Exporter&lt;/h1&gt; &#xA;&lt;p&gt;This exporter is the recommended way to expose SNMP data in a format which Prometheus can ingest.&lt;/p&gt; &#xA;&lt;p&gt;To simply get started, it&#39;s recommended to use the &lt;code&gt;if_mib&lt;/code&gt; module with switches, access points, or routers.&lt;/p&gt; &#xA;&lt;h1&gt;Concepts&lt;/h1&gt; &#xA;&lt;p&gt;While SNMP uses a hierarchical data structure and Prometheus uses an n-dimnensional matrix, the two systems map perfectly, and without the need to walk through data by hand. &lt;code&gt;snmp_exporter&lt;/code&gt; maps the data for you.&lt;/p&gt; &#xA;&lt;h2&gt;Prometheus&lt;/h2&gt; &#xA;&lt;p&gt;Prometheus is able to map SNMP index instances to labels. For example, the &lt;code&gt;ifEntry&lt;/code&gt; specifies an INDEX of &lt;code&gt;ifIndex&lt;/code&gt;. This becomes the &lt;code&gt;ifIndex&lt;/code&gt; label in Prometheus.&lt;/p&gt; &#xA;&lt;p&gt;If an SNMP entry has multiple index values, each value is mapped to a separate Prometheus label.&lt;/p&gt; &#xA;&lt;h2&gt;SNMP&lt;/h2&gt; &#xA;&lt;p&gt;SNMP is structured in OID trees, described by MIBs. OID subtrees have the same order across different locations in the tree. The order under &lt;code&gt;1.3.6.1.2.1.2.2.1.1&lt;/code&gt; (&lt;code&gt;ifIndex&lt;/code&gt;) is the same as in &lt;code&gt;1.3.6.1.2.1.2.2.1.2&lt;/code&gt; (&lt;code&gt;ifDescr&lt;/code&gt;), &lt;code&gt;1.3.6.1.2.1.31.1.1.1.10&lt;/code&gt; (&lt;code&gt;ifHCOutOctets&lt;/code&gt;), etc. The numbers are OIDs, the names in parentheses are the names from a MIB, in this case &lt;a href=&#34;http://www.oidview.com/mibs/0/IF-MIB.html&#34;&gt;IF-MIB&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Mapping&lt;/h2&gt; &#xA;&lt;p&gt;Given a device with an interface at number 2, a partial &lt;code&gt;snmpwalk&lt;/code&gt; return looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1.3.6.1.2.1.2.2.1.1.2 = INTEGER: 2         # ifIndex for &#39;2&#39; is literally just &#39;2&#39;&#xA;1.3.6.1.2.1.2.2.1.2.2 = STRING: &#34;eth0&#34;     # ifDescr&#xA;1.3.6.1.2.1.31.1.1.1.1 = STRING: &#34;eth0&#34;    # IfName&#xA;1.3.6.1.2.1.31.1.1.1.10.2 = INTEGER: 1000  # ifHCOutOctets, 1000 bytes&#xA;1.3.6.1.2.1.31.1.1.1.18.2 = STRING: &#34;&#34;     # ifAlias&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;snmp_exporter&lt;/code&gt; combines all of this data into:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ifHCOutOctets{ifAlias=&#34;&#34;,ifDescr=&#34;eth0&#34;,ifIndex=&#34;2&#34;,ifName=&#34;eth0&#34;} 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Scaling&lt;/h1&gt; &#xA;&lt;p&gt;A single instance of &lt;code&gt;snmp_exporter&lt;/code&gt; can be run for thousands of devices.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Binaries can be downloaded from the &lt;a href=&#34;https://github.com/prometheus/snmp_exporter/releases&#34;&gt;Github releases&lt;/a&gt; page and need no special installation.&lt;/p&gt; &#xA;&lt;p&gt;We also provide a sample &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/snmp_exporter/main/examples/systemd/snmp_exporter.service&#34;&gt;systemd unit file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Start &lt;code&gt;snmp_exporter&lt;/code&gt; as a daemon or from CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./snmp_exporter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;http://localhost:9116/snmp?module=if_mib&amp;amp;target=1.2.3.4&#34;&gt;http://localhost:9116/snmp?module=if_mib&amp;amp;target=1.2.3.4&lt;/a&gt; where &lt;code&gt;1.2.3.4&lt;/code&gt; is the IP or FQDN of the SNMP device to get metrics from and &lt;code&gt;if_mib&lt;/code&gt; is the default module, defined in &lt;code&gt;snmp.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The default configuration file name is &lt;code&gt;snmp.yml&lt;/code&gt; and should not be edited by hand. If you need to change it, see &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/snmp_exporter/main/#generating-configuration&#34;&gt;Generating configuration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default &lt;code&gt;snmp.yml&lt;/code&gt; covers a variety of common hardware walking them using SNMP v2 GETBULK.&lt;/p&gt; &#xA;&lt;h2&gt;Prometheus Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;target&lt;/code&gt; and &lt;code&gt;module&lt;/code&gt; can be passed as a parameter through relabelling.&lt;/p&gt; &#xA;&lt;p&gt;Example config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;scrape_configs:&#xA;  - job_name: &#39;snmp&#39;&#xA;    static_configs:&#xA;      - targets:&#xA;        - 192.168.1.2  # SNMP device.&#xA;        - switch.local # SNMP device.&#xA;    metrics_path: /snmp&#xA;    params:&#xA;      module: [if_mib]&#xA;    relabel_configs:&#xA;      - source_labels: [__address__]&#xA;        target_label: __param_target&#xA;      - source_labels: [__param_target]&#xA;        target_label: instance&#xA;      - target_label: __address__&#xA;        replacement: 127.0.0.1:9116  # The SNMP exporter&#39;s real hostname:port.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Similarly to &lt;a href=&#34;https://github.com/prometheus/blackbox_exporter&#34;&gt;blackbox_exporter&lt;/a&gt;, &lt;code&gt;snmp_exporter&lt;/code&gt; is meant to run on a few central machines and can be thought of like a &#34;Prometheus proxy&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;TLS and basic authentication&lt;/h3&gt; &#xA;&lt;p&gt;The SNMP Exporter supports TLS and basic authentication. This enables better control of the various HTTP endpoints.&lt;/p&gt; &#xA;&lt;p&gt;To use TLS and/or basic authentication, you need to pass a configuration file using the &lt;code&gt;--web.config.file&lt;/code&gt; parameter. The format of the file is described &lt;a href=&#34;https://github.com/prometheus/exporter-toolkit/raw/master/docs/web-configuration.md&#34;&gt;in the exporter-toolkit repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that the TLS and basic authentication settings affect all HTTP endpoints: /metrics for scraping, /snmp for scraping SNMP devices, and the web UI.&lt;/p&gt; &#xA;&lt;h3&gt;Generating configuration&lt;/h3&gt; &#xA;&lt;p&gt;Most use cases should be covered by our &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/snmp_exporter/main/snmp.yml&#34;&gt;default configuration&lt;/a&gt;. If you need to generate your own configuration from MIBs, you can use the &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/snmp_exporter/main/generator/&#34;&gt;generator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use the generator if you need to customize which objects are walked or use non-public MIBs.&lt;/p&gt; &#xA;&lt;h2&gt;Large counter value handling&lt;/h2&gt; &#xA;&lt;p&gt;In order to provide accurate counters for large Counter64 values, the exporter will automatically wrap the value every 2^53 to avoid 64-bit float rounding. Prometheus handles this gracefully for you and you will not notice any negative effects.&lt;/p&gt; &#xA;&lt;p&gt;If you need to disable this feature for non-Prometheus systems, use the command line flag &lt;code&gt;--no-snmp.wrap-large-counters&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>open-telemetry/opentelemetry-go-contrib</title>
    <updated>2023-02-16T01:35:38Z</updated>
    <id>tag:github.com,2023-02-16:/open-telemetry/opentelemetry-go-contrib</id>
    <link href="https://github.com/open-telemetry/opentelemetry-go-contrib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of extensions for OpenTelemetry-Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTelemetry-Go Contrib&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go-contrib/actions?query=workflow%3Abuild_and_test+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/open-telemetry/opentelemetry-go-contrib/workflows/build_and_test/badge.svg?sanitize=true&#34; alt=&#34;build_and_test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/open-telemetry/opentelemetry-go-contrib?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/open-telemetry/opentelemetry-go-contrib/coverage.svg?branch=main&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/go.opentelemetry.io/contrib&#34;&gt;&lt;img src=&#34;https://godoc.org/go.opentelemetry.io/contrib?status.svg?sanitize=true&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/go.opentelemetry.io/contrib&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/go.opentelemetry.io/contrib&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud-native.slack.com/archives/C01NPAXACKT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@cncf/otel--go-brightgreen.svg?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Collection of 3rd-party packages for &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go&#34;&gt;OpenTelemetry-Go&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go-contrib/main/instrumentation/&#34;&gt;Instrumentation&lt;/a&gt;: Packages providing OpenTelemetry instrumentation for 3rd-party libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go-contrib/main/propagators/&#34;&gt;Propagators&lt;/a&gt;: Packages providing OpenTelemetry context propagators for 3rd-party propagation formats.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go-contrib/main/detectors/&#34;&gt;Detectors&lt;/a&gt;: Packages providing OpenTelemetry resource detectors for 3rd-party cloud computing environments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go-contrib/main/samplers/&#34;&gt;Samplers&lt;/a&gt;: Packages providing additional implementations of OpenTelemetry samplers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Status&lt;/h2&gt; &#xA;&lt;p&gt;This project contains both stable and unstable modules. Refer to the module for its version or our &lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go-contrib/main/versions.yaml&#34;&gt;versioning manifest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Project versioning information and stability guarantees can be found in the &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go/raw/a724cf884287e04785eaa91513d26a6ef9699288/VERSIONING.md&#34;&gt;versioning documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Progress and status specific to this repository is tracked in our local &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go-contrib/projects?query=is%3Aopen&#34;&gt;project boards&lt;/a&gt; and &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go-contrib/milestones&#34;&gt;milestones&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compatibility&lt;/h3&gt; &#xA;&lt;p&gt;OpenTelemetry-Go Contrib ensures compatibility with the current supported versions of the &lt;a href=&#34;https://golang.org/doc/devel/release#policy&#34;&gt;Go language&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Each major Go release is supported until there are two newer major releases. For example, Go 1.5 was supported until the Go 1.7 release, and Go 1.6 was supported until the Go 1.8 release.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For versions of Go that are no longer supported upstream, opentelemetry-go-contrib will stop ensuring compatibility with these versions in the following manner:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A minor release of opentelemetry-go-contrib will be made to add support for the new supported release of Go.&lt;/li&gt; &#xA; &lt;li&gt;The following minor release of opentelemetry-go-contrib will remove compatibility testing for the oldest (now archived upstream) version of Go. This, and future, releases of opentelemetry-go-contrib may include features only supported by the currently supported versions of Go.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project is tested on the following systems.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Go Version&lt;/th&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.20&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.19&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.20&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.19&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MacOS&lt;/td&gt; &#xA;   &lt;td&gt;1.20&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MacOS&lt;/td&gt; &#xA;   &lt;td&gt;1.19&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MacOS&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.20&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.19&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.20&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.19&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;While this project should work for other systems, no compatibility guarantees are made for those systems currently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For information on how to contribute, consult &lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go-contrib/main/CONTRIBUTING.md&#34;&gt;the contributing guidelines&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>