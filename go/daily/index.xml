<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-29T01:32:05Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bitfield/script</title>
    <updated>2022-11-29T01:32:05Z</updated>
    <id>tag:github.com,2022-11-29:/bitfield/script</id>
    <link href="https://github.com/bitfield/script" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Making it easy to write shell-like scripts in Go&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/bitfield/script.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/bitfield/script&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/bitfield/script&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/avelino/awesome-go&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge-flat.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Go&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://circleci.com/gh/bitfield/script&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/bitfield/script.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;github.com/bitfield/script&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bitfieldconsulting.com/golang/scripting&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bitfield/script/master/img/magic.png&#34; alt=&#34;Magical gopher logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is &lt;code&gt;script&lt;/code&gt;?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;script&lt;/code&gt; is a Go library for doing the kind of tasks that shell scripts are good at: reading files, executing subprocesses, counting lines, matching strings, and so on.&lt;/p&gt; &#xA;&lt;p&gt;Why shouldn&#39;t it be as easy to write system administration programs in Go as it is in a typical shell? &lt;code&gt;script&lt;/code&gt; aims to make it just that easy.&lt;/p&gt; &#xA;&lt;p&gt;Shell scripts often compose a sequence of operations on a stream of data (a &lt;em&gt;pipeline&lt;/em&gt;). This is how &lt;code&gt;script&lt;/code&gt; works, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;This is one absolutely superb API design. Taking inspiration from shell pipes and turning it into a Go library with syntax this clean is really impressive.&lt;/em&gt;&lt;br&gt; —&lt;a href=&#34;https://news.ycombinator.com/item?id=30649524&#34;&gt;Simon Willison&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Read more: &lt;a href=&#34;https://bitfieldconsulting.com/golang/scripting&#34;&gt;Scripting with Go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Quick start: Unix equivalents&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;re already familiar with shell scripting and the Unix toolset, here is a rough guide to the equivalent &lt;code&gt;script&lt;/code&gt; operation for each listed Unix command.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Unix / shell&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;script&lt;/code&gt; equivalent&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;(any program name)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Exec&#34;&gt;&lt;code&gt;Exec&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[ -f FILE ]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#IfExists&#34;&gt;&lt;code&gt;IfExists&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.WriteFile&#34;&gt;&lt;code&gt;WriteFile&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.AppendFile&#34;&gt;&lt;code&gt;AppendFile&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;$*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Args&#34;&gt;&lt;code&gt;Args&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;basename&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Basename&#34;&gt;&lt;code&gt;Basename&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cat&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#File&#34;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; / &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Concat&#34;&gt;&lt;code&gt;Concat&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Do&#34;&gt;&lt;code&gt;Do&lt;/code&gt;&lt;/a&gt; / &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Get&#34;&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/a&gt; / &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Post&#34;&gt;&lt;code&gt;Post&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cut&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Column&#34;&gt;&lt;code&gt;Column&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dirname&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Dirname&#34;&gt;&lt;code&gt;Dirname&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;echo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Echo&#34;&gt;&lt;code&gt;Echo&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;find&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#FindFiles&#34;&gt;&lt;code&gt;FindFiles&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Match&#34;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; / &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.MatchRegexp&#34;&gt;&lt;code&gt;MatchRegexp&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;grep -v&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Reject&#34;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; / &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.RejectRegexp&#34;&gt;&lt;code&gt;RejectRegexp&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;head&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.First&#34;&gt;&lt;code&gt;First&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.JQ&#34;&gt;&lt;code&gt;JQ&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#ListFiles&#34;&gt;&lt;code&gt;ListFiles&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sed&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Replace&#34;&gt;&lt;code&gt;Replace&lt;/code&gt;&lt;/a&gt; / &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.ReplaceRegexp&#34;&gt;&lt;code&gt;ReplaceRegexp&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sha256sum&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.SHA256Sum&#34;&gt;&lt;code&gt;SHA256Sum&lt;/code&gt;&lt;/a&gt; / &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.SHA256Sums&#34;&gt;&lt;code&gt;SHA256Sums&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tail&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Last&#34;&gt;&lt;code&gt;Last&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;uniq -c&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Freq&#34;&gt;&lt;code&gt;Freq&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;wc -l&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.CountLines&#34;&gt;&lt;code&gt;CountLines&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;xargs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.ExecForEach&#34;&gt;&lt;code&gt;ExecForEach&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Some examples&lt;/h1&gt; &#xA;&lt;p&gt;Let&#39;s see some simple examples. Suppose you want to read the contents of a file as a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;contents, err := script.File(&#34;test.txt&#34;).String()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That looks straightforward enough, but suppose you now want to count the lines in that file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;numLines, err := script.File(&#34;test.txt&#34;).CountLines()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For something a bit more challenging, let&#39;s try counting the number of lines in the file that match the string &lt;code&gt;Error&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;numErrors, err := script.File(&#34;test.txt&#34;).Match(&#34;Error&#34;).CountLines()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But what if, instead of reading a specific file, we want to simply pipe input into this program, and have it output only matching lines (like &lt;code&gt;grep&lt;/code&gt;)?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Stdin().Match(&#34;Error&#34;).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just for fun, let&#39;s filter all the results through some arbitrary Go function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Stdin().Match(&#34;Error&#34;).FilterLine(strings.ToUpper).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That was almost too easy! So let&#39;s pass in a list of files on the command line, and have our program read them all in sequence and output the matching lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Args().Concat().Match(&#34;Error&#34;).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Maybe we&#39;re only interested in the first 10 matches. No problem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Args().Concat().Match(&#34;Error&#34;).First(10).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;What&#39;s that? You want to append that output to a file instead of printing it to the terminal? &lt;em&gt;You&#39;ve got some attitude, mister&lt;/em&gt;. But okay:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Args().Concat().Match(&#34;Error&#34;).First(10).AppendFile(&#34;/var/log/errors.txt&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We&#39;re not limited to getting data only from files or standard input. We can get it from HTTP requests too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Get(&#34;https://wttr.in/London?format=3&#34;).Stdout()&#xA;// Output:&#xA;// London: 🌦   +13°C&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s great for simple GET requests, but suppose we want to &lt;em&gt;send&lt;/em&gt; some data in the body of a POST request, for example. Here&#39;s how that works:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Echo(data).Post(URL).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If we need to customise the HTTP behaviour in some way, such as using our own HTTP client, we can do that:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.NewPipe().WithHTTPClient(&amp;amp;http.Client{&#xA;&#x9;Timeout: 10 * time.Second,&#xA;}).Get(&#34;https://example.com&#34;).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or maybe we need to set some custom header on the request. No problem. We can just create the request in the usual way, and set it up however we want. Then we pass it to &lt;code&gt;Do&lt;/code&gt;, which will actually perform the request:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;req, err := http.NewRequest(http.MethodGet, &#34;http://example.com&#34;, nil)&#xA;req.Header.Add(&#34;Authorization&#34;, &#34;Bearer &#34;+token)&#xA;script.Do(req).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The HTTP server could return some non-okay response, though; for example, “404 Not Found”. So what happens then?&lt;/p&gt; &#xA;&lt;p&gt;In general, when any pipe stage (such as &lt;code&gt;Do&lt;/code&gt;) encounters an error, it produces no output to subsequent stages. And &lt;code&gt;script&lt;/code&gt; treats HTTP response status codes outside the range 200-299 as errors. So the answer for the previous example is that we just won&#39;t &lt;em&gt;see&lt;/em&gt; any output from this program if the server returns an error response.&lt;/p&gt; &#xA;&lt;p&gt;Instead, the pipe “remembers” any error that occurs, and we can retrieve it later by calling its &lt;code&gt;Error&lt;/code&gt; method, or by using a &lt;em&gt;sink&lt;/em&gt; method such as &lt;code&gt;String&lt;/code&gt;, which returns an &lt;code&gt;error&lt;/code&gt; value along with the result.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Stdout&lt;/code&gt; also returns an error, plus the number of bytes successfully written (which we don&#39;t care about for this particular case). So we can check that error, which is always a good idea in Go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;_, err := script.Do(req).Stdout()&#xA;if err != nil {&#xA;&#x9;log.Fatal(err)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If, as is common, the data we get from an HTTP request is in JSON format, we can use &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;JQ&lt;/a&gt; queries to interrogate it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;data, err := script.Do(req).JQ(&#34;.[0] | {message: .commit.message, name: .commit.committer.name}&#34;).String()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can also run external programs and get their output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Exec(&#34;ping 127.0.0.1&#34;).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;Exec&lt;/code&gt; runs the command concurrently: it doesn&#39;t wait for the command to complete before returning any output. That&#39;s good, because this &lt;code&gt;ping&lt;/code&gt; command will run forever (or until we get bored).&lt;/p&gt; &#xA;&lt;p&gt;Instead, when we read from the pipe using &lt;code&gt;Stdout&lt;/code&gt;, we see each line of output as it&#39;s produced:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PING 127.0.0.1 (127.0.0.1): 56 data bytes&#xA;64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.056 ms&#xA;64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.054 ms&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the &lt;code&gt;ping&lt;/code&gt; example, we knew the exact arguments we wanted to send the command, and we just needed to run it once. But what if we don&#39;t know the arguments yet? We might get them from the user, for example.&lt;/p&gt; &#xA;&lt;p&gt;We might like to be able to run the external command repeatedly, each time passing it the next line of data from the pipe as an argument. No worries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Args().ExecForEach(&#34;ping -c 1 {{.}}&#34;).Stdout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That &lt;code&gt;{{.}}&lt;/code&gt; is standard Go template syntax; it&#39;ll substitute each line of data from the pipe into the command line before it&#39;s executed. You can write as fancy a Go template expression as you want here (but this simple example probably covers most use cases).&lt;/p&gt; &#xA;&lt;p&gt;If there isn&#39;t a built-in operation that does what we want, we can just write our own, using &lt;code&gt;Filter&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Echo(&#34;hello world&#34;).Filter(func (r io.Reader, w io.Writer) error {&#xA;&#x9;n, err := io.Copy(w, r)&#xA;&#x9;fmt.Fprintf(w, &#34;\nfiltered %d bytes\n&#34;, n)&#xA;&#x9;return err&#xA;}).Stdout()&#xA;// Output:&#xA;// hello world&#xA;// filtered 11 bytes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;func&lt;/code&gt; we supply to &lt;code&gt;Filter&lt;/code&gt; takes just two parameters: a reader to read from, and a writer to write to. The reader reads the previous stages of the pipe, as you might expect, and anything written to the writer goes to the &lt;em&gt;next&lt;/em&gt; stage of the pipe.&lt;/p&gt; &#xA;&lt;p&gt;If our &lt;code&gt;func&lt;/code&gt; returns some error, then, just as with the &lt;code&gt;Do&lt;/code&gt; example, the pipe&#39;s error status is set, and subsequent stages become a no-op.&lt;/p&gt; &#xA;&lt;p&gt;Filters run concurrently, so the pipeline can start producing output before the input has been fully read, as it did in the &lt;code&gt;ping&lt;/code&gt; example. In fact, most built-in pipe methods, including &lt;code&gt;Exec&lt;/code&gt;, are implemented &lt;em&gt;using&lt;/em&gt; &lt;code&gt;Filter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If we want to scan input line by line, we could do that with a &lt;code&gt;Filter&lt;/code&gt; function that creates a &lt;code&gt;bufio.Scanner&lt;/code&gt; on its input, but we don&#39;t need to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;script.Echo(&#34;a\nb\nc&#34;).FilterScan(func(line string, w io.Writer) {&#xA;&#x9;fmt.Fprintf(w, &#34;scanned line: %q\n&#34;, line)&#xA;}).Stdout()&#xA;// Output:&#xA;// scanned line: &#34;a&#34;&#xA;// scanned line: &#34;b&#34;&#xA;// scanned line: &#34;c&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And there&#39;s more. Much more. &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script&#34;&gt;Read the docs&lt;/a&gt; for full details, and more examples.&lt;/p&gt; &#xA;&lt;h1&gt;A realistic use case&lt;/h1&gt; &#xA;&lt;p&gt;Let&#39;s use &lt;code&gt;script&lt;/code&gt; to write a program that system administrators might actually need. One thing I often find myself doing is counting the most frequent visitors to a website over a given period of time. Given an Apache log in the Common Log Format like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;212.205.21.11 - - [30/Jun/2019:17:06:15 +0000] &#34;GET / HTTP/1.1&#34; 200 2028 &#34;https://example.com/ &#34;Mozilla/5.0 (Linux; Android 8.0.0; FIG-LX1 Build/HUAWEIFIG-LX1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.156 Mobile Safari/537.36&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;we would like to extract the visitor&#39;s IP address (the first column in the logfile), and count the number of times this IP address occurs in the file. Finally, we might like to list the top 10 visitors by frequency. In a shell script we might do something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cut -d&#39; &#39; -f 1 access.log |sort |uniq -c |sort -rn |head&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s a lot going on there, and it&#39;s pleasing to find that the equivalent &lt;code&gt;script&lt;/code&gt; program is quite brief:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;github.com/bitfield/script&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;script.Stdin().Column(1).Freq().First(10).Stdout()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s try it out with some &lt;a href=&#34;https://raw.githubusercontent.com/bitfield/script/master/testdata/access.log&#34;&gt;sample data&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;16 176.182.2.191&#xA; 7 212.205.21.11&#xA; 1 190.253.121.1&#xA; 1 90.53.111.17&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script&#34;&gt;pkg.go.dev&lt;/a&gt; for the full documentation, or read on for a summary.&lt;/p&gt; &#xA;&lt;h2&gt;Sources&lt;/h2&gt; &#xA;&lt;p&gt;These are functions that create a pipe with a given contents:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Source&lt;/th&gt; &#xA;   &lt;th&gt;Contents&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Args&#34;&gt;&lt;code&gt;Args&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;command-line arguments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Do&#34;&gt;&lt;code&gt;Do&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP response&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Echo&#34;&gt;&lt;code&gt;Echo&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Exec&#34;&gt;&lt;code&gt;Exec&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;command output&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#File&#34;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;file contents&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#FindFiles&#34;&gt;&lt;code&gt;FindFiles&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;recursive file listing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Get&#34;&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP response&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#IfExists&#34;&gt;&lt;code&gt;IfExists&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;do something only if some file exists&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#ListFiles&#34;&gt;&lt;code&gt;ListFiles&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;file listing (including wildcards)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Post&#34;&gt;&lt;code&gt;Post&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP response&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Slice&#34;&gt;&lt;code&gt;Slice&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;slice elements, one per line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Stdin&#34;&gt;&lt;code&gt;Stdin&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;standard input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Filters&lt;/h2&gt; &#xA;&lt;p&gt;Filters are methods on an existing pipe that also return a pipe, allowing you to chain filters indefinitely. The filters modify each line of their input according to the following rules:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Filter&lt;/th&gt; &#xA;   &lt;th&gt;Results&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Basename&#34;&gt;&lt;code&gt;Basename&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;removes leading path components from each line, leaving only the filename&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Column&#34;&gt;&lt;code&gt;Column&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Nth column of input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Concat&#34;&gt;&lt;code&gt;Concat&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;contents of multiple files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Dirname&#34;&gt;&lt;code&gt;Dirname&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;removes filename from each line, leaving only leading path components&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Do&#34;&gt;&lt;code&gt;Do&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;response to supplied HTTP request&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Echo&#34;&gt;&lt;code&gt;Echo&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;all input replaced by given string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Exec&#34;&gt;&lt;code&gt;Exec&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;filtered through external command&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.ExecForEach&#34;&gt;&lt;code&gt;ExecForEach&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;execute given command template for each line of input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Filter&#34;&gt;&lt;code&gt;Filter&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;user-supplied function filtering a reader to a writer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.FilterLine&#34;&gt;&lt;code&gt;FilterLine&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;user-supplied function filtering each line to a string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.FilterScan&#34;&gt;&lt;code&gt;FilterScan&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;user-supplied function filtering each line to a writer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.First&#34;&gt;&lt;code&gt;First&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;first N lines of input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Freq&#34;&gt;&lt;code&gt;Freq&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;frequency count of unique input lines, most frequent first&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Get&#34;&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;response to HTTP GET on supplied URL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Join&#34;&gt;&lt;code&gt;Join&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;replace all newlines with spaces&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.JQ&#34;&gt;&lt;code&gt;JQ&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;result of &lt;code&gt;jq&lt;/code&gt; query&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Last&#34;&gt;&lt;code&gt;Last&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;last N lines of input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Match&#34;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;lines matching given string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.MatchRegexp&#34;&gt;&lt;code&gt;MatchRegexp&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;lines matching given regexp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Post&#34;&gt;&lt;code&gt;Post&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;response to HTTP POST on supplied URL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Reject&#34;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;lines not matching given string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.RejectRegexp&#34;&gt;&lt;code&gt;RejectRegexp&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;lines not matching given regexp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Replace&#34;&gt;&lt;code&gt;Replace&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;matching text replaced with given string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.ReplaceRegexp&#34;&gt;&lt;code&gt;ReplaceRegexp&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;matching text replaced with given string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.SHA256Sums&#34;&gt;&lt;code&gt;SHA256Sums&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SHA-256 hashes of each listed file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note that filters run concurrently, rather than producing nothing until each stage has fully read its input. This is convenient for executing long-running comands, for example. If you do need to wait for the pipeline to complete, call &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Wait&#34;&gt;&lt;code&gt;Wait&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sinks&lt;/h2&gt; &#xA;&lt;p&gt;Sinks are methods that return some data from a pipe, ending the pipeline and extracting its full contents in a specified way:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sink&lt;/th&gt; &#xA;   &lt;th&gt;Destination&lt;/th&gt; &#xA;   &lt;th&gt;Results&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.AppendFile&#34;&gt;&lt;code&gt;AppendFile&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;appended to file, creating if it doesn&#39;t exist&lt;/td&gt; &#xA;   &lt;td&gt;bytes written, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Bytes&#34;&gt;&lt;code&gt;Bytes&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;data as &lt;code&gt;[]byte&lt;/code&gt;, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.CountLines&#34;&gt;&lt;code&gt;CountLines&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number of lines, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Read&#34;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;given &lt;code&gt;[]byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;bytes read, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.SHA256Sum&#34;&gt;&lt;code&gt;SHA256Sum&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SHA-256 hash, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Slice&#34;&gt;&lt;code&gt;Slice&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;data as &lt;code&gt;[]string&lt;/code&gt;, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Stdout&#34;&gt;&lt;code&gt;Stdout&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;standard output&lt;/td&gt; &#xA;   &lt;td&gt;bytes written, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.String&#34;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;data as &lt;code&gt;string&lt;/code&gt;, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Wait&#34;&gt;&lt;code&gt;Wait&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;none&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.WriteFile&#34;&gt;&lt;code&gt;WriteFile&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specified file, truncating if it exists&lt;/td&gt; &#xA;   &lt;td&gt;bytes written, error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;What&#39;s new&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;New&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.21.0&lt;/td&gt; &#xA;   &lt;td&gt;HTTP support: &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Do&#34;&gt;&lt;code&gt;Do&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Get&#34;&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.Post&#34;&gt;&lt;code&gt;Post&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.20.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/bitfield/script#Pipe.JQ&#34;&gt;&lt;code&gt;JQ&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/bitfield/script/master/CONTRIBUTING.md&#34;&gt;contributor&#39;s guide&lt;/a&gt; for some helpful tips if you&#39;d like to contribute to the &lt;code&gt;script&lt;/code&gt; project.&lt;/p&gt; &#xA;&lt;h1&gt;Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitfieldconsulting.com/golang/scripting&#34;&gt;Scripting with Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6S5EqzVwpEg&#34;&gt;Code Club: Script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitfieldconsulting.com/&#34;&gt;Bitfield Consulting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitfieldconsulting.com/books&#34;&gt;Go books by John Arundel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;small&gt;Gopher image by &lt;a href=&#34;https://github.com/MariaLetta/free-gophers-pack&#34;&gt;MariaLetta&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xm1k3/cent</title>
    <updated>2022-11-29T01:32:05Z</updated>
    <id>tag:github.com,2022-11-29:/xm1k3/cent</id>
    <link href="https://github.com/xm1k3/cent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Community edition nuclei templates, a simple tool that allows you to organize all the Nuclei templates offered by the community in one place&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xm1k3/cent/main/static/img/Cent_banner.png&#34; alt=&#34;Cent&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Community edition nuclei templates, a simple tool that allows you to organize all the Nuclei templates offered by the community in one place.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/xm1k3/cent/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-success.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;img alt=&#34;Apache license badge&#34; src=&#34;https://img.shields.io/badge/license-Apache-success&#34;&gt; &lt;a href=&#34;https://github.com/xm1k3/cent/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/xm1k3/cent&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/xm1k3/cent/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/xm1k3/cent.svg?style=social&amp;amp;label=Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/xm1k3_&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/xm1k3_.svg?logo=twitter&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://www.buymeacoffee.com/xm1k3&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/purple_img.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;GO111MODULE=on go install -v github.com/xm1k3/cent@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or &lt;a href=&#34;https://github.com/xm1k3/cent/releases&#34;&gt;download from releases&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;after installation run &lt;code&gt;cent init&lt;/code&gt; to initialize cent with the configuration files you find &lt;a href=&#34;https://github.com/xm1k3/cent/raw/main/.cent.yaml&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Supported commands&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;init&lt;/td&gt; &#xA;   &lt;td&gt;Cent init configuration file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;update&lt;/td&gt; &#xA;   &lt;td&gt;Update your repository&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;version&lt;/td&gt; &#xA;   &lt;td&gt;Print cent version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Root flags&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Flags:&#xA;      --config string   config file (default is $HOME/.cent.yaml)&#xA;  -C, --console         Print console output&#xA;  -k, --keepfolders     Keep folders (by default it only saves yaml files)&#xA;  -p, --path string     Root path to save the templates (default &#34;cent-nuclei-templates&#34;)&#xA;  -t, --threads int     Number of threads to use when cloning repositories (default 10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Update flags&lt;/h1&gt; &#xA;&lt;p&gt;This command helps you update your folder with templates by deleting unnecessary folders and files without having to do multiples git clones.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Flags:&#xA;  -d, --directories   If true remove unnecessary folders from updated $HOME/.cent.yaml&#xA;  -f, --files         If true remove unnecessary files from updated $HOME/.cent.yaml&#xA;  -p, --path string   Path to folder with nuclei templates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Init flags&lt;/h1&gt; &#xA;&lt;p&gt;This command will automatically download &lt;a href=&#34;https://raw.githubusercontent.com/xm1k3/cent/main/.cent.yaml&#34;&gt;&lt;code&gt;.cent.yaml&lt;/code&gt;&lt;/a&gt; from repo and copy it to &lt;code&gt;$HOME/.cent.yaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Flags:&#xA;  -h, --help         help for init&#xA;  -o, --overwrite    If the cent file exists overwrite it&#xA;  -u, --url string   Url from which you can download the configurations for .cent.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;▶ cent -h&#xA;▶ cent init -h&#xA;▶ cent update -h&#xA;▶ cent version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;Clone and insert all the community templates into the &lt;code&gt;cent-nuclei-templates&lt;/code&gt; folder&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;▶ cent -p cent-nuclei-templates -k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xm1k3/cent/main/static/img/cent-v1.0.png&#34; alt=&#34;cent&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have updated the &lt;code&gt;cent.yaml&lt;/code&gt; file by adding new folders&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;exclude-dirs:&#xA;  - ...&#xA;  - dns&#xA;  - ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;just do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;▶ cent update -p cent-nuclei-templates -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and &lt;code&gt;cent&lt;/code&gt; will automatically delete all &lt;code&gt;dns&lt;/code&gt; folder present in &lt;code&gt;cent-nuclei-templates&lt;/code&gt; without cloning all the github repos.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xm1k3/cent/main/static/img/cent-update.png&#34; alt=&#34;cent update&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Same thing with &lt;code&gt;exclude-files&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;▶ cent update -p cent-nuclei-templates -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Once cent has been configured correctly you can perform a scan with Nuclei.&lt;/p&gt; &#xA;&lt;p&gt;Example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;▶ nuclei -u https://example.com -t ./cent-nuclei-templates -tags cve&#xA;▶ nuclei -l urls.txt -t ./cent-nuclei-templates -tags cve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://nuclei.projectdiscovery.io/nuclei/get-started/#running-nuclei&#34;&gt;here&lt;/a&gt; for more documentation about Nuclei&lt;/p&gt; &#xA;&lt;h1&gt;Config&lt;/h1&gt; &#xA;&lt;p&gt;You need to configure &lt;code&gt;cent&lt;/code&gt; parameters in &lt;code&gt;$HOME/.cent.yaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Directories to exclude&#xA;exclude-dirs:&#xA;  - SOMETHING&#xA;&#xA;# Files to exclude&#xA;exclude-files:&#xA;  - README.md&#xA;  - .gitignore&#xA;  - .pre-commit-config.yaml&#xA;  - LICENSE&#xA;&#xA;# Add github urls&#xA;community-templates:&#xA;  - https://github.com/projectdiscovery/nuclei-templates.git&#xA;  - https://gist.github.com/0x240x23elu&#xA;  - https://gist.github.com/ResistanceIsUseless/e46848f67706a8aa1205c9d2866bff31&#xA;  - https://github.com/0x727/ObserverWard_0x727&#xA;  - https://github.com/1in9e/my-nuclei-templates&#xA;  - https://github.com/5cr1pt/templates&#xA;  - https://github.com/ARPSyndicate/kenzer-templates&#xA;  - https://github.com/AshiqurEmon/nuclei_templates.git&#xA;  - https://github.com/CharanRayudu/Custom-Nuclei-Templates&#xA;  - https://github.com/clarkvoss/Nuclei-Templates&#xA;  - https://github.com/d3sca/Nuclei_Templates&#xA;  - https://github.com/daffainfo/my-nuclei-templates&#xA;  - https://github.com/esetal/nuclei-bb-templates&#xA;  - https://github.com/ethicalhackingplayground/erebus-templates&#xA;  - https://github.com/foulenzer/foulenzer-templates&#xA;  - https://github.com/geeknik/nuclei-templates-1&#xA;  - https://github.com/geeknik/the-nuclei-templates&#xA;  - https://github.com/Harish4948/Nuclei-Templates&#xA;  - https://github.com/im403/nuclei-temp&#xA;  - https://github.com/javaongsan/nuclei-templates&#xA;  - https://github.com/joanbono/nuclei-templates&#xA;  - https://github.com/kabilan1290/templates&#xA;  - https://github.com/medbsq/ncl&#xA;  - https://github.com/meme-lord/Custom-Nuclei-Templates&#xA;  - https://github.com/MR-pentestGuy/nuclei-templates&#xA;  - https://github.com/n1f2c3/mytemplates&#xA;  - https://github.com/NitinYadav00/My-Nuclei-Templates&#xA;  - https://github.com/notnotnotveg/nuclei-custom-templates&#xA;  - https://github.com/obreinx/nuceli-templates&#xA;  - https://github.com/optiv/mobile-nuclei-templates&#xA;  - https://github.com/panch0r3d/nuclei-templates&#xA;  - https://github.com/peanuth8r/Nuclei_Templates&#xA;  - https://github.com/pikpikcu/my-nuclei-templates&#xA;  - https://github.com/pikpikcu/nuclei-templates&#xA;  - https://github.com/projectdiscovery/nuclei-templates.git&#xA;  - https://github.com/R-s0n/Custom_Vuln_Scan_Templates&#xA;  - https://github.com/rafaelcaria/Nuclei-Templates&#xA;  - https://github.com/rahulkadavil/nuclei-templates&#xA;  - https://github.com/randomstr1ng/nuclei-sap-templates&#xA;  - https://github.com/redteambrasil/nuclei-templates&#xA;  - https://github.com/ree4pwn/my-nuclei-templates&#xA;  - https://github.com/sadnansakin/my-nuclei-templates&#xA;  - https://github.com/Saimonkabir/Nuclei-Templates&#xA;  - https://github.com/Saptak9983/Nuclei-Template&#xA;  - https://github.com/securitytest3r/nuclei_templates_work&#xA;  - https://github.com/sharathkramadas/k8s-nuclei-templates&#xA;  - https://github.com/shifa123/detections&#xA;  - https://github.com/smaranchand/nuclei-templates&#xA;  - https://github.com/Str1am/my-nuclei-templates&#xA;  - https://github.com/System00-Security/backflow&#xA;  - https://github.com/test502git/log4j-fuzz-head-poc&#xA;  - https://github.com/thebrnwal/Content-Injection-Nuclei-Script&#xA;  - https://github.com/thelabda/nuclei-templates&#xA;  - https://github.com/yavolo/nuclei-templates&#xA;  - https://github.com/z3bd/nuclei-templates&#xA;  - https://github.com/zinminphyo0/KozinTemplates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/hakluke&#34;&gt;hakluke&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/pdnuclei&#34;&gt;Nuclei&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/pdiscoveryio&#34;&gt;Project Discovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/sec715&#34;&gt;sec715&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/geeknik&#34;&gt;geeknik&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/System00-Security&#34;&gt;SYSTEM00 SECURITY&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clarkvoss&#34;&gt;clarkvoss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/notnotnotveg&#34;&gt;notnotnotveg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Alra3ees&#34;&gt;Alra3ees - Emad Shanab&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/emadshanab/Nuclei-Templates-Collection&#34;&gt;Nuclei-Templates-Collection&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Cent is distributed under Apache-2.0 License&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FxPool/FXMinerProxy</title>
    <updated>2022-11-29T01:32:05Z</updated>
    <id>tag:github.com,2022-11-29:/FxPool/FXMinerProxy</id>
    <link href="https://github.com/FxPool/FXMinerProxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥minerproxy charge for mining pool，original minerproxy ，high performance minerproxy ，minerproxy development by golang. 矿池抽水/BTC无损跨矿池抽水/原创矿池中转，代理minerproxy，挖矿minerproxy，矿场minerproxy，比特币minerproxy，最强大的minerproxy，最稳定minerproxy，功能最全minerproxy，界面最好minerproxy，费用最低minerproxy，BTCminerproxy，LTCminerproxy&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/logo.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Release-8.3.3-orgin.svg?sanitize=true&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Last_Update-2022_11_24-orgin.svg?sanitize=true&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Language-GoLang-green.svg?sanitize=true&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/raw/main/readmes/zh.md&#34; target=&#34;_blank&#34;&gt;简体中文&lt;/a&gt; • &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=fAce-zatHqA&#34; target=&#34;_blank&#34;&gt;油管演示视频&lt;/a&gt; • &lt;/p&gt; &#xA;&lt;h1&gt;FXMinerProxy&lt;/h1&gt; &#xA;&lt;p&gt;Custom charging proxy software for mining pool. Coin support &lt;code&gt;BTC&lt;/code&gt;, &lt;code&gt;LTC&lt;/code&gt;, &lt;code&gt;ZEC&lt;/code&gt;, &lt;code&gt;ETC&lt;/code&gt;, &lt;code&gt;ETHF&lt;/code&gt;, &lt;code&gt;ETHW&lt;/code&gt;, &lt;code&gt;RVN&lt;/code&gt;, &lt;code&gt;CFX&lt;/code&gt;, &lt;code&gt;BEAM&lt;/code&gt;, &lt;code&gt;ERGO&lt;/code&gt;, &lt;code&gt;BTG&lt;/code&gt;, &lt;code&gt;AE&lt;/code&gt;, &lt;code&gt;FLUX&lt;/code&gt;, &lt;code&gt;FIRO&lt;/code&gt;, &lt;code&gt;NEOXA&lt;/code&gt;, &lt;code&gt;XMR&lt;/code&gt;, &lt;code&gt;KASPA&lt;/code&gt;, &lt;code&gt;GRIN&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/home-en.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;1.The app design and maintenance personnel only provide technical services without any profit purpose, and the operation of this app complies with the laws and regulations where the server is located.&#xA;Users of this app must use this software in strict accordance with local laws and regulations, and shall bear corresponding legal responsibilities if they use this app to violate local laws.&#xA;2.Before using this app, please read the description of this app in detail. If the user does not have any losses caused by the technical problems of this app, the user shall be responsible for it, and the app development and maintenance personnel shall be responsible for the loss. Regardless, the user shall not claim or file a lawsuit against the developer or maintainer for this.&#xA;3.You should make sure you are not a resident of mainland China, Cuba, Iran, North Korea, Syria, Russia or other countries or regions subject to sanctions managed or enforced by relevant countries or governments or international agencies. The legal responsibility arising from the app shall be borne by myself.&#xA;4.fxminerproxyv3 are the only 1 officially software name.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email: &lt;a href=&#34;mailto:hansenloveyou520@gmail.com&#34;&gt;hansenloveyou520@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/FxminerChat&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;permissions&lt;/strong&gt; &lt;code&gt;root&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;system required&lt;/strong&gt; &lt;code&gt;centOS 7+ / debian 8+ / ubuntu 16+&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;recommend&lt;/strong&gt; &lt;code&gt;debian8.7...debian8.11&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;curl&lt;/strong&gt; tool is required &lt;strong&gt;debian ubuntu download:&lt;/strong&gt; &lt;code&gt;apt-get install curl&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;wget&lt;/strong&gt; tool is required &lt;strong&gt;debian ubuntu download:&lt;/strong&gt; &lt;code&gt;apt-get install wget&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;install new versions&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bash &amp;lt;(curl -s -L https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/install_en.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;install older versions&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bash &amp;lt;(curl -s -L https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/oldversion/install_en.sh) verNumber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;windows&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;permissions&lt;/strong&gt; &lt;code&gt;administrator&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;system required&lt;/strong&gt; &lt;code&gt;windows8+&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;recommend&lt;/strong&gt; &lt;code&gt;WindowsServer2012&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;how to run&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1 Decompress fxminerproxyv3.zip&lt;/li&gt; &#xA;   &lt;li&gt;2 open fxminerproxyv3 dir and run &lt;code&gt;run.exe&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;download&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;version&lt;/th&gt; &#xA;     &lt;th&gt;name&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;8.3.3&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases/download/8.3.3/fxminerproxyv3windows.zip&#34;&gt;fxminerproxyv3.zip&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;8.3.2.1&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases/download/8.3.2.1/fxminerproxyv3windows.zip&#34;&gt;fxminerproxyv3.zip&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;8.3.2&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases/download/8.3.2/fxminerproxyv3windows.zip&#34;&gt;fxminerproxyv3.zip&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;8.3.1.1&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases/download/8.3.1.1/fxminerproxyv3windows.zip&#34;&gt;fxminerproxyv3.zip&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;8.3.1&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases/download/8.3.1/fxminerproxyv3windows.zip&#34;&gt;fxminerproxyv3.zip&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;8.3.0&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases/download/8.3.0/fxminerproxyv3windows.zip&#34;&gt;fxminerproxyv3.zip&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;8.2.2.4&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases/download/8.2.2.4/fxminerproxyv3windows.zip&#34;&gt;fxminerproxyv3.zip&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download older versions from &lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases&#34;&gt;github releases&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support Windows &amp;amp; Linux.&lt;/li&gt; &#xA; &lt;li&gt;High concurrency and low memory.&lt;code&gt;(2 core 4g:1400worker:CPU:2%,MEM:10%)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Dynamic parameters of a port are modified.&lt;/li&gt; &#xA; &lt;li&gt;Single worker machine charge ratio adjustment.&lt;/li&gt; &#xA; &lt;li&gt;Support Asic machine between the different mining pool to charge.&lt;/li&gt; &#xA; &lt;li&gt;Support fast ping vaul.e&lt;code&gt;(fast response: ping:current server to mining machine)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support Real-time system error log display.&lt;/li&gt; &#xA; &lt;li&gt;Support User-defined ssl certificate.&lt;/li&gt; &#xA; &lt;li&gt;Support Import port configurations in batches through the configuration file.&lt;/li&gt; &#xA; &lt;li&gt;Support historical record curve statistics management, detailed to a single mining machine&lt;/li&gt; &#xA; &lt;li&gt;The asic machine calculates the hash power in real time to solve the problem that the computation hash power cannot be displayed at the acic machine.&lt;/li&gt; &#xA; &lt;li&gt;Support for obfuscated encrypted connections.&lt;/li&gt; &#xA; &lt;li&gt;Support SSL connection to mining pools.&lt;/li&gt; &#xA; &lt;li&gt;Dev Fee: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;all coin 0.27%&lt;/li&gt; &#xA;   &lt;li&gt;personal 0%&lt;/li&gt; &#xA;   &lt;li&gt;activation: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;require:&lt;/strong&gt; worker &amp;gt; &lt;code&gt;200&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;worker 200-1000 0.24%&lt;/li&gt; &#xA;     &lt;li&gt;worker 1000-10000 0.2%&lt;/li&gt; &#xA;     &lt;li&gt;worker &amp;gt; 10000 0.15%&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CMD options：&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;fxminerproxyv3 -cmd&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;-apikey &lt;code&gt;Contact the developer to get information if you need to add your own fee wallet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;-language &lt;code&gt;en or zh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;JSON config file&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;localconfig.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;user_name&#34;: &#34;admin&#34;,&#xA;    &#34;password&#34;: &#34;admin&#34;,&#xA;    &#34;web_theme&#34;: &#34;8&#34;,&#xA;    &#34;web_port&#34;: 62438,// default browser port&#xA;    &#34;is_agree_articles&#34;: true,&#xA;    &#34;statistical_refresh_time&#34;: 30,&#xA;    &#34;is_open_log&#34;: true,&#xA;    &#34;is_open_visit_mode&#34;: false,&#xA;    &#34;is_open_general_swap&#34;: false,// is true: you port will support any socket packet&#xA;    &#34;is_default_ssl_cert&#34;: true,&#xA;    &#34;cert_file_name&#34;: &#34;&#34;,// user define ssl path&#xA;    &#34;cert_file_key_name&#34;: &#34;&#34;,// user define ssl path&#xA;    &#34;coin_type&#34;: &#34;&#34;,// current coin type ,&#34;&#34; is all&#xA;    &#34;language&#34;: &#34;en&#34;,&#xA;    &#34;confuse&#34;: {// new version is not support&#xA;        &#34;ip&#34;: &#34;127.0.0.1&#34;,&#xA;        &#34;api_port&#34;: 80,&#xA;        &#34;code&#34;: 0&#xA;    },&#xA;    &#34;visit_web&#34;: {&#xA;        &#34;web_port&#34;: 18111,&#xA;        &#34;user_name&#34;: &#34;visit&#34;,&#xA;        &#34;password&#34;: &#34;88888888&#34;&#xA;    },&#xA;    &#34;enc_config_info&#34;: null,&#xA;    &#34;coins&#34;: [&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;localcoinconfig.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;user_pool_cfg&#34;: [&#xA;        {&#xA;            &#34;coin_type&#34;: &#34;ETF&#34;,&#xA;            &#34;close_reason&#34;: &#34;&#34;,&#xA;            &#34;is_open&#34;: true,&#xA;            &#34;is_pay&#34;: true,&#xA;            &#34;fee_algorithm&#34;: 1,//must 1&#xA;            &#34;transit&#34;: {&#xA;                &#34;is_run&#34;: true,&#xA;                &#34;listen_port&#34;: 14383,&#xA;                &#34;target_address&#34;: &#34;etc.f2pool.com:6688&#34;,&#xA;                &#34;nick_name&#34;: &#34;test9768&#34;&#xA;            },&#xA;            &#34;connect_method&#34;: &#34;stratum+ssl&#34;,&#xA;            &#34;local_hash_rate_percentage&#34;: 100,//fake hash rate&#xA;            &#34;is_fast_response&#34;: false,&#xA;            &#34;is_front_proxy&#34;: false,&#xA;            &#34;pay&#34;: [&#xA;                {&#xA;                    &#34;pay_pool&#34;: &#34;etc.f2pool.com:6688&#34;,&#xA;                    &#34;pay_wallet&#34;: &#34;test_wallet&#34;,&#xA;                    &#34;pay_password&#34;: &#34;x&#34;,&#xA;                    &#34;pay_name&#34;: &#34;test&#34;,&#xA;                    &#34;proportion&#34;: 7.1&#xA;                }&#xA;            ],&#xA;            &#34;filter_wallet&#34;: [&#xA;                &#34;test_wallet&#34;&#xA;            ],&#xA;            &#34;advanced_settings&#34;: {&#xA;                &#34;blacklist_wallet&#34;: [&#xA;                    &#34;test_wallet01&#34;&#xA;                ],&#xA;                &#34;blacklist_wallet_replace&#34;: &#34;test_wallet01&#34;,&#xA;                &#34;is_open_pool_mode&#34;: true,&#xA;                &#34;unify_miner_name&#34;: &#34;test_wallet01&#34;,&#xA;                &#34;unify_worker_name&#34;: &#34;test_worker&#34;&#xA;            }&#xA;        }&#xA;    ],&#xA;    &#34;target_pool_info&#34;: [&#xA;        {&#xA;            &#34;coin_type&#34;: &#34;ETF&#34;,&#xA;            &#34;address&#34;: &#34;etc.f2pool.com:6688&#34;,&#xA;            &#34;note_zh&#34;: &#34;&#34;,&#xA;            &#34;note_en&#34;: &#34;test&#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Watchdog&lt;/h2&gt; &#xA;&lt;p&gt;Prevent a program from crashing while running. Use a watchdog program to keep it running steadily throughout the day&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;linux use script: &lt;strong&gt;running.sh&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;windows use: &lt;strong&gt;run.exe&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.fxpool.org&#34;&gt;API Reference&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;User-guided Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;add proxy coin port&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;change local hash-rate display(only GPU effective)&lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;588&#34; height=&#34;75&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/fake-hash-en.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt;fee filter:When using the charged port, enter the wallet name to filter out the charges, which you&#39;ll need to do if you use the port yourself&lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;588&#34; height=&#34;105&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/fee-filter.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;add target mining pool&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;tager mining pool address:You need to do this if you are using a pool address that does not exist in the system&lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;588&#34; height=&#34;315&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/add-target-pool-en.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Coin fee curve display&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;BTC&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;1200&#34; height=&#34;50&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/btc-en.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;LTC&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;1200&#34; height=&#34;50&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/ltc-en.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ZEC&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;1200&#34; height=&#34;50&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/zec-en.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ETHF&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;1200&#34; height=&#34;50&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/ethf-en.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ETHW&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;1200&#34; height=&#34;50&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/ethw-en.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&#34;https://github.com/FxPool/FXMinerProxy/releases&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>