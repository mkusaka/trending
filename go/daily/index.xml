<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-08T01:32:37Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>divyam234/teldrive</title>
    <updated>2024-02-08T01:32:37Z</updated>
    <id>tag:github.com,2024-02-08:/divyam234/teldrive</id>
    <link href="https://github.com/divyam234/teldrive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Telegram Drive Storage&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Telegram Drive&lt;/h1&gt; &#xA;&lt;p&gt;Telegram Drive is a powerful utility that enables you to create your own cloud storage service using Telegram as the backend.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/J2gVAZnHfP&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1142377485737148479?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Click on icon to join Discord Server for more advanced configurations for uploads and better support&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI:&lt;/strong&gt; Based on Material You to create nice looking UI themes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure:&lt;/strong&gt; Your data is secured using robust encryption.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible Deployment:&lt;/strong&gt; Use Docker Compose or deploy without Docker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/divyam234/teldrive/main/public/demo.png&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/divyam234/teldrive-ui&#34;&gt;UI Repo &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy using docker-compose&lt;/h3&gt; &#xA;&lt;p&gt;First clone the repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/divyam234/teldrive&#xA;cd teldrive&#xA;touch teldrive.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Follow Below Steps&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create the &lt;code&gt;teldrive.env&lt;/code&gt; file with your variables and start your container.See how to fill env file below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Go to &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use without docker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Follow Below Steps&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the release binary of Teldrive from the releases section.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add same env file as above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now, run the Teldrive executable binary directly.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setting up things&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re locally or remotely hosting, create a file named &lt;code&gt;teldrive.env&lt;/code&gt; in the root directory and add all the mandatory variables there. An example of &lt;code&gt;teldrive.env&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;APP_ID=1234&#xA;APP_HASH=abc&#xA;JWT_SECRET=abc&#xA;DATABASE_URL=postgres://&amp;lt;db username&amp;gt;:&amp;lt;db password&amp;gt;@&amp;lt;db host&amp;gt;/&amp;lt;db name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Generate JWT&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ openssl rand -hex 32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can generate secret from &lt;a href=&#34;https://generate-secret.vercel.app/32&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Important&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can set up a local Postgres instance, but it&#39;s not recommended due to backup and data transfer hassles. The recommended approach is to use a free cloud-based Postgres DB like &lt;a href=&#34;https://neon.tech/&#34;&gt;Neon DB&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Default Channel can be selected through UI. Make sure to set it from account settings on first login.&lt;/li&gt; &#xA; &lt;li&gt;Multi Bots Mode is recommended to avoid flood errors and enable maximum download speed, especially if you are using downloaders like IDM and aria2c, which use multiple connections for downloads.&lt;/li&gt; &#xA; &lt;li&gt;To enable multi bots, generate new bot tokens from BotFather and add them through UI on first login.&lt;/li&gt; &#xA; &lt;li&gt;Uploads from UI will be slower due to limitations of the browser. Use modified &lt;a href=&#34;https://github.com/divyam234/rclone&#34;&gt;Rclone&lt;/a&gt; version for teldrive.&lt;/li&gt; &#xA; &lt;li&gt;Teldrive supports image thumbnail resizing on the fly. To enable this, you have to deploy a separate image resize service from &lt;a href=&#34;https://github.com/divyam234/image-resize&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;After deploying this service, add its URL in Teldrive UI settings in the &lt;strong&gt;Resize Host&lt;/strong&gt; field.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Env Variables&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;APP_ID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;API ID for your Telegram account, which can be obtained from my.telegram.org.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;APP_HASH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;API HASH for your Telegram account, which can be obtained from my.telegram.org.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;JWT_SECRET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Used for signing JWT tokens.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DATABASE_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Connection String obtained from Postgres DB (you can use Neon db as a free alternative for Postgres).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HTTPS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;Needed for cross domain setupNeeded for cross domain setup.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8080&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;Change default listen port.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ALLOWED_USERS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;Allow certain Telegram usernames, including yours, to access the app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;COOKIE_SAME_SITE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;Needed for cross domain setup.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BG_BOTS_LIMIT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;Start at most BG_BOTS_LIMIT no of bots in the background to prevent connection recreation on every request (Default 5).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UPLOAD_RETENTION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;No of days to keep incomplete uploads parts in the channel; afterwards, these parts are deleted.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ENCRYPTION_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;Password for Encrypting files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DEV&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;DEV mode to enable debug logging.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LOG_SQL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;/td&gt; &#xA;   &lt;td&gt;Log SQL queries.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Keep your Password safe once generated teldrive uses same encryption as of rclone internally so you don&#39;t need to enable crypt in rclone.&lt;strong&gt;Teldrive generates random salt for each file part and saves in database so its more secure than rclone crypt whereas in rclone same salt value is used for all files which can be compromised easily&lt;/strong&gt;. Enabling crypt in rclone makes UI reduntant so encrypting files in teldrive internally is better way to encrypt files and more secure encryption than rclone.To encrypt files see more about teldrive rclone config.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;For making use of Multi Bots&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Bots will be auto added as admin in channel if you set them from UI if it fails somehow add it manually.For newly logged session you have to wait 20-30 min to add bots to telegram channel.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Rclone Config Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[teldrive]&#xA;type = teldrive&#xA;api_host = http://localhost:8080 # default host&#xA;access_token = #session token obtained from cookies&#xA;chunk_size = 500M&#xA;upload_concurrency = 4&#xA;encrypt_files = false # Enable this to encrypt files make sure ENCRYPTION_KEY env variable is not empty in teldrive instance.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;See all options in rclone config command&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/divyam234/teldrive/wiki&#34;&gt;Read Wiki for FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Best Practices for Using Teldrive&lt;/h2&gt; &#xA;&lt;h3&gt;Dos:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Follow Limits:&lt;/strong&gt; Adhere to the limits imposed by Telegram servers to avoid account bans and automatic deletion of your channel.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Don&#39;ts:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Hoarding:&lt;/strong&gt; Avoid excessive data hoarding, as it not only violates Telegram&#39;s terms but also leads to unnecessary wastage of storage space.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Netflix Clones:&lt;/strong&gt; Refrain from using this service to create your own Netflix-like platform. Saving large amounts of movies or content for personal media servers is discouraged, as it goes against the intended use of Telegram.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional Recommendations:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Responsible Storage:&lt;/strong&gt; Be mindful of the content you store on Telegram. Utilize storage efficiently and only keep data that serves a purpose.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Respect Terms of Service:&lt;/strong&gt; Familiarize yourself with and adhere to the terms of service provided by Telegram to ensure a positive and sustainable usage experience.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By following these guidelines, you contribute to the responsible and effective use of Telegram, maintaining a fair and equitable environment for all users.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contribute to this project if you have any further ideas.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you like this project small contribution would be appreciated &lt;a href=&#34;https://paypal.me/redux234&#34;&gt;Paypal&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dymensionxyz/dymension</title>
    <updated>2024-02-08T01:32:37Z</updated>
    <id>tag:github.com,2024-02-08:/dymensionxyz/dymension</id>
    <link href="https://github.com/dymensionxyz/dymension" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dymension Hub&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dymension Hub&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/docs/dymension.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/dymensionxyz/dymension&#34; alt=&#34;license&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/go-1.18-blue.svg?sanitize=true&#34; alt=&#34;Go&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/dymensionxyz/dymension&#34; alt=&#34;issues&#34;&gt; &lt;img src=&#34;https://github.com/dymensionxyz/dymint/actions/workflows/test.yml/badge.svg?branch=main&#34; alt=&#34;tests&#34;&gt; &lt;img src=&#34;https://github.com/dymensionxyz/dymint/actions/workflows/lint.yml/badge.svg?branch=main&#34; alt=&#34;lint&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to the Dymension Hub, the &lt;strong&gt;Settlement Layer of the Dymension protocol&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This guide will walk you through the steps required to set up and run a Dymension Hub full node.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#dymension-hub&#34;&gt;Dymension Hub&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#initializing-dymd&#34;&gt;Initializing &lt;code&gt;dymd&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#running-the-chain&#34;&gt;Running the Chain&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#bootstrapping-liquidity-pools&#34;&gt;Bootstrapping liquidity pools&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#adding-incentives&#34;&gt;Adding incentives&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#creating-incentives-streams&#34;&gt;Creating incentives streams&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#locking-tokens&#34;&gt;Locking tokens&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/dymension/main/#check-rewards&#34;&gt;check rewards&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/doc/install&#34;&gt;Go (v1.18 or above)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Clone &lt;code&gt;dymension&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/dymensionxyz/dymension.git&#xA;cd dymension&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check that the dymd binaries have been successfully installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dymd version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the dymd command is not found an error message is returned, confirm that your &lt;a href=&#34;https://go.dev/doc/gopath_code#GOPATH&#34;&gt;GOPATH&lt;/a&gt; is correctly configured by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export PATH=$PATH:$(go env GOPATH)/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Initializing &lt;code&gt;dymd&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Using the setup script:&lt;/p&gt; &lt;p&gt;This method is preferred as it preconfigured to support &lt;a href=&#34;https://github.com/dymensionxyz/roller&#34;&gt;running rollapps locally&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bash scripts/setup_local.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Manually:&lt;/p&gt; &lt;p&gt;First, set the following environment variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CHAIN_ID=&#34;dymension_100-1&#34;&#xA;export KEY_NAME=&#34;local-user&#34;&#xA;export MONIKER_NAME=&#34;local&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Second, create genesis and init dymension chain:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dymd init &#34;$MONIKER_NAME&#34; --chain-id &#34;$CHAIN_ID&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Third, set parameters to ensure denom is udym:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bash scripts/set_params.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then, add genesis account and provide token to the account:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dymd keys add &#34;$KEY_NAME&#34; --keyring-backend test&#xA;dymd add-genesis-account &#34;$(dymd keys show &#34;$KEY_NAME&#34; -a --keyring-backend test)&#34; 1000dym&#xA;dymd gentx &#34;$KEY_NAME&#34; 670dym --chain-id &#34;$CHAIN_ID&#34; --keyring-backend test&#xA;dymd collect-gentxs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the Chain&lt;/h2&gt; &#xA;&lt;p&gt;Now start the chain!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dymd start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should have a running local node!&lt;/p&gt; &#xA;&lt;h2&gt;Bootstrapping liquidity pools&lt;/h2&gt; &#xA;&lt;p&gt;To bootstrap the &lt;code&gt;GAMM&lt;/code&gt; module with pools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sh scripts/pools/pools_bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adding incentives&lt;/h2&gt; &#xA;&lt;h3&gt;Creating incentives streams&lt;/h3&gt; &#xA;&lt;p&gt;After creating the pools above, we create 2 incentive streams through gov:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sh scripts/incentives/fund_incentives.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for the gov proposal to pass, and validate with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dymd q streamer streams&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Locking tokens&lt;/h3&gt; &#xA;&lt;p&gt;To get incentives, we need to lock the LP tokens:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sh scripts/incentives/lockup_bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;validate with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dymd q lockup module-balance&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;check rewards&lt;/h3&gt; &#xA;&lt;p&gt;Every minute a share of the rewards will be distributed!&lt;/p&gt; &#xA;&lt;p&gt;validate with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dymd q incentives active-gauges&#xA;&#xA;# alternatively, watch the outpup - you will see the &#34;amount&#34; change every minute&#xA;#  watch -n1 -d &#34;dymd q incentives active-gauges --output json | jq &#39;.data[] | { &#34;id&#34;: .id, &#34;coins&#34;: .coins } &#39;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have any issues please contact us on &lt;a href=&#34;http://discord.gg/dymension&#34;&gt;discord&lt;/a&gt; in the Developer section. We are here for you!&lt;/p&gt;</summary>
  </entry>
</feed>