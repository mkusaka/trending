<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-26T01:29:31Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mathaou/termdbms</title>
    <updated>2023-12-26T01:29:31Z</updated>
    <id>tag:github.com,2023-12-26:/mathaou/termdbms</id>
    <link href="https://github.com/mathaou/termdbms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A TUI for viewing and editing database files.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;termdbms&lt;/h1&gt; &#xA;&lt;h2&gt;A TUI for viewing and editing databases, written in pure Go&lt;/h2&gt; &#xA;&lt;h4&gt;Installation Instructions&lt;/h4&gt; &#xA;&lt;h6&gt;Go Install&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;go install github.com/mathaou/termdbms@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Arch Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;// pacman&#xA;sudo pacman -S termdbms-git&#xA;// yay&#xA;yay -S termdbms-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h6&gt;Database Support&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;SQLite&#xA;CSV* (see note below)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;made with modernc.org/sqlite, charmbracelet/bubbletea, and charmbracelet/lipgloss&lt;/h3&gt; &#xA;&lt;h4&gt;Works with keyboard and mouse!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/vmK0DVn.gif&#34; alt=&#34;Keyboard Control&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Navigate tables with any number of columns!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/EqZRPqO.gif&#34; alt=&#34;Columns and Tables&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Navigate tables with any number of rows!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/yo7DMaa.gif&#34; alt=&#34;Lot of Rows&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Serialize your changes as a copy or over the database original! (SQLite only)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/GhMcnid.gif&#34; alt=&#34;Serialization&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Query your database!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/9FB3ETs.gif&#34; alt=&#34;querying&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Other Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run SQL queries and display the results!&lt;/li&gt; &#xA; &lt;li&gt;Save SQL queries to a clipboard!&lt;/li&gt; &#xA; &lt;li&gt;Update, delete, or insert with SQL, with undo/redo supported for SQLite&lt;/li&gt; &#xA; &lt;li&gt;Automatic JSON formatting in selection/format mode&lt;/li&gt; &#xA; &lt;li&gt;Edit multi-line text with vim-like controls&lt;/li&gt; &#xA; &lt;li&gt;Undo/Redo of changes (SQLite only)&lt;/li&gt; &#xA; &lt;li&gt;Themes (press T in table mode)&lt;/li&gt; &#xA; &lt;li&gt;Output query results as a csv&lt;/li&gt; &#xA; &lt;li&gt;Convert .csv to SQLite database! Export as a SQLite database or .csv file again!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Roadmap&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MySQL/ PostgreSQL support&lt;/li&gt; &#xA; &lt;li&gt;Line wrapping / horizontal scroll for format/SQL mode + revamped (faster format mode)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How To Build&lt;/summary&gt; &#xA; &lt;h5&gt;Linux&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;GOOS=linux GOARCH=amd64/386 go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h5&gt;ARM (runs kind of slow depending on the specs of the system)&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;GOOS=linux GOARCH=arm GOARM=7 go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h5&gt;Windows&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;GOOS=windows GOARCH=amd64/386 go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h5&gt;OSX&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;GOOS=darwin GOARCH=amd64 go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Terminal settings&lt;/h4&gt; &#xA;&lt;p&gt;Whatever terminal emulator used should support ANSI escape sequences. If there is an option for 256 color mode, enable it. If not available, try running program in ascii mode (-a).&lt;/p&gt; &#xA;&lt;h4&gt;Known Issues&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using termdbms over a serial connection works very poorly. This is due to ANSI sequences not being supported natively. Maybe putty/mobaxterm have settings to allow this?&lt;/li&gt; &#xA; &lt;li&gt;The headers wig out sometimes in selection mode&lt;/li&gt; &#xA; &lt;li&gt;Line wrapping is not yet implemented, so text in format mode should be less than the maximum number of columns available per line for best use. It&#39;s in the works!&lt;/li&gt; &#xA; &lt;li&gt;Weird combinations of newlines + tabs can break stuff. Tabs at beginning of line and mid-line works in a stable manner.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Help:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;-p / database/.csv path&#xA;-d / specifies which database driver to use (sqlite/mysql)&#xA;-a / enable ascii mode&#xA;-h / prints this message&#xA;-t / starts app with specific theme (default, nord, solarized)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Controls:&lt;/h5&gt; &#xA;&lt;h6&gt;MOUSE&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;Scroll up + down to navigate table/text&#xA;Move cursor to select cells for full screen viewing&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;KEYBOARD&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;[WASD] to move around cells, and also move columns if close to edge&#xA;[ENTER] to select selected cell for full screen view&#xA;[UP/K and DOWN/J] to navigate schemas&#xA;[LEFT/H and RIGHT/L] to navigate columns if there are more than the screen allows.&#xA;    Also to control the cursor of the text editor in edit mode&#xA;[BACKSPACE] to delete text before cursor in edit mode&#xA;[M(scroll up) and N(scroll down)] to scroll manually&#xA;[Q or CTRL+C] to quit program&#xA;[B] to toggle borders!&#xA;[C] to expand column&#xA;[T] to cycle through themes!&#xA;[P] in selection mode to write cell to file, or to print query results as CSV.&#xA;[R] to redo actions, if applicable&#xA;[U] to undo actions, if applicable&#xA;[ESC] to exit full screen view, or to enter edit mode&#xA;[PGDOWN] to scroll down one views worth of rows&#xA;[PGUP] to scroll up one views worth of rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;EDIT MODE (for quick, single line changes and commands)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ESC] to enter edit mode with no pre-loaded text input from selection&#xA;When a cell is selected, press [:] to enter edit mode with selection pre-loaded&#xA;The text field in the header will be populated with the selected cells text. Modifications can be made freely&#xA;[ESC] to clear text field in edit mode&#xA;[ENTER] to save text. Anything besides one of the reserved strings below will overwrite the current cell&#xA;[:q] to exit edit mode/ format mode/ SQL mode&#xA;[:s] to save database to a new file (SQLite only)&#xA;[:s!] to overwrite original database file (SQLite only). A confirmation dialog will be added soon&#xA;[:h] to display help text&#xA;[:new] opens current cell with a blank buffer&#xA;[:edit] opens current cell in format mode&#xA;[:sql] opens blank buffer for creating an SQL statement&#xA;[:clip] to open clipboard of SQL queries. [/] to filter, [ENTER] to select.&#xA;[HOME] to set cursor to end of the text&#xA;[END] to set cursor to the end of the text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;FORMAT MODE (for editing lines of text)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ESC] to move between top control bar and format buffer&#xA;[HOME] to set cursor to end of the text&#xA;[END] to set cursor to the end of the text&#xA;[:wq] to save changes and quit to main table view&#xA;[:w] to save changes and remain in format view&#xA;[:s] to serialize changes, non-destructive (SQLite only)&#xA;[:s!] to serialize changes, overwriting original file (SQLite only)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;SQL MODE (for querying database)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ESC] to move between top control bar and text buffer&#xA;[:q] to quit out of statement&#xA;[:exec] to execute statement. Errors will be displayed in full screen view.&#xA;[:stow &amp;lt;NAME&amp;gt;] to create a snippet for the clipboard with an optional name. A random number will be used if no name is specified.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;QUERY MODE (specifically when viewing query results)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;[:d] to reset table data back to original view&#xA;[:sql] to query original database again&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>overflowy/spongebob-cli</title>
    <updated>2023-12-26T01:29:31Z</updated>
    <id>tag:github.com,2023-12-26:/overflowy/spongebob-cli</id>
    <link href="https://github.com/overflowy/spongebob-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SpongeBob delivered straight from your terminal&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;spongebob-cli&lt;/h1&gt; &#xA;&lt;p&gt;SpongeBob delivered straight from your terminal&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/overflowy/spongebob-cli/assets/98480250/c3280a20-bc16-40c5-b1d8-6ce4602331f1&#34; alt=&#34;example&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;Why not.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;List all available episodes&lt;/li&gt; &#xA; &lt;li&gt;Stream episodes directly with minimal user interaction&lt;/li&gt; &#xA; &lt;li&gt;Customize the video player used for streaming&lt;/li&gt; &#xA; &lt;li&gt;Download all episodes asynchronously&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Running spongebob-cli without any flags will prompt the user to select the episode number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of spongebob-cli:&#xA;  -d int&#xA;        download all episodes asynchronously but max [d] episodes at a time (default -1)&#xA;  -l    list episodes and quit&#xA;  -p int&#xA;        play the wanted episode without any user interaction (default -1)&#xA;  -vp string&#xA;        use another video player [default=mpv] (default &#34;mpv&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This tool is for educational purposes only. The maintainers do not own the rights to any of the content streamed by this application. It is the user&#39;s responsibility to ensure they have the right to watch the streamed content.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mislav/hub</title>
    <updated>2023-12-26T01:29:31Z</updated>
    <id>tag:github.com,2023-12-26:/mislav/hub</id>
    <link href="https://github.com/mislav/hub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A command-line tool that makes git easier to use with GitHub.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;hub is a command line tool that wraps &lt;code&gt;git&lt;/code&gt; in order to extend it with extra features and commands that make working with GitHub easier.&lt;/p&gt; &#xA;&lt;p&gt;For an official, potentially more user-friendly command-line interface to GitHub, see &lt;a href=&#34;https://cli.github.com&#34;&gt;cli.github.com&lt;/a&gt; and &lt;a href=&#34;https://github.com/cli/cli/raw/trunk/docs/gh-vs-hub.md&#34;&gt;this comparison&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository and its issue tracker is &lt;strong&gt;not for reporting problems with GitHub.com&lt;/strong&gt; web interface. If you have a problem with GitHub itself, please &lt;a href=&#34;https://github.com/contact&#34;&gt;contact Support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ hub clone rtomayko/tilt&#xA;#=&amp;gt; git clone https://github.com/rtomayko/tilt.git&#xA;&#xA;# or, if you prefer the SSH protocol:&#xA;$ git config --global hub.protocol ssh&#xA;$ hub clone rtomayko/tilt&#xA;#=&amp;gt; git clone git@github.com:rtomayko/tilt.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://hub.github.com/#developer&#34;&gt;usage examples&lt;/a&gt; or the &lt;a href=&#34;https://hub.github.com/hub.1.html&#34;&gt;full reference documentation&lt;/a&gt; to see all available commands and flags.&lt;/p&gt; &#xA;&lt;p&gt;hub can also be used to make shell scripts that &lt;a href=&#34;https://hub.github.com/#scripting&#34;&gt;directly interact with the GitHub API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;hub can be safely &lt;a href=&#34;https://raw.githubusercontent.com/mislav/hub/master/#aliasing&#34;&gt;aliased&lt;/a&gt; as &lt;code&gt;git&lt;/code&gt;, so you can type &lt;code&gt;$ git &amp;lt;command&amp;gt;&lt;/code&gt; in the shell and have it expanded with &lt;code&gt;hub&lt;/code&gt; features.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;hub&lt;/code&gt; executable has no dependencies, but since it was designed to wrap &lt;code&gt;git&lt;/code&gt;, it&#39;s recommended to have at least &lt;strong&gt;git 1.7.3&lt;/strong&gt; or newer.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;platform&lt;/th&gt; &#xA;   &lt;th&gt;manager&lt;/th&gt; &#xA;   &lt;th&gt;command to run&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS, Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.brew.sh/Installation&#34;&gt;Homebrew&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;brew install hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS, Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://nixos.org/&#34;&gt;Nix&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nix-env -i hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://scoop.sh/&#34;&gt;Scoop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;scoop install hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;choco install hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fedora Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fedoraproject.org/wiki/DNF&#34;&gt;DNF&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo dnf install hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/pacman&#34;&gt;pacman&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo pacman -S hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FreeBSD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://man.freebsd.org/pkg/8&#34;&gt;pkg(8)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pkg install hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian, Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://manpages.debian.org/buster/apt/apt.8.en.html&#34;&gt;apt(8)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo apt install hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://snapcraft.io&#34;&gt;Snap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/github/hub/issues?q=is%3Aissue+snap&#34;&gt;We do not recommend installing the snap anymore.&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openSUSE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.opensuse.org/SDB:Zypper_manual&#34;&gt;Zypper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo zypper install hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Void Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/void-linux/xbps&#34;&gt;xbps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo xbps-install -S hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gentoo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://wiki.gentoo.org/wiki/Portage&#34;&gt;Portage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo emerge dev-vcs/hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.conda.io/en/latest/&#34;&gt;conda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;conda install -c conda-forge hub&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Packages other than Homebrew are community-maintained (thank you!) and they are not guaranteed to match the &lt;a href=&#34;https://github.com/github/hub/releases/latest&#34;&gt;latest hub release&lt;/a&gt;. Check &lt;code&gt;hub version&lt;/code&gt; after installing a community package.&lt;/p&gt; &#xA;&lt;h4&gt;Standalone&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;hub&lt;/code&gt; can be easily installed as an executable. Download the &lt;a href=&#34;https://github.com/github/hub/releases/latest&#34;&gt;latest binary&lt;/a&gt; for your system and put it anywhere in your executable path.&lt;/p&gt; &#xA;&lt;h4&gt;GitHub Actions&lt;/h4&gt; &#xA;&lt;p&gt;hub is ready to be used in your &lt;a href=&#34;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions&#34;&gt;GitHub Actions&lt;/a&gt; workflows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@v2&#xA;&#xA;- name: List open pull requests&#xA;  run: hub pr list&#xA;  env:&#xA;    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the default &lt;code&gt;secrets.GITHUB_TOKEN&lt;/code&gt; will only work for API operations scoped to the repository that runs this workflow. If you need to interact with other repositories, &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;generate a Personal Access Token&lt;/a&gt; with at least the &lt;code&gt;repo&lt;/code&gt; scope and add it to your &lt;a href=&#34;https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets&#34;&gt;repository secrets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Source&lt;/h4&gt; &#xA;&lt;p&gt;Prerequisites for building from source are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go 1.11+&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Clone this repository and run &lt;code&gt;make install&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone \&#xA;  --config transfer.fsckobjects=false \&#xA;  --config receive.fsckobjects=false \&#xA;  --config fetch.fsckobjects=false \&#xA;  https://github.com/github/hub.git&#xA;&#xA;cd hub&#xA;make install prefix=/usr/local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Aliasing&lt;/h2&gt; &#xA;&lt;p&gt;Some hub features feel best when it&#39;s aliased as &lt;code&gt;git&lt;/code&gt;. This is not dangerous; your &lt;em&gt;normal git commands will all work&lt;/em&gt;. hub merely adds some sugar.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;hub alias&lt;/code&gt; displays instructions for the current shell. With the &lt;code&gt;-s&lt;/code&gt; flag, it outputs a script suitable for &lt;code&gt;eval&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You should place this command in your &lt;code&gt;.bash_profile&lt;/code&gt; or other startup script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;eval &#34;$(hub alias -s)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;PowerShell&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re using PowerShell, you can set an alias for &lt;code&gt;hub&lt;/code&gt; by placing the following in your PowerShell profile (usually &lt;code&gt;~/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Set-Alias git hub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A simple way to do this is to run the following from the PowerShell prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Add-Content $PROFILE &#34;`nSet-Alias git hub&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: You&#39;ll need to restart your PowerShell console in order for the changes to be picked up.&lt;/p&gt; &#xA;&lt;p&gt;If your PowerShell profile doesn&#39;t exist, you can create it by running the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;New-Item -Type file -Force $PROFILE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shell tab-completion&lt;/h3&gt; &#xA;&lt;p&gt;hub repository contains &lt;a href=&#34;https://raw.githubusercontent.com/mislav/hub/master/etc&#34;&gt;tab-completion scripts&lt;/a&gt; for bash, zsh and fish. These scripts complement existing completion scripts that ship with git.&lt;/p&gt; &#xA;&lt;h2&gt;Meta&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bugs: &lt;a href=&#34;https://github.com/github/hub/issues&#34;&gt;https://github.com/github/hub/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Authors: &lt;a href=&#34;https://github.com/github/hub/contributors&#34;&gt;https://github.com/github/hub/contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Our &lt;a href=&#34;https://github.com/github/hub/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>