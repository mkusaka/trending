<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-28T01:41:53Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>greycodee/wechat-backup</title>
    <updated>2022-06-28T01:41:53Z</updated>
    <id>tag:github.com,2022-06-28:/greycodee/wechat-backup</id>
    <link href="https://github.com/greycodee/wechat-backup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;微信聊天记录持久化备份本地硬盘，释放手机存储空间。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;效果图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/greycodee/wechat-backup/master/web.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用流程&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;详细说明在: &lt;a href=&#34;https://greycode.top/posts/android-wechat-bak/&#34;&gt;https://greycode.top/posts/android-wechat-bak/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;手机聊天记录备份到电脑，在有 ROOT 权限的手机上登陆微信，电脑点击备份恢复，把聊天记录恢复到有 ROOT 的手机上。&lt;/li&gt; &#xA; &lt;li&gt;收集下面这些数据，然后放在&lt;strong&gt;同一个文件夹下&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;image2 文件夹：里面存放着所有的微信聊天图片，位置在：/data/data/com.tencent.mm/MicroMsg/[32位字母]/image2&lt;/li&gt; &#xA;   &lt;li&gt;voice2 文件夹：里面存放着所有的微信语音，位置在：/sdcard/Android/data/com.tencent.mm/MicroMsg/[32位字母]/voice2&lt;/li&gt; &#xA;   &lt;li&gt;video 文件夹：里面存放着所有的微信视频，位置在：/sdcard/Android/data/com.tencent.mm/MicroMsg/[32位字母]/video&lt;/li&gt; &#xA;   &lt;li&gt;avatar 文件夹：里面存放着所有的微信头像，位置在：/data/data/com.tencent.mm/MicroMsg/[32位字母]/avatar&lt;/li&gt; &#xA;   &lt;li&gt;Download 文件夹: 微信的聊天发送的文件存放在这里，位置在：/sdcard/Android/data/com.tencent.mm/MicroMsg/Download&lt;/li&gt; &#xA;   &lt;li&gt;EnMicroMsg.db: 微信的数据库文件，位置在：/data/data/com.tencent.mm/MicroMsg/[32位字母]/EnMicroMsg.db&lt;/li&gt; &#xA;   &lt;li&gt;WxFileIndex.db: 微信的文件索引数据库文件，位置在：/data/data/com.tencent.mm/MicroMsg/[32位字母]/WxFileIndex.db&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;获取解密 DB 的密钥。&lt;/li&gt; &#xA; &lt;li&gt;进行微信聊天数据 DB 的解密&lt;/li&gt; &#xA; &lt;li&gt;转换微信语音&lt;/li&gt; &#xA; &lt;li&gt;运行本程序，打开控制台输出的网址，就可以查看你的聊天记录了。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;运行时，记得在 main.go 里指定你存放上面这些文件的目录地址&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;del&gt;注意⚠️：WxFileIndex.db 里面文数据表名一般都是 WxFileIndex2 ,有时候却是 WxFileIndex3 或者叫其他名字，请根据实际情况来设置代码 wxfileindex.go 文件中 SQL 查询的表名&lt;/del&gt;(已在代码中做处理)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;快速解密微信DB&lt;/h2&gt; &#xA;&lt;p&gt;把要解密的微信 DB 所在文件夹挂在到容器的 &lt;code&gt;/wcdb&lt;/code&gt; 上面。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run --rm -v /Users/zheng/Documents:/wcdb  greycodee/wcdb-sqlcipher -f DB名字 -k 解密密钥&#xA;&#xA;2022/06/22 05:31:17 开始解密...&#xA;2022/06/22 05:31:28 解密成功: ok&#xA;2022/06/22 05:31:28 明文数据库文件名: EnMicroMsg_plain.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;快速转换微信语音 amr 文件&lt;/h2&gt; &#xA;&lt;p&gt;把要转换的语音文件夹挂载到容器的 &lt;code&gt;/media&lt;/code&gt; 目录上，然后执行下面的命令，就会自动将文件夹里的语音转换成 &lt;code&gt;mp3&lt;/code&gt; 格式了。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run --rm -v /Users/zheng/Documents/voice2:/media  greycodee/silkv3-decoder&#xA;&#xA;/media/msg_491351061422dbfa9bb0a84104.amr&#xA;-e [OK] Convert /media/msg_491351061422dbfa9bb0a84104.amr To /media/msg_491351061422dbfa9bb0a84104.mp3 Finish.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;手机没有 ROOT 解决方法&lt;/h2&gt; &#xA;&lt;p&gt;如果没有有 ROOT 的手机，根据 V 友的说法，使用安卓模拟器的话有一定的封号机率。这个还有一个方法就是使用手机自带的系统备份。 我自己是miui系统的手机，整理了大致方法如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在手机设置里找到备份功能，然后备份微信应用数据&lt;/li&gt; &#xA; &lt;li&gt;备份的数据放在手机的 MIUI/backup/AllBackup/备份的日期/ 下&lt;/li&gt; &#xA; &lt;li&gt;里面有三个文件 分别是 .bak .zip .xml 结尾&lt;/li&gt; &#xA; &lt;li&gt;zip 可以直接解压，然后获取聊天语音和聊天视频等文件&lt;/li&gt; &#xA; &lt;li&gt;bak 需要使用 HEX 编辑器打开，然后将 41 4E 前的数据删除（就是这个文件的描述数据）。然后保存&lt;/li&gt; &#xA; &lt;li&gt;使用 abe 解包工具进行 .bak 文件的解包，开源工具地址：&lt;a href=&#34;https://github.com/nelenkov/android-backup-extractor&#34;&gt;https://github.com/nelenkov/android-backup-extractor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;解压解包后生产的 tar 压缩包，然后从里面可以获取到 DB 等文件（相当于本来要ROOT后才能获取到的这些数据，现在可以直接获取了）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我这边通过系统备份然后 bak 文件解包-解压后，文件路径在：apps/com.tencent.mm/r/MicroMsg/ 下，大家可以参考一下 如果通过手机系统自带的备份来获取数据时，解密 DB 的密码可以通过这篇文章的方法一来获取： &lt;a href=&#34;https://greycode.top/posts/android-wechat-bak/#%E8%8E%B7%E5%8F%96-db-%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81&#34;&gt;获取 DB 解密密码&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; &#xA;&lt;h3&gt;语音和视频所在文件夹&lt;/h3&gt; &#xA;&lt;p&gt;在 &lt;code&gt;/data/data/com.tencent.mm/MicroMsg/[32位字母]&lt;/code&gt; 文件夹下，有个 &lt;code&gt;account.mapping&lt;/code&gt; 文件，里面对应的 &lt;code&gt;/sdcard/Android/data/com.tencent.mm/MicroMsg&lt;/code&gt; 下文件夹的名称，里面存储了聊天视频和语音等文件。&lt;/p&gt; &#xA;&lt;h3&gt;一台设备登陆多个微信怎么查找 uin？&lt;/h3&gt; &#xA;&lt;p&gt;在 &lt;code&gt;/data/data/com.tencent.mm/shared_prefs&lt;/code&gt; 文件夹下有个 &lt;code&gt;app_brand_global_sp.xml&lt;/code&gt; 文件，里面存放着所有登陆过微信的 uin，然后可以用这些 uin 去解密对应的微信 DB。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gogs/gogs</title>
    <updated>2022-06-28T01:41:53Z</updated>
    <id>tag:github.com,2022-06-28:/gogs/gogs</id>
    <link href="https://github.com/gogs/gogs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gogs is a painless self-hosted Git service&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2946214/146899259-6a8b58ad-8d6e-40d2-ab02-79dc6aadabbf.png&#34; alt=&#34;gogs-brand&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gogs/gogs/actions?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/checks-status/gogs/gogs/main?logo=github&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/9aqdHU7&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/382595433060499458.svg?style=for-the-badge&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcegraph.com/github.com/gogs/gogs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/view%20on-Sourcegraph-brightgreen.svg?style=for-the-badge&amp;amp;logo=sourcegraph&#34; alt=&#34;Sourcegraph&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gogs/gogs/main/README_ZH.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔮 Vision&lt;/h2&gt; &#xA;&lt;p&gt;The Gogs (&lt;code&gt;/gɑgz/&lt;/code&gt;) project aims to build a simple, stable and extensible self-hosted Git service that can be set up in the most painless way. With Go, this can be done with an independent binary distribution across all platforms that Go supports, including Linux, macOS, Windows and ARM-based systems.&lt;/p&gt; &#xA;&lt;h2&gt;📡 Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please visit &lt;a href=&#34;https://gogs.io&#34;&gt;our home page&lt;/a&gt; for user documentation.&lt;/li&gt; &#xA; &lt;li&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/gogs/gogs/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; for list of changes in each releases.&lt;/li&gt; &#xA; &lt;li&gt;Want to try it before doing anything else? Do it &lt;a href=&#34;https://try.gogs.io/gogs/gogs&#34;&gt;online&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Having trouble? Help yourself with &lt;a href=&#34;https://gogs.io/docs/intro/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or ask questions in &lt;a href=&#34;https://github.com/gogs/gogs/discussions&#34;&gt;Discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Want to help with localization? Check out the &lt;a href=&#34;https://gogs.io/docs/features/i18n.html&#34;&gt;localization documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ready to get hands dirty? Read our &lt;a href=&#34;https://raw.githubusercontent.com/gogs/gogs/main/.github/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Hmm... What about APIs? We have experimental support with &lt;a href=&#34;https://github.com/gogs/docs-api&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💌 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User dashboard, user profile and activity timeline.&lt;/li&gt; &#xA; &lt;li&gt;Access repositories via SSH, HTTP and HTTPS protocols.&lt;/li&gt; &#xA; &lt;li&gt;User, organization and repository management.&lt;/li&gt; &#xA; &lt;li&gt;Repository and organization webhooks, including Slack, Discord and Dingtalk.&lt;/li&gt; &#xA; &lt;li&gt;Repository Git hooks, deploy keys and Git LFS.&lt;/li&gt; &#xA; &lt;li&gt;Repository issues, pull requests, wiki, protected branches and collaboration.&lt;/li&gt; &#xA; &lt;li&gt;Migrate and mirror repositories with wiki from other code hosts.&lt;/li&gt; &#xA; &lt;li&gt;Web editor for quick editing repository files and wiki.&lt;/li&gt; &#xA; &lt;li&gt;Jupyter Notebook and PDF rendering.&lt;/li&gt; &#xA; &lt;li&gt;Authentication via SMTP, LDAP, reverse proxy, GitHub.com and GitHub Enterprise with 2FA.&lt;/li&gt; &#xA; &lt;li&gt;Customize HTML templates, static files and many others.&lt;/li&gt; &#xA; &lt;li&gt;Rich database backend, including PostgreSQL, MySQL, SQLite3 and &lt;a href=&#34;https://github.com/pingcap/tidb&#34;&gt;TiDB&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Have localization over &lt;a href=&#34;https://crowdin.com/project/gogs&#34;&gt;31 languages&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💾 Hardware requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A Raspberry Pi or $5 Digital Ocean Droplet is more than enough to get you started. Some even use 64MB RAM Docker &lt;a href=&#34;https://www.docker.com/blog/containers-as-a-service-caas/&#34;&gt;CaaS&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;2 CPU cores and 512MB RAM would be the baseline for teamwork.&lt;/li&gt; &#xA; &lt;li&gt;Increase CPU cores when your team size gets significantly larger, memory footprint remains low.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💻 Browser support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please see &lt;a href=&#34;https://github.com/Semantic-Org/Semantic-UI#browser-support&#34;&gt;Semantic UI&lt;/a&gt; for specific versions of supported browsers.&lt;/li&gt; &#xA; &lt;li&gt;The smallest resolution officially supported is &lt;strong&gt;1024*768&lt;/strong&gt;, however the UI may still look right in smaller resolutions, but no promises or fixes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📜 Installation&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you install the &lt;a href=&#34;https://gogs.io/docs/installation&#34;&gt;prerequisites&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;There are 6 ways to install Gogs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gogs.io/docs/installation/install_from_binary.html&#34;&gt;Install from binary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gogs.io/docs/installation/install_from_source.html&#34;&gt;Install from source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gogs.io/docs/installation/install_from_packages.html&#34;&gt;Install from packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gogs/gogs/tree/main/docker&#34;&gt;Ship with Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geerlingguy/ansible-vagrant-examples/tree/master/gogs&#34;&gt;Try with Vagrant&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deploy to cloud&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cloudron.io/store/io.gogs.cloudronapp.html&#34;&gt;Cloudron&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cem/gogs-sandstorm&#34;&gt;Sandstorm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sloppyio/quickstarters/tree/master/gogs&#34;&gt;sloppy.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YunoHost-Apps/gogs_ynh&#34;&gt;YunoHost&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DFabric/DPlatform-Shell&#34;&gt;DPlatform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LunaNode/launchgogs&#34;&gt;LunaNode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.alwaysdata.com/en/marketplace/gogs/&#34;&gt;alwaysdata&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://peppe8o.com/private-git-web-portal-in-raspberry-pi-with-gogs/&#34;&gt;Private Git Web Portal in Raspberry PI With Gogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-set-up-gogs-on-ubuntu-14-04&#34;&gt;How To Set Up Gogs on Ubuntu 14.04&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.hypriot.com/post/run-your-own-github-like-service-with-docker/&#34;&gt;Run your own GitHub-like service with the help of Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://garthwaite.org/docker-gogs.html&#34;&gt;Dockerized Gogs git server and alpine postgres in 20 minutes or less&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eladnava.com/host-your-own-private-github-with-gogs-io/&#34;&gt;Host Your Own Private GitHub with Gogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.mynook.info/post/host-your-own-git-server-using-gogs/&#34;&gt;使用 Gogs 搭建自己的 Git 服务器&lt;/a&gt; (Chinese)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://my.oschina.net/luyao/blog/375654&#34;&gt;阿里云上 Ubuntu 14.04 64 位安装 Gogs&lt;/a&gt; (Chinese)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codejam.info/2015/03/installing-gogs-on-freebsd.html&#34;&gt;Installing Gogs on FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=deSfX0gqefE&#34;&gt;How to install Gogs on a Linux Server (DigitalOcean)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 Software, service and product support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://fabric8.io/&#34;&gt;Fabric8&lt;/a&gt; (DevOps)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jenkins.io/gogs-webhook/&#34;&gt;Jenkins&lt;/a&gt; (CI)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forge.puppet.com/modules/Siteminds/gogs&#34;&gt;Puppet&lt;/a&gt; (IT)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.synology.com&#34;&gt;Synology&lt;/a&gt; (Docker)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://syncloud.org/&#34;&gt;Syncloud&lt;/a&gt; (App Store)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🙇‍♂️ Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://twitter.com/egonelbre&#34;&gt;Egon Elbre&lt;/a&gt; for designing the original version of the logo.&lt;/li&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://crowdin.com/project/gogs&#34;&gt;Crowdin&lt;/a&gt; for sponsoring open source translation plan.&lt;/li&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://www.digitalocean.com&#34;&gt;DigitalOcean&lt;/a&gt;, &lt;a href=&#34;https://www.vpsserver.com/&#34;&gt;VPSServer&lt;/a&gt;, &lt;a href=&#34;https://www.hosted.nl/&#34;&gt;Hosted.nl&lt;/a&gt; and &lt;a href=&#34;https://bitlaunch.io&#34;&gt;BitLaunch&lt;/a&gt; for sponsoring VPS services.&lt;/li&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://www.keycdn.com/&#34;&gt;KeyCDN&lt;/a&gt; for sponsoring CDN service.&lt;/li&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://buildkite.com&#34;&gt;Buildkite&lt;/a&gt; for sponsoring open source CI/CD plan.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👋 Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/gogs/gogs/graphs/contributors&#34;&gt;contributors page&lt;/a&gt; for top 100 contributors.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/gogs/gogs/main/conf/locale/TRANSLATORS&#34;&gt;TRANSLATORS&lt;/a&gt; for public list of translators.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚖️ License&lt;/h2&gt; &#xA;&lt;p&gt;This project is under the MIT License. See the &lt;a href=&#34;https://github.com/gogs/gogs/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>golang/tools</title>
    <updated>2022-06-28T01:41:53Z</updated>
    <id>tag:github.com,2022-06-28:/golang/tools</id>
    <link href="https://github.com/golang/tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[mirror] Go Tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Go Tools&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/golang.org/x/tools&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/golang.org/x/tools&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository provides the &lt;code&gt;golang.org/x/tools&lt;/code&gt; module, comprising various tools and packages mostly for static analysis of Go programs, some of which are listed below. Use the &#34;Go reference&#34; link above for more information about any package.&lt;/p&gt; &#xA;&lt;p&gt;It also contains the &lt;a href=&#34;https://pkg.go.dev/golang.org/x/tools/gopls&#34;&gt;&lt;code&gt;golang.org/x/tools/gopls&lt;/code&gt;&lt;/a&gt; module, whose root package is a language-server protocol (LSP) server for Go. An LSP server analyses the source code of a project and responds to requests from a wide range of editors such as VSCode and Vim, allowing them to support IDE-like functionality.&lt;/p&gt; &#xA;&lt;!-- List only packages of general interest below. --&gt; &#xA;&lt;p&gt;Selected commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cmd/goimports&lt;/code&gt; formats a Go program like &lt;code&gt;go fmt&lt;/code&gt; and additionally inserts import statements for any packages required by the file after it is edited.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmd/callgraph&lt;/code&gt; prints the call graph of a Go program.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmd/digraph&lt;/code&gt; is a utility for manipulating directed graphs in textual notation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmd/stringer&lt;/code&gt; generates declarations (including a &lt;code&gt;String&lt;/code&gt; method) for &#34;enum&#34; types.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmd/toolstash&lt;/code&gt; is a utility to simplify working with multiple versions of the Go toolchain.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These commands may be fetched with a command such as &lt;code&gt;go install golang.org/x/tools/cmd/goimports@latest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Selected packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/ssa&lt;/code&gt; provides a static single-assignment form (SSA) intermediate representation (IR) for Go programs, similar to a typical compiler, for use by analysis tools.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/packages&lt;/code&gt; provides a simple interface for loading, parsing, and type checking a complete Go program from source code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/analysis&lt;/code&gt; provides a framework for modular static analysis of Go programs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/callgraph&lt;/code&gt; provides call graphs of Go programs using a variety of algorithms with different trade-offs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/ast/inspector&lt;/code&gt; provides an optimized means of traversing a Go parse tree for use in analysis tools.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/cfg&lt;/code&gt; provides a simple control-flow graph (CFG) for a Go function.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/expect&lt;/code&gt; reads Go source files used as test inputs and interprets special comments within them as queries or assertions for testing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/gcexportdata&lt;/code&gt; and &lt;code&gt;go/gccgoexportdata&lt;/code&gt; read and write the binary files containing type information used by the standard and &lt;code&gt;gccgo&lt;/code&gt; compilers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;go/types/objectpath&lt;/code&gt; provides a stable naming scheme for named entities (&#34;objects&#34;) in the &lt;code&gt;go/types&lt;/code&gt; API.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Numerous other packages provide more esoteric functionality.&lt;/p&gt; &#xA;&lt;!-- Some that didn&#39;t make the cut: &#xA;&#xA;golang.org/x/tools/benchmark/parse&#xA;golang.org/x/tools/go/ast/astutil&#xA;golang.org/x/tools/go/types/typeutil&#xA;golang.org/x/tools/go/vcs&#xA;golang.org/x/tools/godoc&#xA;golang.org/x/tools/playground&#xA;golang.org/x/tools/present&#xA;golang.org/x/tools/refactor/importgraph&#xA;golang.org/x/tools/refactor/rename&#xA;golang.org/x/tools/refactor/satisfy&#xA;golang.org/x/tools/txtar&#xA;&#xA;--&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses Gerrit for code changes. To learn how to submit changes, see &lt;a href=&#34;https://golang.org/doc/contribute.html&#34;&gt;https://golang.org/doc/contribute.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The main issue tracker for the tools repository is located at &lt;a href=&#34;https://github.com/golang/go/issues&#34;&gt;https://github.com/golang/go/issues&lt;/a&gt;. Prefix your issue with &#34;x/tools/(your subdir):&#34; in the subject line, so it is easy to find.&lt;/p&gt; &#xA;&lt;h3&gt;JavaScript and CSS Formatting&lt;/h3&gt; &#xA;&lt;p&gt;This repository uses &lt;a href=&#34;https://prettier.io/&#34;&gt;prettier&lt;/a&gt; to format JS and CSS files.&lt;/p&gt; &#xA;&lt;p&gt;The version of &lt;code&gt;prettier&lt;/code&gt; used is 1.18.2.&lt;/p&gt; &#xA;&lt;p&gt;It is encouraged that all JS and CSS code be run through this before submitting a change. However, it is not a strict requirement enforced by CI.&lt;/p&gt;</summary>
  </entry>
</feed>