<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-15T01:35:25Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hashicorp/terraform-mcp-server</title>
    <updated>2025-08-15T01:35:25Z</updated>
    <id>tag:github.com,2025-08-15:/hashicorp/terraform-mcp-server</id>
    <link href="https://github.com/hashicorp/terraform-mcp-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Terraform MCP Server provides seamless integration with Terraform ecosystem, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hashicorp/terraform-mcp-server/main/public/images/Terraform-LogoMark_onDark.svg?sanitize=true&#34; width=&#34;30&#34; align=&#34;left&#34; style=&#34;margin-right: 12px;&#34; /&gt; Terraform MCP Server&lt;/h1&gt; &#xA;&lt;p&gt;The Terraform MCP Server is a &lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34;&gt;Model Context Protocol (MCP)&lt;/a&gt; server that provides seamless integration with Terraform Registry APIs, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dual Transport Support&lt;/strong&gt;: Both Stdio and StreamableHTTP transports&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Terraform Provider Discovery&lt;/strong&gt;: Query and explore Terraform providers and their documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Module Search &amp;amp; Analysis&lt;/strong&gt;: Search and retrieve detailed information about Terraform modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Registry Integration&lt;/strong&gt;: Direct integration with Terraform Registry APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Container Ready&lt;/strong&gt;: Docker support for easy deployment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Caution:&lt;/strong&gt; The outputs and recommendations provided by the MCP server are generated dynamically and may vary based on the query, model, and the connected MCP server. Users should &lt;strong&gt;thoroughly review all outputs/recommendations&lt;/strong&gt; to ensure they align with their organization&#39;s &lt;strong&gt;security best practices&lt;/strong&gt;, &lt;strong&gt;cost-efficiency goals&lt;/strong&gt;, and &lt;strong&gt;compliance requirements&lt;/strong&gt; before implementation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Security Note:&lt;/strong&gt; When using the StreamableHTTP transport in production, always configure the &lt;code&gt;MCP_ALLOWED_ORIGINS&lt;/code&gt; environment variable to restrict access to trusted origins only. This helps prevent DNS rebinding attacks and other cross-origin vulnerabilities.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To run the server in a container, you will need to have &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; installed.&lt;/li&gt; &#xA; &lt;li&gt;Once Docker is installed, you will need to ensure Docker is running.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Transport Support&lt;/h2&gt; &#xA;&lt;p&gt;The Terraform MCP Server supports multiple transport protocols:&lt;/p&gt; &#xA;&lt;h3&gt;1. Stdio Transport (Default)&lt;/h3&gt; &#xA;&lt;p&gt;Standard input/output communication using JSON-RPC messages. Ideal for local development and direct integration with MCP clients.&lt;/p&gt; &#xA;&lt;h3&gt;2. StreamableHTTP Transport&lt;/h3&gt; &#xA;&lt;p&gt;Modern HTTP-based transport supporting both direct HTTP requests and Server-Sent Events (SSE) streams. This is the recommended transport for remote/distributed setups.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Endpoint&lt;/strong&gt;: &lt;code&gt;http://{hostname}:8080/mcp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Health Check&lt;/strong&gt;: &lt;code&gt;http://{hostname}:8080/health&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Environment Configuration&lt;/strong&gt;: Set &lt;code&gt;TRANSPORT_MODE=http&lt;/code&gt; or &lt;code&gt;TRANSPORT_PORT=8080&lt;/code&gt; to enable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Environment Variables:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TRANSPORT_MODE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set to &lt;code&gt;streamable-http&lt;/code&gt; to enable HTTP transport (legacy &lt;code&gt;http&lt;/code&gt; value still supported)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;stdio&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TRANSPORT_HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Host to bind the HTTP server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TRANSPORT_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP server port&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MCP_ENDPOINT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP server endpoint path&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/mcp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MCP_SESSION_MODE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Session mode: &lt;code&gt;stateful&lt;/code&gt; or &lt;code&gt;stateless&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;stateful&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MCP_ALLOWED_ORIGINS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated list of allowed origins for CORS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;&#34;&lt;/code&gt; (empty)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MCP_CORS_MODE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CORS mode: &lt;code&gt;strict&lt;/code&gt;, &lt;code&gt;development&lt;/code&gt;, or &lt;code&gt;disabled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;strict&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Command Line Options&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Stdio mode&#xA;terraform-mcp-server stdio [--log-file /path/to/log]&#xA;&#xA;# StreamableHTTP mode&#xA;terraform-mcp-server streamable-http [--transport-port 8080] [--transport-host 127.0.0.1] [--mcp-endpoint /mcp] [--log-file /path/to/log]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Session Modes&lt;/h2&gt; &#xA;&lt;p&gt;The Terraform MCP Server supports two session modes when using the StreamableHTTP transport:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stateful Mode (Default)&lt;/strong&gt;: Maintains session state between requests, enabling context-aware operations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stateless Mode&lt;/strong&gt;: Each request is processed independently without maintaining session state, which can be useful for high-availability deployments or when using load balancers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To enable stateless mode, set the environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export MCP_SESSION_MODE=stateless&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Usage with VS Code&lt;/h3&gt; &#xA;&lt;p&gt;Add the following JSON block to your User Settings (JSON) file in VS Code. You can do this by pressing &lt;code&gt;Ctrl + Shift + P&lt;/code&gt; and typing &lt;code&gt;Preferences: Open User Settings (JSON)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More about using MCP server tools in VS Code&#39;s &lt;a href=&#34;https://code.visualstudio.com/docs/copilot/chat/mcp-servers&#34;&gt;agent mode documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcp&#34;: {&#xA;    &#34;servers&#34;: {&#xA;      &#34;terraform&#34;: {&#xA;        &#34;command&#34;: &#34;docker&#34;,&#xA;        &#34;args&#34;: [&#xA;          &#34;run&#34;,&#xA;          &#34;-i&#34;,&#xA;          &#34;--rm&#34;,&#xA;          &#34;hashicorp/terraform-mcp-server&#34;&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can add a similar example (i.e. without the mcp key) to a file called &lt;code&gt;.vscode/mcp.json&lt;/code&gt; in your workspace. This will allow you to share the configuration with others.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;servers&#34;: {&#xA;    &#34;terraform&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;hashicorp/terraform-mcp-server&#34;&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage with Claude Desktop / Amazon Q Developer / Amazon Q CLI&lt;/h3&gt; &#xA;&lt;p&gt;More about using MCP server tools in Claude Desktop &lt;a href=&#34;https://modelcontextprotocol.io/quickstart/user&#34;&gt;user documentation&lt;/a&gt;. Read more about using MCP server in Amazon Q from the &lt;a href=&#34;https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/qdev-mcp.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;terraform&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;hashicorp/terraform-mcp-server&#34;&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tool Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Available Toolsets&lt;/h3&gt; &#xA;&lt;p&gt;The following sets of tools are available:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Toolset&lt;/th&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;search_providers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Queries the Terraform Registry to find and list available documentation for a specific provider using the specified &lt;code&gt;service_slug&lt;/code&gt;. Returns a list of provider document IDs with their titles and categories for resources, data sources, functions, or guides.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;get_provider_details&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fetches the complete documentation content for a specific provider resource, data source, or function using a document ID obtained from the &lt;code&gt;search_providers&lt;/code&gt; tool. Returns the raw documentation in markdown format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;search_modules&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Searches the Terraform Registry for modules based on specified &lt;code&gt;module_query&lt;/code&gt; with pagination. Returns a list of module IDs with their names, descriptions, download counts, verification status, and publish dates&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;get_module_details&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Retrieves detailed documentation for a module using a module ID obtained from the &lt;code&gt;search_modules&lt;/code&gt; tool including inputs, outputs, configuration, submodules, and examples.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;policies&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;search_policies&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Queries the Terraform Registry to find and list the appropriate Sentinel Policy based on the provided query &lt;code&gt;policy_query&lt;/code&gt;. Returns a list of matching policies with terraform_policy_id(s) with their name, title and download counts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;policies&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;get_policy_details&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Retrieves detailed documentation for a policy set using a terraform_policy_id obtained from the &lt;code&gt;search_policies&lt;/code&gt; tool including policy readme and implementation details.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Resource Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Available resources&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Resource URI&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/terraform/style-guide&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Terraform Style Guide - Provides access to the official Terraform style guide documentation in markdown format&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/terraform/module-development&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Terraform Module Development Guide - Comprehensive guide covering module composition, structure, providers, publishing, and refactoring best practices&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Available Resource Templates&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Resouce Template URI&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/terraform/providers/{namespace}/name/{name}/version/{version}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provider Resource Template - Dynamically retrieves detailed documentation and overview for any Terraform provider by namespace, name, and version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Install from source&lt;/h3&gt; &#xA;&lt;p&gt;Use the latest release version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go install github.com/hashicorp/terraform-mcp-server/cmd/terraform-mcp-server@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the main branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go install github.com/hashicorp/terraform-mcp-server/cmd/terraform-mcp-server@main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcp&#34;: {&#xA;    &#34;servers&#34;: {&#xA;      &#34;terraform&#34;: {&#xA;        &#34;command&#34;: &#34;/path/to/terraform-mcp-server&#34;,&#xA;        &#34;args&#34;: [&#34;stdio&#34;]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building the Docker Image locally&lt;/h2&gt; &#xA;&lt;p&gt;Before using the server, you need to build the Docker image locally:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/hashicorp/terraform-mcp-server.git&#xA;cd terraform-mcp-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Build the Docker image:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make docker-build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;This will create a local Docker image that you can use in the following configuration.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run in stdio mode&#xA;docker run -i --rm terraform-mcp-server:dev&#xA;&#xA;# Run in streamable-http mode&#xA;docker run -p 8080:8080 --rm -e TRANSPORT_MODE=streamable-http -e TRANSPORT_HOST=0.0.0.0 terraform-mcp-server:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When running in Docker, you should set &lt;code&gt;TRANSPORT_HOST=0.0.0.0&lt;/code&gt; to allow connections from outside the container.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;(Optional) Test connection in http mode&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Test the connection&#xA;curl http://localhost:8080/health&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;You can use it on your AI assistant as follow:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;terraform&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;terraform-mcp-server:dev&#34;&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go (check &lt;a href=&#34;https://raw.githubusercontent.com/hashicorp/terraform-mcp-server/main/go.mod&#34;&gt;go.mod&lt;/a&gt; file for specific version)&lt;/li&gt; &#xA; &lt;li&gt;Docker (optional, for container builds)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Available Make Commands&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make build&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build the binary&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make test&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run all tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make test-e2e&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run end-to-end tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make docker-build&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build Docker image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make run-http&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run HTTP server locally&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make docker-run-http&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run HTTP server in Docker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make test-http&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Test HTTP health endpoint&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make clean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Remove build artifacts&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;make help&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show all available commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch&lt;/li&gt; &#xA; &lt;li&gt;Make your changes&lt;/li&gt; &#xA; &lt;li&gt;Run tests&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MPL-2.0 open source license. Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/hashicorp/terraform-mcp-server/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for the full terms.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;For security issues, please contact &lt;a href=&#34;mailto:security@hashicorp.com&#34;&gt;security@hashicorp.com&lt;/a&gt; or follow our &lt;a href=&#34;https://www.hashicorp.com/en/trust/security/vulnerability-management&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For bug reports and feature requests, please open an issue on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;For general questions and discussions, open a GitHub Discussion.&lt;/p&gt;</summary>
  </entry>
</feed>