<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-17T01:32:49Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/osv-scanner</title>
    <updated>2022-12-17T01:32:49Z</updated>
    <id>tag:github.com,2022-12-17:/google/osv-scanner</id>
    <link href="https://github.com/google/osv-scanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vulnerability scanner written in Go which uses the data provided by https://osv.dev&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/google/osv-scanner&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/google/osv-scanner/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;OSV-Scanner&lt;/h1&gt; &#xA;&lt;p&gt;Use OSV-Scanner to find existing vulnerabilities affecting your project&#39;s dependencies.&lt;/p&gt; &#xA;&lt;p&gt;OSV-Scanner provides an officially supported frontend to the &lt;a href=&#34;https://osv.dev/&#34;&gt;OSV database&lt;/a&gt; that connects a project’s list of dependencies with the vulnerabilities that affect them. Since the OSV.dev database is open source and distributed, it has several benefits in comparison with closed source advisory databases and scanners:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Each advisory comes from an open and authoritative source (e.g. the &lt;a href=&#34;https://github.com/rustsec/advisory-db&#34;&gt;RustSec Advisory Database&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Anyone can suggest improvements to advisories, resulting in a very high quality database&lt;/li&gt; &#xA; &lt;li&gt;The OSV format unambiguously stores information about affected versions in a machine-readable format that precisely maps onto a developer’s list of packages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The above all results in fewer, more actionable vulnerability notifications, which reduces the time needed to resolve them.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#osv-scanner&#34;&gt;OSV-Scanner&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#installing&#34;&gt;Installing&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#installation-process&#34;&gt;Installation Process&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#semver-adherence&#34;&gt;SemVer Adherence&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#scan-a-directory&#34;&gt;Scan a directory&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#input-an-sbom&#34;&gt;Input an SBOM&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#input-a-lockfile&#34;&gt;Input a lockfile&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#scanning-a-debian-based-docker-image-packages&#34;&gt;Scanning a Debian based docker image packages&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#configure-osv-scanner&#34;&gt;Configure OSV-Scanner&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#ignore-vulnerabilities-by-id&#34;&gt;Ignore vulnerabilities by ID&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#json-output&#34;&gt;JSON output&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/osv-scanner/main/#output-format&#34;&gt;Output Format&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;h3&gt;Installation Process&lt;/h3&gt; &#xA;&lt;p&gt;You may download the &lt;a href=&#34;https://slsa.dev&#34;&gt;SLSA3&lt;/a&gt; compliant binaries for Linux, macOS, and Windows from our &lt;a href=&#34;https://github.com/google/osv-scanner/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Install from source&lt;/h4&gt; &#xA;&lt;p&gt;Alternatively, you can install this from source by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go install github.com/google/osv-scanner/cmd/osv-scanner@v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This requires Go 1.18+ to be installed.&lt;/p&gt; &#xA;&lt;h3&gt;SemVer Adherence&lt;/h3&gt; &#xA;&lt;p&gt;All releases on the same Major version will be guaranteed to have backward compatible JSON output and CLI arguments.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;OSV-Scanner collects a list of dependencies and versions that are used in your project, before matching this list against the OSV database via the &lt;a href=&#34;https://osv.dev#use-the-api&#34;&gt;OSV.dev API&lt;/a&gt;. To build the list of dependencies, you can point OSV-Scanner at your project directory, or manually pass in the path to individual manifest files.&lt;/p&gt; &#xA;&lt;h3&gt;Scan a directory&lt;/h3&gt; &#xA;&lt;p&gt;Walks through a list of directories to find:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lockfiles&lt;/li&gt; &#xA; &lt;li&gt;SBOMs&lt;/li&gt; &#xA; &lt;li&gt;git directories for the latest commit hash&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;which is used to build the list of dependencies to be matched against OSV vulnerabilities.&lt;/p&gt; &#xA;&lt;p&gt;Can be configured to recursively walk through subdirectories with the &lt;code&gt;--recursive&lt;/code&gt; / &lt;code&gt;-r&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;p&gt;Searching for git commit hash is intended to work with projects that use git submodules or a similar mechanism where dependencies are checked out as real git repositories.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run ./cmd/osv-scanner -r /path/to/your/dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Input an SBOM&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://spdx.dev/&#34;&gt;SPDX&lt;/a&gt; and &lt;a href=&#34;https://cyclonedx.org/&#34;&gt;CycloneDX&lt;/a&gt; SBOMs using &lt;a href=&#34;https://github.com/package-url/purl-spec&#34;&gt;Package URLs&lt;/a&gt; are supported. The format is auto-detected based on the input file contents.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run ./cmd/osv-scanner --sbom=/path/to/your/sbom.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Input a lockfile&lt;/h3&gt; &#xA;&lt;p&gt;A wide range of lockfiles are supported by utilizing this &lt;a href=&#34;https://github.com/google/osv-scanner/tree/main/pkg/lockfile&#34;&gt;lockfile package&lt;/a&gt;. This is the current list of supported lockfiles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Cargo.lock&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;package-lock.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn.lock&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pnpm-lock.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;composer.lock&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Gemfile.lock&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;go.mod&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mix.lock&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;poetry.lock&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pubspec.lock&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;a href=&#34;https://github.com/google/osv-scanner/issues/35&#34;&gt;*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;requirements.txt&lt;/code&gt;&lt;a href=&#34;https://github.com/google/osv-scanner/issues/34&#34;&gt;*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gradle.lockfile&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;buildscript-gradle.lockfile&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run ./cmd/osv-scanner --lockfile=/path/to/your/package-lock.json -L /path/to/another/Cargo.lock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scanning a Debian based docker image packages (preview)&lt;/h3&gt; &#xA;&lt;p&gt;This tool will scrape the list of installed packages in a Debian image and query for vulnerabilities on them.&lt;/p&gt; &#xA;&lt;p&gt;Currently only Debian based docker image scanning is supported.&lt;/p&gt; &#xA;&lt;p&gt;Requires &lt;code&gt;docker&lt;/code&gt; to be installed and the tool to have permission calling it.&lt;/p&gt; &#xA;&lt;p&gt;This currently does not scan the filesystem of the Docker container, and has various other limitations. Follow &lt;a href=&#34;https://github.com/google/osv-scanner/issues/64&#34;&gt;this issue&lt;/a&gt; for updates on container scanning!&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run ./cmd/osv-scanner --docker image_name:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configure OSV-Scanner&lt;/h2&gt; &#xA;&lt;p&gt;To configure scanning, place an osv-scanner.toml file in the scanned file&#39;s directory. To override this osv-scanner.toml file, pass the &lt;code&gt;--config=/path/to/config.toml&lt;/code&gt; flag with the path to the configuration you want to apply instead.&lt;/p&gt; &#xA;&lt;p&gt;Currently, there is only 1 option to configure:&lt;/p&gt; &#xA;&lt;h3&gt;Ignore vulnerabilities by ID&lt;/h3&gt; &#xA;&lt;p&gt;To ignore a vulnerability, enter the ID under the &lt;code&gt;IgnoreVulns&lt;/code&gt; key. Optionally, add an expiry date or reason.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;[[IgnoredVulns]]&#xA;id = &#34;GO-2022-0968&#34;&#xA;# ignoreUntil = 2022-11-09 # Optional exception expiry date&#xA;reason = &#34;No ssh servers are connected to or hosted in Go lang&#34;&#xA;&#xA;id = &#34;GO-2022-1059&#34;&#xA;# ignoreUntil = 2022-11-09 # Optional exception expiry date&#xA;reason = &#34;No external http servers are written in Go lang.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;JSON output&lt;/h2&gt; &#xA;&lt;p&gt;By default osv-scanner outputs a human readable table. To have osv-scanner output JSON instead, pass the &lt;code&gt;--json&lt;/code&gt; flag when calling osv-scanner.&lt;/p&gt; &#xA;&lt;p&gt;When using the --json flag, only the JSON output will be printed to stdout, with all other outputs being directed to stderr. So to save only the json output to file, you can redirect the output with &lt;code&gt;osv-scanner --json ... &amp;gt; /path/to/file.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Output Format&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;{&#xA;  &#34;results&#34;: [&#xA;    {&#xA;      &#34;packageSource&#34;: {&#xA;        &#34;path&#34;: &#34;/absolute/path/to/go.mod&#34;,&#xA;        // One of: lockfile, sbom, git, docker&#xA;        &#34;type&#34;: &#34;lockfile&#34;&#xA;      },&#xA;      &#34;packages&#34;: [&#xA;        {&#xA;          &#34;Package&#34;: {&#xA;            &#34;name&#34;: &#34;github.com/gogo/protobuf&#34;,&#xA;            &#34;version&#34;: &#34;1.3.1&#34;,&#xA;            &#34;ecosystem&#34;: &#34;Go&#34;&#xA;          },&#xA;          &#34;vulnerabilities&#34;: [&#xA;            {&#xA;              &#34;id&#34;: &#34;GHSA-c3h9-896r-86jm&#34;,&#xA;              &#34;aliases&#34;: [&#xA;                &#34;CVE-2021-3121&#34;&#xA;              ],&#xA;              // ... Full OSV&#xA;            },&#xA;            {&#xA;              &#34;id&#34;: &#34;GO-2021-0053&#34;,&#xA;              &#34;aliases&#34;: [&#xA;                &#34;CVE-2021-3121&#34;,&#xA;                &#34;GHSA-c3h9-896r-86jm&#34;&#xA;              ],&#xA;              // ... Full OSV&#xA;            }&#xA;          ],&#xA;          // Grouping based on aliases, if two vulnerability share the same alias, or alias each other,&#xA;          // they are considered the same vulnerability, and is grouped here under the id field.&#xA;          &#34;groups&#34;: [&#xA;            {&#xA;              &#34;ids&#34;: [&#xA;                &#34;GHSA-c3h9-896r-86jm&#34;,&#xA;                &#34;GO-2021-0053&#34;&#xA;              ]&#xA;            }&#xA;          ]&#xA;        }&#xA;      ]&#xA;    },&#xA;    {&#xA;      &#34;packageSource&#34;: {&#xA;        &#34;path&#34;: &#34;/absolute/path/to/Cargo.lock&#34;,&#xA;        &#34;type&#34;: &#34;lockfile&#34;&#xA;      },&#xA;      &#34;packages&#34;: [&#xA;        {&#xA;          &#34;Package&#34;: {&#xA;            &#34;name&#34;: &#34;regex&#34;,&#xA;            &#34;version&#34;: &#34;1.5.1&#34;,&#xA;            &#34;ecosystem&#34;: &#34;crates.io&#34;&#xA;          },&#xA;          &#34;vulnerabilities&#34;: [&#xA;            {&#xA;              &#34;id&#34;: &#34;GHSA-m5pq-gvj9-9vr8&#34;,&#xA;              &#34;aliases&#34;: [&#xA;                &#34;CVE-2022-24713&#34;&#xA;              ],&#xA;              // ... Full OSV&#xA;            },&#xA;            {&#xA;              &#34;id&#34;: &#34;RUSTSEC-2022-0013&#34;,&#xA;              &#34;aliases&#34;: [&#xA;                &#34;CVE-2022-24713&#34;&#xA;              ],&#xA;              // ... Full OSV&#xA;            }&#xA;          ],&#xA;          &#34;groups&#34;: [&#xA;            {&#xA;              &#34;ids&#34;: [&#xA;                &#34;GHSA-m5pq-gvj9-9vr8&#34;,&#xA;                &#34;RUSTSEC-2022-0013&#34;&#xA;              ]&#xA;            }&#xA;          ]&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>gopherjs/gopherjs</title>
    <updated>2022-12-17T01:32:49Z</updated>
    <id>tag:github.com,2022-12-17:/gopherjs/gopherjs</id>
    <link href="https://github.com/gopherjs/gopherjs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A compiler from Go to JavaScript for running Go code in a browser&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;GopherJS - A compiler from Go to JavaScript&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/gopherjs/gopherjs/js&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/gopherjs/gopherjs/js?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcegraph.com/github.com/gopherjs/gopherjs?badge&#34;&gt;&lt;img src=&#34;https://sourcegraph.com/github.com/gopherjs/gopherjs/-/badge.svg?sanitize=true&#34; alt=&#34;Sourcegraph&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/gopherjs/gopherjs&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/gopherjs/gopherjs.svg?style=svg&#34; alt=&#34;Circle CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GopherJS compiles Go code (&lt;a href=&#34;https://go.dev/&#34;&gt;go.dev&lt;/a&gt;) to pure JavaScript code. Its main purpose is to give you the opportunity to write front-end code in Go which will still run in all browsers.&lt;/p&gt; &#xA;&lt;h3&gt;Help us make GopherJS better!&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⤴️ &lt;strong&gt;Help us make better decisions by filling a quick 15-question &lt;a href=&#34;https://forms.gle/WEjZqZaPxTxjD9YP8&#34;&gt;GopherJS user survey&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;📢 Report and discuss &lt;a href=&#34;https://github.com/gopherjs/gopherjs/issues&#34;&gt;issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🎓 Share your knowledge and experience through &lt;a href=&#34;https://github.com/gopherjs/gopherjs/wiki/Community-Tutorials-and-Blogs&#34;&gt;articles&lt;/a&gt; and &lt;a href=&#34;https://github.com/gopherjs/gopherjs/tree/master/doc&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🛠️ Write GopherJS &lt;a href=&#34;https://github.com/gopherjs/gopherjs/wiki/Bindings&#34;&gt;bindings&lt;/a&gt; for other libraries or &lt;a href=&#34;https://github.com/gopherjs/gopherjs/wiki/Developer-Guidelines&#34;&gt;contribute&lt;/a&gt; to GopherJS itself.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What&#39;s new?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2022-08-18: Go 1.18 support is &lt;a href=&#34;https://github.com/gopherjs/gopherjs/releases/tag/v1.18.0-beta1%2Bgo1.18.5&#34;&gt;available&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;2021-09-19: Go 1.17 support is available!&lt;/li&gt; &#xA; &lt;li&gt;2021-08-23: Go Modules are now fully supported.&lt;/li&gt; &#xA; &lt;li&gt;2021-06-19: Complete &lt;code&gt;syscall/js&lt;/code&gt; package implementation compatible with the upstream Go 1.16.&lt;/li&gt; &#xA; &lt;li&gt;2021-04-04: &lt;strong&gt;Go 1.16 is now officially supported!&lt;/strong&gt; 🎉 🎉 🎉&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Playground&lt;/h3&gt; &#xA;&lt;p&gt;Give GopherJS a try on the &lt;a href=&#34;http://gopherjs.github.io/playground/&#34;&gt;GopherJS Playground&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What is supported?&lt;/h3&gt; &#xA;&lt;p&gt;Nearly everything, including Goroutines (&lt;a href=&#34;https://github.com/gopherjs/gopherjs/raw/master/doc/compatibility.md&#34;&gt;compatibility documentation&lt;/a&gt;). Performance is quite good in most cases, see &lt;a href=&#34;https://ajhager.github.io/engi/demos/botmark.html&#34;&gt;HTML5 game engine benchmark&lt;/a&gt;. Cgo is not supported.&lt;/p&gt; &#xA;&lt;h3&gt;Installation and Usage&lt;/h3&gt; &#xA;&lt;p&gt;GopherJS &lt;a href=&#34;https://github.com/gopherjs/gopherjs/raw/master/doc/compatibility.md#go-version-compatibility&#34;&gt;requires Go 1.18 or newer&lt;/a&gt;. If you need an older Go version, you can use an &lt;a href=&#34;https://github.com/gopherjs/gopherjs/releases&#34;&gt;older GopherJS release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install GopherJS with &lt;code&gt;go install&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install github.com/gopherjs/gopherjs@v1.18.0-beta1  # Or replace &#39;v1.18.0-beta1&#39; with another version.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your local Go distribution as reported by &lt;code&gt;go version&lt;/code&gt; is newer than Go 1.18, then you need to set the &lt;code&gt;GOPHERJS_GOROOT&lt;/code&gt; environment variable to a directory that contains a Go 1.18 distribution. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install golang.org/dl/go1.18.6@latest&#xA;go1.18.6 download&#xA;export GOPHERJS_GOROOT=&#34;$(go1.18.6 env GOROOT)&#34;  # Also add this line to your .profile or equivalent.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can use &lt;code&gt;gopherjs build [package]&lt;/code&gt;, &lt;code&gt;gopherjs build [files]&lt;/code&gt; or &lt;code&gt;gopherjs install [package]&lt;/code&gt; which behave similar to the &lt;code&gt;go&lt;/code&gt; tool. For &lt;code&gt;main&lt;/code&gt; packages, these commands create a &lt;code&gt;.js&lt;/code&gt; file and &lt;code&gt;.js.map&lt;/code&gt; source map in the current directory or in &lt;code&gt;$GOPATH/bin&lt;/code&gt;. The generated JavaScript file can be used as usual in a website. Use &lt;code&gt;gopherjs help [command]&lt;/code&gt; to get a list of possible command line flags, e.g. for minification and automatically watching for changes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gopherjs&lt;/code&gt; uses your platform&#39;s default &lt;code&gt;GOOS&lt;/code&gt; value when generating code. Supported &lt;code&gt;GOOS&lt;/code&gt; values are: &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;darwin&lt;/code&gt;. If you&#39;re on a different platform (e.g., Windows or FreeBSD), you&#39;ll need to set the &lt;code&gt;GOOS&lt;/code&gt; environment variable to a supported value. For example, &lt;code&gt;GOOS=linux gopherjs build [package]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: GopherJS will try to write compiled object files of the core packages to your $GOROOT/pkg directory. If that fails, it will fall back to $GOPATH/pkg.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;gopherjs run, gopherjs test&lt;/h4&gt; &#xA;&lt;p&gt;If you want to use &lt;code&gt;gopherjs run&lt;/code&gt; or &lt;code&gt;gopherjs test&lt;/code&gt; to run the generated code locally, install Node.js 10.0.0 (or newer), and the &lt;code&gt;source-map-support&lt;/code&gt; module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --global source-map-support&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On supported &lt;code&gt;GOOS&lt;/code&gt; platforms, it&#39;s possible to make system calls (file system access, etc.) available. See &lt;a href=&#34;https://github.com/gopherjs/gopherjs/raw/master/doc/syscalls.md&#34;&gt;doc/syscalls.md&lt;/a&gt; for instructions on how to do so.&lt;/p&gt; &#xA;&lt;h4&gt;gopherjs serve&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;gopherjs serve&lt;/code&gt; is a useful command you can use during development. It will start an HTTP server serving on &#34;:8080&#34; by default, then dynamically compile your Go packages with GopherJS and serve them.&lt;/p&gt; &#xA;&lt;p&gt;For example, navigating to &lt;code&gt;http://localhost:8080/example.com/user/project/&lt;/code&gt; should compile and run the Go package &lt;code&gt;example.com/user/project&lt;/code&gt;. The generated JavaScript output will be served at &lt;code&gt;http://localhost:8080/example.com/user/project/project.js&lt;/code&gt; (the .js file name will be equal to the base directory name). If the directory contains &lt;code&gt;index.html&lt;/code&gt; it will be served, otherwise a minimal &lt;code&gt;index.html&lt;/code&gt; that includes &lt;code&gt;&amp;lt;script src=&#34;project.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; will be provided, causing the JavaScript to be executed. All other static files will be served too.&lt;/p&gt; &#xA;&lt;p&gt;Refreshing in the browser will rebuild the served files if needed. Compilation errors will be displayed in terminal, and in browser console. Additionally, it will serve $GOROOT and $GOPATH for sourcemaps.&lt;/p&gt; &#xA;&lt;p&gt;If you include an argument, it will be the root from which everything is served. For example, if you run &lt;code&gt;gopherjs serve github.com/user/project&lt;/code&gt; then the generated JavaScript for the package github.com/user/project/mypkg will be served at &lt;a href=&#34;http://localhost:8080/mypkg/mypkg.js&#34;&gt;http://localhost:8080/mypkg/mypkg.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Environment Variables&lt;/h4&gt; &#xA;&lt;p&gt;There are some GopherJS-specific environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GOPHERJS_GOROOT&lt;/code&gt; - if set, GopherJS uses this value as the default GOROOT value, instead of using the system GOROOT as the default GOROOT value&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GOPHERJS_SKIP_VERSION_CHECK&lt;/code&gt; - if set to true, GopherJS will not check Go version in the GOROOT for compatibility with the GopherJS release. This is primarily useful for testing GopherJS against unreleased versions of Go.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Performance Tips&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;-m&lt;/code&gt; command line flag to generate minified code.&lt;/li&gt; &#xA; &lt;li&gt;Apply gzip compression (&lt;a href=&#34;https://en.wikipedia.org/wiki/HTTP_compression&#34;&gt;https://en.wikipedia.org/wiki/HTTP_compression&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;int&lt;/code&gt; instead of &lt;code&gt;(u)int8/16/32/64&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;float64&lt;/code&gt; instead of &lt;code&gt;float32&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gophers.slack.com/messages/gopherjs/&#34;&gt;#gopherjs Channel on Gophers Slack&lt;/a&gt; (invites to Gophers Slack are available &lt;a href=&#34;http://blog.gopheracademy.com/gophers-slack-community/#how-can-i-be-invited-to-join:2facdc921b2310f18cb851c36fa92369&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gopherjs/gopherjs/wiki/bindings&#34;&gt;Bindings to JavaScript APIs and libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/gopherjs&#34;&gt;GopherJS Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/GopherJS&#34;&gt;GopherJS on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gopherjs/gopherjs/wiki/Community-Tutorials-and-Blogs&#34;&gt;Examples, tutorials and blogs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting started&lt;/h3&gt; &#xA;&lt;h4&gt;Interacting with the DOM&lt;/h4&gt; &#xA;&lt;p&gt;The package &lt;code&gt;github.com/gopherjs/gopherjs/js&lt;/code&gt; (see &lt;a href=&#34;https://godoc.org/github.com/gopherjs/gopherjs/js&#34;&gt;documentation&lt;/a&gt;) provides functions for interacting with native JavaScript APIs. For example the line&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;document.write(&#34;Hello world!&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;would look like this in Go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;js.Global.Get(&#34;document&#34;).Call(&#34;write&#34;, &#34;Hello world!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also want use the &lt;a href=&#34;http://dominik.honnef.co/go/js/dom&#34;&gt;DOM bindings&lt;/a&gt;, the &lt;a href=&#34;https://github.com/gopherjs/jquery&#34;&gt;jQuery bindings&lt;/a&gt; (see &lt;a href=&#34;https://github.com/gopherjs/todomvc&#34;&gt;TodoMVC Example&lt;/a&gt;) or the &lt;a href=&#34;https://github.com/wvell/go-angularjs&#34;&gt;AngularJS bindings&lt;/a&gt;. Those are some of the &lt;a href=&#34;https://github.com/gopherjs/gopherjs/wiki/bindings&#34;&gt;bindings to JavaScript APIs and libraries&lt;/a&gt; by community members.&lt;/p&gt; &#xA;&lt;h4&gt;Providing library functions for use in other JavaScript code&lt;/h4&gt; &#xA;&lt;p&gt;Set a global variable to a map that contains the functions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import &#34;github.com/gopherjs/gopherjs/js&#34;&#xA;&#xA;func main() {&#xA;&#x9;js.Global.Set(&#34;pet&#34;, map[string]interface{}{&#xA;&#x9;&#x9;&#34;New&#34;: New,&#xA;&#x9;})&#xA;}&#xA;&#xA;type Pet struct {&#xA;&#x9;name string&#xA;}&#xA;&#xA;func New(name string) *js.Object {&#xA;&#x9;return js.MakeWrapper(&amp;amp;Pet{name})&#xA;}&#xA;&#xA;func (p *Pet) Name() string {&#xA;&#x9;return p.name&#xA;}&#xA;&#xA;func (p *Pet) SetName(name string) {&#xA;&#x9;p.name = name&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details see &lt;a href=&#34;http://legacytotheedge.blogspot.de/2014/03/gopherjs-go-to-javascript-transpiler.html&#34;&gt;Jason Stone&#39;s blog post&lt;/a&gt; about GopherJS.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;h4&gt;General&lt;/h4&gt; &#xA;&lt;p&gt;GopherJS emulates a 32-bit environment. This means that &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;uint&lt;/code&gt; and &lt;code&gt;uintptr&lt;/code&gt; have a precision of 32 bits. However, the explicit 64-bit integer types &lt;code&gt;int64&lt;/code&gt; and &lt;code&gt;uint64&lt;/code&gt; are supported. The &lt;code&gt;GOARCH&lt;/code&gt; value of GopherJS is &#34;js&#34;. You may use it as a build constraint: &lt;code&gt;// +build js,-wasm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Application Lifecycle&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; function is executed as usual after all &lt;code&gt;init&lt;/code&gt; functions have run. JavaScript callbacks can also invoke Go functions, even after the &lt;code&gt;main&lt;/code&gt; function has exited. Therefore the end of the &lt;code&gt;main&lt;/code&gt; function should not be regarded as the end of the application and does not end the execution of other goroutines.&lt;/p&gt; &#xA;&lt;p&gt;In the browser, calling &lt;code&gt;os.Exit&lt;/code&gt; (e.g. indirectly by &lt;code&gt;log.Fatal&lt;/code&gt;) also does not terminate the execution of the program. For convenience, it calls &lt;code&gt;runtime.Goexit&lt;/code&gt; to immediately terminate the calling goroutine.&lt;/p&gt; &#xA;&lt;h4&gt;Goroutines&lt;/h4&gt; &#xA;&lt;p&gt;Goroutines are fully supported by GopherJS. The only restriction is that you need to start a new goroutine if you want to use blocking code called from external JavaScript:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;js.Global.Get(&#34;myButton&#34;).Call(&#34;addEventListener&#34;, &#34;click&#34;, func() {&#xA;  go func() {&#xA;    [...]&#xA;    someBlockingFunction()&#xA;    [...]&#xA;  }()&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;How it works:&lt;/p&gt; &#xA;&lt;p&gt;JavaScript has no concept of concurrency (except web workers, but those are too strictly separated to be used for goroutines). Because of that, instructions in JavaScript are never blocking. A blocking call would effectively freeze the responsiveness of your web page, so calls with callback arguments are used instead.&lt;/p&gt; &#xA;&lt;p&gt;GopherJS does some heavy lifting to work around this restriction: Whenever an instruction is blocking (e.g. communicating with a channel that isn&#39;t ready), the whole stack will unwind (= all functions return) and the goroutine will be put to sleep. Then another goroutine which is ready to resume gets picked and its stack with all local variables will be restored.&lt;/p&gt; &#xA;&lt;h3&gt;GopherJS Development&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re looking to make changes to the GopherJS compiler, see &lt;a href=&#34;https://github.com/gopherjs/gopherjs/wiki/Developer-Guidelines&#34;&gt;Developer Guidelines&lt;/a&gt; for additional developer information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AvicennaJr/Nuru</title>
    <updated>2022-12-17T01:32:49Z</updated>
    <id>tag:github.com,2022-12-17:/AvicennaJr/Nuru</id>
    <link href="https://github.com/AvicennaJr/Nuru" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Swahili Programming Language built from the ground up&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; NURU✨PROGRAMMING✨LANGUAGE&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/AvicennaJr/Nuru&#34;&gt;&lt;img alt=&#34;Nuru Programming Language&#34; src=&#34;https://img.shields.io/badge/Nuru-Programming%20Language-yellow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AvicennaJr/Nuru&#34;&gt;&lt;img alt=&#34;Nuru Programming Language&#34; src=&#34;https://img.shields.io/badge/platform-Linux | Windows | Android-green.svg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AvicennaJr/Nuru&#34;&gt;&lt;img alt=&#34;Nuru Programming Language&#34; src=&#34;https://img.shields.io/github/last-commit/AvicennaJr/Nuru&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AvicennaJr/Nuru&#34;&gt;&lt;img alt=&#34;Nuru Programming Language&#34; src=&#34;https://img.shields.io/github/v/release/AvicennaJr/Nuru&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/AvicennaJr/Nuru&#34;&gt;&lt;img alt=&#34;Nuru Programming Language&#34; src=&#34;https://img.shields.io/github/stars/AvicennaJr/Nuru?style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; A Swahili Programming Language of its kind built from the ground up. &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To get started download the executables from the release page or follow the instructions for your device below:&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the binary:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -O -L https://github.com/AvicennaJr/Nuru/releases/download/v0.1.5/nuru_linux_amd64_v0.1.5.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extract the file to make global available:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo tar -C /usr/local/bin -xzvf nuru_linux_amd64_v0.1.5.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Confirm installation with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;nuru -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Android (Termux)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you have &lt;a href=&#34;https://f-droid.org/repo/com.termux_118.apk&#34;&gt;Termux&lt;/a&gt; installed.&lt;/li&gt; &#xA; &lt;li&gt;Download the binary with this command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -O -L https://github.com/AvicennaJr/Nuru/releases/download/v0.1.5/nuru_android_arm64_v0.1.5.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extract the file:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;tar -xzvf nuru_android_arm64_v0.1.5.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add it to path:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#34;alias nuru=&#39;~/nuru&#39;&#34; &amp;gt;&amp;gt; .bashrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Confirm installation with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;nuru -v &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make a bin directory if it doesn&#39;t exist:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir C:\bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the Nuru Program &lt;a href=&#34;https://github.com/AvicennaJr/Nuru/releases/download/v0.1.5/nuru_windows_amd64_v0.1.5.exe&#34;&gt;Here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rename the downloaded program from &lt;code&gt;nuru_windows_amd64_v0.1.5.exe&lt;/code&gt; to &lt;code&gt;nuru.exe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Move the file &lt;code&gt;nuru.exe&lt;/code&gt; to the folder &lt;code&gt;C:\bin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the bin folder to Path with this command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;setx PATH &#34;C:\bin;%PATH%&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Confirm installation with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;nuru -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building From Source&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you have golang installed&lt;/li&gt; &#xA; &lt;li&gt;Run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;go build -o nuru main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can optionally add the binary to $PATH as shown above&lt;/li&gt; &#xA; &lt;li&gt;Confirm installtion with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;nuru -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Syntax&lt;/h2&gt; &#xA;&lt;p&gt;Nuru, although still in its early stage, intends to be a fully functional programming language, and thus it has been baked with many features.&lt;/p&gt; &#xA;&lt;h3&gt;Defining A Variable&lt;/h3&gt; &#xA;&lt;p&gt;To initiliaze a variable use the &lt;code&gt;acha&lt;/code&gt; keyword:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;acha x = 2;&#xA;acha y = 3;&#xA;&#xA;andika(x*y) // output is 6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can reassign values to the variable after it has been initiliazed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;x = 10&#xA;&#xA;andika(x*y) // output is 30&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that Semicolons &#34;;&#34; are OPTIONAL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Comments&lt;/h3&gt; &#xA;&lt;p&gt;Nuru supports both single line and multiple line comments as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// Single line comment&#xA;&#xA;/*&#xA;&#xA;Multiple&#xA;Line&#xA;Comment &#xA;*/ &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arithmetic Operations&lt;/h3&gt; &#xA;&lt;p&gt;For now Nuru supports &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt;. More will be added. The &lt;code&gt;/&lt;/code&gt; operation will truncate (round to a whole number) as Floating points are not supported yet.&lt;/p&gt; &#xA;&lt;p&gt;Nuru also provides precedence of operations using the BODMAS rule:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;2 + 2 * 3 // output = 8&#xA;&#xA;2 * (2 + 3) // output = 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Types&lt;/h3&gt; &#xA;&lt;p&gt;Nuru has the following types:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Syntax&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BOOL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;kweli sikweli&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;kweli == true, sikweli == false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;INT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1, 100, 342, -4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;These are signed 64 bit integers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;STRING&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;&#34; &#34;mambo&#34; &#34;habari yako&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;They MUST be in DOUBLE QUOTES &lt;code&gt;&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARRAY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[] [1, 2, 3] [1, &#34;moja&#34;, kweli]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Arrays can hold any types&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DICT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{} {&#34;a&#34;: 3, 1: &#34;moja&#34;, kweli: 2}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Keys can be int, string or bool. Values can be anything&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Functions&lt;/h3&gt; &#xA;&lt;p&gt;This is how you define a function in Nuru:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;acha jumlisha = fn(x, y) {&#xA;        rudisha x + y&#xA;    }&#xA;&#xA;andika(jumlisha(3,4))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Nuru also supports recursion:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;acha fibo = fn(x) {&#xA;&#x9;kama (x == 0) {&#xA;&#x9;&#x9;rudisha 0;&#xA;&#x9;} au kama (x == 1) {&#xA;&#x9;&#x9;&#x9;rudisha 1;&#xA;&#x9;} sivyo {&#xA;&#x9;&#x9;&#x9;rudisha fibo(x - 1) + fibo(x - 2);&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;If Statements&lt;/h3&gt; &#xA;&lt;p&gt;Nuru supports if, elif and else statements with keywords &lt;code&gt;kama&lt;/code&gt;, &lt;code&gt;au kama&lt;/code&gt; and &lt;code&gt;sivyo&lt;/code&gt; respectively:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kama (2&amp;lt;1) {&#xA;    andika(&#34;Mbili ni ndogo kuliko moja&#34;)&#xA;} au kama (3 &amp;lt; 1) {&#xA;    andika (&#34;Tatu ni ndogo kuliko moja&#34;)&#xA;} sivyo {&#xA;    andika(&#34;Moja ni ndogo&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;While Loops&lt;/h3&gt; &#xA;&lt;p&gt;Nuru&#39;s while loop syntax is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;acha i = 10&#xA;&#xA;wakati (i &amp;gt; 0) {&#xA;&#x9;andika(i)&#xA;&#x9;i = i - 1&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arrays&lt;/h3&gt; &#xA;&lt;p&gt;This is how you initiliaze and perform other array operations in Nuru:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;acha arr = []&#xA;&#xA;// To add elements&#xA;&#xA;sukuma(arr, 2)&#xA;andika(arr) // output = [2]&#xA;// Add two Arrays&#xA;&#xA;acha arr2 = [1,2,3,4]&#xA;&#xA;acha arr3 = arr1 + arr2&#xA;&#xA;andika(arr3) // output = [2,1,2,3,4]&#xA;&#xA;// reassign value&#xA;&#xA;arr3[0] = 0&#xA;&#xA;andika[arr3] // output = [0,1,2,3,4]&#xA;&#xA;// get specific item&#xA;&#xA;andika(arr[3]) // output = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dictionaries&lt;/h3&gt; &#xA;&lt;p&gt;Nuru also supports dictionaris and you can do a lot with them as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;acha mtu = {&#34;jina&#34;: &#34;Mojo&#34;, &#34;kabila&#34;: &#34;Mnyakusa&#34;}&#xA;&#xA;// get value from key &#xA;andika(mtu[&#34;jina&#34;]) // output = Mojo&#xA;&#xA;andika(mtu[&#34;kabila&#34;]); // output = Mnyakusa&#xA;&#xA;// You can reassign values&#xA;&#xA;mtu[&#34;jina&#34;] = &#34;Avicenna&#34;&#xA;&#xA;andika(mtu[&#34;jina&#34;]) // output = Avicenna&#xA;&#xA;// You can also add new values like this:&#xA;&#xA;mtu[&#34;anapoishi&#34;] = &#34;Dar Es Salaam&#34;&#xA;&#xA;andika(mtu) // output = {&#34;jina&#34;: &#34;Avicenna&#34;, &#34;kabila&#34;: &#34;Mnyakusa&#34;, &#34;anapoishi&#34;: &#34;Dar Es Salaam&#34;}&#xA;&#xA;// You can also add two Dictionaries&#xA;&#xA;acha kazi = {&#34;kazi&#34;: &#34;jambazi&#34;}&#xA;&#xA;mtu = mtu + kazi&#xA;&#xA;andika(mtu) // output = {&#34;jina&#34;: &#34;Avicenna&#34;, &#34;kabila&#34;: &#34;Mnyakusa&#34;, &#34;anapoishi&#34;: &#34;Dar Es Salaam&#34;, &#34;kazi&#34;: &#34;jambazi&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Getting Input From User&lt;/h3&gt; &#xA;&lt;p&gt;In Nuru you can get input from users using the &lt;code&gt;jaza()&lt;/code&gt; keyword as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;acha jina = jaza(&#34;Unaitwa nani? &#34;) // will prompt for input&#xA;&#xA;andika(&#34;Habari yako &#34; + jina)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How To Run&lt;/h2&gt; &#xA;&lt;h3&gt;Using The Intepreter:&lt;/h3&gt; &#xA;&lt;p&gt;You can enter the intepreter by simply running the &lt;code&gt;nuru&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nuru&#xA;&amp;gt;&amp;gt;&amp;gt; andika(&#34;karibu&#34;)&#xA;karibu&#xA;&amp;gt;&amp;gt;&amp;gt; 2 + 2&#xA;4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kindly Note that everything should be placed in a single line. Here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; kama (x &amp;gt; y) {andika(&#34;X ni kubwa&#34;)} sivyo {andika(&#34;Y ni kubwa&#34;)}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running From File&lt;/h3&gt; &#xA;&lt;p&gt;To run a Nuru script, write the &lt;code&gt;nuru&lt;/code&gt; command followed by the name of the file with a &lt;code&gt;.nr&lt;/code&gt; extension:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nuru myFile.nr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Kindly open an &lt;a href=&#34;https://github.com/AvicennaJr/Nuru/issues&#34;&gt;Issue&lt;/a&gt; to make suggestions and anything else.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcomed. Clone the repo, hack it, make sure all tests are passing then submit a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;Nuru Programming Language has been authored and being actively maintained by &lt;a href=&#34;https://github.com/AvicennaJr&#34;&gt;Avicenna&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>