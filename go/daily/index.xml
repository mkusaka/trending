<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-21T01:31:20Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>quackduck/devzat</title>
    <updated>2024-07-21T01:31:20Z</updated>
    <id>tag:github.com,2024-07-21:/quackduck/devzat</id>
    <link href="https://github.com/quackduck/devzat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The devs are over here at devzat, chat over SSH!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/quackduck/devzat/assets/38882631/046fbb4d-dff2-41e9-a61c-271d0820473e&#34; style=&#34;height: 100px; border-radius: 50px;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/devzat?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-devzat&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=298678&amp;amp;theme=light&amp;amp;period=daily&#34; alt=&#34;Devzat - Chat with other devs over SSH in your Terminal | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Where are the devs at? Devzat!&lt;/p&gt; &#xA;&lt;p&gt;Devzat is a custom SSH server that takes you to a chat instead of a shell prompt. Because there&#39;s SSH apps on all platforms (even on phones) you can connect to Devzat on any device!&lt;/p&gt; &#xA;&lt;!-- &lt;img src=&#34;https://user-images.githubusercontent.com/38882631/115499526-a4d70280-a280-11eb-8723-817f54eccf3e.png&#34; height=400px /&gt; --&gt; &#xA;&lt;p&gt;A recording I took one day: &lt;a href=&#34;https://asciinema.org/a/477083?speed=3&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/477083.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Try it out:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ssh devzat.hackclub.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can log in with a nickname:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ssh nickname@devzat.hackclub.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re under a firewall, you can still join on port 443:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ssh devzat.hackclub.com -p 443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you add this to &lt;code&gt;~/.ssh/config&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ssh&#34;&gt;Host chat&#xA;    HostName devzat.hackclub.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll be able to join with just:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ssh chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We also have a Slack bridge! If you&#39;re on the &lt;a href=&#34;https://hackclub.com&#34;&gt;Hack Club&lt;/a&gt; Slack, check out the &lt;code&gt;#ssh-chat-bridge&lt;/code&gt; channel!&lt;/p&gt; &#xA;&lt;p&gt;Feel free to make a &lt;a href=&#34;https://github.com/quackduck/devzat/issues&#34;&gt;new issue&lt;/a&gt; if something doesn&#39;t work.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://stats.uptimerobot.com/kxMQqfYk4y&#34;&gt;status site&lt;/a&gt; of the main Devzat server to check if it might be down.&lt;/p&gt; &#xA;&lt;h3&gt;Want to host your own instance?&lt;/h3&gt; &#xA;&lt;p&gt;Quick start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/quackduck/devzat &amp;amp;&amp;amp; cd devzat&#xA;go install # or build, if you want to keep things pwd&#xA;ssh-keygen -qN &#39;&#39; -f devzat-sshkey # new ssh host key for the server&#xA;devzat # run! the default config is used &amp;amp; written automatically&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These commands download, build, setup and run a Devzat server listening on port 2221, the default port (change by setting &lt;code&gt;$PORT&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/quackduck/devzat/main/Admin&#39;s%20Manual.md&#34;&gt;Admin&#39;s Manual&lt;/a&gt; for complete self-host documentation!&lt;/p&gt; &#xA;&lt;h3&gt;Permission denied?&lt;/h3&gt; &#xA;&lt;p&gt;Devzat uses public keys to identify users. If you are denied access: &lt;code&gt;foo@devzat.hackclub.com: Permission denied (publickey)&lt;/code&gt; try logging in on port 443, which does not require a key, using &lt;code&gt;ssh devzat.hackclub.com -p 443&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This error may happen because you do not have an SSH key pair. Generate one with the command &lt;code&gt;ssh-keygen&lt;/code&gt; if this is the case. (you can usually check if you have a key pair by making sure a file of this form: &lt;code&gt;~/.ssh/id_*&lt;/code&gt; exists)&lt;/p&gt; &#xA;&lt;h3&gt;Help&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Welcome to Devzat! Devzat is chat over SSH: github.com/quackduck/devzat&#xA;Because there&#39;s SSH apps on all platforms, even on mobile, you can join from anywhere.&#xA;&#xA;Run `cmds` to see a list of commands.&#xA;&#xA;Interesting features:&#xA;• Rooms! Run cd to see all rooms and use cd #foo to join a new room.&#xA;• Markdown support! Tables, headers, italics and everything. Just use \n in place of newlines.&#xA;• Code syntax highlighting. Use Markdown fences to send code. Run eg-code to see an example.&#xA;• Direct messages! Send a quick DM using =user &amp;lt;msg&amp;gt; or stay in DMs by running cd @user.&#xA;• Timezone support, use tz Continent/City to set your timezone.&#xA;• Built in Tic Tac Toe and Hangman! Run tic or hang &amp;lt;word&amp;gt; to start new games.&#xA;• Emoji replacements! &lt;span&gt;🚀&lt;/span&gt; =&amp;gt; 🚀  (like on Slack and Discord)&#xA;&#xA;For replacing newlines, I often use bulkseotools.com/add-remove-line-breaks.php.&#xA;&#xA;Made by Ishan Goel with feature ideas from friends.&#xA;Thanks to Caleb Denio for lending his server!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Commands&#xA;   =&amp;lt;user&amp;gt;   &amp;lt;msg&amp;gt;           DM &amp;lt;user&amp;gt; with &amp;lt;msg&amp;gt;&#xA;   users                     List users&#xA;   color     &amp;lt;color&amp;gt;         Change your name&#39;s color&#xA;   exit                      Leave the chat&#xA;   help                      Show help&#xA;   man       &amp;lt;cmd&amp;gt;           Get help for a specific command&#xA;   emojis                    See a list of emojis&#xA;   bell      on|off|all      ANSI bell on pings (on), never (off) or for every message (all)&#xA;   clear                     Clear the screen&#xA;   hang      &amp;lt;char|word&amp;gt;     Play hangman&#xA;   tic       &amp;lt;cell num&amp;gt;      Play tic tac toe!&#xA;   devmonk                   Test your typing speed&#xA;   cd        #room|user      Join #room, DM user or run cd to see a list&#xA;   tz        &amp;lt;zone&amp;gt; [24h]    Set your IANA timezone (like tz Asia/Dubai) and optionally set 24h&#xA;   nick      &amp;lt;name&amp;gt;          Change your username&#xA;   pronouns  @user|pronouns  Set your pronouns or get another user&#39;s&#xA;   theme     &amp;lt;theme&amp;gt;|list    Change the syntax highlighting theme&#xA;   rest                      Uncommon commands list&#xA;   cmds                      Show this message&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;The rest&#xA;   people                  See info about nice people who joined&#xA;   id       &amp;lt;user&amp;gt;         Get a unique ID for a user (hashed key)&#xA;   admins                  Print the ID (hashed key) for all admins&#xA;   eg-code  [big]          Example syntax-highlighted code&#xA;   lsbans                  List banned IDs&#xA;   ban      &amp;lt;user&amp;gt;         Ban &amp;lt;user&amp;gt; (admin)&#xA;   unban    &amp;lt;IP|ID&amp;gt; [dur]  Unban a person and optionally, for a duration (admin)&#xA;   kick     &amp;lt;user&amp;gt;         Kick &amp;lt;user&amp;gt; (admin)&#xA;   art                     Show some panda art&#xA;   pwd                     Show your current room&#xA;   shrug                   ¯\_(ツ)_/¯&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;When self-hosting an instance, Devzat can integrate with Slack and/or Discord to bridge messages, and Twitter to post new-user announcements. See the &lt;a href=&#34;https://raw.githubusercontent.com/quackduck/devzat/main/Admin&#39;s%20Manual.md&#34;&gt;Admin&#39;s Manual&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;p&gt;Devzat has a plugin API you can use to integrate your own services: &lt;a href=&#34;https://raw.githubusercontent.com/quackduck/devzat/main/plugin/README.md&#34;&gt;documentation&lt;/a&gt;. Feel free to add a plugin to the main instance. Just ask for a token on the server.&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/quackduck/devzat&#34;&gt;&lt;img src=&#34;https://starchart.cc/quackduck/devzat.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;People&lt;/h2&gt; &#xA;&lt;p&gt;People who you might know who have joined:&lt;/p&gt; &#xA;&lt;p&gt;Zach Latta - Founder of Hack Club: &lt;em&gt;&#34;omg amazing! this is so awesome&#34;&lt;/em&gt;&lt;br&gt; Ant Wilson - Co founder, Supabase: &lt;a href=&#34;https://twitter.com/AntWilson/status/1396444302721445889&#34;&gt;&lt;em&gt;&#34;brilliant!&#34;&lt;/em&gt;&lt;/a&gt;&lt;br&gt; Bereket &lt;a href=&#34;https://twitter.com/heybereket&#34;&gt;@heybereket&lt;/a&gt;: &lt;em&gt;&#34;this is pretty cool&#34;&lt;/em&gt;&lt;br&gt; Ayush &lt;a href=&#34;https://twitter.com/ayshptk&#34;&gt;@ayshptk&lt;/a&gt;: &lt;em&gt;&#34;Can I double star the repo somehow &lt;span&gt;🥺&lt;/span&gt;&#34;&lt;/em&gt;&lt;br&gt; Sanketh &lt;a href=&#34;https://twitter.com/SankethYS&#34;&gt;@SankethYS&lt;/a&gt;: &lt;em&gt;&#34;Heck! How does this work. So cool.&#34;&lt;/em&gt;&lt;br&gt; Tony Dinh &lt;a href=&#34;https://twitter.com/tdinh_me&#34;&gt;@tdinh_me&lt;/a&gt;: &lt;em&gt;&#34;supeer cool, oh, open source as well? yeah&#34;&lt;/em&gt;&lt;br&gt; Srushti &lt;a href=&#34;https://twitter.com/srushtiuniverse&#34;&gt;@srushtiuniverse&lt;/a&gt;: &lt;em&gt;&#34;Yess it&#39;s awesome. I tried it.&#34;&lt;/em&gt;&lt;br&gt; Surjith &lt;a href=&#34;https://twitter.com/surjithctly&#34;&gt;@surjithctly&lt;/a&gt;: &lt;em&gt;&#34;Whoa, who made this?&#34;&lt;/em&gt;&lt;br&gt; Arav &lt;a href=&#34;https://twitter.com/HeyArav&#34;&gt;@HeyArav&lt;/a&gt;: &lt;a href=&#34;https://twitter.com/tregsthedev/status/1384180393893498880&#34;&gt;&lt;em&gt;&#34;Okay, this is actually super awesome.&#34;&lt;/em&gt;&lt;/a&gt;&lt;br&gt; Harsh &lt;a href=&#34;https://twitter.com/harshb__&#34;&gt;@harshb__&lt;/a&gt;: &lt;em&gt;&#34;im gonna come here everyday to chill when i get bored of studying lol, this is so cool&#34;&lt;/em&gt; Krish &lt;a href=&#34;https://twitter.com/krishnerkar_&#34;&gt;@krishnerkar_&lt;/a&gt;: &lt;a href=&#34;https://twitter.com/krishnerkar_/status/1384173042616573960&#34;&gt;&lt;em&gt;&#34;SHIT! THIS IS SO DOPE&#34;&lt;/em&gt;&lt;/a&gt;&lt;br&gt; Amrit &lt;a href=&#34;https://twitter.com/astro_shenava&#34;&gt;@astro_shenava&lt;/a&gt;: &lt;em&gt;&#34;Super cool man&#34;&lt;/em&gt;&lt;br&gt; Mudrank &lt;a href=&#34;https://twitter.com/mudrankgupta&#34;&gt;@mudrankgupta&lt;/a&gt;: &#34;🔥🚀🚀&#34;&lt;/p&gt; &#xA;&lt;p&gt;From Hack Club:&lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://calebden.io&#34;&gt;Caleb Denio&lt;/a&gt;, &lt;a href=&#34;https://safin.dev&#34;&gt;Safin Singh&lt;/a&gt;, &lt;a href=&#34;https://github.com/E-Lee-Za&#34;&gt;Eleeza&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/s1ntaxe770r&#34;&gt;Jubril&lt;/a&gt;, &lt;a href=&#34;https://sarthakmohanty.me&#34;&gt;Sarthak Mohanty&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://sampoder.com&#34;&gt;Sam Poder&lt;/a&gt;, &lt;a href=&#34;http://rishi.cx&#34;&gt;Rishi Kothari&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://amogh.sh&#34;&gt;Amogh Chaubey&lt;/a&gt;, &lt;a href=&#34;https://ella.cx/&#34;&gt;Ella&lt;/a&gt;, &lt;a href=&#34;https://github.com/Hugoyhu&#34;&gt;Hugo Hu&lt;/a&gt; &lt;a href=&#34;https://matthewstanciu.me/&#34;&gt;Matthew Stanciu&lt;/a&gt;, &lt;a href=&#34;https://tanishqsoni.me&#34;&gt;Tanishq Soni&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Huge thanks to the amazing &lt;a href=&#34;https://github.com/cjdenio&#34;&gt;Caleb Denio&lt;/a&gt; for lending me the original Devzat server 💖&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;Made by &lt;a href=&#34;https://twitter.com/usrbinishan/&#34;&gt;Ishan Goel&lt;/a&gt; with feature ideas from friends. Thanks to &lt;a href=&#34;https://twitter.com/CalebDenio&#34;&gt;Caleb Denio&lt;/a&gt; for lending his server!&lt;/em&gt;&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>oliver006/redis_exporter</title>
    <updated>2024-07-21T01:31:20Z</updated>
    <id>tag:github.com,2024-07-21:/oliver006/redis_exporter</id>
    <link href="https://github.com/oliver006/redis_exporter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prometheus Exporter for ValKey &amp; Redis Metrics. Supports ValKey and Redis 2.x, 3.x, 4.x, 5.x, 6.x, and 7.x&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prometheus ValKey &amp;amp; Redis Metrics Exporter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://drone-github.21zoo.com/oliver006/redis_exporter&#34;&gt;&lt;img src=&#34;https://drone-github.21zoo.com/api/badges/oliver006/redis_exporter/status.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/oliver006/redis_exporter?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/oliver006/redis_exporter/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/oliver006/redis_exporter&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/oliver006/redis_exporter/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/docker/pulls/oliver006/redis_exporter.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/oliver006/redis_exporter.svg?sanitize=true&#34; alt=&#34;docker_pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stand-with-ukraine.pp.ua&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/badges/StandWithUkraine.svg?sanitize=true&#34; alt=&#34;Stand With Ukraine&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prometheus exporter for ValKey metrics (Redis-compatible).&lt;br&gt; Supports ValKey and Redis 2.x, 3.x, 4.x, 5.x, 6.x, and 7.x&lt;/p&gt; &#xA;&lt;h4&gt;Ukraine is still suffering from Russian aggression, &lt;a href=&#34;https://www.supportukraine.co/&#34;&gt;please consider supporting Ukraine with a donation&lt;/a&gt;.&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stand-with-ukraine.pp.ua&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg?sanitize=true&#34; alt=&#34;Stand With Ukraine&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building and running the exporter&lt;/h2&gt; &#xA;&lt;h3&gt;Build and run locally&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/oliver006/redis_exporter.git&#xA;cd redis_exporter&#xA;go build .&#xA;./redis_exporter --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pre-build binaries&lt;/h3&gt; &#xA;&lt;p&gt;For pre-built binaries please take a look at &lt;a href=&#34;https://github.com/oliver006/redis_exporter/releases&#34;&gt;the releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Basic Prometheus Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Add a block to the &lt;code&gt;scrape_configs&lt;/code&gt; of your prometheus.yml config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;scrape_configs:&#xA;  - job_name: redis_exporter&#xA;    static_configs:&#xA;    - targets: [&#39;&amp;lt;&amp;lt;REDIS-EXPORTER-HOSTNAME&amp;gt;&amp;gt;:9121&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and adjust the host name accordingly.&lt;/p&gt; &#xA;&lt;h3&gt;Kubernetes SD configurations&lt;/h3&gt; &#xA;&lt;p&gt;To have instances in the drop-down as human readable names rather than IPs, it is suggested to use &lt;a href=&#34;https://www.robustperception.io/controlling-the-instance-label&#34;&gt;instance relabelling&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, if the metrics are being scraped via the pod role, one could add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;          - source_labels: [__meta_kubernetes_pod_name]&#xA;            action: replace&#xA;            target_label: instance&#xA;            regex: (.*redis.*)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;as a relabel config to the corresponding scrape config. As per the regex value, only pods with &#34;redis&#34; in their name will be relabelled as such.&lt;/p&gt; &#xA;&lt;p&gt;Similar approaches can be taken with &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config&#34;&gt;other role types&lt;/a&gt; depending on how scrape targets are retrieved.&lt;/p&gt; &#xA;&lt;h3&gt;Prometheus Configuration to Scrape Multiple Redis Hosts&lt;/h3&gt; &#xA;&lt;p&gt;The Prometheus docs have a &lt;a href=&#34;https://prometheus.io/docs/guides/multi-target-exporter/&#34;&gt;very informative article&lt;/a&gt; on how multi-target exporters are intended to work.&lt;/p&gt; &#xA;&lt;p&gt;Run the exporter with the command line flag &lt;code&gt;--redis.addr=&lt;/code&gt; so it won&#39;t try to access the local instance every time the &lt;code&gt;/metrics&lt;/code&gt; endpoint is scraped. Using below config instead of the /metric endpoint the /scrape endpoint will be used by prometheus. As an example the first target will be queried with this web request: &lt;a href=&#34;http://exporterhost:9121/scrape?target=first-redis-host:6379&#34;&gt;http://exporterhost:9121/scrape?target=first-redis-host:6379&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;scrape_configs:&#xA;  ## config for the multiple Redis targets that the exporter will scrape&#xA;  - job_name: &#39;redis_exporter_targets&#39;&#xA;    static_configs:&#xA;      - targets:&#xA;        - redis://first-redis-host:6379&#xA;        - redis://second-redis-host:6379&#xA;        - redis://second-redis-host:6380&#xA;        - redis://second-redis-host:6381&#xA;    metrics_path: /scrape&#xA;    relabel_configs:&#xA;      - source_labels: [__address__]&#xA;        target_label: __param_target&#xA;      - source_labels: [__param_target]&#xA;        target_label: instance&#xA;      - target_label: __address__&#xA;        replacement: &amp;lt;&amp;lt;REDIS-EXPORTER-HOSTNAME&amp;gt;&amp;gt;:9121&#xA;&#xA;  ## config for scraping the exporter itself&#xA;  - job_name: &#39;redis_exporter&#39;&#xA;    static_configs:&#xA;      - targets:&#xA;        - &amp;lt;&amp;lt;REDIS-EXPORTER-HOSTNAME&amp;gt;&amp;gt;:9121&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Redis instances are listed under &lt;code&gt;targets&lt;/code&gt;, the Redis exporter hostname is configured via the last relabel_config rule.&lt;br&gt; If authentication is needed for the Redis instances then you can set the password via the &lt;code&gt;--redis.password&lt;/code&gt; command line option of the exporter (this means you can currently only use one password across the instances you try to scrape this way. Use several exporters if this is a problem). &lt;br&gt; You can also use a json file to supply multiple targets by using &lt;code&gt;file_sd_configs&lt;/code&gt; like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;&#xA;scrape_configs:&#xA;  - job_name: &#39;redis_exporter_targets&#39;&#xA;    file_sd_configs:&#xA;      - files:&#xA;        - targets-redis-instances.json&#xA;    metrics_path: /scrape&#xA;    relabel_configs:&#xA;      - source_labels: [__address__]&#xA;        target_label: __param_target&#xA;      - source_labels: [__param_target]&#xA;        target_label: instance&#xA;      - target_label: __address__&#xA;        replacement: &amp;lt;&amp;lt;REDIS-EXPORTER-HOSTNAME&amp;gt;&amp;gt;:9121&#xA;&#xA;  ## config for scraping the exporter itself&#xA;  - job_name: &#39;redis_exporter&#39;&#xA;    static_configs:&#xA;      - targets:&#xA;        - &amp;lt;&amp;lt;REDIS-EXPORTER-HOSTNAME&amp;gt;&amp;gt;:9121&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;targets-redis-instances.json&lt;/code&gt; should look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;  {&#xA;    &#34;targets&#34;: [ &#34;redis://redis-host-01:6379&#34;, &#34;redis://redis-host-02:6379&#34;],&#xA;    &#34;labels&#34;: { }&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prometheus uses file watches and all changes to the json file are applied immediately.&lt;/p&gt; &#xA;&lt;h3&gt;Command line flags&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Environment Variable Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis.addr&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_ADDR&lt;/td&gt; &#xA;   &lt;td&gt;Address of the Redis instance, defaults to &lt;code&gt;redis://localhost:6379&lt;/code&gt;. If TLS is enabled, the address must be like the following &lt;code&gt;rediss://localhost:6379&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis.user&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_USER&lt;/td&gt; &#xA;   &lt;td&gt;User name to use for authentication (Redis ACL for Redis 6.0 and newer).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis.password&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;Password of the Redis instance, defaults to &lt;code&gt;&#34;&#34;&lt;/code&gt; (no password).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis.password-file&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_PASSWORD_FILE&lt;/td&gt; &#xA;   &lt;td&gt;Password file of the Redis instance to scrape, defaults to &lt;code&gt;&#34;&#34;&lt;/code&gt; (no password file).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;check-keys&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_CHECK_KEYS&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of key patterns to export value and length/size, eg: &lt;code&gt;db3=user_count&lt;/code&gt; will export key &lt;code&gt;user_count&lt;/code&gt; from db &lt;code&gt;3&lt;/code&gt;. db defaults to &lt;code&gt;0&lt;/code&gt; if omitted. The key patterns specified with this flag will be found using &lt;a href=&#34;https://redis.io/commands/scan&#34;&gt;SCAN&lt;/a&gt;. Use this option if you need glob pattern matching; &lt;code&gt;check-single-keys&lt;/code&gt; is faster for non-pattern keys. Warning: using &lt;code&gt;--check-keys&lt;/code&gt; to match a very large number of keys can slow down the exporter to the point where it doesn&#39;t finish scraping the redis instance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;check-single-keys&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_CHECK_SINGLE_KEYS&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of keys to export value and length/size, eg: &lt;code&gt;db3=user_count&lt;/code&gt; will export key &lt;code&gt;user_count&lt;/code&gt; from db &lt;code&gt;3&lt;/code&gt;. db defaults to &lt;code&gt;0&lt;/code&gt; if omitted. The keys specified with this flag will be looked up directly without any glob pattern matching. Use this option if you don&#39;t need glob pattern matching; it is faster than &lt;code&gt;check-keys&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;check-streams&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_CHECK_STREAMS&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of stream-patterns to export info about streams, groups and consumers. Syntax is the same as &lt;code&gt;check-keys&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;check-single-streams&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_CHECK_SINGLE_STREAMS&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of streams to export info about streams, groups and consumers. The streams specified with this flag will be looked up directly without any glob pattern matching. Use this option if you don&#39;t need glob pattern matching; it is faster than &lt;code&gt;check-streams&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;streams-exclude-consumer-metrics&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_STREAMS_EXCLUDE_CONSUMER_METRICS&lt;/td&gt; &#xA;   &lt;td&gt;Don&#39;t collect per consumer metrics for streams (decreases amount of metrics and cardinality).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;check-keys-batch-size&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_CHECK_KEYS_BATCH_SIZE&lt;/td&gt; &#xA;   &lt;td&gt;Approximate number of keys to process in each execution. This is basically the COUNT option that will be passed into the SCAN command as part of the execution of the key or key group metrics, see &lt;a href=&#34;https://redis.io/commands/scan#the-count-option&#34;&gt;COUNT option&lt;/a&gt;. Larger value speeds up scanning. Still Redis is a single-threaded app, huge &lt;code&gt;COUNT&lt;/code&gt; can affect production environment.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;count-keys&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_COUNT_KEYS&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of patterns to count, eg: &lt;code&gt;db3=sessions:*&lt;/code&gt; will count all keys with prefix &lt;code&gt;sessions:&lt;/code&gt; from db &lt;code&gt;3&lt;/code&gt;. db defaults to &lt;code&gt;0&lt;/code&gt; if omitted. Warning: The exporter runs SCAN to count the keys. This might not perform well on large databases.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;script&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_SCRIPT&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of path(s) to Redis Lua script(s) for gathering extra metrics.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;debug&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_DEBUG&lt;/td&gt; &#xA;   &lt;td&gt;Verbose debug output&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;log-format&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_LOG_FORMAT&lt;/td&gt; &#xA;   &lt;td&gt;Log format, valid options are &lt;code&gt;txt&lt;/code&gt; (default) and &lt;code&gt;json&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;namespace&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_NAMESPACE&lt;/td&gt; &#xA;   &lt;td&gt;Namespace for the metrics, defaults to &lt;code&gt;redis&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;connection-timeout&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_CONNECTION_TIMEOUT&lt;/td&gt; &#xA;   &lt;td&gt;Timeout for connection to Redis instance, defaults to &#34;15s&#34; (in Golang duration format)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web.listen-address&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_WEB_LISTEN_ADDRESS&lt;/td&gt; &#xA;   &lt;td&gt;Address to listen on for web interface and telemetry, defaults to &lt;code&gt;0.0.0.0:9121&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web.telemetry-path&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_WEB_TELEMETRY_PATH&lt;/td&gt; &#xA;   &lt;td&gt;Path under which to expose metrics, defaults to &lt;code&gt;/metrics&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis-only-metrics&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_REDIS_ONLY_METRICS&lt;/td&gt; &#xA;   &lt;td&gt;Whether to also export go runtime metrics, defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;include-config-metrics&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_INCL_CONFIG_METRICS&lt;/td&gt; &#xA;   &lt;td&gt;Whether to include all config settings as metrics, defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;include-system-metrics&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_INCL_SYSTEM_METRICS&lt;/td&gt; &#xA;   &lt;td&gt;Whether to include system metrics like &lt;code&gt;total_system_memory_bytes&lt;/code&gt;, defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;exclude-latency-histogram-metrics&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_EXCLUDE_LATENCY_HISTOGRAM_METRICS&lt;/td&gt; &#xA;   &lt;td&gt;Do not try to collect latency histogram metrics (to avoid &lt;code&gt;WARNING, LOGGED ONCE ONLY: cmd LATENCY HISTOGRAM&lt;/code&gt; error on Redis &amp;lt; v7).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redact-config-metrics&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_REDACT_CONFIG_METRICS&lt;/td&gt; &#xA;   &lt;td&gt;Whether to redact config settings that include potentially sensitive information like passwords.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ping-on-connect&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_PING_ON_CONNECT&lt;/td&gt; &#xA;   &lt;td&gt;Whether to ping the redis instance after connecting and record the duration as a metric, defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;is-tile38&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_IS_TILE38&lt;/td&gt; &#xA;   &lt;td&gt;Whether to scrape Tile38 specific metrics, defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;is-cluster&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_IS_CLUSTER&lt;/td&gt; &#xA;   &lt;td&gt;Whether this is a redis cluster (Enable this if you need to fetch key level data on a Redis Cluster).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;export-client-list&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_EXPORT_CLIENT_LIST&lt;/td&gt; &#xA;   &lt;td&gt;Whether to scrape Client List specific metrics, defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;export-client-port&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_EXPORT_CLIENT_PORT&lt;/td&gt; &#xA;   &lt;td&gt;Whether to include the client&#39;s port when exporting the client list. Warning: including the port increases the number of metrics generated and will make your Prometheus server take up more memory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;skip-tls-verification&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_SKIP_TLS_VERIFICATION&lt;/td&gt; &#xA;   &lt;td&gt;Whether to to skip TLS verification when the exporter connects to a Redis instance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-client-key-file&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_TLS_CLIENT_KEY_FILE&lt;/td&gt; &#xA;   &lt;td&gt;Name of the client key file (including full path) if the server requires TLS client authentication&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-client-cert-file&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_TLS_CLIENT_CERT_FILE&lt;/td&gt; &#xA;   &lt;td&gt;Name the client cert file (including full path) if the server requires TLS client authentication&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-server-key-file&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_TLS_SERVER_KEY_FILE&lt;/td&gt; &#xA;   &lt;td&gt;Name of the server key file (including full path) if the web interface and telemetry should use TLS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-server-cert-file&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_TLS_SERVER_CERT_FILE&lt;/td&gt; &#xA;   &lt;td&gt;Name of the server certificate file (including full path) if the web interface and telemetry should use TLS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-server-ca-cert-file&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_TLS_SERVER_CA_CERT_FILE&lt;/td&gt; &#xA;   &lt;td&gt;Name of the CA certificate file (including full path) if the web interface and telemetry should use TLS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-server-min-version&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_TLS_SERVER_MIN_VERSION&lt;/td&gt; &#xA;   &lt;td&gt;Minimum TLS version that is acceptable by the web interface and telemetry when using TLS, defaults to &lt;code&gt;TLS1.2&lt;/code&gt; (supports &lt;code&gt;TLS1.0&lt;/code&gt;,&lt;code&gt;TLS1.1&lt;/code&gt;,&lt;code&gt;TLS1.2&lt;/code&gt;,&lt;code&gt;TLS1.3&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-ca-cert-file&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_TLS_CA_CERT_FILE&lt;/td&gt; &#xA;   &lt;td&gt;Name of the CA certificate file (including full path) if the server requires TLS client authentication&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;set-client-name&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_SET_CLIENT_NAME&lt;/td&gt; &#xA;   &lt;td&gt;Whether to set client name to redis_exporter, defaults to true.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;check-key-groups&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_CHECK_KEY_GROUPS&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of &lt;a href=&#34;https://www.lua.org/pil/20.1.html&#34;&gt;LUA regexes&lt;/a&gt; for classifying keys into groups. The regexes are applied in specified order to individual keys, and the group name is generated by concatenating all capture groups of the first regex that matches a key. A key will be tracked under the &lt;code&gt;unclassified&lt;/code&gt; group if none of the specified regexes matches it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;max-distinct-key-groups&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_MAX_DISTINCT_KEY_GROUPS&lt;/td&gt; &#xA;   &lt;td&gt;Maximum number of distinct key groups that can be tracked independently &lt;em&gt;per Redis database&lt;/em&gt;. If exceeded, only key groups with the highest memory consumption within the limit will be tracked separately, all remaining key groups will be tracked under a single &lt;code&gt;overflow&lt;/code&gt; key group.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;config-command&lt;/td&gt; &#xA;   &lt;td&gt;REDIS_EXPORTER_CONFIG_COMMAND&lt;/td&gt; &#xA;   &lt;td&gt;What to use for the CONFIG command, defaults to &lt;code&gt;CONFIG&lt;/code&gt;, , set to &#34;-&#34; to skip config metrics extraction.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Redis instance addresses can be tcp addresses: &lt;code&gt;redis://localhost:6379&lt;/code&gt;, &lt;code&gt;redis.example.com:6379&lt;/code&gt; or e.g. unix sockets: &lt;code&gt;unix:///tmp/redis.sock&lt;/code&gt;.&lt;br&gt; SSL is supported by using the &lt;code&gt;rediss://&lt;/code&gt; schema, for example: &lt;code&gt;rediss://azure-ssl-enabled-host.redis.cache.windows.net:6380&lt;/code&gt; (note that the port is required when connecting to a non-standard 6379 port, e.g. with Azure Redis instances).\&lt;/p&gt; &#xA;&lt;p&gt;Command line settings take precedence over any configurations provided by the environment variables.&lt;/p&gt; &#xA;&lt;h3&gt;Authenticating with Redis&lt;/h3&gt; &#xA;&lt;p&gt;If your Redis instance requires authentication then there are several ways how you can supply a username (new in Redis 6.x with ACLs) and a password.&lt;/p&gt; &#xA;&lt;p&gt;You can provide the username and password as part of the address, see &lt;a href=&#34;https://www.iana.org/assignments/uri-schemes/prov/redis&#34;&gt;here&lt;/a&gt; for the official documentation of the &lt;code&gt;redis://&lt;/code&gt; scheme. You can set &lt;code&gt;-redis.password-file=sample-pwd-file.json&lt;/code&gt; to specify a password file, it&#39;s used whenever the exporter connects to a Redis instance, no matter if you&#39;re using the &lt;code&gt;/scrape&lt;/code&gt; endpoint for multiple instances or the normal &lt;code&gt;/metrics&lt;/code&gt; endpoint when scraping just one instance. It only takes effect when &lt;code&gt;redis.password == &#34;&#34;&lt;/code&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/oliver006/redis_exporter/master/contrib/sample-pwd-file.json&#34;&gt;contrib/sample-pwd-file.json&lt;/a&gt; for a working example, and make sure to always include the &lt;code&gt;redis://&lt;/code&gt; in your password file entries.&lt;/p&gt; &#xA;&lt;p&gt;An example for a URI including a password is: &lt;code&gt;redis://&amp;lt;&amp;lt;username (optional)&amp;gt;&amp;gt;:&amp;lt;&amp;lt;PASSWORD&amp;gt;&amp;gt;@&amp;lt;&amp;lt;HOSTNAME&amp;gt;&amp;gt;:&amp;lt;&amp;lt;PORT&amp;gt;&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can provide the username and/or password using the &lt;code&gt;--redis.user&lt;/code&gt; and &lt;code&gt;--redis.password&lt;/code&gt; directly to the redis_exporter.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use a dedicated Redis user for the redis_exporter (instead of the default user) then you need enable a list of commands for that user. You can use the following Redis command to set up the user, just replace &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;USERNAME&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;PASSWORD&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; with your desired values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ACL SETUSER &amp;lt;&amp;lt;&amp;lt;USERNAME&amp;gt;&amp;gt;&amp;gt; +client +ping +info +config|get +cluster|info +slowlog +latency +memory +select +get +scan +xinfo +type +pfcount +strlen +llen +scard +zcard +hlen +xlen +eval allkeys on &amp;gt;&amp;lt;&amp;lt;&amp;lt;PASSWORD&amp;gt;&amp;gt;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run via Docker&lt;/h3&gt; &#xA;&lt;p&gt;The latest release is automatically published to the &lt;a href=&#34;https://hub.docker.com/r/oliver006/redis_exporter/&#34;&gt;Docker registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can run it like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --name redis_exporter -p 9121:9121 oliver006/redis_exporter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker images are also published to the &lt;a href=&#34;https://quay.io/oliver006/redis_exporter&#34;&gt;quay.io docker repo&lt;/a&gt; so you can pull them from there if for instance you run into rate limiting issues with Docker hub.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --name redis_exporter -p 9121:9121 quay.io/oliver006/redis_exporter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;latest&lt;/code&gt; docker image contains only the exporter binary. If e.g. for debugging purposes, you need the exporter running in an image that has a shell then you can run the &lt;code&gt;alpine&lt;/code&gt; image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --name redis_exporter -p 9121:9121 oliver006/redis_exporter:alpine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you try to access a Redis instance running on the host node, you&#39;ll need to add &lt;code&gt;--network host&lt;/code&gt; so the redis_exporter container can access it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --name redis_exporter --network host oliver006/redis_exporter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run on Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oliver006/redis_exporter/master/contrib/k8s-redis-and-exporter-deployment.yaml&#34;&gt;Here&lt;/a&gt; is an example Kubernetes deployment configuration for how to deploy the redis_exporter as a sidecar to a Redis instance.&lt;/p&gt; &#xA;&lt;h3&gt;Tile38&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tile38.com&#34;&gt;Tile38&lt;/a&gt; now has native Prometheus support for exporting server metrics and basic stats about number of objects, strings, etc. You can also use redis_exporter to export Tile38 metrics, especially more advanced metrics by using Lua scripts or the &lt;code&gt;-check-keys&lt;/code&gt; flag.&lt;br&gt; To enable Tile38 support, run the exporter with &lt;code&gt;--is-tile38=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s exported&lt;/h2&gt; &#xA;&lt;p&gt;Most items from the INFO command are exported, see &lt;a href=&#34;https://redis.io/commands/info&#34;&gt;Redis documentation&lt;/a&gt; for details.&lt;br&gt; In addition, for every database there are metrics for total keys, expiring keys and the average TTL for keys in the database.&lt;br&gt; You can also export values of keys by using the &lt;code&gt;-check-keys&lt;/code&gt; (or related) flag. The exporter will also export the size (or, depending on the data type, the length) of the key. This can be used to export the number of elements in (sorted) sets, hashes, lists, streams, etc. If a key is in string format and matches with &lt;code&gt;--check-keys&lt;/code&gt; (or related) then its string value will be exported as a label in the &lt;code&gt;key_value_as_string&lt;/code&gt; metric.&lt;/p&gt; &#xA;&lt;p&gt;If you require custom metric collection, you can provide comma separated list of path(s) to &lt;a href=&#34;https://redis.io/commands/eval&#34;&gt;Redis Lua script(s)&lt;/a&gt; using the &lt;code&gt;-script&lt;/code&gt; flag. If you pass only one script, you can omit comma. An example can be found &lt;a href=&#34;https://raw.githubusercontent.com/oliver006/redis_exporter/master/contrib/sample_collect_script.lua&#34;&gt;in the contrib folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The redis_memory_max_bytes metric&lt;/h3&gt; &#xA;&lt;p&gt;The metric &lt;code&gt;redis_memory_max_bytes&lt;/code&gt; will show the maximum number of bytes Redis can use.&lt;br&gt; It is zero if no memory limit is set for the Redis instance you&#39;re scraping (this is the default setting for Redis).&lt;br&gt; You can confirm that&#39;s the case by checking if the metric &lt;code&gt;redis_config_maxmemory&lt;/code&gt; is zero or by connecting to the Redis instance via redis-cli and running the command &lt;code&gt;CONFIG GET MAXMEMORY&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What it looks like&lt;/h2&gt; &#xA;&lt;p&gt;Example &lt;a href=&#34;http://grafana.org/&#34;&gt;Grafana&lt;/a&gt; screenshots: &lt;img src=&#34;https://cloud.githubusercontent.com/assets/1222339/19412031/897549c6-92da-11e6-84a0-b091f9deb81d.png&#34; alt=&#34;redis_exporter_screen_01&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1222339/19412041/dee6d7bc-92da-11e6-84f8-610c025d6182.png&#34; alt=&#34;redis_exporter_screen_02&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Grafana dashboard is available on &lt;a href=&#34;https://grafana.com/grafana/dashboards/763-redis-dashboard-for-prometheus-redis-exporter-1-x/&#34;&gt;grafana.com&lt;/a&gt; and/or &lt;a href=&#34;https://raw.githubusercontent.com/oliver006/redis_exporter/master/contrib/grafana_prometheus_redis_dashboard.json&#34;&gt;github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Viewing multiple Redis simultaneously&lt;/h3&gt; &#xA;&lt;p&gt;If running &lt;a href=&#34;https://redis.io/topics/sentinel&#34;&gt;Redis Sentinel&lt;/a&gt;, it may be desirable to view the metrics of the various cluster members simultaneously. For this reason the dashboard&#39;s drop down is of the multi-value type, allowing for the selection of multiple Redis. Please note that there is a caveat; the single stat panels up top namely &lt;code&gt;uptime&lt;/code&gt;, &lt;code&gt;total memory use&lt;/code&gt; and &lt;code&gt;clients&lt;/code&gt; do not function upon viewing multiple Redis.&lt;/p&gt; &#xA;&lt;h2&gt;Using the mixin&lt;/h2&gt; &#xA;&lt;p&gt;There is a set of sample rules, alerts and dashboards available in &lt;a href=&#34;https://raw.githubusercontent.com/oliver006/redis_exporter/master/contrib/redis-mixin/&#34;&gt;redis-mixin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading from 0.x to 1.x&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oliver006/redis_exporter/pull/256&#34;&gt;PR #256&lt;/a&gt; introduced breaking changes which were released as version v1.0.0.&lt;/p&gt; &#xA;&lt;p&gt;If you only scrape one Redis instance and use command line flags &lt;code&gt;--redis.address&lt;/code&gt; and &lt;code&gt;--redis.password&lt;/code&gt; then you&#39;re most probably not affected. Otherwise, please see &lt;a href=&#34;https://github.com/oliver006/redis_exporter/pull/256&#34;&gt;PR #256&lt;/a&gt; and &lt;a href=&#34;https://github.com/oliver006/redis_exporter#prometheus-configuration-to-scrape-multiple-redis-hosts&#34;&gt;this README&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Memory Usage Aggregation by Key Groups&lt;/h2&gt; &#xA;&lt;p&gt;When a single Redis instance is used for multiple purposes, it is useful to be able to see how Redis memory is consumed among the different usage scenarios. This is particularly important when a Redis instance with no eviction policy is running low on memory as we want to identify whether certain applications are misbehaving (e.g. not deleting keys that are no longer in use) or the Redis instance needs to be scaled up to handle the increased resource demand. Fortunately, most applications using Redis will employ some sort of naming conventions for keys tied to their specific purpose such as (hierarchical) namespace prefixes which can be exploited by the check-keys, check-single-keys, and count-keys parameters of redis_exporter to surface the memory usage metrics of specific scenarios. &lt;em&gt;Memory usage aggregation by key groups&lt;/em&gt; takes this one step further by harnessing the flexibility of Redis LUA scripting support to classify all keys on a Redis instance into groups through a list of user-defined &lt;a href=&#34;https://www.lua.org/pil/20.1.html&#34;&gt;LUA regular expressions&lt;/a&gt; so memory usage metrics can be aggregated into readily identifiable groups.&lt;/p&gt; &#xA;&lt;p&gt;To enable memory usage aggregation by key groups, simply specify a non-empty comma-separated list of LUA regular expressions through the &lt;code&gt;check-key-groups&lt;/code&gt; redis_exporter parameter. On each aggregation of memory metrics by key groups, redis_exporter will set up a &lt;code&gt;SCAN&lt;/code&gt; cursor through all keys for each Redis database to be processed in batches via a LUA script. Each key batch is then processed by the same LUA script on a key-by-key basis as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The &lt;code&gt;MEMORY USAGE&lt;/code&gt; command is called to gather memory usage for each key&lt;/li&gt; &#xA; &lt;li&gt;The specified LUA regexes are applied to each key in the specified order, and the group name that a given key belongs to will be derived from concatenating the capture groups of the first regex that matches the key. For example, applying the regex &lt;code&gt;^(.*)_[^_]+$&lt;/code&gt; to the key &lt;code&gt;key_exp_Nick&lt;/code&gt; would yield a group name of &lt;code&gt;key_exp&lt;/code&gt;. If none of the specified regexes matches a key, the key will be assigned to the &lt;code&gt;unclassified&lt;/code&gt; group&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Once a key has been classified, the memory usage and key counter for the corresponding group will be incremented in a local LUA table. This aggregated metrics table will then be returned alongside the next &lt;code&gt;SCAN&lt;/code&gt; cursor position to redis_exporter when all keys in a batch have been processed, and redis_exporter can aggregate the data from all batches into a single table of grouped memory usage metrics for the Prometheus metrics scrapper.&lt;/p&gt; &#xA;&lt;p&gt;Besides making the full flexibility of LUA regex available for classifying keys into groups, the LUA script also has the benefit of reducing network traffic by executing all &lt;code&gt;MEMORY USAGE&lt;/code&gt; commands on the Redis server and returning aggregated data to redis_exporter in a far more compact format than key-level data. The use of &lt;code&gt;SCAN&lt;/code&gt; cursor over batches of keys processed by a server-side LUA script also helps prevent unbounded latency bubble in Redis&#39;s single processing thread, and the batch size can be tailored to specific environments via the &lt;code&gt;check-keys-batch-size&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;p&gt;Scanning the entire key space of a Redis instance may sound a lttle extravagant, but it takes only a single scan to classify all keys into groups, and on a moderately sized system with ~780K keys and a rather complex list of 17 regexes, it takes an average of ~5s to perform a full aggregation of memory usage by key groups. Of course, the actual performance for specific systems will vary widely depending on the total number of keys, the number and complexity of regexes used for classification, and the configured batch size.&lt;/p&gt; &#xA;&lt;p&gt;To protect Prometheus from being overwhelmed by a large number of time series resulting from misconfigured group classification regular expression (e.g. applying the regular expression &lt;code&gt;^(.*)$&lt;/code&gt; where each key will be classified into its own distinct group), a limit on the number of distinct key groups &lt;em&gt;per Redis database&lt;/em&gt; can be configured via the &lt;code&gt;max-distinct-key-groups&lt;/code&gt; parameter. If the &lt;code&gt;max-distinct-key-groups&lt;/code&gt; limit is exceeded, only the key groups with the highest memory usage within the limit will be tracked separately, remaining key groups will be reported under a single &lt;code&gt;overflow&lt;/code&gt; key group.&lt;/p&gt; &#xA;&lt;p&gt;Here is a list of additional metrics that will be exposed when memory usage aggregation by key groups is enabled:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Labels&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis_key_group_count&lt;/td&gt; &#xA;   &lt;td&gt;db,key_group&lt;/td&gt; &#xA;   &lt;td&gt;Number of keys in a key group&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis_key_group_memory_usage_bytes&lt;/td&gt; &#xA;   &lt;td&gt;db,key_group&lt;/td&gt; &#xA;   &lt;td&gt;Memory usage by key group&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis_number_of_distinct_key_groups&lt;/td&gt; &#xA;   &lt;td&gt;db&lt;/td&gt; &#xA;   &lt;td&gt;Number of distinct key groups in a Redis database when the &lt;code&gt;overflow&lt;/code&gt; group is fully expanded&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redis_last_key_groups_scrape_duration_milliseconds&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Duration of the last memory usage aggregation by key groups in milliseconds&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Script to collect Redis lists and respective sizes.&lt;/h3&gt; &#xA;&lt;p&gt;If using Redis version &amp;lt; 4.0, most of the helpful metrics which we need to gather based on length or memory is not possible via default redis_exporter. With the help of LUA scripts, we can gather these metrics. One of these scripts &lt;a href=&#34;https://raw.githubusercontent.com/oliver006/redis_exporter/master/contrib/collect_lists_length_growing.lua&#34;&gt;contrib/collect_lists_length_growing.lua&lt;/a&gt; will help to collect the length of redis lists. With this count, we can take following actions such as Create alerts or dashboards in Grafana or any similar tools with these Prometheus metrics.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;The tests require a variety of real Redis instances to not only verify correctness of the exporter but also compatibility with older versions of Redis and with Redis-like systems like KeyDB or Tile38.&lt;br&gt; The &lt;a href=&#34;https://raw.githubusercontent.com/oliver006/redis_exporter/master/contrib/docker-compose-for-tests.yml&#34;&gt;contrib/docker-compose-for-tests.yml&lt;/a&gt; file has service definitions for everything that&#39;s needed.&lt;br&gt; You can bring up the Redis test instances first by running &lt;code&gt;make docker-env-up&lt;/code&gt; and then, every time you want to run the tests, you can run &lt;code&gt;make docker-test&lt;/code&gt;. This will mount the current directory (with the .go source files) into a docker container and kick off the tests.&lt;br&gt; Once you&#39;re done testing you can bring down the stack by running &lt;code&gt;make docker-env-down&lt;/code&gt;.&lt;br&gt; Or you can bring up the stack, run the tests, and then tear down the stack, all in one shot, by running &lt;code&gt;make docker-all&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note.&lt;/strong&gt; Tests initialization can lead to unexpected results when using a persistent testing environment. When &lt;code&gt;make docker-env-up&lt;/code&gt; is executed once and &lt;code&gt;make docker-test&lt;/code&gt; is constantly run or stopped during execution, the number of keys in the database changes, which can lead to unexpected failures of tests. Use &lt;code&gt;make docker-env-down&lt;/code&gt; periodacally to clean up as a workaround.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Communal effort&lt;/h2&gt; &#xA;&lt;p&gt;Open an issue or PR if you have more suggestions, questions or ideas about what to add.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chaitin/SafeLine</title>
    <updated>2024-07-21T01:31:20Z</updated>
    <id>tag:github.com,2024-07-21:/chaitin/SafeLine</id>
    <link href="https://github.com/chaitin/SafeLine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A web security gateway, serve as a reverse proxy to protect your websites from attacks and exploits.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SafeLine, make your web app secure default&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/403.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;SafeLine is a web security gateway to protect your websites from attacks and exploits.&lt;/p&gt; &#xA;&lt;p&gt;It defenses for all of web attacks, such as sql injection, code injection, os command injection, CRLF injection, ldap injection, xpath injection, rce, xss, xxe, ssrf, path traversal, backdoor, bruteforce, http-flood, bot abused and so on.&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://waf.chaitin.com/&#34;&gt;🏠Home&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.waf.chaitin.com/&#34;&gt;📖Documentation&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target=&#34;_blank&#34; href=&#34;https://demo.waf.chaitin.com:9443/dashboard&#34;&gt;🔍Live Demo&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target=&#34;_blank&#34; href=&#34;https://waf-ce.chaitin.cn/&#34;&gt;中文版&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://discord.gg/SVnZGzHFvn&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a target=&#34;_blank&#34; href=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/wechat-230825.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/WeChat-07C160?style=flat&amp;amp;logo=wechat&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/safeline_en.png&#34; width=&#34;600&#34;&gt; &#xA;&lt;h1&gt;How It Works&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/safeline-as-proxy.png&#34; align=&#34;right&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;SafeLine is developed based on nginx, it serves as a reverse proxy middleware to detect and cleans web attacks, its core capabilities include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Defenses for web attacks&lt;/li&gt; &#xA; &lt;li&gt;Proactive bot abused defense&lt;/li&gt; &#xA; &lt;li&gt;HTML &amp;amp; JS code encryption&lt;/li&gt; &#xA; &lt;li&gt;IP-based rate limiting&lt;/li&gt; &#xA; &lt;li&gt;Web Access Control List&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;中国大陆用户安装国际版可能会导致无法连接云服务，请查看&lt;/strong&gt; &lt;a href=&#34;https://docs.waf-ce.chaitin.cn/zh/%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97/%E5%AE%89%E8%A3%85%E9%9B%B7%E6%B1%A0&#34;&gt;中文版安装文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Automatic Deploy&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;👍Recommended&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Use the following command to start the automated installation of SafeLine. (This process requires root privileges)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(curl -fsSLk https://waf.chaitin.com/release/latest/setup.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the command is executed, it means the installation is successfully. Please go to &#34;Use Web UI&#34; directly.&lt;/p&gt; &#xA;&lt;h2&gt;Mannually Deploy&lt;/h2&gt; &#xA;&lt;p&gt;to see &lt;a href=&#34;https://docs.waf.chaitin.com/en/tutorials/install&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Login&lt;/h2&gt; &#xA;&lt;p&gt;Open the web console page &lt;code&gt;https://&amp;lt;safeline-ip&amp;gt;:9443/&lt;/code&gt; in the browser, then you will see below.&lt;/p&gt; &#xA;&lt;img width=&#34;400&#34; src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/login.png&#34;&gt; &#xA;&lt;p&gt;Execute the following command to get administrator account&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker exec safeline-mgt /app/mgt-cli reset-admin --once&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the command is successfully executed, you will see the following content&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please must remember this content&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;[SafeLine] Initial username：admin&#xA;[SafeLine] Initial password：**********&#xA;[SafeLine] Done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enter the password in the previous step and you will successfully logged into SafeLine.&lt;/p&gt; &#xA;&lt;h2&gt;Protecting a website&lt;/h2&gt; &#xA;&lt;p&gt;Log into the SafeLine Web Admin Console, go to the &#34;Site&#34; -&amp;gt; &#34;Website&#34; page and click the &#34;Add Site&#34; button in the upper right corner.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/add-site-1.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;p&gt;In the next dialog box, enter the information to the original website.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Domain&lt;/strong&gt;: domain name of your original website, or hostname, or ip address, for example: &lt;code&gt;www.chaitin.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Port&lt;/strong&gt;: port that SafeLine will listen, such as 80 or 443. (for &lt;code&gt;https&lt;/code&gt; websites, please check the &lt;code&gt;SSL&lt;/code&gt; option)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Upstream&lt;/strong&gt;: real address of your original website, through which SafeLine will forward traffic to it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After completing the above settings, please resolve the domain name you just entered to the IP address of the server where SafeLine is located.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/add-site-2.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;Then you can access the website protected by the SafeLine through the domain name like this.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/safeline-as-proxy-2.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;h2&gt;Try to attack your website&lt;/h2&gt; &#xA;&lt;p&gt;Now, your website is protected by SafeLine, let’s try tp attack it and see what happens.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;a href=&#34;https://chaitin.com&#34;&gt;https://chaitin.com&lt;/a&gt; is a website protected by SafeLine, here are some test cases for common attacks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SQL Injection: &lt;code&gt;https://chaitin.com/?id=1+and+1=2+union+select+1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;XSS: &lt;code&gt;https://chaitin.com/?id=&amp;lt;img+src=x+onerror=alert()&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Path Traversal: &lt;code&gt;https://chaitin.com/?id=../../../../etc/passwd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Code Injection: &lt;code&gt;https://chaitin.com/?id=phpinfo();system(&#39;id&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;XXE: &lt;code&gt;https://chaitin.com/?id=&amp;lt;?xml+version=&#34;1.0&#34;?&amp;gt;&amp;lt;!DOCTYPE+foo+SYSTEM+&#34;&#34;&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;chaitin.com&lt;/code&gt; in the above cases with your website domain name and try to access it.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/blocked.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;Check the web console of SafeLine to see the attack list&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/log-list.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;p&gt;To view the specific details of the attack, click &#34;detail&#34;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chaitin/SafeLine/main/images/log-detail.png&#34; width=&#34;600&#34;&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/chaitin/safeline/stargazers&#34;&gt; &lt;img width=&#34;500&#34; alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=chaitin/safeline&amp;amp;type=Date&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Related Repo&lt;/h2&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/chaitin/yanshi&#34;&gt;Automaton Generator&lt;/a&gt; | &lt;a href=&#34;https://github.com/chaitin/safeline-open-platform&#34;&gt;Lua Plugin&lt;/a&gt; | &lt;a href=&#34;https://github.com/chaitin/lua-resty-t1k&#34;&gt;T1K Protocol&lt;/a&gt; | &lt;a href=&#34;https://github.com/chaitin/blazehttp&#34;&gt;WAF Test Tool&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
</feed>