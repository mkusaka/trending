<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-09T01:31:32Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hookdeck/outpost</title>
    <updated>2025-05-09T01:31:32Z</updated>
    <id>tag:github.com,2025-05-09:/hookdeck/outpost</id>
    <link href="https://github.com/hookdeck/outpost" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source Outbound Webhooks and Event Destinations Infrastructure&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;images/outpost-logo-white.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Outpost logo&#34; src=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/images/outpost-logo-black.svg?sanitize=true&#34; width=&#34;40%&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/#license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache--2.0-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/hookdeck/outpost&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/hookdeck/outpost&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hookdeck/outpost/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/hookdeck/outpost&#34; alt=&#34;Issues - Outpost&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/hookdeck/outpost&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Open Source Outbound Webhooks and Event Destinations Infrastructure&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/#documentation&#34;&gt;Documentation&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+&#34;&gt;Report a bug&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%F0%9F%9A%80+Feature%3A+&#34;&gt;Request a feature&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- ·&#xA;[Join our Slack](https://hookdeck.com/slack?ref=github-outpost) --&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Outpost is a self-hosted and open-source infrastructure that enables event producers to add outbound webhooks and &lt;a href=&#34;https://eventdestinations.org?ref=github-outpost&#34;&gt;Event Destinations&lt;/a&gt; to their platform with support for destination types such as Webhooks, Hookdeck Event Gateway, Amazon EventBridge, AWS SQS, AWS SNS, GCP Pub/Sub, RabbitMQ, and Kafka.&lt;/p&gt; &#xA;&lt;p&gt;The Outpost runtime has minimal dependencies (Redis, PostgreSQL or Clickhouse, and one of the supported message queues), is 100% backward compatible with your existing webhooks implementation and is optimized for high-throughput, low-cost operation.&lt;/p&gt; &#xA;&lt;p&gt;Outpost is built and maintained by &lt;a href=&#34;https://hookdeck.com?ref=github-outpost&#34;&gt;Hookdeck&lt;/a&gt;. It&#39;s written in Go and distributed as a binary and Docker container under the Apache-2.0 license.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/docs/public/images/architecture.png&#34; alt=&#34;Outpost architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://outpost.hookdeck.com/docs/concepts&#34;&gt;Outpost Concepts&lt;/a&gt; to learn more about the Outpost architecture and design.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Event topics and topic-based subscriptions&lt;/strong&gt;: Supports the common publish and subscription paradigm to ease adoption and integration into existing systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Publish events via the API or a queue&lt;/strong&gt;: Publish events using the Outpost API or configure Outpost to read events from a publish queue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;At least once delivery guarantee&lt;/strong&gt;: Messages are guaranteed to be delivered at least once and never lost.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Event fanout&lt;/strong&gt;: A message is sent to a topic is replicated and sent to multiple endpoints. This allows for parallel processing and asynchronous event notifications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic and manual retries&lt;/strong&gt;: Configure retry strategies for event destinations and manually trigger event delivery retries via the API or user portal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-tenant support&lt;/strong&gt;: Create multiple tenants on a single Outpost deployment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User portal&lt;/strong&gt;: Allow customers to view metrics, manage, debug, and observe their event destinations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Delivery failure alerts&lt;/strong&gt;: Manage event delivery failure alerts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;: OTel standardized traces, metrics, and logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Event destination types&lt;/strong&gt;: Out of the box support for Webhooks, Hookdeck Event Gateway, Amazon EventBridge, AWS SQS, AWS SNS. GCP Pub/Sub, RabbitMQ, and Kafka.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Webhook best practices&lt;/strong&gt;: Opt-out webhook best practices, such as headers for idempotency, timestamp and signature, and signature rotation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SDKs and MCP server&lt;/strong&gt;: Go, Python, and TypeScript SDK are available. Outpost also ships with an MCP server. All generated by &lt;a href=&#34;https://speakeasy.com&#34;&gt;Speakeasy&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://outpost.hookdeck.com/docs/features&#34;&gt;Outpost Features&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://outpost.hookdeck.com/docs/overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://outpost.hookdeck.com/docs/concepts&#34;&gt;Concepts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://outpost.hookdeck.com/docs/quickstarts&#34;&gt;Quickstarts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://outpost.hookdeck.com/docs/features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://outpost.hookdeck.com/docs/guides&#34;&gt;Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://outpost.hookdeck.com/docs/references/api&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://outpost.hookdeck.com/docs/references/configuration&#34;&gt;Configuration Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;The Outpost documentation is built using the &lt;a href=&#34;https://zuplo.link/outpost&#34;&gt;Zudoku documentation framework&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Ensure you have &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;p&gt;Clone the Outpost repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/hookdeck/outpost.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;outpost/examples/docker-compose/&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd outpost/examples/docker-compose/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file from the example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update the &lt;code&gt;$API_KEY&lt;/code&gt; value within the new &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Start the Outpost dependencies and services:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker-compose -f compose.yml -f compose-rabbitmq.yml -f compose-postgres.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the services are running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl localhost:3333/api/v1/healthz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait until you get a &lt;code&gt;OK%&lt;/code&gt; response.&lt;/p&gt; &#xA;&lt;p&gt;Create a tenant with the following command, replacing &lt;code&gt;$TENANT_ID&lt;/code&gt; with a unique identifier such as &#34;your_org_name&#34;, and the &lt;code&gt;$API_KEY&lt;/code&gt; with the value you set in your &lt;code&gt;.env&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;br&gt; You can use shell variables to store the tenant ID and API key for easier use in the following commands:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;TENANT_ID=your_org_name&#xA;API_KEY=your_api_key&#xA;URL=your_webhook_url&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl --location --request PUT &#34;localhost:3333/api/v1/$TENANT_ID&#34; \&#xA;--header &#34;Authorization: Bearer $API_KEY&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run a local server exposed via a localtunnel or use a hosted service such as the &lt;a href=&#34;https://console.hookdeck.com?ref=github-outpost&#34;&gt;Hookdeck Console&lt;/a&gt; to capture webhook events.&lt;/p&gt; &#xA;&lt;p&gt;Create a webhook destination where events will be delivered to with the following command. Again, replace &lt;code&gt;$TENANT_ID&lt;/code&gt; and &lt;code&gt;$API_KEY&lt;/code&gt;. Also, replace &lt;code&gt;$URL&lt;/code&gt; with the webhook destinations URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl --location &#34;localhost:3333/api/v1/$TENANT_ID/destinations&#34; \&#xA;--header &#34;Content-Type: application/json&#34; \&#xA;--header &#34;Authorization: Bearer $API_KEY&#34; \&#xA;--data &#39;{&#xA;    &#34;type&#34;: &#34;webhook&#34;,&#xA;    &#34;topics&#34;: [&#34;*&#34;],&#xA;    &#34;config&#34;: {&#xA;        &#34;url&#34;: &#34;&#39;&#34;$URL&#34;&#39;&#34;&#xA;    }&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Publish an event, remembering to replace &lt;code&gt;$API_KEY&lt;/code&gt; and &lt;code&gt;$TENANT_ID&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl --location &#34;localhost:3333/api/v1/publish&#34; \&#xA;--header &#34;Content-Type: application/json&#34; \&#xA;--header &#34;Authorization: Bearer $API_KEY&#34; \&#xA;--data &#39;{&#xA;    &#34;tenant_id&#34;: &#34;&#39;&#34;$TENANT_ID&#34;&#39;&#34;,&#xA;    &#34;topic&#34;: &#34;user.created&#34;,&#xA;    &#34;eligible_for_retry&#34;: true,&#xA;    &#34;metadata&#34;: {&#xA;        &#34;meta&#34;: &#34;data&#34;&#xA;    },&#xA;    &#34;data&#34;: {&#xA;        &#34;user_id&#34;: &#34;userid&#34;&#xA;    }&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the logs on your server or your webhook capture tool for the delivered event.&lt;/p&gt; &#xA;&lt;p&gt;Get an Outpost portal link for the tenant:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl &#34;localhost:3333/api/v1/$TENANT_ID/portal&#34; \&#xA;--header &#34;Authorization: Bearer $API_KEY&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The response will look something like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{ &#34;redirect_url&#34;: &#34;http://localhost:3333?token=$TOKEN&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;token&lt;/code&gt; value is an API-generated JWT.&lt;/p&gt; &#xA;&lt;p&gt;Open the &lt;code&gt;redirect_url&lt;/code&gt; link to view the Outpost portal.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/docs/public/images/dashboard-homepage.png&#34; alt=&#34;Dashboard homepage&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Continue to use the &lt;a href=&#34;https://outpost.hookdeck.com/docs/references/api&#34;&gt;Outpost API&lt;/a&gt; or the Outpost portal to add and test more destinations.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains Outpost, covered under the &lt;a href=&#34;https://raw.githubusercontent.com/hookdeck/outpost/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;, except where noted (any Outpost logos or trademarks are not covered under the Apache License, and should be explicitly noted by a LICENSE file.)&lt;/p&gt;</summary>
  </entry>
</feed>