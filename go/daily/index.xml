<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-02T01:30:30Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>csnewman/dextk</title>
    <updated>2024-01-02T01:30:30Z</updated>
    <id>tag:github.com,2024-01-02:/csnewman/dextk</id>
    <link href="https://github.com/csnewman/dextk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android dex file parser in Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dextk&lt;/h1&gt; &#xA;&lt;p&gt;Android dex file parser in Go&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;String, classes and code parsing&lt;/li&gt; &#xA; &lt;li&gt;Low memory usage&lt;/li&gt; &#xA; &lt;li&gt;Mmap support&lt;/li&gt; &#xA; &lt;li&gt;Designed to support stream processing (No requirement to load entire dex file into memory)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go run ./cmd/example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;log&#34;&#xA;&#xA;&#x9;&#34;github.com/csnewman/dextk&#34;&#xA;&#x9;&#34;golang.org/x/exp/mmap&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;f, err := mmap.Open(&#34;classes.dex&#34;)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Panicln(err)&#xA;&#x9;}&#xA;&#xA;&#x9;defer f.Close()&#xA;&#xA;&#x9;r, err := dextk.Read(f)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Panicln(err)&#xA;&#x9;}&#xA;&#xA;&#x9;ci := r.ClassIter()&#xA;&#x9;for ci.HasNext() {&#xA;&#x9;&#x9;node, err := ci.Next()&#xA;&#x9;&#x9;if err != nil {&#xA;&#x9;&#x9;&#x9;log.Panicln(err)&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;for _, method := range node.DirectMethods {&#xA;&#x9;&#x9;&#x9;fmt.Println(node.Name, &#34;: &#34;, method.Name)&#xA;&#x9;&#x9;&#x9;processMeth(r, method)&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;for _, method := range node.VirtualMethods {&#xA;&#x9;&#x9;&#x9;fmt.Println(node.Name, &#34;: &#34;, method.Name)&#xA;&#x9;&#x9;&#x9;processMeth(r, method)&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&#xA;func processMeth(r *dextk.Reader, m dextk.MethodNode) {&#xA;&#x9;if m.CodeOff == 0 {&#xA;&#x9;&#x9;return&#xA;&#x9;}&#xA;&#xA;&#x9;c, err := r.ReadCodeAndParse(m.CodeOff)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Panic(err)&#xA;&#x9;}&#xA;&#xA;&#x9;for _, o := range c.Ops {&#xA;&#x9;&#x9;fmt.Println(&#34;  &#34;, o)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;android/support/v4/app/INotificationSideChannel$_Parcel :  &amp;lt;init&amp;gt;&#xA;   invoke-direct method=java/lang/Object:&amp;lt;init&amp;gt;:([]):V args=[0]&#xA;   return-void value=-1&#xA;[...]&#xA;android/support/v4/app/INotificationSideChannel$_Parcel :  readTypedObject&#xA;   invoke-virtual method=android/os/Parcel:readInt:([]):I args=[1]&#xA;   move-result dst=0&#xA;   if-eqz a=0 b=-1 tgt=6&#xA;   invoke-interface method=android/os/Parcelable$Creator:createFromParcel:([Landroid/os/Parcel;]):Ljava/lang/Object; args=[2 1]&#xA;   move-result-object dst=0&#xA;   return-object value=0&#xA;   const/4 dst=0 value=&#39;0&#39;&#xA;   return-object value=0&#xA;[...]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>