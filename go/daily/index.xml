<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-01T01:26:30Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Foxboron/ssh-tpm-agent</title>
    <updated>2023-08-01T01:26:30Z</updated>
    <id>tag:github.com,2023-08-01:/Foxboron/ssh-tpm-agent</id>
    <link href="https://github.com/Foxboron/ssh-tpm-agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ’» ðŸ”‘ ssh-tpm-agent&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SSH agent for TPM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ssh-tpm-agent&lt;/code&gt; is a ssh-agent compatible agent that allows keys to be created by the Trusted Platform Module (TPM) for authentication towards ssh servers.&lt;/p&gt; &#xA;&lt;p&gt;TPM sealed keys are private keys created inside the Trusted Platform Module (TPM) and sealed in &lt;code&gt;.tpm&lt;/code&gt; suffixed files. They are bound to the hardware they where produced on and can&#39;t be transferred to other machines.&lt;/p&gt; &#xA;&lt;p&gt;This allows one to utilize a native client instead of having to side load existing PKCS11 libraries into the ssh-agent and/or ssh client.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A working &lt;code&gt;ssh-agent&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Keys created on the TPM, sealed outside of it.&lt;/li&gt; &#xA; &lt;li&gt;PIN support.&lt;/li&gt; &#xA; &lt;li&gt;TPM session encryption.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Experimental&lt;/h1&gt; &#xA;&lt;p&gt;The key format and technical details might change between iterations. Consider this agent experimental.&lt;/p&gt; &#xA;&lt;p&gt;Instead of utilizing the TPM directly, you can use &lt;code&gt;--swtpm&lt;/code&gt; or &lt;code&gt;export SSH_TPM_AGENT_SWTPM=1&lt;/code&gt; to create a identity backed by &lt;a href=&#34;https://github.com/stefanberger/swtpm&#34;&gt;swtpm&lt;/a&gt; which will be stored under &lt;code&gt;/var/tmp/ssh-tpm-agent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;swtpm&lt;/code&gt; provides no security properties and should only be used for testing.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way of installing this plugin is by running the follow go command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;go install github.com/foxboron/ssh-tpm-agent/cmd/...@latest&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively download the &lt;a href=&#34;https://github.com/Foxboron/ssh-tpm-agent/releases&#34;&gt;pre-built binaries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create key&#xA;$ ssh-tpm-keygen&#xA;Generating a sealed public/private ecdsa key pair.&#xA;Enter file in which to save the key (/home/fox/.ssh/id_ecdsa):&#xA;Enter pin (empty for no pin):&#xA;Enter same pin again:&#xA;Your identification has been saved in /home/fox/.ssh/id_ecdsa.tpm&#xA;Your public key has been saved in /home/fox/.ssh/id_ecdsa.pub&#xA;The key fingerprint is:&#xA;SHA256:NCMJJ2La+q5tGcngQUQvEOJP3gPH8bMP98wJOEMV564&#xA;The key&#39;s randomart image is the color of television, tuned to a dead channel.&#xA;&#xA;$ cat /home/fox/.ssh/id_ecdsa.pub&#xA;ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBOTOsMXyjTc1wiQSKhRiNhKFsHJNLzLk2r4foXPLQYKR0tuXIBMTQuMmc7OiTgNMvIjMrcb9adgGdT3s+GkNi1g=&#xA;&#xA;# Using the socket&#xA;$ ssh-tpm-agent -l /var/tmp/tpm.sock&#xA;&#xA;$ export SSH_AUTH_SOCK=&#34;/var/tmp/tpm.sock&#34; ssh git@github.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;ssh-config&lt;/h1&gt; &#xA;&lt;p&gt;It is possible to use the public keys created by &lt;code&gt;ssh-tpm-keygen&lt;/code&gt; inside ssh configurations.&lt;/p&gt; &#xA;&lt;p&gt;The below example uses &lt;code&gt;ssh-tpm-agent&lt;/code&gt; and also passes the public key to ensure not all identities are leaked from the agent.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Host example.com&#xA;    IdentityAgent $SSH_AUTH_SOCK&#xA;&#xA;Host *&#xA;    IdentityAgent /var/tmp/tpm.sock&#xA;    IdentityFile ~/.ssh/id_ecdsa.pub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/Foxboron/ssh-tpm-agent/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>