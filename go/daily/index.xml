<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-22T01:33:04Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>projectdiscovery/subfinder</title>
    <updated>2022-10-22T01:33:04Z</updated>
    <id>tag:github.com,2022-10-22:/projectdiscovery/subfinder</id>
    <link href="https://github.com/projectdiscovery/subfinder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Subfinder is a subdomain discovery tool that discovers valid subdomains for websites. Designed as a passive framework to be useful for bug bounties and safe for penetration testing.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/projectdiscovery/subfinder/master/static/subfinder-logo.png&#34; alt=&#34;subfinder&#34; width=&#34;200px&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Fast passive subdomain enumeration tool.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/projectdiscovery/subfinder/v2&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/projectdiscovery/subfinder&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/subfinder/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/projectdiscovery/subfinder/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/projectdiscovery/subfinder&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/pdiscoveryio&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/pdiscoveryio.svg?logo=twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/695645237418131507.svg?logo=discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/subfinder/master/#features&#34;&gt;Features&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/subfinder/master/#installation&#34;&gt;Install&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/subfinder/master/#running-subfinder&#34;&gt;Usage&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/subfinder/master/#post-installation-instructions&#34;&gt;API Setup&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/projectdiscovery/subfinder/master/#subfinder-go-library&#34;&gt;Library&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/projectdiscovery&#34;&gt;Join Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Subfinder is a subdomain discovery tool that discovers valid subdomains for websites by using passive online sources. It has a simple modular architecture and is optimized for speed. subfinder is built for doing one thing only - passive subdomain enumeration, and it does that very well.&lt;/p&gt; &#xA;&lt;p&gt;We have designed &lt;code&gt;subfinder&lt;/code&gt; to comply with all passive sources licenses, and usage restrictions, as well as maintained a consistently passive model to make it useful to both penetration testers and bug bounty hunters alike.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h1 align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/projectdiscovery/subfinder/master/static/subfinder-run.png&#34; alt=&#34;subfinder&#34; width=&#34;700px&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast and powerful resolution and wildcard elimination module&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Curated&lt;/strong&gt; passive sources to maximize results&lt;/li&gt; &#xA; &lt;li&gt;Multiple Output formats supported (Json, File, Stdout)&lt;/li&gt; &#xA; &lt;li&gt;Optimized for speed, very fast and &lt;strong&gt;lightweight&lt;/strong&gt; on resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;STDIN/OUT&lt;/strong&gt; support for integrating in workflows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;subfinder -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will display help for the tool. Here are all the switches it supports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Flags:&#xA;INPUT:&#xA;   -d, -domain string[]  domains to find subdomains for&#xA;   -dL, -list string     file containing list of domains for subdomain discovery&#xA;&#xA;SOURCE:&#xA;   -s, -sources string[]           specific sources to use for discovery (-s crtsh,github). Use -ls to display all available sources.&#xA;   -recursive                      use only sources that can handle subdomains recursively (e.g. subdomain.domain.tld vs domain.tld)&#xA;   -all                            use all sources for enumeration (slow)&#xA;   -es, -exclude-sources string[]  sources to exclude from enumeration (-es alienvault,zoomeye)&#xA;&#xA;FILTER:&#xA;   -m, -match string[]   subdomain or list of subdomain to match (file or comma separated)&#xA;   -f, -filter string[]   subdomain or list of subdomain to filter (file or comma separated)&#xA;&#xA;RATE-LIMIT:&#xA;   -rl, -rate-limit int  maximum number of http requests to send per second&#xA;   -t int                number of concurrent goroutines for resolving (-active only) (default 10)&#xA;&#xA;OUTPUT:&#xA;   -o, -output string       file to write output to&#xA;   -oJ, -json               write output in JSONL(ines) format&#xA;   -oD, -output-dir string  directory to write output (-dL only)&#xA;   -cs, -collect-sources    include all sources in the output (-json only)&#xA;   -oI, -ip                 include host IP in output (-active only)&#xA;&#xA;CONFIGURATION:&#xA;   -config string                flag config file (default &#34;$HOME/.config/subfinder/config.yaml&#34;)&#xA;   -pc, -provider-config string  provider config file (default &#34;$HOME/.config/subfinder/provider-config.yaml&#34;)&#xA;   -r string[]                   comma separated list of resolvers to use&#xA;   -rL, -rlist string            file containing list of resolvers to use&#xA;   -nW, -active                  display active subdomains only&#xA;   -proxy string                 http proxy to use with subfinder&#xA;   -ei, -exclude-ip              exclude IPs from the list of domains&#xA;&#xA;DEBUG:&#xA;   -silent             show only subdomains in output&#xA;   -version            show version of subfinder&#xA;   -v                  show verbose output&#xA;   -nc, -no-color      disable color in output&#xA;   -ls, -list-sources  list all available sources&#xA;&#xA;OPTIMIZATION:&#xA;   -timeout int   seconds to wait before timing out (default 30)&#xA;   -max-time int  minutes to wait for enumeration results (default 10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Subfinder requires &lt;strong&gt;go1.17&lt;/strong&gt; to install successfully. Run the following command to install the latest version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Post Installation Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Subfinder will work after using the installation instructions however to configure Subfinder to work with certain services, you will need to have setup API keys. The following services do not work without an API key:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bevigil.com/osint-api&#34;&gt;BeVigil&lt;/a&gt;, &lt;a href=&#34;https://binaryedge.io&#34;&gt;Binaryedge&lt;/a&gt;, &lt;a href=&#34;https://api.c99.nl/&#34;&gt;C99&lt;/a&gt;, &lt;a href=&#34;https://sslmate.com/certspotter/api/&#34;&gt;Certspotter&lt;/a&gt;, &lt;a href=&#34;http://my.chinaz.com/ChinazAPI/DataCenter/MyDataApi&#34;&gt;Chinaz&lt;/a&gt;, &lt;a href=&#34;https://censys.io&#34;&gt;Censys&lt;/a&gt;, &lt;a href=&#34;https://chaos.projectdiscovery.io&#34;&gt;Chaos&lt;/a&gt;, &lt;a href=&#34;https://api.dnsdb.info&#34;&gt;DnsDB&lt;/a&gt;, &lt;a href=&#34;https://fofa.info/static_pages/api_help&#34;&gt;Fofa&lt;/a&gt;, &lt;a href=&#34;https://github.com&#34;&gt;Github&lt;/a&gt;, &lt;a href=&#34;https://intelx.io&#34;&gt;Intelx&lt;/a&gt;, &lt;a href=&#34;http://passivetotal.org&#34;&gt;Passivetotal&lt;/a&gt;, &lt;a href=&#34;https://www.robtex.com/api/&#34;&gt;Robtex&lt;/a&gt;, &lt;a href=&#34;http://securitytrails.com&#34;&gt;SecurityTrails&lt;/a&gt;, &lt;a href=&#34;https://shodan.io&#34;&gt;Shodan&lt;/a&gt;, &lt;a href=&#34;https://x.threatbook.cn/en&#34;&gt;Threatbook&lt;/a&gt;, &lt;a href=&#34;https://www.virustotal.com&#34;&gt;Virustotal&lt;/a&gt;, &lt;a href=&#34;https://whoisxmlapi.com/&#34;&gt;WhoisXML API&lt;/a&gt;, &lt;a href=&#34;https://www.zoomeye.org&#34;&gt;Zoomeye&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;These values are stored in the &lt;code&gt;$HOME/.config/subfinder/provider-config.yaml&lt;/code&gt; file which will be created when you run the tool for the first time. The configuration file uses the YAML format. Multiple API keys can be specified for each of these services from which one of them will be used for enumeration.&lt;/p&gt; &#xA;&lt;p&gt;For sources that require multiple keys, namely &lt;code&gt;Censys&lt;/code&gt;, &lt;code&gt;Passivetotal&lt;/code&gt;, they can be added by separating them via a colon (:).&lt;/p&gt; &#xA;&lt;p&gt;An example provider config file -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;binaryedge:&#xA;  - 0bf8919b-aab9-42e4-9574-d3b639324597&#xA;  - ac244e2f-b635-4581-878a-33f4e79a2c13&#xA;censys:&#xA;  - ac244e2f-b635-4581-878a-33f4e79a2c13:dd510d6e-1b6e-4655-83f6-f347b363def9&#xA;certspotter: []&#xA;passivetotal:&#xA;  - sample-email@user.com:sample_password&#xA;securitytrails: []&#xA;shodan:&#xA;  - AAAAClP1bJJSRMEYJazgwhJKrggRwKA&#xA;github:&#xA;  - ghp_lkyJGU3jv1xmwk4SDXavrLDJ4dl2pSJMzj4X&#xA;  - ghp_gkUuhkIYdQPj13ifH4KA3cXRn8JD2lqir2d4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Running Subfinder&lt;/h1&gt; &#xA;&lt;p&gt;To run the tool on a target, just use the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;subfinder -d hackerone.com&#xA;&#xA;               __    _____           __         &#xA;   _______  __/ /_  / __(_)___  ____/ /__  _____&#xA;  / ___/ / / / __ \/ /_/ / __ \/ __  / _ \/ ___/&#xA; (__  ) /_/ / /_/ / __/ / / / / /_/ /  __/ /    &#xA;/____/\__,_/_.___/_/ /_/_/ /_/\__,_/\___/_/ v2.4.9&#xA;&#xA;&#x9;&#x9;projectdiscovery.io&#xA;&#xA;Use with caution. You are responsible for your actions&#xA;Developers assume no liability and are not responsible for any misuse or damage.&#xA;By using subfinder, you also agree to the terms of the APIs used.&#xA;&#xA;[INF] Enumerating subdomains for hackerone.com&#xA;&#xA;www.hackerone.com&#xA;support.hackerone.com&#xA;links.hackerone.com&#xA;api.hackerone.com&#xA;o1.email.hackerone.com&#xA;go.hackerone.com&#xA;3d.hackerone.com&#xA;resources.hackerone.com&#xA;a.ns.hackerone.com&#xA;b.ns.hackerone.com&#xA;mta-sts.hackerone.com&#xA;docs.hackerone.com&#xA;mta-sts.forwarding.hackerone.com&#xA;gslink.hackerone.com&#xA;hackerone.com&#xA;info.hackerone.com&#xA;mta-sts.managed.hackerone.com&#xA;events.hackerone.com&#xA;&#xA;[INF] Found 18 subdomains for hackerone.com in 3 seconds 672 milliseconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The subdomains discovered can be piped to other tools too. For example, you can pipe the subdomains discovered by subfinder to httpx &lt;a href=&#34;https://github.com/projectdiscovery/httpx&#34;&gt;httpx&lt;/a&gt; which will then find running http servers on the host.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo hackerone.com | subfinder -silent | httpx -silent&#xA;&#xA;http://hackerone.com&#xA;http://www.hackerone.com&#xA;http://docs.hackerone.com&#xA;http://api.hackerone.com&#xA;https://docs.hackerone.com&#xA;http://mta-sts.managed.hackerone.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;h2&gt;Subfinder with docker&lt;/h2&gt; &lt;p&gt;Pull the latest tagged &lt;a href=&#34;https://hub.docker.com/r/projectdiscovery/subfinder&#34;&gt;subfinder&lt;/a&gt; docker image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull projectdiscovery/subfinder:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Running subfinder using docker image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run projectdiscovery/subfinder:latest -d hackerone.com&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Running subfinder using docker image with local config file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -v $HOME/.config/subfinder:/root/.config/subfinder -t projectdiscovery/subfinder -d hackerone.com&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;h2&gt;Subfinder Go library&lt;/h2&gt; &lt;p&gt;Usage example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;bytes&#34;&#xA;&#x9;&#34;context&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;io&#34;&#xA;&#x9;&#34;log&#34;&#xA;&#xA;&#x9;&#34;github.com/projectdiscovery/subfinder/v2/pkg/passive&#34;&#xA;&#x9;&#34;github.com/projectdiscovery/subfinder/v2/pkg/resolve&#34;&#xA;&#x9;&#34;github.com/projectdiscovery/subfinder/v2/pkg/runner&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;runnerInstance, err := runner.NewRunner(&amp;amp;runner.Options{&#xA;&#x9;&#x9;Threads:            10, // Thread controls the number of threads to use for active enumerations&#xA;&#x9;&#x9;Timeout:            30, // Timeout is the seconds to wait for sources to respond&#xA;&#x9;&#x9;MaxEnumerationTime: 10, // MaxEnumerationTime is the maximum amount of time in mins to wait for enumeration&#xA;&#x9;&#x9;Resolvers:          resolve.DefaultResolvers, // Use the default list of resolvers by marshaling it to the config&#xA;&#x9;&#x9;Sources:            passive.DefaultSources, // Use the default list of passive sources&#xA;&#x9;&#x9;AllSources:         passive.DefaultAllSources, // Use the default list of all passive sources&#xA;&#x9;&#x9;Recursive:          passive.DefaultRecursiveSources,&#x9;// Use the default list of recursive sources&#xA;&#x9;&#x9;Providers:          &amp;amp;runner.Providers{}, // Use empty api keys for all providers&#xA;  })&#xA;&#xA;&#x9;buf := bytes.Buffer{}&#xA;&#x9;err = runnerInstance.EnumerateSingleDomain(context.Background(), &#34;projectdiscovery.io&#34;, []io.Writer{&amp;amp;buf})&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#xA;&#x9;data, err := io.ReadAll(&amp;amp;buf)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Printf(&#34;%s&#34;, data)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dhiyaneshgeek.github.io/bug/bounty/2020/02/06/recon-with-me/&#34;&gt;Recon with Me !!!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;subfinder&lt;/code&gt; is made with 🖤 by the &lt;a href=&#34;https://projectdiscovery.io&#34;&gt;projectdiscovery&lt;/a&gt; team. Community contributions have made the project what it is. See the &lt;strong&gt;&lt;a href=&#34;https://github.com/projectdiscovery/subfinder/raw/master/THANKS.md&#34;&gt;Thanks.md&lt;/a&gt;&lt;/strong&gt; file for more details.&lt;/p&gt; &#xA;&lt;p&gt;Read the disclaimer for usage at &lt;a href=&#34;https://github.com/projectdiscovery/subfinder/raw/master/DISCLAIMER.md&#34;&gt;DISCLAIMER.md&lt;/a&gt; and &lt;a href=&#34;mailto:contact@projectdiscovery.io&#34;&gt;contact us&lt;/a&gt; for any API removal.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>grpc-ecosystem/go-grpc-middleware</title>
    <updated>2022-10-22T01:33:04Z</updated>
    <id>tag:github.com,2022-10-22:/grpc-ecosystem/go-grpc-middleware</id>
    <link href="https://github.com/grpc-ecosystem/go-grpc-middleware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Golang gRPC Middlewares: interceptor chaining, auth, logging, retries and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Go gRPC Middleware&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/grpc-ecosystem/go-grpc-middleware&#34;&gt;&lt;img src=&#34;https://travis-ci.org/grpc-ecosystem/go-grpc-middleware.svg?branch=master&#34; alt=&#34;Travis Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/grpc-ecosystem/go-grpc-middleware&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/grpc-ecosystem/go-grpc-middleware&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/grpc-ecosystem/go-grpc-middleware&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/GoDoc-Reference-blue.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcegraph.com/github.com/grpc-ecosystem/go-grpc-middleware/?badge&#34;&gt;&lt;img src=&#34;https://sourcegraph.com/github.com/grpc-ecosystem/go-grpc-middleware/-/badge.svg?sanitize=true&#34; alt=&#34;SourceGraph&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/grpc-ecosystem/go-grpc-middleware&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/grpc-ecosystem/go-grpc-middleware/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;Apache 2.0 License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/#status&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/quality-production-orange.svg?sanitize=true&#34; alt=&#34;quality: production&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gophers.slack.com/archives/CNJL30P4P&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-%23grpc--middleware-brightgreen&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grpc/grpc-go&#34;&gt;gRPC Go&lt;/a&gt; Middleware: interceptors, helpers, utilities.&lt;/p&gt; &#xA;&lt;h2&gt;Middleware&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grpc/grpc-go&#34;&gt;gRPC Go&lt;/a&gt; recently acquired support for Interceptors, i.e. &lt;a href=&#34;https://medium.com/@matryer/writing-middleware-in-golang-and-how-go-makes-it-so-much-fun-4375c1246e81#.gv7tdlghs&#34;&gt;middleware&lt;/a&gt; that is executed either on the gRPC Server before the request is passed onto the user&#39;s application logic, or on the gRPC client around the user call. It is a perfect way to implement common patterns: auth, logging, message, validation, retries, or monitoring.&lt;/p&gt; &#xA;&lt;p&gt;These are generic building blocks that make it easy to build multiple microservices easily. The purpose of this repository is to act as a go-to point for such reusable functionality. It contains some of them itself, but also will link to useful external repos.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;grpc_middleware&lt;/code&gt; itself provides support for chaining interceptors, here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;github.com/grpc-ecosystem/go-grpc-middleware&#34;&#xA;&#xA;myServer := grpc.NewServer(&#xA;    grpc.StreamInterceptor(grpc_middleware.ChainStreamServer(&#xA;        grpc_ctxtags.StreamServerInterceptor(),&#xA;        grpc_opentracing.StreamServerInterceptor(),&#xA;        grpc_prometheus.StreamServerInterceptor,&#xA;        grpc_zap.StreamServerInterceptor(zapLogger),&#xA;        grpc_auth.StreamServerInterceptor(myAuthFunction),&#xA;        grpc_recovery.StreamServerInterceptor(),&#xA;    )),&#xA;    grpc.UnaryInterceptor(grpc_middleware.ChainUnaryServer(&#xA;        grpc_ctxtags.UnaryServerInterceptor(),&#xA;        grpc_opentracing.UnaryServerInterceptor(),&#xA;        grpc_prometheus.UnaryServerInterceptor,&#xA;        grpc_zap.UnaryServerInterceptor(zapLogger),&#xA;        grpc_auth.UnaryServerInterceptor(myAuthFunction),&#xA;        grpc_recovery.UnaryServerInterceptor(),&#xA;    )),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Interceptors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Please send a PR to add new interceptors or middleware to this list&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Auth&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/auth&#34;&gt;&lt;code&gt;grpc_auth&lt;/code&gt;&lt;/a&gt; - a customizable (via &lt;code&gt;AuthFunc&lt;/code&gt;) piece of auth middleware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Logging&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/tags/&#34;&gt;&lt;code&gt;grpc_ctxtags&lt;/code&gt;&lt;/a&gt; - a library that adds a &lt;code&gt;Tag&lt;/code&gt; map to context, with data populated from request body&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/logging/zap/&#34;&gt;&lt;code&gt;grpc_zap&lt;/code&gt;&lt;/a&gt; - integration of &lt;a href=&#34;https://github.com/uber-go/zap&#34;&gt;zap&lt;/a&gt; logging library into gRPC handlers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/logging/logrus/&#34;&gt;&lt;code&gt;grpc_logrus&lt;/code&gt;&lt;/a&gt; - integration of &lt;a href=&#34;https://github.com/sirupsen/logrus&#34;&gt;logrus&lt;/a&gt; logging library into gRPC handlers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/logging/kit/&#34;&gt;&lt;code&gt;grpc_kit&lt;/code&gt;&lt;/a&gt; - integration of &lt;a href=&#34;https://github.com/go-kit/log&#34;&gt;go-kit/log&lt;/a&gt; logging library into gRPC handlers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/logging/settable/&#34;&gt;&lt;code&gt;grpc_grpc_logsettable&lt;/code&gt;&lt;/a&gt; - a wrapper around &lt;code&gt;grpclog.LoggerV2&lt;/code&gt; that allows to replace loggers in runtime (thread-safe).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Monitoring&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grpc-ecosystem/go-grpc-prometheus&#34;&gt;&lt;code&gt;grpc_prometheus&lt;/code&gt;⚡&lt;/a&gt; - Prometheus client-side and server-side monitoring middleware&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grpc-ecosystem/grpc-opentracing/tree/master/go/otgrpc&#34;&gt;&lt;code&gt;otgrpc&lt;/code&gt;⚡&lt;/a&gt; - &lt;a href=&#34;http://opentracing.io/&#34;&gt;OpenTracing&lt;/a&gt; client-side and server-side interceptors&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/tracing/opentracing&#34;&gt;&lt;code&gt;grpc_opentracing&lt;/code&gt;&lt;/a&gt; - &lt;a href=&#34;http://opentracing.io/&#34;&gt;OpenTracing&lt;/a&gt; client-side and server-side interceptors with support for streaming and handler-returned tags&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/instrumentation/google.golang.org/grpc/otelgrpc&#34;&gt;&lt;code&gt;otelgrpc&lt;/code&gt;&lt;/a&gt; - &lt;a href=&#34;https://opentelemetry.io/&#34;&gt;OpenTelemetry&lt;/a&gt; client-side and server-side interceptors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Client&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/retry/&#34;&gt;&lt;code&gt;grpc_retry&lt;/code&gt;&lt;/a&gt; - a generic gRPC response code retry mechanism, client-side middleware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Server&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/validator/&#34;&gt;&lt;code&gt;grpc_validator&lt;/code&gt;&lt;/a&gt; - codegen inbound message validation from &lt;code&gt;.proto&lt;/code&gt; options&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/recovery/&#34;&gt;&lt;code&gt;grpc_recovery&lt;/code&gt;&lt;/a&gt; - turn panics into gRPC errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/ratelimit/&#34;&gt;&lt;code&gt;ratelimit&lt;/code&gt;&lt;/a&gt; - grpc rate limiting by your own limiter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This code has been running in &lt;em&gt;production&lt;/em&gt; since May 2016 as the basis of the gRPC microservices stack at &lt;a href=&#34;https://improbable.io&#34;&gt;Improbable&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additional tooling will be added, and contributions are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go-grpc-middleware&lt;/code&gt; is released under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/grpc-ecosystem/go-grpc-middleware/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kedacore/keda</title>
    <updated>2022-10-22T01:33:04Z</updated>
    <id>tag:github.com,2022-10-22:/kedacore/keda</id>
    <link href="https://github.com/kedacore/keda" rel="alternate"></link>
    <summary type="html">&lt;p&gt;KEDA is a Kubernetes-based Event Driven Autoscaling component. It provides event driven scale for any container running in Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kedacore/keda/main/images/logos/keda-word-colour.png&#34; width=&#34;300&#34;&gt;&lt;/p&gt; &#xA;&lt;p style=&#34;font-size: 25px&#34; align=&#34;center&#34;&gt;&lt;b&gt;Kubernetes-based Event Driven Autoscaling&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p style=&#34;font-size: 25px&#34; align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/kedacore/keda/actions?query=workflow%3Amain-build&#34;&gt;&lt;img src=&#34;https://github.com/kedacore/keda/workflows/main-build/badge.svg?sanitize=true&#34; alt=&#34;main build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kedacore/keda/actions?query=workflow%3Anightly-e2e-test&#34;&gt;&lt;img src=&#34;https://github.com/kedacore/keda/workflows/nightly-e2e-test/badge.svg?sanitize=true&#34; alt=&#34;nightly e2e&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3791&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3791/badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/helm/kedacore/keda&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/kedacore&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/custom%2B162%2Fgithub.com%2Fkedacore%2Fkeda?ref=badge_shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/custom%2B162%2Fgithub.com%2Fkedacore%2Fkeda.svg?type=shield&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/kedaorg&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/kedaorg?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;KEDA allows for fine-grained autoscaling (including to/from zero) for event driven Kubernetes workloads. KEDA serves as a Kubernetes Metrics Server and allows users to define autoscaling rules using a dedicated Kubernetes custom resource definition.&lt;/p&gt; &#xA;&lt;p&gt;KEDA can run on both the cloud and the edge, integrates natively with Kubernetes components such as the Horizontal Pod Autoscaler, and has no external dependencies.&lt;/p&gt; &#xA;&lt;p&gt;We are a Cloud Native Computing Foundation (CNCF) incubation project.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kedacore/keda/main/images/logo-cncf.svg?sanitize=true&#34; height=&#34;75px&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#deploying-keda&#34;&gt;Deploying KEDA&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#adopters---become-a-listed-keda-user&#34;&gt;Adopters - Become a listed KEDA user!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#governance--policies&#34;&gt;Governance &amp;amp; Policies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/#building--deploying-locally&#34;&gt;Building &amp;amp; deploying locally&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kedacore/sample-go-rabbitmq&#34;&gt;QuickStart - RabbitMQ and Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kedacore/sample-hello-world-azure-functions&#34;&gt;QuickStart - Azure Functions and Queues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kedacore/sample-azure-functions-on-ocp4&#34;&gt;QuickStart - Azure Functions and Kafka on Openshift 4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kedacore/sample-go-storage-queue&#34;&gt;QuickStart - Azure Storage Queue with ScaledJob&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find several samples for various event sources &lt;a href=&#34;https://github.com/kedacore/samples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Deploying KEDA&lt;/h3&gt; &#xA;&lt;p&gt;There are many ways to &lt;a href=&#34;https://keda.sh/docs/latest/deploy/&#34;&gt;deploy KEDA including Helm, Operator Hub and YAML files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Interested to learn more? Head over to &lt;a href=&#34;https://keda.sh&#34;&gt;keda.sh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;If interested in contributing or participating in the direction of KEDA, you can join our community meetings! Learn more about them on &lt;a href=&#34;https://keda.sh/community/&#34;&gt;our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Just want to learn or chat about KEDA? Feel free to join the conversation in &lt;strong&gt;&lt;a href=&#34;https://kubernetes.slack.com/messages/CKZJ36A5D&#34;&gt;#KEDA&lt;/a&gt;&lt;/strong&gt; on the &lt;strong&gt;&lt;a href=&#34;https://slack.k8s.io/&#34;&gt;Kubernetes Slack&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Adopters - Become a listed KEDA user!&lt;/h2&gt; &#xA;&lt;p&gt;We are always happy to &lt;a href=&#34;https://keda.sh/community/#users&#34;&gt;list users&lt;/a&gt; who run KEDA in production, learn more about it &lt;a href=&#34;https://github.com/kedacore/keda-docs#become-a-listed-keda-user&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Governance &amp;amp; Policies&lt;/h2&gt; &#xA;&lt;p&gt;You can learn about the governance of KEDA &lt;a href=&#34;https://github.com/kedacore/governance&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;We use GitHub issues to build our backlog, a complete overview of all open items and our planning.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about our roadmap &lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/ROADMAP.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;You can find the latest releases &lt;a href=&#34;https://github.com/kedacore/keda/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can find contributing guide &lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building &amp;amp; deploying locally&lt;/h3&gt; &#xA;&lt;p&gt;Learn how to build &amp;amp; deploy KEDA locally &lt;a href=&#34;https://raw.githubusercontent.com/kedacore/keda/main/BUILD.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>