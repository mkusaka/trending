<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-06T01:41:54Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sobinge/2022-HW-POC</title>
    <updated>2022-08-06T01:41:54Z</updated>
    <id>tag:github.com,2022-08-06:/sobinge/2022-HW-POC</id>
    <link href="https://github.com/sobinge/2022-HW-POC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;2022 护网行动 POC 整理&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;2022-HW-POC&lt;/h1&gt; &#xA;&lt;p&gt;2022 护网行动 POC 整理&lt;/p&gt; &#xA;&lt;p&gt;免责申明：此POC严禁用于任何非授权测试，请遵守法律底线！&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;泛微云桥e-Bridge存在SQL注入漏洞&#x9;2022/7/11&#x9;新近真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-11894&#xA;&#xA;Apache Commons远程代码执行漏洞（CVE-2022-33980）&#x9;2022/7/7&#x9;新近真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-10567&#xA;&#xA;GitLab远程代码执行漏洞（CVE-2022-2185）&#x9;2022/7/1&#x9;新近真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-10296&#xA;&#xA;泛微OA存在SQL注入漏洞（CNVD-2022-43843）&#x9;2022/6/30&#x9;新近真实漏洞&#x9;https://www.cnvd.org.cn/flaw/show/CNVD-2022-43843&#xA;&#xA;通达OA存在代码执行漏洞&#x9;2020/8/20&#x9;历史真实漏洞&#x9;https://mp.weixin.qq.com/s/II1s-xwn4lD5_couvadI9g&#xA;&#xA;用友U8-OA企业版存在SQL注入漏洞（CNVD-2022-31182）&#x9;2022/4/30&#x9;新近真实漏洞&#x9;https://www.cnvd.org.cn/flaw/show/CNVD-2022-31182&#xA;&#xA;泛微OA存在命令执行漏洞（CNVD-2022-06870）&#x9;2022/2/13&#x9;新近真实漏洞&#x9;https://www.cnvd.org.cn/flaw/show/CNVD-2022-06870&#xA;&#xA;FastJson代码执行漏洞&#x9;&#x9;无已知公开的与情报对应的新近漏洞&#x9;&#xA;&#xA;致远A8 getshell&#x9;2019/6/26&#x9;历史真实漏洞&#x9;https://cn-sec.com/archives/1101195.html&#xA;&#xA;禅道存在SQL注入漏洞（CNVD-2022-42853）&#x9;新近真实漏洞&#x9;&#xA;&#xA;FastJson代码执行漏洞 (CVE-2022-25845)&#x9;2022/5/23&#x9;新近真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-7654&#xA;&#xA;万户OA getshell&#x9;&#x9;历史真实漏洞&#x9;http://cn-sec.com/archives/75986.html&#xA;&#xA;蓝凌OA远程代码执行漏洞&#x9;2021/4/9&#x9;历史真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2021-13023&#xA;&#xA;拓尔思mas5 getshell&#x9;2022/4/28&#x9;新近真实漏洞&#x9;https://www.little2pig.work/archives/trs-mas http://cn-sec.com/archives/960259.html&#xA;&#xA;thinkphp远程代码执行漏洞&#x9;2018/12/9&#x9;历史真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-11895&#xA;&#xA;jboss EAP /AS 6.远程代码执行&#x9;2019/12/11&#x9;历史真实漏洞&#x9;https://packetstormsecurity.com/files/167730/JBOSS-EAP-AS-6.x-Remote-Code-Execution.html https://s3.amazonaws.com/files.joaomatosf.com/slides/alligator_slides.pdf&#xA;&#xA;thinkphp任意文件读取&#x9;2018/12/9&#x9;历史真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-11895&#xA;&#xA;明御Web应用防火墙任意登录&#x9;2022/7/24&#x9;历史真实漏洞，安恒已辟谣存在新近漏洞&#x9;http://cn-sec.com/archives/1196646.html&#xA;&#xA;Laravel存在命令执行漏洞（CNVD-2022-44351）&#x9;2022/6/7&#x9;新近真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-8513&#xA;&#xA;安恒web应用防火墙远程命令执行漏洞&#x9;2022/7/24&#x9;历史真实漏洞，安恒已辟谣存在新近漏洞&#x9;https://mp.weixin.qq.com/s/VdCjgxDL9qoAWIax5G3e0g http://cn-sec.com/archives/1196646.html&#xA;&#xA;某软sdp软件定义边界系统命令执行漏洞&#x9;&#x9;无已知公开的与情报对应的新近漏洞&#x9;&#xA;&#xA;某软网络准入控制系统反序列化漏洞&#x9;&#x9;无已知公开的与情报对应的新近漏洞&#x9;&#xA;&#xA;某某服VPN存在远程缓冲区溢出漏洞（非web端口）&#x9;&#x9;无已知公开的与情报对应的新近漏洞，深信服已辟谣，历史相关的漏洞见相关链接&#x9;https://security.sangfor.com.cn/index.php?m=&amp;amp;c=page&amp;amp;a=view&amp;amp;id=19 https://security.sangfor.com.cn/index.php?m=&amp;amp;c=page&amp;amp;a=view&amp;amp;id=18&#xA;&#xA;某盟NF防火墙版本&amp;lt;6.0.3.198存在远程命令执行漏洞&#x9;&#x9;无已知公开的与情报对应的新近漏洞&#x9;&#xA;&#xA;qax天擎版本&amp;lt;6.7.0.4910存在安全漏洞&#x9;&#x9;无已知公开的与情报对应的新近漏洞&#x9;&#xA;&#xA;通达 OA 后台 SQL 注入漏洞&#x9;2022/7/25&#x9;新近真实漏洞&#x9;https://mp.weixin.qq.com/s/HU-KxA75PR3u47QOqKWktQ&#xA;&#xA;通达 OA 后台文件上传漏洞&#x9;2022/7/25&#x9;新近真实漏洞&#x9;https://mp.weixin.qq.com/s/HU-KxA75PR3u47QOqKWktQ&#xA;&#xA;华天动力OA前台任意文件上传漏洞&#x9;2022/7/25&#x9;存在性未确认，且大概率不影响最新版本&#x9;&#xA;&#xA;启明星辰天玥网络安全审计系统SQL注入0day&#x9;2021/7/15&#x9;历史真实漏洞&#x9;https://woj.app/7183.html&#xA;&#xA;uniview监控设备oday&#x9;2018/2/7&#x9;历史真实漏洞&#x9;https://vulners.com/zdt/1337DAY-ID-29739&#xA;&#xA;蓝凌OA授权RCE和未授权RCE&#x9;2022/7/12&#x9;新近真实漏洞&#x9;https://mp.weixin.qq.com/s/zV4h5d9DrI7Nm49suSzIWw&#xA;&#xA;PHP 8.1.0-dev RCE&#x9;2021/5/23&#x9;历史真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2021-27111&#xA;&#xA;泛微Office 10 SQL注入漏洞&#x9;2021/8/13&#x9;历史真实漏洞&#x9;https://www.buaq.net/go-86552.html&#xA;&#xA;org.webjars:dojo 包 &amp;lt;1.17.2 多个漏洞&#x9;2021/7/31&#x9;历史真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2021-3594&#xA;&#xA;锐捷网络设备多个存在逻辑漏洞，可绕过身份验证登录多个系统&#x9;2022/6/21&#x9;新近真实漏洞&#x9;&#xA;&#xA;疑似用友NC 0day&#x9;2021/11/15&#x9;历史真实漏洞&#x9;https://www.cnsrc.org.cn/hw/1911.html https://decoded.avast.io/janneduchal/analysis-of-attack-against-national-games-of-china-systems/&#xA;&#xA;Coremail Air邮件客户端附件后缀名显示不正确&#x9;2022/7/26&#x9;新近真实漏洞，厂商已确认&#x9;https://community.icoremail.net/article/460?bsh_bid=5789296111&#xA;&#xA;泛微 V9 文件上传漏洞&#x9;2022/7/26&#x9;存在性未确认&#x9;&#xA;&#xA;小鱼易连疑似0day&#x9;2022/7/26&#x9;存在性未确认&#x9;&#xA;&#xA;泛微 E-office 文件包含漏洞(CNVD-2022-43247)&#x9;2022/6/8&#x9;新近真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-11900&#xA;&#xA;泛微 E-office SQL 注入漏洞(CNVD-2022-43246)&#x9;2022/6/8&#x9;新近真实漏洞&#x9;https://nox.qianxin.com/vulnerability/detail/QVD-2022-11899&#xA;&#xA;禅道 v16.5 SQL注入漏洞&#x9;2022/7/25&#x9;新近真实漏洞&#x9;https://github.com/z92g/ZentaoSqli&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>cri-o/cri-o</title>
    <updated>2022-08-06T01:41:54Z</updated>
    <id>tag:github.com,2022-08-06:/cri-o/cri-o</id>
    <link href="https://github.com/cri-o/cri-o" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Container Initiative-based implementation of Kubernetes Container Runtime Interface&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/cri-o/cri-o/raw/main/logo/crio-logo.svg?raw=true&#34; alt=&#34;CRI-O logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CRI-O - OCI-based implementation of Kubernetes Container Runtime Interface&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;Stable Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/cri-o/cri-o&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/cri-o/cri-o/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cri-o.github.io/cri-o&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-notes-blue.svg?sanitize=true&#34; alt=&#34;Release Notes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cri-o.github.io/cri-o/dependencies&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/report-dependencies-blue.svg?sanitize=true&#34; alt=&#34;Dependencies&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/cri-o/cri-o&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/cri-o/cri-o?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/2298&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/2298/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/cri-o/cri-o&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/cri-o/cri-o&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fcri-o%2Fcri-o?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fcri-o%2Fcri-o.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/awesome.md&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome CRI-O&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/cri-o/cri-o&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility matrix: CRI-O ⬄ Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;CRI-O follows the Kubernetes release cycles with respect to its minor versions (&lt;code&gt;1.x.0&lt;/code&gt;). Patch releases (&lt;code&gt;1.x.y&lt;/code&gt;) for CRI-O are not in sync with those from Kubernetes, because those are scheduled for each month, whereas CRI-O provides them only if necessary. If a Kubernetes release goes &lt;a href=&#34;https://kubernetes.io/releases/patch-releases/&#34;&gt;End of Life&lt;/a&gt;, then the corresponding CRI-O version can be considered in the same way.&lt;/p&gt; &#xA;&lt;p&gt;This means that CRI-O also follows the Kubernetes &lt;code&gt;n-2&lt;/code&gt; release version skew policy when it comes to feature graduation, deprecation or removal. This also applies to features which are independent from Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;For more information visit the &lt;a href=&#34;https://kubernetes.io/releases/version-skew-policy/&#34;&gt;Kubernetes Version Skew Policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version - Branch&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes branch/version&lt;/th&gt; &#xA;   &lt;th&gt;Maintenance status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CRI-O HEAD - main&lt;/td&gt; &#xA;   &lt;td&gt;Kubernetes master branch&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CRI-O 1.24.x - release-1.24&lt;/td&gt; &#xA;   &lt;td&gt;Kubernetes 1.24 branch, v1.24.x&lt;/td&gt; &#xA;   &lt;td&gt;=&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CRI-O 1.23.x - release-1.23&lt;/td&gt; &#xA;   &lt;td&gt;Kubernetes 1.23 branch, v1.23.x&lt;/td&gt; &#xA;   &lt;td&gt;=&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CRI-O 1.22.x - release-1.22&lt;/td&gt; &#xA;   &lt;td&gt;Kubernetes 1.22 branch, v1.22.x&lt;/td&gt; &#xA;   &lt;td&gt;=&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CRI-O 1.21.x - release-1.21&lt;/td&gt; &#xA;   &lt;td&gt;Kubernetes 1.21 branch, v1.21.x&lt;/td&gt; &#xA;   &lt;td&gt;=&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Key:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;✓&lt;/code&gt; Changes in the main Kubernetes repo about CRI are actively implemented in CRI-O&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;=&lt;/code&gt; Maintenance is manual, only bugs will be patched.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The release notes for CRI-O are hand-crafted and can be continuously retrieved from &lt;a href=&#34;https://cri-o.github.io/cri-o&#34;&gt;our GitHub pages website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is the scope of this project?&lt;/h2&gt; &#xA;&lt;p&gt;CRI-O is meant to provide an integration path between OCI conformant runtimes and the Kubelet. Specifically, it implements the Kubelet &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/container-runtime-interface.md&#34;&gt;Container Runtime Interface (CRI)&lt;/a&gt; using OCI conformant runtimes. The scope of CRI-O is tied to the scope of the CRI.&lt;/p&gt; &#xA;&lt;p&gt;At a high level, we expect the scope of CRI-O to be restricted to the following functionalities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support multiple image formats including the existing Docker image format&lt;/li&gt; &#xA; &lt;li&gt;Support for multiple means to download images including trust &amp;amp; image verification&lt;/li&gt; &#xA; &lt;li&gt;Container image management (managing image layers, overlay filesystems, etc)&lt;/li&gt; &#xA; &lt;li&gt;Container process lifecycle management&lt;/li&gt; &#xA; &lt;li&gt;Monitoring and logging required to satisfy the CRI&lt;/li&gt; &#xA; &lt;li&gt;Resource isolation as required by the CRI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is not in the scope of this project?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Building, signing and pushing images to various image storages&lt;/li&gt; &#xA; &lt;li&gt;A CLI utility for interacting with CRI-O. Any CLIs built as part of this project are only meant for testing this project and there will be no guarantees on the backward compatibility with it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is an implementation of the Kubernetes Container Runtime Interface (CRI) that will allow Kubernetes to directly launch and manage Open Container Initiative (OCI) containers.&lt;/p&gt; &#xA;&lt;p&gt;The plan is to use OCI projects and best of breed libraries for different aspects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Runtime: &lt;a href=&#34;https://github.com/opencontainers/runc&#34;&gt;runc&lt;/a&gt; (or any OCI runtime-spec implementation) and &lt;a href=&#34;https://github.com/opencontainers/runtime-tools&#34;&gt;oci runtime tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Images: Image management using &lt;a href=&#34;https://github.com/containers/image&#34;&gt;containers/image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Storage: Storage and management of image layers using &lt;a href=&#34;https://github.com/containers/storage&#34;&gt;containers/storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Networking: Networking support through the use of &lt;a href=&#34;https://github.com/containernetworking/cni&#34;&gt;CNI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is currently in active development in the Kubernetes community through the &lt;a href=&#34;https://github.com/kubernetes/kubernetes/pull/26788&#34;&gt;design proposal&lt;/a&gt;. Questions and issues should be raised in the Kubernetes &lt;a href=&#34;https://kubernetes.slack.com/archives/sig-node&#34;&gt;sig-node Slack channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/docs/crio.8.md&#34;&gt;crio(8)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OCI Kubernetes Container Runtime daemon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note that kpod and its container management and debugging commands have moved to a separate repository, located &lt;a href=&#34;https://github.com/containers/podman&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;File&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/docs/crio.conf.5.md&#34;&gt;crio.conf(5)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CRI-O Configuration file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/containers/image/raw/main/docs/containers-policy.json.5.md&#34;&gt;policy.json(5)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Signature Verification Policy File(s)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/containers/image/raw/main/docs/containers-registries.conf.5.md&#34;&gt;registries.conf(5)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Registries Configuration file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/containers/storage/raw/main/docs/containers-storage.conf.5.md&#34;&gt;storage.conf(5)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Storage Configuration file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;OCI Hooks Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/containers/podman/raw/v3.0.1/pkg/hooks/README.md&#34;&gt;You can configure CRI-O&lt;/a&gt; to inject &lt;a href=&#34;https://github.com/opencontainers/runtime-spec/raw/v1.0.1/config.md#posix-platform-hooks&#34;&gt;OCI Hooks&lt;/a&gt; when creating containers.&lt;/p&gt; &#xA;&lt;h2&gt;CRI-O Usage Transfer&lt;/h2&gt; &#xA;&lt;p&gt;We provide &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/transfer.md&#34;&gt;useful information for operations and development transfer&lt;/a&gt; as it relates to infrastructure that utilizes CRI-O.&lt;/p&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;p&gt;For async communication and long running discussions please use issues and pull requests on the GitHub repo. This will be the best place to discuss design and implementation.&lt;/p&gt; &#xA;&lt;p&gt;For chat communication, we have a &lt;a href=&#34;https://kubernetes.slack.com/archives/crio&#34;&gt;channel on the Kubernetes slack&lt;/a&gt; that everyone is welcome to join and chat about development.&lt;/p&gt; &#xA;&lt;h2&gt;Awesome CRI-O&lt;/h2&gt; &#xA;&lt;p&gt;We maintain a curated &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/awesome.md&#34;&gt;list of links related to CRI-O&lt;/a&gt;. Did you find something interesting on the web about the project? Awesome, feel free to open up a PR and add it to the list.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Installing CRI-O&lt;/h3&gt; &#xA;&lt;p&gt;To install &lt;code&gt;CRI-O&lt;/code&gt;, you can follow our &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/install.md&#34;&gt;installation guide&lt;/a&gt;. Alternatively, if you&#39;d rather build &lt;code&gt;CRI-O&lt;/code&gt; from source, checkout our &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/install.md#build-and-install-cri-o-from-source&#34;&gt;setup guide&lt;/a&gt;. We also provide a way in building &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/install.md#static-builds&#34;&gt;static binaries of &lt;code&gt;CRI-O&lt;/code&gt;&lt;/a&gt; via nix. Those binaries are available for every successfully built commit on our &lt;a href=&#34;https://console.cloud.google.com/storage/browser/cri-o/artifacts&#34;&gt;Google Cloud Storage Bucket&lt;/a&gt;. This means that the latest commit can be installed via our convenience script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt; curl https://raw.githubusercontent.com/cri-o/cri-o/main/scripts/get | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script automatically verifies the uploaded sigstore signatures as well, if the local system has &lt;a href=&#34;https://github.com/sigstore/cosign&#34;&gt;&lt;code&gt;cosign&lt;/code&gt;&lt;/a&gt; available in its &lt;code&gt;$PATH&lt;/code&gt;. The same applies to the &lt;a href=&#34;https://spdx.org&#34;&gt;SPDX&lt;/a&gt; based bill of materials (SBOM), which gets automatically verified if the &lt;a href=&#34;https://sigs.k8s.io/bom&#34;&gt;bom&lt;/a&gt; tool is in &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Beside &lt;code&gt;amd64&lt;/code&gt; we also support the &lt;code&gt;arm64&lt;/code&gt; bit architecture. This can be selected via the script, too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt; curl https://raw.githubusercontent.com/cri-o/cri-o/main/scripts/get | bash -s -- -a arm64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is also possible to select a specific git SHA or tag by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt; curl https://raw.githubusercontent.com/cri-o/cri-o/main/scripts/get | bash -s -- -t v1.21.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above script resolves to the download URL of the static binary bundle tarball matching the format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://storage.googleapis.com/cri-o/artifacts/cri-o.$ARCH.$REV.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;$ARCH&lt;/code&gt; can be &lt;code&gt;amd64&lt;/code&gt; or &lt;code&gt;arm64&lt;/code&gt; and &lt;code&gt;$REV&lt;/code&gt; can be any git SHA or tag. Please be aware that using the latest &lt;code&gt;main&lt;/code&gt; SHA might cause a race, because the CI has not finished publishing the artifacts yet or failed.&lt;/p&gt; &#xA;&lt;p&gt;We also provide a Software Bill of Materials (SBOM) in the &lt;a href=&#34;https://spdx.org&#34;&gt;SPDX format&lt;/a&gt; for each bundle. The SBOM is available at the same URL like the bundle itself, but suffixed with &lt;code&gt;.spdx&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://storage.googleapis.com/cri-o/artifacts/cri-o.$ARCH.$REV.tar.gz.spdx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Kubernetes with CRI-O&lt;/h3&gt; &#xA;&lt;p&gt;Before you begin, you&#39;ll need to &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/install.md#starting-cri-o&#34;&gt;start CRI-O&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can run a local version of Kubernetes with &lt;code&gt;CRI-O&lt;/code&gt; using &lt;code&gt;local-up-cluster.sh&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the &lt;a href=&#34;https://github.com/kubernetes/kubernetes&#34;&gt;Kubernetes repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;From the Kubernetes project directory, run:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;CGROUP_DRIVER=systemd \&#xA;CONTAINER_RUNTIME=remote \&#xA;CONTAINER_RUNTIME_ENDPOINT=&#39;unix:///var/run/crio/crio.sock&#39; \&#xA;./hack/local-up-cluster.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more guidance in running &lt;code&gt;CRI-O&lt;/code&gt;, visit our &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/tutorial.md&#34;&gt;tutorial page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;The HTTP status API&lt;/h4&gt; &#xA;&lt;p&gt;CRI-O exposes per default the &lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt; API to fulfill the Container Runtime Interface (CRI) of Kubernetes. Besides this, there exists an additional HTTP API to retrieve further runtime status information about CRI-O. Please be aware that this API is not considered to be stable and production use-cases should not rely on it.&lt;/p&gt; &#xA;&lt;p&gt;On a running CRI-O instance, we can access the API via an HTTP transfer tool like &lt;a href=&#34;https://curl.haxx.se&#34;&gt;curl&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo curl -v --unix-socket /var/run/crio/crio.sock http://localhost/info | jq&#xA;{&#xA;  &#34;storage_driver&#34;: &#34;btrfs&#34;,&#xA;  &#34;storage_root&#34;: &#34;/var/lib/containers/storage&#34;,&#xA;  &#34;cgroup_driver&#34;: &#34;systemd&#34;,&#xA;  &#34;default_id_mappings&#34;: { ... }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following API entry points are currently supported:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Path&lt;/th&gt; &#xA;   &lt;th&gt;Content-Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/info&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;General information about the runtime, like &lt;code&gt;storage_driver&lt;/code&gt; and &lt;code&gt;storage_root&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/containers/:id&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dedicated container information, like &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;pid&lt;/code&gt; and &lt;code&gt;image&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;application/toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The complete TOML configuration (defaults to &lt;code&gt;/etc/crio/crio.conf&lt;/code&gt;) used by CRI-O.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/pause/:id&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pause a running container.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/unpause/:id&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unpause a paused container.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The tool &lt;code&gt;crio-status&lt;/code&gt; can be used to access the API with a dedicated command line tool. It supports all API endpoints via the dedicated subcommands &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt; and &lt;code&gt;containers&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo go run cmd/crio-status/main.go info&#xA;cgroup driver: systemd&#xA;storage driver: btrfs&#xA;storage root: /var/lib/containers/storage&#xA;default GID mappings (format &amp;lt;container&amp;gt;:&amp;lt;host&amp;gt;:&amp;lt;size&amp;gt;):&#xA;  0:0:4294967295&#xA;default UID mappings (format &amp;lt;container&amp;gt;:&amp;lt;host&amp;gt;:&amp;lt;size&amp;gt;):&#xA;  0:0:4294967295&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Metrics&lt;/h4&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/tutorials/metrics.md&#34;&gt;CRI-O Metrics guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Container Runtime Interface special cases&lt;/h4&gt; &#xA;&lt;p&gt;Some aspects of the Container Runtime are worth some additional explanation. These details are summarized in a &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/cri.md&#34;&gt;dedicated guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Debugging tips&lt;/h4&gt; &#xA;&lt;p&gt;Having an issue? There are some tips and tricks for debugging located in &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/tutorials/debugging.md&#34;&gt;our debugging guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;An incomplete list of adopters of CRI-O in production environments can be found &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/ADOPTERS.md&#34;&gt;here&lt;/a&gt;. If you&#39;re a user, please help us complete it by submitting a pull-request!&lt;/p&gt; &#xA;&lt;h2&gt;Weekly Meeting&lt;/h2&gt; &#xA;&lt;p&gt;A weekly meeting is held to discuss CRI-O development. It is open to everyone. The details to join the meeting are on the &lt;a href=&#34;https://github.com/cri-o/cri-o/wiki/CRI-O-Weekly-Meeting&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;For more information on how CRI-O is goverened, take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/cri-o/cri-o/main/GOVERNANCE.md&#34;&gt;governance file&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License Scan&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fcri-o%2Fcri-o?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fcri-o%2Fcri-o.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>asg017/sqlite-html</title>
    <updated>2022-08-06T01:41:54Z</updated>
    <id>tag:github.com,2022-08-06:/asg017/sqlite-html</id>
    <link href="https://github.com/asg017/sqlite-html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A SQLite extension for querying, manipulating, and creating HTML elements.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sqlite-html&lt;/h1&gt; &#xA;&lt;p&gt;A SQLite extension for querying, manipulating, and creating HTML elements.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extract HTML or text from HTML with CSS selectors, like &lt;code&gt;.querySelector()&lt;/code&gt;, &lt;code&gt;.innerHTML&lt;/code&gt;, and &lt;code&gt;.innerText&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate a table of matching elements from a CSS selector, like &lt;code&gt;.querySelectorAll()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Safely create HTML elements in a query, like &lt;code&gt;.createElement()&lt;/code&gt; and &lt;code&gt;.appendChild()&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;sqlite-html&lt;/code&gt;&#39;s API is modeled after the official &lt;a href=&#34;https://www.sqlite.org/json1.html#jmini&#34;&gt;JSON1&lt;/a&gt; SQLite extension.&lt;/p&gt; &#xA;&lt;p&gt;This extension is written in Go, thanks to &lt;a href=&#34;https://github.com/riyaz-ali/sqlite&#34;&gt;riyaz-ali/sqlite&lt;/a&gt;. While this library aims to be fast and efficient, it is overall slower than what a pure C SQLite extension could be, but in practice you may not notice much of a difference.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;.load ./html0&#xA;select html_extract(&#39;&amp;lt;p&amp;gt; Anakin &amp;lt;b&amp;gt;Skywalker&amp;lt;/b&amp;gt; &amp;lt;/p&amp;gt;&#39;, &#39;b&#39;);&#xA;-- &#34;&amp;lt;b&amp;gt;Skywalker&amp;lt;/b&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;sqlite-html&lt;/code&gt; is similar to other HTML scraping tools like &lt;a href=&#34;https://beautiful-soup-4.readthedocs.io/en/latest/&#34;&gt;BeautifulSoup&lt;/a&gt; (Python) or &lt;a href=&#34;https://cheerio.js.org/&#34;&gt;cheerio&lt;/a&gt; (Node.js) or &lt;a href=&#34;https://nokogiri.org/&#34;&gt;nokogiri&lt;/a&gt; (Ruby). You can use CSS selectors to extract individual elements or groups of elements to query data from HTML sources.&lt;/p&gt; &#xA;&lt;p&gt;For example, here we find all &lt;code&gt;href&lt;/code&gt; links in an &lt;code&gt;index.html&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select&#xA;  text as name,&#xA;  html_attribute_get(anchors, &#39;a&#39;, &#39;href&#39;) as href&#xA;from html_each(readfile(&#39;index.html&#39;), &#39;a&#39;) as anchors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can also safely generate HTML with &lt;code&gt;html_element&lt;/code&gt;, modeled after React&#39;s &lt;a href=&#34;https://reactjs.org/docs/react-api.html#createelement&#34;&gt;&lt;code&gt;React.createElement&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select html_element(&#39;p&#39;, null,&#xA;  &#39;Luke, I am your&#39;,&#xA;  html_element(&#39;b&#39;, null, &#39;father&#39;),&#xA;  &#39;!&#39;,&#xA;&#xA;  html_element(&#39;img&#39;, json_object(&#xA;    &#39;src&#39;, &#39;https://images.dog.ceo/breeds/groenendael/n02105056_4600.jpg&#39;,&#xA;    &#39;width&#39;, 200&#xA;  ))&#xA;);&#xA;&#xA;-- &#34;&amp;lt;p&amp;gt;Luke, I am your&amp;lt;b&amp;gt;father&amp;lt;/b&amp;gt;!&amp;lt;img src=&#34;https://images.dog.ceo/breeds/groenendael/n02105056_4600.jpg&#34; width=&#34;200.000000&#34;/&amp;gt;&amp;lt;/p&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/asg017/sqlite-html/main/docs.md&#34;&gt;&lt;code&gt;docs.md&lt;/code&gt;&lt;/a&gt; for a full API reference.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/asg017/sqlite-lines/releases&#34;&gt;Releases page&lt;/a&gt; contains pre-built binaries for Linux amd64, MacOS amd64 (no arm), and Windows.&lt;/p&gt; &#xA;&lt;h3&gt;As a loadable extension&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use &lt;code&gt;sqlite-html&lt;/code&gt; as a &lt;a href=&#34;https://www.sqlite.org/loadext.html&#34;&gt;Runtime-loadable extension&lt;/a&gt;, Download the &lt;code&gt;html0.dylib&lt;/code&gt; (for MacOS), &lt;code&gt;html0.so&lt;/code&gt; (Linux), or &lt;code&gt;html0.dll&lt;/code&gt; (Windows) file from a release and load it into your SQLite environment.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;0&lt;/code&gt; in the filename (&lt;code&gt;html0.dylib&lt;/code&gt;/ &lt;code&gt;html0.so&lt;/code&gt;/&lt;code&gt;html0.dll&lt;/code&gt;) denotes the major version of &lt;code&gt;sqlite-html&lt;/code&gt;. Currently &lt;code&gt;sqlite-html&lt;/code&gt; is pre v1, so expect breaking changes in future versions.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For example, if you are using the &lt;a href=&#34;https://www.sqlite.org/cli.html&#34;&gt;SQLite CLI&lt;/a&gt;, you can load the library like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;.load ./html0&#xA;select html_version();&#xA;-- v0.0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or in Python, using the builtin &lt;a href=&#34;https://docs.python.org/3/library/sqlite3.html&#34;&gt;sqlite3 module&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sqlite3&#xA;&#xA;con = sqlite3.connect(&#34;:memory:&#34;)&#xA;&#xA;con.enable_load_extension(True)&#xA;con.load_extension(&#34;./html0&#34;)&#xA;&#xA;print(con.execute(&#34;select html_version()&#34;).fetchone())&#xA;# (&#39;v0.0.1&#39;,)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or in Node.js using &lt;a href=&#34;https://github.com/WiseLibs/better-sqlite3&#34;&gt;better-sqlite3&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Database = require(&#34;better-sqlite3&#34;);&#xA;const db = new Database(&#34;:memory:&#34;);&#xA;&#xA;db.loadExtension(&#34;./lines0&#34;);&#xA;&#xA;console.log(db.prepare(&#34;select html_version()&#34;).get());&#xA;// { &#39;html_version()&#39;: &#39;v0.0.1&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with &lt;a href=&#34;https://datasette.io/&#34;&gt;Datasette&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;datasette data.db --load-extension ./html0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/asg017/sqlite-http&#34;&gt;sqlite-http&lt;/a&gt;, for making HTTP requests in SQLite (pairs great with this tool)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mgdm/htmlq&#34;&gt;htmlq&lt;/a&gt;, for a similar but CLI-based HTML query tool using CSS selectors&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/riyaz-ali/sqlite&#34;&gt;riyaz-ali/sqlite&lt;/a&gt;, the brilliant Go library that this library depends on&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nalgeon/sqlean&#34;&gt;nalgeon/sqlean&lt;/a&gt;, several pre-compiled handy SQLite functions, in C&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>