<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-01T01:31:42Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cloudfoundry/cf-deployment</title>
    <updated>2024-07-01T01:31:42Z</updated>
    <id>tag:github.com,2024-07-01:/cloudfoundry/cf-deployment</id>
    <link href="https://github.com/cloudfoundry/cf-deployment" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The canonical open source deployment manifest for Cloud Foundry&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cf-deployment&lt;/h1&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#purpose&#34;&gt;Purpose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#tls&#34;&gt;TLS validation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#deploying-cf&#34;&gt;Deploying CF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#versioning&#34;&gt;Release Versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#setup&#34;&gt;Setup and Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#ops-files&#34;&gt;Ops Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#ci&#34;&gt;CI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#vars-store&#34;&gt;Migrating from Vars-Store to CredHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/#migrating&#34;&gt;Migrating from cf-release to cf-deployment&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;purpose&#34;&gt;&lt;/a&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains a canonical &lt;a href=&#34;http://bosh.io/docs&#34;&gt;BOSH&lt;/a&gt; deployment manifest for deploying the Cloud Foundry Application Runtime by relying individual component releases. It uses several newer features of the BOSH director and CLI. Older directors may need to be upgraded and have their configurations extended in order to support &lt;code&gt;cf-deployment&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cf-deployment&lt;/code&gt; embodies several opinions about the CF Application Runtime. It:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;prioritizes readability and meaning to a human operator. For instance, only necessary configuration is included.&lt;/li&gt; &#xA; &lt;li&gt;emphasizes security by default. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CredHub is used to generate strong passwords, certs, and keys. There are no default credentials, even in bosh-lite.&lt;/li&gt; &#xA;   &lt;li&gt;TLS/SSL features are enabled on every job which supports TLS.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;uses two AZs to provide redundancy for most instance groups.&lt;/li&gt; &#xA; &lt;li&gt;uses &lt;a href=&#34;http://docs.cloudfoundry.org/concepts/diego/diego-architecture.html&#34;&gt;Diego&lt;/a&gt; (&lt;a href=&#34;https://github.com/cloudfoundry/diego-release&#34;&gt;source code&lt;/a&gt;) by default.&lt;/li&gt; &#xA; &lt;li&gt;deploys jobs to handle platform data persistence using singleton versions of the &lt;code&gt;PXC&lt;/code&gt; release for databases and the CAPI release&#39;s singleton WebDAV job for blob storage. See the &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/texts/deployment-guide.md#databases&#34;&gt;database&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/texts/deployment-guide.md#blobstore&#34;&gt;blobstore&lt;/a&gt; sections of the deployment guide for more information.&lt;/li&gt; &#xA; &lt;li&gt;assumes load-balancing will be handled by the IaaS or an external deployment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;tls&#34;&gt;&lt;/a&gt; TLS validation&lt;/h2&gt; &#xA;&lt;p&gt;Many test, development, and &#34;getting started&#34; environments do not have valid &lt;code&gt;TLS&lt;/code&gt; certificates installed in their load balancers. For ease of use in such environments, &lt;code&gt;cf-deployment&lt;/code&gt; skips &lt;code&gt;TLS&lt;/code&gt; validation on some components that access each other via the &#34;front door&#34; of the Cloud Foundry load balancer.&lt;/p&gt; &#xA;&lt;p&gt;Deployers who have valid or otherwise trusted load balancer certificates should use the &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/stop-skipping-tls-validation.yml&#34;&gt;stop-skipping-tls-validation.yml&lt;/a&gt; opsfile to force the validation of &lt;code&gt;TLS&lt;/code&gt; certificates for all components.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;deploying-cf&#34;&gt;&lt;/a&gt;Deploying CF&lt;/h2&gt; &#xA;&lt;p&gt;Deployment instructions are verbose so we&#39;ve moved them into a &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/texts/deployment-guide.md&#34;&gt;dedicated deployment guide here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;versioning&#34;&gt;&lt;/a&gt;Release Versioning&lt;/h2&gt; &#xA;&lt;p&gt;The Semantic Versioning scheme has been adopted by cf-deployment. A detailed description of how &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/texts/versioning.md&#34;&gt;Semantic Versioning is applied to CF-Deployment can be found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;contributing&#34;&gt;&lt;/a&gt;Contributing to CF-Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Although the default branch for the repository is &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment/tree/main&#34;&gt;&lt;code&gt;main&lt;/code&gt;&lt;/a&gt;, we ask that all pull requests be made against the &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment/tree/develop&#34;&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Please fill out the &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment/raw/main/PULL_REQUEST_TEMPLATE.md&#34;&gt;PR Template&lt;/a&gt;&lt;/strong&gt; when submitting pull requests. The information requested in the PR form provides important context for the team responsible for evaluating your submission.&lt;/li&gt; &#xA; &lt;li&gt;Please also take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/texts/style-guide.md&#34;&gt;&#34;style guide&#34;&lt;/a&gt;, which lays out some guidelines for adding properties or jobs to the deployment manifest.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Before submitting a pull request or pushing to the develop branch of cf-deployment, please:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;run &lt;code&gt;./units/test&lt;/code&gt; which interpolates all of our ops files with the &lt;code&gt;bosh&lt;/code&gt; cli. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;By default, the test suite omits &lt;code&gt;semantic&lt;/code&gt; tests, which require both &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt; and &lt;a href=&#34;https://github.com/mikefarah/yq&#34;&gt;yq&lt;/a&gt; installed.&lt;/li&gt; &#xA;   &lt;li&gt;If you wish to run them, please install these requirements and set &lt;code&gt;RUN_SEMANTIC=true&lt;/code&gt; in your environment.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; it is necessary to run the tests from the root of the repo.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;confirm your changes can be successfully deployed with the &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment/releases&#34;&gt;latest release of cf-deployment&lt;/a&gt; and tested with the latest version of &lt;a href=&#34;https://github.com/cloudfoundry/cf-acceptance-tests/releases&#34;&gt;CAT&#39;s&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If modifying backup and restore, run &lt;code&gt;./scripts/test&lt;/code&gt; which runs a legacy bash suite for backup and restore ops. &lt;strong&gt;If you&#39;re adding an Ops-file, you will need to:&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;document it in its corresponding README.&lt;/li&gt; &#xA; &lt;li&gt;add it to the ops file tests in &lt;code&gt;units/test&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you&#39;re promoting or deprecating Ops-file, please follow &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment/raw/main/ops-file-promotion-workflow.md&#34;&gt;Ops-file workflows&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;setup&#34;&gt;&lt;/a&gt;Setup and Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cf-deployment&lt;/code&gt; requires a bosh director with a valid cloud-config that has been configured with a certificate authority. It also requires the &lt;code&gt;bosh&lt;/code&gt; CLI, which it relies on to generate and fill-in needed variables.&lt;/p&gt; &#xA;&lt;h3&gt;BOSH director and stemcells&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cf-deployment&lt;/code&gt; requires both &lt;a href=&#34;https://github.com/cloudfoundry/bosh/releases&#34;&gt;BOSH&lt;/a&gt; and &lt;a href=&#34;https://bosh.io/stemcells/&#34;&gt;Linux stemcells&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;BOSH CLI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cf-deployment&lt;/code&gt; requires the &lt;a href=&#34;https://github.com/cloudfoundry/bosh-cli&#34;&gt;BOSH CLI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;BOSH &lt;code&gt;cloud-config&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cf-deployment&lt;/code&gt; assumes that you&#39;ve uploaded a compatible &lt;a href=&#34;http://bosh.io/docs/cloud-config.html&#34;&gt;cloud-config&lt;/a&gt; to the BOSH director prior to deploying your foundation.&lt;/p&gt; &#xA;&lt;p&gt;The cloud-config produced by &lt;code&gt;bbl&lt;/code&gt; covers GCP, AWS, and Azure, and is compatible by default.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment/tree/main/iaas-support&#34;&gt;&lt;code&gt;iaas-support&lt;/code&gt;&lt;/a&gt; directory includes tools and templates for building cloud-configs for other IaaSes, including bosh-lite, vSphere, Openstack, and Alibaba Cloud.&lt;/p&gt; &#xA;&lt;p&gt;For other IaaSes, you may need to do some engineering work to figure out the right cloud config (and possibly ops files) to get it working for &lt;code&gt;cf-deployment&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;BOSH &lt;code&gt;runtime-config&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cf-deployment&lt;/code&gt; requires that you have uploaded a &lt;a href=&#34;https://bosh.io/docs/runtime-config/&#34;&gt;runtime-config&lt;/a&gt; for &lt;a href=&#34;https://bosh.io/docs/dns/&#34;&gt;BOSH DNS&lt;/a&gt; prior to deploying your foundation. We recommended that you use the one provided by the &lt;a href=&#34;https://github.com/cloudfoundry/bosh-deployment/raw/master/runtime-configs/dns.yml&#34;&gt;bosh-deployment&lt;/a&gt; repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bosh update-runtime-config bosh-deployment/runtime-configs/dns.yml --name dns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href=&#34;https://github.com/cloudfoundry/bosh-bootloader/releases/tag/v6.10.0&#34;&gt;BBL v6.10.0&lt;/a&gt; or later will set a runtime config including BOSH DNS when you &lt;code&gt;bbl up&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Deployment variables and CredHub&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cf-deployment.yml&lt;/code&gt; requires additional information to provide environment-specific or sensitive configuration such as the system domain and various credentials.&lt;/p&gt; &#xA;&lt;p&gt;To do this in the default configuration, we use &lt;a href=&#34;https://github.com/pivotal-cf/credhub-release&#34;&gt;CredHub&lt;/a&gt;, which is deployed on your BOSH director by default if you are using &lt;code&gt;bbl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Where necessary credential values are not present, CredHub will generate new values based on the type information stored in &lt;code&gt;cf-deployment.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Since &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment/releases/tag/v3.0.0&#34;&gt;&lt;code&gt;cf-deployment&lt;/code&gt; v3.0&lt;/a&gt;, CredHub has replaced the now deprecated BOSH &lt;code&gt;vars-store&lt;/code&gt; as the default way to store and generate credentials.&lt;/p&gt; &#xA;&lt;p&gt;Necessary variables that BOSH can&#39;t ask CredHub to generate need to be supplied as well.&lt;/p&gt; &#xA;&lt;p&gt;If the deployment includes only the base manifest (cf-deployment.yml), this is just the system domain. However, some ops files introduce additional variables. See the README summary for the particular ops files you&#39;re using for any additional necessary variables.&lt;/p&gt; &#xA;&lt;p&gt;There are three ways to supply such additional variables:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;They can be provided by passing individual &lt;code&gt;-v&lt;/code&gt; arguments. The syntax for &lt;code&gt;-v&lt;/code&gt; arguments is &lt;code&gt;-v &amp;lt;variable-name&amp;gt;=&amp;lt;variable-value&amp;gt;&lt;/code&gt;. This is the recommended method for supplying the system domain.&lt;/li&gt; &#xA; &lt;li&gt;They can be provided in a yaml file accessed from the command line with the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--vars-file&lt;/code&gt; flag. This is the recommended method for configuring external persistence services.&lt;/li&gt; &#xA; &lt;li&gt;They can be stored in CredHub directly with the &lt;a href=&#34;https://docs.cloudfoundry.org/api/credhub/&#34;&gt;CredHub CLI&lt;/a&gt;. If you do this, then you need follow variable namespacing rules respected by BOSH described &lt;a href=&#34;https://github.com/cloudfoundry-incubator/credhub/raw/master/docs/operator-quick-start.md#variable-namespacing&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;ops-files&#34;&gt;&lt;/a&gt;Ops Files&lt;/h2&gt; &#xA;&lt;p&gt;The configuration of CF represented by &lt;code&gt;cf-deployment.yml&lt;/code&gt; is a workable, secure, fully-featured default. When the need arises to make different configuration choices for your foundation, you can accomplish this with the &lt;code&gt;-o&lt;/code&gt;/&lt;code&gt;--ops-file&lt;/code&gt; flags. These flags read a single &lt;code&gt;.yml&lt;/code&gt; file that details operations to be performed on the manifest before variables are generated and filled. We&#39;ve supplied some common manifest modifications in the &lt;code&gt;operations&lt;/code&gt; directory. More details can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/README.md&#34;&gt;Ops-file README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The &lt;code&gt;operations&lt;/code&gt; subdirectories&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/addons&#34;&gt;Addons&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;These ops-files make changes to most or all instance groups. They can be applied to the BOSH Director&#39;s runtime config, or directly to an individual deployment manifest.&lt;/p&gt; &#xA;&lt;p&gt;The ops-file to configure platform component logging with rsyslog is such an add-on. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/addons/README.md&#34;&gt;Addon Ops-file README&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/community&#34;&gt;Community&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&#34;Community&#34; ops-files are contributed by the Cloud Foundry community. They are not maintained or supported by the Release Integration team. For details, see the &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/community/README.md&#34;&gt;Community Ops-file README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/experimental&#34;&gt;Experimental&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&#34;Experimental&#34; ops-files represent configurations that are in the process of being developed and/or validated. Once the configurations have been sufficiently validated, they will become part of cf-deployment.yml and the ops-files will be removed. For details, see the &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/experimental/README.md&#34;&gt;Experimental Ops-file README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/test&#34;&gt;Test&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&#34;Test&#34; ops-files are configurations that we run in our testing pipeline to enable certain features.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/cf-deployment/main/operations/backup-and-restore&#34;&gt;Backup and Restore&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Contains all the ops files utilized to enable and configure &lt;a href=&#34;https://github.com/cloudfoundry-incubator/bosh-backup-and-restore&#34;&gt;BOSH Backup and Restore&lt;/a&gt; (BBR). BBR is a CLI utility for orchestrating the backup and restore of &lt;a href=&#34;https://bosh.io/&#34;&gt;BOSH&lt;/a&gt; deployments and BOSH directors. It orchestrates triggering the backup or restore process on the deployment or director, and transfers the backup artifact to and from the deployment or director.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;ci&#34;&gt;&lt;/a&gt;CI&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://concourse.wg-ard.ci.cloudfoundry.org&#34;&gt;ci&lt;/a&gt; for &lt;code&gt;cf-deployment&lt;/code&gt; automatically bumps to the latest versions of its component releases on the &lt;code&gt;develop&lt;/code&gt; branch. These bumps, along with any other changes made to &lt;code&gt;develop&lt;/code&gt;, are deployed to a single long-running environment and tested with CATs before being merged to main if CATs goes green.&lt;/p&gt; &#xA;&lt;p&gt;Each version of cf-deployment is given a corresponding branch in the CATs repo, so that users can discover which version of CATs to run against their deployments. For example, if you&#39;ve deployed cf-deployment v6.10.0, check out the &lt;code&gt;cf6.10&lt;/code&gt; branch in cf-acceptance-tests to run CATs.&lt;/p&gt; &#xA;&lt;p&gt;The configuration for our pipeline can be found &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment/raw/develop/ci/pipelines/cf-deployment.yml&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;vars-store&#34;&gt;&lt;/a&gt;Migrating from Vars Store to CredHub&lt;/h2&gt; &#xA;&lt;p&gt;CredHub is default as of cf-deployment release v If you&#39;ve got a long running foundation running a release of cf-deployment that relies on &lt;code&gt;vars-store&lt;/code&gt; and want to upgrade to a version that&#39;s backed by CredHub, you will need to migrate your credentials from &lt;code&gt;vars-store&lt;/code&gt; to CredHub. We have a &lt;a href=&#34;https://github.com/ishustava/migrator&#34;&gt;utility&lt;/a&gt; to help you migrate.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;migrating&#34;&gt;&lt;/a&gt;Can I Transition from &lt;code&gt;cf-release&lt;/code&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;CF-Deployment replaces the [manifest generation scripts in cf-release][cf-release-url] which have been deprecated and are no longer supported by the Release Integration team. Although the team is no longer working on or supporting migrations from &lt;code&gt;cf-release&lt;/code&gt; to &lt;code&gt;cf-deployment&lt;/code&gt;, you can still find the tooling and documentation in the &lt;a href=&#34;https://github.com/cloudfoundry/cf-deployment-transition&#34;&gt;cf-deployment-transition repo&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>botlabs-gg/yagpdb</title>
    <updated>2024-07-01T01:31:42Z</updated>
    <id>tag:github.com,2024-07-01:/botlabs-gg/yagpdb</id>
    <link href="https://github.com/botlabs-gg/yagpdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Yet another general purpose discord bot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YAGPDB - Yet Another General Purpose Discord Bot&lt;/h1&gt; &#xA;&lt;p&gt;YAGPDB is a multifunctional, modular Discord bot. It is modular in the sense that for most things plugins exist -- However, some plugins may depend on other plugins.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;YouTube Feed&lt;/li&gt; &#xA; &lt;li&gt;Stream Announcements&lt;/li&gt; &#xA; &lt;li&gt;Server Stats&lt;/li&gt; &#xA; &lt;li&gt;Soundboard&lt;/li&gt; &#xA; &lt;li&gt;Reputation&lt;/li&gt; &#xA; &lt;li&gt;Reminders&lt;/li&gt; &#xA; &lt;li&gt;Reddit Feed&lt;/li&gt; &#xA; &lt;li&gt;Notifications&lt;/li&gt; &#xA; &lt;li&gt;Moderation&lt;/li&gt; &#xA; &lt;li&gt;Logs&lt;/li&gt; &#xA; &lt;li&gt;Custom Commands&lt;/li&gt; &#xA; &lt;li&gt;And More!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yagpdb.xyz&#34;&gt;Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/4udtcA5&#34;&gt;Support Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.yagpdb.xyz&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Selfhosting&lt;/h2&gt; &#xA;&lt;p&gt;There are two ways of selfhosting this bot: &lt;a href=&#34;https://raw.githubusercontent.com/botlabs-gg/yagpdb/master/#Hosting-Standalone&#34;&gt;standalone&lt;/a&gt;, or &lt;a href=&#34;https://raw.githubusercontent.com/botlabs-gg/yagpdb/master/#Hosting-Dockerized&#34;&gt;dockerized&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;General Bot Setup&lt;/h3&gt; &#xA;&lt;p&gt;Directions on creating an app and getting credentials may be found &lt;a href=&#34;https://github.com/reactiflux/discord-irc/wiki/Creating-a-discord-bot-&amp;amp;-getting-a-token&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;YAGPDB does not require you to authorize the bot: all of that will be handled via the Control Panel.&lt;/p&gt; &#xA;&lt;p&gt;In addition, you will need to add the following urls to the bot&#39;s &#34;REDIRECT URI(S)&#34; configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://YourHostNameHere/confirm_login&#34;&gt;https://YourHostNameHere/confirm_login&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://YourHostNameHere/manage&#34;&gt;https://YourHostNameHere/manage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hosting Dockerized&lt;/h3&gt; &#xA;&lt;p&gt;If you have docker-compose installed, that might be the fastest route of getting the bot up and running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/botlabs-gg/yagpdb&#xA;cp yagpdb/yagpdb_docker/{app.example.env,app.env}&#xA;cp yagpdb/yagpdb_docker/{db.example.env,db.env}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit both env files accordingly. Make sure ports 80 and 443 are accessible on your network and that you have a proper image in &lt;code&gt;docker-compose.yml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose -f yagpdb/yagpdb_docker/docker-compose.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can run the bot behind a proxy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker network create proxy-tier&#xA;docker-compose -p proxy yagpdb/yagpdb_docker/docker-compose.proxy.yml up&#xA;docker-compose -f yagpdb/yagpdb_docker/docker-compose.proxied.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;During development, use the &lt;code&gt;docker-compose.dev.yml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose -f yagpdb/yagpdb_docker/docker-compose.dev.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hosting Standalone&lt;/h3&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Golang 1.20 or above&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL 9.6 or later&lt;/li&gt; &#xA; &lt;li&gt;Redis version 5.x or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Setting Up&lt;/h4&gt; &#xA;&lt;p&gt;Configure Redis and Postgres with your desired settings.&lt;/p&gt; &#xA;&lt;p&gt;In postgres, create a new user &lt;code&gt;yagpdb&lt;/code&gt; and database &lt;code&gt;yagpdb&lt;/code&gt; and grant that user access to that database.&lt;/p&gt; &#xA;&lt;p&gt;Set up the environment variables with the credentials from the &lt;a href=&#34;https://raw.githubusercontent.com/botlabs-gg/yagpdb/master/#General-Bot-Setup&#34;&gt;general setup&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/botlabs-gg/yagpdb/master/cmd/yagpdb/sampleenvfile&#34;&gt;sample env file&lt;/a&gt; for a list of all enviroment variables.&lt;/p&gt; &#xA;&lt;p&gt;Afterwards, run the build script located at &lt;code&gt;/cmd/yagpdb/build.sh&lt;/code&gt; and start the bot using &lt;code&gt;./yagpdb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/botlabs-gg/yagpdb&#xA;cd yagpdb/cmd/yagpdb&#xA;sh build.sh&#xA;./yagpdb -all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;./yagpdb -help&lt;/code&gt; for all usable run flags. The webserver listens by default on ports 5000 (HTTP) and 5001 (HTTPS).&lt;/p&gt; &#xA;&lt;h2&gt;Databases&lt;/h2&gt; &#xA;&lt;p&gt;YAGPDB uses Redis for light data and caching, and postgresql for most configurations and heavy data, such as logs.&lt;/p&gt; &#xA;&lt;h3&gt;Updating&lt;/h3&gt; &#xA;&lt;p&gt;Updating with v1 and higher should migrate schemas automatically, but you should always make backups.&lt;/p&gt; &#xA;&lt;p&gt;Breaking changes can be found in breaking_changes.md, which should always be consulted before updating.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please view the &lt;a href=&#34;https://raw.githubusercontent.com/botlabs-gg/yagpdb/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; before submitting any contributions.&lt;/p&gt; &#xA;&lt;p&gt;See bot/plugin for info about bot plugins, web/plugin for web plugins and feeds/plugin for feeds if you wanna make a new fully fledged plugin.&lt;/p&gt; &#xA;&lt;p&gt;Expect web, bot and feed instances to be run separately.&lt;/p&gt; &#xA;&lt;p&gt;For basic utility/fun commands, you can just jam them in stdcommands. Use the existing commands there as an example of how to add one.&lt;/p&gt; &#xA;&lt;p&gt;Please check CONTRIBUTING.md for further details.&lt;/p&gt;</summary>
  </entry>
</feed>