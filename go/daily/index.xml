<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-08T01:36:02Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>arttor/helmify</title>
    <updated>2023-02-08T01:36:02Z</updated>
    <id>tag:github.com,2023-02-08:/arttor/helmify</id>
    <link href="https://github.com/arttor/helmify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Creates Helm chart from Kubernetes yaml&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helmify&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arttor/helmify/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/arttor/helmify/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/arttor/helmify&#34; alt=&#34;GitHub go.mod Go version&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/arttor/helmify&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/arttor/helmify&#34; alt=&#34;GitHub release (latest by date)&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/arttor/helmify&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/arttor/helmify&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/arttor/helmify?tab=doc&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/arttor/helmify?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/arttor/helmify/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/2ee755bb948d363207bb/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/arttor/helmify/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/2ee755bb948d363207bb/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CLI that creates &lt;a href=&#34;https://github.com/helm/helm&#34;&gt;Helm&lt;/a&gt; charts from kubernetes yamls.&lt;/p&gt; &#xA;&lt;p&gt;Helmify reads a list of &lt;a href=&#34;https://raw.githubusercontent.com/arttor/helmify/main/#status&#34;&gt;supported k8s objects&lt;/a&gt; from stdin and converts it to a helm chart. Designed to generate charts for &lt;a href=&#34;https://raw.githubusercontent.com/arttor/helmify/main/#integrate-to-your-operator-sdkkubebuilder-project&#34;&gt;k8s operators&lt;/a&gt; but not limited to. See &lt;a href=&#34;https://github.com/arttor/helmify/tree/main/examples&#34;&gt;examples&lt;/a&gt; of charts generated by helmify.&lt;/p&gt; &#xA;&lt;p&gt;Supports &lt;code&gt;Helm &amp;gt;=v3.6.0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Submit issue if some features missing for your use-case.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;From file: &lt;code&gt;cat my-app.yaml | helmify mychart&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Will create &#39;mychart&#39; directory with Helm chart from yaml file with k8s objects.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From directory with yamls:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;awk &#39;FNR==1 &amp;amp;&amp;amp; NR!=1  {print &#34;---&#34;}{print}&#39; /&amp;lt;my_directory&amp;gt;/*.yaml | helmify mychart&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Will create &#39;mychart&#39; directory with Helm chart from all yaml files in &lt;code&gt;&amp;lt;my_directory&amp;gt; &lt;/code&gt;directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From &lt;a href=&#34;https://kustomize.io/&#34;&gt;kustomize&lt;/a&gt; output:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kustomize build &amp;lt;kustomize_dir&amp;gt; | helmify mychart&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Will create &#39;mychart&#39; directory with Helm chart from kustomize output.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Integrate to your Operator-SDK/Kubebuilder project&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Makefile&lt;/code&gt; in your operator project generated by &lt;a href=&#34;https://github.com/operator-framework/operator-sdk&#34;&gt;Operator-SDK&lt;/a&gt; or &lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;Kubebuilder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add these lines to &lt;code&gt;Makefile&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;With operator-sdk version &amp;lt; v1.23.0 &lt;pre&gt;&lt;code class=&#34;language-makefile&#34;&gt;HELMIFY = $(shell pwd)/bin/helmify&#xA;helmify:&#xA;&#x9;$(call go-get-tool,$(HELMIFY),github.com/arttor/helmify/cmd/helmify@v0.3.7)&#xA;&#xA;helm: manifests kustomize helmify&#xA;&#x9;$(KUSTOMIZE) build config/default | $(HELMIFY)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;With operator-sdk version &amp;gt;= v1.23.0 &lt;pre&gt;&lt;code class=&#34;language-makefile&#34;&gt;HELMIFY ?= $(LOCALBIN)/helmify&#xA;&#xA;.PHONY: helmify&#xA;helmify: $(HELMIFY) ## Download helmify locally if necessary.&#xA;$(HELMIFY): $(LOCALBIN)&#xA;    test -s $(LOCALBIN)/helmify || GOBIN=$(LOCALBIN) go install github.com/arttor/helmify/cmd/helmify@latest&#xA;    &#xA;helm: manifests kustomize helmify&#xA;$(KUSTOMIZE) build config/default | $(HELMIFY)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make helm&lt;/code&gt; in project root. It will generate helm chart with name &#39;chart&#39; in &#39;chart&#39; directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; (for MacOS or Linux): &lt;code&gt;brew install arttor/tap/helmify&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or download suitable for your system binary from &lt;a href=&#34;https://github.com/arttor/helmify/releases/latest&#34;&gt;the Releases page&lt;/a&gt;. Unpack the helmify binary and add it to your PATH and you are good to go!&lt;/p&gt; &#xA;&lt;h2&gt;Available options&lt;/h2&gt; &#xA;&lt;p&gt;Helmify takes a chart name for an argument. Usage:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;helmify [flags] CHART_NAME&lt;/code&gt; - &lt;code&gt;CHART_NAME&lt;/code&gt; is optional. Default is &#39;chart&#39;. Can be a directory, e.g. &#39;deploy/charts/mychart&#39;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;flag&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;   &lt;th&gt;sample&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-h -help&lt;/td&gt; &#xA;   &lt;td&gt;Prints help&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;helmify -h&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-v&lt;/td&gt; &#xA;   &lt;td&gt;Enable verbose output. Prints WARN and INFO.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;helmify -v&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-vv&lt;/td&gt; &#xA;   &lt;td&gt;Enable very verbose output. Also prints DEBUG.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;helmify -vv&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-version&lt;/td&gt; &#xA;   &lt;td&gt;Print helmify version.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;helmify -version&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-crd-dir&lt;/td&gt; &#xA;   &lt;td&gt;Place crds in their own folder per Helm 3 &lt;a href=&#34;https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you&#34;&gt;docs&lt;/a&gt;. Caveat: CRDs templating is not supported by Helm.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;helmify -crd-dir&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-image-pull-secrets&lt;/td&gt; &#xA;   &lt;td&gt;Allows the user to use existing secrets as imagePullSecrets&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;helmify -image-pull-secrets&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Supported k8s resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;deployment&lt;/li&gt; &#xA; &lt;li&gt;daemonset&lt;/li&gt; &#xA; &lt;li&gt;service, Ingress&lt;/li&gt; &#xA; &lt;li&gt;PersistentVolumeClaim&lt;/li&gt; &#xA; &lt;li&gt;RBAC (serviceaccount, (cluster-)role, (cluster-)rolebinding)&lt;/li&gt; &#xA; &lt;li&gt;configs (configmap, secret)&lt;/li&gt; &#xA; &lt;li&gt;webhooks (cert, issuer, ValidatingWebhookConfiguration)&lt;/li&gt; &#xA; &lt;li&gt;custom resource definitions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Known issues&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Helmify will not overwrite &lt;code&gt;Chart.yaml&lt;/code&gt; file if presented. Done on purpose.&lt;/li&gt; &#xA; &lt;li&gt;Helmify will not delete existing template files, only overwrite.&lt;/li&gt; &#xA; &lt;li&gt;Helmify overwrites templates and values files on every run. This means that all your manual changes in helm template files will be lost on the next run.&lt;/li&gt; &#xA; &lt;li&gt;if switching between the using the &lt;code&gt;-crd-dir&lt;/code&gt; flag it is better to delete and regenerate the from scratch to ensure crds are not accidentally spliced/formatted into the same chart. Bear in mind you will want to update your &lt;code&gt;Chart.yaml&lt;/code&gt; thereafter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Develop&lt;/h2&gt; &#xA;&lt;p&gt;To support a new type of k8s object template:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Implement &lt;code&gt;helmify.Processor&lt;/code&gt; interface. Place implementation in &lt;code&gt;pkg/processor&lt;/code&gt;. The package contains examples for most k8s objects.&lt;/li&gt; &#xA; &lt;li&gt;Register your processor in the &lt;code&gt;pkg/app/app.go&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add relevant input sample to &lt;code&gt;test_data/kustomize.output&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;Clone repo and execute command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cat test_data/k8s-operator-kustomize.output | go run ./cmd/helmify mychart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will generate &lt;code&gt;mychart&lt;/code&gt; Helm chart form file &lt;code&gt;test_data/k8s-operator-kustomize.output&lt;/code&gt; representing typical operator &lt;a href=&#34;https://github.com/kubernetes-sigs/kustomize&#34;&gt;kustomize&lt;/a&gt; output.&lt;/p&gt; &#xA;&lt;h3&gt;Test&lt;/h3&gt; &#xA;&lt;p&gt;For manual testing, run program with debug output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cat test_data/k8s-operator-kustomize.output | go run ./cmd/helmify -vv mychart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then inspect logs and generated chart in &lt;code&gt;./mychart&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;To execute tests, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go test ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Beside unit-tests, project contains e2e test &lt;code&gt;pkg/app/app_e2e_test.go&lt;/code&gt;. It&#39;s a go test, which uses &lt;code&gt;test_data/*&lt;/code&gt; to generate a chart in temporary directory. Then runs &lt;code&gt;helm lint --strict&lt;/code&gt; to check if generated chart is valid.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gruntwork-io/terragrunt</title>
    <updated>2023-02-08T01:36:02Z</updated>
    <id>tag:github.com,2023-02-08:/gruntwork-io/terragrunt</id>
    <link href="https://github.com/gruntwork-io/terragrunt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Terragrunt is a thin wrapper for Terraform that provides extra tools for working with multiple Terraform modules.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terragrunt&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gruntwork.io/?ref=repo_terragrunt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20by-gruntwork.io-%235849a6.svg?sanitize=true&#34; alt=&#34;Maintained by Gruntwork.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/gruntwork-io/terragrunt&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/gruntwork-io/terragrunt&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/gruntwork-io/terragrunt&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/gruntwork-io/terragrunt?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/tf-%3E%3D0.12.0-blue.svg?sanitize=true&#34; alt=&#34;Terraform Version&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Terragrunt is a thin wrapper for &lt;a href=&#34;https://www.terraform.io/&#34;&gt;Terraform&lt;/a&gt; that provides extra tools for keeping your Terraform configurations &lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34;&gt;DRY&lt;/a&gt;, working with multiple Terraform modules, and managing remote state.&lt;/p&gt; &#xA;&lt;p&gt;Please see the following for more info, including install instructions and complete documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terragrunt.gruntwork.io&#34;&gt;Terragrunt Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terragrunt.gruntwork.io/docs/getting-started/quick-start/&#34;&gt;Getting started with Terragrunt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terragrunt.gruntwork.io/docs&#34;&gt;Terragrunt Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terragrunt.gruntwork.io/docs/community/contributing&#34;&gt;Contributing to Terragrunt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gruntwork.io/support/&#34;&gt;Commercial Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is released under the MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/gruntwork-io/terragrunt/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dexidp/dex</title>
    <updated>2023-02-08T01:36:02Z</updated>
    <id>tag:github.com,2023-02-08:/dexidp/dex</id>
    <link href="https://github.com/dexidp/dex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenID Connect (OIDC) identity and OAuth 2.0 provider with pluggable connectors&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dex - A federated OpenID Connect provider&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/dexidp/dex/ci.yaml?style=flat-square&amp;amp;branch=master&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/dexidp/dex&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/dexidp/dex?style=flat-square&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/dexidp/dex&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&amp;amp;style=flat-square&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dexidp/dex/master/docs/logos/dex-horizontal-color.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dex is an identity service that uses &lt;a href=&#34;https://openid.net/connect/&#34;&gt;OpenID Connect&lt;/a&gt; to drive authentication for other apps.&lt;/p&gt; &#xA;&lt;p&gt;Dex acts as a portal to other identity providers through &lt;a href=&#34;https://raw.githubusercontent.com/dexidp/dex/master/#connectors&#34;&gt;&#34;connectors.&#34;&lt;/a&gt; This lets dex defer authentication to LDAP servers, SAML providers, or established identity providers like GitHub, Google, and Active Directory. Clients write their authentication logic once to talk to dex, then dex handles the protocols for a given backend.&lt;/p&gt; &#xA;&lt;h2&gt;ID Tokens&lt;/h2&gt; &#xA;&lt;p&gt;ID Tokens are an OAuth2 extension introduced by OpenID Connect and dex&#39;s primary feature. ID Tokens are &lt;a href=&#34;https://jwt.io/&#34;&gt;JSON Web Tokens&lt;/a&gt; (JWTs) signed by dex and returned as part of the OAuth2 response that attest to the end user&#39;s identity. An example JWT might look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;eyJhbGciOiJSUzI1NiIsImtpZCI6IjlkNDQ3NDFmNzczYjkzOGNmNjVkZDMyNjY4NWI4NjE4MGMzMjRkOTkifQ.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjU1NTYvZGV4Iiwic3ViIjoiQ2djeU16UXlOelE1RWdabmFYUm9kV0kiLCJhdWQiOiJleGFtcGxlLWFwcCIsImV4cCI6MTQ5Mjg4MjA0MiwiaWF0IjoxNDkyNzk1NjQyLCJhdF9oYXNoIjoiYmk5NmdPWFpTaHZsV1l0YWw5RXFpdyIsImVtYWlsIjoiZXJpYy5jaGlhbmdAY29yZW9zLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJncm91cHMiOlsiYWRtaW5zIiwiZGV2ZWxvcGVycyJdLCJuYW1lIjoiRXJpYyBDaGlhbmcifQ.OhROPq_0eP-zsQRjg87KZ4wGkjiQGnTi5QuG877AdJDb3R2ZCOk2Vkf5SdP8cPyb3VMqL32G4hLDayniiv8f1_ZXAde0sKrayfQ10XAXFgZl_P1yilkLdknxn6nbhDRVllpWcB12ki9vmAxklAr0B1C4kr5nI3-BZLrFcUR5sQbxwJj4oW1OuG6jJCNGHXGNTBTNEaM28eD-9nhfBeuBTzzO7BKwPsojjj4C9ogU4JQhGvm_l4yfVi0boSx8c0FX3JsiB0yLa1ZdJVWVl9m90XmbWRSD85pNDQHcWZP9hR6CMgbvGkZsgjG32qeRwUL_eNkNowSBNWLrGNPoON1gMg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ID Tokens contains standard claims assert which client app logged the user in, when the token expires, and the identity of the user.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;iss&#34;: &#34;http://127.0.0.1:5556/dex&#34;,&#xA;  &#34;sub&#34;: &#34;CgcyMzQyNzQ5EgZnaXRodWI&#34;,&#xA;  &#34;aud&#34;: &#34;example-app&#34;,&#xA;  &#34;exp&#34;: 1492882042,&#xA;  &#34;iat&#34;: 1492795642,&#xA;  &#34;at_hash&#34;: &#34;bi96gOXZShvlWYtal9Eqiw&#34;,&#xA;  &#34;email&#34;: &#34;jane.doe@coreos.com&#34;,&#xA;  &#34;email_verified&#34;: true,&#xA;  &#34;groups&#34;: [&#xA;    &#34;admins&#34;,&#xA;    &#34;developers&#34;&#xA;  ],&#xA;  &#34;name&#34;: &#34;Jane Doe&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Because these tokens are signed by dex and &lt;a href=&#34;https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims&#34;&gt;contain standard-based claims&lt;/a&gt; other services can consume them as service-to-service credentials. Systems that can already consume OpenID Connect ID Tokens issued by dex include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://kubernetes.io/docs/admin/authentication/#openid-connect-tokens&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html&#34;&gt;AWS STS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For details on how to request or validate an ID Token, see &lt;a href=&#34;https://dexidp.io/docs/using-dex/&#34;&gt;&lt;em&gt;&#34;Writing apps that use dex&#34;&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Kubernetes and Dex&lt;/h2&gt; &#xA;&lt;p&gt;Dex runs natively on top of any Kubernetes cluster using Custom Resource Definitions and can drive API server authentication through the OpenID Connect plugin. Clients, such as the &lt;a href=&#34;https://github.com/kubernetes/dashboard&#34;&gt;&lt;code&gt;kubernetes-dashboard&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;kubectl&lt;/code&gt;, can act on behalf of users who can login to the cluster through any identity provider dex supports.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;More docs for running dex as a Kubernetes authenticator can be found &lt;a href=&#34;https://dexidp.io/docs/kubernetes/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can find more about companies and projects, which uses dex, &lt;a href=&#34;https://raw.githubusercontent.com/dexidp/dex/master/ADOPTERS.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Connectors&lt;/h2&gt; &#xA;&lt;p&gt;When a user logs in through dex, the user&#39;s identity is usually stored in another user-management system: a LDAP directory, a GitHub org, etc. Dex acts as a shim between a client app and the upstream identity provider. The client only needs to understand OpenID Connect to query dex, while dex implements an array of protocols for querying other user-management systems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dexidp/dex/master/docs/img/dex-flow.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &#34;connector&#34; is a strategy used by dex for authenticating a user against another identity provider. Dex implements connectors that target specific platforms such as GitHub, LinkedIn, and Microsoft as well as established protocols like LDAP and SAML.&lt;/p&gt; &#xA;&lt;p&gt;Depending on the connectors limitations in protocols can prevent dex from issuing &lt;a href=&#34;https://dexidp.io/docs/custom-scopes-claims-clients/#scopes&#34;&gt;refresh tokens&lt;/a&gt; or returning &lt;a href=&#34;https://dexidp.io/docs/custom-scopes-claims-clients/#scopes&#34;&gt;group membership&lt;/a&gt; claims. For example, because SAML doesn&#39;t provide a non-interactive way to refresh assertions, if a user logs in through the SAML connector dex won&#39;t issue a refresh token to its client. Refresh token support is required for clients that require offline access, such as &lt;code&gt;kubectl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Dex implements the following connectors:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;supports refresh tokens&lt;/th&gt; &#xA;   &lt;th&gt;supports groups claim&lt;/th&gt; &#xA;   &lt;th&gt;supports preferred_username claim&lt;/th&gt; &#xA;   &lt;th&gt;status&lt;/th&gt; &#xA;   &lt;th&gt;notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/ldap/&#34;&gt;LDAP&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/github/&#34;&gt;GitHub&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/saml/&#34;&gt;SAML 2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;WARNING: Unmaintained and likely vulnerable to auth bypasses (&lt;a href=&#34;https://github.com/dexidp/dex/discussions/1884&#34;&gt;#1884&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/gitlab/&#34;&gt;GitLab&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;beta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/oidc/&#34;&gt;OpenID Connect&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;beta&lt;/td&gt; &#xA;   &lt;td&gt;Includes Salesforce, Azure, etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/oauth/&#34;&gt;OAuth 2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;alpha&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/google/&#34;&gt;Google&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;alpha&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/linkedin/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;beta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/microsoft/&#34;&gt;Microsoft&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;beta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/authproxy/&#34;&gt;AuthProxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;alpha&lt;/td&gt; &#xA;   &lt;td&gt;Authentication proxies such as Apache2 mod_auth, etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/bitbucketcloud/&#34;&gt;Bitbucket Cloud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;alpha&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/openshift/&#34;&gt;OpenShift&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;alpha&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/atlassiancrowd/&#34;&gt;Atlassian Crowd&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes *&lt;/td&gt; &#xA;   &lt;td&gt;beta&lt;/td&gt; &#xA;   &lt;td&gt;preferred_username claim must be configured through config&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/gitea/&#34;&gt;Gitea&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;beta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dexidp.io/docs/connectors/keystone/&#34;&gt;OpenStack Keystone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;alpha&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Stable, beta, and alpha are defined as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stable: well tested, in active use, and will not change in backward incompatible ways.&lt;/li&gt; &#xA; &lt;li&gt;Beta: tested and unlikely to change in backward incompatible ways.&lt;/li&gt; &#xA; &lt;li&gt;Alpha: may be untested by core maintainers and is subject to change in backward incompatible ways.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All changes or deprecations of connector features will be announced in the &lt;a href=&#34;https://github.com/dexidp/dex/releases&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dexidp.io/docs/getting-started/&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dexidp.io/docs/openid-connect/&#34;&gt;Intro to OpenID Connect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dexidp.io/docs/using-dex/&#34;&gt;Writing apps that use dex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dexidp.io/docs/v2/&#34;&gt;What&#39;s new in v2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dexidp.io/docs/custom-scopes-claims-clients/&#34;&gt;Custom scopes, claims, and client features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dexidp.io/docs/storage/&#34;&gt;Storage options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dexidp.io/docs/api/&#34;&gt;gRPC API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dexidp.io/docs/kubernetes/&#34;&gt;Using Kubernetes with dex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Client libraries &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/coreos/go-oidc&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting a vulnerability&lt;/h2&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/dexidp/dex/master/.github/SECURITY.md&#34;&gt;security policy&lt;/a&gt; for details about reporting vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For feature requests and bugs, file an &lt;a href=&#34;https://github.com/dexidp/dex/issues&#34;&gt;issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For general discussion about both using and developing Dex: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;join the &lt;a href=&#34;https://cloud-native.slack.com/messages/dexidp&#34;&gt;#dexidp&lt;/a&gt; on the CNCF Slack&lt;/li&gt; &#xA;   &lt;li&gt;open a new &lt;a href=&#34;https://github.com/dexidp/dex/discussions&#34;&gt;discussion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;join the &lt;a href=&#34;https://groups.google.com/forum/#!forum/dex-dev&#34;&gt;dex-dev&lt;/a&gt; mailing list&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;When all coding and testing is done, please run the test suite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make testall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the best developer experience, install &lt;a href=&#34;https://builtwithnix.org/&#34;&gt;Nix&lt;/a&gt; and &lt;a href=&#34;https://direnv.net/&#34;&gt;direnv&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, install Go and Docker manually or using a package manager. Install the rest of the dependencies by running &lt;code&gt;make deps&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/dexidp/dex/master/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>