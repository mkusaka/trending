<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-20T01:35:35Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openkruise/kruise</title>
    <updated>2023-03-20T01:35:35Z</updated>
    <id>tag:github.com,2023-03-20:/openkruise/kruise</id>
    <link href="https://github.com/openkruise/kruise" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated management of large-scale applications on Kubernetes (project under CNCF)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kruise&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/openkruise/kruise&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/openkruise/kruise&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/en/projects/2908&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/2908/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/openkruise/kruise&#34;&gt;&lt;img src=&#34;https://travis-ci.org/openkruise/kruise.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/openkruise/kruise&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/openkruise/kruise.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/openkruise/kruise&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/openkruise/kruise/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openkruise/kruise/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/openkruise/kruise/master/README-zh_CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;OpenKruise (official site: &lt;a href=&#34;https://openkruise.io&#34;&gt;https://openkruise.io&lt;/a&gt;) is a CNCF(&lt;a href=&#34;https://cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt;) incubating project. It consists of several controllers which extend and complement the &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&#34;&gt;Kubernetes core controllers&lt;/a&gt; for workload and application management.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advance Workloads&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Advance Workloads can help you manage applications of stateless, stateful, daemon and job.&lt;/p&gt; &lt;p&gt;They all support not only the basic features which are similar to the original Workloads in Kubernetes, but also more advanced abilities like &lt;strong&gt;in-place update&lt;/strong&gt;, &lt;strong&gt;configurable scale/upgrade strategies&lt;/strong&gt;, &lt;strong&gt;parallel operations&lt;/strong&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/cloneset/&#34;&gt;&lt;strong&gt;CloneSet&lt;/strong&gt; for stateless applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/advancedstatefulset&#34;&gt;&lt;strong&gt;Advanced StatefulSet&lt;/strong&gt; for stateful applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/advanceddaemonset&#34;&gt;&lt;strong&gt;Advanced DaemonSet&lt;/strong&gt; for daemon applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/broadcastjob&#34;&gt;&lt;strong&gt;BroadcastJob&lt;/strong&gt; for deploying jobs over specific nodes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/advancedcronjob&#34;&gt;&lt;strong&gt;AdvancedCronJob&lt;/strong&gt; for creating Job or BroadcastJob periodically&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sidecar container Management&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Kruise simplify sidecar injection and enable sidecar in-place update. Kruise also enhance the sidecar startup and termination control.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/sidecarset&#34;&gt;&lt;strong&gt;SidecarSet&lt;/strong&gt; for defining and upgrading your own sidecars&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/containerlaunchpriority&#34;&gt;&lt;strong&gt;Container Launch Priority&lt;/strong&gt; to control the container startup orders&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-domain Management&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This can help you manage applications over nodes with multiple domains, such as different node pools, available zones, architectures(x86 &amp;amp; arm) or node types(kubelet &amp;amp; virtual kubelet).&lt;/p&gt; &lt;p&gt;Here we provide two different ways:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/workloadspread&#34;&gt;&lt;strong&gt;WorkloadSpread&lt;/strong&gt; for bypass distributing pods in workloads&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/uniteddeployment&#34;&gt;&lt;strong&gt;UnitedDeployment&lt;/strong&gt;, a new workload to manage multiple sub-workloads&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhanced Operations&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/containerrecreaterequest&#34;&gt;Restart containers in a running pod&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/imagepulljob&#34;&gt;Download images on specific nodes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Application Protection&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/deletionprotection&#34;&gt;Protect Kubernetes resources and applications&#39; availability from the cascading deletion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openkruise.io/docs/user-manuals/podunavailablebudget&#34;&gt;&lt;strong&gt;PodUnavailableBudget&lt;/strong&gt; for achieving the effect of preventing application disruption or SLA degradation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;You can view the full documentation from the &lt;a href=&#34;https://openkruise.io/docs/&#34;&gt;OpenKruise website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install or upgrade Kruise with &lt;a href=&#34;https://openkruise.io/docs/installation&#34;&gt;the stable version&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install or upgrade Kruise with &lt;a href=&#34;https://openkruise.io/docs/next/installation&#34;&gt;the latest version including alpha/beta/rc&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Users&lt;/h2&gt; &#xA;&lt;p&gt;Registration: &lt;a href=&#34;https://github.com/openkruise/kruise/issues/289&#34;&gt;Who is using Kruise&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alibaba Group, Ant Group, DouyuTV, Sto, Boss直聘&lt;/li&gt; &#xA; &lt;li&gt;hangyinxiaofei, vanyitech, Dmall, Bringg, 佐疆科技&lt;/li&gt; &#xA; &lt;li&gt;Lyft, Ctrip, 享住智慧, VIPKID, zhangmen&lt;/li&gt; &#xA; &lt;li&gt;xiaohongshu, bixin, 永辉科技中心, 跟谁学, 哈啰出行&lt;/li&gt; &#xA; &lt;li&gt;Spectro Cloud, ihomefnt, Arkane Systems, Deepexi, 火花思维&lt;/li&gt; &#xA; &lt;li&gt;OPPO, Suning.cn, joyy, Mobvista, 深圳凤凰木网络有限公司&lt;/li&gt; &#xA; &lt;li&gt;xiaomi, Netease, MeiTuan Finance, Shopee, Esign&lt;/li&gt; &#xA; &lt;li&gt;LinkedIn, 雪球, 兴盛优选, Wholee&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You are warmly welcome to hack on Kruise. We have prepared a detailed guide &lt;a href=&#34;https://raw.githubusercontent.com/openkruise/kruise/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Active communication channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://kubernetes.slack.com/channels/openkruise&#34;&gt;OpenKruise channel&lt;/a&gt; (&lt;em&gt;English&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;DingTalk：Search GroupID &lt;code&gt;23330762&lt;/code&gt; (&lt;em&gt;Chinese&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;WeChat: Search User &lt;code&gt;openkruise&lt;/code&gt; and let the robot invite you (&lt;em&gt;Chinese&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Bi-weekly Community Meeting (APAC, &lt;em&gt;Chinese&lt;/em&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Thursday 19:00 GMT+8 (Asia/Shanghai), &lt;a href=&#34;https://calendar.google.com/calendar/u/2?cid=MjdtbDZucXA2bjVpNTFyYTNpazV2dW8ybHNAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&#34;&gt;Calendar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://us02web.zoom.us/j/87059136652?pwd=NlI4UThFWXVRZkxIU0dtR1NINncrQT09&#34;&gt;Meeting Link(zoom)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://shimo.im/docs/gXqmeQOYBehZ4vqo&#34;&gt;Notes and agenda&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bi-weekly Community Meeting (&lt;em&gt;English&lt;/em&gt;): TODO&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Kruise is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/openkruise/kruise/master/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubernetes/registry.k8s.io</title>
    <updated>2023-03-20T01:35:35Z</updated>
    <id>tag:github.com,2023-03-20:/kubernetes/registry.k8s.io</id>
    <link href="https://github.com/kubernetes/registry.k8s.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This project is the repo for registry.k8s.io, the production OCI registry service for Kubernetes&#39; container image artifacts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;registry.k8s.io&lt;/h1&gt; &#xA;&lt;p&gt;This project implements the backend for registry.k8s.io, Kubernetes&#39;s container image registry.&lt;/p&gt; &#xA;&lt;p&gt;For more details on the implementation see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes/registry.k8s.io/main/cmd/archeio/README.md&#34;&gt;cmd/archeio&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The community deployment configs are documented at in the k8s.io repo with the rest of the community infra deployments: &lt;a href=&#34;https://github.com/kubernetes/k8s.io/tree/main/registry.k8s.io&#34;&gt;https://github.com/kubernetes/k8s.io/tree/main/registry.k8s.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For publishing to registry.k8s.io, refer to the docs at &lt;a href=&#34;https://git.k8s.io/k8s.io/k8s.gcr.io#managing-kubernetes-container-registries&#34;&gt;https://git.k8s.io/k8s.io/k8s.gcr.io#managing-kubernetes-container-registries&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stability&lt;/h2&gt; &#xA;&lt;p&gt;registry.k8s.io is GA and we ask that all users migrate from k8s.gcr.io as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;However, unequivocally: &lt;strong&gt;DO NOT&lt;/strong&gt; depend on the implementation details of this registry.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other than &lt;code&gt;registry.k8s.io&lt;/code&gt; serving an &lt;a href=&#34;https://github.com/opencontainers/distribution-spec&#34;&gt;OCI&lt;/a&gt; compliant registry: API endpoints, IP addresses, and backing services used are subject to change at &lt;em&gt;anytime&lt;/em&gt; as new resources become available or as otherwise necessary.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you need to allow-list domains or IPs in your environment, we highly recommend mirroring images to a location you control instead.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Kubernetes project is currently sending traffic to GCP and AWS thanks to their donations but we hope to redirect traffic to more sponsors and their respective API endpoints in the future to keep the project sustainable.&lt;/p&gt; &#xA;&lt;p&gt;Please also note that there is &lt;strong&gt;No SLA&lt;/strong&gt; as this is a free, volunteer managed service. We will however do our best to respond to issues and the system is designed to be reliable and low-maintenance.&lt;/p&gt; &#xA;&lt;p&gt;See Also: &lt;a href=&#34;https://kubernetes.io/blog/2022/11/28/registry-k8s-io-faster-cheaper-ga&#34;&gt;https://kubernetes.io/blog/2022/11/28/registry-k8s-io-faster-cheaper-ga&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--TODO: link out to a doc with suggestion(s) for mirroring---&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;This project abides by the Linux Foundation privacy policy, as documented at &lt;a href=&#34;https://registry.k8s.io/privacy&#34;&gt;https://registry.k8s.io/privacy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;Previously all of Kubernetes&#39; image hosting has been out of gcr.io (&#34;Google Container Registry&#34;).&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve incurred significant egress traffic costs from users on other cloud providers in particular in doing so, severely limiting our ability to use the infra budget for purposes other than hosting end-user downloads.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re now moving to shift all traffic behind a community controlled domain, so we can quickly implement cost-cutting measures like serving the bulk of the traffic for AWS-users from AWS-local storage funded by Amazon, or potentially leveraging other providers in the future.&lt;/p&gt; &#xA;&lt;p&gt;For additional context on why we did this and what we&#39;re changing about kubernetes images see &lt;a href=&#34;https://github.com/kubernetes/k8s.io/wiki/New-Registry-url-for-Kubernetes-(registry.k8s.io)&#34;&gt;https://github.com/kubernetes/k8s.io/wiki/New-Registry-url-for-Kubernetes-(registry.k8s.io)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Essentially, this repo implements the backend sources for the steps outlined there.&lt;/p&gt; &#xA;&lt;p&gt;For a talk with more details see: &lt;a href=&#34;https://www.youtube.com/watch?v=9CdzisDQkjE&#34;&gt;&#34;Why We Moved the Kubernetes Image Registry&#34;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community, discussion, contribution, and support&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to engage with the Kubernetes community on the &lt;a href=&#34;http://kubernetes.io/community/&#34;&gt;community page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can reach the maintainers of this project at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.k8s.io/&#34;&gt;Slack&lt;/a&gt; in channel &lt;code&gt;#sig-k8s-infra&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/kubernetes-sig-k8s-infra&#34;&gt;Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code of conduct&lt;/h3&gt; &#xA;&lt;p&gt;Participation in the Kubernetes community is governed by the &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes/registry.k8s.io/main/code-of-conduct.md&#34;&gt;Kubernetes Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>keploy/keploy</title>
    <updated>2023-03-20T01:35:35Z</updated>
    <id>tag:github.com,2023-03-20:/keploy/keploy</id>
    <link href="https://github.com/keploy/keploy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Testing for Developers. Toolkit that creates test-cases and data mocks from API calls, DB queries, etc.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Welcome to Keploy 👋 &lt;/h1&gt; &#xA;&lt;p style=&#34;text-align:center;&#34; align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://avatars.githubusercontent.com/u/92252339?s=200&amp;amp;v=4&#34; height=&#34;20%&#34; width=&#34;20%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/keploy/keploy/main/CODE_OF_CONDUCT.md&#34; alt=&#34;Contributions welcome&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Contributions-Welcome-brightgreen?logo=github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/keploy/keploy/actions&#34; alt=&#34;Tests&#34;&gt; &lt;img src=&#34;https://github.com/keploy/keploy/actions/workflows/go.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/keploy/keploy&#34; alt=&#34;Go Report Card&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/keploy/keploy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/keploy/shared_invite/zt-12rfbvc01-o54cOG0X1G6eVJTuI_orSA&#34; alt=&#34;Slack&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/keploy/keploy/main/.github/slack.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.keploy.io&#34; alt=&#34;Docs&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/keploy/keploy/main/.github/docs.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/keploy/samples-go&#34; alt=&#34;Gitpod&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-FFB45B?logo=gitpod&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Keploy&lt;/h1&gt; &#xA;&lt;p&gt;Keploy is a functional testing toolkit for developers. It &lt;strong&gt;generates E2E tests for APIs (KTests)&lt;/strong&gt; along with &lt;strong&gt;mocks or stubs(KMocks)&lt;/strong&gt; by recording real API calls. KTests can be imported as mocks for consumers and vice-versa.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/keploy/docs/main/static/gif/how-keploy-works.gif&#34; width=&#34;100%&#34; alt=&#34;Generate Test Case from API call&#34;&gt; &#xA;&lt;p&gt;Merge KTests with unit testing libraries(like Go-Test, JUnit..) to track combined test-coverage.&lt;/p&gt; &#xA;&lt;p&gt;KMocks can also be referenced in existing tests or use anywhere (including any testing framework). KMocks can also be used as tests for the server.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Keploy is testing itself with &amp;nbsp; &lt;a href=&#34;https://coveralls.io/github/keploy/keploy?branch=main&amp;amp;kill_cache=1&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/keploy/keploy/badge.svg?branch=main&amp;amp;kill_cache=1&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &amp;nbsp; without writing many test-cases or data-mocks. 😎&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Language Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/keploy/go-sdk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go-%2300ADD8.svg?style=for-the-badge&amp;amp;logo=go&amp;amp;logoColor=white&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/keploy/java-sdk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&amp;amp;logo=java&amp;amp;logoColor=white&#34; alt=&#34;Java&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/keploy/typescript-sdk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&amp;amp;logo=node.js&amp;amp;logoColor=white&#34; alt=&#34;NodeJS&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;img src=&#34;https://img.shields.io/badge/python-3670A0?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=ffdd54&#34; alt=&#34;Python&#34;&gt; : WIP &lt;a href=&#34;https://github.com/keploy/keploy/issues/58&#34;&gt;#58&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it works?&lt;/h2&gt; &#xA;&lt;h4&gt;Safely replays all CRUD operations (including non-idempotent APIs)&lt;/h4&gt; &#xA;&lt;p&gt;Keploy is added as a middleware to your application that captures and replays all network interaction served to application from any source.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://docs.keploy.io/docs/keploy-explained/how-keploy-works&#34;&gt;https://docs.keploy.io&lt;/a&gt; to read more in detail..&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-replay.gif&#34; width=&#34;80%&#34; alt=&#34;Generate Test Case from API call&#34;&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h4&gt;Here you can find the complete &lt;a href=&#34;https://docs.keploy.io/&#34;&gt;Documentation&lt;/a&gt; which you can reffer&lt;/h4&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Whether you are a community member or not, we would love your point of view! Feel free to first check out our&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keploy/keploy/raw/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The guide outlines the process for &lt;strong&gt;creating an issue&lt;/strong&gt; and &lt;strong&gt;submitting a pull request.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keploy/keploy/raw/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;By following the guide we&#39;ve set, your contribution will more likely be accepted if it enhances the project.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;1. Export tests and mocks and maintain alongside existing tests&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-tc.gif&#34; width=&#34;80%&#34; alt=&#34;Generate Test Case from API call&#34;&gt; &#xA;&lt;h3&gt;2. Integrates with &lt;code&gt;go-test&lt;/code&gt;, &lt;code&gt;junit&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Keploy has native interoperability as it integrates with popular testing libraries like &lt;code&gt;go-test&lt;/code&gt;, &lt;code&gt;junit&lt;/code&gt;. Code coverage will be reported with existing plus KTests. It&#39;ll also be &lt;strong&gt;integrated in CI pipelines/infrastructure automatically&lt;/strong&gt; if you already have &lt;code&gt;go-test&lt;/code&gt;, &lt;code&gt;junit&lt;/code&gt; integrated.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/keploy/docs/main/static/gif/replay-tc.gif&#34; width=&#34;80%&#34; alt=&#34;Generate Test Case from API call&#34;&gt; &#xA;&lt;h3&gt;3. Accurate Noise Detection&lt;/h3&gt; &#xA;&lt;p&gt;Filters noisy fields in API responses like (timestamps, random values) to ensure high quality tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WIP&lt;/strong&gt; - &lt;strong&gt;Statistical deduplication&lt;/strong&gt; ensures that redundant testcases are not generated. WIP (ref &lt;a href=&#34;https://github.com/keploy/keploy/issues/27&#34;&gt;#27&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Quick Installation&lt;/h2&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --silent --location &#34;https://github.com/keploy/keploy/releases/latest/download/keploy_darwin_all.tar.gz&#34; | tar xz -C /tmp&#xA;&#xA;sudo mv /tmp/keploy /usr/local/bin &amp;amp;&amp;amp; keploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Linux&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --silent --location &#34;https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz&#34; | tar xz -C /tmp&#xA;&#xA;sudo mv /tmp/keploy /usr/local/bin &amp;amp;&amp;amp; keploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Linux ARM&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --silent --location &#34;https://github.com/keploy/keploy/releases/latest/download/keploy_linux_arm64.tar.gz&#34; | tar xz -C /tmp&#xA;&#xA;sudo mv /tmp/keploy /usr/local/bin &amp;amp;&amp;amp; keploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Windows&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Download the &lt;a href=&#34;https://github.com/keploy/keploy/releases/latest/download/keploy_windows_amd64.tar.gz&#34;&gt;Keploy Windows AMD64&lt;/a&gt;, and extract the files from the zip folder.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;keploy.exe&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Windows ARM&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Download the &lt;a href=&#34;https://github.com/keploy/keploy/releases/latest/download/keploy_windows_arm64.tar.gz&#34;&gt;Keploy Windows ARM64&lt;/a&gt;, and extract the files from the zip folder.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;keploy.exe&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;SDK Integration&lt;/h2&gt; &#xA;&lt;p&gt;After running Keploy Server, &lt;strong&gt;let&#39;s integrate the SDK&lt;/strong&gt; into the application. If you&#39;re integrating in custom project please choose installation &lt;a href=&#34;https://docs.keploy.io/application-development/&#34;&gt;documentation according to the language&lt;/a&gt; you&#39;re using.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.keploy.io/docs/go/installation&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go-%2300ADD8.svg?style=for-the-badge&amp;amp;logo=go&amp;amp;logoColor=white&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.keploy.io/docs/java/installation&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&amp;amp;logo=java&amp;amp;logoColor=white&#34; alt=&#34;Java&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.keploy.io/docs/typescript/installation&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&amp;amp;logo=node.js&amp;amp;logoColor=white&#34; alt=&#34;NodeJS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Try Sample application&lt;/h2&gt; &#xA;&lt;p&gt;Demos using &lt;em&gt;Echo/PostgreSQL&lt;/em&gt; and &lt;em&gt;Gin/MongoDB&lt;/em&gt; are available &lt;a href=&#34;https://github.com/keploy/samples-go&#34;&gt;here&lt;/a&gt;. For this example, we will use the &lt;strong&gt;Echo/PostgreSQL&lt;/strong&gt; sample.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/keploy/samples-go &amp;amp;&amp;amp; cd samples-go/echo-sql&#xA;go mod download&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Start PostgreSQL instance&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run the application&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export KEPLOY_MODE=record &amp;amp;&amp;amp; go run handler.go main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate testcases&lt;/h3&gt; &#xA;&lt;p&gt;To genereate testcases we just need to make some API calls. You can use &lt;a href=&#34;https://www.postman.com/&#34;&gt;Postman&lt;/a&gt;, &lt;a href=&#34;https://hoppscotch.io/&#34;&gt;Hoppscotch&lt;/a&gt;, or simply &lt;code&gt;curl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note : KTests are exported as files in the current directory(.) by default&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;1. Generate shortened url&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --request POST \&#xA;  --url http://localhost:8082/url \&#xA;  --header &#39;content-type: application/json&#39; \&#xA;  --data &#39;{&#xA;  &#34;url&#34;: &#34;https://github.com&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this will return the shortened url. The ts would automatically be ignored during testing because it&#39;ll always be different.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;ts&#34;: 1647802058801841100,&#xA;&#x9;&#34;url&#34;: &#34;http://localhost:8082/GuwHCgoQ&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Redirect to original url from shortened url&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --request GET \&#xA;  --url http://localhost:8082/GuwHCgoQ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration with native Go test framework&lt;/h3&gt; &#xA;&lt;p&gt;You just need 3 lines of code in your unit test file and that&#39;s it!!🔥🔥🔥&lt;/p&gt; &#xA;&lt;p&gt;For an example, for a file named &lt;code&gt;main.go&lt;/code&gt; create a unit test file as &lt;code&gt;main_test.go&lt;/code&gt; in the &lt;strong&gt;same folder&lt;/strong&gt; as &lt;code&gt;main.go&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Contents of &lt;code&gt;main_test.go&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;github.com/keploy/go-sdk/keploy&#34;&#xA;&#x9;&#34;testing&#34;&#xA;)&#xA;func TestKeploy(t *testing.T) {&#xA;&#x9;keploy.SetTestMode()&#xA;&#x9;go main()&#xA;&#x9;keploy.AssertTests(t)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run the testcases&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: Before running tests stop the sample application&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go test -coverpkg=./... -covermode=atomic  ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this should show you have 74.4% coverage without writing any code!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ok      echo-psql-url-shortener 5.820s  coverage: 74.4% of statements in ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Test Run can be visualised in the terminal where Keploy server is running. You can also checkout the details of the Test Run Report as a report file generated locally in the Keploy Server directory.&lt;/p&gt; &#xA;&lt;h2&gt;Keploy SDK Modes&lt;/h2&gt; &#xA;&lt;h3&gt;SDK Modes&lt;/h3&gt; &#xA;&lt;p&gt;The Keploy SDKs modes can operated by setting &lt;code&gt;KEPLOY_MODE&lt;/code&gt; environment variable&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Note: KEPLOY_MODE value is case sensitive&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;There are 3 Keploy SDK modes:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Off&lt;/strong&gt; : In the off mode the Keploy SDK will turn off all the functionality provided by the Keploy platform.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;export KEPLOY_MODE=&#34;off&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Record mode&lt;/strong&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Record requests, response and all external calls and sends to Keploy server.&lt;/li&gt; &#xA;   &lt;li&gt;After keploy server removes duplicates, it then runs the request on the API again to identify noisy fields.&lt;/li&gt; &#xA;   &lt;li&gt;Sends the noisy fields to the keploy server to be saved along with the testcase.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;export KEPLOY_MODE=&#34;record&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Test mode&lt;/strong&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fetches testcases for the app from keploy server.&lt;/li&gt; &#xA;   &lt;li&gt;Calls the API with same request payload in testcase.&lt;/li&gt; &#xA;   &lt;li&gt;Mocks external calls based on data stored in the testcase.&lt;/li&gt; &#xA;   &lt;li&gt;Validates the responses and uploads results to the keploy server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;export KEPLOY_MODE=&#34;test&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Need another language support? Please raise an &lt;a href=&#34;https://github.com/keploy/keploy/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title=&#34;&gt;issue&lt;/a&gt; or discuss on our &lt;a href=&#34;https://join.slack.com/t/keploy/shared_invite/zt-12rfbvc01-o54cOG0X1G6eVJTuI_orSA&#34;&gt;slack channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart on GitPod&lt;/h2&gt; &#xA;&lt;p&gt;The fastest way to start with Keploy is the Gitpod-hosted version. When you&#39;re ready, you can install locally or host yourself.&lt;/p&gt; &#xA;&lt;p&gt;One-click deploy sample URL Shortener application sample with Keploy using Gitpod&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/keploy/samples-go&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Current Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unit Testing&lt;/strong&gt;: While Keploy is designed to run alongside unit testing frameworks (Go test, JUnit..) and can add to the overall code coverage, it still generates E2E tests. So it might be easier to write unit tests for some methods instead of E2E tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Production usage&lt;/strong&gt; Keploy is currently focused on generating tests for developers. These tests can be captured from any environment, but we have not tested it on high volume production environments. This would need robust deduplication to avoid too many redundant tests being captured. We do have ideas on building a robust deduplication system &lt;a href=&#34;https://github.com/keploy/keploy/issues/27&#34;&gt;#27&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;De-noise requires mocking&lt;/strong&gt; Keploy issues a duplicate request and compares the responses with the previous responses to find &#34;noisy&#34; or non-deterministic fields. We have to ensure all non-idempotent dependencies are mocked/wrapped by Keploy to avoid unnecessary side effects in downstream services.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;🤔 &lt;a href=&#34;https://docs.keploy.io/docs/keploy-explained/faq&#34;&gt;FAQs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🕵️‍️ &lt;a href=&#34;https://docs.keploy.io/docs/keploy-explained/why-keploy&#34;&gt;Why Keploy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;⚙️ &lt;a href=&#34;https://docs.keploy.io/docs/server/server-installation&#34;&gt;Installation Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📖 &lt;a href=&#34;https://docs.keploy.io/docs/devtools/server-contrib-guide/&#34;&gt;Contribution Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community Support ❤️&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love to collaborate with you to make Keploy great. To get started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/keploy/shared_invite/zt-12rfbvc01-o54cOG0X1G6eVJTuI_orSA&#34;&gt;Slack&lt;/a&gt; - Discussions with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keploy/keploy/issues&#34;&gt;GitHub&lt;/a&gt; - For bug reports and feature requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/keploy/shared_invite/zt-12rfbvc01-o54cOG0X1G6eVJTuI_orSA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&amp;amp;logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/company/keploy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; alt=&#34;LinkedIn&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/YouTube-%23FF0000.svg?style=for-the-badge&amp;amp;logo=YouTube&amp;amp;logoColor=white&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/Keployio&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&amp;amp;logo=Twitter&amp;amp;logoColor=white&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
</feed>