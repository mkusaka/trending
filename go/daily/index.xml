<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-14T01:47:21Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sheepla/pingu</title>
    <updated>2022-06-14T01:47:21Z</updated>
    <id>tag:github.com,2022-06-14:/sheepla/pingu</id>
    <link href="https://github.com/sheepla/pingu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üêßping command but with pingu&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/sheepla/pingu/actions/workflows/golangci-lint.yml/badge.svg?sanitize=true&#34; alt=&#34;golangci-lint&#34;&gt; &lt;img src=&#34;https://github.com/sheepla/pingu/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;release&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;üêß pingu&lt;/h1&gt; &#xA; &lt;p&gt;&lt;code&gt;ping&lt;/code&gt; command implementation but with pingu ascii art&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Language&amp;amp;message=Go&amp;amp;color=blue&amp;amp;style=flat-square&#34; alt=&#34;Language:Go&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=License&amp;amp;message=MIT&amp;amp;color=blue&amp;amp;style=flat-square&#34; alt=&#34;License:MIT&#34;&gt; &lt;a href=&#34;https://github.com/sheepla/pingu/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/sheepla/pingu?style=flat-square&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/62412884/173192079-a6229925-2575-476c-9bb1-b5f0c6e2dbfc.png&#34; width=&#34;70%&#34; alt=&#34;screenshot&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Simply specify the target host name or IP address in the first argument.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  pingu [OPTIONS] HOST&#xA;&#xA;`ping` command but with pingu&#xA;&#xA;Application Options:&#xA;  -V, --version  Show version&#xA;&#xA;Help Options:&#xA;  -h, --help     Show this help message&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can download executable binaries from the latest release page.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/sheepla/pingu/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/sheepla/pingu?style=flat-square&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To build from source, clone this repository then run &lt;code&gt;go install&lt;/code&gt;. Developing on &lt;code&gt;go1.18.3 linux/amd64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sheepla/pingu/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sheepla&#34;&gt;Sheepla&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bxcodec/go-clean-arch</title>
    <updated>2022-06-14T01:47:21Z</updated>
    <id>tag:github.com,2022-06-14:/bxcodec/go-clean-arch</id>
    <link href="https://github.com/bxcodec/go-clean-arch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go (Golang) Clean Architecture based on Reading Uncle Bob&#39;s Clean Architecture&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go-clean-arch&lt;/h1&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;v1&lt;/strong&gt;: checkout to the &lt;a href=&#34;https://github.com/bxcodec/go-clean-arch/tree/v1&#34;&gt;v1 branch&lt;/a&gt; &lt;br&gt; Proposed on 2017, archived to v1 branch on 2018 &lt;br&gt; Desc: Initial proposal by me. The story can be read here: &lt;a href=&#34;https://medium.com/@imantumorang/golang-clean-archithecture-efd6d7c43047&#34;&gt;https://medium.com/@imantumorang/golang-clean-archithecture-efd6d7c43047&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;v2&lt;/strong&gt;: checkout to the &lt;a href=&#34;https://github.com/bxcodec/go-clean-arch/tree/v2&#34;&gt;v2 branch&lt;/a&gt; &lt;br&gt; Proposed on 2018, archived to v2 branch on 2020 &lt;br&gt; Desc: Improvement from v1. The story can be read here: &lt;a href=&#34;https://medium.com/@imantumorang/trying-clean-architecture-on-golang-2-44d615bf8fdf&#34;&gt;https://medium.com/@imantumorang/trying-clean-architecture-on-golang-2-44d615bf8fdf&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;v3&lt;/strong&gt;: master branch &lt;br&gt; Proposed on 2019, merged to master on 2020. &lt;br&gt; Desc: Introducing Domain package, the details can be seen on this PR &lt;a href=&#34;https://github.com/bxcodec/go-clean-arch/pull/21&#34;&gt;#21&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;This is an example of implementation of Clean Architecture in Go (Golang) projects.&lt;/p&gt; &#xA;&lt;p&gt;Rule of Clean Architecture by Uncle Bob&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Independent of Frameworks. The architecture does not depend on the existence of some library of feature laden software. This allows you to use such frameworks as tools, rather than having to cram your system into their limited constraints.&lt;/li&gt; &#xA; &lt;li&gt;Testable. The business rules can be tested without the UI, Database, Web Server, or any other external element.&lt;/li&gt; &#xA; &lt;li&gt;Independent of UI. The UI can change easily, without changing the rest of the system. A Web UI could be replaced with a console UI, for example, without changing the business rules.&lt;/li&gt; &#xA; &lt;li&gt;Independent of Database. You can swap out Oracle or SQL Server, for Mongo, BigTable, CouchDB, or something else. Your business rules are not bound to the database.&lt;/li&gt; &#xA; &lt;li&gt;Independent of any external agency. In fact your business rules simply don‚Äôt know anything at all about the outside world.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More at &lt;a href=&#34;https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html&#34;&gt;https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project has 4 Domain layer :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Models Layer&lt;/li&gt; &#xA; &lt;li&gt;Repository Layer&lt;/li&gt; &#xA; &lt;li&gt;Usecase Layer&lt;/li&gt; &#xA; &lt;li&gt;Delivery Layer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;The diagram:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/bxcodec/go-clean-arch/raw/master/clean-arch.png&#34; alt=&#34;golang clean architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The original explanation about this project&#39;s structure can read from this medium&#39;s post : &lt;a href=&#34;https://medium.com/@imantumorang/golang-clean-archithecture-efd6d7c43047&#34;&gt;https://medium.com/@imantumorang/golang-clean-archithecture-efd6d7c43047&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It may different already, but the concept still the same in application level, also you can see the change log from v1 to current version in Master.&lt;/p&gt; &#xA;&lt;h3&gt;How To Run This Project&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make Sure you have run the article.sql in your mysql&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Since the project already use Go Module, I recommend to put the source code in any folder but GOPATH.&lt;/p&gt; &#xA;&lt;h4&gt;Run the Testing&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run the Applications&lt;/h4&gt; &#xA;&lt;p&gt;Here is the steps to run it with &lt;code&gt;docker-compose&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#move to directory&#xA;$ cd workspace&#xA;&#xA;# Clone into YOUR $GOPATH/src&#xA;$ git clone https://github.com/bxcodec/go-clean-arch.git&#xA;&#xA;#move to project&#xA;$ cd go-clean-arch&#xA;&#xA;# Build the docker image first&#xA;$ make docker&#xA;&#xA;# Run the application&#xA;$ make run&#xA;&#xA;# check if the containers are running&#xA;$ docker ps&#xA;&#xA;# Execute the call&#xA;$ curl localhost:9090/articles&#xA;&#xA;# Stop&#xA;$ make stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tools Used:&lt;/h3&gt; &#xA;&lt;p&gt;In this project, I use some tools listed below. But you can use any simmilar library that have the same purposes. But, well, different library will have different implementation type. Just be creative and use anything that you really need.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All libraries listed in &lt;a href=&#34;https://github.com/bxcodec/go-clean-arch/raw/master/go.mod&#34;&gt;&lt;code&gt;go.mod&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vektra/mockery&#34;&gt;&#34;github.com/vektra/mockery&#34;.&lt;/a&gt; To Generate Mocks for testing needs.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>qdm12/gluetun</title>
    <updated>2022-06-14T01:47:21Z</updated>
    <id>tag:github.com,2022-06-14:/qdm12/gluetun</id>
    <link href="https://github.com/qdm12/gluetun" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VPN client in a thin Docker container for multiple VPN providers, written in Go, and using OpenVPN or Wireguard, DNS over TLS, with a few proxy servers built-in.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gluetun VPN client&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Lightweight swiss-knife-like VPN client to tunnel to Cyberghost, ExpressVPN, FastestVPN, HideMyAss, IPVanish, IVPN, Mullvad, NordVPN, Perfect Privacy, Privado, Private Internet Access, PrivateVPN, ProtonVPN, PureVPN, Surfshark, TorGuard, VPNUnlimited, VyprVPN, WeVPN and Windscribe VPN servers using Go, OpenVPN or Wireguard, iptables, DNS over TLS, ShadowSocks and an HTTP proxy&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/qdm12/gluetun/master/title.svg?sanitize=true&#34; alt=&#34;Title image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/qdm12/gluetun/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/qmcgaw/gluetun&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/qmcgaw/gluetun.svg?sanitize=true&#34; alt=&#34;Docker pulls qmcgaw/gluetun&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/qmcgaw/gluetun&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/qmcgaw/private-internet-access.svg?sanitize=true&#34; alt=&#34;Docker pulls qmcgaw/private-internet-access&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/qmcgaw/gluetun&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/qmcgaw/gluetun.svg?sanitize=true&#34; alt=&#34;Docker stars qmcgaw/gluetun&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/qmcgaw/gluetun&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/qmcgaw/private-internet-access.svg?sanitize=true&#34; alt=&#34;Docker stars qmcgaw/private-internet-access&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/release/qdm12/gluetun?label=Last%20release&#34; alt=&#34;Last release&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/v/qmcgaw/gluetun?sort=semver&amp;amp;label=Last%20Docker%20tag&#34; alt=&#34;Last Docker tag&#34;&gt; &lt;a href=&#34;https://hub.docker.com/r/qmcgaw/gluetun/tags?page=1&amp;amp;ordering=last_updated&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/qmcgaw/gluetun?sort=semver&amp;amp;label=Last%20released%20image&#34; alt=&#34;Last release size&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/release-date/qdm12/gluetun?label=Last%20release%20date&#34; alt=&#34;GitHub last release date&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commits-since/qdm12/gluetun/latest?sort=semver&#34; alt=&#34;Commits since release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/qmcgaw/gluetun/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/qmcgaw/gluetun/latest?label=Latest%20image&#34; alt=&#34;Latest size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/qdm12/gluetun.svg?sanitize=true&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qdm12/gluetun/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/y/qdm12/gluetun.svg?sanitize=true&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qdm12/gluetun/pulls?q=is%3Apr+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr-closed/qdm12/gluetun.svg?sanitize=true&#34; alt=&#34;GitHub closed PRs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qdm12/gluetun/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/qdm12/gluetun.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qdm12/gluetun/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/qdm12/gluetun.svg?sanitize=true&#34; alt=&#34;GitHub closed issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun&#34;&gt;&lt;img src=&#34;https://img.shields.io/tokei/lines/github/qdm12/gluetun&#34; alt=&#34;Lines of code&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/languages/code-size/qdm12/gluetun&#34; alt=&#34;Code size&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/qdm12/gluetun&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/qdm12/gluetun&#34; alt=&#34;Go version&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://visitor-badge.laobi.icu/badge?page_id=gluetun.readme&#34; alt=&#34;Visitors count&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qdm12/gluetun/master/#Setup&#34;&gt;Setup&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qdm12/gluetun/master/#Features&#34;&gt;Features&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Problem?&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/wiki&#34;&gt;Check the Wiki&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/discussions&#34;&gt;Start a discussion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/discussions/550&#34;&gt;Fix the Unraid template&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Suggestion?&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/issues&#34;&gt;Create an issue&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/qdm12/shared_invite/enQtOTE0NjcxNTM1ODc5LTYyZmVlOTM3MGI4ZWU0YmJkMjUxNmQ4ODQ2OTAwYzMxMTlhY2Q1MWQyOWUyNjc2ODliNjFjMDUxNWNmNzk5MDk&#34;&gt;Join the Slack channel&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Happy?&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Sponsor me on &lt;a href=&#34;https://github.com/sponsors/qdm12&#34;&gt;github.com/sponsors/qdm12&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Donate to &lt;a href=&#34;https://www.paypal.me/qmcgaw&#34;&gt;paypal.me/qmcgaw&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Drop me &lt;a href=&#34;mailto:quentin.mcgaw@gmail.com&#34;&gt;an email&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Video:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/0F6I03LQcI4&#34;&gt;&lt;img src=&#34;https://i.imgur.com/CetWunc.gif&#34; alt=&#34;Video Gif&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://console.substack.com/p/console-72&#34;&gt;Substack Console interview&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Based on Alpine 3.16 for a small Docker image of 29MB&lt;/li&gt; &#xA; &lt;li&gt;Supports: &lt;strong&gt;Cyberghost&lt;/strong&gt;, &lt;strong&gt;ExpressVPN&lt;/strong&gt;, &lt;strong&gt;FastestVPN&lt;/strong&gt;, &lt;strong&gt;HideMyAss&lt;/strong&gt;, &lt;strong&gt;IPVanish&lt;/strong&gt;, &lt;strong&gt;IVPN&lt;/strong&gt;, &lt;strong&gt;Mullvad&lt;/strong&gt;, &lt;strong&gt;NordVPN&lt;/strong&gt;, &lt;strong&gt;Perfect Privacy&lt;/strong&gt;, &lt;strong&gt;Privado&lt;/strong&gt;, &lt;strong&gt;Private Internet Access&lt;/strong&gt;, &lt;strong&gt;PrivateVPN&lt;/strong&gt;, &lt;strong&gt;ProtonVPN&lt;/strong&gt;, &lt;strong&gt;PureVPN&lt;/strong&gt;, &lt;strong&gt;Surfshark&lt;/strong&gt;, &lt;strong&gt;TorGuard&lt;/strong&gt;, &lt;strong&gt;VPNUnlimited&lt;/strong&gt;, &lt;strong&gt;Vyprvpn&lt;/strong&gt;, &lt;strong&gt;WeVPN&lt;/strong&gt;, &lt;strong&gt;Windscribe&lt;/strong&gt; servers&lt;/li&gt; &#xA; &lt;li&gt;Supports OpenVPN for all providers listed&lt;/li&gt; &#xA; &lt;li&gt;Supports Wireguard both kernelspace and userspace &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For &lt;strong&gt;Mullvad&lt;/strong&gt;, &lt;strong&gt;Ivpn&lt;/strong&gt; and &lt;strong&gt;Windscribe&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For &lt;strong&gt;Torguard&lt;/strong&gt;, &lt;strong&gt;VPN Unlimited&lt;/strong&gt; and &lt;strong&gt;WeVPN&lt;/strong&gt; using &lt;a href=&#34;https://github.com/qdm12/gluetun/wiki/Custom-provider&#34;&gt;the custom provider&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For custom Wireguard configurations using &lt;a href=&#34;https://github.com/qdm12/gluetun/wiki/Custom-provider&#34;&gt;the custom provider&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;More in progress, see &lt;a href=&#34;https://github.com/qdm12/gluetun/issues/134&#34;&gt;#134&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;DNS over TLS baked in with service provider(s) of your choice&lt;/li&gt; &#xA; &lt;li&gt;DNS fine blocking of malicious/ads/surveillance hostnames and IP addresses, with live update every 24 hours&lt;/li&gt; &#xA; &lt;li&gt;Choose the vpn network protocol, &lt;code&gt;udp&lt;/code&gt; or &lt;code&gt;tcp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Built in firewall kill switch to allow traffic only with needed the VPN servers and LAN devices&lt;/li&gt; &#xA; &lt;li&gt;Built in Shadowsocks proxy (protocol based on SOCKS5 with an encryption layer, tunnels TCP+UDP)&lt;/li&gt; &#xA; &lt;li&gt;Built in HTTP proxy (tunnels HTTP and HTTPS through TCP)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/wiki/Connect-a-container-to-gluetun&#34;&gt;Connect other containers to it&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/wiki/Connect-a-LAN-device-to-gluetun&#34;&gt;Connect LAN devices to it&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compatible with amd64, i686 (32 bit), &lt;strong&gt;ARM&lt;/strong&gt; 64 bit, ARM 32 bit v6 and v7, and even ppc64le üéÜ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/wiki/Private-internet-access#vpn-server-port-forwarding&#34;&gt;Custom VPN server side port forwarding for Private Internet Access&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Possibility of split horizon DNS by selecting multiple DNS over TLS providers&lt;/li&gt; &#xA; &lt;li&gt;Unbound subprogram drops root privileges once launched&lt;/li&gt; &#xA; &lt;li&gt;Can work as a Kubernetes sidecar container, thanks @rorph&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;üéâ There are now instructions specific to each VPN provider with examples to help you get started as quickly as possible!&lt;/p&gt; &#xA;&lt;p&gt;Go to the &lt;a href=&#34;https://github.com/qdm12/gluetun/wiki&#34;&gt;Wiki&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/issues/new?assignees=&amp;amp;labels=%F0%9F%93%84+Wiki+issue&amp;amp;template=wiki+issue.yml&amp;amp;title=Wiki+issue%3A+&#34;&gt;üêõ Found a bug in the Wiki?!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a docker-compose.yml for the laziest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;  gluetun:&#xA;    image: qmcgaw/gluetun&#xA;    # container_name: gluetun&#xA;    # line above must be uncommented to allow external containers to connect. See https://github.com/qdm12/gluetun/wiki/Connect-a-container-to-gluetun#external-container-to-gluetun&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;    devices:&#xA;      - /dev/net/tun:/dev/net/tun&#xA;    ports:&#xA;      - 8888:8888/tcp # HTTP proxy&#xA;      - 8388:8388/tcp # Shadowsocks&#xA;      - 8388:8388/udp # Shadowsocks&#xA;    volumes:&#xA;      - /yourpath:/gluetun&#xA;    environment:&#xA;      # See https://github.com/qdm12/gluetun/wiki&#xA;      - VPN_SERVICE_PROVIDER=ivpn&#xA;      - VPN_TYPE=openvpn&#xA;      # OpenVPN:&#xA;      - OPENVPN_USER=&#xA;      - OPENVPN_PASSWORD=&#xA;      # Wireguard:&#xA;      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=&#xA;      # - WIREGUARD_ADDRESSES=10.64.222.21/32&#xA;      # Timezone for accurate log times&#xA;      - TZ=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/gluetun/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/qdm12/gluetun&#34; alt=&#34;MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>