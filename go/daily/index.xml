<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-02T01:35:26Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Hesse/gitgpt</title>
    <updated>2023-03-02T01:35:26Z</updated>
    <id>tag:github.com,2023-03-02:/Hesse/gitgpt</id>
    <link href="https://github.com/Hesse/gitgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A natural language command line git assistant&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Natural Language Git CLI assistant&lt;/h1&gt; &#xA;&lt;p&gt;Interfacing with git sucks. With gitgpt you can use natural langauge instead of git commands to do what you want.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./gitgpt add .gitignore commit with msg adding ignore and push&#xA;Would you like to run the following command:&#xA;&#xA;git add .gitignore&#xA;git commit -m &#34;adding ignore&#34;&#xA;git push [y/N] y&#xA;[main c70490c] adding ignore&#xA; 1 file changed, 3 insertions(+)&#xA; create mode 100644 .gitignore&#xA;Enumerating objects: 4, done.&#xA;Counting objects: 100% (4/4), done.&#xA;Delta compression using up to 12 threads&#xA;Compressing objects: 100% (2/2), done.&#xA;Writing objects: 100% (3/3), 312 bytes | 312.00 KiB/s, done.&#xA;Total 3 (delta 0), reused 0 (delta 0), pack-reused 0&#xA;To https://github.com/Hesse/gitgpt.git&#xA;   3a5828e..c70490c  main -&amp;gt; main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must have an OpenAI API key. This key should be set as an environment vairable OPENAI_API_KEY.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;export OPENAI_API_KEY=&amp;lt;yourkey&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must have go installed in order to build the source OR you can download the pre-built binary&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I have only tested this on Mac OS, however I&#39;m pretty sure it&#39;ll work without issue on Linux as well. I can&#39;t say the same about Windows because I haven&#39;t tested it.&lt;/p&gt; &#xA;&lt;h2&gt;Build / Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA; &lt;li&gt;go build -o dist/gitgpt main.go&lt;/li&gt; &#xA; &lt;li&gt;Add the file to your PATH&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#39;export PATH=$PATH:&amp;lt;path_to_repository/dist&amp;gt;&#39; &amp;gt;&amp;gt; ~/.bash_profile&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start using gitgpt in you shell!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;$ gitgpt create a new branch called feature/test add all the files and commit with msg creating feature test then push to origin&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gitgpt create a new branch called feature/test add all the files and commit with msg creating feature test then push to origin&#xA;Would you like to run the following command:&#xA;&#xA;git branch feature/test&#xA;git add .&#xA;git commit -m &#34;creating feature test&#34;&#xA;git push origin feature/test [y/N]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>