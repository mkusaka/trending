<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-04T01:35:12Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ServiceWeaver/weaver</title>
    <updated>2023-03-04T01:35:12Z</updated>
    <id>tag:github.com,2023-03-04:/ServiceWeaver/weaver</id>
    <link href="https://github.com/ServiceWeaver/weaver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Programming framework for writing and deploying cloud applications.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/ServiceWeaver/weaver&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/ServiceWeaver/weaver.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Service Weaver&lt;/h1&gt; &#xA;&lt;p&gt;Service Weaver is a programming framework for writing, deploying, and managing distributed applications. You can run, test, and debug a Service Weaver application locally on your machine, and then deploy it to the cloud with a single command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run .                      # Run locally.&#xA;$ weaver gke deploy weaver.toml # Run in the cloud.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://serviceweaver.dev&#34;&gt;https://serviceweaver.dev&lt;/a&gt; to learn more about Service Weaver.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://serviceweaver.dev/docs.html&#34;&gt;https://serviceweaver.dev/docs.html&lt;/a&gt; for installation instructions and information on getting started.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/ServiceWeaver/weaver/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; for details on how to contribute.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>go-zoox/chatgpt-for-chatbot-feishu</title>
    <updated>2023-03-04T01:35:12Z</updated>
    <id>tag:github.com,2023-03-04:/go-zoox/chatgpt-for-chatbot-feishu</id>
    <link href="https://github.com/go-zoox/chatgpt-for-chatbot-feishu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;快速将 ChatGPT 接入飞书，基于 OpenAI 官方接口，作为私人工作助理或者企业员工助理&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT For ChatBot Feishu&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;快速将 ChatGPT 接入飞书，基于 &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI 官方接口&lt;/a&gt;，作为私人工作助理或者企业员工助理&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E9%A2%84%E8%A7%88&#34;&gt;一、预览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E5%8A%9F%E8%83%BD%E6%94%AF%E6%8C%81&#34;&gt;二、功能支持&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E9%A1%B9%E7%9B%AE%E7%89%B9%E7%82%B9&#34;&gt;三、项目特点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88&#34;&gt;四、部署方案&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E6%8E%A8%E8%8D%90&#34;&gt;一键部署（推荐）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E4%BA%8C%E8%BF%9B%E5%88%B6&#34;&gt;二进制&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#docker-compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91&#34;&gt;二次开发&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE%E5%8F%AF%E9%80%89&#34;&gt;五、高级配置（可选）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E9%A3%9E%E4%B9%A6%E5%BA%94%E7%94%A8%E9%85%8D%E7%BD%AE%E5%92%8C-openai-%E7%9B%B8%E5%85%B3%E6%AD%A5%E9%AA%A4&#34;&gt;六、飞书应用配置和 OpenAI 相关步骤&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E6%9B%B4%E5%A4%9A%E4%BA%A4%E6%B5%81&#34;&gt;七、更多交流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90&#34;&gt;八、相关资源&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97&#34;&gt;九、更新日志&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/#LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;预览&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/docs/assets/images/chatgpt.chat.group.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/docs/assets/images/chatgpt.chat.p2p.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能支持&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持长对话，自动联系上下文&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持私人对话&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持群聊 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 @ 机器人回复&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 也支持命令（&lt;code&gt;/chatgpt&lt;/code&gt;）触发，格式：&lt;code&gt;/chatgpt 你的问题&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义 OpenAI 模型&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义语言（请查看高级配置）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义上下文（请查看高级配置）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 Docker&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持配置启动反向代理 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.cpolar.com/&#34;&gt;cpolar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://ngrok.com/&#34;&gt;ngrok&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://natapp.cn/&#34;&gt;natapp&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持二次开发，快速接入企业现有应用 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Go 开发框架 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/go-zoox/zoox&#34;&gt;Go-Zoox&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Gin&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Echo&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Go-Zero&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基于 &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI GPT3&lt;/a&gt; 接口，使用 &lt;a href=&#34;https://github.com/go-zoox/chatgpt-client&#34;&gt;ChatGPT Client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;通过 &lt;a href=&#34;https://github.com/go-zoox/chatbot-feishu&#34;&gt;ChatBot-Feishu&lt;/a&gt; 将 ChatGPT 接入&lt;a href=&#34;https://open.feishu.cn/app&#34;&gt;飞书&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://dashboard.cpolar.com/login&#34;&gt;本地环境&lt;/a&gt;、&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; 多种渠道部署&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;部署方案&lt;/h2&gt; &#xA;&lt;h3&gt;一键部署（推荐）&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 基于服务端管理框架 Zmicro，自动安装缺失依赖，使用 Zmicro Service，底层容器使用 Docker&#xA;# 执行下面脚本，并按提示操作，填写飞书 APP ID/Secret 和 OpenAI API Key&#xA;# 更多用法，注意看提示&#xA;$ curl -fsSL https://raw.githubusercontent.com/zmicro-design/service-chatgpt-for-chatbot-feishu/master/install -o /tmp/install.sh &amp;amp;&amp;amp; bash /tmp/install&#xA;.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;二进制&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 安装服务器管理框架 Zmicro&#xA;$ curl -o- https://raw.githubusercontent.com/zcorky/zmicro/master/install | bash&#xA;&#xA;# 安装 chatgpt-for-chatbot-feishu&#xA;$ zmicro package install chatgpt-for-chatbot-feishu&#xA;&#xA;# 准备环境飞书 APP ID/Secret 和 OpenAI API Key&#xA;$ export APP_ID=&amp;lt;YOUR_FEISHU_APP_ID&amp;gt;&#xA;$ export APP_SECRET=&amp;lt;YOUR_FEISHU_APP_SECRET&amp;gt;&#xA;$ export OPENAI_API_KEY=&amp;lt;YOUR_OPENAI_API_KEY&amp;gt;&#xA;&#xA;# 运行&#xA;$ zmicro chatgpt-for-chatbot-feishu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# docker-compose.yaml&#xA;services:&#xA;  chatgpt-for-chatbot-feishu:&#xA;  image: whatwewant/chatgpt-for-chatbot-feishu:latest&#xA;  platform: linux/amd64&#xA;  ports:&#xA;    - 8080:8080&#xA;  environment:&#xA;    APP_ID: &#34;&amp;lt;YOUR_FEISHU_APP_ID&amp;gt;&#34;&#xA;    APP_SECRET: &#34;&amp;lt;YOUR_FEISHU_APP_SECRET&amp;gt;&#34;&#xA;    OPENAI_API_KEY: &#34;&amp;lt;YOUR_OPENAI_API_KEY&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 启动&#xA;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;高级环境配置（可选）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;API_PATH&lt;/code&gt;: 自定义 WebHook 路径&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ENCRYPT_KEY&lt;/code&gt;: 飞书事件密钥&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;VERIFICATION_TOKEN&lt;/code&gt;: 飞书 Challenge 校验 Token&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SITE_URL&lt;/code&gt;: 自定义域名地址&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;OPENAI_MODEL&lt;/code&gt;: 自定义 OpenAI 模型&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FEISHU_BASE_URI&lt;/code&gt;: 私有部署飞书地址&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CHATGPT_CONTEXT_MESSAGE&lt;/code&gt;: 自定义上下文消息&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CHATGPT_LANGUAGE&lt;/code&gt;: 自定义机器人初始语言，默认是英文，如需中文（ZH_CN)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TUNNEL_ENABLE&lt;/code&gt;: 启用 Ngrok&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TUNNEL_TYPE&lt;/code&gt;: 指定隧道类型，可选项：ngrok | cpolar&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AUTH_TOKEN&lt;/code&gt;: 付费用户 Auth Token&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SUBDOMAIN&lt;/code&gt;: 指定固定子域名&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LOGS_DIR&lt;/code&gt;: 自定义日志目录&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ADMIN_EMAIL&lt;/code&gt;: 管理员企业邮箱&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;OFFLINE_MESSAGE&lt;/code&gt;：离线自动回复内容&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;飞书应用配置和 OpenAI 相关步骤&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;新人推荐先看飞书开放平台文档: &lt;a href=&#34;https://www.feishu.cn/hc/zh-CN/articles/360049067916&#34;&gt;飞书如何开发企业自建应用&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;S1. 获取 &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI&lt;/a&gt; 的 API Key&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S2. 创建 &lt;a href=&#34;https://open.feishu.cn/&#34;&gt;飞书&lt;/a&gt; 机器人&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;前往&lt;a href=&#34;https://open.feishu.cn/app?lang=zh-CN&#34;&gt;开发者平台&lt;/a&gt;创建应用,并获取到 AppID 和 AppSecret&lt;/li&gt; &#xA;   &lt;li&gt;前往&lt;code&gt;添加应用能力&lt;/code&gt; =&amp;gt; &lt;code&gt;机器人&lt;/code&gt;, 创建机器人&lt;/li&gt; &#xA;   &lt;li&gt;从cpolar或者serverless获得公网地址,在飞书机器人后台的 &lt;code&gt;事件订阅&lt;/code&gt; 板块填写。例如， &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;http://xxxx.r6.cpolar.top&lt;/code&gt;为cpolar暴露的公网地址&lt;/li&gt; &#xA;     &lt;li&gt;事件默认 API 路径是：&lt;code&gt;/&lt;/code&gt;, 支持自定义路径，例如设置环境变量 &lt;code&gt;API_PATH&lt;/code&gt; 为 &lt;code&gt;/webhook/event&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;最终的回调地址为 &lt;code&gt;http://xxxx.r6.cpolar.top/&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;前往 &lt;code&gt;事件订阅&lt;/code&gt; 添加下列回调事件 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;接收群消息：&lt;code&gt;im.message.receive_v1&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;消息撤回：&lt;code&gt;im.message.recalled_v1&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;机器人进群：&lt;code&gt;im.chat.member.bot.added_v1&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;机器人被移出群：&lt;code&gt;im.chat.member.bot.deleted_v1&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;前往 &lt;code&gt;权限管理&lt;/code&gt; 添加以下权限 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;获取与发送单聊、群组消息：&lt;code&gt;im:message&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;以应用的身份发消息: &lt;code&gt;im:message:send_as_bot&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;获取用户发给机器人的单聊消息: &lt;code&gt;im:message.p2p_msg&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;读取用户发给机器人的单聊消息: &lt;code&gt;im:message.p2p_msg:readonly&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;获取群组中所有消息: &lt;code&gt;im:message.group_msg&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;获取用户在群组中@机器人的消息: &lt;code&gt;im:message.group_at_msg&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;接收群聊中@机器人消息事件: &lt;code&gt;im:message.group_at_msg:readonly&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;获取与更新群组信息: &lt;code&gt;im:chat&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;获取群组信息: &lt;code&gt;im:chat:readonly&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;[可选] 获取用户信息（如果设置管理员 ADMIN_EMAIL 则必须）: &lt;code&gt;contact:contact:readonly_as_app&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S3. 发布版本，等待企业管理员审核通过&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;更多飞书配置可参考 &lt;a href=&#34;https://github.com/Leizhenpeng/feishu-chatGpt/raw/master/readme.md&#34;&gt;Leizhenpeng/feishu-chatGpt&lt;/a&gt;、&lt;a href=&#34;https://github.com/bestony/ChatGPT-Feishu&#34;&gt;bestony/ChatGPT-Feishu&lt;/a&gt; 文档&lt;/p&gt; &#xA;&lt;h3&gt;更多交流&lt;/h3&gt; &#xA;&lt;p&gt;可以创建 Issue 或者加微信，备注来自：ChatGPT-For-ChatBot-Feishu，加入微信群沟通&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/docs/assets/images/wechat.qrcode.jpeg&#34; alt=&#34;&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/docs/assets/images/wechat.group.qrcode.jpeg&#34; alt=&#34;&#34; width=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;相关资源&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/go-zoox/gzchatgpt&#34;&gt;go-zoox/gzchatgpt&lt;/a&gt; - ChatGPT CLI Demo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api&#34;&gt;transitive-bullshit/chatgpt-api&lt;/a&gt; - 一个 Node.js 实现的 ChatGPT Client SDK&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Leizhenpeng/feishu-chatGpt/raw/master/readme.md&#34;&gt;Leizhenpeng/feishu-chatGpt&lt;/a&gt; - 在飞书上与ChatGPT随时对话&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bestony/ChatGPT-Feishu&#34;&gt;bestony/ChatGPT-Feishu&lt;/a&gt; - 给飞书准备的 ChatGPT 机器人&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/go-zoox/chatgpt-client&#34;&gt;ChatGPT Client&lt;/a&gt; - 一个 Go 语言实现的 ChatGPT Client SDK&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/go-zoox/chatbot-feishu&#34;&gt;ChatBot Feishu&lt;/a&gt; - 一个 Go 语言实现的飞书机器人框架&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/go-zoox/feishu&#34;&gt;Feishu SDK&lt;/a&gt; - 一个 Go 语言实现的飞书 SDK&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/go-zoox/openai-client&#34;&gt;OpenAI Client&lt;/a&gt; - 一个 Go 语言实现的 OpenAI Client SDK&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zcorky/zmicro&#34;&gt;Zmicro&lt;/a&gt; - 一个原生 Shell 实现的、强大的跨平台服务器管理框架，快速开发各种 CLI 插件、服务以及包管理等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zmicro-design/service-chatgpt-for-chatbot-feishu&#34;&gt;Zmicro Service | Chatgpt-for-ChatBot-Feishu&lt;/a&gt; - ChatGPT-for-ChatBot-Feishu 的 zmicro service 实现&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zmicro-design/service-chatgpt-for-chatbot-feishu&#34;&gt;Zmicro Package | Chatgpt-for-ChatBot-Feishu&lt;/a&gt; - ChatGPT-for-ChatBot-Feishu 的 zmicro package 实现&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;更新日志&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.25 支持设置管理员，用于执行命令，环境变量：&lt;code&gt;ADMIN_ENV&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.25 支持自定义离线自动回复内容，环境变量：&lt;code&gt;OFFLINE_MESSAGE&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.25 内置上线（/online）、下线（/offline）命令&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.23 修复 CI Docker Image Tag latest&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.23 事件支持 encrypt key (#31)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.23 Challenge 支持 verification token (#31)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.24 支持命令模式，为角色扮演命令做好准备 (#29)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.23 修复飞书由于网络原因会重发消息，应该可以从 chatbot 端忽略已经重复的消息 (#28)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.23 支持自定义上下文，使用 env CHATGPT_CONTEXT_MESSAGE (#22)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.23 支持自定义初始语言，如果不指定，默认是英文，使用 env CHATGPT_LANGUAGE (#22)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.22 修复从零开始创建机器人的时候需要飞书 Challenge 但是启动服务需要开通机器人，从而造成死循环，无法启动服务&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.22 支持私有部署的飞书 (#17)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.22 支持自定义 OpenAI 模型 (#16)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2023.02.20 内置支持 tunnel，目前支持 cpolar，ngrok，一键部署版本支持通过 &lt;code&gt;zmicro service upgrade chatgpt-for-chatbot-feishu&lt;/code&gt; 快速升级，按提示操作即可，使用更加简单&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;LICENSE&lt;/h3&gt; &#xA;&lt;p&gt;MIT © &lt;a href=&#34;https://raw.githubusercontent.com/go-zoox/chatgpt-for-chatbot-feishu/master/LICENSE&#34;&gt;whatwewant&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xinliangnote/go-gin-api</title>
    <updated>2023-03-04T01:35:12Z</updated>
    <id>tag:github.com,2023-03-04:/xinliangnote/go-gin-api</id>
    <link href="https://github.com/xinliangnote/go-gin-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于 Gin 进行模块化设计的 API 框架，封装了常用功能，使用简单，致力于进行快速的业务研发。比如，支持 cors 跨域、jwt 签名验证、zap 日志收集、panic 异常捕获、trace 链路追踪、prometheus 监控指标、swagger 文档生成、viper 配置文件解析、gorm 数据库组件、gormgen 代码生成工具、graphql 查询语言、errno 统一定义错误码、gRPC 的使用、cron 定时任务 等等。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;关于&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go-gin-api&lt;/code&gt;&amp;nbsp;是基于&amp;nbsp;&lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;Gin&lt;/a&gt; 进行模块化设计的 API 框架，封装了常用的功能，使用简单，致力于进行快速的业务研发，同时增加了更多限制，约束项目组开发成员，规避混乱无序及自由随意的编码。&lt;/p&gt; &#xA;&lt;p&gt;供参考学习，线上使用请谨慎！&lt;/p&gt; &#xA;&lt;p&gt;集成组件：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://golang.org/x/time/rate&#34;&gt;rate&lt;/a&gt; 接口限流&lt;/li&gt; &#xA; &lt;li&gt;支持 panic 异常时邮件通知&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/rs/cors&#34;&gt;cors&lt;/a&gt; 接口跨域&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/prometheus/client_golang&#34;&gt;Prometheus&lt;/a&gt; 指标记录&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/swaggo/gin-swagger&#34;&gt;Swagger&lt;/a&gt; 接口文档生成&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/99designs/gqlgen&#34;&gt;GraphQL&lt;/a&gt; 查询语言&lt;/li&gt; &#xA; &lt;li&gt;支持 trace 项目内部链路追踪&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/gin-contrib/pprof&#34;&gt;pprof&lt;/a&gt; 性能剖析&lt;/li&gt; &#xA; &lt;li&gt;支持 errno 统一定义错误码&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://go.uber.org/zap&#34;&gt;zap&lt;/a&gt; 日志收集&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;viper&lt;/a&gt; 配置文件解析&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://gorm.io/gorm&#34;&gt;gorm&lt;/a&gt; 数据库组件&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/go-redis/redis/v7&#34;&gt;go-redis&lt;/a&gt; 组件&lt;/li&gt; &#xA; &lt;li&gt;支持 RESTful API 返回值规范&lt;/li&gt; &#xA; &lt;li&gt;支持 生成数据表 CURD、控制器方法 等代码生成器&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/jakecoffman/cron&#34;&gt;cron&lt;/a&gt; 定时任务，在后台可界面配置&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/gorilla/websocket&#34;&gt;websocket&lt;/a&gt; 实时通讯，在后台有界面演示&lt;/li&gt; &#xA; &lt;li&gt;支持 web 界面，使用的 &lt;a href=&#34;https://gitee.com/yinqi/Light-Year-Admin-Using-Iframe&#34;&gt;Light Year Admin 模板&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;文档索引&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;中文文档：&lt;a href=&#34;https://www.yuque.com/xinliangnote/go-gin-api/ngc3x5&#34;&gt;go-gin-api - 语雀&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;English Document：&lt;a href=&#34;https://github.com/xinliangnote/go-gin-api/raw/master/en.md&#34;&gt;en.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他&lt;/h2&gt; &#xA;&lt;p&gt;查看 Jaeger 链路追踪 Demo 代码，请查看 &lt;a href=&#34;https://github.com/xinliangnote/go-gin-api/releases/tag/v1.0&#34;&gt;v1.0 版&lt;/a&gt; ，链接地址：&lt;a href=&#34;http://127.0.0.1:9999/jaeger_test&#34;&gt;http://127.0.0.1:9999/jaeger_test&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;调用的其他服务端 Demo 代码为 &lt;a href=&#34;https://github.com/xinliangnote/go-jaeger-demo&#34;&gt;https://github.com/xinliangnote/go-jaeger-demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;联系作者&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/07/02/cwiLQ13CRgJIS86.jpg&#34; alt=&#34;联系作者&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>