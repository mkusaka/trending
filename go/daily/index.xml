<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-18T01:35:41Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Pizz33/GobypassAV-shellcode</title>
    <updated>2023-05-18T01:35:41Z</updated>
    <id>tag:github.com,2023-05-18:/Pizz33/GobypassAV-shellcode</id>
    <link href="https://github.com/Pizz33/GobypassAV-shellcode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;免杀shellcode加载器，使用go实现，免杀bypass火绒、360、核晶、def等主流杀软&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GobypassAV-shellcode&lt;/h1&gt; &#xA;&lt;p&gt;cobaltstrike免杀，实测过 bypass火绒、360、360核晶、360杀毒、def、金山毒霸等主流杀软&lt;/p&gt; &#xA;&lt;p&gt;2023/5/11 更新了远程加载方式，shellcode存云端免杀性更好 🤪&lt;/p&gt; &#xA;&lt;p&gt;2023/4/27 更新了加密方式，提升免杀性&lt;/p&gt; &#xA;&lt;p&gt;详细教程请移步博客：&lt;a href=&#34;https://pizz33.github.io/posts/4ac17cb886a9/&#34;&gt;https://pizz33.github.io/posts/4ac17cb886a9/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;食用方法：&lt;/p&gt; &#xA;&lt;p&gt;1、生成c的payload&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/232708666-a8e28b1b-2502-4bbc-91a9-d88e5ff44e9d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;2、&lt;code&gt;go run encode.go&lt;/code&gt; or &lt;code&gt;python xor64.py&lt;/code&gt; 对shellcode进行加密&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/232708833-9709b6c6-59b3-455a-aaa5-e4a92e549c3b.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;3、加密后的结果填到代码里编译运行 &lt;code&gt;go build decode.go&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;远程加载把加密后的字符串放到云端，把云端地址填到对应位置生成 （可放到vps上或使用oss云存储等）&lt;/p&gt; &#xA;&lt;p&gt;(这里大多报错为缺少依赖，运行 &lt;code&gt;go mod init&lt;/code&gt; &amp;amp; &lt;code&gt;go mod tidy&lt;/code&gt; 拉取即可)&lt;/p&gt; &#xA;&lt;p&gt;免杀效果：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/234937098-ba1f7e9b-0c8e-4455-a84b-46a6ae53159f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/234936629-b80e9b97-8a85-485e-9097-bbf4091a4d39.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/234928250-bcf2952f-c345-4241-b33c-73e053b54dd5.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/233016193-23d034da-951a-400a-9720-fffa2b21ba81.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/234165227-7a26383c-6f8f-484a-8bfb-6d35d2880e59.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/234788023-2a9fd53a-2c02-4467-9ef1-6c654106680d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88339946/232708290-e8f5c3cb-52cb-45bf-a7ea-43615bae0e9d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#star-history/star-history&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Pizz33/GobypassAV-shellcode&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关&lt;/p&gt; &#xA;&lt;p&gt;站在巨人的肩膀上学习，参考借鉴以下师傅的项目，特别感谢&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualalloc&#34;&gt;https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualalloc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/7BitsTeam/EDR-Bypass-demo&#34;&gt;https://github.com/7BitsTeam/EDR-Bypass-demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/aufeng/aufeng_good/aq09p0#yNorm&#34;&gt;https://www.yuque.com/aufeng/aufeng_good/aq09p0#yNorm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/xiFbSE6goKFqLAlyACi83A&#34;&gt;https://mp.weixin.qq.com/s/xiFbSE6goKFqLAlyACi83A&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/timwhitez/Doge-Loader&#34;&gt;https://github.com/timwhitez/Doge-Loader&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TideSec/GoBypassAV&#34;&gt;https://github.com/TideSec/GoBypassAV&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.crisprx.top/archives/515&#34;&gt;https://www.crisprx.top/archives/515&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Ne0nd0g/go-shellcode&#34;&gt;https://github.com/Ne0nd0g/go-shellcode&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/piiperxyz/AniYa&#34;&gt;https://github.com/piiperxyz/AniYa&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/safe6Sec/GolangBypassAV&#34;&gt;https://github.com/safe6Sec/GolangBypassAV&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>megaease/easeprobe</title>
    <updated>2023-05-18T01:35:41Z</updated>
    <id>tag:github.com,2023-05-18:/megaease/easeprobe</id>
    <link href="https://github.com/megaease/easeprobe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple, standalone, and lightweight tool that can do health/status checking, written in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EaseProbe&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/megaease/easeprobe&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/megaease/easeprobe&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/megaease/easeprobe&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/megaease/easeprobe/branch/main/graph/badge.svg?token=L7SR8X6SRN&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/megaease/easeprobe/actions/workflows/test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/megaease/easeprobe/actions/workflows/test.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/megaease/easeprobe/raw/main/go.mod&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/megaease/easeprobe&#34; alt=&#34;GitHub go.mod Go version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/openmegaease/shared_invite/zt-upo7v306-lYPHvVwKnvwlqR0Zl2vveA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-megaease-brightgreen?logo=slack&#34; alt=&#34;Join MegaEase Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;EaseProbe is a simple, standalone, and lightweight tool that can do health/status checking, written in Go.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/overview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#1-introduction&#34;&gt;1. Introduction&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#11-probe&#34;&gt;1.1 Probe&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#12-notification&#34;&gt;1.2 Notification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#13-report--metrics&#34;&gt;1.3 Report &amp;amp; Metrics&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#2-getting-started&#34;&gt;2. Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#21-build&#34;&gt;2.1 Build&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#22-configure&#34;&gt;2.2 Configure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#23-run&#34;&gt;2.3 Run&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#3-deployment&#34;&gt;3. Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#4-user-manual&#34;&gt;4. User Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#5-benchmark&#34;&gt;5. Benchmark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#6-contributing&#34;&gt;6. Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#7-community&#34;&gt;7. Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/#8-license&#34;&gt;8. License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;1. Introduction&lt;/h1&gt; &#xA;&lt;p&gt;EaseProbe is designed to do three kinds of work - &lt;strong&gt;Probe&lt;/strong&gt;, &lt;strong&gt;Notify&lt;/strong&gt;, and &lt;strong&gt;Report&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;1.1 Probe&lt;/h2&gt; &#xA;&lt;p&gt;EaseProbe supports a variety of methods to perform its probes such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;HTTP&lt;/strong&gt;. Checking the HTTP status code, Support mTLS, HTTP Basic Auth, setting Request Header/Body, and XPath response evaluation. ( &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#12-http&#34;&gt;HTTP Probe Manual&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TCP&lt;/strong&gt;. Check whether a TCP connection can be established or not. ( &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#13-tcp&#34;&gt;TCP Probe Manual&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ping&lt;/strong&gt;. Ping a host to see if it is reachable or not. ( &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#14-ping&#34;&gt;Ping Probe Manual&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shell&lt;/strong&gt;. Run a Shell command and check the result. ( &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#15-shell&#34;&gt;Shell Command Probe Manual&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSH&lt;/strong&gt;. Run a remote command via SSH and check the result. Support the bastion/jump server (&lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#16-ssh&#34;&gt;SSH Command Probe Manual&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TLS&lt;/strong&gt;. Connect to a given port using TLS and (optionally) validate for revoked or expired certificates ( &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#17-tls&#34;&gt;TLS Probe Manual&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Host&lt;/strong&gt;. Run an SSH command on a remote host and check the CPU, Memory, and Disk usage. ( &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#18-host&#34;&gt;Host Load Probe Manual&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Client&lt;/strong&gt;. The following native clients are supported. They all support mTLS and data checking. ( &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#19-native-client&#34;&gt;Native Client Probe Manual&lt;/a&gt; ) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;MySQL&lt;/strong&gt;. Connect to a MySQL server and run the &lt;code&gt;SHOW STATUS&lt;/code&gt; SQL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt;. Connect to a Redis server and run the &lt;code&gt;PING&lt;/code&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Memcache&lt;/strong&gt;. Connect to a Memcache server and run the &lt;code&gt;version&lt;/code&gt; command or validate a given key/value pair.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;. Connect to a MongoDB server and perform a ping.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Kafka&lt;/strong&gt;. Connect to a Kafka server and perform a list of all topics.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;. Connect to a PostgreSQL server and run &lt;code&gt;SELECT 1&lt;/code&gt; SQL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Zookeeper&lt;/strong&gt;. Connect to a Zookeeper server and run &lt;code&gt;get /&lt;/code&gt; command.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.2 Notification&lt;/h2&gt; &#xA;&lt;p&gt;EaseProbe supports notification delivery to the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Slack&lt;/strong&gt;. Using Slack Webhook for notification delivery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Discord&lt;/strong&gt;. Using Discord Webhook for notification delivery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Telegram&lt;/strong&gt;. Using Telegram Bot for notification delivery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Teams&lt;/strong&gt;. Support the &lt;a href=&#34;https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using?tabs=cURL#setting-up-a-custom-incoming-webhook&#34;&gt;Microsoft Teams&lt;/a&gt; notification delivery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;. Support email notification delivery to one or more email addresses&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AWS SNS&lt;/strong&gt;. Support the AWS Simple Notification Service&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WeChat Work&lt;/strong&gt;. Support Enterprise WeChat Work notification delivery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DingTalk&lt;/strong&gt;. Support the DingTalk notification delivery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lark&lt;/strong&gt;. Support the Lark(Feishu) notification delivery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SMS&lt;/strong&gt;. SMS notification delivery with support for multiple SMS service providers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.twilio.com/sms&#34;&gt;Twilio&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.vonage.com/messaging/sms/overview&#34;&gt;Vonage(Nexmo)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.yunpian.com/doc/en/domestic/list.html&#34;&gt;YunPain&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Log&lt;/strong&gt;. Write the notification into a log file or Syslog.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shell&lt;/strong&gt;. Run a shell command to deliver the notification (see &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/resources/scripts/notify/notify.sh&#34;&gt;example&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RingCentral&lt;/strong&gt;. Using RingCentral Webhook for notification delivery&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;The notification is &lt;strong&gt;Edge-Triggered Mode&lt;/strong&gt; by default, if you want to config it as &lt;strong&gt;Level-Triggered Mode&lt;/strong&gt; with different interval and max notification, please refer to the manual - &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#112-alerting-interval&#34;&gt;Alerting Interval&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Windows platforms do not support syslog as notification method.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#2-notification&#34;&gt;Notification Manual&lt;/a&gt; to see how to configure it.&lt;/p&gt; &#xA;&lt;h2&gt;1.3 Report &amp;amp; Metrics&lt;/h2&gt; &#xA;&lt;p&gt;EaseProbe supports the following report and metrics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SLA Report Notify&lt;/strong&gt;. EaseProbe would send the daily, weekly, or monthly SLA report using the defined &lt;strong&gt;&lt;code&gt;notify:&lt;/code&gt;&lt;/strong&gt; methods.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SLA Live Report&lt;/strong&gt;. The EaseProbe would listen on the &lt;code&gt;0.0.0.0:8181&lt;/code&gt; port by default. By accessing this service you will be provided with a live SLA report either as HTML at &lt;code&gt;http://localhost:8181/&lt;/code&gt; or as JSON at &lt;code&gt;http://localhost:8181/api/v1/sla&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SLA Data Persistence&lt;/strong&gt;. The SLA data will be persisted in &lt;code&gt;$CWD/data/data.yaml&lt;/code&gt; by default. You can configure this path by editing the &lt;code&gt;settings&lt;/code&gt; section of your configuration file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, please check the &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#73-global-setting-configuration&#34;&gt;Global Setting Configuration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prometheus Metrics&lt;/strong&gt;. The EaseProbe would listen on the &lt;code&gt;8181&lt;/code&gt; port by default. By accessing this service you will be provided with Prometheus metrics at &lt;code&gt;http://easeprobe:8181/metrics&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The metrics are prefixed with &lt;code&gt;easeprobe_&lt;/code&gt; and are documented in &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#6-prometheus-metrics-exporter&#34;&gt;Prometheus Metrics Exporter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;2. Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;You can get started with EaseProbe, by any of the following methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the release for your platform from &lt;a href=&#34;https://github.com/megaease/easeprobe/releases&#34;&gt;https://github.com/megaease/easeprobe/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the available EaseProbe docker image &lt;code&gt;docker run -it megaease/easeprobe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build &lt;code&gt;easeprobe&lt;/code&gt; from sources&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2.1 Build&lt;/h2&gt; &#xA;&lt;p&gt;Compiler &lt;code&gt;Go 1.20+&lt;/code&gt; (Generics Programming Support), checking the &lt;a href=&#34;https://go.dev/doc/install&#34;&gt;Go Installation&lt;/a&gt; to see how to install Go on your platform.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;make&lt;/code&gt; to build and produce the &lt;code&gt;easeprobe&lt;/code&gt; binary file. The executable is produced under the &lt;code&gt;build/bin&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;2.2 Configure&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md&#34;&gt;User Manual&lt;/a&gt; for detailed instructions on how to configure all EaseProbe parameters.&lt;/p&gt; &#xA;&lt;p&gt;Create a configuration file (eg. &lt;code&gt;$CWD/config.yaml&lt;/code&gt;) using the configuration template at &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/resources/config.yaml&#34;&gt;./resources/config.yaml&lt;/a&gt;, which includes the complete list of configuration parameters.&lt;/p&gt; &#xA;&lt;p&gt;The following simple configuration example can be used to get started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;http: # http probes&#xA;  - name: EaseProbe Github&#xA;    url: https://github.com/megaease/easeprobe&#xA;notify:&#xA;  log:&#xA;    - name: log file # local log file&#xA;      file: /var/log/easeprobe.log&#xA;settings:&#xA;  probe:&#xA;    timeout: 30s # the time out for all probes&#xA;    interval: 1m # probe every minute for all probes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check the &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md#81-easeprobe-json-schema&#34;&gt;EaseProbe JSON Schema&lt;/a&gt; section to use a JSON Scheme file to make your life easier when you edit the configuration file.&lt;/p&gt; &#xA;&lt;h2&gt;2.3 Run&lt;/h2&gt; &#xA;&lt;p&gt;You can run the following command to start EaseProbe once built&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ build/bin/easeprobe -f config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-f&lt;/code&gt; configuration file or URL or path for multiple files which will be automatically merged into one. Can also be achieved by setting the environment variable &lt;code&gt;PROBE_CONFIG&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-d&lt;/code&gt; dry run. Can also be achieved by setting the environment variable &lt;code&gt;PROBE_DRY&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;3. Deployment&lt;/h1&gt; &#xA;&lt;p&gt;EaseProbe can be deployed by Systemd, Docker, Docker-Compose, &amp;amp; Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;You can find the details in &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Deployment.md&#34;&gt;Deployment Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;4. User Manual&lt;/h1&gt; &#xA;&lt;p&gt;For detailed instructions and features please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Manual.md&#34;&gt;User Manual&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;5. Benchmark&lt;/h1&gt; &#xA;&lt;p&gt;We have performed an extensive benchmark on EaseProbe. For the benchmark results please refer to - &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/Benchmark.md&#34;&gt;Benchmark Report&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;6. Contributing&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;re interested in contributing to the project, please spare a moment to read our &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;7. Community&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join Slack &lt;a href=&#34;https://join.slack.com/t/openmegaease/shared_invite/zt-upo7v306-lYPHvVwKnvwlqR0Zl2vveA&#34;&gt;Workspace&lt;/a&gt; for requirements, issues, and development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/megaease&#34;&gt;MegaEase on Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;8. License&lt;/h1&gt; &#xA;&lt;p&gt;EaseProbe is under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/megaease/easeprobe/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>