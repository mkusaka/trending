<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-27T01:38:18Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>p4gefau1t/trojan-go</title>
    <updated>2022-09-27T01:38:18Z</updated>
    <id>tag:github.com,2022-09-27:/p4gefau1t/trojan-go</id>
    <link href="https://github.com/p4gefau1t/trojan-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go实现的Trojan代理，支持多路复用/路由功能/CDN中转/Shadowsocks混淆插件，多平台，无依赖。A Trojan proxy written in Go. An unidentifiable mechanism that helps you bypass GFW. https://p4gefau1t.github.io/trojan-go/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Trojan-Go &lt;a href=&#34;https://goreportcard.com/report/github.com/p4gefau1t/trojan-go&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/p4gefau1t/trojan-go&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/github/downloads/p4gefau1t/trojan-go/total?label=downloads&amp;amp;logo=github&amp;amp;style=flat-square&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/p4gefau1t/trojan-go/total?label=downloads&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;使用 Go 实现的完整 Trojan 代理，兼容原版 Trojan 协议及配置文件格式。安全、高效、轻巧、易用。&lt;/p&gt; &#xA;&lt;p&gt;Trojan-Go 支持&lt;a href=&#34;https://raw.githubusercontent.com/p4gefau1t/trojan-go/master/#%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8&#34;&gt;多路复用&lt;/a&gt;提升并发性能；使用&lt;a href=&#34;https://raw.githubusercontent.com/p4gefau1t/trojan-go/master/#%E8%B7%AF%E7%94%B1%E6%A8%A1%E5%9D%97&#34;&gt;路由模块&lt;/a&gt;实现国内外分流；支持 &lt;a href=&#34;https://raw.githubusercontent.com/p4gefau1t/trojan-go/master/#Websocket&#34;&gt;CDN 流量中转&lt;/a&gt;(基于 WebSocket over TLS)；支持使用 AEAD 对 Trojan 流量进行&lt;a href=&#34;https://raw.githubusercontent.com/p4gefau1t/trojan-go/master/#aead-%E5%8A%A0%E5%AF%86&#34;&gt;二次加密&lt;/a&gt;(基于 Shadowsocks AEAD)；支持可插拔的&lt;a href=&#34;https://raw.githubusercontent.com/p4gefau1t/trojan-go/master/#%E4%BC%A0%E8%BE%93%E5%B1%82%E6%8F%92%E4%BB%B6&#34;&gt;传输层插件&lt;/a&gt;，允许替换 TLS，使用其他加密隧道传输 Trojan 协议流量。&lt;/p&gt; &#xA;&lt;p&gt;预编译二进制可执行文件可在 &lt;a href=&#34;https://github.com/p4gefau1t/trojan-go/releases&#34;&gt;Release 页面&lt;/a&gt;下载。解压后即可直接运行，无其他组件依赖。&lt;/p&gt; &#xA;&lt;p&gt;如遇到配置和使用问题、发现 bug，或是有更好的想法，欢迎加入 &lt;a href=&#34;https://t.me/trojan_go_chat&#34;&gt;Telegram 交流反馈群&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;完整介绍和配置教程，参见 &lt;a href=&#34;https://p4gefau1t.github.io/trojan-go&#34;&gt;Trojan-Go 文档&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Trojan-Go 兼容原版 Trojan 的绝大多数功能，包括但不限于：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TLS 隧道传输&lt;/li&gt; &#xA; &lt;li&gt;UDP 代理&lt;/li&gt; &#xA; &lt;li&gt;透明代理 (NAT 模式，iptables 设置参考&lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-libev/tree/v3.3.1#transparent-proxy&#34;&gt;这里&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;对抗 GFW 被动检测 / 主动检测的机制&lt;/li&gt; &#xA; &lt;li&gt;MySQL 数据持久化方案&lt;/li&gt; &#xA; &lt;li&gt;MySQL 用户权限认证&lt;/li&gt; &#xA; &lt;li&gt;用户流量统计和配额限制&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;同时，Trojan-Go 还扩展实现了更多高效易用的功能特性：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;便于快速部署的「简易模式」&lt;/li&gt; &#xA; &lt;li&gt;Socks5 / HTTP 代理自动适配&lt;/li&gt; &#xA; &lt;li&gt;基于 TProxy 的透明代理（TCP / UDP）&lt;/li&gt; &#xA; &lt;li&gt;全平台支持，无特殊依赖&lt;/li&gt; &#xA; &lt;li&gt;基于多路复用（smux）降低延迟，提升并发性能&lt;/li&gt; &#xA; &lt;li&gt;自定义路由模块，可实现国内外分流 / 广告屏蔽等功能&lt;/li&gt; &#xA; &lt;li&gt;Websocket 传输支持，以实现 CDN 流量中转（基于 WebSocket over TLS）和对抗 GFW 中间人攻击&lt;/li&gt; &#xA; &lt;li&gt;TLS 指纹伪造，以对抗 GFW 针对 TLS Client Hello 的特征识别&lt;/li&gt; &#xA; &lt;li&gt;基于 gRPC 的 API 支持，以实现用户管理和速度限制等&lt;/li&gt; &#xA; &lt;li&gt;可插拔传输层，可将 TLS 替换为其他协议或明文传输，同时有完整的 Shadowsocks 混淆插件支持&lt;/li&gt; &#xA; &lt;li&gt;支持对用户更友好的 YAML 配置文件格式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;图形界面客户端&lt;/h2&gt; &#xA;&lt;p&gt;Trojan-Go 服务端兼容所有原 Trojan 客户端，如 Igniter、ShadowRocket 等。以下是支持 Trojan-Go 扩展特性（Websocket / Mux 等）的客户端：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Qv2ray/Qv2ray&#34;&gt;Qv2ray&lt;/a&gt;：跨平台客户端，支持 Windows / macOS / Linux，使用 Trojan-Go 核心，支持所有 Trojan-Go 扩展特性。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/p4gefau1t/trojan-go-android&#34;&gt;Igniter-Go&lt;/a&gt;：Android 客户端，Fork 自 Igniter，将 Igniter 核心替换为 Trojan-Go 并做了一定修改，支持所有 Trojan-Go 扩展特性。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;快速启动服务端和客户端（简易模式）&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;服务端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ./trojan-go -server -remote 127.0.0.1:80 -local 0.0.0.0:443 -key ./your_key.key -cert ./your_cert.crt -password your_password&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;客户端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./trojan-go -client -remote example.com:443 -local 127.0.0.1:1080 -password your_password&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用配置文件启动客户端 / 服务端 / 透明代理 / 中继（一般模式）&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./trojan-go -config config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 URL 启动客户端（格式参见文档）&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./trojan-go -url &#39;trojan-go://password@cloudflare.com/?type=ws&amp;amp;path=%2Fpath&amp;amp;host=your-site.com&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 Docker 部署&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run \&#xA;    --name trojan-go \&#xA;    -d \&#xA;    -v /etc/trojan-go/:/etc/trojan-go \&#xA;    --network host \&#xA;    p4gefau1t/trojan-go&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;或者&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run \&#xA;    --name trojan-go \&#xA;    -d \&#xA;    -v /path/to/host/config:/path/in/container \&#xA;    --network host \&#xA;    p4gefau1t/trojan-go \&#xA;    /path/in/container/config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;p&gt;一般情况下，Trojan-Go 和 Trojan 是互相兼容的，但一旦使用下面介绍的扩展特性（如多路复用、Websocket 等），则无法兼容。&lt;/p&gt; &#xA;&lt;h3&gt;移植性&lt;/h3&gt; &#xA;&lt;p&gt;编译得到的 Trojan-Go 单个可执行文件不依赖其他组件。同时，你可以很方便地编译（或交叉编译） Trojan-Go，然后在你的服务器、PC、树莓派，甚至路由器上部署；可以方便地使用 build tag 删减模块，以缩小可执行文件体积。&lt;/p&gt; &#xA;&lt;p&gt;例如，交叉编译一个可在 mips 处理器、Linux 操作系统上运行的、只有客户端功能的 Trojan-Go，只需执行下面的命令，得到的可执行文件可以直接在目标平台运行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;CGO_ENABLED=0 GOOS=linux GOARCH=mips go build -tags &#34;client&#34; -trimpath -ldflags &#34;-s -w -buildid=&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;完整的 tag 说明参见 &lt;a href=&#34;https://p4gefau1t.github.io/trojan-go&#34;&gt;Trojan-Go 文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;易用&lt;/h3&gt; &#xA;&lt;p&gt;配置文件格式与原版 Trojan 兼容，但做了大幅简化，未指定的字段会被赋予默认值，由此可以更方便地部署服务端和客户端。以下是一个简单例子，完整的配置文件可以参见&lt;a href=&#34;https://p4gefau1t.github.io/trojan-go&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;服务端配置文件 &lt;code&gt;server.json&lt;/code&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;run_type&#34;: &#34;server&#34;,&#xA;  &#34;local_addr&#34;: &#34;0.0.0.0&#34;,&#xA;  &#34;local_port&#34;: 443,&#xA;  &#34;remote_addr&#34;: &#34;127.0.0.1&#34;,&#xA;  &#34;remote_port&#34;: 80,&#xA;  &#34;password&#34;: [&#34;your_awesome_password&#34;],&#xA;  &#34;ssl&#34;: {&#xA;    &#34;cert&#34;: &#34;your_cert.crt&#34;,&#xA;    &#34;key&#34;: &#34;your_key.key&#34;,&#xA;    &#34;sni&#34;: &#34;www.your-awesome-domain-name.com&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端配置文件 &lt;code&gt;client.json&lt;/code&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;run_type&#34;: &#34;client&#34;,&#xA;  &#34;local_addr&#34;: &#34;127.0.0.1&#34;,&#xA;  &#34;local_port&#34;: 1080,&#xA;  &#34;remote_addr&#34;: &#34;www.your-awesome-domain-name.com&#34;,&#xA;  &#34;remote_port&#34;: 443,&#xA;  &#34;password&#34;: [&#34;your_awesome_password&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;可以使用更简明易读的 YAML 语法进行配置。以下是一个客户端的例子，与上面的 &lt;code&gt;client.json&lt;/code&gt; 等价：&lt;/p&gt; &#xA;&lt;p&gt;客户端配置文件 &lt;code&gt;client.yaml&lt;/code&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;run-type: client&#xA;local-addr: 127.0.0.1&#xA;local-port: 1080&#xA;remote-addr: www.your-awesome-domain_name.com&#xA;remote-port: 443&#xA;password:&#xA;  - your_awesome_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;WebSocket&lt;/h3&gt; &#xA;&lt;p&gt;Trojan-Go 支持使用 TLS + Websocket 承载 Trojan 协议，使得利用 CDN 进行流量中转成为可能。&lt;/p&gt; &#xA;&lt;p&gt;服务端和客户端配置文件中同时添加 &lt;code&gt;websocket&lt;/code&gt; 选项即可启用 Websocket 支持，例如&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;websocket&#34;: {&#xA;    &#34;enabled&#34;: true,&#xA;    &#34;path&#34;: &#34;/your-websocket-path&#34;,&#xA;    &#34;hostname&#34;: &#34;www.your-awesome-domain-name.com&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;完整的选项说明参见 &lt;a href=&#34;https://p4gefau1t.github.io/trojan-go&#34;&gt;Trojan-Go 文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;可以省略 &lt;code&gt;hostname&lt;/code&gt;, 但服务端和客户端的 &lt;code&gt;path&lt;/code&gt; 必须一致。服务端开启 Websocket 支持后，可以同时支持 Websocket 和一般 Trojan 流量。未配置 Websocket 选项的客户端依然可以正常使用。&lt;/p&gt; &#xA;&lt;p&gt;由于 Trojan 并不支持 Websocket，因此，虽然开启了 Websocket 支持的 Trojan-Go 服务端可以兼容所有客户端，但如果要使用 Websocket 承载流量，请确保双方都使用 Trojan-Go。&lt;/p&gt; &#xA;&lt;h3&gt;多路复用&lt;/h3&gt; &#xA;&lt;p&gt;在很差的网络条件下，一次 TLS 握手可能会花费很多时间。Trojan-Go 支持多路复用（基于 &lt;a href=&#34;https://github.com/xtaci/smux&#34;&gt;smux&lt;/a&gt;），通过一条 TLS 隧道连接承载多条 TCP 连接的方式，减少 TCP 和 TLS 握手带来的延迟，以期提升高并发情景下的性能。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;启用多路复用并不能提高测速得到的链路速度，但能降低延迟、提升大量并发请求时的网络体验，例如浏览含有大量图片的网页等。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;你可以通过设置客户端的 &lt;code&gt;mux&lt;/code&gt; 选项 &lt;code&gt;enabled&lt;/code&gt; 字段启用它：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;mux&#34;: {&#xA;    &#34;enabled&#34;: true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;只需开启客户端 mux 配置即可，服务端会自动检测是否启用多路复用并提供支持。完整的选项说明参见 &lt;a href=&#34;https://p4gefau1t.github.io/trojan-go&#34;&gt;Trojan-Go 文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;路由模块&lt;/h3&gt; &#xA;&lt;p&gt;Trojan-Go 客户端内建一个简单实用的路由模块，以方便实现国内直连、海外代理等自定义路由功能。&lt;/p&gt; &#xA;&lt;p&gt;路由策略有三种：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Proxy&lt;/code&gt; 代理：将请求通过 TLS 隧道进行代理，由 Trojan 服务端与目的地址进行连接。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bypass&lt;/code&gt; 绕过：直接使用本地设备与目的地址进行连接。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Block&lt;/code&gt; 封锁：不发送请求，直接关闭连接。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;要激活路由模块，请在配置文件中添加 &lt;code&gt;router&lt;/code&gt; 选项，并设置 &lt;code&gt;enabled&lt;/code&gt; 字段为 &lt;code&gt;true&lt;/code&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;router&#34;: {&#xA;    &#34;enabled&#34;: true,&#xA;    &#34;bypass&#34;: [&#xA;        &#34;geoip:cn&#34;,&#xA;        &#34;geoip:private&#34;,&#xA;        &#34;full:localhost&#34;&#xA;    ],&#xA;    &#34;block&#34;: [&#xA;        &#34;cidr:192.168.1.1/24&#34;,&#xA;    ],&#xA;    &#34;proxy&#34;: [&#xA;        &#34;domain:google.com&#34;,&#xA;    ],&#xA;    &#34;default_policy&#34;: &#34;proxy&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;完整的选项说明参见 &lt;a href=&#34;https://p4gefau1t.github.io/trojan-go&#34;&gt;Trojan-Go 文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;AEAD 加密&lt;/h3&gt; &#xA;&lt;p&gt;Trojan-Go 支持基于 Shadowsocks AEAD 对 Trojan 协议流量进行二次加密，以保证 Websocket 传输流量无法被不可信的 CDN 识别和审查：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;shadowsocks&#34;: {&#xA;    &#34;enabled&#34;: true,&#xA;    &#34;password&#34;: &#34;my-password&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如需开启，服务端和客户端必须同时开启并保证密码一致。&lt;/p&gt; &#xA;&lt;h3&gt;传输层插件&lt;/h3&gt; &#xA;&lt;p&gt;Trojan-Go 支持可插拔的传输层插件，并支持 Shadowsocks &lt;a href=&#34;https://shadowsocks.org/en/wiki/Plugin.html&#34;&gt;SIP003&lt;/a&gt; 标准的混淆插件。下面是使用 &lt;code&gt;v2ray-plugin&lt;/code&gt; 的一个例子：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;此配置并不安全，仅作为演示&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;服务端配置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;transport_plugin&#34;: {&#xA;    &#34;enabled&#34;: true,&#xA;    &#34;type&#34;: &#34;shadowsocks&#34;,&#xA;    &#34;command&#34;: &#34;./v2ray-plugin&#34;,&#xA;    &#34;arg&#34;: [&#34;-server&#34;, &#34;-host&#34;, &#34;www.baidu.com&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端配置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;transport_plugin&#34;: {&#xA;    &#34;enabled&#34;: true,&#xA;    &#34;type&#34;: &#34;shadowsocks&#34;,&#xA;    &#34;command&#34;: &#34;./v2ray-plugin&#34;,&#xA;    &#34;arg&#34;: [&#34;-host&#34;, &#34;www.baidu.com&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;完整的选项说明参见 &lt;a href=&#34;https://p4gefau1t.github.io/trojan-go&#34;&gt;Trojan-Go 文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;构建&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;请确保 Go 版本 &amp;gt;= 1.14&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;使用 &lt;code&gt;make&lt;/code&gt; 进行编译：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/p4gefau1t/trojan-go.git&#xA;cd trojan-go&#xA;make&#xA;make install #安装systemd服务等，可选&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;或者使用 Go 自行编译：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go build -tags &#34;full&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go 支持通过设置环境变量进行交叉编译，例如：&lt;/p&gt; &#xA;&lt;p&gt;编译适用于 64 位 Windows 操作系统的可执行文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -tags &#34;full&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;编译适用于 Apple Silicon 的可执行文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;CGO_ENABLED=0 GOOS=macos GOARCH=arm64 go build -tags &#34;full&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;编译适用于 64 位 Linux 操作系统的可执行文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -tags &#34;full&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trojan-gfw/trojan&#34;&gt;Trojan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/v2fly&#34;&gt;V2Fly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/refraction-networking/utls&#34;&gt;utls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xtaci/smux&#34;&gt;smux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LiamHaworth/go-tproxy&#34;&gt;go-tproxy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/p4gefau1t/trojan-go&#34;&gt;&lt;img src=&#34;https://starchart.cc/p4gefau1t/trojan-go.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fin3ss3g0d/evilgophish</title>
    <updated>2022-09-27T01:38:18Z</updated>
    <id>tag:github.com,2022-09-27:/fin3ss3g0d/evilgophish</id>
    <link href="https://github.com/fin3ss3g0d/evilgophish" rel="alternate"></link>
    <summary type="html">&lt;p&gt;evilginx2 + gophish&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#evilgophish&#34;&gt;evilgophish&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#disclaimer&#34;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#why&#34;&gt;Why?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#infrastructure-layout&#34;&gt;Infrastructure Layout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#setupsh&#34;&gt;setup.sh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#replace_ridsh&#34;&gt;replace_rid.sh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#email-campaign-setup&#34;&gt;Email Campaign Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#sms-campaign-setup&#34;&gt;SMS Campaign Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#pusher-setup&#34;&gt;Pusher Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#ensuring-email-opened-tracking&#34;&gt;Ensuring Email Opened Tracking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#important-notes&#34;&gt;&lt;strong&gt;Important Notes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#phishlets-surprise&#34;&gt;Phishlets Surprise&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#a-word-about-phishlets&#34;&gt;A Word About Phishlets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#changes-to-evilginx2&#34;&gt;Changes To evilginx2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#changes-to-gophish&#34;&gt;Changes to GoPhish&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#limitations&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#issues-and-support&#34;&gt;Issues and Support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#future-goals&#34;&gt;Future Goals&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;evilgophish&lt;/h1&gt; &#xA;&lt;p&gt;Combination of &lt;a href=&#34;https://github.com/kgretzky/evilginx2&#34;&gt;evilginx2&lt;/a&gt; and &lt;a href=&#34;https://github.com/gophish/gophish&#34;&gt;GoPhish&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Before I begin, I would like to say that I am in no way bashing &lt;a href=&#34;https://github.com/kgretzky&#34;&gt;Kuba Gretzky&lt;/a&gt; and his work. I thank him personally for releasing &lt;a href=&#34;https://github.com/kgretzky/evilginx2&#34;&gt;evilginx2&lt;/a&gt; to the public. In fact, without his work this work would not exist. I must also thank &lt;a href=&#34;https://github.com/jordan-wright&#34;&gt;Jordan Wright&lt;/a&gt; for developing/maintaining the incredible &lt;a href=&#34;https://github.com/gophish/gophish&#34;&gt;GoPhish&lt;/a&gt; toolkit. The last thank you I must make is to &lt;a href=&#34;https://twitter.com/_wizard32?lang=en&#34;&gt;Fotios Liatsis&lt;/a&gt; and &lt;a href=&#34;https://outpost24.com/&#34;&gt;Outpost24&lt;/a&gt; for sharing their solution to combine these two frameworks.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;You should have a fundamental understanding of how to use &lt;code&gt;GoPhish&lt;/code&gt;, &lt;code&gt;evilginx2&lt;/code&gt;, and &lt;code&gt;Apache2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;I shall not be responsible or liable for any misuse or illegitimate use of this software. This software is only to be used in authorized penetration testing or red team engagements where the operator(s) has(ve) been given explicit written permission to carry out social engineering.&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;As a penetration tester or red teamer, you may have heard of &lt;code&gt;evilginx2&lt;/code&gt; as a proxy man-in-the-middle framework capable of bypassing &lt;code&gt;two-factor/multi-factor authentication&lt;/code&gt;. This is enticing to us to say the least, but when trying to use it for social engineering engagements, there are some issues off the bat. I will highlight the two main problems that have been addressed with this project, although some other bugs have been fixed in this version which I will highlight later.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Lack of tracking - &lt;code&gt;evilginx2&lt;/code&gt; does not provide unique tracking statistics per victim (e.g. opened email, clicked link, etc.), this is problematic for clients who want/need/pay for these statistics when signing up for a social engineering engagement.&lt;/li&gt; &#xA; &lt;li&gt;Session overwriting with NAT and proxying - &lt;code&gt;evilginx2&lt;/code&gt; bases a lot of logic off of remote IP address and will whitelist an IP for 10 minutes after the victim triggers a lure path. &lt;code&gt;evilginx2&lt;/code&gt; will then skip creating a new session for the IP address if it triggers the lure path again (if still in the 10 minute window). This presents issues for us if our victims are behind a firewall all sharing the same public IP address, as the same session within &lt;code&gt;evilginx2&lt;/code&gt; will continue to overwrite with multiple victim&#39;s data, leading to missed and lost data. This also presents an issue for our proxy setup, since &lt;code&gt;localhost&lt;/code&gt; is the only IP address requesting &lt;code&gt;evilginx2&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;This project is based on this &lt;a href=&#34;https://outpost24.com/blog/Better-proxy-than-story&#34;&gt;blog&lt;/a&gt; and I encourage you to read it before getting started. In this setup, &lt;code&gt;GoPhish&lt;/code&gt; is used to send emails, track opened emails, and provide a dashboard for &lt;code&gt;evilginx2&lt;/code&gt; campaign statistics, but it is not used for any landing pages. To provide tracking between the two, the function resposible for providing campaign results inside &lt;code&gt;GoPhish&lt;/code&gt; has been modified to instead get clicked link event details and submitted data event details from logs related to &lt;code&gt;evilginx2&lt;/code&gt;. Your phishing links sent from &lt;code&gt;GoPhish&lt;/code&gt; will point to an &lt;code&gt;evilginx2&lt;/code&gt; lure path and &lt;code&gt;evilginx2&lt;/code&gt; will be used for landing pages. This provides the ability to still bypass &lt;code&gt;2FA/MFA&lt;/code&gt; with &lt;code&gt;evilginx2&lt;/code&gt;, without losing those precious stats. Realtime campaign event notifications have been provided with &lt;a href=&#34;https://pusher.com/docs/channels/using_channels/encrypted-channels/&#34;&gt;Pusher end-to-end encrypted channels&lt;/a&gt; and full usable &lt;code&gt;JSON&lt;/code&gt; strings containing tokens/cookies from &lt;code&gt;evilginx2&lt;/code&gt; are displayed directly in the &lt;code&gt;GoPhish&lt;/code&gt; GUI:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/images/tokens-gophish.png&#34; alt=&#34;new-dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Infrastructure Layout&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;evilginx2&lt;/code&gt; will listen locally on port &lt;code&gt;8443&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GoPhish&lt;/code&gt; will listen locally on port &lt;code&gt;8080&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Apache2&lt;/code&gt; will listen on port &lt;code&gt;443&lt;/code&gt; externally and proxy to either local &lt;code&gt;GoPhish/evilginx2&lt;/code&gt; depending on the subdomain name requested. &lt;code&gt;Apache2&lt;/code&gt; access log file is created for both &lt;code&gt;GoPhish/evilginx2&lt;/code&gt; servers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Requests will be filtered at &lt;code&gt;Apache2&lt;/code&gt; layer based on redirect rules and IP blacklist configuration &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;404&lt;/code&gt; functionality for unauthorized requests is still baked into &lt;code&gt;GoPhish&lt;/code&gt; if a request hits the &lt;code&gt;GoPhish&lt;/code&gt; server&lt;/li&gt; &#xA;     &lt;li&gt;Redirect functionality for unauthorized requests is still baked into &lt;code&gt;evilginx2&lt;/code&gt; if a request hits the &lt;code&gt;evilginx2&lt;/code&gt; server&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;setup.sh&lt;/h2&gt; &#xA;&lt;p&gt;Assuming you have read the &lt;a href=&#34;https://outpost24.com/blog/Better-proxy-than-story&#34;&gt;blog&lt;/a&gt; and understand how the setup works, &lt;code&gt;setup.sh&lt;/code&gt; has been provided to automate the needed configurations for you. Once this script is run and you&#39;ve fed it the right values, you should be ready to get started. Below is the setup help (note that certificate setup is based on &lt;code&gt;letsencrypt&lt;/code&gt; filenames):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;./setup &amp;lt;root domain&amp;gt; &amp;lt;evilginx2 subdomain(s)&amp;gt; &amp;lt;evilginx2 root domain bool&amp;gt; &amp;lt;gophish subdomain(s)&amp;gt; &amp;lt;gophish root domain bool&amp;gt; &amp;lt;redirect url&amp;gt; &amp;lt;Pusher messages bool&amp;gt; &amp;lt;rid replacement&amp;gt;&#xA; - root domain                     - the root domain to be used for the campaign&#xA; - evilginx2 subdomains            - a space separated list of evilginx2 subdomains, can be one if only one&#xA; - evilginx2 root domain bool      - true or false to proxy root domain to evilginx2&#xA; - gophish subdomains              - a space separated list of gophish subdomains, can be one if only one&#xA; - gophish root domain bool        - true or false to proxy root domain to gophish&#xA; - redirect url                    - URL to redirect unauthorized Apache requests&#xA; - Pusher messages bool            - true or false to setup Pusher messages to an encrypted channel&#xA; - rid replacement                 - replace the gophish default &#34;rid&#34; in phishing URLs with this value&#xA;Example:&#xA;  ./setup.sh example.com login false &#34;download www&#34; false https://redirect.com/ true user_id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Redirect rules have been included to keep unwanted visitors from visiting the phishing server as well as an IP blacklist. The blacklist contains IP addresses/blocks owned by ProofPoint, Microsoft, TrendMicro, etc. Redirect rules will redirect known &lt;em&gt;&#34;bad&#34;&lt;/em&gt; remote hostnames as well as User-Agent strings.&lt;/p&gt; &#xA;&lt;h2&gt;replace_rid.sh&lt;/h2&gt; &#xA;&lt;p&gt;In case you ran &lt;code&gt;setup.sh&lt;/code&gt; once and already replaced the default &lt;code&gt;RId&lt;/code&gt; value throughout the project, &lt;code&gt;replace_rid.sh&lt;/code&gt; was created to replace the &lt;code&gt;RId&lt;/code&gt; value again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;./replace_rid &amp;lt;previous rid&amp;gt; &amp;lt;new rid&amp;gt;&#xA; - previous rid      - the previous rid value that was replaced&#xA; - new rid           - the new rid value to replace the previous&#xA;Example:&#xA;  ./replace_rid.sh user_id client_id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Email Campaign Setup&lt;/h2&gt; &#xA;&lt;p&gt;Once &lt;code&gt;setup.sh&lt;/code&gt; is run, the next steps are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure the &lt;code&gt;Apache2&lt;/code&gt; log file for &lt;code&gt;evilginx2&lt;/code&gt; exists before starting &lt;code&gt;GoPhish&lt;/code&gt; (starting &lt;code&gt;Apache2&lt;/code&gt; will automatically do this)&lt;/li&gt; &#xA; &lt;li&gt;Start &lt;code&gt;GoPhish&lt;/code&gt; and configure email template (see note below about email opened tracking), email sending profile, fake landing page, and groups&lt;/li&gt; &#xA; &lt;li&gt;Start &lt;code&gt;evilginx2&lt;/code&gt; and configure phishlet and lure&lt;/li&gt; &#xA; &lt;li&gt;Ensure &lt;code&gt;Apache2&lt;/code&gt; server is started&lt;/li&gt; &#xA; &lt;li&gt;Launch campaign from &lt;code&gt;GoPhish&lt;/code&gt; and make the landing URL your lure path for &lt;code&gt;evilginx2&lt;/code&gt; phishlet&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PROFIT&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;SMS Campaign Setup&lt;/h2&gt; &#xA;&lt;p&gt;An entire reworking of &lt;code&gt;GoPhish&lt;/code&gt; was performed in order to provide &lt;code&gt;SMS&lt;/code&gt; campaign support with &lt;code&gt;Twilio&lt;/code&gt;. Your new &lt;code&gt;evilgophish&lt;/code&gt; dashboard will look like below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/images/new-dashboard.png&#34; alt=&#34;new-dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you have run &lt;code&gt;setup.sh&lt;/code&gt;, the next steps are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure the &lt;code&gt;Apache2&lt;/code&gt; log file for &lt;code&gt;evilginx2&lt;/code&gt; exists before starting &lt;code&gt;GoPhish&lt;/code&gt; (starting &lt;code&gt;Apache2&lt;/code&gt; will automatically do this)&lt;/li&gt; &#xA; &lt;li&gt;Configure &lt;code&gt;SMS&lt;/code&gt; message template. You will use &lt;code&gt;Text&lt;/code&gt; only when creating a &lt;code&gt;SMS&lt;/code&gt; message template, and you should not include a tracking link as it will appear in the &lt;code&gt;SMS&lt;/code&gt; message. Leave &lt;code&gt;Envelope Sender&lt;/code&gt; and &lt;code&gt;Subject&lt;/code&gt; blank like below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/images/sms-message-template.png&#34; alt=&#34;sms-message-template&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Configure &lt;code&gt;SMS Sending Profile&lt;/code&gt;. Enter your phone number from &lt;code&gt;Twilio&lt;/code&gt;, &lt;code&gt;Account SID&lt;/code&gt;, &lt;code&gt;Auth Token&lt;/code&gt;, and delay in between messages into the &lt;code&gt;SMS Sending Profiles&lt;/code&gt; page:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/images/sms-sending-profile.png&#34; alt=&#34;sms-sending-profile&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Import groups. The &lt;code&gt;CSV&lt;/code&gt; template values have been kept the same for compatibility, so keep the &lt;code&gt;CSV&lt;/code&gt; column names the same and place your target phone numbers into the &lt;code&gt;Email&lt;/code&gt; column. Note that &lt;code&gt;Twilio&lt;/code&gt; accepts the following phone number formats, so they must be in one of these three:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/images/twilio-number-formats.png&#34; alt=&#34;twilio-number-formats&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Create a fake landing page in &lt;code&gt;GoPhish&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start &lt;code&gt;evilginx2&lt;/code&gt; and configure phishlet and lure&lt;/li&gt; &#xA; &lt;li&gt;Ensure &lt;code&gt;Apache2&lt;/code&gt; server is started&lt;/li&gt; &#xA; &lt;li&gt;Launch campaign from &lt;code&gt;GoPhish&lt;/code&gt; and make the landing URL your lure path for &lt;code&gt;evilginx2&lt;/code&gt; phishlet&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PROFIT&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Pusher Setup&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Microsoft Teams&lt;/code&gt; messages to a channel have been removed. This was due to security reasons and the fact that if someone&#39;s &lt;code&gt;Microsoft&lt;/code&gt; account gets owned, client data is at risk of being compromised. With that being said, I plan to always keep the posting of campaign events &lt;em&gt;and&lt;/em&gt; submitted passwords into a live feed as a feature of this tool. Realtime campaign event notifications will now be handled by &lt;a href=&#34;https://pusher.com/docs/channels/using_channels/encrypted-channels/&#34;&gt;Pusher end-to-end encrypted channels&lt;/a&gt;. Not even &lt;code&gt;Pusher&lt;/code&gt; is capable of decrypting the contents of these requests, as operators will set their own encryption key for their own local instance of a &lt;code&gt;Pusher&lt;/code&gt; feed server I have created. Before data goes out to &lt;code&gt;Pusher&lt;/code&gt;, it will be encrypted by the local &lt;code&gt;Pusher&lt;/code&gt; server with this key (read the linked blog for full information) and a string of ciphertext is ultimately what is sent containing the payload data. The encryption key of the local &lt;code&gt;Pusher&lt;/code&gt; server is never shared with &lt;code&gt;Pusher&lt;/code&gt;. You might also like to hear that you have a &lt;code&gt;200k&lt;/code&gt; message limit per day with a &lt;code&gt;FREE&lt;/code&gt; account! To get setup:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new channel in &lt;code&gt;Pusher&lt;/code&gt;, the channel &lt;strong&gt;MUST&lt;/strong&gt; be prefixed with &lt;code&gt;private-encrypted-&lt;/code&gt;. For example:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/images/pusher-channel.png&#34; alt=&#34;pusher-channel&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Select &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;Pusher messages bool&lt;/code&gt; when running &lt;code&gt;setup.sh&lt;/code&gt;. Input your &lt;code&gt;app_id&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;secret&lt;/code&gt;, &lt;code&gt;cluster&lt;/code&gt;, channel name, and server encryption key into &lt;code&gt;setup.sh&lt;/code&gt; when prompted.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;pusher&lt;/code&gt; directory and start the server with &lt;code&gt;./pusher&lt;/code&gt;. For example:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/images/starting-pusher.png&#34; alt=&#34;starting-pusher&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;You can begin viewing the live feed at: &lt;code&gt;http://localhost:1400/&lt;/code&gt;. The feed dashboard will look like below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fin3ss3g0d/evilgophish/main/images/pusher-dashboard.png&#34; alt=&#34;pusher-dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT NOTES&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The live feed page hooks the channel for events with &lt;code&gt;JavaScript&lt;/code&gt; and you &lt;strong&gt;DO NOT&lt;/strong&gt; need to refresh the page. If you refresh the page, you will &lt;strong&gt;LOSE&lt;/strong&gt; all events up to that point.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ensuring Email Opened Tracking&lt;/h2&gt; &#xA;&lt;p&gt;You &lt;strong&gt;CANNOT&lt;/strong&gt; use the default &lt;code&gt;Add Tracking Image&lt;/code&gt; button when creating your email template. You &lt;strong&gt;MUST&lt;/strong&gt; include your own image tag that points at the &lt;code&gt;GoPhish&lt;/code&gt; server with the tracking URL scheme. This is also explained/shown in the &lt;a href=&#34;https://outpost24.com/blog/Better-proxy-than-story&#34;&gt;blog&lt;/a&gt;. For example, if your &lt;code&gt;GoPhish&lt;/code&gt; subdomain is &lt;code&gt;download.example.org&lt;/code&gt;, your &lt;code&gt;evilginx2&lt;/code&gt; lure path is &lt;code&gt;https://login.example.org/login&lt;/code&gt;, and your &lt;code&gt;RId&lt;/code&gt; value is &lt;code&gt;client_id&lt;/code&gt;, you would include the following tag in your email &lt;code&gt;.html&lt;/code&gt; which will provide email opened tracking in &lt;code&gt;GoPhish&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;img src=&#34;https://download.example.org/login/track?client_id={{.RId}}&#34;/&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Important Notes&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;You &lt;strong&gt;MUST&lt;/strong&gt; make sure &lt;code&gt;Apache2&lt;/code&gt; is logging to the file defined in &lt;code&gt;gophish/config.json&lt;/code&gt; for the &lt;code&gt;evilginx2&lt;/code&gt; server, the default path is &lt;code&gt;/var/log/apache2/access_evilginx2.log&lt;/code&gt; unless you change it. For example, if &lt;code&gt;Apache2&lt;/code&gt; is logging to &lt;code&gt;/var/log/apache2/access_evilginx2.log.1&lt;/code&gt; and you have &lt;code&gt;/var/log/apache2/access_evilginx2.log&lt;/code&gt; defined in &lt;code&gt;gophish/config.json&lt;/code&gt;, you will lose tracking statistics.&lt;/p&gt; &#xA;&lt;h2&gt;Phishlets Surprise&lt;/h2&gt; &#xA;&lt;p&gt;Included in the &lt;code&gt;evilginx2/phishlets&lt;/code&gt; folder are three custom phishlets not included in &lt;a href=&#34;https://github.com/kgretzky/evilginx2&#34;&gt;evilginx2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;o3652&lt;/code&gt; - modified/updated version of the original &lt;code&gt;o365&lt;/code&gt; (stolen from &lt;a href=&#34;https://www.optiv.com/insights/source-zero/blog/spear-phishing-modern-platforms&#34;&gt;Optiv blog&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;google&lt;/code&gt; - updated from previous examples online&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;knowbe4&lt;/code&gt; - custom (don&#39;t have access to an account for testing auth URL, works for single-factor campaigns, have not fully tested MFA)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;A Word About Phishlets&lt;/h2&gt; &#xA;&lt;p&gt;I feel like the world has been lacking some good phishlet examples lately. It would be great if this repository could be a central repository for the latest phishlets. Send me your phishlets at &lt;code&gt;fin3ss3g0d@pm.me&lt;/code&gt; for a chance to end up in &lt;code&gt;evilginx2/phishlets&lt;/code&gt;. If you provide quality work, I will create a &lt;code&gt;Phishlets Hall of Fame&lt;/code&gt; and you will be added to it.&lt;/p&gt; &#xA;&lt;h2&gt;Changes To evilginx2&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;All IP whitelisting functionality removed, new proxy session is established for every new visitor that triggers a lure path regardless of remote IP&lt;/li&gt; &#xA; &lt;li&gt;Custom credential logging on submitted passwords to &lt;code&gt;~/.evilginx/creds.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue with phishlets not extracting credentials from &lt;code&gt;JSON&lt;/code&gt; requests&lt;/li&gt; &#xA; &lt;li&gt;Further &lt;em&gt;&#34;bad&#34;&lt;/em&gt; headers have been removed from responses&lt;/li&gt; &#xA; &lt;li&gt;Added logic to check if &lt;code&gt;mime&lt;/code&gt; type was failed to be retrieved from responses&lt;/li&gt; &#xA; &lt;li&gt;All &lt;code&gt;X&lt;/code&gt; headers relating to &lt;code&gt;evilginx2&lt;/code&gt; have been removed throughout the code (to remove IOCs)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Changes to GoPhish&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Custom logic inserted into &lt;code&gt;GetCampaignResults&lt;/code&gt; function that handles &lt;code&gt;evilginx2&lt;/code&gt; tracking from Apache2 access log&lt;/li&gt; &#xA; &lt;li&gt;Custom logging of events to &lt;code&gt;JSON&lt;/code&gt; format in &lt;code&gt;HandleEvent&lt;/code&gt; functions&lt;/li&gt; &#xA; &lt;li&gt;Additional config parameter added for Apache2 log path&lt;/li&gt; &#xA; &lt;li&gt;All &lt;code&gt;X&lt;/code&gt; headers relating to &lt;code&gt;GoPhish&lt;/code&gt; have been removed throughout the code (to remove IOCs)&lt;/li&gt; &#xA; &lt;li&gt;Custom 404 page functionality, place a &lt;code&gt;.html&lt;/code&gt; file named &lt;code&gt;404.html&lt;/code&gt; in &lt;code&gt;templates&lt;/code&gt; folder (example has been provided)&lt;/li&gt; &#xA; &lt;li&gt;Default &lt;code&gt;rid&lt;/code&gt; string in phishing URLs is chosen by the operator in &lt;code&gt;setup.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Transparency endpoint and messages completely removed&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;SMS&lt;/code&gt; Campaign Support&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;code&gt;CHANGELOG.md&lt;/code&gt; file for changes made since the initial release.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All events will only be submitted once into &lt;code&gt;GoPhish&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues and Support&lt;/h2&gt; &#xA;&lt;p&gt;I am taking the same stance as &lt;a href=&#34;https://github.com/kgretzky&#34;&gt;Kuba Gretzky&lt;/a&gt; and will not help creating phishlets. There are plenty of examples of working phishlets and for you to create your own, if you open an issue for a phishlet it will be closed. I will also not consider issues with your &lt;code&gt;Apache2&lt;/code&gt;, &lt;code&gt;DNS&lt;/code&gt;, or certificate setup as legitimate issues and they will be closed. Please read the included &lt;a href=&#34;https://outpost24.com/blog/Better-proxy-than-story&#34;&gt;blog&lt;/a&gt; for how to get setup properly. However, if you encounter a legitimate failure/error with the program, I will take the issue seriously.&lt;/p&gt; &#xA;&lt;h2&gt;Future Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Additions to IP blacklist and redirect rules&lt;/li&gt; &#xA; &lt;li&gt;Add more phishlets&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;I would like to see this project improve and grow over time. If you have improvement ideas, new redirect rules, new IP addresses/blocks to blacklist, phishlets, or suggestions, please email me at: &lt;code&gt;fin3ss3g0d@pm.me&lt;/code&gt; or open a pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>naiba/nezha</title>
    <updated>2022-09-27T01:38:18Z</updated>
    <id>tag:github.com,2022-09-27:/naiba/nezha</id>
    <link href="https://github.com/naiba/nezha" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Self-hosted, lightweight server and website monitoring and O&amp;M tool&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img width=&#34;360&#34; style=&#34;max-width:80%&#34; src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/static/brand.svg?sanitize=true&#34; title=&#34;哪吒监控 Nezha Monitoring&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;small&gt;&lt;i&gt;LOGO designed by &lt;a href=&#34;https://xio.ng&#34; target=&#34;_blank&#34;&gt;熊大&lt;/a&gt; .&lt;/i&gt;&lt;/small&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/workflow/status/naiba/nezha/Dashboard%20image?label=Dash%20v0.14.3&amp;amp;logo=github&amp;amp;style=for-the-badge&#34;&gt;&amp;nbsp;&#xA; &lt;img src=&#34;https://img.shields.io/github/v/release/naiba/nezha?color=brightgreen&amp;amp;label=Agent&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;&amp;nbsp;&#xA; &lt;img src=&#34;https://img.shields.io/github/workflow/status/naiba/nezha/Agent%20release?label=Agent%20CI&amp;amp;logo=github&amp;amp;style=for-the-badge&#34;&gt;&amp;nbsp;&#xA; &lt;img src=&#34;https://img.shields.io/badge/Installer-v0.10.7-brightgreen?style=for-the-badge&amp;amp;logo=linux&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img alt=&#34;trollface&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/trollface.png?v8&#34;&gt;) &lt;b&gt;Nezha Monitoring: Self-hosted, lightweight server and website monitoring and O&amp;amp;M tool.&lt;/b&gt;&lt;/p&gt; &#xA; &lt;p&gt;Supports &lt;b&gt;monitoring&lt;/b&gt; system status, HTTP (SSL certificate change, upcoming expiration, expired), TCP, Ping and supports &lt;b&gt;raising alerts&lt;/b&gt;, execute scheduled tasks and &lt;b&gt;web terminal&lt;/b&gt;.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&amp;gt;&amp;gt; Telegram Group: &lt;a href=&#34;https://t.me/nezhamonitoring_global&#34;&gt;Nezha Monitoring Global (English Only)&lt;/a&gt;, &lt;a href=&#34;https://t.me/nezhamonitoring&#34;&gt;哪吒监控（中文群组）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;gt;&amp;gt; &lt;a href=&#34;https://www.google.com/search?q=%22powered+by+Nezha+Monitoring%22+OR+%22powered+by+%E5%93%AA%E5%90%92%E7%9B%91%E6%8E%A7%22&#34;&gt;Use Cases | 我们的用户&lt;/a&gt; (Google)&lt;/p&gt; &#xA;&lt;h2&gt;User Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nezhahq.github.io/en_US/index.html&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nezhahq.github.io/index.html&#34;&gt;中文文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Default Theme&lt;/th&gt; &#xA;   &lt;th&gt;DayNight &lt;a href=&#34;https://github.com/JackieSung4ev&#34;&gt;@JackieSung&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;hotaru&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-default/screenshot.png&#34; alt=&#34;Default Theme&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-daynight/screenshot.png&#34; width=&#34;3000px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-hotaru/screenshot.png&#34; width=&#34;1500px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;div align=&#34;center&#34;&gt;&#xA;     &lt;b&gt;Default modified &lt;a href=&#34;https://ii.do/43.html&#34;&gt;[Guide]&lt;/a&gt;&lt;/b&gt;&#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;div align=&#34;center&#34;&gt;&#xA;     &lt;b&gt;Neko Mdui &lt;a href=&#34;https://github.com/MikoyChinese&#34;&gt;@MikoyChinese&lt;/a&gt;&lt;/b&gt;&#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://fastly.jsdelivr.net/gh/idarku/img@main/me/1631120192341.webp&#34; alt=&#34;默认主题魔改&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-mdui/screenshot.png&#34; alt=&#34;Neko Mdui&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported Languages&lt;/h2&gt; &#xA;&lt;p&gt;Help us improve translation &lt;a href=&#34;https://crowdin.com/project/nezha&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/nezha/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;English&lt;/li&gt; &#xA; &lt;li&gt;简体中文&lt;/li&gt; &#xA; &lt;li&gt;Español&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can change the dashboard language in the settings page (&lt;code&gt;/setting&lt;/code&gt;) after the dashboard is installed.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JackieSung4ev&#34;&gt;@JackieSung&lt;/a&gt; for our first community-contributed front-end theme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Erope&#34;&gt;@Erope&lt;/a&gt; for contributed a lot to our installation scripts and community building.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MikoyChinese&#34;&gt;@MikoyChinese&lt;/a&gt; for our second community-contributed front-end theme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AkkiaS7&#34;&gt;@AkkiaS7&lt;/a&gt; and &lt;a href=&#34;https://github.com/hhhkkk520&#34;&gt;@hhhkkk520&lt;/a&gt; for the excellent contribution in the early days of globalization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dysf888&#34;&gt;@dysf888&lt;/a&gt; for the installation script in Windows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MartijnLindeman&#34;&gt;@MartijnLindeman&lt;/a&gt; for his perseverance has taken us to the international market.&lt;/li&gt; &#xA; &lt;li&gt;and other &lt;a href=&#34;https://github.com/naiba/nezha/graphs/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>