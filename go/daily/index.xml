<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-01T01:36:34Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ssleert/zfxtop</title>
    <updated>2023-03-01T01:36:34Z</updated>
    <id>tag:github.com,2023-03-01:/ssleert/zfxtop</id>
    <link href="https://github.com/ssleert/zfxtop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[WIP] fetch top for gen Z with X written by bubbletea enjoyer&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/ssleert/zfxtop/raw/master/assets/images/logo.png&#34; width=&#34;50%&#34;&gt; &#xA; &lt;h3&gt;&lt;em&gt;&lt;code&gt;fetch&lt;/code&gt; top written by &lt;code&gt;bubbletea&lt;/code&gt; enjoyer&lt;/em&gt; &lt;span&gt;🐬&lt;/span&gt;&lt;/h3&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;img src=&#34;https://github.com/ssleert/zfxtop/raw/master/assets/images/ui.png&#34; width=&#34;50%&#34; align=&#34;right&#34;&gt; &#xA;&lt;h1&gt;Description 📖&lt;/h1&gt; &#xA;&lt;p&gt;Historically I don&#39;t use bars like &lt;code&gt;polybar&lt;/code&gt;/&lt;code&gt;waybar&lt;/code&gt; and so I have nowhere to put information about &lt;strong&gt;time&lt;/strong&gt;, &lt;strong&gt;CPU&lt;/strong&gt; load, &lt;strong&gt;RAM&lt;/strong&gt; usage, &lt;strong&gt;disk&lt;/strong&gt; usage, and other cool stuff so I decided to write a little &lt;em&gt;&lt;strong&gt;tui&lt;/strong&gt;&lt;/em&gt; utility for this purpose. Also I tried to make it as nice and nice to use as i can.&lt;/p&gt; &#xA;&lt;p&gt;At this point &lt;code&gt;zfxtop&lt;/code&gt; is in a very early stage of development so feel free to open an &lt;strong&gt;issue&lt;/strong&gt; with your problems and suggestions.&lt;/p&gt; &#xA;&lt;p&gt;The code is written in &lt;code&gt;Go&lt;/code&gt; because it is blue &lt;span&gt;🥤&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that this is only &lt;strong&gt;compatible&lt;/strong&gt; with the &lt;code&gt;linux&lt;/code&gt; kernel and &lt;code&gt;x86&lt;/code&gt; cpus at this time.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Installation ☁️&lt;/h1&gt; &#xA;&lt;p&gt;with &lt;code&gt;curl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;curl -sSL raw.githubusercontent.com/ssleert/zfxtop/master/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;with &lt;code&gt;wget&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;wget -qO- raw.githubusercontent.com/ssleert/zfxtop/master/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuration ⚙️&lt;/h1&gt; &#xA;&lt;p&gt;I decided that using &lt;code&gt;toml&lt;/code&gt; or &lt;code&gt;yaml&lt;/code&gt; makes no sense for such small configuration files, but it &lt;strong&gt;increases code size&lt;/strong&gt;, so I decided to use &lt;code&gt;ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;~/.config/zfxtop/conf.ini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;config file example&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[tui]&#xA;&#xA;# time between info update in millisecond&#xA;update = 100&#xA;&#xA;# requires nerd font&#xA;icons = true&#xA;&#xA;# can be rounded, sharp, double, ascii, dot&#xA;borders = rounded&#xA;&#xA;# enable or disable colors&#xA;colors = true&#xA;&#xA;&#xA;# colors are set in the 256-color palette&#xA;[colors]&#xA;faint  = 238&#xA;mid    = 245&#xA;&#xA;load0  = 27&#xA;load1  = 63&#xA;load2  = 99&#xA;load3  = 135&#xA;load4  = 171&#xA;load5  = 207&#xA;&#xA;tempr0 = 49&#xA;tempr1 = 79&#xA;tempr2 = 109&#xA;tempr3 = 139&#xA;tempr4 = 169&#xA;tempr5 = 199&#xA;&#xA;list0  = 109&#xA;list1  = 79&#xA;list2  = 169&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Building 📦&lt;/h1&gt; &#xA;&lt;p&gt;install &lt;code&gt;Go&lt;/code&gt; before it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;git clone https://github.com/ssleert/zfxtop.git&#xA;cd zfxtop/&#xA;./scripts/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have a &lt;code&gt;CPU&lt;/code&gt; with &lt;code&gt;amd64&lt;/code&gt; architecture you can try to &lt;strong&gt;build&lt;/strong&gt; with &lt;strong&gt;optimizations&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;# v2, v3, v4 supported&#xA;GOAMD64=v3 ./scripts/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contribute&lt;/h1&gt; &#xA;&lt;p&gt;Before contributing, please run &lt;code&gt;contribute.sh&lt;/code&gt; script&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;./scripts/contribute.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;hr&gt; &#xA; &lt;h3&gt;made with 🫀 by &lt;code&gt;sfome&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>EndlessCheng/codeforces-go</title>
    <updated>2023-03-01T01:36:34Z</updated>
    <id>tag:github.com,2023-03-01:/EndlessCheng/codeforces-go</id>
    <link href="https://github.com/EndlessCheng/codeforces-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Golang 算法竞赛模板库 | Solutions to Codeforces by Go 💭💡🎈&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;codeforces-go 💭💡🎈&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1AP41137w7/&#34;&gt;【基础算法精讲】&lt;/a&gt;B站连载中~欢迎关注！&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/EndlessCheng/codeforces-go/raw/master/leetcode/README.md&#34;&gt;题单&lt;/a&gt; &lt;a href=&#34;https://github.com/EndlessCheng/codeforces-go/raw/master/leetcode/SOLUTIONS.md&#34;&gt;高质量题解精选&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;算法 Algorithm&lt;/h2&gt; &#xA;&lt;p&gt;由于算法知识点繁杂，将自己学习到的算法、做过的题目分类整理好是有必要的。&lt;/p&gt; &#xA;&lt;p&gt;一个算法模板应当涵盖以下几点：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对该算法的基本介绍（核心思想、复杂度等）&lt;/li&gt; &#xA; &lt;li&gt;参考链接或书籍章节（讲的比较好的资料）&lt;/li&gt; &#xA; &lt;li&gt;模板代码（可以包含一些注释、使用说明）&lt;/li&gt; &#xA; &lt;li&gt;模板补充内容（常见题型中的额外代码、建模技巧等）&lt;/li&gt; &#xA; &lt;li&gt;相关题目链接（模板题、经典题、思维转换题等）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;算法目录&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gobyexample-cn.github.io/&#34;&gt;不了解 Go？快速入门教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;数据结构 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/monotone_stack.go&#34;&gt;单调栈 monotone_stack.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/monotone_queue.go&#34;&gt;单调队列 monotone_queue.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;二维单调队列&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/deque.go&#34;&gt;双端队列 deque.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/heap.go&#34;&gt;堆（优先队列）heap.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;支持修改、删除指定元素&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/union_find.go&#34;&gt;并查集 union_find.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;点权&lt;/li&gt; &#xA;     &lt;li&gt;边权（种类）&lt;/li&gt; &#xA;     &lt;li&gt;持久化&lt;/li&gt; &#xA;     &lt;li&gt;回滚操作（动态图连通性）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/sparse_table.go&#34;&gt;稀疏表（ST 表）sparse_table.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/fenwick_tree.go&#34;&gt;树状数组 fenwick_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/segment_tree.go&#34;&gt;线段树 segment_tree.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;延迟标记（懒标记）&lt;/li&gt; &#xA;     &lt;li&gt;动态开点&lt;/li&gt; &#xA;     &lt;li&gt;线段树合并&lt;/li&gt; &#xA;     &lt;li&gt;线段树分裂&lt;/li&gt; &#xA;     &lt;li&gt;持久化（主席树）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/segment_tree01.go&#34;&gt;0-1 线段树 segment_tree01.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/leftist_tree.go&#34;&gt;左偏树（可并堆）leftist_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/cartesian_tree.go&#34;&gt;笛卡尔树 cartesian_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/bst.go&#34;&gt;二叉搜索树公共方法 bst.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/treap.go&#34;&gt;Treap treap.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/splay.go&#34;&gt;伸展树 splay.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/link_cut_tree.go&#34;&gt;动态树 LCT link_cut_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/red_black_tree.go&#34;&gt;红黑树 red_black_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/scapegoat_tree.go&#34;&gt;替罪羊树 scapegoat_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/kd_tree.go&#34;&gt;k-d 树 kd_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;珂朵莉树（ODT） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/odt.go&#34;&gt;数组版 odt.go&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/odt_bst.go&#34;&gt;平衡树版 odt_bst.go&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/sqrt_decomposition.go&#34;&gt;根号分治、分块 sqrt_decomposition.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/mo.go&#34;&gt;莫队算法 mo.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;普通莫队&lt;/li&gt; &#xA;     &lt;li&gt;带修莫队&lt;/li&gt; &#xA;     &lt;li&gt;回滚莫队&lt;/li&gt; &#xA;     &lt;li&gt;树上莫队&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/strings.go&#34;&gt;字符串 strings.go&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;字符串哈希&lt;/li&gt; &#xA;   &lt;li&gt;KMP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;最小循环节&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;扩展 KMP（Z algorithm）&lt;/li&gt; &#xA;   &lt;li&gt;最小表示法&lt;/li&gt; &#xA;   &lt;li&gt;最长回文子串 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Manacher 算法&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;后缀数组（SA）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/sam.go&#34;&gt;后缀自动机（SAM）sam.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/trie.go&#34;&gt;字典树 trie.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;持久化&lt;/li&gt; &#xA;     &lt;li&gt;AC 自动机&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/trie01.go&#34;&gt;异或字典树 trie01.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;持久化&lt;/li&gt; &#xA;     &lt;li&gt;Hack：构造一组数据，最大化树上的节点数&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;数学 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math.go&#34;&gt;数论 math.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;辗转相除法（最大公因数 GCD）&lt;/li&gt; &#xA;     &lt;li&gt;类欧几里得算法 ∑⌊(ai+b)/m⌋&lt;/li&gt; &#xA;     &lt;li&gt;Pollard-Rho 质因数分解算法&lt;/li&gt; &#xA;     &lt;li&gt;埃氏筛（埃拉托斯特尼筛法）&lt;/li&gt; &#xA;     &lt;li&gt;欧拉筛（线性筛）&lt;/li&gt; &#xA;     &lt;li&gt;欧拉函数&lt;/li&gt; &#xA;     &lt;li&gt;原根&lt;/li&gt; &#xA;     &lt;li&gt;扩展 GCD &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;二元一次不定方程&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;逆元 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;线性求逆元&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;中国剩余定理（CRT） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;扩展中国剩余定理&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;离散对数 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;大步小步算法（BSGS） &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;扩展大步小步算法&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;二次剩余&lt;/li&gt; &#xA;       &lt;li&gt;Jacobi 符号&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;组合数学 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;卢卡斯定理&lt;/li&gt; &#xA;       &lt;li&gt;卡特兰数&lt;/li&gt; &#xA;       &lt;li&gt;默慈金数&lt;/li&gt; &#xA;       &lt;li&gt;那罗延数&lt;/li&gt; &#xA;       &lt;li&gt;斯特林数 &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;第一类斯特林数（轮换）&lt;/li&gt; &#xA;         &lt;li&gt;第二类斯特林数（子集）&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;贝尔数&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;莫比乌斯函数&lt;/li&gt; &#xA;     &lt;li&gt;数论分块&lt;/li&gt; &#xA;     &lt;li&gt;杜教筛&lt;/li&gt; &#xA;     &lt;li&gt;容斥原理&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_fft.go&#34;&gt;快速傅里叶变换 FFT math_fft.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_ntt.go&#34;&gt;快速数论变换 NTT math_ntt.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;包含多项式全家桶（求逆、开方等等）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_fwt.go&#34;&gt;快速沃尔什变换 FWT math_fwt.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_continued_fraction.go&#34;&gt;连分数、佩尔方程 math_continued_fraction.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_matrix.go&#34;&gt;线性代数 math_matrix.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;矩阵相关运算&lt;/li&gt; &#xA;     &lt;li&gt;高斯消元&lt;/li&gt; &#xA;     &lt;li&gt;行列式&lt;/li&gt; &#xA;     &lt;li&gt;线性基&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_numerical_analysis.go&#34;&gt;数值分析 math_numerical_analysis.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;自适应辛普森积分&lt;/li&gt; &#xA;     &lt;li&gt;拉格朗日插值&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/geometry.go&#34;&gt;计算几何 geometry.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;线与点&lt;/li&gt; &#xA;     &lt;li&gt;线与线&lt;/li&gt; &#xA;     &lt;li&gt;圆与点 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;最小圆覆盖 &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;随机增量法&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;固定半径覆盖最多点&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;圆与线&lt;/li&gt; &#xA;     &lt;li&gt;圆与圆&lt;/li&gt; &#xA;     &lt;li&gt;圆与矩形&lt;/li&gt; &#xA;     &lt;li&gt;最近点对&lt;/li&gt; &#xA;     &lt;li&gt;多边形与点 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;判断点在凸多边形内 O(log n)&lt;/li&gt; &#xA;       &lt;li&gt;判断点在任意多边形内 &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;转角法（统计绕数）&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;凸包&lt;/li&gt; &#xA;     &lt;li&gt;最远点对 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;旋转卡壳&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;半平面交&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/games.go&#34;&gt;博弈论 games.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;SG 函数&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/dp.go&#34;&gt;动态规划 dp.go&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;背包 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;0-1 背包&lt;/li&gt; &#xA;     &lt;li&gt;完全背包&lt;/li&gt; &#xA;     &lt;li&gt;多重背包&lt;/li&gt; &#xA;     &lt;li&gt;分组背包&lt;/li&gt; &#xA;     &lt;li&gt;树上背包（依赖背包）&lt;/li&gt; &#xA;     &lt;li&gt;字典序最小方案&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;线性 DP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;最大子段和&lt;/li&gt; &#xA;     &lt;li&gt;LCS&lt;/li&gt; &#xA;     &lt;li&gt;LPS&lt;/li&gt; &#xA;     &lt;li&gt;LIS &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;狄尔沃斯定理&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;LCIS&lt;/li&gt; &#xA;     &lt;li&gt;长度为 m 的 LIS 个数&lt;/li&gt; &#xA;     &lt;li&gt;本质不同子序列个数&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;区间 DP&lt;/li&gt; &#xA;   &lt;li&gt;环形 DP&lt;/li&gt; &#xA;   &lt;li&gt;状压 DP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;旅行商问题（TSP）&lt;/li&gt; &#xA;     &lt;li&gt;高维前缀和（SOS DP）&lt;/li&gt; &#xA;     &lt;li&gt;插头 DP&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;数位 DP&lt;/li&gt; &#xA;   &lt;li&gt;倍增优化 DP&lt;/li&gt; &#xA;   &lt;li&gt;斜率优化 DP（CHT）&lt;/li&gt; &#xA;   &lt;li&gt;树形 DP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;树的直径个数&lt;/li&gt; &#xA;     &lt;li&gt;在任一直径上的节点个数&lt;/li&gt; &#xA;     &lt;li&gt;树上最大独立集&lt;/li&gt; &#xA;     &lt;li&gt;树上最小顶点覆盖&lt;/li&gt; &#xA;     &lt;li&gt;树上最小支配集&lt;/li&gt; &#xA;     &lt;li&gt;树上最大匹配&lt;/li&gt; &#xA;     &lt;li&gt;换根 DP（二次扫描法）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/graph.go&#34;&gt;图论 graph.go&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;链式前向星&lt;/li&gt; &#xA;   &lt;li&gt;欧拉回路和欧拉路径 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;无向图&lt;/li&gt; &#xA;     &lt;li&gt;有向图&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;割点&lt;/li&gt; &#xA;   &lt;li&gt;割边（桥）&lt;/li&gt; &#xA;   &lt;li&gt;双连通分量（BCC） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;v-BCC&lt;/li&gt; &#xA;     &lt;li&gt;e-BCC&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;最短路 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Dijkstra&lt;/li&gt; &#xA;     &lt;li&gt;SPFA（队列优化的 Bellman-Ford） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;差分约束系统&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Floyd-Warshall&lt;/li&gt; &#xA;     &lt;li&gt;Johnson&lt;/li&gt; &#xA;     &lt;li&gt;0-1 BFS（双端队列 BFS）&lt;/li&gt; &#xA;     &lt;li&gt;字典序最小最短路&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;最小环&lt;/li&gt; &#xA;   &lt;li&gt;最小生成树（MST） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Kruskal&lt;/li&gt; &#xA;     &lt;li&gt;Prim&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;单度限制最小生成树&lt;/li&gt; &#xA;   &lt;li&gt;次小生成树&lt;/li&gt; &#xA;   &lt;li&gt;曼哈顿距离最小生成树&lt;/li&gt; &#xA;   &lt;li&gt;最小差值生成树&lt;/li&gt; &#xA;   &lt;li&gt;最小树形图 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;朱刘算法&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;二分图判定（染色）&lt;/li&gt; &#xA;   &lt;li&gt;二分图找奇环&lt;/li&gt; &#xA;   &lt;li&gt;二分图最大匹配 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;匈牙利算法&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;带权二分图最大完美匹配 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Kuhn–Munkres 算法&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;拓扑排序&lt;/li&gt; &#xA;   &lt;li&gt;强连通分量（SCC） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Kosaraju&lt;/li&gt; &#xA;     &lt;li&gt;Tarjan&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;2-SAT&lt;/li&gt; &#xA;   &lt;li&gt;基环树&lt;/li&gt; &#xA;   &lt;li&gt;最大流 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Dinic&lt;/li&gt; &#xA;     &lt;li&gt;ISAP&lt;/li&gt; &#xA;     &lt;li&gt;HLPP&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;最小费用最大流 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;SPFA&lt;/li&gt; &#xA;     &lt;li&gt;Dijkstra&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;三元环计数&lt;/li&gt; &#xA;   &lt;li&gt;四元环计数&lt;/li&gt; &#xA;   &lt;li&gt;仙人掌&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/graph_tree.go&#34;&gt;树上问题 graph_tree.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;直径&lt;/li&gt; &#xA;     &lt;li&gt;重心 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;点分治&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;最近公共祖先（LCA） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;倍增&lt;/li&gt; &#xA;       &lt;li&gt;ST 表&lt;/li&gt; &#xA;       &lt;li&gt;Tarjan&lt;/li&gt; &#xA;       &lt;li&gt;树上差分&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;重链剖分（HLD）&lt;/li&gt; &#xA;     &lt;li&gt;长链剖分&lt;/li&gt; &#xA;     &lt;li&gt;树上启发式合并（DSU）&lt;/li&gt; &#xA;     &lt;li&gt;树分块&lt;/li&gt; &#xA;     &lt;li&gt;Prufer 序列&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;其他 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/bits.go&#34;&gt;位运算笔记 bits.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;bitset&lt;/li&gt; &#xA;     &lt;li&gt;区间位运算 trick（含 GCD）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/sort.go&#34;&gt;二分 三分 sort.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;0-1 分数规划&lt;/li&gt; &#xA;     &lt;li&gt;整体二分&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/search.go&#34;&gt;搜索 search.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;枚举排列&lt;/li&gt; &#xA;     &lt;li&gt;枚举组合&lt;/li&gt; &#xA;     &lt;li&gt;生成下一个排列&lt;/li&gt; &#xA;     &lt;li&gt;康托展开&lt;/li&gt; &#xA;     &lt;li&gt;逆康托展开&lt;/li&gt; &#xA;     &lt;li&gt;枚举子集 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Gosper&#39;s Hack&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;折半枚举（Meet in the middle） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;超大背包问题&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/rand.go&#34;&gt;随机算法 rand.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;模拟退火&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/common.go&#34;&gt;杂项A common.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;算法思路整理&lt;/li&gt; &#xA;     &lt;li&gt;前缀和&lt;/li&gt; &#xA;     &lt;li&gt;二维前缀和&lt;/li&gt; &#xA;     &lt;li&gt;二维差分&lt;/li&gt; &#xA;     &lt;li&gt;离散化&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/misc.go&#34;&gt;杂项B misc.go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/io.go&#34;&gt;快速输入输出模板 io.go&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;欢迎关注我的 B 站频道：&lt;a href=&#34;https://space.bilibili.com/206214&#34;&gt;灵茶山艾府&lt;/a&gt;，定期更新算法讲解视频哦~&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;喜欢刷题和打比赛的同学也欢迎加入我的算法竞赛群，联系微信 AC_0x3F，备注 &lt;code&gt;git&lt;/code&gt;。&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如何选择题目 How to Choose Problems&lt;/h2&gt; &#xA;&lt;h3&gt;Rating &amp;lt; 2100&lt;/h3&gt; &#xA;&lt;p&gt;这一阶段主要目标是提高对问题的观察能力。做构造题可以针对性地训练这一点。&lt;/p&gt; &#xA;&lt;p&gt;选择难度在自己 rating 到 rating+200 范围内的构造题 (tag: constructive algorithms)，按照过题人数降序做题，比如 [1700,1900] 区间的就是下面这个链接：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=constructive+algorithms%2C1700-1900&#34;&gt;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=constructive+algorithms%2C1700-1900&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;通过大量的构造题训练，提高观察能力，快速找到切题入口。具体见我在知乎上的这篇 &lt;a href=&#34;https://www.zhihu.com/question/353734418/answer/2353160035&#34;&gt;回答&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;Rating &amp;gt;= 2100&lt;/h3&gt; &#xA;&lt;p&gt;这一阶段要想上分，应以 DP 为主，图论和数据结构为辅。难度范围选择同上，可以根据自己在该项的能力上下调整。&lt;/p&gt; &#xA;&lt;p&gt;我的 Codeforces 账号：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/profile/0x3F&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/0x3F-MASTER%202189-orange?style=for-the-badge&#34; alt=&#34;0x3F&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;测试及对拍 Testing&lt;/h2&gt; &#xA;&lt;p&gt;编写一个 &lt;code&gt;run(io.Reader, io.Writer)&lt;/code&gt; 函数来处理输入输出。这样写的理由是：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在 &lt;code&gt;main&lt;/code&gt; 中调用 &lt;code&gt;run(os.Stdin, os.Stdout)&lt;/code&gt; 来执行代码；&lt;/li&gt; &#xA; &lt;li&gt;测试时，将测试数据转换成 &lt;code&gt;strings.Reader&lt;/code&gt; 当作输入，并用一个 &lt;code&gt;strings.Builder&lt;/code&gt; 来接收输出，将这二者传入 &lt;code&gt;run&lt;/code&gt; 中，然后就能比较输出与答案了；&lt;/li&gt; &#xA; &lt;li&gt;对拍时需要实现一个暴力算法 &lt;code&gt;runAC&lt;/code&gt;，参数和 &lt;code&gt;run&lt;/code&gt; 一样。通过 &lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/main/testutil/rand.go&#34;&gt;随机数据生成器&lt;/a&gt; 来生成数据，分别传入 &lt;code&gt;runAC&lt;/code&gt; 和 &lt;code&gt;run&lt;/code&gt;，通过比对各自的输出，来检查 &lt;code&gt;run&lt;/code&gt; 中的问题。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;具体可以见 Codeforces 代码仓库 &lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/main&#34;&gt;main&lt;/a&gt;，所有非交互题的代码及其对应测试全部按照上述框架实现。&lt;/p&gt; &#xA;&lt;p&gt;例如：&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/main/1400-1499/1439C_test.go&#34;&gt;1439C_test.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;交互题的写法要复杂一些，需要把涉及输入输出的地方抽象成接口，详见 &lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/template/interactive_problem&#34;&gt;interactive_problem&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;学习资料及题目 Resources&lt;/h2&gt; &#xA;&lt;p&gt;注：由于入门经典上选了很多区域赛的题，一部分题目可以在 GYM 上找到，这样可以就可以用 Go 编程提交了。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aoapc-book/aoapc-bac2nd&#34;&gt;算法竞赛入门经典（第二版）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/klb3713/aoapc-book/tree/master/TrainingGuide/bookcodes&#34;&gt;算法竞赛入门经典训练指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/sukhoeing/aoapc-training-guide2&#34;&gt;算法竞赛入门经典训练指南（升级版）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lydrainbowcat/tedukuri&#34;&gt;算法竞赛进阶指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/luoyongjun999/code&#34;&gt;算法竞赛入门到进阶&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/enkerewpo/OI-Public-Library&#34;&gt;OI Public Library（含国家队论文）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LzyRapx/Competitive-Programming-Docs&#34;&gt;算法竞赛 (ICPC, OI, etc) 论文，课件，文档，笔记等&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hzwer/shareOI&#34;&gt;算法竞赛课件分享 by hzwer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://algs4.cs.princeton.edu/code/&#34;&gt;算法第四版 Java 源码&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://visualgo.net/zh&#34;&gt;数据结构和算法动态可视化&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oi-wiki.org/&#34;&gt;OI Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cp-algorithms.com/&#34;&gt;CP-Algorithms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/95106&#34;&gt;The Ultimate Topic List (with Resources, Problems and Templates)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.craft.do/s/N0l80k2gv46Psq&#34;&gt;洛谷日报&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/57282&#34;&gt;All the good tutorials found for Competitive Programming&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/55274&#34;&gt;Codeforces Problem Topics&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.shahjalalshohag.com/topic-list/&#34;&gt;The Ultimate Topic List(with Tutorials, Problems, and Templates)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/how-to-prepare-for-acm-icpc/&#34;&gt;GeeksforGeeks 上的算法合集&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://pepcy.cf/icpc-templates/&#34;&gt;Pepcy 模板&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/F0RE1GNERS/template&#34;&gt;F0RE1GNERS 模板&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/Xing-Ling/p/10930556.html&#34;&gt;【模板整合计划】目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/105467597&#34;&gt;算法学习笔记（目录）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/list?keyword=%E6%A8%A1%E6%9D%BF&amp;amp;page=1&#34;&gt;洛谷模板题（建议按难度筛选）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/training/9391&#34;&gt;能力全面提升综合题单&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SFOI-Team/luogu-problem-list/raw/master/list.md&#34;&gt;Luogu Problem List&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/paste/0id3h6on&#34;&gt;洛谷原试炼场&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/84429&#34;&gt;Links of ICPC/CCPC Contests from China&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AtCoder 版《挑战程序设计竞赛》&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/drken/items/e77685614f3c6bf86f44&#34;&gt;AtCoder 版！蟻本 (初級編)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/drken/items/2f56925972c1d34e05d8&#34;&gt;AtCoder 版！蟻本 (中級編)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/drken/items/9b311d553aa434bb26e4&#34;&gt;AtCoder 版！蟻本 (上級編)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/drken/items/0de3d205690d92307b7c&#34;&gt;AtCoder 版！蟻本 (発展的トピック編)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;待整理&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/Xing-Ling/p/10897760.html&#34;&gt;【杂文】记一些有用的神奇网站&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dhs347/Dream/raw/master/%E8%AE%A1%E5%88%92/%E8%AE%A1%E5%88%92%E4%B9%A6/A%E8%AE%A1%E5%88%92_%E9%98%B6%E6%AE%B51.md&#34;&gt;偶然在 GitHub 上发现的超长列表&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/skywalkert/article/details/48924861&#34;&gt;算法竞赛训练中较难的部分&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/skywalkert/article/details/48878925&#34;&gt;算法竞赛中可能不太会遇到的论文题&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/21924647&#34;&gt;[杂谈]OI/ACM中冷门算法&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/calabash_boy/article/details/79973483&#34;&gt;https://blog.csdn.net/calabash_boy/article/details/79973483&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zimpha/algorithmic-library&#34;&gt;https://github.com/zimpha/algorithmic-library&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/command-block/blog-suo-yin-zhi-ding-post&#34;&gt;https://www.luogu.com.cn/blog/command-block/blog-suo-yin-zhi-ding-post&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wcysai.github.io/&#34;&gt;https://wcysai.github.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/Troverld/index&#34;&gt;https://www.luogu.com.cn/blog/Troverld/index&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;其他 Others&lt;/h2&gt; &#xA;&lt;p&gt;My GoLand &lt;code&gt;Live Templates&lt;/code&gt; and &lt;code&gt;Postfix Completion&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/misc/my_goland_template&#34;&gt;settings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Useful Tools&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.geogebra.org/classic&#34;&gt;GeoGebra 经典&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://csacademy.com/app/geometry_widget/&#34;&gt;Draw Geometry&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://csacademy.com/app/graph_editor/&#34;&gt;Draw Graph&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oeis.org/&#34;&gt;OEIS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wolframalpha.com/&#34;&gt;Wolfram|Alpha&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://upsolve.me/&#34;&gt;UpSolve.me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces-upsolving-helper.herokuapp.com/&#34;&gt;Codeforces Upsolving Helper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforceshelper.herokuapp.com/contests&#34;&gt;Contests Filter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://codeforced.github.io/handle/&#34;&gt;Codeforced&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cfviz.netlify.app/&#34;&gt;Codeforces Visualizer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tom0727.github.io/cf-problems/&#34;&gt;Codeforces Solve Tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cftracker.netlify.app/contests&#34;&gt;Another Codeforces Solve Tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rating and Difficulties&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/20762&#34;&gt;Open Codeforces Rating System&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/68288&#34;&gt;How to Interpret Contest Ratings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/62865&#34;&gt;Codeforces: Problem Difficulties&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Elo_rating_system#Theory&#34;&gt;Elo rating system&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Stay Healthy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://musclewiki.org/&#34;&gt;Exercises!&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>