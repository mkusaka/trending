<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-12T01:36:27Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tmc/langchaingo</title>
    <updated>2023-06-12T01:36:27Z</updated>
    <id>tag:github.com,2023-06-12:/tmc/langchaingo</id>
    <link href="https://github.com/tmc/langchaingo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LangChain for Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🦜️🔗 LangChain Go&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/tmc/langchaingo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go.dev-reference-007d9c?logo=go&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;go.dev reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/tmc/langchaingo&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/tmc/langchaingo&#34; alt=&#34;scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;⚡ Building applications with LLMs through composability ⚡&lt;/p&gt; &#xA;&lt;h2&gt;🤔 What is this?&lt;/h2&gt; &#xA;&lt;p&gt;This is the Go language implementation of LangChain.&lt;/p&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/tmc/langchaingo&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎉 Examples&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tmc/langchaingo/main/examples&#34;&gt;./examples&lt;/a&gt; for example usage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;&#x9;&#34;github.com/tmc/langchaingo/llms/openai&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;llm, err := openai.New()&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#x9;completion, err := llm.Call(&#34;What would be a good company name for a company that makes colorful socks?&#34;)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#x9;fmt.Println(completion)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ go run .&#xA;&#xA;Socktastic!&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>getzep/zep</title>
    <updated>2023-06-12T01:36:27Z</updated>
    <id>tag:github.com,2023-06-12:/getzep/zep</id>
    <link href="https://github.com/getzep/zep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zep: A long-term memory store for LLM / Chatbot applications&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://discord.gg/W8Kw6bsgXQ&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/W8Kw6bsgXQ?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/getzep/zep&#34; alt=&#34;GitHub release (latest by date)&#34;&gt; &lt;a href=&#34;https://github.com/getzep/zep/actions/workflows/build-test.yml&#34;&gt;&lt;img src=&#34;https://github.com/getzep/zep/actions/workflows/build-test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build/Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/getzep/zep/actions/workflows/docker-publish.yml&#34;&gt;&lt;img src=&#34;https://github.com/getzep/zep/actions/workflows/docker-publish.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/getzep/zep/actions/workflows/golangci-lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/getzep/zep/actions/workflows/golangci-lint.yml/badge.svg?sanitize=true&#34; alt=&#34;golangci-lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/github/license/getzep/zep&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache-blue.svg?sanitize=true&#34; alt=&#34;License: Apache&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Zep: A long-term memory store for LLM applications&lt;/h1&gt; &#xA;&lt;p&gt;Zep stores, summarizes, embeds, indexes, and enriches LLM app / chatbot histories, and exposes them via simple, low-latency APIs. Zep allows developers to focus on developing their AI apps, rather than on building memory persistence, search, and enrichment infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;Zep&#39;s Extractor model is easily extensible, with a simple, clean interface available to build new enrichment functionality, such as summarizers, entity extractors, embedders, and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Long-term memory persistence&lt;/strong&gt;, with access to historical messages irrespective of your summarization strategy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Auto-summarization&lt;/strong&gt; of memory messages based on a configurable message window. A series of summaries are stored, providing flexibility for future summarization strategies.&lt;/li&gt; &#xA; &lt;li&gt;Hybrid &lt;strong&gt;Vector search&lt;/strong&gt; over memories and metadata, with messages automatically embedded on creation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Entity Extractor&lt;/strong&gt; that extracts named entities from messages and stores them in the message metadata.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Auto-token counting&lt;/strong&gt; of memories and summaries, allowing finer-grained control over prompt assembly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;JavaScript&lt;/strong&gt; SDKs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Langchain&lt;/strong&gt; &lt;code&gt;memory&lt;/code&gt; and &lt;code&gt;retriever&lt;/code&gt; support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://render.com/deploy?repo=https://github.com/getzep/zep&#34;&gt;&lt;img src=&#34;https://render.com/images/deploy-to-render-button.svg?sanitize=true&#34; alt=&#34;Deploy to Render&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read the docs: &lt;a href=&#34;https://getzep.github.io/&#34;&gt;https://getzep.github.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/getzep/zep.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add your OpenAI API key to a &lt;code&gt;.env&lt;/code&gt; file in the root of the repo:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ZEP_OPENAI_API_KEY=&amp;lt;your key here&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start the Zep server:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start a Zep server on port 8000, and a Postgres database on port 5432.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Access Zep via the Python or Javascript SDKs:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;async with ZepClient(base_url) as client:&#xA;    role = &#34;user&#34;&#xA;    content = &#34;who was the first man to go to space?&#34;&#xA;    message = Message(role=role, content=content)&#xA;    memory = Memory()&#xA;    memory.messages = [message]&#xA;    # Add a memory&#xA;    result = await client.aadd_memory(session_id, memory)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/getzep/zep-python&#34;&gt;zep-python&lt;/a&gt; for installation and use docs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Javascript&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Javascript&#34;&gt; // Add memory&#xA; const role = &#34;user&#34;;&#xA; const content = &#34;I&#39;m looking to plan a trip to Iceland. Can you help me?&#34;&#xA; const message = new Message({ role, content });&#xA; const memory = new Memory();&#xA; memory.messages = [message];&#xA; const result = await client.addMemoryAsync(session_id, memory);&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Zep Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Server installation and SDK usage documentation is available here: &lt;a href=&#34;https://getzep.github.io/&#34;&gt;https://getzep.github.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;h/t to the &lt;a href=&#34;https://github.com/getmetal/motorhead&#34;&gt;Motorhead&lt;/a&gt; and &lt;a href=&#34;https://github.com/hwchase17/langchain&#34;&gt;Langchain&lt;/a&gt; projects for inspiration.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sevtin/lark</title>
    <updated>2023-06-12T01:36:27Z</updated>
    <id>tag:github.com,2023-06-12:/sevtin/lark</id>
    <link href="https://github.com/sevtin/lark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Golang千万级IM服务端，支持集群和水平扩展，万人群消息秒达。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lark&lt;/h1&gt; &#xA;&lt;p&gt;Golang千万级IM服务端，支持集群和水平扩展，万人群消息秒达。&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sevtin/lark/main/assets/images/lark_logo.png&#34; height=&#34;263&#34; width=&#34;452&#34;&gt; &#xA;&lt;h3&gt;技术选型及开发环境&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;序号&lt;/th&gt; &#xA;   &lt;th&gt;技术&lt;/th&gt; &#xA;   &lt;th&gt;版本&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;官网&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;1.18.3&lt;/td&gt; &#xA;   &lt;td&gt;开发语言&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;https://go.dev/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Lua&lt;/td&gt; &#xA;   &lt;td&gt;5.3&lt;/td&gt; &#xA;   &lt;td&gt;Redis Lua 脚本&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.lua.org/&#34;&gt;http://www.lua.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Mysql&lt;/td&gt; &#xA;   &lt;td&gt;8.0.29&lt;/td&gt; &#xA;   &lt;td&gt;关系型数据库&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mysql.com/&#34;&gt;https://www.mysql.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;MongoDB&lt;/td&gt; &#xA;   &lt;td&gt;5.0.9&lt;/td&gt; &#xA;   &lt;td&gt;NoSql数据库【已弃用】&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mongodb.com&#34;&gt;https://www.mongodb.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Elasticsearch&lt;/td&gt; &#xA;   &lt;td&gt;7.17.6&lt;/td&gt; &#xA;   &lt;td&gt;搜索和分析引擎&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.elastic.co/cn/elasticsearch/&#34;&gt;https://www.elastic.co/cn/elasticsearch/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Redis&lt;/td&gt; &#xA;   &lt;td&gt;6.2.7&lt;/td&gt; &#xA;   &lt;td&gt;KV 数据库&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;https://redis.io/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Kafka&lt;/td&gt; &#xA;   &lt;td&gt;3.2.1&lt;/td&gt; &#xA;   &lt;td&gt;消息队列&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://kafka.apache.org/&#34;&gt;https://kafka.apache.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;ZooKeeper&lt;/td&gt; &#xA;   &lt;td&gt;3.7.1&lt;/td&gt; &#xA;   &lt;td&gt;分布式协调服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zookeeper.apache.org/&#34;&gt;https://zookeeper.apache.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Docker&lt;/td&gt; &#xA;   &lt;td&gt;20.10.17&lt;/td&gt; &#xA;   &lt;td&gt;应用容器引擎&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.docker.com&#34;&gt;https://www.docker.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;MinIO&lt;/td&gt; &#xA;   &lt;td&gt;2022.12.12&lt;/td&gt; &#xA;   &lt;td&gt;对象存储&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://min.io/&#34;&gt;https://min.io/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;Nginx&lt;/td&gt; &#xA;   &lt;td&gt;1.23.1&lt;/td&gt; &#xA;   &lt;td&gt;Web/反向代理&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nginx.com/&#34;&gt;https://www.nginx.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;JWT&lt;/td&gt; &#xA;   &lt;td&gt;v4.4.2&lt;/td&gt; &#xA;   &lt;td&gt;JWT登录支持&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/golang-jwt/jwt&#34;&gt;https://github.com/golang-jwt/jwt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;Validator&lt;/td&gt; &#xA;   &lt;td&gt;v10.11.0&lt;/td&gt; &#xA;   &lt;td&gt;验证框架&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/go-playground/validator&#34;&gt;https://github.com/go-playground/validator&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;Jaeger&lt;/td&gt; &#xA;   &lt;td&gt;all-in-one:1.37&lt;/td&gt; &#xA;   &lt;td&gt;链路追踪&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.jaegertracing.io&#34;&gt;https://www.jaegertracing.io&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;Prometheus&lt;/td&gt; &#xA;   &lt;td&gt;2.36.2&lt;/td&gt; &#xA;   &lt;td&gt;系统监控和报警系统&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://prometheus.io/&#34;&gt;https://prometheus.io/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;Grafana&lt;/td&gt; &#xA;   &lt;td&gt;8.2.6&lt;/td&gt; &#xA;   &lt;td&gt;指标数据的可视化展现&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://grafana.com/&#34;&gt;https://grafana.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;ETCD&lt;/td&gt; &#xA;   &lt;td&gt;3.5&lt;/td&gt; &#xA;   &lt;td&gt;服务发现&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://etcd.io/&#34;&gt;https://etcd.io/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;Kibana&lt;/td&gt; &#xA;   &lt;td&gt;7.17.6&lt;/td&gt; &#xA;   &lt;td&gt;数据分析和可视化平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.elastic.co/cn/kibana/&#34;&gt;https://www.elastic.co/cn/kibana/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;Logstash&lt;/td&gt; &#xA;   &lt;td&gt;7.17.6&lt;/td&gt; &#xA;   &lt;td&gt;数据收集引擎&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.elastic.co/cn/logstash/&#34;&gt;https://www.elastic.co/cn/logstash/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;Filebeat&lt;/td&gt; &#xA;   &lt;td&gt;7.17.6&lt;/td&gt; &#xA;   &lt;td&gt;日志采集器&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.elastic.co/cn/beats/filebeat&#34;&gt;https://www.elastic.co/cn/beats/filebeat&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td&gt;Flink&lt;/td&gt; &#xA;   &lt;td&gt;1.14.6&lt;/td&gt; &#xA;   &lt;td&gt;通用数据处理平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flink.apache.org/&#34;&gt;https://flink.apache.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;ShardingSphere-Proxy&lt;/td&gt; &#xA;   &lt;td&gt;5.2.1&lt;/td&gt; &#xA;   &lt;td&gt;数据库中间件&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://shardingsphere.apache.org/&#34;&gt;https://shardingsphere.apache.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td&gt;Mycat&lt;/td&gt; &#xA;   &lt;td&gt;2.1.21&lt;/td&gt; &#xA;   &lt;td&gt;数据库中间件【已弃用】&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://mycatone.top/&#34;&gt;http://mycatone.top/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td&gt;Gin&lt;/td&gt; &#xA;   &lt;td&gt;v1.8.1&lt;/td&gt; &#xA;   &lt;td&gt;Web 框架&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;https://github.com/gin-gonic/gin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;gRpc&lt;/td&gt; &#xA;   &lt;td&gt;v1.49.0&lt;/td&gt; &#xA;   &lt;td&gt;远程过程调用系统&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/google.golang.org/grpc&#34;&gt;https://pkg.go.dev/google.golang.org/grpc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;GORM&lt;/td&gt; &#xA;   &lt;td&gt;v1.23.8&lt;/td&gt; &#xA;   &lt;td&gt;ORM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gorm.io/&#34;&gt;https://gorm.io/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sevtin/lark/main/assets/images/lark-architecture-diagram.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;单机版运行步骤&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Step 1&#xA;下载单机版分支代码（注:该分支代码已停止维护）&#xA;git clone -b standalone git@github.com:sevtin/lark.git&#xA;&#xA;Step 2&#xA;创建日志文件目录&#xA;/var/log/lark&#xA;&#xA;Step 3&#xA;创建docker容器数据卷目录&#xA;/Volumes/data/lark&#xA;&#xA;Step 4&#xA;修改host文件&#xA;lark/configs/docker/host.txt&#xA;&#xA;Step 5&#xA;执行容器启动脚本&#xA;./lark/build/run/docker-up.sh&#xA;&#xA;Step 6&#xA;http://127.0.0.1:9001/identity/account/new-account&#xA;Minio Create Service Account&#xA;Access Key: SEv0QKlwqQ36M1eV&#xA;Secret Key: sZVZR1RD8Pcy73NANvk6vbMmoDsGSSOk&#xA;&#xA;Create Buckets And Change Access Policy&#xA;[&#34;documents&#34;,&#34;photos&#34;,&#34;videos&#34;]&#xA;Access Policy: Public&#xA;&#xA;upload files to photos&#xA;./lark/assets/images/avatar/06b73ea9-0c61-4ea6-b3e5-f89d89d53add.jpeg&#xA;./lark/assets/images/avatar/6b546cc7-5e4a-4d31-8017-1e5853f88a1c.jpeg&#xA;./lark/assets/images/avatar/b11883ba-f3d7-4164-a593-700c177c37c8.jpeg&#xA;&#xA;mkdir -p /private/tmp/lark/photos&#xA;&#xA;Step 7&#xA;通过Apache Flink同步数据到Elasticsearch&#xA;&#xA;Step 8&#xA;执行build脚本&#xA;./lark/scripts/build.sh&#xA;&#xA;Step 9&#xA;执行项目启动脚本&#xA;./lark/build/run/run_all.sh&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;视频教程地址&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://space.bilibili.com/178350755&#34;&gt;https://space.bilibili.com/178350755&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>