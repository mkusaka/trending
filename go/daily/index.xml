<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:40:29Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ent/ent</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/ent/ent</id>
    <link href="https://github.com/ent/ent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An entity framework for Go&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;ent - An Entity Framework For Go&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/entgo_io&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/entgo_io.svg?style=social&amp;amp;label=Follow%20%40entgo_io&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/qZmPgTE6RX&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/885059418646003782?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/README_zh.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/README_jp.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img width=&#34;50%&#34; align=&#34;right&#34; style=&#34;display: block; margin:40px auto;&#34; src=&#34;https://s3.eu-central-1.amazonaws.com/entgo.io/assets/gopher_graph.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, yet powerful entity framework for Go, that makes it easy to build and maintain applications with large data-models.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Schema As Code&lt;/strong&gt; - model any database schema as Go objects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easily Traverse Any Graph&lt;/strong&gt; - run queries, aggregations and traverse any graph structure easily.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Statically Typed And Explicit API&lt;/strong&gt; - 100% statically typed and explicit API using code generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi Storage Driver&lt;/strong&gt; - supports MySQL, MariaDB, TiDB, PostgreSQL, CockroachDB, SQLite and Gremlin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extendable&lt;/strong&gt; - simple to extend and customize using Go templates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go install entgo.io/ent/cmd/ent@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For proper installation using &lt;a href=&#34;https://github.com/golang/go/wiki/Modules#quick-start&#34;&gt;Go modules&lt;/a&gt;, visit &lt;a href=&#34;https://entgo.io/docs/code-gen/#version-compatibility-between-entc-and-ent&#34;&gt;entgo.io website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docs and Support&lt;/h2&gt; &#xA;&lt;p&gt;The documentation for developing and using ent is available at: &lt;a href=&#34;https://entgo.io&#34;&gt;https://entgo.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For discussion and support, &lt;a href=&#34;https://github.com/ent/ent/issues/new/choose&#34;&gt;open an issue&lt;/a&gt; or join our &lt;a href=&#34;https://gophers.slack.com/archives/C01FMSQDT53&#34;&gt;channel&lt;/a&gt; in the gophers Slack.&lt;/p&gt; &#xA;&lt;h2&gt;Join the ent Community&lt;/h2&gt; &#xA;&lt;p&gt;Building &lt;code&gt;ent&lt;/code&gt; would not have been possible without the collective work of our entire community. We maintain a &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/doc/md/contributors.md&#34;&gt;contributors page&lt;/a&gt; which lists the contributors to this &lt;code&gt;ent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to contribute to &lt;code&gt;ent&lt;/code&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for how to go get started. If your company or your product is using &lt;code&gt;ent&lt;/code&gt;, please let us know by adding yourself to the &lt;a href=&#34;https://github.com/ent/ent/wiki/ent-users&#34;&gt;ent users page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For updates, follow us on Twitter at &lt;a href=&#34;https://twitter.com/entgo_io&#34;&gt;https://twitter.com/entgo_io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About the Project&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;ent&lt;/code&gt; project was inspired by Ent, an entity framework we use internally. It is developed and maintained by &lt;a href=&#34;https://github.com/a8m&#34;&gt;a8m&lt;/a&gt; and &lt;a href=&#34;https://github.com/alexsn&#34;&gt;alexsn&lt;/a&gt; from the &lt;a href=&#34;https://connectivity.fb.com&#34;&gt;Facebook Connectivity&lt;/a&gt; team. It is used by multiple teams and projects in production, and the roadmap for its v1 release is described &lt;a href=&#34;https://github.com/ent/ent/issues/46&#34;&gt;here&lt;/a&gt;. Read more about the motivation of the project &lt;a href=&#34;https://entgo.io/blog/2019/10/03/introducing-ent&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ent is licensed under Apache 2.0 as found in the &lt;a href=&#34;https://raw.githubusercontent.com/ent/ent/master/LICENSE&#34;&gt;LICENSE file&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>abiosoft/colima</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/abiosoft/colima</id>
    <link href="https://github.com/abiosoft/colima" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Container runtimes on macOS (and Linux) with minimal setup&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Colima&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/abiosoft/colima/actions/workflows/go.yml&#34;&gt;&lt;img src=&#34;https://github.com/abiosoft/colima/actions/workflows/go.yml/badge.svg?sanitize=true&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/abiosoft/colima/actions/workflows/integration.yml&#34;&gt;&lt;img src=&#34;https://github.com/abiosoft/colima/actions/workflows/integration.yml/badge.svg?sanitize=true&#34; alt=&#34;Integration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Container runtimes on macOS (and Linux) with minimal setup.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abiosoft/colima/main/colima.gif&#34; alt=&#34;Demonstration&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel and M1 Macs support&lt;/li&gt; &#xA; &lt;li&gt;Simple CLI interface&lt;/li&gt; &#xA; &lt;li&gt;Docker and Containerd support&lt;/li&gt; &#xA; &lt;li&gt;Port Forwarding&lt;/li&gt; &#xA; &lt;li&gt;Volume mounts&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Colima is available on Homebrew, MacPorts, and Nix. Check &lt;a href=&#34;https://raw.githubusercontent.com/abiosoft/colima/main/docs/INSTALL.md&#34;&gt;here&lt;/a&gt; for other installation options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Homebrew&#xA;brew install colima&#xA;&#xA;# MacPorts&#xA;sudo port install colima&#xA;&#xA;# Nix&#xA;nix-env -iA nixpkgs.colima&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or stay on the bleeding edge (only Homebrew)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install --HEAD colima&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upgrading&lt;/h3&gt; &#xA;&lt;p&gt;If upgrading from v0.3.4 or lower, it is required to start afresh by deleting existing instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;colima delete # delete existing instance&#xA;colima start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Start Colima with defaults&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colima start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more usage options&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colima --help&#xA;colima start --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use a config file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colima start --edit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Runtimes&lt;/h2&gt; &#xA;&lt;p&gt;On initial startup, Colima initiates with a user specified runtime that defaults to Docker.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Docker client is required for Docker runtime. Installable with brew &lt;code&gt;brew install docker&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;docker&lt;/code&gt; client on macOS after &lt;code&gt;colima start&lt;/code&gt; with no additional setup.&lt;/p&gt; &#xA;&lt;h3&gt;Containerd&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;colima start --runtime containerd&lt;/code&gt; starts and setup Containerd. You can use &lt;code&gt;colima nerdctl&lt;/code&gt; to interact with Containerd using &lt;a href=&#34;https://github.com/containerd/nerdctl&#34;&gt;nerdctl&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended to run &lt;code&gt;colima nerdctl install&lt;/code&gt; to install &lt;code&gt;nerdctl&lt;/code&gt; alias script in $PATH.&lt;/p&gt; &#xA;&lt;h3&gt;Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;kubectl is required for Kubernetes. Installable with &lt;code&gt;brew install kubectl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To enable Kubernetes, start Colima with &lt;code&gt;--kubernetes&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colima start --kubernetes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Interacting with Image Registry&lt;/h4&gt; &#xA;&lt;p&gt;For Docker runtime, images built or pulled with Docker are accessible to Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;For Containerd runtime, images built or pulled in the &lt;code&gt;k8s.io&lt;/code&gt; namespace are accessible to Kubernetes.&lt;/p&gt; &#xA;&lt;h3&gt;Customizing the VM&lt;/h3&gt; &#xA;&lt;p&gt;The default VM created by Colima has 2 CPUs, 2GiB memory and 60GiB storage.&lt;/p&gt; &#xA;&lt;p&gt;The VM can be customized either by passing additional flags to &lt;code&gt;colima start&lt;/code&gt;. e.g. &lt;code&gt;--cpu&lt;/code&gt;, &lt;code&gt;--memory&lt;/code&gt;, &lt;code&gt;--disk&lt;/code&gt;, &lt;code&gt;--runtime&lt;/code&gt;. Or by editing the config file with &lt;code&gt;colima start --edit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: disk size cannot be changed after the VM is created.&lt;/p&gt; &#xA;&lt;h4&gt;Customization Examples&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;create VM with 1CPU, 2GiB memory and 10GiB storage.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;colima start --cpu 1 --memory 2 --disk 10&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;modify an existing VM to 4CPUs and 8GiB memory.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;colima stop&#xA;colima start --cpu 4 --memory 8&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Goal&lt;/h2&gt; &#xA;&lt;p&gt;To provide container runtimes on macOS with minimal setup.&lt;/p&gt; &#xA;&lt;h2&gt;Project Status&lt;/h2&gt; &#xA;&lt;p&gt;⚠️ The project is still in active early stage development and updates may introduce breaking changes.&lt;/p&gt; &#xA;&lt;h2&gt;What is with the name?&lt;/h2&gt; &#xA;&lt;p&gt;Colima means Containers in &lt;a href=&#34;https://github.com/lima-vm/lima&#34;&gt;Lima&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since Lima is aka Linux on Mac. By transitivity, Colima can also mean Containers on Linux on Mac.&lt;/p&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/abiosoft/colima/main/docs/FAQ.md&#34;&gt;here&lt;/a&gt; for Frequently Asked Questions.&lt;/p&gt; &#xA;&lt;h2&gt;Help Wanted&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation (wiki pages)&lt;/li&gt; &#xA; &lt;li&gt;Testing on M1 Macs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsoring the Project&lt;/h2&gt; &#xA;&lt;p&gt;If you (or your company) are benefiting from the project and would like to support the contributors, kindly support the project on &lt;a href=&#34;https://patreon.com/colima&#34;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nuanxinqing123/QLTools</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/nuanxinqing123/QLTools</id>
    <link href="https://github.com/nuanxinqing123/QLTools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;青龙面板的变量第三方手动/半自动提交（上传）管理中间件&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/whyour/qinglong&#34;&gt; &lt;img width=&#34;150&#34; src=&#34;https://z3.ax1x.com/2021/11/18/I7MpAe.png&#34; alt=&#34;Img&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;青龙Tools&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nuanxinqing123/QLTools#%E6%BC%94%E7%A4%BA%E5%9B%BE&#34;&gt;查看演示图&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🍭功能介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;理论支持青龙全版本&lt;/li&gt; &#xA; &lt;li&gt;自定义变量名称 &amp;amp; 数量&lt;/li&gt; &#xA; &lt;li&gt;支持多容器上传管控&lt;/li&gt; &#xA; &lt;li&gt;容器独享变量限额&lt;/li&gt; &#xA; &lt;li&gt;自选服务器和变量组上传&lt;/li&gt; &#xA; &lt;li&gt;支持变量黑名单 &amp;amp; IP提交次数限制&lt;/li&gt; &#xA; &lt;li&gt;支持容器相互迁移 &amp;amp; 复制 &amp;amp; 备份 &amp;amp; 恢复&lt;/li&gt; &#xA; &lt;li&gt;插件模式（可将自行编写插件绑定到变量上使用）&lt;/li&gt; &#xA; &lt;li&gt;程序热更新（快速更新版本）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🍳技术栈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;语言：Golang&lt;/li&gt; &#xA; &lt;li&gt;Web框架：Gin框架&lt;/li&gt; &#xA; &lt;li&gt;配置文件：Viper库&lt;/li&gt; &#xA; &lt;li&gt;日志：Zap库&lt;/li&gt; &#xA; &lt;li&gt;数据库：GORM - SQLite&lt;/li&gt; &#xA; &lt;li&gt;API文档：&lt;a href=&#34;https://console-docs.apipost.cn/preview/0fdb4c815ed24ab2/e2057f0e0b8dc545&#34;&gt;https://console-docs.apipost.cn/preview/0fdb4c815ed24ab2/e2057f0e0b8dc545&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;文档密码：609889&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🧸配置文件&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;app:&#xA;  # 运行模式：生产环境留空(开发模式：debug)&#xA;  mode: &#34;&#34;&#xA;  # 运行端口&#xA;  port: 15000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔍安装教程&lt;/h2&gt; &#xA;&lt;p&gt;Tips:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;测试版不提供Docker镜像&lt;/li&gt; &#xA; &lt;li&gt;删除config目录里面的app.db文件就相当于重装青龙Tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;安装方式一：Supervisord &amp;amp; PM2 &amp;amp; nohup 启动守护&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 创建目录并进入&#xA;mkdir QLTools &amp;amp;&amp;amp; cd QLTools&#xA;&#xA;# 给予权限&#xA;chmod 755 程序名称&#xA;&#xA;# 启动程序排查启动错误&#xA;./程序名称&#xA;&#xA;# 程序无误后点击下方教程查看程序后台守护教程&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;教程地址：&lt;a href=&#34;https://6b7.org/460.html&#34;&gt;青龙Tools的后台进程守护教程（附反代域名）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;安装方式二、Docker启动&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 创建QLTools目录并进入&#xA;mkdir qltools &amp;amp;&amp;amp; cd qltools&#xA;&#xA;# Docker版本提供架构：amd64、arm64、arm-7&#xA;docker run -itd --name QLTools -v $PWD/config:/QLTools/config -v $PWD/plugin:/QLTools/plugin -p 15000:15000 nuanxinqing123/qltools:latest&#xA;&#xA;# Docker部署方式的热更新存在问题，请手动拉镜像更新&#xA;&#xA;# 更新步骤：后台点击更新，稍等5分钟左右。手动重启容器即可完成更新（如果更新失败，请删除容器和镜像，然后重新拉取镜像启动）&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🎯开发计划&lt;/h2&gt; &#xA;&lt;p&gt;开发计划 &amp;amp; 进度：&lt;a href=&#34;https://web.banlikanban.com/kanban/626f9b4c6ade1220282ac551&#34;&gt;点击查看&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;招募一位热心愿意一起开发的前端小伙伴，嘿嘿。我前端太差了&lt;/p&gt; &#xA;&lt;p&gt;TG：&lt;a href=&#34;https://t.me/Nuanxinqing&#34;&gt;https://t.me/Nuanxinqing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Email：&lt;a href=&#34;mailto:nuanxinqing@gmail.com&#34;&gt;nuanxinqing@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧩当前版本日志&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker热更新存在问题，请手动拉镜像更新&lt;/li&gt; &#xA; &lt;li&gt;修复 前端：容器管理面板空白选项&lt;/li&gt; &#xA; &lt;li&gt;修改 投稿正则表单描述错误&lt;/li&gt; &#xA; &lt;li&gt;新增 支持青龙2.10.13以及相关联版本的支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📔自行构建步骤&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 项目开发环境：Golang 1.18&#xA;# Clone 项目并进入项目目录&#xA;git clone https://github.com/nuanxinqing123/QLTools.git &amp;amp;&amp;amp; cd QLTools&#xA;&#xA;# 更新项目依赖&#xA;go mod tidy&#xA;&#xA;# 构建前端静态文件（需要安装go-bindata）&#xA;go-bindata -o=bindata/bindata.go -pkg=bindata ./assets/...&#xA;&#xA;# 打包&#xA;go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📷演示图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.6b7.xyz/2022/05/11/25a5e41170f5f.png&#34; alt=&#34;QQ截图20220511154438.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.6b7.xyz/2022/05/11/3f13f15d25b46.png&#34; alt=&#34;QQ截图20220511154454.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.6b7.xyz/2022/05/11/e41ea41542307.png&#34; alt=&#34;QQ截图20220511154818.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.6b7.xyz/2022/05/11/40f36ef85f79d.png&#34; alt=&#34;QQ截图20220511154933.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.6b7.xyz/2022/05/11/347a5fd9b12f2.png&#34; alt=&#34;QQ截图20220511154947.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.6b7.xyz/2022/05/11/3c3c339fa3b82.png&#34; alt=&#34;QQ截图20220511155004.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pic.6b7.xyz/2022/05/11/4fe5dab516d93.png&#34; alt=&#34;QQ截图20220511155021.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>projectcalico/calico</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/projectcalico/calico</id>
    <link href="https://github.com/projectcalico/calico" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud native networking and network security&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/projectcalico/calico&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/projectcalico/calico&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/helm/projectcalico/tigera-operator&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/tigera-operator&#34; alt=&#34;ArtifactHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/calico/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/projectcalico/api&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/k8s.io/kubernetes.svg?sanitize=true&#34; alt=&#34;GoPkg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/6064&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/6064/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;http://docs.projectcalico.org/images/felix.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &#xA; &lt;h1&gt;Calico&lt;/h1&gt; &#xA; &lt;h2&gt; &lt;a href=&#34;https://projectcalico.docs.tigera.io/getting-started/kubernetes/quickstart&#34;&gt;Quickstart&lt;/a&gt; | &lt;a href=&#34;https://projectcalico.docs.tigera.io&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/CONTRIBUTING_CODE.md&#34;&gt;Contribute&lt;/a&gt; | &lt;a href=&#34;https://slack.projectcalico.org&#34;&gt;Slack&lt;/a&gt; | &lt;a href=&#34;https://github.com/projectcalico/calico/releases&#34;&gt;Releases&lt;/a&gt; &lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Calico is a widely adopted, battle-tested open source networking and network security solution for Kubernetes, virtual machines, and bare-metal workloads. Calico provides two major services for Cloud Native applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Network connectivity between workloads.&lt;/li&gt; &#xA; &lt;li&gt;Network security policy enforcement between workloads.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Calico’s flexible architecture supports a wide range of deployment options, using modular components and technologies, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Choice of data plane technology, whether it be &lt;a href=&#34;https://projectcalico.docs.tigera.io/maintenance/ebpf/use-cases-ebpf&#34;&gt;eBPF&lt;/a&gt;, standard Linux, &lt;a href=&#34;https://docs.microsoft.com/en-us/virtualization/windowscontainers/container-networking/architecture&#34;&gt;Windows HNS&lt;/a&gt; or &lt;a href=&#34;https://github.com/projectcalico/vpp-dataplane&#34;&gt;VPP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enforcement of the full set of Kubernetes network policy features, plus for those needing a richer set of policy features, Calico network policies.&lt;/li&gt; &#xA; &lt;li&gt;An optimized Kubernetes Service implementation using eBPF.&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/apiserver&#34;&gt;apiserver integration&lt;/a&gt;, for managing Calico configuration and Calico network policies.&lt;/li&gt; &#xA; &lt;li&gt;Both non-overlay and &lt;a href=&#34;https://projectcalico.docs.tigera.io/networking/vxlan-ipip&#34;&gt;overlay (via IPIP or VXLAN)&lt;/a&gt; networking options in either public cloud or on-prem deployments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/cni-plugin&#34;&gt;CNI plugins&lt;/a&gt; for Kubernetes to provide highly efficient pod networking and IP Address Management (IPAM).&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/networking-calico&#34;&gt;Neutron ML2&lt;/a&gt; plugin to provide VM networking for OpenStack.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://projectcalico.docs.tigera.io/networking/bgp&#34;&gt;BGP routing stack&lt;/a&gt; that can advertise routes for workload and service IP addresses to physical network infrastructure.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started Running Calico&lt;/h2&gt; &#xA;&lt;p&gt;There are many avenues to get started with Calico depending on your situation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Trying out Kubernetes on a single host or on your own hardware? The &lt;a href=&#34;https://projectcalico.docs.tigera.io/getting-started/kubernetes/quickstart&#34;&gt;quick start guide&lt;/a&gt; will have you up and running in about fifteen minutes.&lt;/li&gt; &#xA; &lt;li&gt;Running a managed public cloud? Use our &lt;a href=&#34;https://projectcalico.docs.tigera.io/getting-started/kubernetes/managed-public-cloud/&#34;&gt;guides for enabling Calico network policies&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Want to go deeper? Visit &lt;a href=&#34;https://projectcalico.docs.tigera.io&#34;&gt;https://projectcalico.docs.tigera.io&lt;/a&gt; for full documentation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started Developing Calico&lt;/h2&gt; &#xA;&lt;p&gt;Calico is an open source project, and welcomes your contribution, be it through code, a bug report, a feature request, or user feedback.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/CONTRIBUTING_CODE.md&#34;&gt;The Contribution Guidelines&lt;/a&gt; document will get you started on submitting changes to the project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/DEVELOPER_GUIDE.md&#34;&gt;The Developer Guide&lt;/a&gt; will walk you through how to set up a development environment, build the code, and run tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/CONTRIBUTING_DOCS.md&#34;&gt;The Calico Documentation Guide&lt;/a&gt; will get you started on making changes to &lt;a href=&#34;https://projectcalico.docs.tigera.io&#34;&gt;https://projectcalico.docs.tigera.io&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join the Calico Community!&lt;/h2&gt; &#xA;&lt;p&gt;The Calico community is committed to fostering an open and welcoming environment, with several ways to engage with other users and developers. You can find out more about our monthly meetings, Slack group, and Discourse by visiting our &lt;a href=&#34;https://github.com/projectcalico/community&#34;&gt;community repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Calico is open source, with most code and documentation available under the Apache 2.0 license (see the &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/calico/LICENSE&#34;&gt;LICENSE&lt;/a&gt;), though some elements are necessarily licensed under different open source licenses for compatibility with upstream licensing or code linking. For example, some Calico BPF programs are licensed under GPL v2.0 for compatibility with Linux kernel helper functions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>containers/podman</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/containers/podman</id>
    <link href="https://github.com/containers/podman" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Podman: A tool for managing OCI containers and pods.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/containers/podman/main/logo/podman-logo-source.svg?sanitize=true&#34; alt=&#34;PODMAN logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Podman: A tool for managing OCI containers and pods&lt;/h1&gt; &#xA;&lt;p&gt;Podman (the POD MANager) is a tool for managing containers and images, volumes mounted into those containers, and pods made from groups of containers. Podman is based on libpod, a library for container lifecycle management that is also contained in this repository. The libpod library provides APIs for managing containers, pods, container images, and volumes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/containers/podman/releases/tag/v4.1.0&#34;&gt;Latest Version: 4.1.0&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Latest Remote client for Windows&lt;/li&gt; &#xA;   &lt;li&gt;Latest Remote client for macOS&lt;/li&gt; &#xA;   &lt;li&gt;Latest Static Remote client for Linux&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Continuous Integration: &lt;a href=&#34;https://cirrus-ci.com/github/containers/podman/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/containers/podman.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/containers/podman/libpod&#34;&gt;GoDoc: &lt;img src=&#34;https://godoc.org/github.com/containers/podman/libpod?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview and scope&lt;/h2&gt; &#xA;&lt;p&gt;At a high level, the scope of Podman and libpod is the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for multiple container image formats, including OCI and Docker images.&lt;/li&gt; &#xA; &lt;li&gt;Full management of those images, including pulling from various sources (including trust and verification), creating (built via Containerfile or Dockerfile or committed from a container), and pushing to registries and other storage backends.&lt;/li&gt; &#xA; &lt;li&gt;Full management of container lifecycle, including creation (both from an image and from an exploded root filesystem), running, checkpointing and restoring (via CRIU), and removal.&lt;/li&gt; &#xA; &lt;li&gt;Full management of container networking, using CNI, Netavark, and slirp4netns&lt;/li&gt; &#xA; &lt;li&gt;Support for pods, groups of containers that share resources and are managed together.&lt;/li&gt; &#xA; &lt;li&gt;Support for running containers and pods without root or other elevated privileges.&lt;/li&gt; &#xA; &lt;li&gt;Resource isolation of containers and pods.&lt;/li&gt; &#xA; &lt;li&gt;Support for a Docker-compatible CLI interface.&lt;/li&gt; &#xA; &lt;li&gt;No manager daemon, for improved security and lower resource utilization at idle.&lt;/li&gt; &#xA; &lt;li&gt;Support for a REST API providing both a Docker-compatible interface and an improved interface exposing advanced Podman functionality.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Podman presently only supports running containers on Linux. However, we are building a remote client which can run on Windows and macOS and manage Podman containers on a Linux system via the REST API using SSH tunneling.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Further improvements to the REST API, with a focus on bugfixes and implementing missing functionality&lt;/li&gt; &#xA; &lt;li&gt;Improvements on rootless containers, with a focus on improving the user experience and exposing presently-unavailable features when possible&lt;/li&gt; &#xA; &lt;li&gt;Improvements to Pods, including the addition of pod-level resource limits&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Communications&lt;/h2&gt; &#xA;&lt;p&gt;If you think you&#39;ve identified a security issue in the project, please &lt;em&gt;DO NOT&lt;/em&gt; report the issue publicly via the GitHub issue tracker, mailing list, or IRC. Instead, send an email with as many details as possible to &lt;code&gt;security@lists.podman.io&lt;/code&gt;. This is a private mailing list for the core maintainers.&lt;/p&gt; &#xA;&lt;p&gt;For general questions and discussion, please use Podman&#39;s &lt;a href=&#34;https://podman.io/community/#slack-irc-matrix-and-discord&#34;&gt;channels&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For discussions around issues/bugs and features, you can use the GitHub &lt;a href=&#34;https://github.com/containers/podman/issues&#34;&gt;issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/containers/podman/pulls&#34;&gt;PRs&lt;/a&gt; tracking system.&lt;/p&gt; &#xA;&lt;p&gt;There is also a &lt;a href=&#34;https://lists.podman.io/archives/&#34;&gt;mailing list&lt;/a&gt; at &lt;code&gt;lists.podman.io&lt;/code&gt;. You can subscribe by sending a message to &lt;code&gt;podman-join@lists.podman.io&lt;/code&gt; with the subject &lt;code&gt;subscribe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Rootless&lt;/h2&gt; &#xA;&lt;p&gt;Podman can be easily run as a normal user, without requiring a setuid binary. When run without root, Podman containers use user namespaces to set root in the container to the user running Podman. Rootless Podman runs locked-down containers with no privileges that the user running the container does not have. Some of these restrictions can be lifted (via &lt;code&gt;--privileged&lt;/code&gt;, for example), but rootless containers will never have more privileges than the user that launched them. If you run Podman as your user and mount in &lt;code&gt;/etc/passwd&lt;/code&gt; from the host, you still won&#39;t be able to change it, since your user doesn&#39;t have permission to do so.&lt;/p&gt; &#xA;&lt;p&gt;Almost all normal Podman functionality is available, though there are some &lt;a href=&#34;https://github.com/containers/podman/raw/main/rootless.md&#34;&gt;shortcomings&lt;/a&gt;. Any recent Podman release should be able to run rootless without any additional configuration, though your operating system may require some additional configuration detailed in the &lt;a href=&#34;https://github.com/containers/podman/raw/main/install.md&#34;&gt;install guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A little configuration by an administrator is required before rootless Podman can be used, the necessary setup is documented &lt;a href=&#34;https://github.com/containers/podman/raw/main/docs/tutorials/rootless_tutorial.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Out of scope&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Specialized signing and pushing of images to various storage backends. See &lt;a href=&#34;https://github.com/containers/skopeo/&#34;&gt;Skopeo&lt;/a&gt; for those tasks.&lt;/li&gt; &#xA; &lt;li&gt;Support for the Kubernetes CRI interface for container management. The &lt;a href=&#34;https://github.com/cri-o/cri-o&#34;&gt;CRI-O&lt;/a&gt; daemon specializes in that.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;OCI Projects Plans&lt;/h2&gt; &#xA;&lt;p&gt;Podman uses OCI projects and best of breed libraries for different aspects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Runtime: We use the &lt;a href=&#34;https://github.com/opencontainers/runtime-tools&#34;&gt;OCI runtime tools&lt;/a&gt; to generate OCI runtime configurations that can be used with any OCI-compliant runtime, like &lt;a href=&#34;https://github.com/containers/crun/&#34;&gt;crun&lt;/a&gt; and &lt;a href=&#34;https://github.com/opencontainers/runc/&#34;&gt;runc&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Images: Image management uses the &lt;a href=&#34;https://github.com/containers/image&#34;&gt;containers/image&lt;/a&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;Storage: Container and image storage is managed by &lt;a href=&#34;https://github.com/containers/storage&#34;&gt;containers/storage&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Networking: Networking support through use of &lt;a href=&#34;https://github.com/containers/netavark&#34;&gt;Netavark&lt;/a&gt; and &lt;a href=&#34;https://github.com/containers/aardvark-dns&#34;&gt;Aardvark&lt;/a&gt;. Support for &lt;a href=&#34;https://github.com/containernetworking/cni&#34;&gt;CNI&lt;/a&gt; is also available. Rootless networking is handled via &lt;a href=&#34;https://github.com/rootless-containers/slirp4netns&#34;&gt;slirp4netns&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Builds: Builds are supported via &lt;a href=&#34;https://github.com/containers/buildah&#34;&gt;Buildah&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Conmon: &lt;a href=&#34;https://github.com/containers/conmon&#34;&gt;Conmon&lt;/a&gt; is a tool for monitoring OCI runtimes, used by both Podman and CRI-O.&lt;/li&gt; &#xA; &lt;li&gt;Seccomp: A unified &lt;a href=&#34;https://github.com/containers/common/raw/main/pkg/seccomp/seccomp.json&#34;&gt;Seccomp&lt;/a&gt; policy for Podman, Buildah, and CRI-O.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Podman Information for Developers&lt;/h2&gt; &#xA;&lt;p&gt;For blogs, release announcements and more, please checkout the &lt;a href=&#34;https://podman.io&#34;&gt;podman.io&lt;/a&gt; website!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/install.md&#34;&gt;Installation notes&lt;/a&gt;&lt;/strong&gt; Information on how to install Podman in your environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/pkg/hooks/README.md&#34;&gt;OCI Hooks Support&lt;/a&gt;&lt;/strong&gt; Information on how Podman configures &lt;a href=&#34;https://github.com/opencontainers/runtime-spec/raw/v1.0.2/config.md#posix-platform-hooks&#34;&gt;OCI Hooks&lt;/a&gt; to run when launching a container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.podman.io/en/latest/_static/api.html&#34;&gt;Podman API&lt;/a&gt;&lt;/strong&gt; Documentation on the Podman REST API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://podman.readthedocs.io/en/latest/Commands.html&#34;&gt;Podman Commands&lt;/a&gt;&lt;/strong&gt; A list of the Podman commands with links to their man pages and in many cases videos showing the commands in use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/troubleshooting.md&#34;&gt;Podman Troubleshooting Guide&lt;/a&gt;&lt;/strong&gt; A list of common issues and solutions for Podman.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/transfer.md&#34;&gt;Podman Usage Transfer&lt;/a&gt;&lt;/strong&gt; Useful information for ops and dev transfer as it relates to infrastructure that utilizes Podman. This page includes tables showing Docker commands and their Podman equivalent commands.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/docs/tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/strong&gt; Tutorials on using Podman.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/containers/podman/raw/main/docs/tutorials/remote_client.md&#34;&gt;Remote Client&lt;/a&gt;&lt;/strong&gt; A brief how-to on using the Podman remote-client.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/containers/podman/raw/main/docs/tutorials/rootless_tutorial.md&#34;&gt;Basic Setup and Use of Podman in a Rootless environment&lt;/a&gt;&lt;/strong&gt; A tutorial showing the setup and configuration necessary to run Rootless Podman.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/RELEASE_NOTES.md&#34;&gt;Release Notes&lt;/a&gt;&lt;/strong&gt; Release notes for recent Podman versions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/strong&gt; Information about contributing to this project.&lt;/p&gt; &#xA;&lt;h2&gt;Buildah and Podman relationship&lt;/h2&gt; &#xA;&lt;p&gt;Buildah and Podman are two complementary open-source projects that are available on most Linux platforms and both projects reside at &lt;a href=&#34;https://github.com&#34;&gt;GitHub.com&lt;/a&gt; with Buildah &lt;a href=&#34;https://github.com/containers/buildah&#34;&gt;here&lt;/a&gt; and Podman &lt;a href=&#34;https://github.com/containers/podman&#34;&gt;here&lt;/a&gt;. Both, Buildah and Podman are command line tools that work on Open Container Initiative (OCI) images and containers. The two projects differentiate in their specialization.&lt;/p&gt; &#xA;&lt;p&gt;Buildah specializes in building OCI images. Buildah&#39;s commands replicate all of the commands that are found in a Dockerfile. This allows building images with and without Dockerfiles while not requiring any root privileges. Buildah’s ultimate goal is to provide a lower-level coreutils interface to build images. The flexibility of building images without Dockerfiles allows for the integration of other scripting languages into the build process. Buildah follows a simple fork-exec model and does not run as a daemon but it is based on a comprehensive API in golang, which can be vendored into other tools.&lt;/p&gt; &#xA;&lt;p&gt;Podman specializes in all of the commands and functions that help you to maintain and modify OCI images, such as pulling and tagging. It also allows you to create, run, and maintain those containers created from those images. For building container images via Dockerfiles, Podman uses Buildah&#39;s golang API and can be installed independently from Buildah.&lt;/p&gt; &#xA;&lt;p&gt;A major difference between Podman and Buildah is their concept of a container. Podman allows users to create &#34;traditional containers&#34; where the intent of these containers is to be long lived. While Buildah containers are really just created to allow content to be added back to the container image. An easy way to think of it is the &lt;code&gt;buildah run&lt;/code&gt; command emulates the RUN command in a Dockerfile while the &lt;code&gt;podman run&lt;/code&gt; command emulates the &lt;code&gt;docker run&lt;/code&gt; command in functionality. Because of this and their underlying storage differences, you can not see Podman containers from within Buildah or vice versa.&lt;/p&gt; &#xA;&lt;p&gt;In short, Buildah is an efficient way to create OCI images while Podman allows you to manage and maintain those images and containers in a production environment using familiar container cli commands. For more details, see the &lt;a href=&#34;https://github.com/containers/buildah/tree/master/docs/containertools&#34;&gt;Container Tools Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://podman.io/images/podman-hello.jpg&#34;&gt;Podman Hello&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ podman run quay.io/podman/hello&#xA;Trying to pull quay.io/podman/hello:latest...&#xA;Getting image source signatures&#xA;Copying blob a6b3126f3807 done&#xA;Copying config 25c667d086 done&#xA;Writing manifest to image destination&#xA;Storing signatures&#xA;!... Hello Podman World ...!&#xA;&#xA;         .--&#34;--.&#xA;       / -     - \&#xA;      / (O)   (O) \&#xA;   ~~~| -=(,Y,)=- |&#xA;    .---. /`  \   |~~&#xA; ~/  o  o \~~~~.----. ~~&#xA;  | =(X)= |~  / (O (O) \&#xA;   ~~~~~~~  ~| =(Y_)=-  |&#xA;  ~~~~    ~~~|   U      |~~&#xA;&#xA;Project:   https://github.com/containers/podman&#xA;Website:   https://podman.io&#xA;Documents: https://docs.podman.io&#xA;Twitter:   @Podman_io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Podman Former API (Varlink)&lt;/h2&gt; &#xA;&lt;p&gt;Podman formerly offered a Varlink-based API for remote management of containers. However, this API was replaced by the REST API. Varlink support has been removed as of the 3.0 release. For more details, you can see &lt;a href=&#34;https://podman.io/blogs/2020/01/17/podman-new-api.html&#34;&gt;this blog&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chaos-mesh/chaos-mesh</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/chaos-mesh/chaos-mesh</id>
    <link href="https://github.com/chaos-mesh/chaos-mesh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Chaos Engineering Platform for Kubernetes.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chaos-mesh/chaos-mesh/master/static/logo.svg?sanitize=true&#34; alt=&#34;Chaos Mesh Logo&#34; width=&#34;450&#34;&gt; &#xA;&lt;!-- markdown-link-check-disable --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/chaos-mesh/chaos-mesh/actions/workflows/upload_image.yml&#34;&gt;&lt;img src=&#34;https://github.com/chaos-mesh/chaos-mesh/actions/workflows/upload_image.yml/badge.svg?event=schedule&#34; alt=&#34;Upload Image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/chaos-mesh/chaos-mesh&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/chaos-mesh/chaos-mesh/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chaos-mesh/chaos-mesh/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pingcap/chaos-mesh.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/chaos-mesh/chaos-mesh&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/chaos-mesh/chaos-mesh&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/chaos-mesh/chaos-mesh&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Godoc-reference-blue.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fchaos-mesh%2Fchaos-mesh?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fchaos-mesh%2Fchaos-mesh.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3680&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3680/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- markdown-link-check-enable --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;This readme and related documentation are Work in Progress.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Chaos Mesh is a &lt;a href=&#34;https://www.cncf.io/&#34;&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt; hosted project. It is a cloud-native Chaos Engineering platform that orchestrates chaos on Kubernetes environments. At the current stage, it has the following components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chaos Operator&lt;/strong&gt;: the core component for chaos orchestration. Fully open sourced.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chaos Dashboard&lt;/strong&gt;: a Web UI for managing, designing, monitoring Chaos Experiments.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the following demo video for a quick view of Chaos Mesh:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ifZEwdJO868&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chaos-mesh/chaos-mesh/master/static/demo.gif&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Chaos Operator&lt;/h2&gt; &#xA;&lt;p&gt;Chaos Operator injects chaos into the applications and Kubernetes infrastructure in a manageable way, which provides easy, custom definitions for chaos experiments and automatic orchestration. There are three components at play:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Controller-manager&lt;/strong&gt;: used to schedule and manage the lifecycle of CRD objects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chaos-daemon&lt;/strong&gt;: runs as daemonset with privileged system permissions over network, Cgroup, etc. for a specific node.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chaos-mesh/chaos-mesh/master/static/chaos-mesh.png&#34; alt=&#34;Chaos Operator&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chaos Operator uses &lt;a href=&#34;https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/&#34;&gt;CustomResourceDefinition (CRD)&lt;/a&gt; to define chaos objects. The current implementation supports a few types of CRD objects for fault injection, namely DNSChaos, PodChaos, PodIOChaos, PodNetworkChaos, NetworkChaos, IOChaos, TimeChaos, StressChaos, and KernelChaos, which correspond to the following major actions (experiments):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pod-kill: The selected pod is killed (ReplicaSet or something similar may be needed to ensure the pod will be restarted).&lt;/li&gt; &#xA; &lt;li&gt;pod-failure: The selected pod will be unavailable in a specified period of time.&lt;/li&gt; &#xA; &lt;li&gt;container-kill: The selected container is killed in the selected pod.&lt;/li&gt; &#xA; &lt;li&gt;netem chaos: Network chaos such as delay, duplication, etc.&lt;/li&gt; &#xA; &lt;li&gt;network-partition: Simulate network partition.&lt;/li&gt; &#xA; &lt;li&gt;IO chaos: Simulate file system faults such as I/O delay, read/write errors, etc.&lt;/li&gt; &#xA; &lt;li&gt;time chaos: The selected pod will be injected with clock skew.&lt;/li&gt; &#xA; &lt;li&gt;cpu-burn: Simulate the CPU of the selected pod stress.&lt;/li&gt; &#xA; &lt;li&gt;memory-burn: Simulate the memory of the selected pod stress.&lt;/li&gt; &#xA; &lt;li&gt;kernel chaos: The selected pod will be injected with (slab, bio, etc) errors.&lt;/li&gt; &#xA; &lt;li&gt;dns chaos: The selected pod will be injected with dns errors, such as error, random.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://chaos-mesh.org/docs/&#34;&gt;Chaos Mesh Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/chaos-mesh/chaos-mesh/master/ADOPTERS.md&#34;&gt;ADOPTERS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Blogs&lt;/h2&gt; &#xA;&lt;p&gt;Blogs on Chaos Mesh design &amp;amp; implementation, features, chaos engineering, community updates, etc. See &lt;a href=&#34;https://chaos-mesh.org/blog&#34;&gt;Chaos Mesh Blogs&lt;/a&gt;. Here are some recommended ones for you to start with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chaos-mesh.org/blog/chaos-mesh-2.0-to-a-chaos-engineering-ecology/&#34;&gt;Chaos Mesh 2.0: To a Chaos Engineering Ecology&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chaos-mesh.org/blog/chaos_mesh_your_chaos_engineering_solution/&#34;&gt;Chaos Mesh - Your Chaos Engineering Solution for System Resiliency on Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chaos-mesh.org/blog/run_your_first_chaos_experiment/&#34;&gt;Run Your First Chaos Experiment in 10 Minutes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chaos-mesh.org/blog/how-to-simulate-io-faults-at-runtime/&#34;&gt;How to Simulate I/O Faults at Runtime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chaos-mesh.org/blog/simulating-clock-skew-in-k8s-without-affecting-other-containers-on-node/&#34;&gt;Simulating Clock Skew in K8s Without Affecting Other Containers on the Node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chaos-mesh.org/blog/building_automated_testing_framework&#34;&gt;Building an Automated Testing Framework Based on Chaos Mesh and Argo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/chaos-mesh/chaos-mesh/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; and &lt;a href=&#34;https://chaos-mesh.org/docs/developer-guide-overview&#34;&gt;development guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Please reach out for bugs, feature requests, and other issues via:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Following us on Twitter &lt;a href=&#34;https://twitter.com/chaos_mesh&#34;&gt;@chaos_mesh&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Joining the #project-chaos-mesh channel in the &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;CNCF Slack&lt;/a&gt; workspace.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Filing an issue or opening a PR against this repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community meeting&lt;/h3&gt; &#xA;&lt;p&gt;On the fourth Thursday of every month (unless otherwise specified), the Chaos Mesh community holds a monthly meeting by video conference to discuss the status of Chaos Mesh.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quick links:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.cncf.io/chaos-mesh-community/&#34;&gt;RSVP here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1H8IfmhIJiJ1ltg-XLjqR_P_RaMHUGrl1CzvHnKM_9Sc/edit?usp=sharing&#34;&gt;Meeting notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community blogs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Grant Tarrant-Fisher: &lt;a href=&#34;https://medium.com/chaosiq/integrate-your-reliability-toolkit-with-your-world-part-2-e012f2c2a7f6&#34;&gt;Integrate your Reliability Toolkit with Your World, Part 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Yoshinori Teraoka: &lt;a href=&#34;https://medium.com/sreake-jp/chaos-mesh-%E3%81%AB%E3%82%88%E3%82%8B%E3%82%AB%E3%82%AA%E3%82%B9%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%83%AA%E3%83%B3%E3%82%B0-46fa2897c742&#34;&gt;Streake: Chaos Mesh によるカオスエンジニアリング&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sébastien Prud&#39;homme: &lt;a href=&#34;https://www.cowboysysop.com/post/chaos-mesh-un-generateur-de-chaos-pour-kubernetes/&#34;&gt;Chaos Mesh : un générateur de chaos pour Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Craig Morten &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dev.to/craigmorten/k8s-chaos-dive-2-chaos-mesh-part-1-2i96&#34;&gt;K8s Chaos Dive: Chaos-Mesh Part 1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dev.to/craigmorten/k8s-chaos-dive-chaos-mesh-part-2-536m&#34;&gt;K8s Chaos Dive: Chaos-Mesh Part 2&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ronak Banka: &lt;a href=&#34;https://itnext.io/getting-started-with-chaos-mesh-and-kubernetes-bfd98d25d481&#34;&gt;Getting Started with Chaos Mesh and Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;kondoumh: &lt;a href=&#34;https://blog.kondoumh.com/entry/2020/10/23/123431&#34;&gt;​Kubernetes ネイティブなカオスエンジニアリングツール Chaos Mesh を使ってみる&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vadim Tkachenko: &lt;a href=&#34;https://www.percona.com/blog/2020/11/05/chaosmesh-to-create-chaos-in-kubernetes/&#34;&gt;ChaosMesh to Create Chaos in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hui Zhang: &lt;a href=&#34;https://chaos-mesh.org/blog/how-a-top-game-company-uses-chaos-engineering-to-improve-testing&#34;&gt;How a Top Game Company Uses Chaos Engineering to Improve Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Anurag Paliwal &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://anuragpaliwal-93749.medium.com/securing-tenant-services-while-using-chaos-mesh-using-opa-3ae80c7f4b85&#34;&gt;Securing tenant services while using chaos mesh using OPA&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://anuragpaliwal-93749.medium.com/securing-namespaces-using-restrict-authorization-feature-in-chaos-mesh-2e110c3e0fb7&#34;&gt;Securing namespaces using restrict authorization feature in chaos mesh&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Pavan Kumar: &lt;a href=&#34;https://link.medium.com/1V90dEknugb&#34;&gt;Chaos Engineering in Kubernetes using Chaos Mesh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jessica Cherry: &lt;a href=&#34;https://opensource.com/article/21/6/chaos-mesh-kubernetes&#34;&gt;Test your Kubernetes experiments with an open source web interface&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;λ.eranga: &lt;a href=&#34;https://medium.com/rahasak/chaos-engineering-with-chaos-mesh-b040169b51bd&#34;&gt;Chaos Engineering with Chaos Mesh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tomáš Kubica: &lt;a href=&#34;https://www.tomaskubica.cz/post/2021/kubernetes-prakticky-zlounstvi-s-chaos-mesh-a-azure-chaos-studio2/&#34;&gt;Kubernetes prakticky: zlounství s Chaos Mesh a Azure Chaos Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;mend: &lt;a href=&#34;https://qiita.com/mend/items/dcdfab5e980467bf58e9&#34;&gt;Chaos Meshで何ができるのか見てみた&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community talks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Twain Taylor: &lt;a href=&#34;https://youtu.be/shbrjAY86ZQ&#34;&gt;Chaos Mesh Simplifies &amp;amp; Organizes Chaos Engineering For Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Saiyam Pathak &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/kMbTYItsTTI&#34;&gt;Let&#39;s explore chaos mesh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/HAU_cjW1bMw&#34;&gt;Chaos Mesh - Chaos Engineering for Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/HmQ9cFwxF7g&#34;&gt;Chaos Mesh 2.0&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Media coverage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CodeZine: &lt;a href=&#34;https://codezine.jp/article/detail/12996&#34;&gt;オープンソースのカオステストツール「Chaos Mesh 1.0」、一般提供を開始&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;@IT atmarkit: &lt;a href=&#34;https://www.atmarkit.co.jp/ait/articles/2010/09/news108.html&#34;&gt;Kubernetes 向けカオスエンジニアリングプラットフォーム「Chaos Mesh 1.0」が公開&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Publickey: &lt;a href=&#34;https://www.publickey1.jp/blog/20/kubernetespodchaos_mesh10.html&#34;&gt;Kubernetes の Pod やネットワークをわざと落としまくってカオスエンジニアリングのテストができる「Chaos Mesh」がバージョン 1.0 に到達&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;InfoQ: &lt;a href=&#34;https://www.infoq.com/news/2020/10/kubernetes-chaos-mesh-ga/&#34;&gt;Chaos Engineering on Kubernetes : Chaos Mesh Generally Available with v1.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TechGenix: &lt;a href=&#34;http://techgenix.com/chaos-mesh-chaos-engineering/&#34;&gt;Chaos Mesh Promises to Bring Order to Chaos Engineering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://chaos-mesh.org/docs&#34;&gt;FAQs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/chaos-mesh/chaos-mesh/master/ROADMAP.md&#34;&gt;ROADMAP&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Chaos Mesh is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/chaos-mesh/chaos-mesh/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt; &#xA;&lt;!-- markdown-link-check-disable-next-line --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fchaos-mesh%2Fchaos-mesh?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fchaos-mesh%2Fchaos-mesh.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Trademark&lt;/h2&gt; &#xA;&lt;p&gt;Chaos Mesh is a trademark of The Linux Foundation. All rights reserved.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uber-go/zap</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/uber-go/zap</id>
    <link href="https://github.com/uber-go/zap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Blazing fast, structured, leveled logging in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;⚡&lt;/span&gt; zap &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/go.uber.org/zap&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/uber-go/zap/actions/workflows/go.yml&#34;&gt;&lt;img src=&#34;https://github.com/uber-go/zap/actions/workflows/go.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/uber-go/zap&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/uber-go/zap/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Blazing fast, structured, leveled logging in Go.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go get -u go.uber.org/zap&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that zap only supports the two most recent minor versions of Go.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;In contexts where performance is nice, but not critical, use the &lt;code&gt;SugaredLogger&lt;/code&gt;. It&#39;s 4-10x faster than other structured logging packages and includes both structured and &lt;code&gt;printf&lt;/code&gt;-style APIs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;logger, _ := zap.NewProduction()&#xA;defer logger.Sync() // flushes buffer, if any&#xA;sugar := logger.Sugar()&#xA;sugar.Infow(&#34;failed to fetch URL&#34;,&#xA;  // Structured context as loosely typed key-value pairs.&#xA;  &#34;url&#34;, url,&#xA;  &#34;attempt&#34;, 3,&#xA;  &#34;backoff&#34;, time.Second,&#xA;)&#xA;sugar.Infof(&#34;Failed to fetch URL: %s&#34;, url)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When performance and type safety are critical, use the &lt;code&gt;Logger&lt;/code&gt;. It&#39;s even faster than the &lt;code&gt;SugaredLogger&lt;/code&gt; and allocates far less, but it only supports structured logging.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;logger, _ := zap.NewProduction()&#xA;defer logger.Sync()&#xA;logger.Info(&#34;failed to fetch URL&#34;,&#xA;  // Structured context as strongly typed Field values.&#xA;  zap.String(&#34;url&#34;, url),&#xA;  zap.Int(&#34;attempt&#34;, 3),&#xA;  zap.Duration(&#34;backoff&#34;, time.Second),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34;&gt;documentation&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/uber-go/zap/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;For applications that log in the hot path, reflection-based serialization and string formatting are prohibitively expensive — they&#39;re CPU-intensive and make many small allocations. Put differently, using &lt;code&gt;encoding/json&lt;/code&gt; and &lt;code&gt;fmt.Fprintf&lt;/code&gt; to log tons of &lt;code&gt;interface{}&lt;/code&gt;s makes your application slow.&lt;/p&gt; &#xA;&lt;p&gt;Zap takes a different approach. It includes a reflection-free, zero-allocation JSON encoder, and the base &lt;code&gt;Logger&lt;/code&gt; strives to avoid serialization overhead and allocations wherever possible. By building the high-level &lt;code&gt;SugaredLogger&lt;/code&gt; on that foundation, zap lets users &lt;em&gt;choose&lt;/em&gt; when they need to count every allocation and when they&#39;d prefer a more familiar, loosely typed API.&lt;/p&gt; &#xA;&lt;p&gt;As measured by its own &lt;a href=&#34;https://github.com/uber-go/zap/tree/master/benchmarks&#34;&gt;benchmarking suite&lt;/a&gt;, not only is zap more performant than comparable structured logging packages — it&#39;s also faster than the standard library. Like all benchmarks, take these with a grain of salt.&lt;sup id=&#34;anchor-versions&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/uber-go/zap/master/#footnote-versions&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;Log a message and 10 fields:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Time&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Time % to zap&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Objects Allocated&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;⚡&lt;/span&gt; zap&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2900 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+0%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;⚡&lt;/span&gt; zap (sugared)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3475 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+20%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;zerolog&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10639 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+267%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;go-kit&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14434 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+398%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;59 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logrus&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17104 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+490%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;81 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;apex/log&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32424 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+1018%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;66 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;33579 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+1058%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;76 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Log a message with a logger that already has 10 fields of context:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Time&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Time % to zap&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Objects Allocated&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;⚡&lt;/span&gt; zap&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;373 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+0%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;⚡&lt;/span&gt; zap (sugared)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;452 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+21%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;zerolog&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;288 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-23%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;go-kit&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11785 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+3060%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;58 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logrus&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19629 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+5162%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;70 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21866 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+5762%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;72 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;apex/log&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30890 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+8182%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;55 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Log a static string, without any context or &lt;code&gt;printf&lt;/code&gt;-style templating:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Time&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Time % to zap&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Objects Allocated&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;⚡&lt;/span&gt; zap&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;381 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+0%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;⚡&lt;/span&gt; zap (sugared)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;410 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+8%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;zerolog&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;369 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-3%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;standard library&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;385 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+1%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;go-kit&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;606 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+59%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logrus&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1730 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+354%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;apex/log&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1998 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+424%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4546 ns/op&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+1093%&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22 allocs/op&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Development Status: Stable&lt;/h2&gt; &#xA;&lt;p&gt;All APIs are finalized, and no breaking changes will be made in the 1.x series of releases. Users of semver-aware dependency management systems should pin zap to &lt;code&gt;^1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage and support an active, healthy community of contributors — including you! Details are in the &lt;a href=&#34;https://raw.githubusercontent.com/uber-go/zap/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/uber-go/zap/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;. The zap maintainers keep an eye on issues and pull requests, but you can also report any negative conduct to &lt;a href=&#34;mailto:oss-conduct@uber.com&#34;&gt;oss-conduct@uber.com&lt;/a&gt;. That email list is a private, safe space; even the zap maintainers don&#39;t have access, so don&#39;t hesitate to hold us to a high standard.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Released under the &lt;a href=&#34;https://raw.githubusercontent.com/uber-go/zap/master/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup id=&#34;footnote-versions&#34;&gt;1&lt;/sup&gt; In particular, keep in mind that we may be benchmarking against slightly older versions of other packages. Versions are pinned in the &lt;a href=&#34;https://github.com/uber-go/zap/raw/master/benchmarks/go.mod&#34;&gt;benchmarks/go.mod&lt;/a&gt; file. &lt;a href=&#34;https://raw.githubusercontent.com/uber-go/zap/master/#anchor-versions&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ddosify/ddosify</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/ddosify/ddosify</id>
    <link href="https://github.com/ddosify/ddosify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High-performance load testing tool, written in Golang. For distributed and Geo-targeted load testing: Ddosify Cloud - https://ddosify.com 🚀&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/assets/ddosify-logo.svg?sanitize=true&#34; alt=&#34;Ddosify logo&#34; width=&#34;336px&#34;&gt;&lt;br&gt; Ddosify - High-performance load testing tool &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ddosify/ddosify/releases&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ddosify/ddosify?style=for-the-badge&amp;amp;logo=github&amp;amp;color=orange&#34; alt=&#34;ddosify latest version&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://github.com/ddosify/ddosify/actions/workflows/test.yml&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/ddosify/ddosify/Test?style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;ddosify build result&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://pkg.go.dev/go.ddosify.com/ddosify&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/ddosify/ddosify?style=for-the-badge&amp;amp;logo=go&#34; alt=&#34;golang version&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://app.codecov.io/gh/ddosify/ddosify&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/ddosify/ddosify?style=for-the-badge&amp;amp;logo=codecov&#34; alt=&#34;go coverage&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://goreportcard.com/report/github.com/ddosify/ddosify&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/ddosify/ddosify?style=for-the-badge&amp;amp;logo=go&#34; alt=&#34;go report&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://github.com/ddosify/ddosify/raw/master/LICENSE&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LICENSE-AGPL--3.0-orange?style=for-the-badge&amp;amp;logo=none&#34; alt=&#34;ddosify license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/9KdnrSUZQg&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/898523141788287017?style=for-the-badge&amp;amp;logo=discord&amp;amp;label=DISCORD&#34; alt=&#34;ddosify discord server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/ddosify/ddosify&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/ddosify/ddosify?style=for-the-badge&amp;amp;logo=docker&amp;amp;label=docker&#34; alt=&#34;ddosify docker image&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/assets/ddosify-quick-start.gif&#34; alt=&#34;Ddosify - High-performance load testing tool quick start&#34; width=&#34;900px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;✔&lt;/span&gt; Protocol Agnostic - Currently supporting &lt;em&gt;HTTP, HTTPS, HTTP/2&lt;/em&gt;. Other protocols are on the way.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;✔&lt;/span&gt; Scenario-Based - Create your flow in a JSON file. Without a line of code!&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;✔&lt;/span&gt; Different Load Types - Test your system&#39;s limits across different load types.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ddosify&lt;/code&gt; is available via &lt;a href=&#34;https://hub.docker.com/r/ddosify/ddosify&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/#homebrew-tap-macos-and-linux&#34;&gt;Homebrew Tap&lt;/a&gt;, and downloadable pre-compiled binaries from the &lt;a href=&#34;https://github.com/ddosify/ddosify/releases/latest&#34;&gt;releases page&lt;/a&gt; for macOS, Linux and Windows.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm ddosify/ddosify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew Tap (macOS and Linux)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install ddosify/tap/ddosify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;apk, deb, rpm, Arch Linux packages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For arm architectures change &lt;code&gt;ddosify_amd64&lt;/code&gt; to &lt;code&gt;ddosify_arm64&lt;/code&gt; or &lt;code&gt;ddosify_armv6&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Superuser privilege is required.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For Redhat based (Fedora, CentOS, RHEL, etc.)&#xA;rpm -i https://github.com/ddosify/ddosify/releases/latest/download/ddosify_amd64.rpm&#xA;&#xA;# For Debian based (Ubuntu, Linux Mint, etc.)&#xA;wget https://github.com/ddosify/ddosify/releases/latest/download/ddosify_amd64.deb&#xA;dpkg -i ddosify_amd64.deb&#xA;&#xA;# For Alpine&#xA;wget https://github.com/ddosify/ddosify/releases/latest/download/ddosify_amd64.apk&#xA;apk add --allow-untrusted ddosify_amd64.apk&#xA;&#xA;# For Arch Linux&#xA;git clone https://aur.archlinux.org/ddosify.git&#xA;cd ddosify&#xA;makepkg -sri&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows exe from the &lt;a href=&#34;https://github.com/ddosify/ddosify/releases/latest&#34;&gt;releases page&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download *.zip file for your architecture. For example download ddosify version vx.x.x with amd64 architecture: ddosify_x.x.x.zip_windows_amd64&lt;/li&gt; &#xA; &lt;li&gt;Unzip &lt;code&gt;ddosify_x.x.x_windows_amd64.zip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open Powershell or CMD (Command Prompt) and change directory to unzipped folder: &lt;code&gt;ddosify_x.x.x_windows_amd64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run ddosify:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;.\ddosify.exe -t target_site.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using the convenience script (macOS and Linux)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The script requires root or sudo privileges to move ddosify binary to &lt;code&gt;/usr/local/bin&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The script attempts to detect your operating system (macOS or Linux) and architecture (arm64, x86, amd64) to download the appropriate binary from the &lt;a href=&#34;https://github.com/ddosify/ddosify/releases/latest&#34;&gt;releases page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;By default, the script installs the latest version of &lt;code&gt;ddosify&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you have problems, check &lt;a href=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/#common-issues&#34;&gt;common issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Required packages: &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;sudo&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sSfL https://raw.githubusercontent.com/ddosify/ddosify/master/scripts/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Go install from source (macOS, Linux, Windows)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install -v go.ddosify.com/ddosify@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Easy Start&lt;/h2&gt; &#xA;&lt;p&gt;This section aims to show you how to use Ddosify without deep dive into its details easily.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;h3&gt;Simple load test&lt;/h3&gt; &lt;pre&gt;&lt;code&gt; ddosify -t target_site.com&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above command runs a load test with the default value that is 100 requests in 10 seconds.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Using some of the features&lt;/h3&gt; &lt;pre&gt;&lt;code&gt; ddosify -t target_site.com -n 1000 -d 20 -p HTTPS -m PUT -T 7 -P http://proxy_server.com:80&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Ddosify sends a total of &lt;em&gt;1000&lt;/em&gt; &lt;em&gt;PUT&lt;/em&gt; requests to &lt;em&gt;https://target_site.com&lt;/em&gt; over proxy &lt;em&gt;http://proxy_server.com:80&lt;/em&gt; in &lt;em&gt;20&lt;/em&gt; seconds with a timeout of &lt;em&gt;7&lt;/em&gt; seconds per request.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Usage for CI/CD pipelines (JSON output)&lt;/h3&gt; &lt;pre&gt;&lt;code&gt; ddosify -t target_site.com -o stdout-json | jq .avg_duration&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Ddosify outputs the result in JSON format. Then &lt;code&gt;jq&lt;/code&gt; (or any other command-line JSON processor) fetches the &lt;code&gt;avg_duration&lt;/code&gt;. The rest depends on your CI/CD flow logic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Scenario based load test&lt;/h3&gt; &lt;pre&gt;&lt;code&gt; ddosify -config config_examples/config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Ddosify first sends &lt;em&gt;HTTP/2 POST&lt;/em&gt; request to &lt;em&gt;https://test_site1.com/endpoint_1&lt;/em&gt; using basic auth credentials &lt;em&gt;test_user:12345&lt;/em&gt; over proxy &lt;em&gt;http://proxy_host.com:proxy_port&lt;/em&gt; and with a timeout of &lt;em&gt;3&lt;/em&gt; seconds. Once the response is received, HTTPS GET request will be sent to &lt;em&gt;https://test_site1.com/endpoint_2&lt;/em&gt; along with the payload included in &lt;em&gt;config_examples/payload.txt&lt;/em&gt; file with a timeout of 2 seconds. This flow will be repeated &lt;em&gt;20&lt;/em&gt; times in &lt;em&gt;5&lt;/em&gt; seconds and response will be written to &lt;em&gt;stdout&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Details&lt;/h2&gt; &#xA;&lt;p&gt;You can configure your load test by the CLI options or a config file. Config file supports more features than the CLI. For example, you can&#39;t create a scenario-based load test with CLI options.&lt;/p&gt; &#xA;&lt;h3&gt;CLI Flags&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ddosify [FLAG]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&#xA;    &lt;div style=&#34;width:90px&#34;&gt;&#xA;     Flag&#xA;    &lt;/div&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Required?&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Target website URL. Example: &lt;a href=&#34;https://ddosify.com&#34;&gt;https://ddosify.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Total request count&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;100&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Test duration in seconds.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Protocol of the request. Supported protocols are &lt;em&gt;HTTP, HTTPS&lt;/em&gt;. HTTP/2 support is only available by using a config file as described. More protocols will be added.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;HTTPS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Request method. Available methods for HTTP(s) are &lt;em&gt;GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The payload of the network packet. AKA body for the HTTP.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-a&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Basic authentication. Usage: &lt;code&gt;-a username:password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-h&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Headers of the request. You can provide multiple headers with multiple &lt;code&gt;-h&lt;/code&gt; flag.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-T&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Timeout of the request in seconds.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-P&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Proxy address as host:port. &lt;code&gt;-P http://user:pass@proxy_host.com:port&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-o&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Test result output destination. Supported outputs are [&lt;em&gt;stdout, stdout-json&lt;/em&gt;] Other output types will be added.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/#load-types&#34;&gt;Type&lt;/a&gt; of the load test. Ddosify supports 3 load types.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;linear&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/#config-file&#34;&gt;Config File&lt;/a&gt; of the load test.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-version &lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Prints version, git commit, built date (utc), go information and quit&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Load Types&lt;/h3&gt; &#xA;&lt;h4&gt;Linear&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ddosify -t target_site.com -l linear&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/assets/linear.gif&#34; alt=&#34;linear load&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; If the request count is too low for the given duration, the test might be finished earlier than you expect.&lt;/p&gt; &#xA;&lt;h4&gt;Incremental&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ddosify -t target_site.com -l incremental&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/assets/incremental.gif&#34; alt=&#34;incremental load&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Waved&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ddosify -t target_site.com -l waved&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/assets/waved.gif&#34; alt=&#34;waved load&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Config File&lt;/h3&gt; &#xA;&lt;p&gt;Config file lets you use all capabilities of Ddosify.&lt;/p&gt; &#xA;&lt;p&gt;The features you can use by config file;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scenario creation&lt;/li&gt; &#xA; &lt;li&gt;Custom load type creation&lt;/li&gt; &#xA; &lt;li&gt;Payload from a file&lt;/li&gt; &#xA; &lt;li&gt;Multipart/form-data payload&lt;/li&gt; &#xA; &lt;li&gt;Extra connection configuration, like &lt;em&gt;keep-alive&lt;/em&gt; enable/disable logic&lt;/li&gt; &#xA; &lt;li&gt;HTTP2 support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Usage;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ddosify -config &amp;lt;json_config_path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is an example config file at &lt;a href=&#34;https://raw.githubusercontent.com/ddosify/ddosify/master/config_examples/config.json&#34;&gt;config_examples/config.json&lt;/a&gt;. This file contains all of the parameters you can use. Details of each parameter;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;request_count&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-n&lt;/code&gt; flag. The difference is that if you have multiple steps in your scenario, this value represents the iteration count of the steps.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;load_type&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-l&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;duration&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-d&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;manual_load&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;If you are looking for creating your own custom load type, you can use this feature. The example below says that Ddosify will run the scenario 5 times, 10 times, and 20 times, respectively along with the provided durations. &lt;code&gt;request_count&lt;/code&gt; and &lt;code&gt;duration&lt;/code&gt; will be auto-filled by Ddosify according to &lt;code&gt;manual_load&lt;/code&gt; configuration. In this example, &lt;code&gt;request_count&lt;/code&gt; will be 35 and the &lt;code&gt;duration&lt;/code&gt; will be 18 seconds. Also &lt;code&gt;manual_load&lt;/code&gt; overrides &lt;code&gt;load_type&lt;/code&gt; if you provide both of them. As a result, you don&#39;t need to provide these 3 parameters when using &lt;code&gt;manual_load&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;manual_load&#34;: [&#xA;    {&#34;duration&#34;: 5, &#34;count&#34;: 5},&#xA;    {&#34;duration&#34;: 6, &#34;count&#34;: 10},&#xA;    {&#34;duration&#34;: 7, &#34;count&#34;: 20}&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;proxy&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-P&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;output&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-o&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;steps&lt;/code&gt; &lt;em&gt;mandatory&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This parameter lets you create your scenario. Ddosify runs the provided steps, respectively. For the given example file step id: 2 will be executed immediately after the response of step id: 1 is received. The order of the execution is the same as the order of the steps in the config file.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Details of each parameter for a step;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;id&lt;/code&gt; &lt;em&gt;mandatory&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Each step must have a unique integer id.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;url&lt;/code&gt; &lt;em&gt;mandatory&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-t&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;name&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt; &lt;a name=&#34;#step-name&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Name of the step.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;protocol&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-p&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;method&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-m&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;headers&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;List of headers with key:value format.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;payload&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-b&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;payload_file&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;If you need a long payload, we suggest using this parameter instead of &lt;code&gt;payload&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;payload_multipart&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt; &lt;a name=&#34;#payload_multipart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use this for &lt;code&gt;multipart/form-data&lt;/code&gt; Content-Type.&lt;/p&gt; &lt;p&gt;Accepts list of &lt;code&gt;form-field&lt;/code&gt; objects, structured as below;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;name&#34;: [field-name],&#xA;    &#34;value&#34;: [field-value|file-path|url],&#xA;    &#34;type&#34;: &amp;lt;text|file&amp;gt;,    // Default &#34;text&#34;&#xA;    &#34;src&#34;: &amp;lt;local|remote&amp;gt;   // Default &#34;local&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Sending form name-value pairs;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;payload_multipart&#34;: [&#xA;    {&#xA;        &#34;name&#34;: &#34;[field-name]&#34;,&#xA;        &#34;value&#34;: &#34;[field-value]&#34;&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Sending form name-value pairs and a local file;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;payload_multipart&#34;: [&#xA;    {&#xA;        &#34;name&#34;: &#34;[field-name]&#34;,&#xA;        &#34;value&#34;: &#34;[field-value]&#34;,&#xA;    },&#xA;    {&#xA;        &#34;name&#34;: &#34;[field-name]&#34;,&#xA;        &#34;value&#34;: &#34;./test.png&#34;,&#xA;        &#34;type&#34;: &#34;file&#34;&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Sending form name-value pairs and a local file and a remote file;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;payload_multipart&#34;: [&#xA;    {&#xA;        &#34;name&#34;: &#34;[field-name]&#34;,&#xA;        &#34;value&#34;: &#34;[field-value]&#34;,&#xA;    },&#xA;    {&#xA;        &#34;name&#34;: &#34;[field-name]&#34;,&#xA;        &#34;value&#34;: &#34;./test.png&#34;,&#xA;        &#34;type&#34;: &#34;file&#34;&#xA;    },&#xA;    {&#xA;        &#34;name&#34;: &#34;[field-name]&#34;,&#xA;        &#34;value&#34;: &#34;http://test.com/test.png&#34;,&#xA;        &#34;type&#34;: &#34;file&#34;,&#xA;        &#34;src&#34;: &#34;remote&#34;&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Ddosify adds &lt;code&gt;Content-Type: multipart/form-data; boundary=[generated-boundary-value]&lt;/code&gt; header to the request when using &lt;code&gt;payload_multipart&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This is the equivalent of the &lt;code&gt;-T&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;sleep&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt; &lt;a name=&#34;#sleep&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sleep duration(ms) before executing the next step. Can be an exact duration or a range.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Sleep 1000ms after step-1;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;steps&#34;: [&#xA;    {&#xA;        &#34;id&#34;: 1,&#xA;        &#34;url&#34;: &#34;target.com/endpoint1&#34;,&#xA;        &#34;sleep&#34;: &#34;1000&#34;&#xA;    },&#xA;    {&#xA;        &#34;id&#34;: 2,&#xA;        &#34;url&#34;: &#34;target.com/endpoint2&#34;,&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Sleep between 300ms-500ms after step-1;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;steps&#34;: [&#xA;    {&#xA;        &#34;id&#34;: 1,&#xA;        &#34;url&#34;: &#34;target.com/endpoint1&#34;,&#xA;        &#34;sleep&#34;: &#34;300-500&#34;&#xA;    },&#xA;    {&#xA;        &#34;id&#34;: 2,&#xA;        &#34;url&#34;: &#34;target.com/endpoint2&#34;,&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;auth&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Basic authentication.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;auth&#34;: {&#xA;    &#34;username&#34;: &#34;test_user&#34;,&#xA;    &#34;password&#34;: &#34;12345&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;others&lt;/code&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This parameter accepts dynamic &lt;em&gt;key: value&lt;/em&gt; pairs to configure connection details of the protocol in use.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;others&#34;: {&#xA;    &#34;keep-alive&#34;: true,              // Default true&#xA;    &#34;disable-compression&#34;: false,    // Default true&#xA;    &#34;h2&#34;: true,                      // Enables HTTP/2. Default false.&#xA;    &#34;disable-redirect&#34;: true         // Default false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common Issues&lt;/h2&gt; &#xA;&lt;h3&gt;macOS Security Issue&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;ddosify&#34; can’t be opened because Apple cannot check it for malicious software.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open &lt;code&gt;/usr/local/bin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Right click &lt;code&gt;ddosify&lt;/code&gt; and select Open&lt;/li&gt; &#xA; &lt;li&gt;Select Open&lt;/li&gt; &#xA; &lt;li&gt;Close the opened terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;p&gt;You can join our &lt;a href=&#34;https://discord.gg/9KdnrSUZQg&#34;&gt;Discord Server&lt;/a&gt; for issues, feature requests, feedbacks or anything else.&lt;/p&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;p&gt;This repository includes the single-node version of the Ddosify Loader. For distributed and Geo-targeted Load Testing you can use &lt;a href=&#34;https://ddosify.com&#34;&gt;Ddosify Cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Ddosify is created for testing the performance of web applications. Users must be the owner of the target system. Using it for harmful purposes is extremely forbidden. Ddosify team &amp;amp; company is not responsible for its’ usages and consequences.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the AGPLv3: &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0.html&#34;&gt;https://www.gnu.org/licenses/agpl-3.0.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>istio/istio</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/istio/istio</id>
    <link href="https://github.com/istio/istio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Connect, secure, control, and observe services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Istio&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1395&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1395/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/istio/istio&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/istio/istio&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/istio.io/istio&#34;&gt;&lt;img src=&#34;https://godoc.org/istio.io/istio?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://istio.io/&#34;&gt; &lt;img src=&#34;https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg?sanitize=true&#34; alt=&#34;Istio logo&#34; title=&#34;Istio&#34; height=&#34;100&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;An open platform to connect, manage, and secure microservices.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For in-depth information about how to use Istio, visit &lt;a href=&#34;https://istio.io&#34;&gt;istio.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To ask questions and get assistance from our community, visit &lt;a href=&#34;https://discuss.istio.io&#34;&gt;discuss.istio.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To learn how to participate in our overall community, visit &lt;a href=&#34;https://istio.io/about/community&#34;&gt;our community page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In this README:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/#repositories&#34;&gt;Repositories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/#issue-management&#34;&gt;Issue management&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, here are some other documents you may wish to read:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istio/community#istio-community&#34;&gt;Istio Community&lt;/a&gt; - describes how to get involved and contribute to the Istio project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istio/istio/wiki/Preparing-for-Development&#34;&gt;Istio Developer&#39;s Guide&lt;/a&gt; - explains how to set up and use an Istio development environment&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istio/istio/wiki/Development-Conventions&#34;&gt;Project Conventions&lt;/a&gt; - describes the conventions we use within the code base&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istio/istio/wiki/Writing-Fast-and-Lean-Code&#34;&gt;Creating Fast and Lean Code&lt;/a&gt; - performance-oriented advice and guidelines for the code base&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll find many other useful documents on our &lt;a href=&#34;https://github.com/istio/istio/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://istio.io/latest/docs/concepts/what-is-istio/&#34;&gt;Istio&lt;/a&gt; is an open platform for providing a uniform way to &lt;a href=&#34;https://istio.io/latest/docs/examples/microservices-istio/&#34;&gt;integrate microservices&lt;/a&gt;, manage &lt;a href=&#34;https://istio.io/latest/docs/concepts/traffic-management/&#34;&gt;traffic flow&lt;/a&gt; across microservices, enforce policies and aggregate telemetry data. Istio&#39;s control plane provides an abstraction layer over the underlying cluster management platform, such as Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;Istio is composed of these components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Envoy&lt;/strong&gt; - Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a &lt;em&gt;secure microservice mesh&lt;/em&gt; providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Istiod&lt;/strong&gt; - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pilot&lt;/strong&gt; - Responsible for configuring the proxies at runtime.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Citadel&lt;/strong&gt; - Responsible for certificate issuance and rotation.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Galley&lt;/strong&gt; - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Operator&lt;/strong&gt; - The component provides user friendly options to operate the Istio service mesh.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repositories&lt;/h2&gt; &#xA;&lt;p&gt;The Istio project is divided across a few GitHub repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/istio/api&#34;&gt;istio/api&lt;/a&gt;. This repository defines component-level APIs and common configuration formats for the Istio platform.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/istio/community&#34;&gt;istio/community&lt;/a&gt;. This repository contains information on the Istio community, including the various documents that govern the Istio open source project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/README.md&#34;&gt;istio/istio&lt;/a&gt;. This is the main code repository. It hosts Istio&#39;s core components, install artifacts, and sample programs. It includes:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/istioctl/&#34;&gt;istioctl&lt;/a&gt;. This directory contains code for the &lt;a href=&#34;https://istio.io/latest/docs/reference/commands/istioctl/&#34;&gt;&lt;em&gt;istioctl&lt;/em&gt;&lt;/a&gt; command line utility.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/operator/&#34;&gt;operator&lt;/a&gt;. This directory contains code for the &lt;a href=&#34;https://istio.io/latest/docs/setup/install/operator/&#34;&gt;Istio Operator&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/pilot/&#34;&gt;pilot&lt;/a&gt;. This directory contains platform-specific code to populate the &lt;a href=&#34;https://istio.io/docs/concepts/traffic-management/#pilot&#34;&gt;abstract service model&lt;/a&gt;, dynamically reconfigure the proxies when the application topology changes, as well as translate &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/&#34;&gt;routing rules&lt;/a&gt; into proxy specific configuration.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/security/&#34;&gt;security&lt;/a&gt;. This directory contains &lt;a href=&#34;https://istio.io/latest/docs/concepts/security/&#34;&gt;security&lt;/a&gt; related code, including Citadel (acting as Certificate Authority), citadel agent, etc.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/istio/proxy&#34;&gt;istio/proxy&lt;/a&gt;. The Istio proxy contains extensions to the &lt;a href=&#34;https://github.com/envoyproxy/envoy&#34;&gt;Envoy proxy&lt;/a&gt; (in the form of Envoy filters) that support authentication, authorization, and telemetry collection.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issue management&lt;/h2&gt; &#xA;&lt;p&gt;We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Epic&lt;/strong&gt;. An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things. Each issue is ultimately part of an epic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Milestone&lt;/strong&gt;. Each issue is assigned a milestone. This is 0.1, 0.2, ..., or &#39;Nebulous Future&#39;. The milestone indicates when we think the issue should get addressed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Priority&lt;/strong&gt;. Each issue has a priority which is represented by the column in the &lt;a href=&#34;https://github.com/orgs/istio/projects/6&#34;&gt;Prioritization&lt;/a&gt; project. Priority can be one of P0, P1, P2, or &amp;gt;P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the milestone cannot be considered achieved if the issue isn&#39;t resolved.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>koderover/zadig</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/koderover/zadig</id>
    <link href="https://github.com/koderover/zadig" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zadig is a cloud native, distributed, developer-oriented continuous delivery product.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/koderover/zadig-doc&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img height=&#34;50&#34; src=&#34;https://docs.koderover.com/zadig/img/zadig.png&#34; alt=&#34;Zadig logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;left&#34;&gt;Developer-oriented Continuous Delivery Product&lt;/h3&gt; &#xA;&lt;span align=&#34;left&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://app.codacy.com/gh/koderover/zadig?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=koderover/zadig&amp;amp;utm_campaign=Badge_Grade_Settings&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/2276bb4cce9348ceb8ddeeea5803ed57&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://os.koderover.com/v1/projects/detail/zadig-ci/pipelines/freestyle/home/zadig-ci/608824fef341de000137317d?rightbar=step&#34;&gt;&lt;img src=&#34;https://os.koderover.com/api/collie/api/badge?pipelineName=zadig-ci/zadig-ci&amp;amp;source=github&amp;amp;repoFullName=koderover/zadig&amp;amp;branch=main&amp;amp;eventType=push&#34; alt=&#34;Zadig CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/koderover/zadig/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/koderover/zadig.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt; ⁣&lt;a href=&#34;https://goreportcard.com/report/github.com/koderover/zadig&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/koderover/zadig&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/koderover/zadig?include_prereleases&#34; alt=&#34;GitHub release (latest SemVer including pre-releases)&#34;&gt; &lt;a href=&#34;https://join.slack.com/t/zadig-workspace/shared_invite/zt-qedvct1t-mQUf2eyTRkoVCc_RWKKgxw&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&amp;amp;logo=slack&amp;amp;colorB=brightgreen&#34; alt=&#34;&amp;quot;Join us on Slack&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/span&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/README-zh-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#zadig&#34;&gt;Zadig&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#what-is-zadig&#34;&gt;What is Zadig&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#quick-start&#34;&gt;Quick start&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#how-to-use&#34;&gt;How to use?&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#how-to-make-contribution&#34;&gt;How to make contribution?&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#getting-help&#34;&gt;Getting help&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#more-resources&#34;&gt;More resources&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Zadig&lt;/h2&gt; &#xA;&lt;p&gt;Zadig is an open-source, distributed, cloud-native CD (Continuous Delivery) product designed for developers. Zadig not only provides high-availability CI/CD capabilities, but also provides cloud-native operating environments, supports developers&#39; local debugging, parallel build and deployment of microservices, integration testing, etc. .&lt;/p&gt; &#xA;&lt;p&gt;Zadig is non-invasive, it does not exclude any of your existing development process. Instead it can easily integrate with Github/Gitlab, Jenkins and many other cloud vendors in a seamingless way. We strive for the 10x optimal developer experience with the lowest maintenance cost possible.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Our vision is: Developer + Zadig = Business success&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The business architecture is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koderover/zadig/main/Zadig-Business-Architecture.jpg&#34; alt=&#34;Business Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more details about system architecture, see &lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/System-Architecture-Overview.md&#34;&gt;Zadig System Architecture Overview&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Highlighted Features:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;High Concurrency&lt;/b&gt;&lt;/summary&gt; Based on cloud-native design, through simple configuration, the system automatically generates workflows to achieve high concurrent execution for continuous delivery relevant tasks such as building, testing and deployment, across multiple services. It significantly improves the efficiency of multi-services deployment in microservice architecture. &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Service-oriented Environment&lt;/b&gt;&lt;/summary&gt; With just one set of service configuration, multiple encapsulated environments will be provided automatically within minutes, empowering independent environments for developers, QAs and product managers. &#xA; &lt;p&gt;Minimum to none migration cost of existing environments -- just hosting with one click, the system allows browsing and adjusting all the services at your fingertips.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Non-intrusive Testing Automation&lt;/b&gt;&lt;/summary&gt; Zadig can easily and non-intrusively embed existing testing automation frameworks, and achieve continuous building, testing and deployment via GitHub/GitLab Webhook. &#xA; &lt;p&gt;It also integrates with productivity bots to provide instant quality report, which effectively applies shift-left testing best practices.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Convenient Development CLI/IDE Plugin&lt;/b&gt;&lt;/summary&gt; Zadig also provides a convenient toolkit with development commandline interface which allows compiling, building and deploying the changes to dev environment with one command. It enables collaborated debugging and testing with minimum manual toil, reduces cognitive load and allows teams to focus more on business. &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;How to use?&lt;/h3&gt; &#xA;&lt;p&gt;Please follow &lt;a href=&#34;https://docs.koderover.com/zadig/quick-start/try-out-install/&#34;&gt;Quick Start&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bootcamps&lt;/h3&gt; &#xA;&lt;p&gt;With many hands-on tips, case studies and demos of different application types, Zadig &lt;a href=&#34;https://github.com/koderover/zadig-bootcamp&#34;&gt;bootcamp&lt;/a&gt; gives developers easy to follow best practices in a cloud native CI/CD solution&lt;/p&gt; &#xA;&lt;p&gt;Just follow &lt;a href=&#34;https://www.koderover.com/tutorials&#34;&gt;Tutorials&lt;/a&gt; to try it step by step.&lt;/p&gt; &#xA;&lt;h3&gt;How to make contribution?&lt;/h3&gt; &#xA;&lt;p&gt;Please check out &lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/CONTRIBUTING.md&#34;&gt;our contributing guideline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;More about Zadig, see &lt;a href=&#34;https://docs.koderover.com/zadig&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Submit bugs or feature requests following &lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/CONTRIBUTING.md#contribution-option-1---reporting-an-issue&#34;&gt;contributing instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Email：&lt;a href=&#34;mailto:contact@koderover.com&#34;&gt;contact@koderover.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/zadig-workspace/shared_invite/zt-qedvct1t-mQUf2eyTRkoVCc_RWKKgxw&#34;&gt;Slack channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koderover/zadig/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ccfos/nightingale</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/ccfos/nightingale</id>
    <link href="https://github.com/ccfos/nightingale" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An enterprise-level cloud-native monitoring system, which can be used as drop-in replacement of Prometheus for alerting and Grafana for visualization.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/ccf-n9e.png&#34; width=&#34;240&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ccfos/nightingale/main/README_EN.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ccfos/nightingale/main/README.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Nightingale is an enterprise-level cloud-native monitoring system, which can be used as drop-in replacement of Prometheus for alerting and management.&lt;/p&gt; &#xA; &lt;p&gt;夜莺是一款开源的云原生监控系统，采用 All-In-One 的设计，提供企业级的功能特性，开箱即用的产品体验。推荐升级您的 &lt;code&gt;Prometheus&lt;/code&gt; + &lt;code&gt;AlertManager&lt;/code&gt; + &lt;code&gt;Grafana&lt;/code&gt; 组合方案到夜莺。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;内置丰富的Dashboard、好用实用的告警管理、自定义视图、故障自愈；&lt;/li&gt; &#xA; &lt;li&gt;Dashboard和告警策略支持一键导入，详细的指标分类和解释；&lt;/li&gt; &#xA; &lt;li&gt;支持多 Prometheus 数据源管理，以一个集中的视图来管理所有的告警和dashboard；&lt;/li&gt; &#xA; &lt;li&gt;支持 Prometheus、M3DB、VictoriaMetrics、Influxdb、TDEngine 等多种时序库作为存储方案；&lt;/li&gt; &#xA; &lt;li&gt;原生支持 PromQL；&lt;/li&gt; &#xA; &lt;li&gt;支持 Exporter 作为数据采集方案；&lt;/li&gt; &#xA; &lt;li&gt;支持 Telegraf 作为监控数据采集方案；&lt;/li&gt; &#xA; &lt;li&gt;支持对接 Grafana 作为补充可视化方案；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;如果您在使用 Prometheus 过程中，有以下的一个或者多个需求场景，推荐您升级到夜莺：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prometheus、Alertmanager、Grafana 等多个系统较为割裂，缺乏统一视图，无法开箱即用;&lt;/li&gt; &#xA; &lt;li&gt;通过修改配置文件来管理 Prometheus、Alertmanager 的方式，学习曲线大，协同有难度;&lt;/li&gt; &#xA; &lt;li&gt;数据量过大而无法扩展您的 Prometheus 集群；&lt;/li&gt; &#xA; &lt;li&gt;生产环境运行多套 Prometheus 集群，面临管理和使用成本高的问题；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;如果您在使用Zabbix，有以下的场景，推荐您升级到夜莺：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;监控的数据量太大，希望有更好的扩展解决方案；&lt;/li&gt; &#xA; &lt;li&gt;学习曲线高，多人多团队模式下，希望有更好的协同使用效率；&lt;/li&gt; &#xA; &lt;li&gt;微服务和云原生架构下，监控数据的生命周期多变、监控数据维度基数高，Zabbix数据模型不易适配；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;如果您在使用&lt;a href=&#34;https://github.com/open-falcon/falcon-plus&#34;&gt;open-falcon&lt;/a&gt;，我们更推荐您升级到夜莺：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;关于open-falcon和夜莺的详细介绍，请参考阅读&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzkzNjI5OTM5Nw==&amp;amp;mid=2247483738&amp;amp;idx=1&amp;amp;sn=e8bdbb974a2cd003c1abcc2b5405dd18&amp;amp;chksm=c2a19fb0f5d616a63185cd79277a79a6b80118ef2185890d0683d2bb20451bd9303c78d083c5#rd&#34;&gt;云原生监控的十个特点和趋势&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速安装部署&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://n9e.github.io/quickstart/&#34;&gt;n9e.github.io/quickstart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;详细文档&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://n9e.github.io/&#34;&gt;n9e.github.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;产品演示&lt;/h2&gt; &#xA;&lt;h4&gt;您可以直接导入并生成 MySQL 相关的告警策略：&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/mysql-alerts.png&#34; width=&#34;680&#34;&gt; &#xA;&lt;h4&gt;您可以直接导入并生成主机相关的 dashboard：&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/n9e-node-dashboard.png&#34; width=&#34;680&#34;&gt; &#xA;&lt;h4&gt;您也可以在夜莺中方便的查看所有活跃的告警以及历史告警：&lt;/h4&gt; &#xA;&lt;img src=&#34;https://n9e.github.io/intro/alert-events.png&#34; width=&#34;680&#34;&gt; &#xA;&lt;h2&gt;系统架构&lt;/h2&gt; &#xA;&lt;h4&gt;一个典型的 Nightingale 部署架构:&lt;/h4&gt; &#xA;&lt;img src=&#34;https://n9e.github.io/intro/arch-system.png&#34; width=&#34;680&#34;&gt; &#xA;&lt;h4&gt;使用 VictoriaMetrics 作为时序数据库的典型部署架构:&lt;/h4&gt; &#xA;&lt;img src=&#34;https://n9e.github.io/fc-monitoring-vm.png&#34; width=&#34;680&#34;&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ccfos/nightingale/wiki/faq&#34;&gt;https://github.com/ccfos/nightingale/wiki/faq&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;联系我们和反馈问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我们推荐您优先使用&lt;a href=&#34;https://github.com/didi/nightingale/issues&#34;&gt;github issue&lt;/a&gt;作为首选问题反馈和需求提交的通道&lt;/li&gt; &#xA; &lt;li&gt;加入微信群组，请先添加微信：borgmon 备注：夜莺加群&lt;/li&gt; &#xA; &lt;li&gt;当然，推荐您关注夜莺监控公众号，及时获取相关产品动态，了解答疑方式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://n9e.github.io/cloudmon.png&#34; width=&#34;180&#34;&gt; &#xA;&lt;h2&gt;参与到夜莺开源项目和社区&lt;/h2&gt; &#xA;&lt;p&gt;我们欢迎您以各种方式参与到夜莺开源项目和开源社区中来，工作包括不限于：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;反馈使用中遇到的问题和Bug =&amp;gt; &lt;a href=&#34;https://github.com/didi/nightingale/issues&#34;&gt;github issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;补充和完善文档 =&amp;gt; &lt;a href=&#34;https://n9e.github.io/&#34;&gt;n9e.github.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;分享您在使用夜莺监控过程中的最佳实践和经验心得 =&amp;gt; &lt;a href=&#34;https://github.com/didi/nightingale/issues/897&#34;&gt;夜莺User Story&lt;/a&gt; | &lt;a href=&#34;https://github.com/ccfos/nightingale/wiki/usecase&#34;&gt;经验分享文章链接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;提交代码，让夜莺监控更快、更稳、更好用 =&amp;gt;&lt;a href=&#34;https://github.com/didi/nightingale/pulls&#34;&gt;github PR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/didi/nightingale/raw/main/LICENSE&#34;&gt;Apache License V2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>actions-runner-controller/actions-runner-controller</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/actions-runner-controller/actions-runner-controller</id>
    <link href="https://github.com/actions-runner-controller/actions-runner-controller" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kubernetes controller for GitHub Actions self-hosted runners&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;actions-runner-controller (ARC)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/6061&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/6061/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jonico/awesome-runners&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/listed%20on-awesome--runners-blue.svg?sanitize=true&#34; alt=&#34;awesome-runners&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This controller operates self-hosted runners for GitHub Actions on your Kubernetes cluster.&lt;/p&gt; &#xA;&lt;p&gt;ToC:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#people&#34;&gt;People&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#status&#34;&gt;Status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#github-enterprise-support&#34;&gt;GitHub Enterprise Support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#setting-up-authentication-with-github-api&#34;&gt;Setting Up Authentication with GitHub API&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#deploying-using-github-app-authentication&#34;&gt;Deploying Using GitHub App Authentication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#deploying-using-pat-authentication&#34;&gt;Deploying Using PAT Authentication&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#deploying-multiple-controllers&#34;&gt;Deploying Multiple Controllers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#repository-runners&#34;&gt;Repository Runners&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#organization-runners&#34;&gt;Organization Runners&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#enterprise-runners&#34;&gt;Enterprise Runners&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runnerdeployments&#34;&gt;RunnerDeployments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runnersets&#34;&gt;RunnerSets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#persistent-runners&#34;&gt;Persistent Runners&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#autoscaling&#34;&gt;Autoscaling&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#anti-flapping-configuration&#34;&gt;Anti-Flapping Configuration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#pull-driven-scaling&#34;&gt;Pull Driven Scaling&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#webhook-driven-scaling&#34;&gt;Webhook Driven Scaling&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#autoscaling-tofrom-0&#34;&gt;Autoscaling to/from 0&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#scheduled-overrides&#34;&gt;Scheduled Overrides&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runner-with-dind&#34;&gt;Runner with DinD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#additional-tweaks&#34;&gt;Additional Tweaks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#custom-volume-mounts&#34;&gt;Custom Volume mounts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runner-labels&#34;&gt;Runner Labels&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runner-groups&#34;&gt;Runner Groups&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runner-entrypoint-features&#34;&gt;Runner Entrypoint Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#using-irsa-iam-roles-for-service-accounts-in-eks&#34;&gt;Using IRSA (IAM Roles for Service Accounts) in EKS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#software-installed-in-the-runner-image&#34;&gt;Software Installed in the Runner Image&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#using-without-cert-manager&#34;&gt;Using without cert-manager&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;People&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;actions-runner-controller&lt;/code&gt; is an open-source project currently developed and maintained in collaboration with maintainers @mumoshu and @toast-gear, various &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/graphs/contributors&#34;&gt;contributors&lt;/a&gt;, and the &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/discussions&#34;&gt;awesome community&lt;/a&gt;, mostly in their spare time.&lt;/p&gt; &#xA;&lt;p&gt;If you think the project is awesome and it&#39;s becoming a basis for your important business, consider &lt;a href=&#34;https://github.com/sponsors/actions-runner-controller&#34;&gt;sponsoring us&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;In case you are already the employer of one of contributors, sponsoring via GitHub Sponsors might not be an option. Just support them in other means!&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t currently have &lt;a href=&#34;https://github.com/sponsors/actions-runner-controller&#34;&gt;any sponsors dedicated to this project yet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;However, &lt;a href=&#34;https://www.hellofreshgroup.com/en/&#34;&gt;HelloFresh&lt;/a&gt; has recently started sponsoring @mumoshu for this project along with his other works. A part of their sponsorship will enable @mumoshu to add an E2E test to keep ARC even more reliable on AWS. Thank you for your sponsorship!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://careers.hellofresh.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/22009/170898715-07f02941-35ec-418b-8cd4-251b422fa9ac.png&#34; width=&#34;219&#34; height=&#34;71&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Even though actions-runner-controller is used in production environments, it is still in its early stage of development, hence versioned 0.x.&lt;/p&gt; &#xA;&lt;p&gt;actions-runner-controller complies to Semantic Versioning 2.0.0 in which v0.x means that there could be backward-incompatible changes for every release.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is kept inline with master@HEAD, we do our best to highlight any features that require a specific ARC version or higher however this is not always easily done due to there being many moving parts. Additionally, we actively do not retain compatibly with every GitHub Enterprise Server version nor every Kubernetes version so you will need to ensure you stay current within a reasonable timespan.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; is a very useful tool for automating development. GitHub Actions jobs are run in the cloud by default, but you may want to run your jobs in your environment. &lt;a href=&#34;https://github.com/actions/runner&#34;&gt;Self-hosted runner&lt;/a&gt; can be used for such use cases, but requires the provisioning and configuration of a virtual machine instance. Instead if you already have a Kubernetes cluster, it makes more sense to run the self-hosted runner on top of it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;actions-runner-controller&lt;/strong&gt; makes that possible. Just create a &lt;em&gt;Runner&lt;/em&gt; resource on your Kubernetes, and it will run and operate the self-hosted runner for the specified repository. Combined with Kubernetes RBAC, you can also build simple Self-hosted runners as a Service.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;By default, actions-runner-controller uses &lt;a href=&#34;https://cert-manager.io/docs/installation/kubernetes/&#34;&gt;cert-manager&lt;/a&gt; for certificate management of Admission Webhook. Make sure you have already installed cert-manager before you install. The installation instructions for the cert-manager can be found below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cert-manager.io/docs/installation/kubernetes/&#34;&gt;Installing cert-manager on Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After installing cert-manager, install the custom resource definitions and actions-runner-controller with &lt;code&gt;kubectl&lt;/code&gt; or &lt;code&gt;helm&lt;/code&gt;. This will create an actions-runner-system namespace in your Kubernetes and deploy the required resources.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kubectl Deployment:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# REPLACE &#34;v0.22.0&#34; with the version you wish to deploy&#xA;kubectl apply -f https://github.com/actions-runner-controller/actions-runner-controller/releases/download/v0.22.0/actions-runner-controller.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Helm Deployment:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Configure your values.yaml, see the chart&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/charts/actions-runner-controller/README.md&#34;&gt;README&lt;/a&gt; for the values documentation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm repo add actions-runner-controller https://actions-runner-controller.github.io/actions-runner-controller&#xA;helm upgrade --install --namespace actions-runner-system --create-namespace \&#xA;             --wait actions-runner-controller actions-runner-controller/actions-runner-controller&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Enterprise Support&lt;/h3&gt; &#xA;&lt;p&gt;The solution supports both GHEC (GitHub Enterprise Cloud) and GHES (GitHub Enterprise Server) editions as well as regular GitHub. Both PAT (personal access token) and GitHub App authentication works for installations that will be deploying either repository level and / or organization level runners. If you need to deploy enterprise level runners then you are restricted to PAT based authentication as GitHub doesn&#39;t support GitHub App based authentication for enterprise runners currently.&lt;/p&gt; &#xA;&lt;p&gt;If you are deploying this solution into a GHES environment then you will need to be running version &amp;gt;= &lt;a href=&#34;https://docs.github.com/en/enterprise-server@3.3/admin/release-notes&#34;&gt;3.3.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When deploying the solution for a GHES environment you need to provide an additional environment variable as part of the controller deployment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubectl set env deploy controller-manager -c manager GITHUB_ENTERPRISE_URL=&amp;lt;GHEC/S URL&amp;gt; --namespace actions-runner-system&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: The repository maintainers do not have an enterprise environment (cloud or server). Support for the enterprise specific feature set is community driven and on a best effort basis. PRs from the community are welcome to add features and maintain support.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setting Up Authentication with GitHub API&lt;/h2&gt; &#xA;&lt;p&gt;There are two ways for actions-runner-controller to authenticate with the GitHub API (only 1 can be configured at a time however):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Using a GitHub App (not supported for enterprise level runners due to lack of support from GitHub)&lt;/li&gt; &#xA; &lt;li&gt;Using a PAT&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Functionality wise, there isn&#39;t much of a difference between the 2 authentication methods. The primary benefit of authenticating via a GitHub App is an &lt;a href=&#34;https://docs.github.com/en/developers/apps/rate-limits-for-github-apps&#34;&gt;increased API quota&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are deploying the solution for a GHES environment you are able to &lt;a href=&#34;https://docs.github.com/en/enterprise-server@3.0/admin/configuration/configuring-rate-limits&#34;&gt;configure your rate limit settings&lt;/a&gt; making the main benefit irrelevant. If you&#39;re deploying the solution for a GHEC or regular GitHub environment and you run into rate limit issues, consider deploying the solution using the GitHub App authentication method instead.&lt;/p&gt; &#xA;&lt;h3&gt;Deploying Using GitHub App Authentication&lt;/h3&gt; &#xA;&lt;p&gt;You can create a GitHub App for either your user account or any organization, below are the app permissions required for each supported type of runner:&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Links are provided further down to create an app for your logged in user account or an organization with the permissions for all runner types set in each link&#39;s query string&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Required Permissions for Repository Runners:&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;Repository Permissions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Actions (read)&lt;/li&gt; &#xA; &lt;li&gt;Administration (read / write)&lt;/li&gt; &#xA; &lt;li&gt;Checks (read) (if you are going to use &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#webhook-driven-scaling&#34;&gt;Webhook Driven Scaling&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Metadata (read)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Required Permissions for Organization Runners:&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;Repository Permissions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Actions (read)&lt;/li&gt; &#xA; &lt;li&gt;Metadata (read)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Organization Permissions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Self-hosted runners (read / write)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: All API routes mapped to their permissions can be found &lt;a href=&#34;https://docs.github.com/en/rest/reference/permissions-required-for-github-apps&#34;&gt;here&lt;/a&gt; if you wish to review&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Subscribe to events&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;At this point you have a choice of configuring a webhook, a webhook is needed if you are going to use &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#webhook-driven-scaling&#34;&gt;webhook driven scaling&lt;/a&gt;. The webhook can be configured centrally in the GitHub app itself or separately. In either case the event details are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check run (required for all webhook driven scaling events)&lt;/li&gt; &#xA; &lt;li&gt;Workflow job (optionally) (required for &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller#example-1-scale-on-each-workflow_job-event&#34;&gt;webhook driven scaling with workflow_job events&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Setup Steps&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to create a GitHub App for your account, open the following link to the creation page, enter any unique name in the &#34;GitHub App name&#34; field, and hit the &#34;Create GitHub App&#34; button at the bottom of the page.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/settings/apps/new?url=http://github.com/actions-runner-controller/actions-runner-controller&amp;amp;webhook_active=false&amp;amp;public=false&amp;amp;administration=write&amp;amp;actions=read&#34;&gt;Create GitHub Apps on your account&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to create a GitHub App for your organization, replace the &lt;code&gt;:org&lt;/code&gt; part of the following URL with your organization name before opening it. Then enter any unique name in the &#34;GitHub App name&#34; field, and hit the &#34;Create GitHub App&#34; button at the bottom of the page to create a GitHub App.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/organizations/:org/settings/apps/new?url=http://github.com/actions-runner-controller/actions-runner-controller&amp;amp;webhook_active=false&amp;amp;public=false&amp;amp;administration=write&amp;amp;organization_self_hosted_runners=write&amp;amp;actions=read&amp;amp;checks=read&#34;&gt;Create GitHub Apps on your organization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You will see an &lt;em&gt;App ID&lt;/em&gt; on the page of the GitHub App you created as follows, the value of this App ID will be used later.&lt;/p&gt; &#xA;&lt;img width=&#34;750&#34; alt=&#34;App ID&#34; src=&#34;https://user-images.githubusercontent.com/230145/78968802-6e7c8880-7b40-11ea-8b08-0c1b8e6a15f0.png&#34;&gt; &#xA;&lt;p&gt;Download the private key file by pushing the &#34;Generate a private key&#34; button at the bottom of the GitHub App page. This file will also be used later.&lt;/p&gt; &#xA;&lt;img width=&#34;750&#34; alt=&#34;Generate a private key&#34; src=&#34;https://user-images.githubusercontent.com/230145/78968805-71777900-7b40-11ea-97e6-55c48dfc44ac.png&#34;&gt; &#xA;&lt;p&gt;Go to the &#34;Install App&#34; tab on the left side of the page and install the GitHub App that you created for your account or organization.&lt;/p&gt; &#xA;&lt;img width=&#34;750&#34; alt=&#34;Install App&#34; src=&#34;https://user-images.githubusercontent.com/230145/78968806-72100f80-7b40-11ea-810d-2bd3261e9d40.png&#34;&gt; &#xA;&lt;p&gt;When the installation is complete, you will be taken to a URL in one of the following formats, the last number of the URL will be used as the Installation ID later (For example, if the URL ends in &lt;code&gt;settings/installations/12345&lt;/code&gt;, then the Installation ID is &lt;code&gt;12345&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;https://github.com/settings/installations/${INSTALLATION_ID}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;https://github.com/organizations/eventreactor/settings/installations/${INSTALLATION_ID}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Finally, register the App ID (&lt;code&gt;APP_ID&lt;/code&gt;), Installation ID (&lt;code&gt;INSTALLATION_ID&lt;/code&gt;), and the downloaded private key file (&lt;code&gt;PRIVATE_KEY_FILE_PATH&lt;/code&gt;) to Kubernetes as a secret.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kubectl Deployment:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ kubectl create secret generic controller-manager \&#xA;    -n actions-runner-system \&#xA;    --from-literal=github_app_id=${APP_ID} \&#xA;    --from-literal=github_app_installation_id=${INSTALLATION_ID} \&#xA;    --from-file=github_app_private_key=${PRIVATE_KEY_FILE_PATH}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Helm Deployment:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Configure your values.yaml, see the chart&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/charts/actions-runner-controller/README.md&#34;&gt;README&lt;/a&gt; for deploying the secret via Helm&lt;/p&gt; &#xA;&lt;h3&gt;Deploying Using PAT Authentication&lt;/h3&gt; &#xA;&lt;p&gt;Personal Access Tokens can be used to register a self-hosted runner by &lt;em&gt;actions-runner-controller&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Log-in to a GitHub account that has &lt;code&gt;admin&lt;/code&gt; privileges for the repository, and &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;create a personal access token&lt;/a&gt; with the appropriate scopes listed below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Required Scopes for Repository Runners&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;repo (Full control)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Required Scopes for Organization Runners&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;repo (Full control)&lt;/li&gt; &#xA; &lt;li&gt;admin:org (Full control)&lt;/li&gt; &#xA; &lt;li&gt;admin:public_key (read:public_key)&lt;/li&gt; &#xA; &lt;li&gt;admin:repo_hook (read:repo_hook)&lt;/li&gt; &#xA; &lt;li&gt;admin:org_hook (Full control)&lt;/li&gt; &#xA; &lt;li&gt;notifications (Full control)&lt;/li&gt; &#xA; &lt;li&gt;workflow (Full control)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Required Scopes for Enterprise Runners&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;admin:enterprise (manage_runners:enterprise)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: When you deploy enterprise runners they will get access to organizations, however, access to the repositories themselves is &lt;strong&gt;NOT&lt;/strong&gt; allowed by default. Each GitHub organization must allow enterprise runner groups to be used in repositories as an initial one-time configuration step, this only needs to be done once after which it is permanent for that runner group.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: GitHub does not document exactly what permissions you get with each PAT scope beyond a vague description. The best documentation they provide on the topic can be found &lt;a href=&#34;https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps&#34;&gt;here&lt;/a&gt; if you wish to review. The docs target OAuth apps and so are incomplete and may not be 100% accurate.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Once you have created the appropriate token, deploy it as a secret to your Kubernetes cluster that you are going to deploy the solution on:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kubectl Deployment:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubectl create secret generic controller-manager \&#xA;    -n actions-runner-system \&#xA;    --from-literal=github_token=${GITHUB_TOKEN}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Helm Deployment:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Configure your values.yaml, see the chart&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/charts/actions-runner-controller/README.md&#34;&gt;README&lt;/a&gt; for deploying the secret via Helm&lt;/p&gt; &#xA;&lt;h3&gt;Deploying Multiple Controllers&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This feature requires controller version =&amp;gt; &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/releases/tag/v0.18.0&#34;&gt;v0.18.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: Be aware when using this feature that CRDs are cluster-wide and so you should upgrade all of your controllers (and your CRDs) at the same time if you are doing an upgrade. Do not mix and match CRD versions with different controller versions. Doing so risks out of control scaling.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default the controller will look for runners in all namespaces, the watch namespace feature allows you to restrict the controller to monitoring a single namespace. This then lets you deploy multiple controllers in a single cluster. You may want to do this either because you wish to scale beyond the API rate limit of a single PAT / GitHub App configuration or you wish to support multiple GitHub organizations with runners installed at the organization level in a single cluster.&lt;/p&gt; &#xA;&lt;p&gt;This feature is configured via the controller&#39;s &lt;code&gt;--watch-namespace&lt;/code&gt; flag. When a namespace is provided via this flag, the controller will only monitor runners in that namespace.&lt;/p&gt; &#xA;&lt;p&gt;You can deploy multiple controllers either in a single shared namespace, or in a unique namespace per controller.&lt;/p&gt; &#xA;&lt;p&gt;If you plan on installing all instances of the controller stack into a single namespace there are a few things you need to do for this to work.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;All resources per stack must have a unique, in the case of Helm this can be done by giving each install a unique release name, or via the &lt;code&gt;fullnameOverride&lt;/code&gt; properties.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;authSecret.name&lt;/code&gt; needs to be unique per stack when each stack is tied to runners in different GitHub organizations and repositories AND you want your GitHub credentials to be narrowly scoped.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;leaderElectionId&lt;/code&gt; needs to be unique per stack. If this is not unique to the stack the controller tries to race onto the leader election lock resulting in only one stack working concurrently. Your controller will be stuck&amp;nbsp;with a log message something like this &lt;code&gt;attempting to acquire leader lease arc-controllers/actions-runner-controller...&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The MutatingWebhookConfiguration in each stack must include a namespace selector for that stack&#39;s corresponding runner namespace, this is already configured in the helm chart.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Alternatively, you can install each controller stack into a unique namespace (relative to other controller stacks in the cluster). Implementing ARC this way avoids the first, second and third pitfalls (you still need to set the corresponding namespace selector for each stack&#39;s mutating webhook)&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#about-self-hosted-runners&#34;&gt;GitHub self-hosted runners can be deployed at various levels in a management hierarchy&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The repository level&lt;/li&gt; &#xA; &lt;li&gt;The organization level&lt;/li&gt; &#xA; &lt;li&gt;The enterprise level&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are two ways to use this controller:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Manage runners one by one with &lt;code&gt;Runner&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Manage a set of runners with &lt;code&gt;RunnerDeployment&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Repository Runners&lt;/h3&gt; &#xA;&lt;p&gt;To launch a single self-hosted runner, you need to create a manifest file that includes a &lt;code&gt;Runner&lt;/code&gt; resource as follows. This example launches a self-hosted runner with name &lt;em&gt;example-runner&lt;/em&gt; for the &lt;em&gt;actions-runner-controller/actions-runner-controller&lt;/em&gt; repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# runner.yaml&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: Runner&#xA;metadata:&#xA;  name: example-runner&#xA;spec:&#xA;  repository: example/myrepo&#xA;  env: []&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apply the created manifest file to your Kubernetes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ kubectl apply -f runner.yaml&#xA;runner.actions.summerwind.dev/example-runner created&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see that the Runner resource has been created.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ kubectl get runners&#xA;NAME             REPOSITORY                             STATUS&#xA;example-runner   actions-runner-controller/actions-runner-controller   Running&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also see that the runner pod has been running.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ kubectl get pods&#xA;NAME           READY   STATUS    RESTARTS   AGE&#xA;example-runner 2/2     Running   0          1m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The runner you created has been registered to your repository.&lt;/p&gt; &#xA;&lt;img width=&#34;756&#34; alt=&#34;Actions tab in your repository settings&#34; src=&#34;https://user-images.githubusercontent.com/230145/73618667-8cbf9700-466c-11ea-80b6-c67e6d3f70e7.png&#34;&gt; &#xA;&lt;p&gt;Now you can use your self-hosted runner. See the &lt;a href=&#34;https://help.github.com/en/actions/automating-your-workflow-with-github-actions/using-self-hosted-runners-in-a-workflow&#34;&gt;official documentation&lt;/a&gt; on how to run a job with it.&lt;/p&gt; &#xA;&lt;h3&gt;Organization Runners&lt;/h3&gt; &#xA;&lt;p&gt;To add the runner to an organization, you only need to replace the &lt;code&gt;repository&lt;/code&gt; field with &lt;code&gt;organization&lt;/code&gt;, so the runner will register itself to the organization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# runner.yaml&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: Runner&#xA;metadata:&#xA;  name: example-org-runner&#xA;spec:&#xA;  organization: your-organization-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can see the runner on the organization level (if you have organization owner permissions).&lt;/p&gt; &#xA;&lt;h3&gt;Enterprise Runners&lt;/h3&gt; &#xA;&lt;p&gt;To add the runner to an enterprise, you only need to replace the &lt;code&gt;repository&lt;/code&gt; field with &lt;code&gt;enterprise&lt;/code&gt;, so the runner will register itself to the enterprise.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# runner.yaml&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: Runner&#xA;metadata:&#xA;  name: example-enterprise-runner&#xA;spec:&#xA;  enterprise: your-enterprise-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can see the runner on the enterprise level (if you have enterprise access permissions).&lt;/p&gt; &#xA;&lt;h3&gt;RunnerDeployments&lt;/h3&gt; &#xA;&lt;p&gt;You can manage sets of runners instead of individually through the &lt;code&gt;RunnerDeployment&lt;/code&gt; kind and its &lt;code&gt;replicas:&lt;/code&gt; attribute. This kind is required for many of the advanced features.&lt;/p&gt; &#xA;&lt;p&gt;There are &lt;code&gt;RunnerReplicaSet&lt;/code&gt; and &lt;code&gt;RunnerDeployment&lt;/code&gt; kinds that corresponds to the &lt;code&gt;ReplicaSet&lt;/code&gt; and &lt;code&gt;Deployment&lt;/code&gt; kinds but for the &lt;code&gt;Runner&lt;/code&gt; kind.&lt;/p&gt; &#xA;&lt;p&gt;You typically only need &lt;code&gt;RunnerDeployment&lt;/code&gt; rather than &lt;code&gt;RunnerReplicaSet&lt;/code&gt; as the former is for managing the latter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# runnerdeployment.yaml&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: example-runnerdeploy&#xA;spec:&#xA;  replicas: 2&#xA;  template:&#xA;    spec:&#xA;      repository: mumoshu/actions-runner-controller-ci&#xA;      env: []&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apply the manifest file to your cluster:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ kubectl apply -f runnerdeployment.yaml&#xA;runnerdeployment.actions.summerwind.dev/example-runnerdeploy created&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see that 2 runners have been created as specified by &lt;code&gt;replicas: 2&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ kubectl get runners&#xA;NAME                             REPOSITORY                             STATUS&#xA;example-runnerdeploy2475h595fr   mumoshu/actions-runner-controller-ci   Running&#xA;example-runnerdeploy2475ht2qbr   mumoshu/actions-runner-controller-ci   Running&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RunnerSets&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This feature requires controller version =&amp;gt; &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/releases/tag/v0.20.0&#34;&gt;v0.20.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;Ensure you see the limitations before using this kind!!!!!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;For scenarios where you require the advantages of a &lt;code&gt;StatefulSet&lt;/code&gt;, for example persistent storage, ARC implements a runner based on Kubernetes&#39; &lt;code&gt;StatefulSets&lt;/code&gt;, the &lt;code&gt;RunnerSet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A basic &lt;code&gt;RunnerSet&lt;/code&gt; would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerSet&#xA;metadata:&#xA;  name: example&#xA;spec:&#xA;  ephemeral: false&#xA;  replicas: 2&#xA;  repository: mumoshu/actions-runner-controller-ci&#xA;  # Other mandatory fields from StatefulSet&#xA;  selector:&#xA;    matchLabels:&#xA;      app: example&#xA;  serviceName: example&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app: example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As it is based on &lt;code&gt;StatefulSet&lt;/code&gt;, &lt;code&gt;selector&lt;/code&gt; and &lt;code&gt;template.medatada.labels&lt;/code&gt; it needs to be defined and have the exact same set of labels. &lt;code&gt;serviceName&lt;/code&gt; must be set to some non-empty string as it is also required by &lt;code&gt;StatefulSet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Runner-related fields like &lt;code&gt;ephemeral&lt;/code&gt;, &lt;code&gt;repository&lt;/code&gt;, &lt;code&gt;organization&lt;/code&gt;, &lt;code&gt;enterprise&lt;/code&gt;, and so on should be written directly under &lt;code&gt;spec&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Fields like &lt;code&gt;volumeClaimTemplates&lt;/code&gt; that originates from &lt;code&gt;StatefulSet&lt;/code&gt; should also be written directly under &lt;code&gt;spec&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pod-related fields like security contexts and volumes are written under &lt;code&gt;spec.template.spec&lt;/code&gt; like &lt;code&gt;StatefulSet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, container-related fields like resource requests and limits, container image names and tags, security context, and so on are written under &lt;code&gt;spec.template.spec.containers&lt;/code&gt;. There are two reserved container &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;runner&lt;/code&gt; and &lt;code&gt;docker&lt;/code&gt;. The former is for the container that runs &lt;a href=&#34;https://github.com/actions/runner&#34;&gt;actions runner&lt;/a&gt; and the latter is for the container that runs a &lt;code&gt;dockerd&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a more complex example, see the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerSet&#xA;metadata:&#xA;  name: example&#xA;spec:&#xA;  ephemeral: false&#xA;  replicas: 2&#xA;  repository: mumoshu/actions-runner-controller-ci&#xA;  dockerdWithinRunnerContainer: true&#xA;  template:&#xA;    spec:&#xA;      securityContext:&#xA;        # All level/role/type/user values will vary based on your SELinux policies.&#xA;        # See https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/container_security_guide/docker_selinux_security_policy for information about SELinux with containers&#xA;        seLinuxOptions: &#xA;          level: &#34;s0&#34;&#xA;          role: &#34;system_r&#34;&#xA;          type: &#34;super_t&#34;&#xA;          user: &#34;system_u&#34;&#xA;      containers:&#xA;      - name: runner&#xA;        env: []&#xA;        resources:&#xA;          limits:&#xA;            cpu: &#34;4.0&#34;&#xA;            memory: &#34;8Gi&#34;&#xA;          requests:&#xA;            cpu: &#34;2.0&#34;&#xA;            memory: &#34;4Gi&#34;&#xA;        # This is an advanced configuration. Don&#39;t touch it unless you know what you&#39;re doing.&#xA;        securityContext:&#xA;          # Usually, the runner container&#39;s privileged field is derived from dockerdWithinRunnerContainer.&#xA;          # But in the case where you need to run privileged job steps even if you don&#39;t use docker/don&#39;t need dockerd within the runner container,&#xA;          # just specified `privileged: true` like this.&#xA;          # See https://github.com/actions-runner-controller/actions-runner-controller/issues/1282&#xA;          # Do note that specifying `privileged: false` while using dind is very likely to fail, even if you use some vm-based container runtimes&#xA;          # like firecracker and kata. Basically they run containers within dedicated micro vms and so&#xA;          # it&#39;s more like you can use `privileged: true` safer with those runtimes.&#xA;          #&#xA;          # privileged: true&#xA;      - name: docker&#xA;        resources:&#xA;          limits:&#xA;            cpu: &#34;4.0&#34;&#xA;            memory: &#34;8Gi&#34;&#xA;          requests:&#xA;            cpu: &#34;2.0&#34;&#xA;            memory: &#34;4Gi&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also read the design and usage documentation written in the original pull request that introduced &lt;code&gt;RunnerSet&lt;/code&gt; for more information &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/pull/629&#34;&gt;#629&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Under the hood, &lt;code&gt;RunnerSet&lt;/code&gt; relies on Kubernetes&#39;s &lt;code&gt;StatefulSet&lt;/code&gt; and Mutating Webhook. A &lt;code&gt;statefulset&lt;/code&gt; is used to create a number of pods that has stable names and dynamically provisioned persistent volumes, so that each &lt;code&gt;statefulset-managed&lt;/code&gt; pod gets the same persistent volume even after restarting. A mutating webhook is used to dynamically inject a runner&#39;s &#34;registration token&#34; which is used to call GitHub&#39;s &#34;Create Runner&#34; API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Limitations&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For autoscaling the &lt;code&gt;RunnerSet&lt;/code&gt; kind only supports pull driven scaling or the &lt;code&gt;workflow_job&lt;/code&gt; event for webhook driven scaling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Persistent Runners&lt;/h3&gt; &#xA;&lt;p&gt;Every runner managed by ARC is &#34;ephemeral&#34; by default. The life of an ephemeral runner managed by ARC looks like this- ARC creates a runner pod for the runner. As it&#39;s an ephemeral runner, the &lt;code&gt;--ephemeral&lt;/code&gt; flag is passed to the &lt;code&gt;actions/runner&lt;/code&gt; agent that runs within the &lt;code&gt;runner&lt;/code&gt; container of the runner pod.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;--ephemeral&lt;/code&gt; is an &lt;code&gt;actions/runner&lt;/code&gt; feature that instructs the runner to stop and de-register itself after the first job run.&lt;/p&gt; &#xA;&lt;p&gt;Once the ephemeral runner has completed running a workflow job, it stops with a status code of 0, hence the runner pod is marked as completed, removed by ARC.&lt;/p&gt; &#xA;&lt;p&gt;As it&#39;s removed after a workflow job run, the runner pod is never reused across multiple GitHub Actions workflow jobs, providing you a clean environment per each workflow job.&lt;/p&gt; &#xA;&lt;p&gt;Although not generally recommended, it&#39;s possible to disable the passing of the &lt;code&gt;--ephemeral&lt;/code&gt; flag by explicitly setting &lt;code&gt;ephemeral: false&lt;/code&gt; in the &lt;code&gt;RunnerDeployment&lt;/code&gt; or &lt;code&gt;RunnerSet&lt;/code&gt; spec. When disabled, your runner becomes &#34;persistent&#34;. A persistent runner does not stop after workflow job ends, and in this mode &lt;code&gt;actions/runner&lt;/code&gt; is known to clean only runner&#39;s work dir after each job. Whilst this can seem helpful it creates a non-deterministic environment which is not ideal for a CI/CD environment. Between runs, your actions cache, docker images stored in the &lt;code&gt;dind&lt;/code&gt; and layer cache, globally installed packages etc are retained across multiple workflow job runs which can cause issues that are hard to debug and inconsistent.&lt;/p&gt; &#xA;&lt;p&gt;Persistent runners are available as an option for some edge cases however they are not preferred as they can create challenges around providing a deterministic and secure environment.&lt;/p&gt; &#xA;&lt;h3&gt;Autoscaling&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Since the release of GitHub&#39;s &lt;a href=&#34;https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_job&#34;&gt;&lt;code&gt;workflow_job&lt;/code&gt; webhook&lt;/a&gt;, webhook driven scaling is the preferred way of autoscaling as it enables targeted scaling of your &lt;code&gt;RunnerDeployment&lt;/code&gt; / &lt;code&gt;RunnerSet&lt;/code&gt; as it includes the &lt;code&gt;runs-on&lt;/code&gt; information needed to scale the appropriate runners for that workflow run. More broadly, webhook driven scaling is the preferred scaling option as it is far quicker compared to the pull driven scaling and is easy to set up.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you are using controller version &amp;lt; &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/releases/tag/v0.22.0&#34;&gt;v0.22.0&lt;/a&gt; and you are not using GHES, and so can&#39;t set your rate limit budget, it is recommended that you use 100 replicas or fewer to prevent being rate limited.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A &lt;code&gt;RunnerDeployment&lt;/code&gt; or &lt;code&gt;RunnerSet&lt;/code&gt; can scale the number of runners between &lt;code&gt;minReplicas&lt;/code&gt; and &lt;code&gt;maxReplicas&lt;/code&gt; fields driven by either pull based scaling metrics or via a webhook event (see limitations section of &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runnersets&#34;&gt;RunnerSets&lt;/a&gt; for caveats of this kind). Whether the autoscaling is driven from a webhook event or pull based metrics it is implemented by backing a &lt;code&gt;RunnerDeployment&lt;/code&gt; or &lt;code&gt;RunnerSet&lt;/code&gt; kind with a &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; kind.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Important!!! If you opt to configure autoscaling, ensure you remove the &lt;code&gt;replicas:&lt;/code&gt; attribute in the &lt;code&gt;RunnerDeployment&lt;/code&gt; / &lt;code&gt;RunnerSet&lt;/code&gt; kinds that are configured for autoscaling &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/issues/206#issuecomment-748601907&#34;&gt;#206&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Anti-Flapping Configuration&lt;/h4&gt; &#xA;&lt;p&gt;For both pull driven or webhook driven scaling an anti-flapping implementation is included, by default a runner won&#39;t be scaled down within 10 minutes of it having been scaled up.&lt;/p&gt; &#xA;&lt;p&gt;This anti-flap configuration also has the final say on if a runner can be scaled down or not regardless of the chosen scaling method.&lt;/p&gt; &#xA;&lt;p&gt;This delay is configurable via 2 methods:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;By setting a new default via the controller&#39;s &lt;code&gt;--default-scale-down-delay&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;By setting by setting the attribute &lt;code&gt;scaleDownDelaySecondsAfterScaleOut:&lt;/code&gt; in a &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; kind&#39;s &lt;code&gt;spec:&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Below is a complete basic example of one of the pull driven scaling metrics.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: example-runner-deployment&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      repository: example/myrepo&#xA;---&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: HorizontalRunnerAutoscaler&#xA;metadata:&#xA;  name: example-runner-deployment-autoscaler&#xA;spec:&#xA;  # Runners in the targeted RunnerDeployment won&#39;t be scaled down&#xA;  # for 5 minutes instead of the default 10 minutes now&#xA;  scaleDownDelaySecondsAfterScaleOut: 300&#xA;  scaleTargetRef:&#xA;    name: example-runner-deployment&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  minReplicas: 1&#xA;  maxReplicas: 5&#xA;  metrics:&#xA;  - type: PercentageRunnersBusy&#xA;    scaleUpThreshold: &#39;0.75&#39;&#xA;    scaleDownThreshold: &#39;0.25&#39;&#xA;    scaleUpFactor: &#39;2&#39;&#xA;    scaleDownFactor: &#39;0.5&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Pull Driven Scaling&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To configure webhook driven scaling see the &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#webhook-driven-scaling&#34;&gt;Webhook Driven Scaling&lt;/a&gt; section&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The pull based metrics are configured in the &lt;code&gt;metrics&lt;/code&gt; attribute of a HRA (see snippet below). The period between polls is defined by the controller&#39;s &lt;code&gt;--sync-period&lt;/code&gt; flag. If this flag isn&#39;t provided then the controller defaults to a sync period of &lt;code&gt;1m&lt;/code&gt;, this can be configured in seconds or minutes.&lt;/p&gt; &#xA;&lt;p&gt;Be aware that the shorter the sync period the quicker you will consume your rate limit budget, depending on your environment this may or may not be a risk. Consider monitoring ARCs rate limit budget when configuring this feature to find the optimal performance sync period.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: HorizontalRunnerAutoscaler&#xA;metadata:&#xA;  name: example-runner-deployment-autoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    # Your RunnerDeployment Here&#xA;    name: example-runner-deployment&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  minReplicas: 1&#xA;  maxReplicas: 5&#xA;  # Your chosen scaling metrics here&#xA;  metrics: [] &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Metric Options:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TotalNumberOfQueuedAndInProgressWorkflowRuns&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;TotalNumberOfQueuedAndInProgressWorkflowRuns&lt;/code&gt; metric polls GitHub for all pending workflow runs against a given set of repositories. The metric will scale the runner count up to the total number of pending jobs at the sync time up to the &lt;code&gt;maxReplicas&lt;/code&gt; configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Benefits of this metric&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Supports named repositories allowing you to restrict the runner to a specified set of repositories server-side.&lt;/li&gt; &#xA; &lt;li&gt;Scales the runner count based on the depth of the job queue meaning a 1:1 scaling of runners to queued jobs.&lt;/li&gt; &#xA; &lt;li&gt;Like all scaling metrics, you can manage workflow allocation to the RunnerDeployment through the use of &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runner-labels&#34;&gt;GitHub labels&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Drawbacks of this metric&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;A list of repositories must be included within the scaling metric. Maintaining a list of repositories may not be viable in larger environments or self-serve environments.&lt;/li&gt; &#xA; &lt;li&gt;May not scale quickly enough for some users&#39; needs. This metric is pull based and so the queue depth is polled as configured by the sync period, as a result scaling performance is bound by this sync period meaning there is a lag to scaling activity.&lt;/li&gt; &#xA; &lt;li&gt;Relatively large amounts of API requests are required to maintain this metric, you may run into API rate limit issues depending on the size of your environment and how aggressive your sync period configuration is.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Example &lt;code&gt;RunnerDeployment&lt;/code&gt; backed by a &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: example-runner-deployment&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      repository: example/myrepo&#xA;---&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: HorizontalRunnerAutoscaler&#xA;metadata:&#xA;  name: example-runner-deployment-autoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runner-deployment&#xA;    # IMPORTANT : If your HRA is targeting a RunnerSet you must specify the kind in the scaleTargetRef:, uncomment the below&#xA;    #kind: RunnerSet&#xA;  minReplicas: 1&#xA;  maxReplicas: 5&#xA;  metrics:&#xA;  - type: TotalNumberOfQueuedAndInProgressWorkflowRuns&#xA;    repositoryNames:&#xA;    - example/myrepo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;PercentageRunnersBusy&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; will poll GitHub for the number of runners in the &lt;code&gt;busy&lt;/code&gt; state which live in the RunnerDeployment&#39;s namespace, it will then scale depending on how you have configured the scale factors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Benefits of this metric&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Supports named repositories server-side the same as the &lt;code&gt;TotalNumberOfQueuedAndInProgressWorkflowRuns&lt;/code&gt; metric &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/pull/313&#34;&gt;#313&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports GitHub organization wide scaling without maintaining an explicit list of repositories, this is especially useful for those that are working at a larger scale. &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/pull/223&#34;&gt;#223&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Like all scaling metrics, you can manage workflow allocation to the RunnerDeployment through the use of &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runner-labels&#34;&gt;GitHub labels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports scaling desired runner count on both a percentage increase / decrease basis as well as on a fixed increase / decrease count basis &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/pull/223&#34;&gt;#223&lt;/a&gt; &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/pull/315&#34;&gt;#315&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Drawbacks of this metric&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;May not scale quickly enough for some users&#39; needs. This metric is pull based and so the number of busy runners is polled as configured by the sync period, as a result scaling performance is bound by this sync period meaning there is a lag to scaling activity.&lt;/li&gt; &#xA; &lt;li&gt;We are scaling up and down based on indicative information rather than a count of the actual number of queued jobs and so the desired runner count is likely to under provision new runners or overprovision them relative to actual job queue depth, this may or may not be a problem for you.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Examples of each scaling type implemented with a &lt;code&gt;RunnerDeployment&lt;/code&gt; backed by a &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: HorizontalRunnerAutoscaler&#xA;metadata:&#xA;  name: example-runner-deployment-autoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runner-deployment&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  minReplicas: 1&#xA;  maxReplicas: 5&#xA;  metrics:&#xA;  - type: PercentageRunnersBusy&#xA;    scaleUpThreshold: &#39;0.75&#39;    # The percentage of busy runners at which the number of desired runners are re-evaluated to scale up&#xA;    scaleDownThreshold: &#39;0.3&#39;   # The percentage of busy runners at which the number of desired runners are re-evaluated to scale down&#xA;    scaleUpFactor: &#39;1.4&#39;        # The scale up multiplier factor applied to desired count&#xA;    scaleDownFactor: &#39;0.7&#39;      # The scale down multiplier factor applied to desired count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: HorizontalRunnerAutoscaler&#xA;metadata:&#xA;  name: example-runner-deployment-autoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runner-deployment&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  minReplicas: 1&#xA;  maxReplicas: 5&#xA;  metrics:&#xA;  - type: PercentageRunnersBusy&#xA;    scaleUpThreshold: &#39;0.75&#39;    # The percentage of busy runners at which the number of desired runners are re-evaluated to scale up&#xA;    scaleDownThreshold: &#39;0.3&#39;   # The percentage of busy runners at which the number of desired runners are re-evaluated to scale down&#xA;    scaleUpAdjustment: 2        # The scale up runner count added to desired count&#xA;    scaleDownAdjustment: 1      # The scale down runner count subtracted from the desired count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Webhook Driven Scaling&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To configure pull driven scaling see the &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#pull-driven-scaling&#34;&gt;Pull Driven Scaling&lt;/a&gt; section&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Webhooks are processed by a separate webhook server. The webhook server receives GitHub Webhook events and scales &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#runnerdeployments&#34;&gt;&lt;code&gt;RunnerDeployments&lt;/code&gt;&lt;/a&gt; by updating corresponding &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#autoscaling&#34;&gt;&lt;code&gt;HorizontalRunnerAutoscalers&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Today, the Webhook server can be configured to respond to GitHub&#39;s &lt;code&gt;check_run&lt;/code&gt;, &lt;code&gt;workflow_job&lt;/code&gt;, &lt;code&gt;pull_request&lt;/code&gt;, and &lt;code&gt;push&lt;/code&gt; events by scaling up the matching &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; by N replica(s), where &lt;code&gt;N&lt;/code&gt; is configurable within &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt;&#39;s &lt;code&gt;spec:&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More concretely, you can configure the targeted GitHub event types and the &lt;code&gt;N&lt;/code&gt; in &lt;code&gt;scaleUpTriggers&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: HorizontalRunnerAutoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runners&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  scaleUpTriggers:&#xA;  - githubEvent:&#xA;      checkRun:&#xA;        types: [&#34;created&#34;]&#xA;        status: &#34;queued&#34;&#xA;    amount: 1&#xA;    duration: &#34;5m&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the above example, the webhook server scales &lt;code&gt;example-runners&lt;/code&gt; by &lt;code&gt;1&lt;/code&gt; replica for 5 minutes on each &lt;code&gt;check_run&lt;/code&gt; event with the type of &lt;code&gt;created&lt;/code&gt; and the status of &lt;code&gt;queued&lt;/code&gt; received.&lt;/p&gt; &#xA;&lt;p&gt;Of note is the &lt;code&gt;HRA.spec.scaleUpTriggers[].duration&lt;/code&gt; attribute. This attribute is used to calculate if the replica number added via the trigger is expired or not. On each reconciliation loop, the controller sums up all the non-expiring replica numbers from previous scale-up triggers. It then compares the summed desired replica number against the current replica number. If the summed desired replica number &amp;gt; the current number then it means the replica count needs to scale up.&lt;/p&gt; &#xA;&lt;p&gt;As mentioned previously, the &lt;code&gt;scaleDownDelaySecondsAfterScaleOut&lt;/code&gt; property has the final say still. If the latest scale-up time + the anti-flapping duration is later than the current time, it doesn’t immediately scale up and instead retries the calculation again later to see if it needs to scale yet.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The primary benefit of autoscaling on Webhooks compared to the pull driven scaling is that it is far quicker as it allows you to immediately add runner resources rather than waiting for the next sync period.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can learn the implementation details in &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/pull/282&#34;&gt;#282&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To enable this feature, you first need to install the GitHub webhook server. To install via our Helm chart, &lt;em&gt;&lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/raw/master/charts/actions-runner-controller/README.md&#34;&gt;see the values documentation for all configuration options&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ helm upgrade --install --namespace actions-runner-system --create-namespace \&#xA;             --wait actions-runner-controller actions-runner-controller/actions-runner-controller \&#xA;             --set &#34;githubWebhookServer.enabled=true,githubWebhookServer.ports[0].nodePort=33080&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above command will result in exposing the node port 33080 for Webhook events. Usually, you need to create an external load balancer targeted to the node port, and register the hostname or the IP address of the external load balancer to the GitHub Webhook.&lt;/p&gt; &#xA;&lt;p&gt;Once you were able to confirm that the Webhook server is ready and running from GitHub - this is usually verified by the GitHub sending PING events to the Webhook server - create or update your &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; resources by learning the following configuration examples.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#example-1-scale-on-each-workflow_job-event&#34;&gt;Example 1: Scale on each &lt;code&gt;workflow_job&lt;/code&gt; event&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#example-2-scale-up-on-each-check_run-event&#34;&gt;Example 2: Scale up on each &lt;code&gt;check_run&lt;/code&gt; event&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#example-3-scale-on-each-pull_request-event-against-a-given-set-of-branches&#34;&gt;Example 3: Scale on each &lt;code&gt;pull_request&lt;/code&gt; event against a given set of branches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/#example-4-scale-on-each-push-event&#34;&gt;Example 4: Scale on each &lt;code&gt;push&lt;/code&gt; event&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All these examples should have &lt;strong&gt;minReplicas&lt;/strong&gt; &amp;amp; &lt;strong&gt;maxReplicas&lt;/strong&gt; as mandatory parameters even for webhook driven scaling.&lt;/p&gt; &#xA;&lt;h5&gt;Example 1: Scale on each &lt;code&gt;workflow_job&lt;/code&gt; event&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This feature requires controller version =&amp;gt; &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/releases/tag/v0.20.0&#34;&gt;v0.20.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: GitHub does not include the runner group information of a repository in the payload of &lt;code&gt;workflow_job&lt;/code&gt; event in the initial &lt;code&gt;queued&lt;/code&gt; event. The runner group information is only included for &lt;code&gt;workflow_job&lt;/code&gt; events when the job has already been allocated to a runner (events with a status of &lt;code&gt;in_progress&lt;/code&gt; or &lt;code&gt;completed&lt;/code&gt;). Please do raise feature requests against &lt;a href=&#34;https://support.github.com/tickets/personal/0&#34;&gt;GitHub&lt;/a&gt; for this information to be included in the initial &lt;code&gt;queued&lt;/code&gt; event if this would improve autoscaling runners for you.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;The most flexible webhook GitHub offers is the &lt;code&gt;workflow_job&lt;/code&gt; webhook, it includes the &lt;code&gt;runs-on&lt;/code&gt; information in the payload allowing scaling based on runner labels.&lt;/p&gt; &#xA;&lt;p&gt;This webhook should cover most people&#39;s needs, please experiment with this webhook first before considering the others.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerDeployment&#xA;metadata:&#xA;   name: example-runners&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      repository: example/myrepo&#xA;---&#xA;kind: HorizontalRunnerAutoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runners&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  scaleUpTriggers:&#xA;  - githubEvent:&#xA;      workflowJob: {}&#xA;    duration: &#34;30m&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This webhook requires you to explicitly set the labels in the RunnerDeployment / RunnerSet if you are using them in your workflow to match the agents (field &lt;code&gt;runs-on&lt;/code&gt;). Only &lt;code&gt;self-hosted&lt;/code&gt; will be considered as included by default.&lt;/p&gt; &#xA;&lt;p&gt;You can configure your GitHub webhook settings to only include &lt;code&gt;Workflows Job&lt;/code&gt; events, so that it sends us three kinds of &lt;code&gt;workflow_job&lt;/code&gt; events per a job run.&lt;/p&gt; &#xA;&lt;p&gt;Each kind has a &lt;code&gt;status&lt;/code&gt; of &lt;code&gt;queued&lt;/code&gt;, &lt;code&gt;in_progress&lt;/code&gt; and &lt;code&gt;completed&lt;/code&gt;. With the above configuration, &lt;code&gt;actions-runner-controller&lt;/code&gt; adds one runner for a &lt;code&gt;workflow_job&lt;/code&gt; event whose &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;queued&lt;/code&gt;. Similarly, it removes one runner for a &lt;code&gt;workflow_job&lt;/code&gt; event whose &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;completed&lt;/code&gt;. The caveat to this to remember is that this scale-down is within the bounds of your &lt;code&gt;scaleDownDelaySecondsAfterScaleOut&lt;/code&gt; configuration, if this time hasn&#39;t passed the scale down will be deferred.&lt;/p&gt; &#xA;&lt;h5&gt;Example 2: Scale up on each &lt;code&gt;check_run&lt;/code&gt; event&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: This should work almost like &lt;a href=&#34;https://github.com/philips-labs/terraform-aws-github-runner&#34;&gt;https://github.com/philips-labs/terraform-aws-github-runner&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To scale up replicas of the runners for &lt;code&gt;example/myrepo&lt;/code&gt; by 1 for 5 minutes on each &lt;code&gt;check_run&lt;/code&gt;, you write manifests like the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerDeployment&#xA;metadata:&#xA;   name: example-runners&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      repository: example/myrepo&#xA;---&#xA;kind: HorizontalRunnerAutoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runners&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  scaleUpTriggers:&#xA;  - githubEvent:&#xA;      checkRun:&#xA;        types: [&#34;created&#34;]&#xA;        status: &#34;queued&#34;&#xA;    amount: 1&#xA;    duration: &#34;5m&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To scale up replicas of the runners for &lt;code&gt;myorg&lt;/code&gt; organization by 1 for 5 minutes on each &lt;code&gt;check_run&lt;/code&gt;, you write manifests like the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerDeployment&#xA;metadata:&#xA;   name: example-runners&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      organization: myorg&#xA;---&#xA;kind: HorizontalRunnerAutoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runners&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  scaleUpTriggers:&#xA;  - githubEvent:&#xA;      checkRun:&#xA;        types: [&#34;created&#34;]&#xA;        status: &#34;queued&#34;&#xA;        # Optionally restrict autoscaling to being triggered by events from specific repositories within your organization still&#xA;        # repositories: [&#34;myrepo&#34;, &#34;myanotherrepo&#34;]&#xA;    amount: 1&#xA;    duration: &#34;5m&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Example 3: Scale on each &lt;code&gt;pull_request&lt;/code&gt; event against a given set of branches&lt;/h5&gt; &#xA;&lt;p&gt;To scale up replicas of the runners for &lt;code&gt;example/myrepo&lt;/code&gt; by 1 for 5 minutes on each &lt;code&gt;pull_request&lt;/code&gt; against the &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;develop&lt;/code&gt; branch you write manifests like the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerDeployment&#xA;metadata:&#xA;   name: example-runners&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      repository: example/myrepo&#xA;---&#xA;kind: HorizontalRunnerAutoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runners&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  scaleUpTriggers:&#xA;  - githubEvent:&#xA;      pullRequest:&#xA;        types: [&#34;synchronize&#34;]&#xA;        branches: [&#34;main&#34;, &#34;develop&#34;]&#xA;    amount: 1&#xA;    duration: &#34;5m&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request&#34;&gt;&#34;activity types&#34;&lt;/a&gt; for the list of valid values for &lt;code&gt;scaleUpTriggers[].githubEvent.pullRequest.types&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h6&gt;Example 4: Scale on each push event&lt;/h6&gt; &#xA;&lt;p&gt;To scale up replicas of the runners for &lt;code&gt;example/myrepo&lt;/code&gt; by 1 for 5 minutes on each &lt;code&gt;push&lt;/code&gt; write manifests like the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerDeployment&#xA;metadata:&#xA;   name: example-runners&#xA;spec:&#xA;  repository: example/myrepo&#xA;---&#xA;kind: HorizontalRunnerAutoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runners&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  scaleUpTriggers:&#xA;  - githubEvent:&#xA;      push:&#xA;    amount: 1&#xA;    duration: &#34;5m&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Autoscaling to/from 0&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This feature requires controller version =&amp;gt; &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/releases/tag/v0.19.0&#34;&gt;v0.19.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The regular &lt;code&gt;RunnerDeployment&lt;/code&gt; / &lt;code&gt;RunnerSet&lt;/code&gt; &lt;code&gt;replicas:&lt;/code&gt; attribute as well as the &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; &lt;code&gt;minReplicas:&lt;/code&gt; attribute supports being set to 0.&lt;/p&gt; &#xA;&lt;p&gt;The main use case for scaling from 0 is with the &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; kind. To scale from 0 whilst still being able to provision runners as jobs are queued we must use the &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; with only certain scaling configurations, only the below configurations support scaling from 0 whilst also being able to provision runners as jobs are queued:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;TotalNumberOfQueuedAndInProgressWorkflowRuns&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PercentageRunnersBusy&lt;/code&gt; + &lt;code&gt;TotalNumberOfQueuedAndInProgressWorkflowRuns&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PercentageRunnersBusy&lt;/code&gt; + Webhook-based autoscaling&lt;/li&gt; &#xA; &lt;li&gt;Webhook-based autoscaling only&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;PercentageRunnersBusy&lt;/code&gt; can&#39;t be used alone as, by its definition, it needs one or more GitHub runners to become &lt;code&gt;busy&lt;/code&gt; to be able to scale. If there isn&#39;t a runner to pick up a job and enter a &lt;code&gt;busy&lt;/code&gt; state then the controller will never know to provision a runner to begin with as this metric has no knowledge of the job queue and is relying on using the number of busy runners as a means for calculating the desired replica count.&lt;/p&gt; &#xA;&lt;p&gt;If a HorizontalRunnerAutoscaler is configured with a secondary metric of &lt;code&gt;TotalNumberOfQueuedAndInProgressWorkflowRuns&lt;/code&gt; then be aware that the controller will check the primary metric of &lt;code&gt;PercentageRunnersBusy&lt;/code&gt; first and will only use the secondary metric to calculate the desired replica count if the primary metric returns 0 desired replicas.&lt;/p&gt; &#xA;&lt;p&gt;Webhook-based autoscaling is the best option as it is relatively easy to configure and also it can scale quickly.&lt;/p&gt; &#xA;&lt;h4&gt;Scheduled Overrides&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This feature requires controller version =&amp;gt; &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/releases/tag/v0.19.0&#34;&gt;v0.19.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;Scheduled Overrides&lt;/code&gt; allows you to configure &lt;code&gt;HorizontalRunnerAutoscaler&lt;/code&gt; so that its &lt;code&gt;spec:&lt;/code&gt; gets updated only during a certain period of time. This feature is usually used for the following scenarios:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You want to reduce your infrastructure costs by scaling your Kubernetes nodes down outside a given period&lt;/li&gt; &#xA; &lt;li&gt;You want to scale for scheduled spikes in workloads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The most basic usage of this feature is to set a non-repeating override:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: HorizontalRunnerAutoscaler&#xA;metadata:&#xA;  name: example-runner-deployment-autoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runner-deployment&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  scheduledOverrides:&#xA;  # Override minReplicas to 100 only between 2021-06-01T00:00:00+09:00 and 2021-06-03T00:00:00+09:00&#xA;  - startTime: &#34;2021-06-01T00:00:00+09:00&#34;&#xA;    endTime: &#34;2021-06-03T00:00:00+09:00&#34;&#xA;    minReplicas: 100&#xA;  minReplicas: 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A scheduled override without &lt;code&gt;recurrenceRule&lt;/code&gt; is considered a one-off override, that is active between &lt;code&gt;startTime&lt;/code&gt; and &lt;code&gt;endTime&lt;/code&gt;. In the second scenario, it overrides &lt;code&gt;minReplicas&lt;/code&gt; to &lt;code&gt;100&lt;/code&gt; only between &lt;code&gt;2021-06-01T00:00:00+09:00&lt;/code&gt; and &lt;code&gt;2021-06-03T00:00:00+09:00&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A more advanced configuration is to include a &lt;code&gt;recurrenceRule&lt;/code&gt; in the override:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: HorizontalRunnerAutoscaler&#xA;metadata:&#xA;  name: example-runner-deployment-autoscaler&#xA;spec:&#xA;  scaleTargetRef:&#xA;    name: example-runner-deployment&#xA;    # Uncomment the below in case the target is not RunnerDeployment but RunnerSet&#xA;    #kind: RunnerSet&#xA;  scheduledOverrides:&#xA;  # Override minReplicas to 0 only between 0am sat to 0am mon&#xA;  - startTime: &#34;2021-05-01T00:00:00+09:00&#34;&#xA;    endTime: &#34;2021-05-03T00:00:00+09:00&#34;&#xA;    recurrenceRule:&#xA;      frequency: Weekly&#xA;      # Optional sunset datetime attribute&#xA;      # untilTime: &#34;2022-05-01T00:00:00+09:00&#34;&#xA;    minReplicas: 0&#xA;  minReplicas: 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A recurring override is initially active between &lt;code&gt;startTime&lt;/code&gt; and &lt;code&gt;endTime&lt;/code&gt;, and then it repeatedly gets activated after a certain period of time denoted by &lt;code&gt;frequency&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;frequecy&lt;/code&gt; can take one of the following values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Daily&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Weekly&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Monthly&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Yearly&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default, a scheduled override repeats forever. If you want it to repeat until a specific point in time, define &lt;code&gt;untilTime&lt;/code&gt;. The controller creates the last recurrence of the override until the recurrence&#39;s &lt;code&gt;startTime&lt;/code&gt; is equal or earlier than &lt;code&gt;untilTime&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Do ensure that you have enough slack for &lt;code&gt;untilTime&lt;/code&gt; so that a delayed or offline &lt;code&gt;actions-runner-controller&lt;/code&gt; is much less likely to miss the last recurrence. For example, you might want to set &lt;code&gt;untilTime&lt;/code&gt; to &lt;code&gt;M&lt;/code&gt; minutes after the last recurrence&#39;s &lt;code&gt;startTime&lt;/code&gt;, so that &lt;code&gt;actions-runner-controller&lt;/code&gt; being offline up to &lt;code&gt;M&lt;/code&gt; minutes doesn&#39;t miss the last recurrence.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Combining Multiple Scheduled Overrides&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;In case you have a more complex scenario, try writing two or more entries under &lt;code&gt;scheduledOverrides&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The earlier entry is prioritized higher than later entries. So you usually define one-time overrides at the top of your list, then yearly, monthly, weekly, and lastly daily overrides.&lt;/p&gt; &#xA;&lt;p&gt;A common use case for this may be to have 1 override to scale to 0 during the week outside of core business hours and another override to scale to 0 during all hours of the weekend.&lt;/p&gt; &#xA;&lt;h3&gt;Runner with DinD&lt;/h3&gt; &#xA;&lt;p&gt;When using the default runner, the runner pod starts up 2 containers: runner and DinD (Docker-in-Docker). This might create issues if there&#39;s &lt;code&gt;LimitRange&lt;/code&gt; set to namespace.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# dindrunnerdeployment.yaml&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: example-dindrunnerdeploy&#xA;spec:&#xA;  replicas: 2&#xA;  template:&#xA;    spec:&#xA;      image: summerwind/actions-runner-dind&#xA;      dockerdWithinRunnerContainer: true&#xA;      repository: mumoshu/actions-runner-controller-ci&#xA;      env: []&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This also helps with resources, as you don&#39;t need to give resources separately to docker and runner.&lt;/p&gt; &#xA;&lt;h3&gt;Additional Tweaks&lt;/h3&gt; &#xA;&lt;p&gt;You can pass details through the spec selector. Here&#39;s an eg. of what you may like to do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: actions-runner&#xA;  namespace: default&#xA;spec:&#xA;  replicas: 2&#xA;  template:&#xA;    metadata:&#xA;      annotations:&#xA;        cluster-autoscaler.kubernetes.io/safe-to-evict: &#34;true&#34;&#xA;    spec:&#xA;      nodeSelector:&#xA;        node-role.kubernetes.io/test: &#34;&#34;&#xA;&#xA;      securityContext:&#xA;        #All level/role/type/user values will vary based on your SELinux policies.&#xA;        #See https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/container_security_guide/docker_selinux_security_policy for information about SELinux with containers&#xA;        seLinuxOptions:&#xA;          level: &#34;s0&#34;&#xA;          role: &#34;system_r&#34;&#xA;          type: &#34;super_t&#34;&#xA;          user: &#34;system_u&#34;&#xA;&#xA;      tolerations:&#xA;      - effect: NoSchedule&#xA;        key: node-role.kubernetes.io/test&#xA;        operator: Exists&#xA;&#xA;      topologySpreadConstraints:&#xA;        - maxSkew: 1&#xA;          topologyKey: kubernetes.io/hostname&#xA;          whenUnsatisfiable: ScheduleAnyway&#xA;          labelSelector:&#xA;            matchLabels:&#xA;              runner-deployment-name: actions-runner&#xA;&#xA;      repository: mumoshu/actions-runner-controller-ci&#xA;      # The default &#34;summerwind/actions-runner&#34; images are available at DockerHub:&#xA;      # https://hub.docker.com/r/summerwind/actions-runner&#xA;      # You can also build your own and specify it like the below:&#xA;      image: custom-image/actions-runner:latest&#xA;      imagePullPolicy: Always&#xA;      resources:&#xA;        limits:&#xA;          cpu: &#34;4.0&#34;&#xA;          memory: &#34;8Gi&#34;&#xA;        requests:&#xA;          cpu: &#34;2.0&#34;&#xA;          memory: &#34;4Gi&#34;&#xA;      # Timeout after a node crashed or became unreachable to evict your pods somewhere else (default 5mins)&#xA;      tolerations:&#xA;        - key: &#34;node.kubernetes.io/unreachable&#34;&#xA;          operator: &#34;Exists&#34;&#xA;          effect: &#34;NoExecute&#34;&#xA;          tolerationSeconds: 10&#xA;      # true (default) = The runner restarts after running jobs, to ensure a clean and reproducible build environment&#xA;      # false = The runner is persistent across jobs and doesn&#39;t automatically restart&#xA;      # This directly controls the behaviour of `--once` flag provided to the github runner&#xA;      ephemeral: false&#xA;      # true (default) = A privileged docker sidecar container is included in the runner pod.&#xA;      # false = A docker sidecar container is not included in the runner pod and you can&#39;t use docker.&#xA;      # If set to false, there are no privileged container and you cannot use docker.&#xA;      dockerEnabled: false&#xA;      # Optional Docker containers network MTU&#xA;      # If your network card MTU is smaller than Docker&#39;s default 1500, you might encounter Docker networking issues.&#xA;      # To fix these issues, you should setup Docker MTU smaller than or equal to that on the outgoing network card.&#xA;      # More information:&#xA;      # - https://mlohr.com/docker-mtu/&#xA;      dockerMTU: 1500&#xA;      # Optional Docker registry mirror&#xA;      # Docker Hub has an aggressive rate-limit configuration for free plans.&#xA;      # To avoid disruptions in your CI/CD pipelines, you might want to setup an external or on-premises Docker registry mirror.&#xA;      # More information:&#xA;      # - https://docs.docker.com/docker-hub/download-rate-limit/&#xA;      # - https://cloud.google.com/container-registry/docs/pulling-cached-images&#xA;      dockerRegistryMirror: https://mirror.gcr.io/&#xA;      # false (default) = Docker support is provided by a sidecar container deployed in the runner pod.&#xA;      # true = No docker sidecar container is deployed in the runner pod but docker can be used within the runner container instead. The image summerwind/actions-runner-dind is used by default.&#xA;      dockerdWithinRunnerContainer: true&#xA;      #Optional environment variables for docker container&#xA;      # Valid only when dockerdWithinRunnerContainer=false&#xA;      dockerEnv:&#xA;        - name: HTTP_PROXY&#xA;          value: http://example.com      &#xA;      # Docker sidecar container image tweaks examples below, only applicable if dockerdWithinRunnerContainer = false&#xA;      dockerdContainerResources:&#xA;        limits:&#xA;          cpu: &#34;4.0&#34;&#xA;          memory: &#34;8Gi&#34;&#xA;        requests:&#xA;          cpu: &#34;2.0&#34;&#xA;          memory: &#34;4Gi&#34;&#xA;      # Additional N number of sidecar containers&#xA;      sidecarContainers:&#xA;        - name: mysql&#xA;          image: mysql:5.7&#xA;          env:&#xA;            - name: MYSQL_ROOT_PASSWORD&#xA;              value: abcd1234&#xA;          securityContext:&#xA;            runAsUser: 0&#xA;      # workDir if not specified (default = /runner/_work)&#xA;      # You can customise this setting allowing you to change the default working directory location&#xA;      # for example, the below setting is the same as on the ubuntu-18.04 image&#xA;      workDir: /home/runner/work&#xA;      # You can mount some of the shared volumes to the dind container using dockerVolumeMounts, like any other volume mounting.&#xA;      # NOTE: in case you want to use an hostPath like the following example, make sure that Kubernetes doesn&#39;t schedule more than one runner&#xA;      # per physical host. You can achieve that by setting pod anti-affinity rules and/or resource requests/limits.&#xA;      volumes:&#xA;        - name: docker-extra&#xA;          hostPath:&#xA;            path: /mnt/docker-extra&#xA;            type: DirectoryOrCreate&#xA;        - name: repo&#xA;          hostPath:&#xA;            path: /mnt/repo&#xA;            type: DirectoryOrCreate&#xA;      dockerVolumeMounts:&#xA;        - mountPath: /var/lib/docker&#xA;          name: docker-extra&#xA;      # You can mount some of the shared volumes to the runner container using volumeMounts.&#xA;      # NOTE: Do not try to mount the volume onto the runner workdir itself as it will not work. You could mount it however on a subdirectory in the runner workdir&#xA;      # Please see https://github.com/actions-runner-controller/actions-runner-controller/issues/630#issuecomment-862087323 for more information.&#xA;      volumeMounts:&#xA;        - mountPath: /home/runner/work/repo&#xA;          name: repo&#xA;      # Optional storage medium type of runner volume mount.&#xA;      # More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir&#xA;      # &#34;&#34; (default) = Node&#39;s default medium&#xA;      # Memory = RAM-backed filesystem (tmpfs)&#xA;      # NOTE: Using RAM-backed filesystem gives you fastest possible storage on your host nodes.&#xA;      volumeStorageMedium: &#34;&#34;&#xA;      # Total amount of local storage resources required for runner volume mount.&#xA;      # The default limit is undefined.&#xA;      # NOTE: You can make sure that nodes&#39; resources are never exceeded by limiting used storage size per runner pod.&#xA;      # You can even disable the runner mount completely by setting limit to zero if dockerdWithinRunnerContainer = true.&#xA;      # Please see https://github.com/actions-runner-controller/actions-runner-controller/pull/674 for more information.&#xA;      volumeSizeLimit: 4Gi&#xA;      # Optional name of the container runtime configuration that should be used for pods.&#xA;      # This must match the name of a RuntimeClass resource available on the cluster.&#xA;      # More info: https://kubernetes.io/docs/concepts/containers/runtime-class&#xA;      runtimeClassName: &#34;runc&#34;&#xA;      # This is an advanced configuration. Don&#39;t touch it unless you know what you&#39;re doing.&#xA;      containers:&#xA;      - name: runner&#xA;        # Usually, the runner container&#39;s privileged field is derived from dockerdWithinRunnerContainer.&#xA;        # But in the case where you need to run privileged job steps even if you don&#39;t use docker/don&#39;t need dockerd within the runner container,&#xA;        # just specified `privileged: true` like this.&#xA;        # See https://github.com/actions-runner-controller/actions-runner-controller/issues/1282&#xA;        # Do note that specifying `privileged: false` while using dind is very likely to fail, even if you use some vm-based container runtimes&#xA;        # like firecracker and kata. Basically they run containers within dedicated micro vms and so&#xA;        # it&#39;s more like you can use `privileged: true` safer with those runtimes.&#xA;        #&#xA;        # privileged: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Volume mounts&lt;/h3&gt; &#xA;&lt;p&gt;You can configure your own custom volume mounts. For example to have the work/docker data in memory or on NVME SSD, for i/o intensive builds. Other custom volume mounts should be possible as well, see &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/volumes/&#34;&gt;kubernetes documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;RAM Disk&lt;/h4&gt; &#xA;&lt;p&gt;Example how to place the runner work dir, docker sidecar and /tmp within the runner onto a ramdisk.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerDeployment&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      dockerVolumeMounts:&#xA;        - mountPath: /var/lib/docker&#xA;          name: docker&#xA;      volumeMounts:&#xA;        - mountPath: /tmp&#xA;          name: tmp&#xA;      volumes:&#xA;        - name: docker&#xA;          emptyDir:&#xA;            medium: Memory&#xA;        - name: work # this volume gets automatically used up for the workdir&#xA;          emptyDir:&#xA;            medium: Memory&#xA;        - name: tmp&#xA;          emptyDir:&#xA;            medium: Memory&#xA;      emphemeral: true # recommended to not leak data between builds.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;NVME SSD&lt;/h4&gt; &#xA;&lt;p&gt;In this example we provide NVME backed storage for the workdir, docker sidecar and /tmp within the runner. Here we use a working example on GKE, which will provide the NVME disk at /mnt/disks/ssd0. We will be placing the respective volumes in subdirs here and in order to be able to run multiple runners we will use the pod name as a prefix for subdirectories. Also the disk will fill up over time and disk space will not be freed until the node is removed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Beware&lt;/strong&gt; that running these persistent backend volumes &lt;strong&gt;leave data behind&lt;/strong&gt; between 2 different jobs on the workdir and &lt;code&gt;/tmp&lt;/code&gt; with &lt;code&gt;emphemeral: false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerDeployment&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      env:&#xA;      - name: POD_NAME&#xA;        valueFrom:&#xA;          fieldRef:&#xA;            fieldPath: metadata.name&#xA;      dockerVolumeMounts:&#xA;      - mountPath: /var/lib/docker&#xA;        name: docker&#xA;        subPathExpr: $(POD_NAME)-docker&#xA;      - mountPath: /runner/_work&#xA;        name: work&#xA;        subPathExpr: $(POD_NAME)-work&#xA;      volumeMounts:&#xA;      - mountPath: /runner/_work&#xA;        name: work&#xA;        subPathExpr: $(POD_NAME)-work&#xA;      - mountPath: /tmp&#xA;        name: tmp&#xA;        subPathExpr: $(POD_NAME)-tmp&#xA;      dockerEnv:&#xA;      - name: POD_NAME&#xA;        valueFrom:&#xA;          fieldRef:&#xA;            fieldPath: metadata.name&#xA;      volumes:&#xA;      - hostPath:&#xA;          path: /mnt/disks/ssd0&#xA;        name: docker&#xA;      - hostPath:&#xA;          path: /mnt/disks/ssd0&#xA;        name: work&#xA;      - hostPath:&#xA;          path: /mnt/disks/ssd0&#xA;        name: tmp&#xA;    emphemeral: true # VERY important. otherwise data inside the workdir and /tmp is not cleared between builds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker image layers caching&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Ensure that the volume mount is added to the container that is running the Docker daemon.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;docker&lt;/code&gt; stores pulled and built image layers in the &lt;a href=&#34;https://docs.docker.com/get-started/overview/#docker-architecture&#34;&gt;daemon&#39;s (note not client)&lt;/a&gt; &lt;a href=&#34;https://docs.docker.com/storage/storagedriver/#sharing-promotes-smaller-images&#34;&gt;local storage area&lt;/a&gt; which is usually at &lt;code&gt;/var/lib/docker&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By leveraging RunnerSet&#39;s dynamic PV provisioning feature and your CSI driver, you can let ARC maintain a pool of PVs that are reused across runner pods to retain &lt;code&gt;/var/lib/docker&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Be sure to add the volume mount to the container that is supposed to run the docker daemon.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, ARC creates a sidecar container named &lt;code&gt;docker&lt;/code&gt; within the runner pod for running the docker daemon. In that case, it&#39;s where you need the volume mount so that the manifest looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerSet&#xA;metadata:&#xA;  name: example&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      containers:&#xA;      - name: docker&#xA;        volumeMounts:&#xA;        - name: var-lib-docker&#xA;          mountPath: /var/lib/docker&#xA;  volumeClaimtemplates:&#xA;  - metadata:&#xA;      name: var-lib-docker&#xA;    spec:&#xA;      accessModes:&#xA;      - ReadWriteOnce&#xA;      resources:&#xA;        requests:&#xA;          storage: 10Mi&#xA;      storageClassName: var-lib-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With &lt;code&gt;dockerdWithinRunnerContainer: true&lt;/code&gt;, you need to add the volume mount to the &lt;code&gt;runner&lt;/code&gt; container.&lt;/p&gt; &#xA;&lt;h4&gt;Go module and build caching&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt; is known to cache builds under &lt;code&gt;$HOME/.cache/go-build&lt;/code&gt; and downloaded modules under &lt;code&gt;$HOME/pkg/mod&lt;/code&gt;. The module cache dir can be customized by setting &lt;code&gt;GOMOD_CACHE&lt;/code&gt; so by setting it to somewhere under &lt;code&gt;$HOME/.cache&lt;/code&gt;, we can have a single PV to host both build and module cache, which might improve Go module downloading and building time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerSet&#xA;metadata:&#xA;  name: example&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      containers:&#xA;      - name: runner&#xA;        env:&#xA;        - name: GOMODCACHE&#xA;          value: &#34;/home/runner/.cache/go-mod&#34;&#xA;        volumeMounts:&#xA;        - name: cache&#xA;          mountPath: &#34;/home/runner/.cache&#34;&#xA;  volumeClaimTemplates:&#xA;  - metadata:&#xA;      name: cache&#xA;    spec:&#xA;      accessModes:&#xA;      - ReadWriteOnce&#xA;      resources:&#xA;        requests:&#xA;          storage: 10Mi&#xA;      storageClassName: cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;PV-backed runner work directory&lt;/h4&gt; &#xA;&lt;p&gt;ARC works by automatically creating runner pods for running &lt;a href=&#34;https://github.com/actions/runner&#34;&gt;&lt;code&gt;actions/runner&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://docs.github.com/en/actions/hosting-your-own-runners/adding-self-hosted-runners#adding-a-self-hosted-runner-to-a-repository&#34;&gt;running &lt;code&gt;config.sh&lt;/code&gt;&lt;/a&gt; which you had to ran manually without ARC.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;config.sh&lt;/code&gt; is the script provided by &lt;code&gt;actions/runner&lt;/code&gt; to pre-configure the runner process before being started. One of the options provided by &lt;code&gt;config.sh&lt;/code&gt; is &lt;code&gt;--work&lt;/code&gt;, which specifies the working directory where the runner runs your workflow jobs in.&lt;/p&gt; &#xA;&lt;p&gt;The volume and the partition that hosts the work directory should have several or dozens of GBs free space that might be used by your workflow jobs.&lt;/p&gt; &#xA;&lt;p&gt;By default, ARC uses &lt;code&gt;/runner/_work&lt;/code&gt; as work directory, which is powered by Kubernetes&#39;s &lt;code&gt;emptyDir&lt;/code&gt;. &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/volumes/#emptydir&#34;&gt;&lt;code&gt;emptyDir&lt;/code&gt; is usually backed by a directory created within a host&#39;s volume&lt;/a&gt;, somewhere under &lt;code&gt;/var/lib/kuberntes/pods&lt;/code&gt;. Therefore your host&#39;s volume that is backing &lt;code&gt;/var/lib/kubernetes/pods&lt;/code&gt; must have enough free space to serve all the concurrent runner pods that might be deployed onto your host at the same time.&lt;/p&gt; &#xA;&lt;p&gt;So, in case you see a job failure seemingly due to &#34;disk full&#34;, it&#39;s very likely you need to reconfigure your host to have more free space.&lt;/p&gt; &#xA;&lt;p&gt;In case you can&#39;t rely on host&#39;s volume, consider using &lt;code&gt;RunnerSet&lt;/code&gt; and backing the work directory with a ephemeral PV.&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes 1.23 or greater provides the support for &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes&#34;&gt;generic ephemeral volumes&lt;/a&gt;, which is designed to support this exact use-case. It&#39;s defined in the Pod spec API so it isn&#39;t currently available for &lt;code&gt;RunnerDeployment&lt;/code&gt;. &lt;code&gt;RunnerSet&lt;/code&gt; is based on Kubernetes&#39; &lt;code&gt;StatefulSet&lt;/code&gt; which mostly embeds the Pod spec under &lt;code&gt;spec.template.spec&lt;/code&gt;, so there you go.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: RunnerSet&#xA;metadata:&#xA;  name: example&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      containers:&#xA;      - name: runner&#xA;        volumeMounts:&#xA;        - mountPath: /runner/_work&#xA;          name: work&#xA;      - name: docker&#xA;        volumeMounts:&#xA;        - mountPath: /runner/_work&#xA;          name: work&#xA;      volumes:&#xA;      - name: work&#xA;        ephemeral:&#xA;          volumeClaimTemplate:&#xA;            spec:&#xA;              accessModes: [ &#34;ReadWriteOnce&#34; ]&#xA;              storageClassName: &#34;runner-work-dir&#34;&#xA;              resources:&#xA;                requests:&#xA;                  storage: 10Gi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Runner Labels&lt;/h3&gt; &#xA;&lt;p&gt;To run a workflow job on a self-hosted runner, you can use the following syntax in your workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  release:&#xA;    runs-on: self-hosted&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you have multiple kinds of self-hosted runners, you can distinguish between them using labels. In order to do so, you can specify one or more labels in your &lt;code&gt;Runner&lt;/code&gt; or &lt;code&gt;RunnerDeployment&lt;/code&gt; spec.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# runnerdeployment.yaml&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: custom-runner&#xA;spec:&#xA;  replicas: 1&#xA;  template:&#xA;    spec:&#xA;      repository: actions-runner-controller/actions-runner-controller&#xA;      labels:&#xA;        - custom-runner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once this spec is applied, you can observe the labels for your runner from the repository or organization in the GitHub settings page for the repository or organization. You can now select a specific runner from your workflow by using the label in &lt;code&gt;runs-on&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  release:&#xA;    runs-on: custom-runner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that if you specify &lt;code&gt;self-hosted&lt;/code&gt; in your workflow, then this will run your job on &lt;em&gt;any&lt;/em&gt; self-hosted runner, regardless of the labels that they have.&lt;/p&gt; &#xA;&lt;h3&gt;Runner Groups&lt;/h3&gt; &#xA;&lt;p&gt;Runner groups can be used to limit which repositories are able to use the GitHub Runner at an organization level. Runner groups have to be &lt;a href=&#34;https://docs.github.com/en/actions/hosting-your-own-runners/managing-access-to-self-hosted-runners-using-groups&#34;&gt;created in GitHub first&lt;/a&gt; before they can be referenced.&lt;/p&gt; &#xA;&lt;p&gt;To add the runner to the group &lt;code&gt;NewGroup&lt;/code&gt;, specify the group in your &lt;code&gt;Runner&lt;/code&gt; or &lt;code&gt;RunnerDeployment&lt;/code&gt; spec.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# runnerdeployment.yaml&#xA;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: custom-runner&#xA;spec:&#xA;  replicas: 1&#xA;  template:&#xA;    spec:&#xA;      group: NewGroup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;GitHub supports custom visibility in a Runner Group to make it available to a specific set of repositories only. By default if no GitHub authentication is included in the webhook server ARC will be assumed that all runner groups to be usable in all repositories. Currently, GitHub does not include the repository runner group membership information in the workflow_job event (or any webhook). To make the ARC &#34;runner group aware&#34; additional GitHub API calls are needed to find out what runner groups are visible to the webhook&#39;s repository. This behaviour will impact your rate-limit budget and so the option needs to be explicitly configured by the end user.&lt;/p&gt; &#xA;&lt;p&gt;This option will be enabled when proper GitHub authentication options (token, app or basic auth) are provided in the webhook server and &lt;code&gt;useRunnerGroupsVisibility&lt;/code&gt; is set to true, e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;githubWebhookServer:&#xA;  enabled: false&#xA;  replicaCount: 1&#xA;  useRunnerGroupsVisibility: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Runner Entrypoint Features&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Environment variable values must all be strings&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The entrypoint script is aware of a few environment variables for configuring features:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: example-runnerdeployment&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      env:&#xA;        # Issues a sleep command at the start of the entrypoint&#xA;        - name: STARTUP_DELAY_IN_SECONDS&#xA;          value: &#34;2&#34;&#xA;        # Disables the wait for the docker daemon to be available check&#xA;        - name: DISABLE_WAIT_FOR_DOCKER&#xA;          value: &#34;true&#34;&#xA;        # Disables automatic runner updates&#xA;        - name: DISABLE_RUNNER_UPDATE&#xA;          value: &#34;true&#34;&#xA;        # Configure runner with legacy --once instead of --ephemeral flag&#xA;        # WARNING | THIS ENV VAR IS DEPRECATED AND WILL BE REMOVED&#xA;        # IN A FUTURE VERSION OF ARC.&#xA;        # THIS ENV VAR WILL BE REMOVED, SEE ISSUE #1196 FOR DETAILS&#xA;        - name: RUNNER_FEATURE_FLAG_ONCE&#xA;          value: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using IRSA (IAM Roles for Service Accounts) in EKS&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This feature requires controller version =&amp;gt; &lt;a href=&#34;https://github.com/actions-runner-controller/actions-runner-controller/releases/tag/v0.15.0&#34;&gt;v0.15.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Similar to regular pods and deployments, you firstly need an existing service account with the IAM role associated. Create one using e.g. &lt;code&gt;eksctl&lt;/code&gt;. You can refer to &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html&#34;&gt;the EKS documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Once you set up the service account, all you need is to add &lt;code&gt;serviceAccountName&lt;/code&gt; and &lt;code&gt;fsGroup&lt;/code&gt; to any pods that use the IAM-role enabled service account.&lt;/p&gt; &#xA;&lt;p&gt;For &lt;code&gt;RunnerDeployment&lt;/code&gt;, you can set those two fields under the runner spec at &lt;code&gt;RunnerDeployment.Spec.Template&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: RunnerDeployment&#xA;metadata:&#xA;  name: example-runnerdeploy&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      repository: USER/REO&#xA;      serviceAccountName: my-service-account&#xA;      securityContext:&#xA;        fsGroup: 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Software Installed in the Runner Image&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cloud Tooling&lt;/strong&gt;&lt;br&gt; The project supports being deployed on the various cloud Kubernetes platforms (e.g. EKS), it does not however aim to go beyond that. No cloud specific tooling is bundled in the base runner, this is an active decision to keep the overhead of maintaining the solution manageable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bundled Software&lt;/strong&gt;&lt;br&gt; The GitHub hosted runners include a large amount of pre-installed software packages. GitHub maintains a list in README files at &lt;a href=&#34;https://github.com/actions/virtual-environments/tree/main/images/linux&#34;&gt;https://github.com/actions/virtual-environments/tree/main/images/linux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This solution maintains a few runner images with &lt;code&gt;latest&lt;/code&gt; aligning with GitHub&#39;s Ubuntu version, these images do not contain all of the software installed on the GitHub runners. The images contain the following subset of packages from the GitHub runners:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Basic CLI packages&lt;/li&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;docker&lt;/li&gt; &#xA; &lt;li&gt;build-essentials&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The virtual environments from GitHub contain a lot more software packages (different versions of Java, Node.js, Golang, .NET, etc) which are not provided in the runner image. Most of these have dedicated setup actions which allow the tools to be installed on-demand in a workflow, for example: &lt;code&gt;actions/setup-java&lt;/code&gt; or &lt;code&gt;actions/setup-node&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If there is a need to include packages in the runner image for which there is no setup action, then this can be achieved by building a custom container image for the runner. The easiest way is to start with the &lt;code&gt;summerwind/actions-runner&lt;/code&gt; image and then install the extra dependencies directly in the docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;FROM summerwind/actions-runner:latest&#xA;&#xA;RUN sudo apt update -y \&#xA;  &amp;amp;&amp;amp; sudo apt install YOUR_PACKAGE&#xA;  &amp;amp;&amp;amp; sudo rm -rf /var/lib/apt/lists/*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then configure the runner to use a custom docker image by configuring the &lt;code&gt;image&lt;/code&gt; field of a &lt;code&gt;Runner&lt;/code&gt; or &lt;code&gt;RunnerDeployment&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: actions.summerwind.dev/v1alpha1&#xA;kind: Runner&#xA;metadata:&#xA;  name: custom-runner&#xA;spec:&#xA;  repository: actions-runner-controller/actions-runner-controller&#xA;  image: YOUR_CUSTOM_DOCKER_IMAGE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using without cert-manager&lt;/h3&gt; &#xA;&lt;p&gt;Assuming you are installing in the default namespace, ensure your certificate has SANs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;webhook-service.actions-runner-system.svc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;webhook-service.actions-runner-system.svc.cluster.local&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is possible to use a self-signed certificate by following a guide like &lt;a href=&#34;https://mariadb.com/docs/security/encryption/in-transit/create-self-signed-certificates-keys-openssl/&#34;&gt;this one&lt;/a&gt; using &lt;code&gt;openssl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install your certificate as a TLS secret:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ kubectl create secret tls webhook-server-cert \&#xA;  -n actions-runner-system \&#xA;  --cert=path/to/cert/file \&#xA;  --key=path/to/key/file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the Helm chart values as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ CA_BUNDLE=$(cat path/to/ca.pem | base64)&#xA;$ helm --upgrade install actions-runner-controller/actions-runner-controller \&#xA;  certManagerEnabled=false \&#xA;  admissionWebHooks.caBundle=${CA_BUNDLE}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/TROUBLESHOOTING.md&#34;&gt;troubleshooting guide&lt;/a&gt; for solutions to various problems people have run into consistently.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;For more details on contributing to the project (including requirements) please check out &lt;a href=&#34;https://raw.githubusercontent.com/actions-runner-controller/actions-runner-controller/master/CONTRIBUTING.md&#34;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws/aws-sdk-go</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/aws/aws-sdk-go</id>
    <link href="https://github.com/aws/aws-sdk-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AWS SDK for the Go programming language.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AWS SDK for Go&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/api-reference-blue.svg?sanitize=true&#34; alt=&#34;API Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/aws/aws-sdk-go?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/aws/aws-sdk-go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aws/aws-sdk-go/actions/workflows/go.yml&#34;&gt;&lt;img src=&#34;https://github.com/aws/aws-sdk-go/actions/workflows/go.yml/badge.svg?branch=main&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aws/aws-sdk-go/raw/main/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20V2-blue.svg?sanitize=true&#34; alt=&#34;Apache V2 License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;aws-sdk-go is the official AWS SDK for the Go programming language.&lt;/p&gt; &#xA;&lt;p&gt;Checkout our &lt;a href=&#34;https://github.com/aws/aws-sdk-go/releases&#34;&gt;release notes&lt;/a&gt; for information about the latest bug fixes, updates, and features added to the SDK.&lt;/p&gt; &#xA;&lt;p&gt;We &lt;a href=&#34;https://aws.amazon.com/blogs/developer/aws-sdk-for-go-version-2-general-availability/&#34;&gt;announced&lt;/a&gt; the General Availability for the &lt;a href=&#34;https://github.com/aws/aws-sdk-go-v2&#34;&gt;AWS SDK for Go V2 (v2)&lt;/a&gt;. The v2 SDK source is available at &lt;a href=&#34;https://github.com/aws/aws-sdk-go-v2&#34;&gt;https://github.com/aws/aws-sdk-go-v2&lt;/a&gt;. Review the v2 SDK&#39;s &lt;a href=&#34;https://aws.github.io/aws-sdk-go-v2/docs/&#34;&gt;Developer Guide&lt;/a&gt; to get started with AWS SDK for Go V2 or review the &lt;a href=&#34;https://aws.github.io/aws-sdk-go-v2/docs/migrating/&#34;&gt;migration guide&lt;/a&gt; if you already use version 1.&lt;/p&gt; &#xA;&lt;p&gt;Jump To:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-go/main/#Getting-Started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-go/main/#Quick-Examples&#34;&gt;Quick Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-go/main/#Getting-Help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-go/main/#Contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-go/main/#Resources&#34;&gt;More Resources&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;go get&lt;/code&gt; to retrieve the SDK to add it to your &lt;code&gt;GOPATH&lt;/code&gt; workspace, or project&#39;s Go module dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/aws/aws-sdk-go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update the SDK use &lt;code&gt;go get -u&lt;/code&gt; to retrieve the latest version of the SDK.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get -u github.com/aws/aws-sdk-go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;The SDK includes a &lt;code&gt;vendor&lt;/code&gt; folder containing the runtime dependencies of the SDK. The metadata of the SDK&#39;s dependencies can be found in the Go module file &lt;code&gt;go.mod&lt;/code&gt; or Dep file &lt;code&gt;Gopkg.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Go Modules&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Go modules, your &lt;code&gt;go get&lt;/code&gt; will default to the latest tagged release version of the SDK. To get a specific release version of the SDK use &lt;code&gt;@&amp;lt;tag&amp;gt;&lt;/code&gt; in your &lt;code&gt;go get&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/aws/aws-sdk-go@v1.15.77&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get the latest SDK repository change use &lt;code&gt;@latest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/aws/aws-sdk-go@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Go 1.5&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Go 1.5 without vendoring enabled, (&lt;code&gt;GO15VENDOREXPERIMENT=1&lt;/code&gt;), you will need to use &lt;code&gt;...&lt;/code&gt; when retrieving the SDK to get its dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/aws/aws-sdk-go/...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will still include the &lt;code&gt;vendor&lt;/code&gt; folder. The &lt;code&gt;vendor&lt;/code&gt; folder can be deleted if not used by your environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rm -rf $GOPATH/src/github.com/aws/aws-sdk-go/vendor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Complete SDK Example&lt;/h3&gt; &#xA;&lt;p&gt;This example shows a complete working Go file which will upload a file to S3 and use the Context pattern to implement timeout logic that will cancel the request if it takes too long. This example highlights how to use sessions, create a service client, make a request, handle the error, and process the response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  package main&#xA;&#xA;  import (&#xA;  &#x9;&#34;context&#34;&#xA;  &#x9;&#34;flag&#34;&#xA;  &#x9;&#34;fmt&#34;&#xA;  &#x9;&#34;os&#34;&#xA;  &#x9;&#34;time&#34;&#xA;&#xA;  &#x9;&#34;github.com/aws/aws-sdk-go/aws&#34;&#xA;  &#x9;&#34;github.com/aws/aws-sdk-go/aws/awserr&#34;&#xA;  &#x9;&#34;github.com/aws/aws-sdk-go/aws/request&#34;&#xA;  &#x9;&#34;github.com/aws/aws-sdk-go/aws/session&#34;&#xA;  &#x9;&#34;github.com/aws/aws-sdk-go/service/s3&#34;&#xA;  )&#xA;&#xA;  // Uploads a file to S3 given a bucket and object key. Also takes a duration&#xA;  // value to terminate the update if it doesn&#39;t complete within that time.&#xA;  //&#xA;  // The AWS Region needs to be provided in the AWS shared config or on the&#xA;  // environment variable as `AWS_REGION`. Credentials also must be provided&#xA;  // Will default to shared config file, but can load from environment if provided.&#xA;  //&#xA;  // Usage:&#xA;  //   # Upload myfile.txt to myBucket/myKey. Must complete within 10 minutes or will fail&#xA;  //   go run withContext.go -b mybucket -k myKey -d 10m &amp;lt; myfile.txt&#xA;  func main() {&#xA;  &#x9;var bucket, key string&#xA;  &#x9;var timeout time.Duration&#xA;&#xA;  &#x9;flag.StringVar(&amp;amp;bucket, &#34;b&#34;, &#34;&#34;, &#34;Bucket name.&#34;)&#xA;  &#x9;flag.StringVar(&amp;amp;key, &#34;k&#34;, &#34;&#34;, &#34;Object key name.&#34;)&#xA;  &#x9;flag.DurationVar(&amp;amp;timeout, &#34;d&#34;, 0, &#34;Upload timeout.&#34;)&#xA;  &#x9;flag.Parse()&#xA;&#xA;  &#x9;// All clients require a Session. The Session provides the client with&#xA; &#x9;// shared configuration such as region, endpoint, and credentials. A&#xA; &#x9;// Session should be shared where possible to take advantage of&#xA; &#x9;// configuration and credential caching. See the session package for&#xA; &#x9;// more information.&#xA;  &#x9;sess := session.Must(session.NewSession())&#xA;&#xA; &#x9;// Create a new instance of the service&#39;s client with a Session.&#xA; &#x9;// Optional aws.Config values can also be provided as variadic arguments&#xA; &#x9;// to the New function. This option allows you to provide service&#xA; &#x9;// specific configuration.&#xA;  &#x9;svc := s3.New(sess)&#xA;&#xA;  &#x9;// Create a context with a timeout that will abort the upload if it takes&#xA;  &#x9;// more than the passed in timeout.&#xA;  &#x9;ctx := context.Background()&#xA;  &#x9;var cancelFn func()&#xA;  &#x9;if timeout &amp;gt; 0 {&#xA;  &#x9;&#x9;ctx, cancelFn = context.WithTimeout(ctx, timeout)&#xA;  &#x9;}&#xA;  &#x9;// Ensure the context is canceled to prevent leaking.&#xA;  &#x9;// See context package for more information, https://golang.org/pkg/context/&#xA;&#x9;if cancelFn != nil {&#xA;  &#x9;&#x9;defer cancelFn()&#xA;&#x9;}&#xA;&#xA;  &#x9;// Uploads the object to S3. The Context will interrupt the request if the&#xA;  &#x9;// timeout expires.&#xA;  &#x9;_, err := svc.PutObjectWithContext(ctx, &amp;amp;s3.PutObjectInput{&#xA;  &#x9;&#x9;Bucket: aws.String(bucket),&#xA;  &#x9;&#x9;Key:    aws.String(key),&#xA;  &#x9;&#x9;Body:   os.Stdin,&#xA;  &#x9;})&#xA;  &#x9;if err != nil {&#xA;  &#x9;&#x9;if aerr, ok := err.(awserr.Error); ok &amp;amp;&amp;amp; aerr.Code() == request.CanceledErrorCode {&#xA;  &#x9;&#x9;&#x9;// If the SDK can determine the request or retry delay was canceled&#xA;  &#x9;&#x9;&#x9;// by a context the CanceledErrorCode error code will be returned.&#xA;  &#x9;&#x9;&#x9;fmt.Fprintf(os.Stderr, &#34;upload canceled due to timeout, %v\n&#34;, err)&#xA;  &#x9;&#x9;} else {&#xA;  &#x9;&#x9;&#x9;fmt.Fprintf(os.Stderr, &#34;failed to upload object, %v\n&#34;, err)&#xA;  &#x9;&#x9;}&#xA;  &#x9;&#x9;os.Exit(1)&#xA;  &#x9;}&#xA;&#xA;  &#x9;fmt.Printf(&#34;successfully uploaded file to %s/%s\n&#34;, bucket, key)&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Overview of SDK&#39;s Packages&lt;/h3&gt; &#xA;&lt;p&gt;The SDK is composed of two main components, SDK core, and service clients. The SDK core packages are all available under the aws package at the root of the SDK. Each client for a supported AWS service is available within its own package under the service folder at the root of the SDK.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;aws - SDK core, provides common shared types such as Config, Logger, and utilities to make working with API parameters easier.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;awserr - Provides the error interface that the SDK will use for all errors that occur in the SDK&#39;s processing. This includes service API response errors as well. The Error type is made up of a code and message. Cast the SDK&#39;s returned error type to awserr.Error and call the Code method to compare returned error to specific error codes. See the package&#39;s documentation for additional values that can be extracted such as RequestID.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;credentials - Provides the types and built in credentials providers the SDK will use to retrieve AWS credentials to make API requests with. Nested under this folder are also additional credentials providers such as stscreds for assuming IAM roles, and ec2rolecreds for EC2 Instance roles.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;endpoints - Provides the AWS Regions and Endpoints metadata for the SDK. Use this to lookup AWS service endpoint information such as which services are in a region, and what regions a service is in. Constants are also provided for all region identifiers, e.g UsWest2RegionID for &#34;us-west-2&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;session - Provides initial default configuration, and load configuration from external sources such as environment and shared credentials file.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;request - Provides the API request sending, and retry logic for the SDK. This package also includes utilities for defining your own request retryer, and configuring how the SDK processes the request.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;service - Clients for AWS services. All services supported by the SDK are available under this folder.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to Use the SDK&#39;s AWS Service Clients&lt;/h3&gt; &#xA;&lt;p&gt;The SDK includes the Go types and utilities you can use to make requests to AWS service APIs. Within the service folder at the root of the SDK you&#39;ll find a package for each AWS service the SDK supports. All service clients follow common pattern of creation and usage.&lt;/p&gt; &#xA;&lt;p&gt;When creating a client for an AWS service you&#39;ll first need to have a Session value constructed. The Session provides shared configuration that can be shared between your service clients. When service clients are created you can pass in additional configuration via the aws.Config type to override configuration provided by in the Session to create service client instances with custom configuration.&lt;/p&gt; &#xA;&lt;p&gt;Once the service&#39;s client is created you can use it to make API requests the AWS service. These clients are safe to use concurrently.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring the SDK&lt;/h3&gt; &#xA;&lt;p&gt;In the AWS SDK for Go, you can configure settings for service clients, such as the log level and maximum number of retries. Most settings are optional; however, for each service client, you must specify a region and your credentials. The SDK uses these values to send requests to the correct AWS region and sign requests with the correct credentials. You can specify these values as part of a session or as environment variables.&lt;/p&gt; &#xA;&lt;p&gt;See the SDK&#39;s &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html&#34;&gt;configuration guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api/aws/session/&#34;&gt;session&lt;/a&gt; package documentation for more information on how to use Session with the SDK.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api/aws/#Config&#34;&gt;Config&lt;/a&gt; type in the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api/aws/&#34;&gt;aws&lt;/a&gt; package for more information on configuration options.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring Credentials&lt;/h3&gt; &#xA;&lt;p&gt;When using the SDK you&#39;ll generally need your AWS credentials to authenticate with AWS services. The SDK supports multiple methods of supporting these credentials. By default the SDK will source credentials automatically from its default credential chain. See the session package for more information on this chain, and how to configure it. The common items in the credential chain are the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Environment Credentials - Set of environment variables that are useful when sub processes are created for specific roles.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shared Credentials file (~/.aws/credentials) - This file stores your credentials based on a profile name and is useful for local development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;EC2 Instance Role Credentials - Use EC2 Instance Role to assign credentials to application running on an EC2 instance. This removes the need to manage credential files in production.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Credentials can be configured in code as well by setting the Config&#39;s Credentials value to a custom provider or using one of the providers included with the SDK to bypass the default credential chain and use a custom one. This is helpful when you want to instruct the SDK to only use a specific set of credentials or providers.&lt;/p&gt; &#xA;&lt;p&gt;This example creates a credential provider for assuming an IAM role, &#34;myRoleARN&#34; and configures the S3 service client to use that role for API requests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  // Initial credentials loaded from SDK&#39;s default credential chain. Such as&#xA;  // the environment, shared credentials (~/.aws/credentials), or EC2 Instance&#xA;  // Role. These credentials will be used to to make the STS Assume Role API.&#xA;  sess := session.Must(session.NewSession())&#xA;&#xA;  // Create the credentials from AssumeRoleProvider to assume the role&#xA;  // referenced by the &#34;myRoleARN&#34; ARN.&#xA;  creds := stscreds.NewCredentials(sess, &#34;myRoleArn&#34;)&#xA;&#xA;  // Create service client value configured for credentials&#xA;  // from assumed role.&#xA;  svc := s3.New(sess, &amp;amp;aws.Config{Credentials: creds})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials&#34;&gt;credentials&lt;/a&gt; package documentation for more information on credential providers included with the SDK, and how to customize the SDK&#39;s usage of credentials.&lt;/p&gt; &#xA;&lt;p&gt;The SDK has support for the shared configuration file (~/.aws/config). This support can be enabled by setting the environment variable, &#34;AWS_SDK_LOAD_CONFIG=1&#34;, or enabling the feature in code when creating a Session via the Option&#39;s SharedConfigState parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  sess := session.Must(session.NewSessionWithOptions(session.Options{&#xA;      SharedConfigState: session.SharedConfigEnable,&#xA;  }))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring AWS Region&lt;/h3&gt; &#xA;&lt;p&gt;In addition to the credentials you&#39;ll need to specify the region the SDK will use to make AWS API requests to. In the SDK you can specify the region either with an environment variable, or directly in code when a Session or service client is created. The last value specified in code wins if the region is specified multiple ways.&lt;/p&gt; &#xA;&lt;p&gt;To set the region via the environment variable set the &#34;AWS_REGION&#34; to the region you want to the SDK to use. Using this method to set the region will allow you to run your application in multiple regions without needing additional code in the application to select the region.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AWS_REGION=us-west-2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The endpoints package includes constants for all regions the SDK knows. The values are all suffixed with RegionID. These values are helpful, because they reduce the need to type the region string manually.&lt;/p&gt; &#xA;&lt;p&gt;To set the region on a Session use the aws package&#39;s Config struct parameter Region to the AWS region you want the service clients created from the session to use. This is helpful when you want to create multiple service clients, and all of the clients make API requests to the same region.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  sess := session.Must(session.NewSession(&amp;amp;aws.Config{&#xA;      Region: aws.String(endpoints.UsWest2RegionID),&#xA;  }))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/&#34;&gt;endpoints&lt;/a&gt; package for the AWS Regions and Endpoints metadata.&lt;/p&gt; &#xA;&lt;p&gt;In addition to setting the region when creating a Session you can also set the region on a per service client bases. This overrides the region of a Session. This is helpful when you want to create service clients in specific regions different from the Session&#39;s region.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  svc := s3.New(sess, &amp;amp;aws.Config{&#xA;      Region: aws.String(endpoints.UsWest2RegionID),&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api/aws/#Config&#34;&gt;Config&lt;/a&gt; type in the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api/aws/&#34;&gt;aws&lt;/a&gt; package for more information and additional options such as setting the Endpoint, and other service client configuration options.&lt;/p&gt; &#xA;&lt;h3&gt;Making API Requests&lt;/h3&gt; &#xA;&lt;p&gt;Once the client is created you can make an API request to the service. Each API method takes a input parameter, and returns the service response and an error. The SDK provides methods for making the API call in multiple ways.&lt;/p&gt; &#xA;&lt;p&gt;In this list we&#39;ll use the S3 ListObjects API as an example for the different ways of making API requests.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ListObjects - Base API operation that will make the API request to the service.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ListObjectsRequest - API methods suffixed with Request will construct the API request, but not send it. This is also helpful when you want to get a presigned URL for a request, and share the presigned URL instead of your application making the request directly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ListObjectsPages - Same as the base API operation, but uses a callback to automatically handle pagination of the API&#39;s response.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ListObjectsWithContext - Same as base API operation, but adds support for the Context pattern. This is helpful for controlling the canceling of in flight requests. See the Go standard library context package for more information. This method also takes request package&#39;s Option functional options as the variadic argument for modifying how the request will be made, or extracting information from the raw HTTP response.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ListObjectsPagesWithContext - same as ListObjectsPages, but adds support for the Context pattern. Similar to ListObjectsWithContext this method also takes the request package&#39;s Option function option types as the variadic argument.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition to the API operations the SDK also includes several higher level methods that abstract checking for and waiting for an AWS resource to be in a desired state. In this list we&#39;ll use WaitUntilBucketExists to demonstrate the different forms of waiters.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;WaitUntilBucketExists. - Method to make API request to query an AWS service for a resource&#39;s state. Will return successfully when that state is accomplished.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;WaitUntilBucketExistsWithContext - Same as WaitUntilBucketExists, but adds support for the Context pattern. In addition these methods take request package&#39;s WaiterOptions to configure the waiter, and how underlying request will be made by the SDK.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The API method will document which error codes the service might return for the operation. These errors will also be available as const strings prefixed with &#34;ErrCode&#34; in the service client&#39;s package. If there are no errors listed in the API&#39;s SDK documentation you&#39;ll need to consult the AWS service&#39;s API documentation for the errors that could be returned.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  ctx := context.Background()&#xA;&#xA;  result, err := svc.GetObjectWithContext(ctx, &amp;amp;s3.GetObjectInput{&#xA;      Bucket: aws.String(&#34;my-bucket&#34;),&#xA;      Key: aws.String(&#34;my-key&#34;),&#xA;  })&#xA;  if err != nil {&#xA;      // Cast err to awserr.Error to handle specific error codes.&#xA;      aerr, ok := err.(awserr.Error)&#xA;      if ok &amp;amp;&amp;amp; aerr.Code() == s3.ErrCodeNoSuchKey {&#xA;          // Specific error code handling&#xA;      }&#xA;      return err&#xA;  }&#xA;&#xA;  // Make sure to close the body when done with it for S3 GetObject APIs or&#xA;  // will leak connections.&#xA;  defer result.Body.Close()&#xA;&#xA;  fmt.Println(&#34;Object Size:&#34;, aws.Int64Value(result.ContentLength))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;API Request Pagination and Resource Waiters&lt;/h3&gt; &#xA;&lt;p&gt;Pagination helper methods are suffixed with &#34;Pages&#34;, and provide the functionality needed to round trip API page requests. Pagination methods take a callback function that will be called for each page of the API&#39;s response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;   objects := []string{}&#xA;   err := svc.ListObjectsPagesWithContext(ctx, &amp;amp;s3.ListObjectsInput{&#xA;       Bucket: aws.String(myBucket),&#xA;   }, func(p *s3.ListObjectsOutput, lastPage bool) bool {&#xA;       for _, o := range p.Contents {&#xA;           objects = append(objects, aws.StringValue(o.Key))&#xA;       }&#xA;       return true // continue paging&#xA;   })&#xA;   if err != nil {&#xA;       panic(fmt.Sprintf(&#34;failed to list objects for bucket, %s, %v&#34;, myBucket, err))&#xA;   }&#xA;&#xA;   fmt.Println(&#34;Objects in bucket:&#34;, objects)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Waiter helper methods provide the functionality to wait for an AWS resource state. These methods abstract the logic needed to check the state of an AWS resource, and wait until that resource is in a desired state. The waiter will block until the resource is in the state that is desired, an error occurs, or the waiter times out. If a resource times out the error code returned will be request.WaiterResourceNotReadyErrorCode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  err := svc.WaitUntilBucketExistsWithContext(ctx, &amp;amp;s3.HeadBucketInput{&#xA;      Bucket: aws.String(myBucket),&#xA;  })&#xA;  if err != nil {&#xA;      aerr, ok := err.(awserr.Error)&#xA;      if ok &amp;amp;&amp;amp; aerr.Code() == request.WaiterResourceNotReadyErrorCode {&#xA;          fmt.Fprintf(os.Stderr, &#34;timed out while waiting for bucket to exist&#34;)&#xA;      }&#xA;      panic(fmt.Errorf(&#34;failed to wait for bucket to exist, %v&#34;, err))&#xA;  }&#xA;  fmt.Println(&#34;Bucket&#34;, myBucket, &#34;exists&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;Please use these community resources for getting help. We use the GitHub issues for tracking bugs and feature requests.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask a question on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;StackOverflow&lt;/a&gt; and tag it with the &lt;a href=&#34;http://stackoverflow.com/questions/tagged/aws-sdk-go&#34;&gt;&lt;code&gt;aws-sdk-go&lt;/code&gt;&lt;/a&gt; tag.&lt;/li&gt; &#xA; &lt;li&gt;Come join the AWS SDK for Go community chat on &lt;a href=&#34;https://gitter.im/aws/aws-sdk-go&#34;&gt;gitter&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open a support ticket with &lt;a href=&#34;http://docs.aws.amazon.com/awssupport/latest/user/getting-started.html&#34;&gt;AWS Support&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you think you may have found a bug, please open an &lt;a href=&#34;https://github.com/aws/aws-sdk-go/issues/new/choose&#34;&gt;issue&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This SDK implements AWS service APIs. For general issues regarding the AWS services and their limitations, you may also take a look at the &lt;a href=&#34;https://forums.aws.amazon.com/&#34;&gt;Amazon Web Services Discussion Forums&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Opening Issues&lt;/h3&gt; &#xA;&lt;p&gt;If you encounter a bug with the AWS SDK for Go we would like to hear about it. Search the &lt;a href=&#34;https://github.com/aws/aws-sdk-go/issues&#34;&gt;existing issues&lt;/a&gt; and see if others are also experiencing the issue before opening a new issue. Please include the version of AWS SDK for Go, Go language, and OS you’re using. Please also include reproduction case when appropriate.&lt;/p&gt; &#xA;&lt;p&gt;The GitHub issues are intended for bug reports and feature requests. For help and questions with using AWS SDK for Go please make use of the resources listed in the &lt;a href=&#34;https://github.com/aws/aws-sdk-go#getting-help&#34;&gt;Getting Help&lt;/a&gt; section. Keeping the list of open issues lean will help us respond in a timely manner.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We work hard to provide a high-quality and useful SDK for our AWS services, and we greatly value feedback and contributions from our community. Please review our &lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-go/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; before submitting any &lt;a href=&#34;https://github.com/aws/aws-sdk-go/issues&#34;&gt;issues&lt;/a&gt; or &lt;a href=&#34;https://github.com/aws/aws-sdk-go/pulls&#34;&gt;pull requests&lt;/a&gt; to ensure we have all the necessary information to effectively respond to your bug report or contribution.&lt;/p&gt; &#xA;&lt;h2&gt;Maintenance and support for SDK major versions&lt;/h2&gt; &#xA;&lt;p&gt;For information about maintenance and support for SDK major versions and our underlying dependencies, see the following in the AWS SDKs and Tools Shared Configuration and Credentials Reference Guide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/credref/latest/refdocs/maint-policy.html&#34;&gt;AWS SDKs and Tools Maintenance Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/credref/latest/refdocs/version-support-matrix.html&#34;&gt;AWS SDKs and Tools Version Support Matrix&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/welcome.html&#34;&gt;Developer guide&lt;/a&gt; - This document is a general introduction on how to configure and make requests with the SDK. If this is your first time using the SDK, this documentation and the API documentation will help you get started. This document focuses on the syntax and behavior of the SDK. The &lt;a href=&#34;https://aws.amazon.com/documentation/&#34;&gt;Service Developer Guide&lt;/a&gt; will help you get started using specific AWS services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-go/api/&#34;&gt;SDK API Reference Documentation&lt;/a&gt; - Use this document to look up all API operation input and output parameters for AWS services supported by the SDK. The API reference also includes documentation of the SDK, and examples how to using the SDK, service client API operations, and API operation require parameters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/documentation/&#34;&gt;Service Documentation&lt;/a&gt; - Use this documentation to learn how to interface with AWS services. These guides are great for getting started with a service, or when looking for more information about a service. While this document is not required for coding, services may supply helpful samples to look out for.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aws/aws-sdk-go/tree/main/example&#34;&gt;SDK Examples&lt;/a&gt; - Included in the SDK&#39;s repo are several hand crafted examples using the SDK features and AWS services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://forums.aws.amazon.com/forum.jspa?forumID=293&#34;&gt;Forum&lt;/a&gt; - Ask questions, get help, and give feedback&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aws/aws-sdk-go/issues&#34;&gt;Issues&lt;/a&gt; - Report issues, submit pull requests, and get involved (see &lt;a href=&#34;http://aws.amazon.com/apache2.0/&#34;&gt;Apache 2.0 License&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>googleapis/google-cloud-go</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/googleapis/google-cloud-go</id>
    <link href="https://github.com/googleapis/google-cloud-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Google Cloud Client Libraries for Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Cloud Client Libraries for Go&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/cloud.google.com/go&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/cloud.google.com/go.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Go packages for &lt;a href=&#34;https://cloud.google.com&#34;&gt;Google Cloud Platform&lt;/a&gt; services.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;cloud.google.com/go&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the packages on your system, &lt;em&gt;do not clone the repo&lt;/em&gt;. Instead:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Change to your project directory:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /my/cloud/project&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get the package you want to use. Some products have their own module, so it&#39;s best to &lt;code&gt;go get&lt;/code&gt; the package(s) you want to use:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ go get cloud.google.com/go/firestore # Replace with the package you want to use.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Some of these packages are under development, and may occasionally make backwards-incompatible changes.&lt;/p&gt; &#xA;&lt;h2&gt;Supported APIs&lt;/h2&gt; &#xA;&lt;p&gt;For an updated list of all of our released APIs please see our &lt;a href=&#34;https://cloud.google.com/go/docs/reference&#34;&gt;reference docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-cloud-go/main/#supported-versions&#34;&gt;Go Versions Supported&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Our libraries are compatible with at least the three most recent, major Go releases. They are currently compatible with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go 1.18&lt;/li&gt; &#xA; &lt;li&gt;Go 1.17&lt;/li&gt; &#xA; &lt;li&gt;Go 1.16&lt;/li&gt; &#xA; &lt;li&gt;Go 1.15&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authorization&lt;/h2&gt; &#xA;&lt;p&gt;By default, each API will use &lt;a href=&#34;https://developers.google.com/identity/protocols/application-default-credentials&#34;&gt;Google Application Default Credentials&lt;/a&gt; for authorization credentials used in calling the API endpoints. This will allow your application to run in many environments without requiring explicit configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;client, err := storage.NewClient(ctx)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To authorize using a &lt;a href=&#34;https://cloud.google.com/iam/docs/managing-service-account-keys&#34;&gt;JSON key file&lt;/a&gt;, pass &lt;a href=&#34;https://pkg.go.dev/google.golang.org/api/option#WithCredentialsFile&#34;&gt;&lt;code&gt;option.WithCredentialsFile&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;NewClient&lt;/code&gt; function of the desired package. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;client, err := storage.NewClient(ctx, option.WithCredentialsFile(&#34;path/to/keyfile.json&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can exert more control over authorization by using the &lt;a href=&#34;https://pkg.go.dev/golang.org/x/oauth2&#34;&gt;&lt;code&gt;golang.org/x/oauth2&lt;/code&gt;&lt;/a&gt; package to create an &lt;code&gt;oauth2.TokenSource&lt;/code&gt;. Then pass &lt;a href=&#34;https://pkg.go.dev/google.golang.org/api/option#WithTokenSource&#34;&gt;&lt;code&gt;option.WithTokenSource&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;NewClient&lt;/code&gt; function: &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-cloud-go/main/#&#34; title=&#34;auth&#34;&gt;snip&lt;/a&gt;:# (auth-ts)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;tokenSource := ...&#xA;client, err := storage.NewClient(ctx, option.WithTokenSource(tokenSource))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome. Please, see the &lt;a href=&#34;https://github.com/GoogleCloudPlatform/google-cloud-go/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; document for details.&lt;/p&gt; &#xA;&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href=&#34;https://github.com/GoogleCloudPlatform/google-cloud-go/raw/main/CONTRIBUTING.md#contributor-code-of-conduct&#34;&gt;Contributor Code of Conduct&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/go/home&#34;&gt;Go on Google Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/go/getting-started&#34;&gt;Getting started with Go on Google Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/appengine/docs/standard/go/quickstart&#34;&gt;App Engine Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/functions/docs/quickstart-go&#34;&gt;Cloud Functions Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/run/docs/quickstarts/build-and-deploy#go&#34;&gt;Cloud Run Quickstart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pingcap/tidb</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/pingcap/tidb</id>
    <link href="https://github.com/pingcap/tidb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TiDB is an open-source, cloud-native, distributed, MySQL-Compatible database for elastic scale and real-time analytics. Try free: https://tidbcloud.com/signup&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pingcap/tidb/master/docs/logo_with_text.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pingcap/tidb/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pingcap/tidb.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/pingcap/tidb&#34;&gt;&lt;img src=&#34;https://travis-ci.org/pingcap/tidb.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/pingcap/tidb&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/pingcap/tidb&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pingcap/tidb/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/pingcap/tidb.svg?label=release&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pingcap/tidb/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/pingcap/tidb.svg?sanitize=true&#34; alt=&#34;GitHub release date&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/pingcap/tidb&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/pingcap/tidb.svg?style=shield&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/pingcap/tidb&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/pingcap/tidb/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/pingcap/tidb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Godoc-reference-blue.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is TiDB?&lt;/h2&gt; &#xA;&lt;p&gt;TiDB (&#34;Ti&#34; stands for Titanium) is an open-source NewSQL database that supports Hybrid Transactional and Analytical Processing (HTAP) workloads. It is MySQL compatible and features horizontal scalability, strong consistency, and high availability.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/overview#key-features&#34;&gt;Key features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pingcap/tidb/master/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/mysql-compatibility&#34;&gt;MySQL Compatibility&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details and latest updates, see &lt;a href=&#34;https://docs.pingcap.com/tidb/stable&#34;&gt;TiDB docs&lt;/a&gt; and &lt;a href=&#34;https://docs.pingcap.com/tidb/dev/release-notes&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;Start with TiDB Cloud&lt;/h3&gt; &#xA;&lt;p&gt;TiDB Cloud is the fully-managed service of TiDB, currently available on AWS and GCP.&lt;/p&gt; &#xA;&lt;p&gt;Quickly check out TiDB Cloud with &lt;a href=&#34;https://tidbcloud.com/signup&#34;&gt;a free trial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.pingcap.com/tidbcloud/tidb-cloud-quickstart&#34;&gt;TiDB Cloud Quick Start Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Start with TiDB&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/quick-start-with-tidb&#34;&gt;TiDB Quick Start Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Start developing TiDB&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://pingcap.github.io/tidb-dev-guide/get-started/introduction.html&#34;&gt;Get Started&lt;/a&gt; chapter of &lt;a href=&#34;https://pingcap.github.io/tidb-dev-guide/index.html&#34;&gt;TiDB Dev Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;You can join these groups and chats to discuss and ask TiDB related questions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://internals.tidb.io/&#34;&gt;TiDB Internals Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.tidb.io/invite?team=tidb-community&amp;amp;channel=everyone&amp;amp;ref=pingcap-tidb&#34;&gt;Slack Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asktug.com&#34;&gt;TiDB User Group Forum (Chinese)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, you may enjoy following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/PingCAP&#34;&gt;@PingCAP&lt;/a&gt; on Twitter&lt;/li&gt; &#xA; &lt;li&gt;Question tagged &lt;a href=&#34;https://stackoverflow.com/questions/tagged/tidb&#34;&gt;#tidb on StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The PingCAP Team &lt;a href=&#34;https://en.pingcap.com/blog&#34;&gt;English Blog&lt;/a&gt; and &lt;a href=&#34;https://pingcap.com/blog-cn/&#34;&gt;Chinese Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For support, please contact &lt;a href=&#34;http://bit.ly/contact_us_via_github&#34;&gt;PingCAP&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/pingcap/community&#34;&gt;community repository&lt;/a&gt; hosts all information about the TiDB community, including how to contribute to TiDB, how TiDB community is governed, how special interest groups are organized, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pingcap/tidb-map/raw/master/maps/contribution-map.md#tidb-is-an-open-source-distributed-htap-database-compatible-with-the-mysql-protocol&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pingcap/tidb/master/docs/contribution-map.png&#34; alt=&#34;contribution-map&#34; width=&#34;180&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contributions are welcomed and greatly appreciated. See &lt;a href=&#34;https://pingcap.github.io/tidb-dev-guide/contribute-to-tidb/introduction.html&#34;&gt;Contribution to TiDB&lt;/a&gt; for details on typical contribution workflows. For more contributing information, click on the contributor icon above.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;View the current list of in-production TiDB adopters &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/adopters&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Case studies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pingcap.com/case-studies&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pingcap.com/cases-cn/&#34;&gt;简体中文&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pingcap/tidb/master/docs/architecture.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;TiDB is under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/pingcap/tidb/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://github.com/cznic&#34;&gt;cznic&lt;/a&gt; for providing some great open source tools.&lt;/li&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://github.com/syndtr/goleveldb&#34;&gt;GolevelDB&lt;/a&gt;, &lt;a href=&#34;https://github.com/boltdb/bolt&#34;&gt;BoltDB&lt;/a&gt;, and &lt;a href=&#34;https://github.com/facebook/rocksdb&#34;&gt;RocksDB&lt;/a&gt; for their powerful storage engines.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>prometheus/prometheus</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/prometheus/prometheus</id>
    <link href="https://github.com/prometheus/prometheus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Prometheus monitoring system and time series database.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prometheus&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/prometheus/prometheus&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/prometheus/prometheus/tree/main.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/prometheus/prometheus&#34;&gt;&lt;img src=&#34;https://quay.io/repository/prometheus/prometheus/status&#34; alt=&#34;Docker Repository on Quay&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/prom/prometheus/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/prom/prometheus.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/prometheus/prometheus&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/prometheus/prometheus&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/486&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/486/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/prometheus/prometheus&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:prometheus&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/prometheus.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://prometheus.io&#34;&gt;prometheus.io&lt;/a&gt; for the full documentation, examples and guides.&lt;/p&gt; &#xA;&lt;p&gt;Prometheus, a &lt;a href=&#34;https://cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; project, is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts when specified conditions are observed.&lt;/p&gt; &#xA;&lt;p&gt;The features that distinguish Prometheus from other metrics and monitoring systems are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;strong&gt;multi-dimensional&lt;/strong&gt; data model (time series defined by metric name and set of key/value dimensions)&lt;/li&gt; &#xA; &lt;li&gt;PromQL, a &lt;strong&gt;powerful and flexible query language&lt;/strong&gt; to leverage this dimensionality&lt;/li&gt; &#xA; &lt;li&gt;No dependency on distributed storage; &lt;strong&gt;single server nodes are autonomous&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;An HTTP &lt;strong&gt;pull model&lt;/strong&gt; for time series collection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pushing time series&lt;/strong&gt; is supported via an intermediary gateway for batch jobs&lt;/li&gt; &#xA; &lt;li&gt;Targets are discovered via &lt;strong&gt;service discovery&lt;/strong&gt; or &lt;strong&gt;static configuration&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Multiple modes of &lt;strong&gt;graphing and dashboarding support&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for hierarchical and horizontal &lt;strong&gt;federation&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/prometheus/prometheus@c34257d069c630685da35bcef084632ffd5d6209/documentation/images/architecture.svg?sanitize=true&#34; alt=&#34;Architecture overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;There are various ways of installing Prometheus.&lt;/p&gt; &#xA;&lt;h3&gt;Precompiled binaries&lt;/h3&gt; &#xA;&lt;p&gt;Precompiled binaries for released versions are available in the &lt;a href=&#34;https://prometheus.io/download/&#34;&gt;&lt;em&gt;download&lt;/em&gt; section&lt;/a&gt; on &lt;a href=&#34;https://prometheus.io&#34;&gt;prometheus.io&lt;/a&gt;. Using the latest production release binary is the recommended way of installing Prometheus. See the &lt;a href=&#34;https://prometheus.io/docs/introduction/install/&#34;&gt;Installing&lt;/a&gt; chapter in the documentation for all the details.&lt;/p&gt; &#xA;&lt;h3&gt;Docker images&lt;/h3&gt; &#xA;&lt;p&gt;Docker images are available on &lt;a href=&#34;https://quay.io/repository/prometheus/prometheus&#34;&gt;Quay.io&lt;/a&gt; or &lt;a href=&#34;https://hub.docker.com/r/prom/prometheus/&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can launch a Prometheus container for trying it out with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name prometheus -d -p 127.0.0.1:9090:9090 prom/prometheus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prometheus will now be reachable at &lt;a href=&#34;http://localhost:9090/&#34;&gt;http://localhost:9090/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building from source&lt;/h3&gt; &#xA;&lt;p&gt;To build Prometheus from source code, You need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;version 1.17 or greater&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;NodeJS &lt;a href=&#34;https://nodejs.org/&#34;&gt;version 16 or greater&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;npm &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;version 7 or greater&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can directly use the &lt;code&gt;go&lt;/code&gt; tool to download and install the &lt;code&gt;prometheus&lt;/code&gt; and &lt;code&gt;promtool&lt;/code&gt; binaries into your &lt;code&gt;GOPATH&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GO111MODULE=on go install github.com/prometheus/prometheus/cmd/...&#xA;prometheus --config.file=your_config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, when using &lt;code&gt;go install&lt;/code&gt; to build Prometheus, Prometheus will expect to be able to read its web assets from local filesystem directories under &lt;code&gt;web/ui/static&lt;/code&gt; and &lt;code&gt;web/ui/templates&lt;/code&gt;. In order for these assets to be found, you will have to run Prometheus from the root of the cloned repository. Note also that these directories do not include the React UI unless it has been built explicitly using &lt;code&gt;make assets&lt;/code&gt; or &lt;code&gt;make build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An example of the above configuration file can be found &lt;a href=&#34;https://github.com/prometheus/prometheus/raw/main/documentation/examples/prometheus.yml&#34;&gt;here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also clone the repository yourself and build using &lt;code&gt;make build&lt;/code&gt;, which will compile in the web assets so that Prometheus can be run from anywhere:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p $GOPATH/src/github.com/prometheus&#xA;cd $GOPATH/src/github.com/prometheus&#xA;git clone https://github.com/prometheus/prometheus.git&#xA;cd prometheus&#xA;make build&#xA;./prometheus --config.file=your_config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Makefile provides several targets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;build&lt;/em&gt;: build the &lt;code&gt;prometheus&lt;/code&gt; and &lt;code&gt;promtool&lt;/code&gt; binaries (includes building and compiling in web assets)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;test&lt;/em&gt;: run the tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;test-short&lt;/em&gt;: run the short tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;format&lt;/em&gt;: format the source code&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;vet&lt;/em&gt;: check the source code for common errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;assets&lt;/em&gt;: build the React UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Service discovery plugins&lt;/h3&gt; &#xA;&lt;p&gt;Prometheus is bundled with many service discovery plugins. When building Prometheus from source, you can edit the &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/prometheus/main/plugins.yml&#34;&gt;plugins.yml&lt;/a&gt; file to disable some service discoveries. The file is a yaml-formated list of go import path that will be built into the Prometheus binary.&lt;/p&gt; &#xA;&lt;p&gt;After you have changed the file, you need to run &lt;code&gt;make build&lt;/code&gt; again.&lt;/p&gt; &#xA;&lt;p&gt;If you are using another method to compile Prometheus, &lt;code&gt;make plugins&lt;/code&gt; will generate the plugins file accordingly.&lt;/p&gt; &#xA;&lt;p&gt;If you add out-of-tree plugins, which we do not endorse at the moment, additional steps might be needed to adjust the &lt;code&gt;go.mod&lt;/code&gt; and &lt;code&gt;go.sum&lt;/code&gt; files. As always, be extra careful when loading third party code.&lt;/p&gt; &#xA;&lt;h3&gt;Building the Docker image&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;make docker&lt;/code&gt; target is designed for use in our CI system. You can build a docker image locally with the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make promu&#xA;promu crossbuild -p linux/amd64&#xA;make npm_licenses&#xA;make common-docker-amd64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;NB&lt;/em&gt; if you are on a Mac, you will need &lt;a href=&#34;https://formulae.brew.sh/formula/gnu-tar&#34;&gt;gnu-tar&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using Prometheus as a Go Library&lt;/h2&gt; &#xA;&lt;h3&gt;Remote Write&lt;/h3&gt; &#xA;&lt;p&gt;We are publishing our Remote Write protobuf independently at &lt;a href=&#34;https://buf.build/prometheus/prometheus/assets&#34;&gt;buf.build&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use that as a library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get go.buf.build/protocolbuffers/go/prometheus/prometheus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is experimental.&lt;/p&gt; &#xA;&lt;h3&gt;Prometheus code base&lt;/h3&gt; &#xA;&lt;p&gt;In order to comply with &lt;a href=&#34;https://go.dev/ref/mod#versions&#34;&gt;go mod&lt;/a&gt; rules, Prometheus release number do not exactly match Go module releases. For the Prometheus v2.y.z releases, we are publishing equivalent v0.y.z tags.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, a user that would want to use Prometheus v2.35.0 as a library could do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get github.com/prometheus/prometheus@v0.35.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This solution makes it clear that we might break our internal Go APIs between minor user-facing releases, as &lt;a href=&#34;https://semver.org/#spec-item-4&#34;&gt;breaking changes are allowed in major version zero&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;React UI Development&lt;/h2&gt; &#xA;&lt;p&gt;For more information on building, running, and developing on the React-based UI, see the React app&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/prometheus/main/web/ui/README.md&#34;&gt;README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;More information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Godoc documentation is available via &lt;a href=&#34;https://pkg.go.dev/github.com/prometheus/prometheus&#34;&gt;pkg.go.dev&lt;/a&gt;. Due to peculiarities of Go Modules, v2.x.y will be displayed as v0.x.y.&lt;/li&gt; &#xA; &lt;li&gt;You will find a CircleCI configuration in &lt;a href=&#34;https://raw.githubusercontent.com/prometheus/prometheus/main/.circleci/config.yml&#34;&gt;&lt;code&gt;.circleci/config.yml&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://prometheus.io/community&#34;&gt;Community page&lt;/a&gt; for how to reach the Prometheus developers and users on various communication channels.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://github.com/prometheus/prometheus/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License 2.0, see &lt;a href=&#34;https://github.com/prometheus/prometheus/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>containers/skopeo</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/containers/skopeo</id>
    <link href="https://github.com/containers/skopeo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Work with remote images registries - retrieving information, images, signing content&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;skopeo &lt;a href=&#34;https://travis-ci.org/containers/skopeo&#34;&gt;&lt;img src=&#34;https://travis-ci.org/containers/skopeo.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;img src=&#34;https://cdn.rawgit.com/containers/skopeo/master/docs/skopeo.svg?sanitize=true&#34; width=&#34;250&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; is a command line utility that performs various operations on container images and image repositories.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; does not require the user to be running as root to do most of its operations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; does not require a daemon to be running to perform its operations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; can work with &lt;a href=&#34;https://github.com/opencontainers/image-spec&#34;&gt;OCI images&lt;/a&gt; as well as the original Docker v2 images.&lt;/p&gt; &#xA;&lt;p&gt;Skopeo works with API V2 container image registries such as &lt;a href=&#34;https://docker.io&#34;&gt;docker.io&lt;/a&gt; and &lt;a href=&#34;https://quay.io&#34;&gt;quay.io&lt;/a&gt; registries, private registries, local directories and local OCI-layout directories. Skopeo can perform operations which consist of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copying an image from and to various storage mechanisms. For example you can copy images from one registry to another, without requiring privilege.&lt;/li&gt; &#xA; &lt;li&gt;Inspecting a remote image showing its properties including its layers, without requiring you to pull the image to the host.&lt;/li&gt; &#xA; &lt;li&gt;Deleting an image from an image repository.&lt;/li&gt; &#xA; &lt;li&gt;Syncing an external image repository to an internal registry for air-gapped deployments.&lt;/li&gt; &#xA; &lt;li&gt;When required by the repository, skopeo can pass the appropriate credentials and certificates for authentication.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Skopeo operates on the following image and repository types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;containers-storage:docker-reference An image located in a local containers/storage image store. Both the location and image store are specified in /etc/containers/storage.conf. (This is the backend for &lt;a href=&#34;https://podman.io&#34;&gt;Podman&lt;/a&gt;, &lt;a href=&#34;https://cri-o.io&#34;&gt;CRI-O&lt;/a&gt;, &lt;a href=&#34;https://buildah.io&#34;&gt;Buildah&lt;/a&gt; and friends)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;dir:path An existing local directory path storing the manifest, layer tarballs and signatures as individual files. This is a non-standardized format, primarily useful for debugging or noninvasive container inspection.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;docker://docker-reference An image in a registry implementing the &#34;Docker Registry HTTP API V2&#34;. By default, uses the authorization state in &lt;code&gt;$XDG_RUNTIME_DIR/containers/auth.json&lt;/code&gt;, which is set using &lt;code&gt;skopeo login&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;docker-archive:path[:docker-reference] An image is stored in a &lt;code&gt;docker save&lt;/code&gt;-formatted file. docker-reference is only used when creating such a file, and it must not contain a digest.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;docker-daemon:docker-reference An image docker-reference stored in the docker daemon internal storage. docker-reference must contain either a tag or a digest. Alternatively, when reading images, the format can also be docker-daemon:algo:digest (an image ID).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;oci:path:tag An image tag in a directory compliant with &#34;Open Container Image Layout Specification&#34; at path.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Inspecting a repository&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; is able to &lt;em&gt;inspect&lt;/em&gt; a repository on a container registry and fetch images layers. The &lt;em&gt;inspect&lt;/em&gt; command fetches the repository&#39;s manifest and it is able to show you a &lt;code&gt;docker inspect&lt;/code&gt;-like json output about a whole repository or a tag. This tool, in contrast to &lt;code&gt;docker inspect&lt;/code&gt;, helps you gather useful information about a repository or a tag before pulling it (using disk space). The inspect command can show you which tags are available for the given repository, the labels the image has, the creation date and operating system of the image and more.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;h4&gt;Show properties of fedora:latest&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo inspect docker://registry.fedoraproject.org/fedora:latest&#xA;{&#xA;    &#34;Name&#34;: &#34;registry.fedoraproject.org/fedora&#34;,&#xA;    &#34;Digest&#34;: &#34;sha256:655721ff613ee766a4126cb5e0d5ae81598e1b0c3bcf7017c36c4d72cb092fe9&#34;,&#xA;    &#34;RepoTags&#34;: [&#xA;        &#34;24&#34;,&#xA;        &#34;25&#34;,&#xA;        &#34;26-modular&#34;,&#xA;&#x9;...&#xA;    ],&#xA;    &#34;Created&#34;: &#34;2020-04-29T06:48:16Z&#34;,&#xA;    &#34;DockerVersion&#34;: &#34;1.10.1&#34;,&#xA;    &#34;Labels&#34;: {&#xA;        &#34;license&#34;: &#34;MIT&#34;,&#xA;        &#34;name&#34;: &#34;fedora&#34;,&#xA;        &#34;vendor&#34;: &#34;Fedora Project&#34;,&#xA;        &#34;version&#34;: &#34;32&#34;&#xA;    },&#xA;    &#34;Architecture&#34;: &#34;amd64&#34;,&#xA;    &#34;Os&#34;: &#34;linux&#34;,&#xA;    &#34;Layers&#34;: [&#xA;        &#34;sha256:3088721d7dbf674fc0be64cd3cf00c25aab921cacf35fa0e7b1578500a3e1653&#34;&#xA;    ],&#xA;    &#34;Env&#34;: [&#xA;        &#34;DISTTAG=f32container&#34;,&#xA;        &#34;FGC=f32&#34;,&#xA;        &#34;container=oci&#34;&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Show container configuration from &lt;code&gt;fedora:latest&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo inspect --config docker://registry.fedoraproject.org/fedora:latest  | jq&#xA;{&#xA;  &#34;created&#34;: &#34;2020-04-29T06:48:16Z&#34;,&#xA;  &#34;architecture&#34;: &#34;amd64&#34;,&#xA;  &#34;os&#34;: &#34;linux&#34;,&#xA;  &#34;config&#34;: {&#xA;    &#34;Env&#34;: [&#xA;      &#34;DISTTAG=f32container&#34;,&#xA;      &#34;FGC=f32&#34;,&#xA;      &#34;container=oci&#34;&#xA;    ],&#xA;    &#34;Cmd&#34;: [&#xA;      &#34;/bin/bash&#34;&#xA;    ],&#xA;    &#34;Labels&#34;: {&#xA;      &#34;license&#34;: &#34;MIT&#34;,&#xA;      &#34;name&#34;: &#34;fedora&#34;,&#xA;      &#34;vendor&#34;: &#34;Fedora Project&#34;,&#xA;      &#34;version&#34;: &#34;32&#34;&#xA;    }&#xA;  },&#xA;  &#34;rootfs&#34;: {&#xA;    &#34;type&#34;: &#34;layers&#34;,&#xA;    &#34;diff_ids&#34;: [&#xA;      &#34;sha256:a4c0fa2b217d3fd63d51e55a6fd59432e543d499c0df2b1acd48fbe424f2ddd1&#34;&#xA;    ]&#xA;  },&#xA;  &#34;history&#34;: [&#xA;    {&#xA;      &#34;created&#34;: &#34;2020-04-29T06:48:16Z&#34;,&#xA;      &#34;comment&#34;: &#34;Created by Image Factory&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Show unverified image&#39;s digest&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo inspect docker://registry.fedoraproject.org/fedora:latest | jq &#39;.Digest&#39;&#xA;&#34;sha256:655721ff613ee766a4126cb5e0d5ae81598e1b0c3bcf7017c36c4d72cb092fe9&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copying images&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; can copy container images between various storage mechanisms, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Container registries&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The Quay, Docker Hub, OpenShift, GCR, Artifactory ...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Container Storage backends&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/containers/storage&#34;&gt;github.com/containers/storage&lt;/a&gt; (Backend for &lt;a href=&#34;https://podman.io&#34;&gt;Podman&lt;/a&gt;, &lt;a href=&#34;https://cri-o.io&#34;&gt;CRI-O&lt;/a&gt;, &lt;a href=&#34;https://buildah.io&#34;&gt;Buildah&lt;/a&gt; and friends)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Docker daemon storage&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Local directories&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Local OCI-layout directories&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo copy docker://quay.io/buildah/stable docker://registry.internal.company.com/buildah&#xA;$ skopeo copy oci:busybox_ocilayout:latest dir:existingemptydirectory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deleting images&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo delete docker://localhost:5000/imagename:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Syncing registries&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo sync --src docker --dest dir registry.example.com/busybox /media/usb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authenticating to a registry&lt;/h2&gt; &#xA;&lt;h4&gt;Private registries with authentication&lt;/h4&gt; &#xA;&lt;p&gt;skopeo uses credentials from the --creds (for skopeo inspect|delete) or --src-creds|--dest-creds (for skopeo copy) flags, if set; otherwise it uses configuration set by skopeo login, podman login, buildah login, or docker login.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo login --username USER myregistrydomain.com:5000&#xA;Password:&#xA;$ skopeo inspect docker://myregistrydomain.com:5000/busybox&#xA;{&#34;Tag&#34;:&#34;latest&#34;,&#34;Digest&#34;:&#34;sha256:473bb2189d7b913ed7187a33d11e743fdc2f88931122a44d91a301b64419f092&#34;,&#34;RepoTags&#34;:[&#34;latest&#34;],&#34;Comment&#34;:&#34;&#34;,&#34;Created&#34;:&#34;2016-01-15T18:06:41.282540103Z&#34;,&#34;ContainerConfig&#34;:{&#34;Hostname&#34;:&#34;aded96b43f48&#34;,&#34;Domainname&#34;:&#34;&#34;,&#34;User&#34;:&#34;&#34;,&#34;AttachStdin&#34;:false,&#34;AttachStdout&#34;:false,&#34;AttachStderr&#34;:false,&#34;Tty&#34;:false,&#34;OpenStdin&#34;:false,&#34;StdinOnce&#34;:false,&#34;Env&#34;:null,&#34;Cmd&#34;:[&#34;/bin/sh&#34;,&#34;-c&#34;,&#34;#(nop) CMD [\&#34;sh\&#34;]&#34;],&#34;Image&#34;:&#34;9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33&#34;,&#34;Volumes&#34;:null,&#34;WorkingDir&#34;:&#34;&#34;,&#34;Entrypoint&#34;:null,&#34;OnBuild&#34;:null,&#34;Labels&#34;:null},&#34;DockerVersion&#34;:&#34;1.8.3&#34;,&#34;Author&#34;:&#34;&#34;,&#34;Config&#34;:{&#34;Hostname&#34;:&#34;aded96b43f48&#34;,&#34;Domainname&#34;:&#34;&#34;,&#34;User&#34;:&#34;&#34;,&#34;AttachStdin&#34;:false,&#34;AttachStdout&#34;:false,&#34;AttachStderr&#34;:false,&#34;Tty&#34;:false,&#34;OpenStdin&#34;:false,&#34;StdinOnce&#34;:false,&#34;Env&#34;:null,&#34;Cmd&#34;:[&#34;sh&#34;],&#34;Image&#34;:&#34;9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33&#34;,&#34;Volumes&#34;:null,&#34;WorkingDir&#34;:&#34;&#34;,&#34;Entrypoint&#34;:null,&#34;OnBuild&#34;:null,&#34;Labels&#34;:null},&#34;Architecture&#34;:&#34;amd64&#34;,&#34;Os&#34;:&#34;linux&#34;}&#xA;$ skopeo logout myregistrydomain.com:5000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using --creds directly&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo inspect --creds=testuser:testpassword docker://myregistrydomain.com:5000/busybox&#xA;{&#34;Tag&#34;:&#34;latest&#34;,&#34;Digest&#34;:&#34;sha256:473bb2189d7b913ed7187a33d11e743fdc2f88931122a44d91a301b64419f092&#34;,&#34;RepoTags&#34;:[&#34;latest&#34;],&#34;Comment&#34;:&#34;&#34;,&#34;Created&#34;:&#34;2016-01-15T18:06:41.282540103Z&#34;,&#34;ContainerConfig&#34;:{&#34;Hostname&#34;:&#34;aded96b43f48&#34;,&#34;Domainname&#34;:&#34;&#34;,&#34;User&#34;:&#34;&#34;,&#34;AttachStdin&#34;:false,&#34;AttachStdout&#34;:false,&#34;AttachStderr&#34;:false,&#34;Tty&#34;:false,&#34;OpenStdin&#34;:false,&#34;StdinOnce&#34;:false,&#34;Env&#34;:null,&#34;Cmd&#34;:[&#34;/bin/sh&#34;,&#34;-c&#34;,&#34;#(nop) CMD [\&#34;sh\&#34;]&#34;],&#34;Image&#34;:&#34;9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33&#34;,&#34;Volumes&#34;:null,&#34;WorkingDir&#34;:&#34;&#34;,&#34;Entrypoint&#34;:null,&#34;OnBuild&#34;:null,&#34;Labels&#34;:null},&#34;DockerVersion&#34;:&#34;1.8.3&#34;,&#34;Author&#34;:&#34;&#34;,&#34;Config&#34;:{&#34;Hostname&#34;:&#34;aded96b43f48&#34;,&#34;Domainname&#34;:&#34;&#34;,&#34;User&#34;:&#34;&#34;,&#34;AttachStdin&#34;:false,&#34;AttachStdout&#34;:false,&#34;AttachStderr&#34;:false,&#34;Tty&#34;:false,&#34;OpenStdin&#34;:false,&#34;StdinOnce&#34;:false,&#34;Env&#34;:null,&#34;Cmd&#34;:[&#34;sh&#34;],&#34;Image&#34;:&#34;9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33&#34;,&#34;Volumes&#34;:null,&#34;WorkingDir&#34;:&#34;&#34;,&#34;Entrypoint&#34;:null,&#34;OnBuild&#34;:null,&#34;Labels&#34;:null},&#34;Architecture&#34;:&#34;amd64&#34;,&#34;Os&#34;:&#34;linux&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ skopeo copy --src-creds=testuser:testpassword docker://myregistrydomain.com:5000/private oci:local_oci_image&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/install.md&#34;&gt;Obtaining skopeo&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For a detailed description how to install or build skopeo, see &lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/install.md&#34;&gt;install.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; if you want to collaborate in the project.&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-copy.1.md&#34;&gt;skopeo-copy(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Copy an image (manifest, filesystem layers, signatures) from one location to another.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-delete.1.md&#34;&gt;skopeo-delete(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mark the image-name for later deletion by the registry&#39;s garbage collector.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-inspect.1.md&#34;&gt;skopeo-inspect(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Return low-level information about image-name in a registry.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-list-tags.1.md&#34;&gt;skopeo-list-tags(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Return a list of tags for the transport-specific image repository.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-login.1.md&#34;&gt;skopeo-login(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Login to a container registry.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-logout.1.md&#34;&gt;skopeo-logout(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Logout of a container registry.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-manifest-digest.1.md&#34;&gt;skopeo-manifest-digest(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Compute a manifest digest for a manifest-file and write it to standard output.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-standalone-sign.1.md&#34;&gt;skopeo-standalone-sign(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Debugging tool - Publish and sign an image in one step.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-standalone-verify.1.md&#34;&gt;skopeo-standalone-verify(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Verify an image signature.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-sync.1.md&#34;&gt;skopeo-sync(1)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Synchronize images between container registries and local directories.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;skopeo is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/containers/skopeo/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hashicorp/vault</title>
    <updated>2022-06-03T01:40:29Z</updated>
    <id>tag:github.com,2022-06-03:/hashicorp/vault</id>
    <link href="https://github.com/hashicorp/vault" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for secrets management, encryption as a service, and privileged access management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vault &lt;a href=&#34;https://circleci.com/gh/hashicorp/vault&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/hashicorp/vault.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.hashicorp.com/products/vault/?utm_source=github&amp;amp;utm_medium=banner&amp;amp;utm_campaign=github-vault-enterprise&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/vault-enterprise-yellow.svg?colorB=7c8797&amp;amp;colorA=000000&#34; alt=&#34;vault enterprise&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We take Vault&#39;s security and our users&#39; trust very seriously. If you believe you have found a security issue in Vault, &lt;em&gt;please responsibly disclose&lt;/em&gt; by contacting us at &lt;a href=&#34;mailto:security@hashicorp.com&#34;&gt;security@hashicorp.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://www.vaultproject.io&#34;&gt;https://www.vaultproject.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Announcement list: &lt;a href=&#34;https://groups.google.com/group/hashicorp-announce&#34;&gt;Google Groups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discussion forum: &lt;a href=&#34;https://discuss.hashicorp.com/c/vault&#34;&gt;Discuss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://www.vaultproject.io/docs/&#34;&gt;https://www.vaultproject.io/docs/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorials: &lt;a href=&#34;https://learn.hashicorp.com/vault&#34;&gt;HashiCorp&#39;s Learn Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Certification Exam: &lt;a href=&#34;https://www.hashicorp.com/certification/#hashicorp-certified-vault-associate&#34;&gt;Vault Associate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300&#34; alt=&#34;Vault Logo&#34; src=&#34;https://github.com/hashicorp/vault/raw/f22d202cde2018f9455dec755118a9b84586e082/Vault_PrimaryLogo_Black.png&#34;&gt; &#xA;&lt;p&gt;Vault is a tool for securely accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, certificates, and more. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log.&lt;/p&gt; &#xA;&lt;p&gt;A modern system requires access to a multitude of secrets: database credentials, API keys for external services, credentials for service-oriented architecture communication, etc. Understanding who is accessing what secrets is already very difficult and platform-specific. Adding on key rolling, secure storage, and detailed audit logs is almost impossible without a custom solution. This is where Vault steps in.&lt;/p&gt; &#xA;&lt;p&gt;The key features of Vault are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Secret Storage&lt;/strong&gt;: Arbitrary key/value secrets can be stored in Vault. Vault encrypts these secrets prior to writing them to persistent storage, so gaining access to the raw storage isn&#39;t enough to access your secrets. Vault can write to disk, &lt;a href=&#34;https://www.consul.io&#34;&gt;Consul&lt;/a&gt;, and more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dynamic Secrets&lt;/strong&gt;: Vault can generate secrets on-demand for some systems, such as AWS or SQL databases. For example, when an application needs to access an S3 bucket, it asks Vault for credentials, and Vault will generate an AWS keypair with valid permissions on demand. After creating these dynamic secrets, Vault will also automatically revoke them after the lease is up.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Encryption&lt;/strong&gt;: Vault can encrypt and decrypt data without storing it. This allows security teams to define encryption parameters and developers to store encrypted data in a location such as a SQL database without having to design their own encryption methods.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Leasing and Renewal&lt;/strong&gt;: All secrets in Vault have a &lt;em&gt;lease&lt;/em&gt; associated with it. At the end of the lease, Vault will automatically revoke that secret. Clients are able to renew leases via built-in renew APIs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Revocation&lt;/strong&gt;: Vault has built-in support for secret revocation. Vault can revoke not only single secrets, but a tree of secrets, for example all secrets read by a specific user, or all secrets of a particular type. Revocation assists in key rolling as well as locking down systems in the case of an intrusion.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation, Getting Started, and Certification Exams&lt;/h2&gt; &#xA;&lt;p&gt;Documentation is available on the &lt;a href=&#34;https://www.vaultproject.io/docs/&#34;&gt;Vault website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re new to Vault and want to get started with security automation, please check out our &lt;a href=&#34;https://learn.hashicorp.com/collections/vault/getting-started&#34;&gt;Getting Started guides&lt;/a&gt; on HashiCorp&#39;s learning platform. There are also &lt;a href=&#34;https://learn.hashicorp.com/vault&#34;&gt;additional guides&lt;/a&gt; to continue your learning.&lt;/p&gt; &#xA;&lt;p&gt;For examples of how to interact with Vault from inside your application in different programming languages, see the &lt;a href=&#34;https://github.com/hashicorp/vault-examples&#34;&gt;vault-examples&lt;/a&gt; repo. An out-of-the-box &lt;a href=&#34;https://github.com/hashicorp/hello-vault-go&#34;&gt;sample application&lt;/a&gt; is also available.&lt;/p&gt; &#xA;&lt;p&gt;Show off your Vault knowledge by passing a certification exam. Visit the &lt;a href=&#34;https://www.hashicorp.com/certification/#hashicorp-certified-vault-associate&#34;&gt;certification page&lt;/a&gt; for information about exams and find &lt;a href=&#34;https://learn.hashicorp.com/collections/vault/certification&#34;&gt;study materials&lt;/a&gt; on HashiCorp&#39;s learning platform.&lt;/p&gt; &#xA;&lt;h2&gt;Developing Vault&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to work on Vault itself or any of its built-in systems, you&#39;ll first need &lt;a href=&#34;https://www.golang.org&#34;&gt;Go&lt;/a&gt; installed on your machine. Go version 1.17.9+ is &lt;em&gt;required&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For local dev first make sure Go is properly installed, including setting up a &lt;a href=&#34;https://golang.org/doc/code.html#GOPATH&#34;&gt;GOPATH&lt;/a&gt;. Ensure that &lt;code&gt;$GOPATH/bin&lt;/code&gt; is in your path as some distributions bundle old version of build tools. Next, clone this repository. Vault uses &lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34;&gt;Go Modules&lt;/a&gt;, so it is recommended that you clone the repository &lt;em&gt;&lt;strong&gt;outside&lt;/strong&gt;&lt;/em&gt; of the GOPATH. You can then download any required build tools by bootstrapping your environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make bootstrap&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To compile a development version of Vault, run &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;make dev&lt;/code&gt;. This will put the Vault binary in the &lt;code&gt;bin&lt;/code&gt; and &lt;code&gt;$GOPATH/bin&lt;/code&gt; folders:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make dev&#xA;...&#xA;$ bin/vault&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To compile a development version of Vault with the UI, run &lt;code&gt;make static-dist dev-ui&lt;/code&gt;. This will put the Vault binary in the &lt;code&gt;bin&lt;/code&gt; and &lt;code&gt;$GOPATH/bin&lt;/code&gt; folders:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make static-dist dev-ui&#xA;...&#xA;$ bin/vault&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run tests, type &lt;code&gt;make test&lt;/code&gt;. Note: this requires Docker to be installed. If this exits with exit status 0, then everything is working!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make test&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re developing a specific package, you can run tests for just that package by specifying the &lt;code&gt;TEST&lt;/code&gt; variable. For example below, only &lt;code&gt;vault&lt;/code&gt; package tests will be run.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make test TEST=./vault&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Acceptance Tests&lt;/h3&gt; &#xA;&lt;p&gt;Vault has comprehensive &lt;a href=&#34;https://en.wikipedia.org/wiki/Acceptance_testing&#34;&gt;acceptance tests&lt;/a&gt; covering most of the features of the secret and auth methods.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re working on a feature of a secret or auth method and want to verify it is functioning (and also hasn&#39;t broken anything else), we recommend running the acceptance tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; The acceptance tests create/destroy/modify &lt;em&gt;real resources&lt;/em&gt;, which may incur real costs in some cases. In the presence of a bug, it is technically possible that broken backends could leave dangling data behind. Therefore, please run the acceptance tests at your own risk. At the very least, we recommend running them in their own private account for whatever backend you&#39;re testing.&lt;/p&gt; &#xA;&lt;p&gt;To run the acceptance tests, invoke &lt;code&gt;make testacc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make testacc TEST=./builtin/logical/consul&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;TEST&lt;/code&gt; variable is required, and you should specify the folder where the backend is. The &lt;code&gt;TESTARGS&lt;/code&gt; variable is recommended to filter down to a specific resource to test, since testing all of them at once can sometimes take a very long time.&lt;/p&gt; &#xA;&lt;p&gt;Acceptance tests typically require other environment variables to be set for things such as access keys. The test itself should error early and tell you what to set, so it is not documented here.&lt;/p&gt; &#xA;&lt;p&gt;For more information on Vault Enterprise features, visit the &lt;a href=&#34;https://www.hashicorp.com/products/vault/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=github-vault-enterprise&#34;&gt;Vault Enterprise site&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>