<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-18T01:34:06Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cbeuw/Cloak</title>
    <updated>2022-10-18T01:34:06Z</updated>
    <id>tag:github.com,2022-10-18:/cbeuw/Cloak</id>
    <link href="https://github.com/cbeuw/Cloak" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A censorship circumvention tool to evade detection by authoritarian state adversaries&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/cbeuw/Cloak/actions&#34;&gt;&lt;img src=&#34;https://github.com/cbeuw/Cloak/workflows/Build%20and%20test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/cbeuw/Cloak&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/cbeuw/Cloak/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/cbeuw/Cloak&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/cbeuw/Cloak&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=SAUYKGSREP8GL&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7034308/96387206-3e214100-1198-11eb-8917-689d7c56e0cd.png&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7034308/155593583-f22bcfe2-ac22-4afb-9288-1a0e8a791a0d.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7034308/155629720-54dd8758-ec98-4fed-b603-623f0ad83b6c.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Cloak is a &lt;a href=&#34;https://www.ietf.org/proceedings/103/slides/slides-103-pearg-pt-slides-01&#34;&gt;pluggable transport&lt;/a&gt; that enhances traditional proxy tools like OpenVPN to evade &lt;a href=&#34;https://en.wikipedia.org/wiki/Deep_packet_inspection&#34;&gt;sophisticated censorship&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Net_bias&#34;&gt;data discrimination&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Cloak is not a standalone proxy program. Rather, it works by masquerading proxied traffic as normal web browsing activities. In contrast to traditional tools which have very prominent traffic fingerprints and can be blocked by simple filtering rules, it&#39;s very difficult to precisely target Cloak with little false positives. This increases the collateral damage to censorship actions as attempts to block Cloak could also damage services the censor state relies on.&lt;/p&gt; &#xA;&lt;p&gt;To any third party observer, a host running Cloak server is indistinguishable from an innocent web server. Both while passively observing traffic flow to and from the server, as well as while actively probing the behaviours of a Cloak server. This is achieved through the use a series of &lt;a href=&#34;https://github.com/cbeuw/Cloak/wiki/Steganography-and-encryption&#34;&gt;cryptographic steganography techniques&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Cloak can be used in conjunction with any proxy program that tunnels traffic through TCP or UDP, such as Shadowsocks, OpenVPN and Tor. Multiple proxy servers can be running on the same server host and Cloak server will act as a reverse proxy, bridging clients with their desired proxy end.&lt;/p&gt; &#xA;&lt;p&gt;Cloak multiplexes traffic through multiple underlying TCP connections which reduces head-of-line blocking and eliminates TCP handshake overhead. This also makes the traffic pattern more similar to real websites.&lt;/p&gt; &#xA;&lt;p&gt;Cloak provides multi-user support, allowing multiple clients to connect to the proxy server on the same port (443 by default). It also provides traffic management features such as usage credit and bandwidth control. This allows a proxy server to serve multiple users even if the underlying proxy software wasn&#39;t designed for multiple users&lt;/p&gt; &#xA;&lt;p&gt;Cloak also supports tunneling through an intermediary CDN server such as Amazon Cloudfront. Such services are so widely used, attempts to disrupt traffic to them can lead to very high collateral damage for the censor.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;To quickly deploy Cloak with Shadowsocks on a server, you can run this &lt;a href=&#34;https://github.com/HirbodBehnam/Shadowsocks-Cloak-Installer/raw/master/Cloak2-Installer.sh&#34;&gt;script&lt;/a&gt; written by @HirbodBehnam&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#server&#34;&gt;Server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#client&#34;&gt;Client&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#server-1&#34;&gt;Server&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#to-add-users&#34;&gt;To add users&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#unrestricted-users&#34;&gt;Unrestricted users&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#users-subject-to-bandwidth-and-credit-controls&#34;&gt;Users subject to bandwidth and credit controls&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#client-1&#34;&gt;Client&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cbeuw/Cloak/master/#support-me&#34;&gt;Support me&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/cbeuw/Cloak&#xA;cd Cloak&#xA;go get ./...&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Built binaries will be in &lt;code&gt;build&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Examples of configuration files can be found under &lt;code&gt;example_config&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;RedirAddr&lt;/code&gt; is the redirection address when the incoming traffic is not from a Cloak client. Ideally it should be set to a major website allowed by the censor (e.g. &lt;code&gt;www.bing.com&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;BindAddr&lt;/code&gt; is a list of addresses Cloak will bind and listen to (e.g. &lt;code&gt;[&#34;:443&#34;,&#34;:80&#34;]&lt;/code&gt; to listen to port 443 and 80 on all interfaces)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ProxyBook&lt;/code&gt; is an object whose key is the name of the ProxyMethod used on the client-side (case-sensitive). Its value is an array whose first element is the protocol, and the second element is an &lt;code&gt;IP:PORT&lt;/code&gt; string of the upstream proxy server that Cloak will forward the traffic to.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;ProxyBook&#34;: {&#xA;    &#34;shadowsocks&#34;: [&#xA;      &#34;tcp&#34;,&#xA;      &#34;localhost:51443&#34;&#xA;    ],&#xA;    &#34;openvpn&#34;: [&#xA;      &#34;tcp&#34;,&#xA;      &#34;localhost:12345&#34;&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;PrivateKey&lt;/code&gt; is the static curve25519 Diffie-Hellman private key encoded in base64.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;BypassUID&lt;/code&gt; is a list of UIDs that are authorised without any bandwidth or credit limit restrictions&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;AdminUID&lt;/code&gt; is the UID of the admin user in base64. You can leave this empty if you only ever add users to &lt;code&gt;BypassUID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;DatabasePath&lt;/code&gt; is the path to &lt;code&gt;userinfo.db&lt;/code&gt;, which is used to store user usage information and restrictions. Cloak will create the file automatically if it doesn&#39;t exist. You can leave this empty if you only ever add users to &lt;code&gt;BypassUID&lt;/code&gt;. This field also has no effect if &lt;code&gt;AdminUID&lt;/code&gt; isn&#39;t a valid UID or is empty.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;KeepAlive&lt;/code&gt; is the number of seconds to tell the OS to wait after no activity before sending TCP KeepAlive probes to the upstream proxy server. Zero or negative value disables it. Default is 0 (disabled).&lt;/p&gt; &#xA;&lt;h3&gt;Client&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;UID&lt;/code&gt; is your UID in base64.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Transport&lt;/code&gt; can be either &lt;code&gt;direct&lt;/code&gt; or &lt;code&gt;CDN&lt;/code&gt;. If the server host wishes you to connect to it directly, use &lt;code&gt;direct&lt;/code&gt;. If instead a CDN is used, use &lt;code&gt;CDN&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PublicKey&lt;/code&gt; is the static curve25519 public key in base64, given by the server admin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ProxyMethod&lt;/code&gt; is the name of the proxy method you are using. This must match one of the entries in the server&#39;s &lt;code&gt;ProxyBook&lt;/code&gt; exactly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;EncryptionMethod&lt;/code&gt; is the name of the encryption algorithm you want Cloak to use. Options are &lt;code&gt;plain&lt;/code&gt;, &lt;code&gt;aes-256-gcm&lt;/code&gt; ( synonymous to &lt;code&gt;aes-gcm&lt;/code&gt;), &lt;code&gt;aes-128-gcm&lt;/code&gt;, and &lt;code&gt;chacha20-poly1305&lt;/code&gt;. Note: Cloak isn&#39;t intended to provide transport security. The point of encryption is to hide fingerprints of proxy protocols and render the payload statistically random-like. &lt;strong&gt;You may only leave it as &lt;code&gt;plain&lt;/code&gt; if you are certain that your underlying proxy tool already provides BOTH encryption and authentication (via AEAD or similar techniques).&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ServerName&lt;/code&gt; is the domain you want to make your ISP or firewall &lt;em&gt;think&lt;/em&gt; you are visiting. Ideally it should match &lt;code&gt;RedirAddr&lt;/code&gt; in the server&#39;s configuration, a major site the censor allows, but it doesn&#39;t have to.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;AlternativeNames&lt;/code&gt; is an array used alongside &lt;code&gt;ServerName&lt;/code&gt; to shuffle between different ServerNames for every new connection. &lt;strong&gt;This may conflict with &lt;code&gt;CDN&lt;/code&gt; Transport mode&lt;/strong&gt; if the CDN provider prohibits domain fronting and rejects the alternative domains.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;ServerName&#34;: &#34;bing.com&#34;,&#xA;  &#34;AlternativeNames&#34;: [&#34;cloudflare.com&#34;, &#34;github.com&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;CDNOriginHost&lt;/code&gt; is the domain name of the &lt;em&gt;origin&lt;/em&gt; server (i.e. the server running Cloak) under &lt;code&gt;CDN&lt;/code&gt; mode. This only has effect when &lt;code&gt;Transport&lt;/code&gt; is set to &lt;code&gt;CDN&lt;/code&gt;. If unset, it will default to the remote hostname supplied via the commandline argument (in standalone mode), or by Shadowsocks (in plugin mode). After a TLS session is established with the CDN server, this domain name will be used in the HTTP request to ask the CDN server to establish a WebSocket connection with this host.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;NumConn&lt;/code&gt; is the amount of underlying TCP connections you want to use. The default of 4 should be appropriate for most people. Setting it too high will hinder the performance. Setting it to 0 will disable connection multiplexing and each TCP connection will spawn a separate short-lived session that will be closed after it is terminated. This makes it behave like GoQuiet. This maybe useful for people with unstable connections.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;BrowserSig&lt;/code&gt; is the browser you want to &lt;strong&gt;appear&lt;/strong&gt; to be using. It&#39;s not relevant to the browser you are actually using. Currently, &lt;code&gt;chrome&lt;/code&gt; and &lt;code&gt;firefox&lt;/code&gt; are supported.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;KeepAlive&lt;/code&gt; is the number of seconds to tell the OS to wait after no activity before sending TCP KeepAlive probes to the Cloak server. Zero or negative value disables it. Default is 0 (disabled). Warning: Enabling it might make your server more detectable as a proxy, but it will make the Cloak client detect internet interruption more quickly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;StreamTimeout&lt;/code&gt; is the number of seconds of Cloak waits for an incoming connection from a proxy program to send any data, after which the connection will be closed by Cloak. Cloak will not enforce any timeout on TCP connections after it is established.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Server&lt;/h3&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Install at least one underlying proxy server (e.g. OpenVPN, Shadowsocks).&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/cbeuw/Cloak/releases&#34;&gt;the latest release&lt;/a&gt; or clone and build this repo.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;ck-server -key&lt;/code&gt;. The &lt;strong&gt;public&lt;/strong&gt; should be given to users, the &lt;strong&gt;private&lt;/strong&gt; key should be kept secret.&lt;/li&gt; &#xA; &lt;li&gt;(Skip if you only want to add unrestricted users) Run &lt;code&gt;ck-server -uid&lt;/code&gt;. The new UID will be used as &lt;code&gt;AdminUID&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy example_config/ckserver.json into a desired location. Change &lt;code&gt;PrivateKey&lt;/code&gt; to the private key you just obtained; change &lt;code&gt;AdminUID&lt;/code&gt; to the UID you just obtained.&lt;/li&gt; &#xA; &lt;li&gt;Configure your underlying proxy server so that they all listen on localhost. Edit &lt;code&gt;ProxyBook&lt;/code&gt; in the configuration file accordingly&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cbeuw/Cloak/wiki/Underlying-proxy-configuration-guides&#34;&gt;Configure the proxy program.&lt;/a&gt; Run &lt;code&gt;sudo ck-server -c &amp;lt;path to ckserver.json&amp;gt;&lt;/code&gt;. ck-server needs root privilege because it binds to a low numbered port (443). Alternatively you can follow &lt;a href=&#34;https://superuser.com/a/892391&#34;&gt;https://superuser.com/a/892391&lt;/a&gt; to avoid granting ck-server root privilege unnecessarily.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;To add users&lt;/h4&gt; &#xA;&lt;h5&gt;Unrestricted users&lt;/h5&gt; &#xA;&lt;p&gt;Run &lt;code&gt;ck-server -uid&lt;/code&gt; and add the UID into the &lt;code&gt;BypassUID&lt;/code&gt; field in &lt;code&gt;ckserver.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Users subject to bandwidth and credit controls&lt;/h5&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;First make sure you have &lt;code&gt;AdminUID&lt;/code&gt; generated and set in &lt;code&gt;ckserver.json&lt;/code&gt;, along with a path to &lt;code&gt;userinfo.db&lt;/code&gt; in &lt;code&gt;DatabasePath&lt;/code&gt; (Cloak will create this file for you if it didn&#39;t already exist).&lt;/li&gt; &#xA; &lt;li&gt;On your client, run &lt;code&gt;ck-client -s &amp;lt;IP of the server&amp;gt; -l &amp;lt;A local port&amp;gt; -a &amp;lt;AdminUID&amp;gt; -c &amp;lt;path-to-ckclient.json&amp;gt;&lt;/code&gt; to enter admin mode&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://cbeuw.github.io/Cloak-panel&#34;&gt;https://cbeuw.github.io/Cloak-panel&lt;/a&gt; (Note: this is a pure-js static site, there is no backend and all data entered into this site are processed between your browser and the Cloak API endpoint you specified. Alternatively you can download the repo at &lt;a href=&#34;https://github.com/cbeuw/Cloak-panel&#34;&gt;https://github.com/cbeuw/Cloak-panel&lt;/a&gt; and open &lt;code&gt;index.html&lt;/code&gt; in a browser. No web server is required).&lt;/li&gt; &#xA; &lt;li&gt;Type in &lt;code&gt;127.0.0.1:&amp;lt;the port you entered in step 1&amp;gt;&lt;/code&gt; as the API Base, and click &lt;code&gt;List&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can add in more users by clicking the &lt;code&gt;+&lt;/code&gt; panel&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Note: the user database is persistent as it&#39;s in-disk. You don&#39;t need to add the users again each time you start ck-server.&lt;/p&gt; &#xA;&lt;h3&gt;Client&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Android client is available here: &lt;a href=&#34;https://github.com/cbeuw/Cloak-android&#34;&gt;https://github.com/cbeuw/Cloak-android&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Install the underlying proxy client corresponding to what the server has.&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/cbeuw/Cloak/releases&#34;&gt;the latest release&lt;/a&gt; or clone and build this repo.&lt;/li&gt; &#xA; &lt;li&gt;Obtain the public key and your UID from the administrator of your server&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;example_config/ckclient.json&lt;/code&gt; into a location of your choice. Enter the &lt;code&gt;UID&lt;/code&gt; and &lt;code&gt;PublicKey&lt;/code&gt; you have obtained. Set &lt;code&gt;ProxyMethod&lt;/code&gt; to match exactly the corresponding entry in &lt;code&gt;ProxyBook&lt;/code&gt; on the server end&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cbeuw/Cloak/wiki/Underlying-proxy-configuration-guides&#34;&gt;Configure the proxy program.&lt;/a&gt; Run &lt;code&gt;ck-client -c &amp;lt;path to ckclient.json&amp;gt; -s &amp;lt;ip of your server&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Support me&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful, you can visit my &lt;a href=&#34;https://www.redbubble.com/people/cbeuw/explore&#34;&gt;merch store&lt;/a&gt;; alternatively you can donate directly to me&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=SAUYKGSREP8GL&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;BTC: &lt;code&gt;bc1q59yvpnh0356qq9vf0j2y7hx36t9ysap30spx9h&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;ETH: &lt;code&gt;0x8effF29a8F9bD38A367580527AC303972c92b60c&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flower-corp/rosedb</title>
    <updated>2022-10-18T01:34:06Z</updated>
    <id>tag:github.com,2022-10-18:/flower-corp/rosedb</id>
    <link href="https://github.com/flower-corp/rosedb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 A high performance NoSQL database based on bitcask, supports string, list, hash, set, and sorted set.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/04/28/gIL2FXZcOesPmyD.png&#34; alt=&#34;rosedb_ico.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/roseduan/rosedb&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/roseduan/rosedb&#34; alt=&#34;Go Report Card&#34;&gt;&amp;nbsp;&lt;/a&gt;&lt;img src=&#34;https://img.shields.io/github/languages/top/roseduan/rosedb&#34; alt=&#34;GitHub top language&#34;&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/roseduan/rosedb/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/roseduan/rosedb&#34; alt=&#34;GitHub stars&#34;&gt;&amp;nbsp;&lt;/a&gt;&lt;a href=&#34;https://codecov.io/gh/flower-corp/rosedb&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/flower-corp/rosedb/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/flower-corp/rosedb&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/flower-corp/rosedb/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/roseduan/rosedb&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/roseduan/rosedb.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go#database&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flower-corp/rosedb/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/flower-corp/rosedb.svg?style=flat-square&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English| &lt;a href=&#34;https://github.com/roseduan/rosedb/raw/main/README-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;rosedb is a fast, stable, and embedded NoSQL database based on &lt;code&gt;bitcask&lt;/code&gt;, supports a variety of data structures such as &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;sorted set&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is similar to &lt;code&gt;Redis&lt;/code&gt; but store values on disk.&lt;/p&gt; &#xA;&lt;p&gt;Key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compatible with Redis protocol (not fully)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Many data structures: &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;sorted set&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to embed into your own Go application&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High performance, suitable for both read and write intensive workload&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Values are not limited by RAM&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Design Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/flower-corp/rosedb/raw/main/resource/img/design-overview-rosedb.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. embedded usage:&lt;/strong&gt; see &lt;a href=&#34;https://github.com/flower-corp/rosedb/tree/main/examples&#34;&gt;examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. command line usage:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;start rosedb server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd rosedb&#xA;make&#xA;./rosedb-server [-option value]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;access data via &lt;code&gt;cli&lt;/code&gt;(a copy of &lt;code&gt;redis-cli&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Only mac now, download redis-cli according to your os.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd rosedb/tools&#xA;./cli-mac -p 5200&#xA;&#xA;127.0.0.1:5200&amp;gt; &#xA;127.0.0.1:5200&amp;gt; set my_key RoseDB&#xA;OK&#xA;127.0.0.1:5200&amp;gt; get my_key&#xA;&#34;RoseDB&#34;&#xA;127.0.0.1:5200&amp;gt; &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/flower-corp/rosedb/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to join the &lt;a href=&#34;https://join.slack.com/t/flowercorp-slack/shared_invite/zt-19oj8ecqb-V02ycMV0BH1~Tn6tfeTz6A&#34;&gt;Slack channel&lt;/a&gt; and &lt;a href=&#34;https://github.com/flower-corp/rosedb/discussions&#34;&gt;Discussions&lt;/a&gt; to connect with RoseDB team members and other users.&lt;/p&gt; &#xA;&lt;p&gt;If you are a Chinese user, you are also welcome to join our WeChat group, scan the QR code and you will be invited:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://i.loli.net/2021/05/06/tGTH7SXg8w95slA.jpg&#34; width=&#34;200px&#34; align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in contributing to rosedb, see &lt;a href=&#34;https://github.com/roseduan/rosedb/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href=&#34;https://github.com/flower-corp/rosedb/issues/103&#34;&gt;how to contribute?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;rosedb is licensed under the term of the &lt;a href=&#34;https://github.com/roseduan/rosedb/raw/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DiceDB/dice</title>
    <updated>2022-10-18T01:34:06Z</updated>
    <id>tag:github.com,2022-10-18:/DiceDB/dice</id>
    <link href="https://github.com/DiceDB/dice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extremely simple Golang-based in-memory KV store that speaks the Redis dialect.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dice&lt;/h1&gt; &#xA;&lt;p&gt;Dice 🎲 is an extremely simple Golang-based in-memory KV store that speaks the Redis dialect.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is not production ready&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Why should you care?&lt;/h2&gt; &#xA;&lt;p&gt;Building a database from scratch has its own thrill, and you can leverage this to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build a database from scratch&lt;/li&gt; &#xA; &lt;li&gt;learn database internals, starting with Redis&lt;/li&gt; &#xA; &lt;li&gt;learn about advanced data structures, algorithms, and event loops&lt;/li&gt; &#xA; &lt;li&gt;collaborate with other engineers and continute back to Open Source&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setting up&lt;/h2&gt; &#xA;&lt;p&gt;To run DiceDB locally, you will need&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Golang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_Linux_distributions&#34;&gt;Linux based environment&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/dicedb/dice&#xA;$ cd dice&#xA;$ go run main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dice in action&lt;/h2&gt; &#xA;&lt;p&gt;Because Dice speaks Redis&#39; dialect, you can connect to it with any Redis Client and the simplest way it to use a &lt;a href=&#34;https://redis.io/docs/manual/cli/&#34;&gt;Redis CLI&lt;/a&gt;. Programmatically, depending on the language you prefer, you can use your favourite Redis library to connect.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with building and contributing to DiceDB, please refer to the &lt;a href=&#34;https://github.com/DiceDB/dice/issues&#34;&gt;issues&lt;/a&gt; created in this repository.&lt;/p&gt; &#xA;&lt;h2&gt;The story&lt;/h2&gt; &#xA;&lt;p&gt;DiceDB started as a re-implementation of Redis in Golang and the idea was to - build a DB from scratch and understand the micro-nuances that comes with its implementation. The database does not aim to replace Redis, instead it will fit in and optimize itself for multi-core computations running on a single-threaded event loop.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;The Code Contribution Guidelines are published at &lt;a href=&#34;https://raw.githubusercontent.com/DiceDB/dice/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;; please read them before you start making any changes. This would allow us to have a consistent standard of coding practices and developer experience.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/dicedb/dice/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=dicedb/dice&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;DiceDB is open-sourced under &lt;a href=&#34;https://raw.githubusercontent.com/DiceDB/dice/master/LICENSE.md&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>