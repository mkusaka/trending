<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-16T01:36:03Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ConnectAI-E/Feishu-OpenAI</title>
    <updated>2023-04-16T01:36:03Z</updated>
    <id>tag:github.com,2023-04-16:/ConnectAI-E/Feishu-OpenAI</id>
    <link href="https://github.com/ConnectAI-E/Feishu-OpenAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎒飞书 ×（GPT-3.5 + DALL·E + Whisper）= 飞一般的工作体验 🚀 语音对话、角色扮演、多话题讨论、图片创作、表格分析、文档导出 🚀&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ConnectAI-E/Feishu-OpenAI/master/docs/img3.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;details align=&#34;center&#34;&gt; &#xA; &lt;summary&gt; 📷 点击展开完整功能截图&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/224493411-085ba405-81cd-4972-b87b-74a2e811f23d.png&#34; alt=&#34;语音对话&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223590381-ed38db74-39f3-4e77-bd3a-aaa54d679286.png&#34; alt=&#34;角色扮演&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/228092540-bb9c74de-fccb-4d07-9797-f3fe1fb3705a.png&#34; alt=&#34;角色列表&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223590817-37a56eac-ab6e-4293-862a-de0988ac50b7.png&#34; alt=&#34;文字成图&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/224531308-378a5bc3-2964-4e32-905f-8237dafc3f91.png&#34; alt=&#34;图片变体&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/227900488-10a53176-f4e3-4b9e-bf9e-b60d958aefc8.png&#34; alt=&#34;余额查询&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/224531775-3f0e1e1b-a373-4774-a8f0-e120ccba6670.png&#34; alt=&#34;帮助菜单&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 飞书 ×（GPT-3.5 + DALL·E + Whisper） &lt;br&gt; &lt;br&gt; 🚀 Feishu OpenAI 🚀 &lt;/p&gt; &#xA;&lt;h2&gt;🥁 号外号外!&lt;/h2&gt; &#xA;&lt;p&gt;大家好呀！我是&lt;a href=&#34;https://github.com/ConnectAI-E/Feishu-OpenAI&#34;&gt;feishu-OpenAI&lt;/a&gt;的作者River。非常兴奋地欢迎大家加入我们的&lt;a href=&#34;https://fork-way.feishu.cn/base/LzPObR5YQaHSAssauDAcZdS3nuo?table=tblvKqjRYNfmoLMo&amp;amp;view=vewsekmPW4&#34;&gt;Connect-AI开源马拉松&lt;/a&gt;活动！&lt;/p&gt; &#xA;&lt;p&gt;AIGC的热潮正在各行各业掀起巨大的变革，我们看到各大社群以”知识xx“为代表的”割韭菜“行为，不禁感到无奈。身为互联网行业的从业者,与其指点江山激扬文字，不如参与其中，感受发展。为此我们成立了下面10个课题组，并从技术可行性的基础上进行了调研，现并欢迎大家自由选择组队并加入相关的项目推进群。&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1200&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/50035229/232206534-0260de35-b0e0-4777-ae8b-0e87f14c8e9f.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;无论您是设计师、前端工程师、后端工程师、算法工程师还是测试小伙伴，只要您对GPT技术充满热情，就可以参与到我们的开源项目中来。设计师们可以参与多个repo，优化项目的交互体验和设计风格；前端工程师可以参与每个项目的UI搭建；后端和算法工程师们则可以积极学习AI能力的使用。我们还诚邀测试小伙伴参与每次发版前的功能内测。&lt;/p&gt; &#xA;&lt;p&gt;每个项目都需要招募一个项目负责人，我们会将其指定为repo的owner。如果您愿意深度参与，可以找我报名成为负责人。当然，如果项目表上有队长名称，则代表已经招募完成。其他同学可以在业余时间参与一个或多个项目。&lt;/p&gt; &#xA;&lt;p&gt;我们的目标是为AI开源社区提供一个可持续性的生态系统，并且鼓励更多的人参与其中，共同推进AI技术的发展。后续遇到企业的定制AI开发需求，我们会优先邀请相关课题的同学参与，这样既可以帮助他们获取不错的收入，也符合开源的精神和原则。我们希望通过这样的方式，让我们的开源项目更有可持续性，让更多人愿意加入我们，共同推进AI技术的发展！&lt;/p&gt; &#xA;&lt;p&gt;我们队员有&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/circlestarzero/EX-chatGPT&#34;&gt;EX-chatGPT&lt;/a&gt;和&lt;a href=&#34;https://github.com/kaixindelele/ChatPaper&#34;&gt;ChatPaper的维护者&lt;/a&gt;--&amp;gt;&lt;a href=&#34;https://github.com/circlestarzero&#34;&gt;cc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eryajf/chatgpt-dingtalk&#34;&gt;钉钉GPT的维护者&lt;/a&gt;--&amp;gt;&lt;a href=&#34;https://github.com/eryajf&#34;&gt;eryajf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Leizhenpeng/feishu-chatgpt&#34;&gt;飞书GPT的维护者&lt;/a&gt;--&amp;gt;&lt;a href=&#34;https://space.bilibili.com/66891783&#34;&gt;river&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mastergo.com/community/profile/72319417503384?tab=plugin&#34;&gt;上百款在线设计插件的开发者&lt;/a&gt;--&amp;gt;山山&lt;/li&gt; &#xA; &lt;li&gt;正在心动的你！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果您对Connect-AI开源马拉松感兴趣，请随时加入项目推进群，一起为AI技术的未来贡献力量！&lt;/p&gt; &#xA;&lt;img width=&#34;200&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/50035229/232206726-f536cb19-47b2-4aa3-a7eb-a96a04fd9fa9.png&#34;&gt; &#xA;&lt;h2&gt;👻 机器人功能&lt;/h2&gt; &#xA;&lt;p&gt;🗣 语音交流：私人直接与机器人畅所欲言&lt;/p&gt; &#xA;&lt;p&gt;💬 多话题对话：支持私人和群聊多话题讨论，高效连贯&lt;/p&gt; &#xA;&lt;p&gt;🖼 文本成图：支持文本成图和以图搜图&lt;/p&gt; &#xA;&lt;p&gt;🛖 场景预设：内置丰富场景列表，一键切换AI角色&lt;/p&gt; &#xA;&lt;p&gt;🎭 角色扮演：支持场景模式，增添讨论乐趣和创意&lt;/p&gt; &#xA;&lt;p&gt;🤖 AI模式：内置4种AI模式，感受AI的智慧与创意&lt;/p&gt; &#xA;&lt;p&gt;🔄 上下文保留：回复对话框即可继续同一话题讨论&lt;/p&gt; &#xA;&lt;p&gt;⏰ 自动结束：超时自动结束对话，支持清除讨论历史&lt;/p&gt; &#xA;&lt;p&gt;📝 富文本卡片：支持富文本卡片回复，信息更丰富多彩&lt;/p&gt; &#xA;&lt;p&gt;👍 交互式反馈：即时获取机器人处理结果&lt;/p&gt; &#xA;&lt;p&gt;🎰 余额查询：即时获取token消耗情况&lt;/p&gt; &#xA;&lt;p&gt;🔙 历史回档：轻松回档历史对话，继续话题讨论 🚧&lt;/p&gt; &#xA;&lt;p&gt;🔒 管理员模式：内置管理员模式，使用更安全可靠 🚧&lt;/p&gt; &#xA;&lt;p&gt;🌐 多token负载均衡：优化生产级别的高频调用场景&lt;/p&gt; &#xA;&lt;p&gt;↩️ 支持反向代理：为不同地区的用户提供更快、更稳定的访问体验&lt;/p&gt; &#xA;&lt;p&gt;📚 与飞书文档互动：成为企业员工的超级助手 🚧&lt;/p&gt; &#xA;&lt;p&gt;🎥 话题内容秒转PPT：让你的汇报从此变得更加简单 🚧&lt;/p&gt; &#xA;&lt;p&gt;📊 表格分析：轻松导入飞书表格，提升数据分析效率 🚧&lt;/p&gt; &#xA;&lt;p&gt;🍊 私有数据训练：利用公司产品信息对GPT二次训练，更好地满足客户个性化需求 🚧&lt;/p&gt; &#xA;&lt;h2&gt;🌟 项目特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🍏 对话基于 OpenAI-&lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;gpt-3.5-turbo&lt;/a&gt; 接口&lt;/li&gt; &#xA; &lt;li&gt;🍎 通过 lark，将 ChatGPT 接入&lt;a href=&#34;https://open.feishu.cn/app&#34;&gt;飞书&lt;/a&gt;和&lt;a href=&#34;https://www.larksuite.com/&#34;&gt;飞书国际版&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🥒 支持&lt;a href=&#34;https://github.com/serverless-devs/serverless-devs&#34;&gt;Serverless 云函数&lt;/a&gt;、&lt;a href=&#34;https://dashboard.cpolar.com/login&#34;&gt;本地环境&lt;/a&gt;、&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;、&lt;a href=&#34;https://github.com/Leizhenpeng/feishu-chatgpt/releases/&#34;&gt;二进制安装包&lt;/a&gt; 等多种渠道部署&lt;/li&gt; &#xA; &lt;li&gt;🍋 基于&lt;a href=&#34;https://github.com/patrickmn/go-cache&#34;&gt;goCache&lt;/a&gt;内存键值对缓存&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目部署&lt;/h2&gt; &#xA;&lt;h6&gt;有关飞书的配置文件说明，&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ConnectAI-E/Feishu-OpenAI/master/#%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4&#34;&gt;➡︎ 点击查看&lt;/a&gt;&lt;/strong&gt;&lt;/h6&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;本地部署&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:Leizhenpeng/feishu-chatgpt.git&#xA;cd feishu-chatgpt/code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;如果你的服务器没有公网 IP，可以使用反向代理的方式&lt;/p&gt; &#xA; &lt;p&gt;飞书的服务器在国内对 ngrok 的访问速度很慢，所以推荐使用一些国内的反向代理服务商&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dashboard.cpolar.com/&#34;&gt;cpolar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://natapp.cn/&#34;&gt;natapp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 配置config.yaml&#xA;mv config.example.yaml config.yaml&#xA;&#xA;//测试部署&#xA;go run main.go&#xA;cpolar http 9000&#xA;&#xA;//正式部署&#xA;nohup cpolar http 9000 -log=stdout &amp;amp;&#xA;&#xA;//查看服务器状态&#xA;https://dashboard.cpolar.com/status&#xA;&#xA;// 下线服务&#xA;ps -ef | grep cpolar&#xA;kill -9 PID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;更多详细介绍，参考&lt;a href=&#34;https://www.bilibili.com/video/BV1nW4y1378T/&#34;&gt;飞书上的小计算器: Go 机器人来啦&lt;/a&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;serverless云函数(阿里云等)部署&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:Leizhenpeng/feishu-chatgpt.git&#xA;cd feishu-chatgpt/code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;安装&lt;a href=&#34;https://docs.serverless-devs.com/serverless-devs/quick_start&#34;&gt;severless&lt;/a&gt;工具&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 配置config.yaml&#xA;mv config.example.yaml config.yaml&#xA;# 安装severless cli&#xA;npm install @serverless-devs/s -g&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;安装完成后，请根据您本地环境，根据下面教程部署&lt;code&gt;severless&lt;/code&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;本地 &lt;code&gt;linux&lt;/code&gt;/&lt;code&gt;mac os&lt;/code&gt; 环境&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;修改&lt;code&gt;s.yaml&lt;/code&gt;中的部署地区和部署秘钥&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code&gt;edition: 1.0.0&#xA;name: feishuBot-chatGpt&#xA;access: &#34;aliyun&#34; #  修改自定义的秘钥别称&#xA;&#xA;vars: # 全局变量&#xA;region: &#34;cn-hongkong&#34; # 修改云函数想要部署地区&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt;一键部署&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ..&#xA;s deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;本地&lt;code&gt;windows&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;首先打开本地&lt;code&gt;cmd&lt;/code&gt;命令提示符工具，运行&lt;code&gt;go env&lt;/code&gt;检查你电脑上 go 环境变量设置, 确认以下变量和值&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;set GO111MODULE=on&#xA;set GOARCH=amd64&#xA;set GOOS=linux&#xA;set CGO_ENABLED=0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;如果值不正确，比如您电脑上为&lt;code&gt;set GOOS=windows&lt;/code&gt;, 请运行以下命令设置&lt;code&gt;GOOS&lt;/code&gt;变量值&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;go env -w GOOS=linux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt;修改&lt;code&gt;s.yaml&lt;/code&gt;中的部署地区和部署秘钥&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code&gt;edition: 1.0.0&#xA;name: feishuBot-chatGpt&#xA;access: &#34;aliyun&#34; #  修改自定义的秘钥别称&#xA;&#xA;vars: # 全局变量&#xA;  region: &#34;cn-hongkong&#34; #  修改云函数想要部署地区&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;修改&lt;code&gt;s.yaml&lt;/code&gt;中的&lt;code&gt;pre-deploy&lt;/code&gt;, 去除第二步&lt;code&gt;run&lt;/code&gt;前面的环变量改置部分&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code&gt;  pre-deploy:&#xA;        - run: go mod tidy&#xA;          path: ./code&#xA;        - run: go build -o&#xA;            target/main main.go  # 删除GO111MODULE=on GOOS=linux GOARCH=amd64 CGO_ENABLED=0&#xA;          path: ./code&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;4&#34;&gt; &#xA;  &lt;li&gt;一键部署&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ..&#xA;s deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;更多详细介绍，参考&lt;a href=&#34;https://www.bilibili.com/video/BV1nW4y1378T/&#34;&gt;仅需 1min，用 Serverless 部署基于 gin 的飞书机器人&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;使用 Railway 平台一键部署&lt;/summary&gt; &#xA; &lt;p&gt;Railway 是一家国外的 Serverless 平台，支持多种语言，可以一键将 GitHub 上的代码仓库部署到 Railway 平台，然后在 Railway 平台上配置环境变量即可。部署本项目的流程如下：&lt;/p&gt; &#xA; &lt;h4&gt;1. 生成 Railway 项目&lt;/h4&gt; &#xA; &lt;p&gt;点击下方按钮即可创建一个对应的 Railway 项目，其会自动 Fork 本项目到你的 GitHub 账号下。&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://railway.app/template/10D-TF?referralCode=oMcVS2&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4&gt;2. 配置环境变量&lt;/h4&gt; &#xA; &lt;p&gt;在打开的页面中，配置环境变量，每个变量的说明如下图所示：&lt;/p&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/225005602-88d8678f-9d17-4dc5-8d1e-4abf64fb84fd.png&#34; alt=&#34;Railway 环境变量&#34; width=&#34;500px&#34;&gt; &#xA; &lt;h4&gt;3. 部署项目&lt;/h4&gt; &#xA; &lt;p&gt;填写完环境变量后，点击 Deploy 就完成了项目的部署。部署完成后还需获取对应的域名用于飞书机器人访问，如下图所示：&lt;/p&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/225006236-57cb3c8a-1b7d-4bfe-9c9b-099cb9179027.png&#34; alt=&#34;Railway 域名&#34; width=&#34;500px&#34;&gt; &#xA; &lt;p&gt;如果不确定自己部署是否成功，可以通过访问上述获取到的域名 (&lt;a href=&#34;https://xxxxxxxx.railway.app/ping&#34;&gt;https://xxxxxxxx.railway.app/ping&lt;/a&gt;) 来查看是否返回了&lt;code&gt;pong&lt;/code&gt; ，如果返回了&lt;code&gt;pong&lt;/code&gt;，说明部署成功。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;docker部署&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t feishu-chatgpt:latest .&#xA;docker run -d --name feishu-chatgpt -p 9000:9000 \&#xA;--env APP_ID=xxx \&#xA;--env APP_SECRET=xxx \&#xA;--env APP_ENCRYPT_KEY=xxx \&#xA;--env APP_VERIFICATION_TOKEN=xxx \&#xA;--env BOT_NAME=chatGpt \&#xA;--env OPENAI_KEY=&#34;sk-xxx1,sk-xxx2,sk-xxx3&#34; \&#xA;--env API_URL=&#34;https://api.openai.com&#34; \&#xA;--env HTTP_PROXY=&#34;&#34; \&#xA;feishu-chatgpt:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;注意:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;BOT_NAME&lt;/code&gt; 为飞书机器人名称，例如 &lt;code&gt;chatGpt&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;OPENAI_KEY&lt;/code&gt; 为openai key，多个key用逗号分隔，例如 &lt;code&gt;sk-xxx1,sk-xxx2,sk-xxx3&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;HTTP_PROXY&lt;/code&gt; 为宿主机的proxy地址，例如 &lt;code&gt;http://host.docker.internal:7890&lt;/code&gt;,没有代理的话，可以不用设置&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;API_URL&lt;/code&gt; 为openai api 接口地址，例如 &lt;code&gt;https://api.openai.com&lt;/code&gt;, 没有反向代理的话，可以不用设置&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;小白简易化 docker 部署&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;docker 地址: &lt;a href=&#34;https://hub.docker.com/r/leizhenpeng/feishu-chatgpt&#34;&gt;https://hub.docker.com/r/leizhenpeng/feishu-chatgpt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --restart=always --name feishu-chatgpt2 -p 9000:9000 -v /etc/localtime:/etc/localtim:ro  \&#xA;--env APP_ID=xxx \&#xA;--env APP_SECRET=xxx \&#xA;--env APP_ENCRYPT_KEY=xxx \&#xA;--env APP_VERIFICATION_TOKEN=xxx \&#xA;--env BOT_NAME=chatGpt \&#xA;--env OPENAI_KEY=&#34;sk-xxx1,sk-xxx2,sk-xxx3&#34; \&#xA;--env API_URL=https://api.openai.com \&#xA;--env HTTP_PROXY=&#34;&#34; \&#xA;dockerproxy.com/leizhenpeng/feishu-chatgpt:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;事件回调地址: &lt;a href=&#34;http://IP:9000/webhook/event&#34;&gt;http://IP:9000/webhook/event&lt;/a&gt; 卡片回调地址: &lt;a href=&#34;http://IP:9000/webhook/card&#34;&gt;http://IP:9000/webhook/card&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;把它填入飞书后台&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;部署azure版本&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t feishu-chatgpt:latest .&#xA;docker run -d --name feishu-chatgpt -p 9000:9000 \&#xA;--env APP_ID=xxx \&#xA;--env APP_SECRET=xxx \&#xA;--env APP_ENCRYPT_KEY=xxx \&#xA;--env APP_VERIFICATION_TOKEN=xxx \&#xA;--env BOT_NAME=chatGpt \&#xA;--env AZURE_ON=true \&#xA;--env AZURE_API_VERSION=xxx \&#xA;--env AZURE_RESOURCE_NAME=xxx \&#xA;--env AZURE_DEPLOYMENT_NAME=xxx \&#xA;--env AZURE_OPENAI_TOKEN=xxx \&#xA;feishu-chatgpt:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;注意:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;BOT_NAME&lt;/code&gt; 为飞书机器人名称，例如 &lt;code&gt;chatGpt&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;AZURE_ON&lt;/code&gt; 为是否使用azure ,请填写 &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;AZURE_API_VERSION&lt;/code&gt; 为azure api版本 例如 &lt;code&gt;2023-03-15-preview&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;AZURE_RESOURCE_NAME&lt;/code&gt; 为azure 资源名称 类似 &lt;code&gt;https://{AZURE_RESOURCE_NAME}.openai.azure.com&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;AZURE_DEPLOYMENT_NAME&lt;/code&gt; 为azure 部署名称 类似 &lt;code&gt;https://{AZURE_RESOURCE_NAME}.openai.azure.com/deployments/{AZURE_DEPLOYMENT_NAME}/chat/completions&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;AZURE_OPENAI_TOKEN&lt;/code&gt; 为azure openai token&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;docker-compose 部署&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;编辑 docker-compose.yaml，通过 environment 配置相应环境变量（或者通过 volumes 挂载相应配置文件），然后运行下面的命令即可&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 构建镜像&#xA;docker compose build&#xA;&#xA;# 启动服务&#xA;docker compose up -d&#xA;&#xA;# 停止服务&#xA;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;事件回调地址: &lt;a href=&#34;http://IP:9000/webhook/event&#34;&gt;http://IP:9000/webhook/event&lt;/a&gt; 卡片回调地址: &lt;a href=&#34;http://IP:9000/webhook/card&#34;&gt;http://IP:9000/webhook/card&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;二进制安装包部署&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;进入&lt;a href=&#34;https://github.com/Leizhenpeng/feishu-chatgpt/releases/&#34;&gt;release 页面&lt;/a&gt; 下载对应的安装包&lt;/li&gt; &#xA;  &lt;li&gt;解压安装包,修改 config.example.yml 中配置信息,另存为 config.yaml&lt;/li&gt; &#xA;  &lt;li&gt;目录下添加文件 &lt;code&gt;role_list.yaml&lt;/code&gt;，自定义角色，可以从这里获取：&lt;a href=&#34;https://github.com/Leizhenpeng/feishu-chatgpt/raw/master/code/role_list.yaml&#34;&gt;链接&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;运行程序入口文件 &lt;code&gt;feishu-chatgpt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;事件回调地址: &lt;a href=&#34;http://IP:9000/webhook/event&#34;&gt;http://IP:9000/webhook/event&lt;/a&gt; 卡片回调地址: &lt;a href=&#34;http://IP:9000/webhook/card&#34;&gt;http://IP:9000/webhook/card&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;详细配置步骤&lt;/h2&gt; &#xA;&lt;details align=&#34;left&#34;&gt; &#xA; &lt;summary&gt; 📸 点击展开飞书机器人配置的分步截图指导&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223943381-39e0466f-2a5e-472a-9863-94eafb5f17b0.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223943448-228de5cb-0929-4d80-8087-8d8624dd6ddf.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223943485-ef331784-7940-4657-b128-70c98391e72f.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223943527-60e6653a-eb6e-4062-a076-b6c9da934352.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223943972-f49adf9f-af5f-463a-8c7a-c1f0cac0e8c3.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223944060-7ef630a4-4248-4509-852b-cad8bfffeefc.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223944230-aff586be-31cc-40de-9b1a-7d4e259d54dd.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223944350-917d115c-6c82-4d8b-9ec8-b5c82331a2dc.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223944381-97396156-f5e2-467f-aaf6-b1f6e1c446b2.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/230003546-36450f2f-b6e9-4292-8b40-3a4aa8a05a64.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223945122-f7ab3d9a-6742-43d2-970e-ddb0f284c7fa.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223944507-8d1a08d7-8b5b-4f32-a90d-fd338164ec82.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223944515-fb505e84-c840-484a-8df5-612f60bf27ea.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/223944590-ad61320f-c14a-4542-80ad-dee2e6469b67.png&#34; alt=&#34;&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;获取 &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI&lt;/a&gt; 的 KEY( 🙉 下面有免费的 KEY 供大家测试部署 )&lt;/li&gt; &#xA; &lt;li&gt;创建 &lt;a href=&#34;https://open.feishu.cn/&#34;&gt;飞书&lt;/a&gt; 机器人 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;前往&lt;a href=&#34;https://open.feishu.cn/app?lang=zh-CN&#34;&gt;开发者平台&lt;/a&gt;创建应用,并获取到 APPID 和 Secret&lt;/li&gt; &#xA;   &lt;li&gt;前往&lt;code&gt;应用功能-机器人&lt;/code&gt;, 创建机器人&lt;/li&gt; &#xA;   &lt;li&gt;从 cpolar、serverless 或 Railway 获得公网地址，在飞书机器人后台的 &lt;code&gt;事件订阅&lt;/code&gt; 板块填写。例如， &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;http://xxxx.r6.cpolar.top&lt;/code&gt;为 cpolar 暴露的公网地址&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;/webhook/event&lt;/code&gt;为统一的应用路由&lt;/li&gt; &#xA;     &lt;li&gt;最终的回调地址为 &lt;code&gt;http://xxxx.r6.cpolar.top/webhook/event&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;在飞书机器人后台的 &lt;code&gt;机器人&lt;/code&gt; 板块，填写消息卡片请求网址。例如， &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;http://xxxx.r6.cpolar.top&lt;/code&gt;为 cpolar 暴露的公网地址&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;/webhook/card&lt;/code&gt;为统一的应用路由&lt;/li&gt; &#xA;     &lt;li&gt;最终的消息卡片请求网址为 &lt;code&gt;http://xxxx.r6.cpolar.top/webhook/card&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;在事件订阅板块，搜索三个词&lt;code&gt;机器人进群&lt;/code&gt;、 &lt;code&gt;接收消息&lt;/code&gt;、 &lt;code&gt;消息已读&lt;/code&gt;, 把他们后面所有的权限全部勾选。 进入权限管理界面，搜索&lt;code&gt;图片&lt;/code&gt;, 勾选&lt;code&gt;获取与上传图片或文件资源&lt;/code&gt;。 最终会添加下列回调事件 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;im:resource(获取与上传图片或文件资源)&lt;/li&gt; &#xA;     &lt;li&gt;im:message&lt;/li&gt; &#xA;     &lt;li&gt;im:message.group_at_msg(获取群组中所有消息)&lt;/li&gt; &#xA;     &lt;li&gt;im:message.group_at_msg:readonly(接收群聊中@机器人消息事件)&lt;/li&gt; &#xA;     &lt;li&gt;im:message.p2p_msg(获取用户发给机器人的单聊消息)&lt;/li&gt; &#xA;     &lt;li&gt;im:message.p2p_msg:readonly(读取用户发给机器人的单聊消息)&lt;/li&gt; &#xA;     &lt;li&gt;im:message:send_as_bot(获取用户在群组中@机器人的消息)&lt;/li&gt; &#xA;     &lt;li&gt;im:chat:readonly(获取群组信息)&lt;/li&gt; &#xA;     &lt;li&gt;im:chat(获取与更新群组信息)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;发布版本，等待企业管理员审核通过&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;更多介绍，参考&lt;a href=&#34;https://www.bilibili.com/video/BV12M41187rV/&#34;&gt;飞书上的小计算器: Go 机器人来啦&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;免费 Openai_Key&lt;/h2&gt; &#xA;&lt;a href=&#34;https://freeopenai.xyz/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/50035229/229976556-99e8ac26-c8c3-4f56-902d-a52a7f2e50d5.png&#34; alt=&#34;&#34; width=&#34;330&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;这里有些&lt;a href=&#34;https://freeopenai.xyz/&#34;&gt;免费的OpenAI Key&lt;/a&gt;, 大家可测试使用。&lt;/p&gt; &#xA;&lt;h2&gt;更多交流&lt;/h2&gt; &#xA;&lt;p&gt;如需协助部署，或者其他定制服务，可联系下面的WeChat，支持发票~&lt;/p&gt; &#xA;&lt;p&gt;遇到问题，可以加入飞书群沟通~&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/50035229/229813025-516d09f7-7de3-46b5-8407-f0bbf8b44344.png&#34; alt=&#34;&#34; width=&#34;200&#34;&gt; &#xA;&lt;h2&gt;交朋友 或者 鼓励一下&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得这个项目对你有帮助，可以请作者买本书~&lt;/p&gt; &#xA;&lt;img width=&#34;400&#34; src=&#34;https://user-images.githubusercontent.com/50035229/224462896-28f7b2d5-f443-4cc2-9790-7b72e5c53f15.png&#34;&gt; &#xA;&lt;p&gt;😚 谢谢你啦 😚&lt;/p&gt;</summary>
  </entry>
</feed>