<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-03T01:28:12Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Telmate/terraform-provider-proxmox</title>
    <updated>2024-02-03T01:28:12Z</updated>
    <id>tag:github.com,2024-02-03:/Telmate/terraform-provider-proxmox</id>
    <link href="https://github.com/Telmate/terraform-provider-proxmox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Terraform provider plugin for proxmox&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/Telmate/terraform-provider-proxmox&#34;&gt;&lt;img src=&#34;https://travis-ci.com/Telmate/terraform-provider-proxmox.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Terraform provider plugin for Proxmox&lt;/h1&gt; &#xA;&lt;p&gt;This repository provides a Terraform provider for the &lt;a href=&#34;https://pve.proxmox.com/pve-docs/&#34;&gt;Proxmox virtualization platform&lt;/a&gt; and exposes Terraform resources to provision QEMU VMs and LXC Containers.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;In order to get started, use &lt;a href=&#34;https://raw.githubusercontent.com/Telmate/terraform-provider-proxmox/master/docs/index.md&#34;&gt;the documentation included in this repository&lt;/a&gt;. The documentation contains a list of the options for the provider. Moreover, there are some guides available how to combine options and start specific VMs.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Follow this &lt;a href=&#34;https://raw.githubusercontent.com/Telmate/terraform-provider-proxmox/master/docs/guides/installation.md&#34;&gt;install guide&lt;/a&gt; to install the plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Known Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;proxmox_vm_qemu&lt;/code&gt;.&lt;code&gt;disk&lt;/code&gt;.&lt;code&gt;size&lt;/code&gt; attribute does not match what is displayed in the Proxmox UI.&lt;/li&gt; &#xA; &lt;li&gt;Updates to &lt;code&gt;proxmox_vm_qemu&lt;/code&gt; resources almost always result as a failed task within the Proxmox UI. This appears to be harmless and the desired configuration changes do get applied.&lt;/li&gt; &#xA; &lt;li&gt;When using the &lt;code&gt;proxmox_lxc&lt;/code&gt; resource, the provider will crash unless &lt;code&gt;rootfs&lt;/code&gt; is defined.&lt;/li&gt; &#xA; &lt;li&gt;When using the Network Boot mode (PXE), a valid NIC must be defined for the VM, and the boot order must specify network first.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;When contributing, please also add documentation to help other users.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging the provider&lt;/h3&gt; &#xA;&lt;p&gt;Debugging is available for this provider through the Terraform Plugin SDK versions 2.0.0. Therefore, the plugin can be started with the debugging flag &lt;code&gt;--debug&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example (using &lt;a href=&#34;https://github.com/go-delve/delve&#34;&gt;delve&lt;/a&gt; as Debugger):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dlv exec --headless ./terraform-provider-my-provider -- --debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about debugging a provider please see: &lt;a href=&#34;https://www.terraform.io/docs/extend/debugging.html#debugger-based-debugging&#34;&gt;Debugger-Based Debugging&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.proxmox.com/en/&#34;&gt;Proxmox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pve.proxmox.com/pve-docs/&#34;&gt;Proxmox documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.terraform.io/&#34;&gt;Terraform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.terraform.io/docs/index.html&#34;&gt;Terraform documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Telmate/terraform-ubuntu-proxmox-iso&#34;&gt;Recommended ISO builder&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>blast-io/blast</title>
    <updated>2024-02-03T01:28:12Z</updated>
    <id>tag:github.com,2024-02-03:/blast-io/blast</id>
    <link href="https://github.com/blast-io/blast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blast&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains Blast&#39;s fork of optimism and op-geth. This initial release is primarily for security researchers participating in our audit competition (see: &lt;a href=&#34;https://twitter.com/cantinaxyz/status/1750926669131440519&#34;&gt;https://twitter.com/cantinaxyz/status/1750926669131440519&lt;/a&gt;). If you&#39;re interested in running a Blast Sepolia Testnet node, more details and instructions will follow soon.&lt;/p&gt; &#xA;&lt;h2&gt;Running Blast locally (against a local L1)&lt;/h2&gt; &#xA;&lt;h3&gt;Prereqs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;docker&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;go1.20&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;pnpm&lt;/code&gt;, &lt;code&gt;foundry&lt;/code&gt;, &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt;, &lt;code&gt;direnv&lt;/code&gt;, &lt;code&gt;jq&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Build the blast-geth docker image&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build blast-geth -f blast-geth/Dockerfile -t blast-geth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Compile the smart contracts &amp;amp; start the devnet&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;export BLAST_ROOT=$(realpath blast-optimism)&#xA;&#xA;# Compile the smart contracts &amp;amp; deploy them to the L1&#xA;cd blast-optimism/packages/contracts-bedrock&#xA;pnpm clean  &#xA;pnpm install&#xA;pnpm build&#xA;&#xA;# If you&#39;re on a mac, you might need rosetta instructions, ONLY IF NEEDED FOR M1/M2:&#xA;# /usr/sbin/softwareupdate --install-rosetta --agree-to-license`&#xA;&#xA;cd $BLAST_ROOT&#xA;&#xA;# Install geth&#xA;make install-geth&#xA;&#xA;# Make sure geth is in your PATH, if it&#39;s not, you can set it using&#xA;# export PATH=&#34;${PATH}:${GOPATH}/bin:${HOME}/go/bin&#34;&#xA;&#xA;make cannon-prestate&#xA;&#xA;# Run the devnet in docker&#xA;# L1 RPC: http://localhost:8545&#xA;# L2 RPC: http://localhost:9545&#xA;make devnet-up&#xA;&#xA;# To stop devnet run command&#xA;make devnet-down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;L1 faucet address&lt;/h3&gt; &#xA;&lt;p&gt;This is the private key for the devnet L1 faucet: &lt;code&gt;0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the corresponding address: &lt;code&gt;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using the L2&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Send some ETH from the L1 faucet to your wallet on the L1&lt;/li&gt; &#xA; &lt;li&gt;Find the Blast bridge address using the command below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $BLAST_ROOT&#xA;cat ./packages/contracts-bedrock/deployments/devnetL1/L1BlastBridgeProxy.json | grep -m 1 &#39;&#34;address&#34;: &#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Send L1 ETH from your wallet to bridge address above&lt;/li&gt; &#xA; &lt;li&gt;Wait for the tx to get confirmed&lt;/li&gt; &#xA; &lt;li&gt;Your wallet should now have ETH on the L2&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>