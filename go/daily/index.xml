<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-22T01:32:23Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GhostTroops/scan4all</title>
    <updated>2023-12-22T01:32:23Z</updated>
    <id>tag:github.com,2023-12-22:/GhostTroops/scan4all</id>
    <link href="https://github.com/GhostTroops/scan4all" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official repository vuls Scan: 15000+PoCs; 23 kinds of application password crack; 7000+Web fingerprints; 146 protocols and 90000+ rules Port scanning; Fuzz, HW, awesome BugBounty( Õ°¬∞ Õú ñ Õ°¬∞)...&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=Hktalent3135773&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/Hktalent3135773.svg?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=Hktalent3135773&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/Hktalent3135773.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Follow on Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hktalent/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/followers/hktalent.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;GitHub Followers&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://chat.51pwn.com:2083/?cnId=51pwn&amp;amp;atRd=true&amp;amp;stChat=1&#34;&gt;üí¨&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/README_CN.md&#34;&gt;README_‰∏≠Êñá&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/Installation.md&#34;&gt;Compile/Install/Run&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/usage.md&#34;&gt;Parameter Description&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/running.md&#34;&gt;How to use&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/scenario.md&#34;&gt;Scenario&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/pocs.md&#34;&gt;POC List&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/development.md&#34;&gt;Custom Scan&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/NicePwn.md&#34;&gt;Best Practices&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img width=&#34;928&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/18223385/175768227-098c779b-6c5f-48ee-91b1-c56e3daa9c87.png&#34;&gt; &lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hktalent/51Pwn-Platform/raw/main/README.md&#34;&gt;Free one id Multi-target web netcat for reverse shell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;What is scan4all: integrated vscan, nuclei, ksubdomain, subfinder, etc., fully automated and intelligent„ÄÇred team tools Code-level optimization, parameter optimization, and individual modules, such as vscan filefuzz, have been rewritten for these integrated projects. In principle, do not repeat the wheel, unless there are bugs, problems&lt;/li&gt; &#xA; &lt;li&gt;Cross-platform: based on golang implementation, lightweight, highly customizable, open source, supports Linux, windows, mac os, etc.&lt;/li&gt; &#xA; &lt;li&gt;Support [23] password blasting, support custom dictionary, open by &#34;priorityNmap&#34;: true &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RDP&lt;/li&gt; &#xA;   &lt;li&gt;VNC&lt;/li&gt; &#xA;   &lt;li&gt;SSH&lt;/li&gt; &#xA;   &lt;li&gt;Socks5&lt;/li&gt; &#xA;   &lt;li&gt;rsh-spx&lt;/li&gt; &#xA;   &lt;li&gt;Mysql&lt;/li&gt; &#xA;   &lt;li&gt;MsSql&lt;/li&gt; &#xA;   &lt;li&gt;Oracle&lt;/li&gt; &#xA;   &lt;li&gt;Postgresql&lt;/li&gt; &#xA;   &lt;li&gt;Redis&lt;/li&gt; &#xA;   &lt;li&gt;FTP&lt;/li&gt; &#xA;   &lt;li&gt;Mongodb&lt;/li&gt; &#xA;   &lt;li&gt;SMB, also detect MS17-010 (CVE-2017-0143, CVE-2017-0144, CVE-2017-0145, CVE-2017-0146, CVE-2017-0147, CVE-2017-0148), SmbGhost (CVE- 2020-0796)&lt;/li&gt; &#xA;   &lt;li&gt;Telnet&lt;/li&gt; &#xA;   &lt;li&gt;Snmp&lt;/li&gt; &#xA;   &lt;li&gt;Wap-wsp (Elasticsearch)&lt;/li&gt; &#xA;   &lt;li&gt;RouterOs&lt;/li&gt; &#xA;   &lt;li&gt;HTTP BasicAuth(Authorization), contains Webdav„ÄÅSVNÔºàApache SubversionÔºâ crack&lt;/li&gt; &#xA;   &lt;li&gt;Weblogic, enable nuclei through enableNuclei=true at the same time, support T3, IIOP and other detection&lt;/li&gt; &#xA;   &lt;li&gt;Tomcat&lt;/li&gt; &#xA;   &lt;li&gt;Jboss&lt;/li&gt; &#xA;   &lt;li&gt;Winrm(wsman)&lt;/li&gt; &#xA;   &lt;li&gt;POP3/POP3S&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;By default, http password intelligent blasting is enabled, and it will be automatically activated when an HTTP password is required, without manual intervention&lt;/li&gt; &#xA; &lt;li&gt;Detect whether there is nmap in the system, and enable nmap for fast scanning through priorityNmap=true, which is enabled by default, and the optimized nmap parameters are faster than masscan Disadvantages of using nmap: Is the network bad, because the traffic network packet is too large, which may lead to incomplete results Using nmap additionally requires setting the root password to an environment variable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  export PPSSWWDD=yourRootPswd &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More references: config/doNmapScan.sh By default, naabu is used to complete port scanning -stats=true to view the scanning progress Can I not scan Ports?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;noScan=true ./scan4all -l list.txt -v&#xA;# nmap result default noScan=true &#xA;./scan4all -l nmapRssuilt.xml -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/nmap.gif&#34; width=&#34;400&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast 15000+ POC detection capabilities, PoCs include: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;nuclei POC&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;h2&gt;Nuclei Templates Top 10 statistics&lt;/h2&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;TAG&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;   &lt;th&gt;AUTHOR&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;   &lt;th&gt;DIRECTORY&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;   &lt;th&gt;SEVERITY&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;   &lt;th&gt;TYPE&lt;/th&gt; &#xA;   &lt;th&gt;COUNT&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cve&lt;/td&gt; &#xA;   &lt;td&gt;1430&lt;/td&gt; &#xA;   &lt;td&gt;daffainfo&lt;/td&gt; &#xA;   &lt;td&gt;631&lt;/td&gt; &#xA;   &lt;td&gt;cves&lt;/td&gt; &#xA;   &lt;td&gt;1407&lt;/td&gt; &#xA;   &lt;td&gt;info&lt;/td&gt; &#xA;   &lt;td&gt;1474&lt;/td&gt; &#xA;   &lt;td&gt;http&lt;/td&gt; &#xA;   &lt;td&gt;3858&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;panel&lt;/td&gt; &#xA;   &lt;td&gt;655&lt;/td&gt; &#xA;   &lt;td&gt;dhiyaneshdk&lt;/td&gt; &#xA;   &lt;td&gt;584&lt;/td&gt; &#xA;   &lt;td&gt;exposed-panels&lt;/td&gt; &#xA;   &lt;td&gt;662&lt;/td&gt; &#xA;   &lt;td&gt;high&lt;/td&gt; &#xA;   &lt;td&gt;1009&lt;/td&gt; &#xA;   &lt;td&gt;file&lt;/td&gt; &#xA;   &lt;td&gt;76&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;edb&lt;/td&gt; &#xA;   &lt;td&gt;563&lt;/td&gt; &#xA;   &lt;td&gt;pikpikcu&lt;/td&gt; &#xA;   &lt;td&gt;329&lt;/td&gt; &#xA;   &lt;td&gt;vulnerabilities&lt;/td&gt; &#xA;   &lt;td&gt;509&lt;/td&gt; &#xA;   &lt;td&gt;medium&lt;/td&gt; &#xA;   &lt;td&gt;818&lt;/td&gt; &#xA;   &lt;td&gt;network&lt;/td&gt; &#xA;   &lt;td&gt;51&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lfi&lt;/td&gt; &#xA;   &lt;td&gt;509&lt;/td&gt; &#xA;   &lt;td&gt;pdteam&lt;/td&gt; &#xA;   &lt;td&gt;269&lt;/td&gt; &#xA;   &lt;td&gt;technologies&lt;/td&gt; &#xA;   &lt;td&gt;282&lt;/td&gt; &#xA;   &lt;td&gt;critical&lt;/td&gt; &#xA;   &lt;td&gt;478&lt;/td&gt; &#xA;   &lt;td&gt;dns&lt;/td&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xss&lt;/td&gt; &#xA;   &lt;td&gt;491&lt;/td&gt; &#xA;   &lt;td&gt;geeknik&lt;/td&gt; &#xA;   &lt;td&gt;187&lt;/td&gt; &#xA;   &lt;td&gt;exposures&lt;/td&gt; &#xA;   &lt;td&gt;275&lt;/td&gt; &#xA;   &lt;td&gt;low&lt;/td&gt; &#xA;   &lt;td&gt;225&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wordpress&lt;/td&gt; &#xA;   &lt;td&gt;419&lt;/td&gt; &#xA;   &lt;td&gt;dwisiswant0&lt;/td&gt; &#xA;   &lt;td&gt;169&lt;/td&gt; &#xA;   &lt;td&gt;misconfiguration&lt;/td&gt; &#xA;   &lt;td&gt;237&lt;/td&gt; &#xA;   &lt;td&gt;unknown&lt;/td&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;exposure&lt;/td&gt; &#xA;   &lt;td&gt;407&lt;/td&gt; &#xA;   &lt;td&gt;0x_akoko&lt;/td&gt; &#xA;   &lt;td&gt;165&lt;/td&gt; &#xA;   &lt;td&gt;token-spray&lt;/td&gt; &#xA;   &lt;td&gt;230&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cve2021&lt;/td&gt; &#xA;   &lt;td&gt;352&lt;/td&gt; &#xA;   &lt;td&gt;princechaddha&lt;/td&gt; &#xA;   &lt;td&gt;151&lt;/td&gt; &#xA;   &lt;td&gt;workflows&lt;/td&gt; &#xA;   &lt;td&gt;189&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rce&lt;/td&gt; &#xA;   &lt;td&gt;337&lt;/td&gt; &#xA;   &lt;td&gt;ritikchaddha&lt;/td&gt; &#xA;   &lt;td&gt;137&lt;/td&gt; &#xA;   &lt;td&gt;default-logins&lt;/td&gt; &#xA;   &lt;td&gt;103&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wp-plugin&lt;/td&gt; &#xA;   &lt;td&gt;316&lt;/td&gt; &#xA;   &lt;td&gt;pussycat0x&lt;/td&gt; &#xA;   &lt;td&gt;133&lt;/td&gt; &#xA;   &lt;td&gt;file&lt;/td&gt; &#xA;   &lt;td&gt;76&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;281 directories, 3922 files&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;vscan POC &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;vscan POC includes: xray 2.0 300+ POC, go POC, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;scan4all POC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Support 7000+ web fingerprint scanning, identification:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;httpx fingerprint &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;vscan fingerprint&lt;/li&gt; &#xA;     &lt;li&gt;vscan fingerprint: including eHoleFinger, localFinger, etc.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;scan4all fingerprint&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support 146 protocols and 90000+ rule port scanning&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Depends on protocols and fingerprints supported by nmap&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fast HTTP sensitive file detection, can customize dictionary&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Landing page detection&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports multiple types of input - STDIN/HOST/IP/CIDR/URL/TXT&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports multiple output types - JSON/TXT/CSV/STDOUT&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Highly integratable: Configurable unified storage of results to Elasticsearch [strongly recommended]&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Smart SSL Analysis:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In-depth analysis, automatically correlate the scanning of domain names in SSL information, such as *.xxx.com, and complete subdomain traversal according to the configuration, and the result will automatically add the target to the scanning list&lt;/li&gt; &#xA;   &lt;li&gt;Support to enable *.xx.com subdomain traversal function in smart SSL information, export EnableSubfinder=true, or adjust in the configuration file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Automatically identify the case of multiple IPs associated with a domain (DNS), and automatically scan the associated multiple IPs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Smart processing:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;When the IPs of multiple domain names in the list are the same, merge port scans to improve efficiency&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &#xA;    &lt;ol start=&#34;2&#34;&gt; &#xA;     &lt;li&gt;Intelligently handle http abnormal pages, and fingerprint calculation and learning&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Automated supply chain identification, analysis and scanning&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Link python3 &lt;a href=&#34;https://github.com/hktalent/log4j-scan&#34;&gt;log4j-scan&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This version blocks the bug that your target information is passed to the DNS Log Server to avoid exposing vulnerabilities&lt;/li&gt; &#xA;   &lt;li&gt;Added the ability to send results to Elasticsearch for batch, touch typing&lt;/li&gt; &#xA;   &lt;li&gt;There will be time in the future to implement the golang version how to use?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir ~/MyWork/;cd ~/MyWork/;git clone https://github.com/hktalent/log4j-scan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Intelligently identify honeypots and skip Targets. This function is disabled by default. You can set EnableHoneyportDetection=true to enable&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Highly customizable: allow to define your own dictionary through config/config.json configuration, or control more details, including but not limited to: nuclei, httpx, naabu, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;support HTTP Request Smuggling: CL-TE„ÄÅTE-CL„ÄÅTE-TE„ÄÅCL_CL„ÄÅBaseErr &lt;img width=&#34;968&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/18223385/182503765-1307a634-61b2-4f7e-9631-a4184ec7ac25.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support via parameter Cookie=&#39;PHPSession=xxxx&#39; ./scan4all -host xxxx.com, compatible with nuclei, httpx, go-poc, x-ray POC, filefuzz, http Smuggling&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;work process&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/GhostTroops/scan4all/main/static/workflow.jpg&#34;&gt; &#xA;&lt;h1&gt;how to install&lt;/h1&gt; &#xA;&lt;p&gt;download from &lt;a href=&#34;https://github.com/GhostTroops/scan4all/releases&#34;&gt;Releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/GhostTroops/scan4all@2.8.9&#xA;scan4all -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;how to use&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Start Elasticsearch, of course you can use the traditional way to output, results&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p logs data&#xA;docker run --restart=always --ulimit nofile=65536:65536 -p 9200:9200 -p 9300:9300 -d --name es -v $PWD/logs:/usr/share/elasticsearch/logs -v $PWD /config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v $PWD/config/jvm.options:/usr/share/elasticsearch/config/jvm.options -v $PWD/data:/ usr/share/elasticsearch/data hktalent/elasticsearch:7.16.2&#xA;# Initialize the es index, the result structure of each tool is different, and it is stored separately&#xA;./config/initEs.sh&#xA;&#xA;# Search syntax, more query methods, learn Elasticsearch by yourself&#xA;http://127.0.0.1:9200/nmap_index/_doc/_search?q=_id:192.168.0.111&#xA;where 92.168.0.111 is the target to query&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please install nmap by yourself before use &lt;a href=&#34;https://github.com/GhostTroops/scan4all/discussions&#34;&gt;Using Help&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build&#xA;# Precise scan szUrl list UrlPrecise=true&#xA;UrlPrecise=true ./scan4all -l xx.txt&#xA;# Disable adaptation to nmap and use naabu port to scan its internally defined http-related Ports&#xA;priorityNmap=false ./scan4all -tp http -list allOut.txt -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Work Plan&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integrate web-cache-vulnerability-scanner to realize HTTP smuggling smuggling and cache poisoning detection&lt;/li&gt; &#xA; &lt;li&gt;Linkage with metasploit-framework, on the premise that the system has been installed, cooperate with tmux, and complete the linkage with the macos environment as the best practice&lt;/li&gt; &#xA; &lt;li&gt;Integrate more fuzzers &#xA;  &lt;!-- gryffin --&gt;, such as linking sqlmap&lt;/li&gt; &#xA; &lt;li&gt;Integrate chromedp to achieve screenshots of landing pages, detection of front-end landing pages with pure js and js architecture, and corresponding crawlers (sensitive information detection, page crawling)&lt;/li&gt; &#xA; &lt;li&gt;Integrate nmap-go to improve execution efficiency, dynamically parse the result stream, and integrate it into the current task waterfall&lt;/li&gt; &#xA; &lt;li&gt;Integrate ksubdomain to achieve faster subdomain blasting&lt;/li&gt; &#xA; &lt;li&gt;Integrate spider to find more bugs&lt;/li&gt; &#xA; &lt;li&gt;Semi-automatic fingerprint learning to improve accuracy; specify fingerprint name, configure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Q &amp;amp; A&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;how use Cookie?&lt;/li&gt; &#xA; &lt;li&gt;libpcap related question&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;more see: &lt;a href=&#34;https://github.com/GhostTroops/scan4all/discussions&#34;&gt;discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;References&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.77169.net/html/312916.html&#34;&gt;https://www.77169.net/html/312916.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/636131542&#34;&gt;https://zhuanlan.zhihu.com/p/636131542&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GhostTroops/scan4all/raw/main/static/Installation.md&#34;&gt;https://github.com/GhostTroops/scan4all/blob/main/static/Installation.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GhostTroops/scan4all/raw/main/static/NicePwn.md&#34;&gt;https://github.com/GhostTroops/scan4all/blob/main/static/NicePwn.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GhostTroops/scan4all/raw/main/static/running.md&#34;&gt;https://github.com/GhostTroops/scan4all/blob/main/static/running.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.google.com/search?client=safari&amp;amp;rls=en&amp;amp;q=%22hktalent%22+%22scan4all%22&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8#ip=1&#34;&gt;https://www.google.com/search?client=safari&amp;amp;rls=en&amp;amp;q=%22hktalent%22+%22scan4all%22&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8#ip=1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Thanks Donors&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/freeload101&#34; target=&#34;_blank&#34;&gt;@freeload101&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/b1win0y&#34; target=&#34;_blank&#34;&gt;@b1win0y&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BL4CKR4Y&#34; target=&#34;_blank&#34;&gt;@BL4CKR4Y&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GhostTroops/scan4all/graphs/contributors&#34;&gt;https://github.com/GhostTroops/scan4all/graphs/contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Changelog&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023-10-01 Optimize support for nuclei@latest&lt;/li&gt; &#xA; &lt;li&gt;2022-07-28 Added substr and aes_cbc dsl helper by me nuclei v2.7.7&lt;/li&gt; &#xA; &lt;li&gt;2022-07-20 fix and PR nuclei #2301 Concurrent multi-instance bug&lt;/li&gt; &#xA; &lt;li&gt;2022-07-20 add web cache vulnerability scanner&lt;/li&gt; &#xA; &lt;li&gt;2022-07-19 PR nuclei #2308 add dsl function: substr aes_cbc&lt;/li&gt; &#xA; &lt;li&gt;2022-07-19 Add dcom Protocol enumeration network interfaces&lt;/li&gt; &#xA; &lt;li&gt;2022-06-30 Embedded integrated private version nuclei-templates A total of 3744 YAML POC; 1. Integrate Elasticsearch to store intermediate results 2. Embed the entire config directory into the program&lt;/li&gt; &#xA; &lt;li&gt;2022-06-27 Optimize fuzzy matching to improve accuracy and robustness; integrate ksubdomain progress&lt;/li&gt; &#xA; &lt;li&gt;2022-06-24 Optimize fingerprint algorithm; add workflow chart&lt;/li&gt; &#xA; &lt;li&gt;2022-06-23 Added parameter ParseSSl to control the default of not deeply analyzing DNS information in SSL and not scanning DNS in SSL by default; Optimization: nmap does not automatically add .exe bug; Optimize the bug of cache files under Windows not optimizing the size&lt;/li&gt; &#xA; &lt;li&gt;2022-06-22 Integrated weak password detection and password blasting for 11 protocols: ftp, mongodb, mssql, mysql, oracle, postgresql, rdp, redis, smb, ssh, telnet, and optimized support for plug-in password dictionary&lt;/li&gt; &#xA; &lt;li&gt;2022-06-20 Integrate Subfinder, domain name blasting, startup parameter export EnableSubfinder=true, note that it is very slow after startup; automatic deep drilling of domain name information in the ssl certificate allows you to define your own dictionary through config/config.json configuration, or set related switch&lt;/li&gt; &#xA; &lt;li&gt;2022-06-17 Optimize the situation where one domain name has multiple IPs. All IPs will be port scanned, and then follow the subsequent scanning process.&lt;/li&gt; &#xA; &lt;li&gt;2022-06-15 This version adds several weblogic password dictionaries and webshell dictionaries obtained in past actual combat&lt;/li&gt; &#xA; &lt;li&gt;2022-06-10 Complete the integration of the core, including of course the integration of the core template&lt;/li&gt; &#xA; &lt;li&gt;2022-06-07 Add similarity algorithm to detect 404&lt;/li&gt; &#xA; &lt;li&gt;2022-06-07 Added http url list precision scanning parameters, turned on according to the environment variable UrlPrecise=true&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Communication group (WeChat, QQÔºåTg)&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Wechat&lt;/th&gt; &#xA;   &lt;th&gt;Or&lt;/th&gt; &#xA;   &lt;th&gt;QQchat&lt;/th&gt; &#xA;   &lt;th&gt;Or&lt;/th&gt; &#xA;   &lt;th&gt;Tg&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/scan4all/raw/main/static/wcq.JPG&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/scan4all/raw/main/static/qqc.jpg&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://github.com/hktalent/scan4all/raw/main/static/tg.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;üíñStar&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/hktalent/scan4all&#34;&gt;&lt;img src=&#34;https://starchart.cc/hktalent/scan4all.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Donation&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Wechat Pay&lt;/th&gt; &#xA;   &lt;th&gt;AliPay&lt;/th&gt; &#xA;   &lt;th&gt;Paypal&lt;/th&gt; &#xA;   &lt;th&gt;BTC Pay&lt;/th&gt; &#xA;   &lt;th&gt;BCH Pay&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hktalent/myhktools/main/md/wc.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://raw.githubusercontent.com/hktalent/myhktools/main/md/zfb.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.paypal.me/pwned2019&#34;&gt;paypal&lt;/a&gt; &lt;strong&gt;&lt;a href=&#34;mailto:miracletalent@gmail.com&#34;&gt;miracletalent@gmail.com&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://raw.githubusercontent.com/hktalent/myhktools/main/md/BTC.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;166&#34; src=&#34;https://raw.githubusercontent.com/hktalent/myhktools/main/md/BCH.jpg&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>RUB-NDS/Terrapin-Scanner</title>
    <updated>2023-12-22T01:32:23Z</updated>
    <id>tag:github.com,2023-12-22:/RUB-NDS/Terrapin-Scanner</id>
    <link href="https://github.com/RUB-NDS/Terrapin-Scanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains a simple vulnerability scanner for the Terrapin attack present in the paper &#34;Terrapin Attack: Breaking SSH Channel Integrity By Sequence Number Manipulation&#34;.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terrapin Vulnerability Scanner&lt;/h1&gt; &#xA;&lt;p&gt;The Terrapin Vulnerability Scanner is a small utility program written in Go, which can be used to determine the vulnerability of an SSH client or server against the &lt;a href=&#34;https://terrapin-attack.com&#34;&gt;Terrapin Attack&lt;/a&gt;. The vulnerability scanner requires a single connection with the peer to gather all supported algorithms. However, it does not perform a fully fledged SSH key exchange, will never attempt authentication on a server, and does not perform the attack in practice. Instead, vulnerability is determined by checking the supported algorithms and support for known countermeasures (strict key exchange). This may falsely claim vulnerability in case the peer supports countermeasures unknown to this tool.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;For convenience, we are providing pre-compiled binaries for all major desktop platforms. These can be found on the &lt;a href=&#34;https://github.com/RUB-NDS/Terrapin-Scanner/releases/latest&#34;&gt;Release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;However, we understand that you might prefer building tools, that connect to your SSH server, yourself. To do this, ensure that you have at least Go v1.21 installed. To compile and install the Terrapin Vulnerability Scanner Go package, run the command below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install github.com/RUB-NDS/Terrapin-Scanner@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will download, compile, and install the Go package for your local system. The compiled binary will become available at &lt;code&gt;$GOBIN/Terrapin-Scanner&lt;/code&gt;. If the &lt;code&gt;GOBIN&lt;/code&gt; environment variable is not set, Go will default to using &lt;code&gt;$GOPATH/bin&lt;/code&gt; or &lt;code&gt;$HOME/go/bin&lt;/code&gt;, depending on whether the &lt;code&gt;$GOPATH&lt;/code&gt; environment variable is set.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Scan the SSH server available at localhost port 2222&#xA;./Terrapin-Scanner --connect localhost:2222&#xA;&#xA;# If no port is specified, the tool will default to port 22 instead&#xA;./Terrapin-Scanner --connect localhost&#xA;&#xA;# To scan an SSH client, specify the listen command instead&#xA;# After running the command, you will need to connect with your SSH client to port 2222&#xA;./Terrapin-Scanner --listen 0.0.0.0:2222&#xA;&#xA;# When binding to localhost, you can omit the interface address&#xA;# The following command will listen for incoming connections on 127.0.0.1:2222&#xA;./Terrapin-Scanner --listen 2222&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The scanner supports outputting the scan result as json. To do so, provide the &lt;code&gt;--json&lt;/code&gt; flag when calling the scanner. The output is structured as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;Banner&#34;: &#34;SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.5&#34;,&#xA;    &#34;SupportsChaCha20&#34;: true,&#xA;    &#34;SupportsCbcEtm&#34;: false,&#xA;    &#34;SupportsStrictKex&#34;: true,&#xA;    &#34;Vulnerable&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>