<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T01:41:55Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rocboss/paopao-ce</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/rocboss/paopao-ce</id>
    <link href="https://github.com/rocboss/paopao-ce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥A artistic &#34;twitter like&#34; community built on gin+zinc+vue+ts 清新文艺微社区&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;!-- PROJECT SHIELDS --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/rocboss/paopao-ce&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/rocboss/paopao-ce&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/rocboss/paopao-ce?style=flat&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/rocboss/paopao-ce?style=flat&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocboss/paopao-ce/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/rocboss/paopao-ce.svg?style=flat&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- PROJECT LOGO --&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/rocboss/paopao-ce&#34;&gt; &lt;img src=&#34;https://cdn.rocs.me/static/paopao-logo.png&#34; alt=&#34;Logo&#34; width=&#34;80&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;PaoPao&lt;/h3&gt; &#xA; &lt;p align=&#34;center&#34;&gt; 🔥一个清新文艺的微社区 &lt;br&gt; &lt;a href=&#34;https://www.paopao.info/&#34;&gt;View Demo&lt;/a&gt; · &lt;a href=&#34;https://github.com/rocboss/paopao-ce/issues&#34;&gt;Report Bug&lt;/a&gt; · &lt;a href=&#34;https://www.rocs.me/archives/paopao.html&#34;&gt;Features&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;预览&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paopao.info&#34;&gt;&lt;img src=&#34;https://cdn.rocs.me/static/paopao-light.jpeg&#34; alt=&#34;明色主题&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paopao.info&#34;&gt;&lt;img src=&#34;https://cdn.rocs.me/static/paopao-dark.jpeg&#34; alt=&#34;暗色主题&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;更多演示请前往&lt;a href=&#34;https://www.paopao.info&#34;&gt;官网&lt;/a&gt;体验（谢绝灌水）&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/rocboss/paopao-ce/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;🛠 技术栈&lt;/h2&gt; &#xA;&lt;p&gt;PaoPao主要由以下优秀的开源项目/工具构建&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gin-gonic.com/&#34;&gt;Gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zinclabs.io/&#34;&gt;Zinc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.naiveui.com/&#34;&gt;Naive UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite.js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- GETTING STARTED --&gt; &#xA;&lt;h2&gt;🏗 快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;环境要求&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go (1.17+)&lt;/li&gt; &#xA; &lt;li&gt;Node.js (14+)&lt;/li&gt; &#xA; &lt;li&gt;MySQL (5.7+)&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA; &lt;li&gt;Zinc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* Zinc是一款轻量级全文搜索引擎，可以查阅 &lt;a href=&#34;https://zincsearch.com/&#34;&gt;https://zincsearch.com/&lt;/a&gt; 安装&lt;/p&gt; &#xA;&lt;p&gt;以上环境版本为PaoPao官方的开发版本，仅供参考，其他版本的环境未进行充分测试&lt;/p&gt; &#xA;&lt;h3&gt;安装说明&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;宝塔安装&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;我们为宝塔用户提供了超详细安装教程 &lt;a href=&#34;https://www.rocs.me/archives/paopao_bt_install.html&#34;&gt;点此查看&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;普通安装&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;克隆代码库&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/rocboss/paopao-ce.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;后端&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;导入项目根目录下的 &lt;code&gt;paopao.sql&lt;/code&gt; 文件至MySQL数据库&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;拷贝项目根目录下 &lt;code&gt;config.yaml.sample&lt;/code&gt; 文件至 &lt;code&gt;config.yaml&lt;/code&gt;，按照注释完成配置编辑&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;编译后端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go mod download&#xA;go build -o paopao-api .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动后端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chmod +x paopao-api&#xA;./paopao-api&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;前端&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;进入前端目录 &lt;code&gt;web&lt;/code&gt;，编辑 &lt;code&gt;.env&lt;/code&gt; 文件中后端服务地址，下载依赖包&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ./web&#xA;vim .env&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;编译前端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;build完成后，可以在dist目录获取编译产出，配置nginx指向至该目录即可&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;其他说明&lt;/h3&gt; &#xA;&lt;p&gt;建议后端服务使用 &lt;code&gt;supervisor&lt;/code&gt; 守护进程，并通过 &lt;code&gt;nginx&lt;/code&gt; 反向代理后，提供API给前端服务调用。&lt;/p&gt; &#xA;&lt;p&gt;短信通道使用的&lt;a href=&#34;https://www.juhe.cn/&#34;&gt;聚合数据&lt;/a&gt;，如果申请不下来，可以考虑替换其他服务商。&lt;/p&gt; &#xA;&lt;p&gt;代码结构比较简单，很方便扩展&lt;/p&gt; &#xA;&lt;h2&gt;👯‍♀️ 贡献&lt;/h2&gt; &#xA;&lt;p&gt;喜欢的朋友欢迎给个Star、贡献PR。&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the MIT License. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;</summary>
  </entry>
  <entry>
    <title>OpenIMSDK/Open-IM-Server</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/OpenIMSDK/Open-IM-Server</id>
    <link href="https://github.com/OpenIMSDK/Open-IM-Server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;即时通讯IM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open-IM-Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/OpenIM-Docs/raw/main/docs/images/WechatIMG20.jpeg&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/open-im-logo.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache--2.0-green&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open-IM-Server: Open source Instant Messaging Server&lt;/h2&gt; &#xA;&lt;p&gt;Instant messaging server. Backend in pure Golang, wire transport protocol is JSON over websocket.&lt;/p&gt; &#xA;&lt;p&gt;Everything is a message in Open-IM-Server, so you can extend custom messages easily, there is no need to modify the server code.&lt;/p&gt; &#xA;&lt;p&gt;Using microservice architectures, Open-IM-Server can be deployed using clusters.&lt;/p&gt; &#xA;&lt;p&gt;By deployment of the Open-IM-Server on the customer&#39;s server, developers can integrate instant messaging and real-time network capabilities into their own applications free of charge and quickly, and ensure the security and privacy of business data.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Everything in Free&lt;/li&gt; &#xA; &lt;li&gt;Scalable architecture&lt;/li&gt; &#xA; &lt;li&gt;Easy integration&lt;/li&gt; &#xA; &lt;li&gt;Good scalability&lt;/li&gt; &#xA; &lt;li&gt;High performance&lt;/li&gt; &#xA; &lt;li&gt;Lightweight&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple protocols&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join the Telegram-OpenIM group: &lt;a href=&#34;https://t.me/joinchat/zSJLPaHBNLZmODI1&#34;&gt;https://t.me/joinchat/zSJLPaHBNLZmODI1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;中文官网访问这里：&lt;a href=&#34;https://doc.rentsoft.cn/&#34;&gt;Open-IM中文开发文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;Installing Open-IM-Server&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM relies on five open source high-performance components: ETCD, MySQL, MongoDB, Redis, and Kafka. Privatization deployment Before Open-IM-Server, please make sure that the above five components have been installed. If your server does not have the above components, you must first install Missing components. If you have the above components, it is recommended to use them directly. If not, it is recommended to use Docker-compose, no To install dependencies, one-click deployment, faster and more convenient.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Source code deployment&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go environment&lt;/a&gt;. Make sure Go version is at least 1.15.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Open-IM project to your server.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/OpenIMSDK/Open-IM-Server.git --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and start Service.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell authorization&lt;/p&gt; &lt;pre&gt;&lt;code&gt;#cd Open-IM-server/script&#xA;&#xA;chmod +x *.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Execute the build shell&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./build_all_service.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start service&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./start_all.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Check service&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./check_all.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/Open-IM-Servers-on-System.png&#34; alt=&#34;OpenIMServersonSystempng&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Docker deployment&lt;/h4&gt; &#xA;&lt;p&gt;All images are available at &lt;a href=&#34;https://hub.docker.com/r/lyt1123/open_im_server&#34;&gt;https://hub.docker.com/r/lyt1123/open_im_server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Install Docker&lt;/a&gt; 1.13 or above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Install Docker Compose&lt;/a&gt; 1.22 or above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Open-IM project to your server.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/OpenIMSDK/Open-IM-Server.git --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start docker-compose with one click(Docker automatically pulls all images)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd Open-IM-Server&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check service&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./docker_check_service.sh &#xA;./check_all.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/Open-IM-Servers-on-docker.png&#34; alt=&#34;OpenIMServersondockerpng&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;CONFIGURATION INSTRUCTIONS&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM configuration is divided into basic component configuration and business internal service configuration. Developers need to fill in the address of each component as the address of their server component when using the product, and ensure that the internal service port of the business is not occupied&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Basic Component Configuration Instructions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ETCD &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Etcd is used for the discovery and registration of rpc services, etcd Schema is the prefix of the registered name, it is recommended to modify it to your company name, etcd address (ip+port) supports clustered deployment, you can fill in multiple ETCD addresses separated by commas, and also only one etcd address.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MySQL &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;mysql is used for full storage of messages and user relationships. Cluster deployment is not supported for the time being. Modify addresses and users, passwords, and database names.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mongo &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Mongo is used for offline storage of messages. The default storage is 7 days. Cluster deployment is temporarily not supported. Just modify the address and database name.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Redis &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Redis is currently mainly used for message serial number storage and user token information storage. Cluster deployment is temporarily not supported. Just modify the corresponding redis address and password.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Kafka &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Kafka is used as a message transfer storage queue to support cluster deployment, just modify the corresponding address&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Internal Service Configuration Instructions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;credential&amp;amp;&amp;amp;push &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The Open-IM needs to use the three-party offline push function. Currently, Tencent&#39;s three-party push is used. It supports IOS, Android and OSX push. This information is some registration information pushed by Tencent. Developers need to go to Tencent Cloud Mobile Push to register the corresponding information. If you do not fill in the corresponding information, you cannot use the offline message push function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;api&amp;amp;&amp;amp;rpcport&amp;amp;&amp;amp;longconnsvr&amp;amp;&amp;amp;rpcregistername &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The api port is the http interface, longconnsvr is the websocket listening port, and rpcport is the internal service startup port. Both support cluster deployment. Make sure that these ports are not used. If you want to open multiple services for a single service, fill in multiple ports separated by commas. rpcregistername is the service name registered by each service to the registry etcd, no need to modify&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;log&amp;amp;&amp;amp;modulename &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The log configuration includes the storage path of the log file, and the log is sent to elasticsearch for log viewing. Currently, the log is not supported to be sent to elasticsearch. The configuration does not need to be modified for the time being. The modulename is used to split the log according to the name of the service module. The default configuration is fine.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;multiloginpolicy&amp;amp;&amp;amp;tokenpolicy &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open-IM supports multi-terminal login. Currently, there are three multi-terminal login policies. The PC terminal and the mobile terminal are online at the same time by default. When multiple policies are configured to be true, the first policy with true is used by default, and the token policy is the generated token policy. , The developer can customize the expiration time of the token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SCRIPT DESCRIPTION&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM script provides service compilation, start, and stop scripts. There are four Open-IM script start modules, one is the http+rpc service start module, the second is the websocket service start module, then the msg_transfer module, and the last is the push module&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;path_info.cfg&amp;amp;&amp;amp;style_info.cfg&amp;amp;&amp;amp;functions.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Contains the path information of each module, including the path where the source code is located, the name of the service startup, the shell print font style, and some functions for processing shell strings&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;build_all_service.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compile the module, compile all the source code of Open-IM into a binary file and put it into the bin directory&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;start_rpc_api_service.sh&amp;amp;&amp;amp;msg_gateway_start.sh&amp;amp;&amp;amp;msg_transfer_start.sh&amp;amp;&amp;amp;push_start.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Independent script startup module, followed by api and rpc modules, message gateway module, message transfer module, and push module&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;start_all.sh&amp;amp;&amp;amp;stop_all.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Total script, start all services and close all services&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authentication Clow Chart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/open-im-server.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/Architecture.jpg&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Open-IM-Server is under the Apache 2.0 license. See the &lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jesseduffield/lazygit</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/jesseduffield/lazygit</id>
    <link href="https://github.com/jesseduffield/lazygit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;simple terminal UI for git commands&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/oYB7Cj8.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/jesseduffield/lazygit/workflows/Continuous%20Integration/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/jesseduffield/lazygit&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/jesseduffield/lazygit&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golangci.com&#34;&gt;&lt;img src=&#34;https://golangci.com/badges/github.com/jesseduffield/lazygit.svg?sanitize=true&#34; alt=&#34;GolangCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://godoc.org/github.com/jesseduffield/lazygit&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/jesseduffield/lazygit?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jesseduffield/lazygit/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/jesseduffield/lazygit/total&#34; alt=&#34;GitHub Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jesseduffield/lazygit/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/jesseduffield/lazygit.svg?sanitize=true&#34; alt=&#34;GitHub tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Homebrew/homebrew-core/raw/master/Formula/lazygit.rb&#34;&gt;&lt;img src=&#34;https://img.shields.io/homebrew/v/lazygit&#34; alt=&#34;homebrew&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A simple terminal UI for git commands, written in Go with the &lt;a href=&#34;https://github.com/jroimartin/gocui&#34; title=&#34;gocui&#34;&gt;gocui&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/staging.gif&#34; alt=&#34;Gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Maintainence of this project is made possible by all the &lt;a href=&#34;https://github.com/jesseduffield/lazygit/graphs/contributors&#34;&gt;contributors&lt;/a&gt; and &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsors&lt;/a&gt;. If you&#39;d like to sponsor this project and have your avatar or company logo appear below &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;click here&lt;/a&gt;. 💙 &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- sponsors --&gt;&lt;a href=&#34;https://github.com/atecce&#34;&gt;&lt;img src=&#34;https://github.com/atecce.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/intabulas&#34;&gt;&lt;img src=&#34;https://github.com/intabulas.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/peppy&#34;&gt;&lt;img src=&#34;https://github.com/peppy.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/piot&#34;&gt;&lt;img src=&#34;https://github.com/piot.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/kristijanhusak&#34;&gt;&lt;img src=&#34;https://github.com/kristijanhusak.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/blacky14&#34;&gt;&lt;img src=&#34;https://github.com/blacky14.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/rgwood&#34;&gt;&lt;img src=&#34;https://github.com/rgwood.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/oliverguenther&#34;&gt;&lt;img src=&#34;https://github.com/oliverguenther.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/pawanjay176&#34;&gt;&lt;img src=&#34;https://github.com/pawanjay176.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/bdach&#34;&gt;&lt;img src=&#34;https://github.com/bdach.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/naoey&#34;&gt;&lt;img src=&#34;https://github.com/naoey.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/jryom&#34;&gt;&lt;img src=&#34;https://github.com/jryom.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/sagor999&#34;&gt;&lt;img src=&#34;https://github.com/sagor999.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/Liberatys&#34;&gt;&lt;img src=&#34;https://github.com/Liberatys.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/fargozhu&#34;&gt;&lt;img src=&#34;https://github.com/fargozhu.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/carstengehling&#34;&gt;&lt;img src=&#34;https://github.com/carstengehling.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ceuk&#34;&gt;&lt;img src=&#34;https://github.com/ceuk.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/akospwc&#34;&gt;&lt;img src=&#34;https://github.com/akospwc.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/peterdieleman&#34;&gt;&lt;img src=&#34;https://github.com/peterdieleman.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/Xetera&#34;&gt;&lt;img src=&#34;https://github.com/Xetera.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/HoldenLucas&#34;&gt;&lt;img src=&#34;https://github.com/HoldenLucas.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/barbados-clemens&#34;&gt;&lt;img src=&#34;https://github.com/barbados-clemens.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/nartc&#34;&gt;&lt;img src=&#34;https://github.com/nartc.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/&#34;&gt;&lt;img src=&#34;https://github.com/.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/matejcik&#34;&gt;&lt;img src=&#34;https://github.com/matejcik.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/lucatume&#34;&gt;&lt;img src=&#34;https://github.com/lucatume.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/dbabiak&#34;&gt;&lt;img src=&#34;https://github.com/dbabiak.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/davidlattimore&#34;&gt;&lt;img src=&#34;https://github.com/davidlattimore.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/zach-fuller&#34;&gt;&lt;img src=&#34;https://github.com/zach-fuller.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/escrafford&#34;&gt;&lt;img src=&#34;https://github.com/escrafford.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/davdroman&#34;&gt;&lt;img src=&#34;https://github.com/davdroman.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/KowalskiPiotr98&#34;&gt;&lt;img src=&#34;https://github.com/KowalskiPiotr98.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/IvanZuy&#34;&gt;&lt;img src=&#34;https://github.com/IvanZuy.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/nicholascloud&#34;&gt;&lt;img src=&#34;https://github.com/nicholascloud.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/topher200&#34;&gt;&lt;img src=&#34;https://github.com/topher200.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/&#34;&gt;&lt;img src=&#34;https://github.com/.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/PhotonQuantum&#34;&gt;&lt;img src=&#34;https://github.com/PhotonQuantum.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/GitSquared&#34;&gt;&lt;img src=&#34;https://github.com/GitSquared.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ava1ar&#34;&gt;&lt;img src=&#34;https://github.com/ava1ar.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/alqh&#34;&gt;&lt;img src=&#34;https://github.com/alqh.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/pedropombeiro&#34;&gt;&lt;img src=&#34;https://github.com/pedropombeiro.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/minidfx&#34;&gt;&lt;img src=&#34;https://github.com/minidfx.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/JoeKlemmer&#34;&gt;&lt;img src=&#34;https://github.com/JoeKlemmer.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/MikaelElkiaer&#34;&gt;&lt;img src=&#34;https://github.com/MikaelElkiaer.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/smoogipoo&#34;&gt;&lt;img src=&#34;https://github.com/smoogipoo.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA; &lt;!-- sponsors --&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Elevator Pitch&lt;/h2&gt; &#xA;&lt;p&gt;Rant time: You&#39;ve heard it before, git is &lt;em&gt;powerful&lt;/em&gt;, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? &lt;em&gt;Are you kidding me?&lt;/em&gt; To stage part of a file you need to use a command line program to step through each hunk and if a hunk can&#39;t be split down any further but contains code you don&#39;t want to stage, you have to edit an arcane patch file &lt;em&gt;by hand&lt;/em&gt;? &lt;em&gt;Are you KIDDING me?!&lt;/em&gt; Sometimes you get asked to stash your changes when switching branches only to realise that after you switch and unstash that there weren&#39;t even any conflicts and it would have been fine to just checkout the branch directly? &lt;em&gt;YOU HAVE GOT TO BE KIDDING ME!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a mere mortal like me and you&#39;re tired of hearing how powerful git is when in your daily life it&#39;s a powerful pain in your ass, lazygit might be for you.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#binary-releases&#34;&gt;Binary releases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#homebrew&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#macports&#34;&gt;MacPorts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#void-linux&#34;&gt;Void Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#scoop-windows&#34;&gt;Scoop (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#arch-linux&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#fedora-and-centos-7&#34;&gt;Fedora and CentOS 7&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#solus-linux&#34;&gt;Solus Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#funtoo-linux&#34;&gt;Funtoo Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#freebsd&#34;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#conda&#34;&gt;Conda&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#chocolatey-windows&#34;&gt;Chocolatey (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#keybindings&#34;&gt;Keybindings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#changing-directory-on-exit&#34;&gt;Changing directory on exit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#undoredo&#34;&gt;Undo/Redo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration&#34;&gt;Custom pagers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration&#34;&gt;Custom commands&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#cool-features&#34;&gt;Cool Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#donate&#34;&gt;Donate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#alternatives&#34;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Github Sponsors is matching all donations dollar-for-dollar for 12 months so if you&#39;re feeling generous consider &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsoring me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/CPLdltN7wgE&#34;&gt;&lt;img src=&#34;https://i.imgur.com/sVEktDn.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Binary Releases&lt;/h3&gt; &#xA;&lt;p&gt;For Windows, Mac OS(10.12+) or Linux, you can download a binary release &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;Normally the lazygit formula can be found in the Homebrew core but we suggest you tap our formula to get the frequently updated one. It works with Linux, too.&lt;/p&gt; &#xA;&lt;p&gt;Tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install jesseduffield/lazygit/lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Core:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacPorts&lt;/h3&gt; &#xA;&lt;p&gt;Latest version built from github releases. Tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo port install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Void Linux&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Void Linux are available in the distro repo&lt;/p&gt; &#xA;&lt;p&gt;They follow upstream latest releases&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo xbps-install -S lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href=&#34;https://scoop.sh/&#34;&gt;scoop&lt;/a&gt;. It&#39;s in the &lt;code&gt;extras&lt;/code&gt; bucket:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Add the extras bucket&#xA;scoop bucket add extras&#xA;&#xA;# Install lazygit&#xA;scoop install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Arch Linux are available via pacman and AUR (Arch User Repository).&lt;/p&gt; &#xA;&lt;p&gt;There are two packages. The stable one which is built with the latest release and the git version which builds from the most recent commit.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stable: &lt;code&gt;sudo pacman -S lazygit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Development: &lt;a href=&#34;https://aur.archlinux.org/packages/lazygit-git/&#34;&gt;https://aur.archlinux.org/packages/lazygit-git/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instruction of how to install AUR content can be found here: &lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_User_Repository&#34;&gt;https://wiki.archlinux.org/index.php/Arch_User_Repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fedora and CentOS 7&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Fedora and CentOS 7 are available via &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/atim/lazygit/&#34;&gt;Copr&lt;/a&gt; (Cool Other Package Repo).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf copr enable atim/lazygit -y&#xA;sudo dnf install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Solus Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo eopkg install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Funtoo Linux&lt;/h3&gt; &#xA;&lt;p&gt;Funtoo Linux has an autogenerated lazygit package in &lt;a href=&#34;https://github.com/funtoo/dev-kit/tree/1.4-release/dev-vcs/lazygit&#34;&gt;dev-kit&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo emerge dev-vcs/lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FreeBSD&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkg install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Conda&lt;/h3&gt; &#xA;&lt;p&gt;Released versions are available for different platforms, see &lt;a href=&#34;https://anaconda.org/conda-forge/lazygit&#34;&gt;https://anaconda.org/conda-forge/lazygit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda install -c conda-forge lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/jesseduffield/lazygit@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note: If you get an error claiming that lazygit cannot be found or is not defined, you may need to add &lt;code&gt;~/go/bin&lt;/code&gt; to your $PATH (MacOS/Linux), or &lt;code&gt;%HOME%\go\bin&lt;/code&gt; (Windows). Not to be mistaken for &lt;code&gt;C:\Go\bin&lt;/code&gt; (which is for Go&#39;s own binaries, not apps like lazygit).&lt;/p&gt; &#xA;&lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;install Go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/jesseduffield/lazygit.git&#xA;cd lazygit&#xA;go install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;go run main.go&lt;/code&gt; to compile and run in one go (pun definitely intended)&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Call &lt;code&gt;lazygit&lt;/code&gt; in your terminal inside a git repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want, you can also add an alias for this with &lt;code&gt;echo &#34;alias lg=&#39;lazygit&#39;&#34; &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt; (or whichever rc file you&#39;re using).&lt;/p&gt; &#xA;&lt;h3&gt;Keybindings&lt;/h3&gt; &#xA;&lt;p&gt;You can check out the list of keybindings &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/keybindings&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Changing Directory On Exit&lt;/h3&gt; &#xA;&lt;p&gt;If you change repos in lazygit and want your shell to change directory into that repo on exiting lazygit, add this to your &lt;code&gt;~/.zshrc&lt;/code&gt; (or other rc file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lg()&#xA;{&#xA;    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir&#xA;&#xA;    lazygit &#34;$@&#34;&#xA;&#xA;    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then&#xA;            cd &#34;$(cat $LAZYGIT_NEW_DIR_FILE)&#34;&#xA;            rm -f $LAZYGIT_NEW_DIR_FILE &amp;gt; /dev/null&#xA;    fi&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;code&gt;source ~/.zshrc&lt;/code&gt; and from now on when you call &lt;code&gt;lg&lt;/code&gt; and exit you&#39;ll switch directories to whatever you were in inside lazygit. To override this behaviour you can exit using &lt;code&gt;shift+Q&lt;/code&gt; rather than just &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Undo/Redo&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Undoing.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Config.md&#34;&gt;configuration docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Pagers&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Pagers.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom Commands&lt;/h3&gt; &#xA;&lt;p&gt;If lazygit is missing a feature, there&#39;s a good chance you can implement it yourself with a custom command!&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Command_Keybindings.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/VDXvbHZYeKY&#34;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/4XaToVut_hs&#34;&gt;Rebase Magic Video Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.twitch.tv/jesseduffield&#34;&gt;Twitch Stream&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adding files easily&lt;/li&gt; &#xA; &lt;li&gt;Resolving merge conflicts&lt;/li&gt; &#xA; &lt;li&gt;Easily check out recent branches&lt;/li&gt; &#xA; &lt;li&gt;Scroll through logs/diffs of branches/commits/stash&lt;/li&gt; &#xA; &lt;li&gt;Quick pushing/pulling&lt;/li&gt; &#xA; &lt;li&gt;Squash down and reword commits&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Resolving merge conflicts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/resolving-merge-conflicts.gif&#34; alt=&#34;Gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Interactive Rebasing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/rebase.gif&#34; alt=&#34;Interactive Rebasing&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We love your input! Please check out the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;. For contributor discussion about things not better discussed here in the repo, join the slack channel&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/lazygit/shared_invite/zt-5bo2clzo-hB8ZTVN5dWUCqj5QFiQVLA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/slack_rgb.png&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://www.youtube.com/watch?v=kNavnhzZHtk&#34;&gt;video&lt;/a&gt; walking through the creation of a small feature in lazygit if you want an idea of where to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging Locally&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;lazygit --debug&lt;/code&gt; in one terminal tab and &lt;code&gt;lazygit --logs&lt;/code&gt; in another to view the program and its log output side by side&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to support the development of lazygit, consider &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsoring me&lt;/a&gt; (github is matching all donations dollar-for-dollar for 12 months)&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;What do the commit colors represent?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Green: the commit is included in the master branch&lt;/li&gt; &#xA; &lt;li&gt;Yellow: the commit is not included in the master branch&lt;/li&gt; &#xA; &lt;li&gt;Red: the commit has not been pushed to the upstream branch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shameless Plug&lt;/h2&gt; &#xA;&lt;p&gt;If you want to see what I (Jesse) am up to in terms of development, follow me on &lt;a href=&#34;https://twitter.com/DuffieldJesse&#34;&gt;twitter&lt;/a&gt; or check out my &lt;a href=&#34;https://jesseduffield.com/&#34;&gt;blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;If you find that lazygit doesn&#39;t quite satisfy your requirements, these may be a better fit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Extrawurst/gitui&#34;&gt;GitUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonas/tig&#34;&gt;tig&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>operator-framework/operator-sdk</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/operator-framework/operator-sdk</id>
    <link href="https://github.com/operator-framework/operator-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SDK for building Kubernetes applications. Provides high level APIs, useful abstractions, and project scaffolding.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/operator-framework/operator-sdk/master/website/static/operator_logo_sdk_color.svg?sanitize=true&#34; height=&#34;125px&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/operator-framework/operator-sdk/actions&#34;&gt;&lt;img src=&#34;https://github.com/operator-framework/operator-sdk/workflows/deploy/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;http://img.shields.io/:license-apache-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Docs can be found on the &lt;a href=&#34;https://sdk.operatorframework.io&#34;&gt;Operator SDK website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This project is a component of the &lt;a href=&#34;https://github.com/operator-framework&#34;&gt;Operator Framework&lt;/a&gt;, an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way. Read more in the &lt;a href=&#34;https://www.openshift.com/blog/introducing-the-operator-framework&#34;&gt;introduction blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/operator/&#34;&gt;Operators&lt;/a&gt; make it easy to manage complex stateful applications on top of Kubernetes. However writing an Operator today can be difficult because of challenges such as using low level APIs, writing boilerplate, and a lack of modularity which leads to duplication.&lt;/p&gt; &#xA;&lt;p&gt;The Operator SDK is a framework that uses the &lt;a href=&#34;https://github.com/kubernetes-sigs/controller-runtime&#34;&gt;controller-runtime&lt;/a&gt; library to make writing operators easier by providing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;High level APIs and abstractions to write the operational logic more intuitively&lt;/li&gt; &#xA; &lt;li&gt;Tools for scaffolding and code generation to bootstrap a new project fast&lt;/li&gt; &#xA; &lt;li&gt;Extensions to cover common Operator use cases&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependency and platform support&lt;/h2&gt; &#xA;&lt;h3&gt;Go version&lt;/h3&gt; &#xA;&lt;p&gt;Release binaries will be built with the Go compiler version specified in the &lt;a href=&#34;https://sdk.operatorframework.io/docs/contribution-guidelines/developer-guide#prerequisites&#34;&gt;developer guide&lt;/a&gt;. A Go Operator project&#39;s Go version can be found in its &lt;code&gt;go.mod&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Kubernetes versions&lt;/h3&gt; &#xA;&lt;p&gt;Supported Kubernetes versions for your Operator project or relevant binary can be determined by following this &lt;a href=&#34;https://sdk.operatorframework.io/docs/overview#kubernetes-version-compatibility&#34;&gt;compatibility guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Platforms&lt;/h3&gt; &#xA;&lt;p&gt;The set of supported platforms for all binaries and images can be found in &lt;a href=&#34;https://sdk.operatorframework.io/docs/overview#platform-support&#34;&gt;these tables&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community and how to get involved&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/operator-framework/community&#34;&gt;Operator framework community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/operator-framework/community#get-involved&#34;&gt;Communication channels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/operator-framework/community#meetings&#34;&gt;Project meetings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://sdk.operatorframework.io/docs/contribution-guidelines/&#34;&gt;contributor documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Operator SDK is under Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/operator-framework/operator-sdk/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cosmtrek/air</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/cosmtrek/air</id>
    <link href="https://github.com/cosmtrek/air" rel="alternate"></link>
    <summary type="html">&lt;p&gt;☁️ Live reload for Go apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Air &lt;a href=&#34;https://github.com/cosmtrek/air/actions?query=workflow%3AGo+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/cosmtrek/air/workflows/Go/badge.svg?sanitize=true&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/cosmtrek/air/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=cosmtrek/air&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/dcb95264cc504cad9c2a3d8b0795a7f8&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/cosmtrek/air&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/cosmtrek/air&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/cosmtrek/air&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/cosmtrek/air/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;span&gt;☁&lt;/span&gt; Live reload for Go apps&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cosmtrek/air/master/docs/air.png&#34; alt=&#34;air&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;When I get started with developing websites in Go and &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;gin&lt;/a&gt; framework, it&#39;s a pity that gin lacks live-reloading function. In fact, I tried &lt;a href=&#34;https://github.com/pilu/fresh&#34;&gt;fresh&lt;/a&gt; and it seems not much flexible, so I intended to rewrite it in a better way. Finally, Air&#39;s born. In addition, great thanks to &lt;a href=&#34;https://github.com/pilu&#34;&gt;pilu&lt;/a&gt;, no fresh, no air :)&lt;/p&gt; &#xA;&lt;p&gt;Air is yet another live-reloading command line utility for Go applications in development. Just &lt;code&gt;air&lt;/code&gt; in your project root directory, leave it alone, and focus on your code.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: This tool has nothing to do with hot-deploy for production.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Colorful log output&lt;/li&gt; &#xA; &lt;li&gt;Customize build or binary command&lt;/li&gt; &#xA; &lt;li&gt;Support excluding subdirectories&lt;/li&gt; &#xA; &lt;li&gt;Allow watching new directories after Air started&lt;/li&gt; &#xA; &lt;li&gt;Better building process&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Prefer install.sh&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# binary will be $(go env GOPATH)/bin/air&#xA;curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s -- -b $(go env GOPATH)/bin&#xA;&#xA;# or install it into ./bin/&#xA;curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s&#xA;&#xA;air -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;P.S. Great thanks mattn&#39;s &lt;a href=&#34;https://github.com/cosmtrek/air/pull/1&#34;&gt;PR&lt;/a&gt; for supporting Windows platform.&lt;/p&gt; &#xA;&lt;h3&gt;Via &lt;code&gt;go install&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;With go 1.16 or higher:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/cosmtrek/air@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Please pull this docker image &lt;a href=&#34;https://hub.docker.com/r/cosmtrek/air&#34;&gt;cosmtrek/air&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;    -w &#34;&amp;lt;PROJECT&amp;gt;&#34; \&#xA;    -e &#34;air_wd=&amp;lt;PROJECT&amp;gt;&#34; \&#xA;    -v $(pwd):&amp;lt;PROJECT&amp;gt; \&#xA;    -p &amp;lt;PORT&amp;gt;:&amp;lt;APP SERVER PORT&amp;gt; \&#xA;    cosmtrek/air&#xA;    -c &amp;lt;CONF&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, one of my project runs in docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;    -w &#34;/go/src/github.com/cosmtrek/hub&#34; \&#xA;    -v $(pwd):/go/src/github.com/cosmtrek/hub \&#xA;    -p 9090:9090 \&#xA;    cosmtrek/air&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For less typing, you could add &lt;code&gt;alias air=&#39;~/.air&#39;&lt;/code&gt; to your &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First enter into your project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/your_project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The simplest usage is run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# firstly find `.air.toml` in current directory, if not found, use defaults&#xA;air -c .air.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can initialize the &lt;code&gt;.air.toml&lt;/code&gt; configuration file to the current directory with the default settings running the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;air init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After this you can just run the &lt;code&gt;air&lt;/code&gt; command without additional arguments and it will use the &lt;code&gt;.air.toml&lt;/code&gt; file for configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;air&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For modifying the configuration refer to the &lt;a href=&#34;https://raw.githubusercontent.com/cosmtrek/air/master/air_example.toml&#34;&gt;air_example.toml&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Runtime arguments&lt;/h3&gt; &#xA;&lt;p&gt;You can pass arguments for running the built binary by adding them after the air command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Will run ./tmp/main bench&#xA;air bench&#xA;&#xA;# Will run ./tmp/main server --port 8080&#xA;air server --port 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can separate the arguments passed for the air command and the built binary with &lt;code&gt;--&lt;/code&gt; argument.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Will run ./tmp/main -h&#xA;air -- -h&#xA;&#xA;# Will run air with custom config and pass -h argument to the built binary&#xA;air -c .air.toml -- -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker-compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;services:&#xA;  my-project-with-air:&#xA;    image: cosmtrek/air&#xA;    # working_dir value has to be the same of mapped volume&#xA;    working_dir: /project-package&#xA;    ports:&#xA;      - &amp;lt;any&amp;gt;:&amp;lt;any&amp;gt;&#xA;    environment:&#xA;      - ENV_A=${ENV_A}&#xA;      - ENV_B=${ENV_B}&#xA;      - ENV_C=${ENV_C}&#xA;    volumes:&#xA;      - ./project-relative-path/:/project-package/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;air -d&lt;/code&gt; prints all logs.&lt;/p&gt; &#xA;&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; &#xA;&lt;h3&gt;&#34;command not found: air&#34; or &#34;No such file or directory&#34;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;export GOPATH=$HOME/xxxxx&#xA;export PATH=$PATH:$GOROOT/bin:$GOPATH/bin&#xA;export PATH=$PATH:$(go env GOPATH)/bin &amp;lt;---- Confirm this line in you profile!!!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Please note that it requires Go 1.16+ since I use &lt;code&gt;go mod&lt;/code&gt; to manage dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 1. fork this project&#xA;&#xA;# 2. clone it&#xA;mkdir -p $GOPATH/src/github.com/cosmtrek&#xA;cd $GOPATH/src/github.com/cosmtrek&#xA;git clone git@github.com:&amp;lt;YOUR USERNAME&amp;gt;/air.git&#xA;&#xA;# 3. install dependencies&#xA;cd air&#xA;make ci&#xA;&#xA;# 4. explore it and happy hacking!&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;BTW: Pull requests are welcome~&lt;/p&gt; &#xA;&lt;h3&gt;Release new version&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 1. checkout to master&#xA;git checkout master&#xA;&#xA;# 2. add the version that needs to be released&#xA;git tag v1.xx.x&#xA;&#xA;# 3. push to remote&#xA;git push origin v1.xx.x&#xA;&#xA;the ci will processing and will release new version,wait about 5 min you can fetch the new version.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/36lcNbW&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 51px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Huge thanks to the following supporters. I&#39;ve always been remembering your kindness.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Peter Aba&lt;/li&gt; &#xA; &lt;li&gt;Apostolis Anastasiou&lt;/li&gt; &#xA; &lt;li&gt;keita koga&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cosmtrek/air/master/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adalkiran/webrtc-nuts-and-bolts</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/adalkiran/webrtc-nuts-and-bolts</id>
    <link href="https://github.com/adalkiran/webrtc-nuts-and-bolts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A holistic way of understanding how WebRTC and its protocols run in practice, with code and detailed documentation.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;WebRTC Nuts and Bolts&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/alper-dalkiran/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;LinkedIn&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/aalperdalkiran&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-1DA1F2?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://hits.dwyl.com/adalkiran/webrtc-nuts-and-bolts.svg?style=flat-square&#34; alt=&#34;HitCount&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A holistic way of understanding how WebRTC and its protocols run in practice, &lt;strong&gt;with code and detailed documentation&lt;/strong&gt;. &#34;The nuts and bolts&#34; (practical side instead of theoretical facts, pure implementation details) of required protocols without using external dependencies or libraries.&lt;/p&gt; &#xA;&lt;p&gt;When you run the project and follow the instructions, web page initializes the webcam, does handshake with the backend application (executes several WebRTC processes), at the end, the backend catches keyframe images and saves them as JPEG image files. You can see your caught keyframes at /backend/output/ folder as shoot1.jpg, shoot2.jpg etc... if multiple keyframes were caught.&lt;/p&gt; &#xA;&lt;p&gt;You can track which steps taken during this journey by debugging or tracking the output at console.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adalkiran/webrtc-nuts-and-bolts/main/docs/images/01-07-backend-initial-output.png&#34; alt=&#34;Backend initial output&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;WHY THIS PROJECT?&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This project was initially started to learn Go language and was made for experimental and educational purposes only, not for production use.&lt;/p&gt; &#xA;&lt;p&gt;After some progress on the development, I decided to pivot my experimental work to a walkthrough document. Because although there are lots of resources that exist already on the Internet, they cover small chunks of WebRTC concepts or protocols atomically. And they use the standard way of inductive method which teach in pieces then assemble them.&lt;/p&gt; &#xA;&lt;p&gt;But my style of learning leans on the deductive method instead of others, so instead of learning atomic pieces and concepts first, going linearly from beginning to the end, and learning an atomic piece on the time when learning this piece is required.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;DOCUMENTATION&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The adventure of a WebRTC stream from start to finish can be found documented as step by step in &lt;a href=&#34;https://raw.githubusercontent.com/adalkiran/webrtc-nuts-and-bolts/main/docs/&#34;&gt;docs folder&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;COVERAGE&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Web front-end side: Pure TypeScript implementation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Communicate with signaling backend WebSocket,&lt;/li&gt; &#xA; &lt;li&gt;Gathering webcam streaming track from browser and send this track to backend via UDP.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Server back-end side: Pure Go language implementation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A simple signaling back-end WebSocket to transfer &lt;a href=&#34;https://en.wikipedia.org/wiki/Session_Description_Protocol&#34;&gt;SDP (Session Description Protocol)&lt;/a&gt; using &lt;a href=&#34;https://github.com/gorilla/websocket&#34;&gt;Gorilla WebSocket&lt;/a&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;Single port UDP listener, supports demultiplexing different data packet types (STUN, DTLS handshake, SRTP, SRTCP) coming from the same UDP connection.&lt;/li&gt; &#xA; &lt;li&gt;Protocol implementations of (only required parts): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/STUN&#34;&gt;STUN (Session Traversal Utilities for NAT)&lt;/a&gt; for discovering external IP behind NAT by a STUN server and replying to the client&#39;s STUN binding request came by UDP connection.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security&#34;&gt;DTLS (Datagram Transport Layer Security)&lt;/a&gt; for secure handshake, authenticating each oter, and crypto key exchange process. DTLS is similar to &lt;a href=&#34;https://tr.wikipedia.org/wiki/Transport_Layer_Security&#34;&gt;TLS (Transport Layer Security)&lt;/a&gt;, DTLS runs over UDP instead of TCP. This project supports only DTLS v1.2.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Real-time_Transport_Protocol&#34;&gt;RTP (Real-time Transport Protocol)&lt;/a&gt; for transferring media packets in fragments.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Secure_Real-time_Transport_Protocol&#34;&gt;SRTP (Secure Real-time Transport Protocol)&lt;/a&gt;, a secure version of RTP.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Only header parsing for &lt;a href=&#34;https://en.wikipedia.org/wiki/VP8&#34;&gt;VP8 video format&lt;/a&gt; to depacketizing fragmented packets to construct a video frame. &lt;a href=&#34;https://github.com/xlab/libvpx-go&#34;&gt;libvpx-go&lt;/a&gt; was used for decoding VP8 keyframe as image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fatih/color&#34;&gt;github.com/fatih/color&lt;/a&gt; was used while printing colored output on console while logging.&lt;/li&gt; &#xA; &lt;li&gt;Implementation of TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 &lt;a href=&#34;https://www.keyfactor.com/blog/cipher-suites-explained/&#34;&gt;cipher suite&lt;/a&gt; support using &lt;a href=&#34;https://pkg.go.dev/golang.org/x/crypto&#34;&gt;Go Cryptography&lt;/a&gt; library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;INSTALLATION and RUNNING&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This project was designed to run in Docker Container. Docker Compose file creates two containers: webrtcnb-ui and webrtcnb-backend.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important Note:&lt;/strong&gt; &lt;br&gt; First of all, you should learn your machine&#39;s LAN IP address and write it into &lt;a href=&#34;https://raw.githubusercontent.com/adalkiran/webrtc-nuts-and-bolts/main/backend/config.yml&#34;&gt;backend/config.yml&lt;/a&gt; file at server/udp/dockerHostIp section. &lt;br&gt; Because, we didn&#39;t configure the docker networking type as &#34;host&#34;, and the backend application in the container cannot discover the host machine&#39;s (your physical computer) real LAN IP but it needs this information to run correctly. Unfortunately, it can&#39;t run with 127.0.0.1. The LAN IPs usually start with 192 or 10. &lt;br&gt; Tried to configure the docker networking type as &#34;host&#34;, but it doesn&#39;t work in Docker Desktop for Mac, because of Docker&#39;s subsystem runs in a Linux VM on MacOS, and it always returns 192.168.65.1 as gateway.&lt;/p&gt; &#xA;&lt;p&gt;You can run it production mode or development mode.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Production Mode&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repo and run in terminal:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wait until Go and Node modules were installed and configured. This can take some time. You can checkout the download status by:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker-compose logs -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After waiting for enough time, open a web browser and visit &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; (Tested on Chrome)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a name=&#34;dev-mode&#34;&gt;&lt;/a&gt;&lt;strong&gt;Development Mode: VS Code Remote - Containers&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To continue with VS Code and if this is your first time to work with Remote Containers in VS Code, you can checkout &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34;&gt;this link&lt;/a&gt; to learn how Remote Containers work in VS Code and follow the installation steps of &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack&#34;&gt;Remote Development extension pack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then, follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repo to your local filesystem&lt;/li&gt; &#xA; &lt;li&gt;Open the folder &#34;webrtc-nuts-and-bolts&#34; with VS Code by &#34;Open Folder...&#34; command. This opens the root folder of the project.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select &lt;strong&gt;&#34;Remote Containers: Open Folder in Container...&#34;&lt;/strong&gt; then select &#34;backend&#34; folder in &#34;webrtc-nuts-and-bolts&#34;.&lt;/li&gt; &#xA; &lt;li&gt;This command creates (if they don&#39;t exist) required containers in Docker, then connects inside of webrtcnb-backend container for development and debugging purposes.&lt;/li&gt; &#xA; &lt;li&gt;Wait until the containers created, configured and related VS Code server extensions installed inside the container. This can take some time. VS Code can ask for some required installations, click &#34;Install All&#34; for these prompts.&lt;/li&gt; &#xA; &lt;li&gt;After completion of all installations, press &lt;kbd&gt;F5&lt;/kbd&gt; to start server application.&lt;/li&gt; &#xA; &lt;li&gt;Then, open a web browser and visit &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; (Tested on Chrome)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;ASSUMPTIONS&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Full-compliant WebRTC libraries should support a wide range of protocol details defined in RFC documents, client/server implementation differences, fallbacks for different protocol versions, a wide variety of cipher suites and media encoders/decoders. Also should be implemented as state machines, because WebRTC contains has some parts which managed as state machines, eg: &lt;a href=&#34;https://en.wikipedia.org/wiki/Interactive_Connectivity_Establishment&#34;&gt;ICE (Interactive Connectivity Establishment)&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security&#34;&gt;DTLS (Datagram Transport Layer Security)&lt;/a&gt; handshake, etc...&lt;/p&gt; &#xA;&lt;p&gt;In &lt;strong&gt;WebRTC Nuts and Bolts&lt;/strong&gt; scenario, some assumptions have been made to focus only on required set of details.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Full-compliant WebRTC libraries&lt;/th&gt; &#xA;   &lt;th&gt;WebRTC Nuts and Bolts&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WebRTC has no client or server concepts in its &lt;a href=&#34;https://tr.wikipedia.org/wiki/Peer-to-peer&#34;&gt;peer-to-peer&lt;/a&gt; nature, there are controlling or controlled peers.&lt;/td&gt; &#xA;   &lt;td&gt;This project aims to act as listener server and it only receives media, not sends. To make the code more simplistic and cleaner; the concepts &#34;client&#34; instead of &#34;local peer&#34; and &#34;server&#34; instead of &#34;remote peer&#34; has been used.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Should support both controlling and controlled roles.&lt;/td&gt; &#xA;   &lt;td&gt;Go language side will act only as server (ICE controlling), SDP offer will come from this side, then SDP answer will be expected from the client.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;For separation of concerns and to maintain architectural extensibility, all WebRTC libraries were implemented as separate packages/repos (STUN package, DTLS package, SRTP package, etc...)&lt;/td&gt; &#xA;   &lt;td&gt;To keep it simple, this project was designed as &lt;a href=&#34;https://en.wikipedia.org/wiki/Monorepo&#34;&gt;monorepo&lt;/a&gt; but separated into packages. This choice depends on architectural needs and technical maintenance needs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;nbsp;Should support DTLS fragmentation.&lt;/td&gt; &#xA;   &lt;td&gt;&amp;nbsp; DTLS fragmentation is not supported.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;nbsp;Should support multiple cipher suites for compatibility with different types of peers. More cipher suites can be found at &lt;a href=&#34;https://developers.cloudflare.com/ssl/ssl-tls/cipher-suites/&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&amp;nbsp; Only TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 is supported.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Should implement packet reply detection, handling corrupted packets, handling unordered packet sequences and packet losses, byte array length checks, lots of security protections against cyberattacks, etc...&lt;/td&gt; &#xA;   &lt;td&gt;This project was developed to run in only ideal conditions. Incoming malicious packets were not considered.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;RESOURCES&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;I want to thank to contributors of the awesome sources which were referred during development of this project and writing this documentation. You can find these sources below, also in between the lines in code and documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webrtcforthecurious.com&#34;&gt;WebRTC For The Curious&lt;/a&gt;: Awesome resource on theoretical concepts of WebRTC. It is vendor agnostic. Created by creators of &lt;a href=&#34;https://github.com/pion&#34;&gt;Pion project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pion&#34;&gt;Pion project&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pion/dtls&#34;&gt;Pion DTLS&lt;/a&gt;: A library for DTLS protocol, developed in Go. Some parts about cryptography used with from this project, with modifications.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pion/srtp&#34;&gt;Pion SRTP&lt;/a&gt;: A library for SRTP protocol, developed in Go. Some parts about cryptography used with from this project, with modifications.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jitsi&#34;&gt;Jitsi&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jitsi/ice4j&#34;&gt;Jitsi ice4j&lt;/a&gt;: A library for ICE processes including gathering ICE candidates, developed in Java and Kotlin. You can start to explore from &lt;a href=&#34;https://github.com/jitsi/ice4j/raw/d7c0e27a1cde7b877b34d8bb68dc39f18dc45f16/src/main/java/org/ice4j/ice/harvest/SinglePortUdpHarvester.java&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/jitsi/ice4j/raw/d7c0e27a1cde7b877b34d8bb68dc39f18dc45f16/src/main/java/org/ice4j/ice/harvest/AbstractUdpListener.java#L47&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jitsi/jitsi-media-transform&#34;&gt;Jitsi Media Transform&lt;/a&gt;: A library for ICE processes including gathering ICE candidates, developed in Java and Kotlin. You can find different protocol implementations &lt;a href=&#34;https://github.com/jitsi/jitsi-media-transform/tree/master/src/main/kotlin/org/jitsi/nlj&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jitsi/jitsi-videobridge&#34;&gt;Jitsi Videobridge&lt;/a&gt;: A server application that orchestrates these processes and serves API interfaces, developed in Java and Kotlin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bcgit/bc-java&#34;&gt;The Bouncy Castle Crypto Package For Java&lt;/a&gt;: A library for TLS processes and cryptography, developed in Java.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eclipse/tinydtls&#34;&gt;Tinydtls&lt;/a&gt;: A library for DTLS processes, developed in C.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API&#34;&gt;Mozilla Web Docs: WebRTC API&lt;/a&gt;: A documentation on WebRTC API at browser side.&lt;/li&gt; &#xA; &lt;li&gt;Several RFC Documents: In code and documentation of this project, you can find several RFC document links cited.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;LICENSE&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;WebRTC Nuts and Bolts is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/adalkiran/webrtc-nuts-and-bolts/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubernetes/kubernetes</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/kubernetes/kubernetes</id>
    <link href="https://github.com/kubernetes/kubernetes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Production-Grade Container Scheduling and Management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes (K8s)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/k8s.io/kubernetes&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/k8s.io/kubernetes.svg?sanitize=true&#34; alt=&#34;GoPkg Widget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/569&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/569/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/kubernetes/kubernetes/raw/master/logo/logo.png&#34; width=&#34;100&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Kubernetes, also known as K8s, is an open source system for managing &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&#34;&gt;containerized applications&lt;/a&gt; across multiple hosts. It provides basic mechanisms for deployment, maintenance, and scaling of applications.&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes builds upon a decade and a half of experience at Google running production workloads at scale using a system called &lt;a href=&#34;https://research.google.com/pubs/pub43438.html&#34;&gt;Borg&lt;/a&gt;, combined with best-of-breed ideas and practices from the community.&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes is hosted by the Cloud Native Computing Foundation (&lt;a href=&#34;https://www.cncf.io/about&#34;&gt;CNCF&lt;/a&gt;). If your company wants to help shape the evolution of technologies that are container-packaged, dynamically scheduled, and microservices-oriented, consider joining the CNCF. For details about who&#39;s involved and how Kubernetes plays a role, read the CNCF &lt;a href=&#34;https://cncf.io/news/announcement/2015/07/new-cloud-native-computing-foundation-drive-alignment-among-container&#34;&gt;announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;To start using K8s&lt;/h2&gt; &#xA;&lt;p&gt;See our documentation on &lt;a href=&#34;https://kubernetes.io&#34;&gt;kubernetes.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Try our &lt;a href=&#34;https://kubernetes.io/docs/tutorials/kubernetes-basics&#34;&gt;interactive tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Take a free course on &lt;a href=&#34;https://www.udacity.com/course/scalable-microservices-with-kubernetes--ud615&#34;&gt;Scalable Microservices with Kubernetes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use Kubernetes code as a library in other applications, see the &lt;a href=&#34;https://git.k8s.io/kubernetes/staging/README.md&#34;&gt;list of published components&lt;/a&gt;. Use of the &lt;code&gt;k8s.io/kubernetes&lt;/code&gt; module or &lt;code&gt;k8s.io/kubernetes/...&lt;/code&gt; packages as libraries is not supported.&lt;/p&gt; &#xA;&lt;h2&gt;To start developing K8s&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://git.k8s.io/community&#34;&gt;community repository&lt;/a&gt; hosts all information about building Kubernetes from source, how to contribute code and documentation, who to contact about what, etc.&lt;/p&gt; &#xA;&lt;p&gt;If you want to build Kubernetes right away there are two options:&lt;/p&gt; &#xA;&lt;h5&gt;You have a working &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go environment&lt;/a&gt;.&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p $GOPATH/src/k8s.io&#xA;cd $GOPATH/src/k8s.io&#xA;git clone https://github.com/kubernetes/kubernetes&#xA;cd kubernetes&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;You have a working &lt;a href=&#34;https://docs.docker.com/engine&#34;&gt;Docker environment&lt;/a&gt;.&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/kubernetes/kubernetes&#xA;cd kubernetes&#xA;make quick-release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the full story, head over to the &lt;a href=&#34;https://git.k8s.io/community/contributors/devel#readme&#34;&gt;developer&#39;s documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you need support, start with the &lt;a href=&#34;https://kubernetes.io/docs/tasks/debug/&#34;&gt;troubleshooting guide&lt;/a&gt;, and work your way through the process that we&#39;ve outlined.&lt;/p&gt; &#xA;&lt;p&gt;That said, if you have questions, reach out to us &lt;a href=&#34;https://git.k8s.io/community/communication&#34;&gt;one way or another&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community Meetings&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.kubernetes.dev/resources/calendar/&#34;&gt;Calendar&lt;/a&gt; has the list of all the meetings in Kubernetes community in a single location.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://kubernetes.io/case-studies/&#34;&gt;User Case Studies&lt;/a&gt; website has real-world use cases of organizations across industries that are deploying/migrating to Kubernetes.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;Kubernetes project is governed by a framework of principles, values, policies and processes to help our community and constituents towards our shared goals.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/governance.md&#34;&gt;Kubernetes Community&lt;/a&gt; is the launching point for learning about how we organize ourselves.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/steering&#34;&gt;Kubernetes Steering community repo&lt;/a&gt; is used by the Kubernetes Steering Committee, which oversees governance of the Kubernetes project.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/enhancements&#34;&gt;Kubernetes Enhancements repo&lt;/a&gt; provides information about Kubernetes releases, as well as feature tracking and backlogs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>netbirdio/netbird</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/netbirdio/netbird</id>
    <link href="https://github.com/netbirdio/netbird" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Connect your devices into a single secure private WireGuard®-based mesh network.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;&lt;span&gt;🐣&lt;/span&gt; New release! Beta Update May 2022&lt;/strong&gt;. &lt;a href=&#34;https://github.com/netbirdio/netbird/releases/tag/v0.6.0&#34;&gt; Learn more &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;234&#34; src=&#34;https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/logo-full.png&#34;&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/netbirdio/netbird/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-BSD--3-blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wiretrustee/wiretrustee/tags&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/wiretrustee/wiretrustee&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.codacy.com/gh/wiretrustee/wiretrustee/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=wiretrustee/wiretrustee&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/d366de2c9d8b4cf982da27f8f5831809&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/wiretrustee/wiretrustee&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/wiretrustee/wiretrustee?style=flat-square&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://join.slack.com/t/wiretrustee/shared_invite/zt-vrahf41g-ik1v7fV8du6t0RwxSrJ96A&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/slack-@wiretrustee-red.svg?logo=slack&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt; Start using NetBird at &lt;a href=&#34;https://app.netbird.io/&#34;&gt;app.netbird.io&lt;/a&gt; &lt;br&gt; See &lt;a href=&#34;https://netbird.io/docs/&#34;&gt;Documentation&lt;/a&gt; &lt;br&gt; Join our &lt;a href=&#34;https://join.slack.com/t/wiretrustee/shared_invite/zt-vrahf41g-ik1v7fV8du6t0RwxSrJ96A&#34;&gt;Slack channel&lt;/a&gt; &lt;br&gt; &lt;/strong&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;NetBird is an open-source VPN management platform built on top of WireGuard® making it easy to create secure private networks for your organization or home.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;It requires zero configuration effort leaving behind the hassle of opening ports, complex firewall rules, VPN gateways, and so forth.&lt;/p&gt; &#xA;&lt;p&gt;NetBird creates an overlay peer-to-peer network connecting machines automatically regardless of their location (home, office, datacenter, container, cloud or edge environments) unifying virtual private network management experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Key features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic IP allocation and management.&lt;/li&gt; &#xA; &lt;li&gt;Automatic WireGuard peer (machine) discovery and configuration.&lt;/li&gt; &#xA; &lt;li&gt;Encrypted peer-to-peer connections without a central VPN gateway.&lt;/li&gt; &#xA; &lt;li&gt;Connection relay fallback in case a peer-to-peer connection is not possible.&lt;/li&gt; &#xA; &lt;li&gt;Network management layer with a neat Web UI panel (&lt;a href=&#34;https://github.com/netbirdio/dashboard&#34;&gt;separate repo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Desktop client applications for Linux, MacOS, and Windows.&lt;/li&gt; &#xA; &lt;li&gt;Multiuser support - sharing network between multiple users.&lt;/li&gt; &#xA; &lt;li&gt;SSO and MFA support.&lt;/li&gt; &#xA; &lt;li&gt;Multicloud and hybrid-cloud support.&lt;/li&gt; &#xA; &lt;li&gt;Kernel WireGuard usage when possible.&lt;/li&gt; &#xA; &lt;li&gt;Access Controls - groups &amp;amp; rules (coming soon).&lt;/li&gt; &#xA; &lt;li&gt;Private DNS (coming soon).&lt;/li&gt; &#xA; &lt;li&gt;Mobile clients (coming soon).&lt;/li&gt; &#xA; &lt;li&gt;Network Activity Monitoring (coming soon).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Secure peer-to-peer VPN with SSO and MFA in minutes&lt;/h3&gt; &#xA;&lt;p float=&#34;left&#34; align=&#34;middle&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/peerA.gif&#34; width=&#34;400&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/peerB.gif&#34; width=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href=&#34;https://github.com/netbirdio/netbird/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Start using NetBird&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hosted version: &lt;a href=&#34;https://app.netbird.io/&#34;&gt;https://app.netbird.io/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;See our documentation for &lt;a href=&#34;https://netbird.io/docs/getting-started/quickstart&#34;&gt;Quickstart Guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you are looking to self-host NetBird, check our &lt;a href=&#34;https://netbird.io/docs/getting-started/self-hosting&#34;&gt;Self-Hosting Guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Step-by-step &lt;a href=&#34;https://netbird.io/docs/getting-started/installation&#34;&gt;Installation Guide&lt;/a&gt; for different platforms.&lt;/li&gt; &#xA; &lt;li&gt;Web UI &lt;a href=&#34;https://github.com/netbirdio/dashboard&#34;&gt;repository&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;5 min &lt;a href=&#34;https://youtu.be/Tu9tPsUWaY0&#34;&gt;demo video&lt;/a&gt; on YouTube.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;A bit on NetBird internals&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every machine in the network runs &lt;a href=&#34;https://raw.githubusercontent.com/netbirdio/netbird/main/client/&#34;&gt;NetBird Agent (or Client)&lt;/a&gt; that manages WireGuard.&lt;/li&gt; &#xA; &lt;li&gt;NetBird features &lt;a href=&#34;https://raw.githubusercontent.com/netbirdio/netbird/main/management/&#34;&gt;Management Service&lt;/a&gt; that holds network state, manages peer IPs, and distributes network updates to peers.&lt;/li&gt; &#xA; &lt;li&gt;Every agent is connected to Management Service.&lt;/li&gt; &#xA; &lt;li&gt;NetBird agent uses WebRTC ICE implemented in &lt;a href=&#34;https://github.com/pion/ice&#34;&gt;pion/ice library&lt;/a&gt; to discover connection candidates when establishing a peer-to-peer connection between machines.&lt;/li&gt; &#xA; &lt;li&gt;Connection candidates are discovered with a help of &lt;a href=&#34;https://en.wikipedia.org/wiki/STUN&#34;&gt;STUN&lt;/a&gt; server.&lt;/li&gt; &#xA; &lt;li&gt;Agents negotiate a connection through &lt;a href=&#34;https://raw.githubusercontent.com/netbirdio/netbird/main/signal/&#34;&gt;Signal Service&lt;/a&gt; passing p2p encrypted messages.&lt;/li&gt; &#xA; &lt;li&gt;Signal Service uses public WireGuard keys to route messages between peers.&lt;/li&gt; &#xA; &lt;li&gt;Sometimes the NAT traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT) and p2p connection isn&#39;t possible. When this occurs the system falls back to a relay server called &lt;a href=&#34;https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT&#34;&gt;TURN&lt;/a&gt;, and a secure WireGuard tunnel is established via the TURN server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coturn/coturn&#34;&gt;Coturn&lt;/a&gt; is the one that has been successfully used for STUN and TURN in NetBird setups.&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34; align=&#34;middle&#34;&gt; &lt;img src=&#34;https://netbird.io/docs/img/architecture/high-level-dia.png&#34; width=&#34;700&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;See a complete &lt;a href=&#34;https://netbird.io/docs/overview/architecture&#34;&gt;architecture overview&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Roadmap&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/netbirdio/netbird/projects/2&#34;&gt;Public Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Testimonials&lt;/h3&gt; &#xA;&lt;p&gt;We use open-source technologies like &lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard®&lt;/a&gt;, &lt;a href=&#34;https://github.com/pion/ice&#34;&gt;Pion ICE (WebRTC)&lt;/a&gt;, and &lt;a href=&#34;https://github.com/coturn/coturn&#34;&gt;Coturn&lt;/a&gt;. We very much appreciate the work these guys are doing and we&#39;d greatly appreciate if you could support them in any way (e.g. giving a star or a contribution).&lt;/p&gt; &#xA;&lt;h3&gt;Legal&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wireguard.com/&#34;&gt;WireGuard&lt;/a&gt; is a registered trademark of Jason A. Donenfeld.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gorilla/websocket</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/gorilla/websocket</id>
    <link href="https://github.com/gorilla/websocket" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast, well-tested and widely used WebSocket implementation for Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gorilla WebSocket&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/gorilla/websocket&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/gorilla/websocket?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/gorilla/websocket&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/gorilla/websocket.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Gorilla WebSocket is a &lt;a href=&#34;http://golang.org/&#34;&gt;Go&lt;/a&gt; implementation of the &lt;a href=&#34;http://www.rfc-editor.org/rfc/rfc6455.txt&#34;&gt;WebSocket&lt;/a&gt; protocol.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;⚠️ &lt;strong&gt;&lt;a href=&#34;https://github.com/gorilla/websocket/issues/370&#34;&gt;The Gorilla WebSocket Package is looking for a new maintainer&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/gorilla/websocket?tab=doc&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gorilla/websocket/tree/master/examples/chat&#34;&gt;Chat example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gorilla/websocket/tree/master/examples/command&#34;&gt;Command example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gorilla/websocket/tree/master/examples/echo&#34;&gt;Client and server example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gorilla/websocket/tree/master/examples/filewatch&#34;&gt;File watch example&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Status&lt;/h3&gt; &#xA;&lt;p&gt;The Gorilla WebSocket package provides a complete and tested implementation of the &lt;a href=&#34;http://www.rfc-editor.org/rfc/rfc6455.txt&#34;&gt;WebSocket&lt;/a&gt; protocol. The package API is stable.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/gorilla/websocket&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Protocol Compliance&lt;/h3&gt; &#xA;&lt;p&gt;The Gorilla WebSocket package passes the server tests in the &lt;a href=&#34;https://github.com/crossbario/autobahn-testsuite&#34;&gt;Autobahn Test Suite&lt;/a&gt; using the application in the &lt;a href=&#34;https://github.com/gorilla/websocket/tree/master/examples/autobahn&#34;&gt;examples/autobahn subdirectory&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>labstack/echo</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/labstack/echo</id>
    <link href="https://github.com/labstack/echo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High performance, minimalist Go web framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://echo.labstack.com&#34;&gt;&lt;img height=&#34;80&#34; src=&#34;https://cdn.labstack.com/images/echo-logo.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sourcegraph.com/github.com/labstack/echo?badge&#34;&gt;&lt;img src=&#34;https://sourcegraph.com/github.com/labstack/echo/-/badge.svg?style=flat-square&#34; alt=&#34;Sourcegraph&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/labstack/echo/v4&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/go-documentation-blue.svg?style=flat-square&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/labstack/echo&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/labstack/echo?style=flat-square&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/labstack/echo&#34;&gt;&lt;img src=&#34;http://img.shields.io/travis/labstack/echo.svg?style=flat-square&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/labstack/echo&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/labstack/echo.svg?style=flat-square&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/labstack/echo/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/community-forum-00afd1.svg?style=flat-square&#34; alt=&#34;Forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/labstack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@labstack-55acee.svg?style=flat-square&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/labstack/echo/master/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-mit-blue.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Go versions&lt;/h2&gt; &#xA;&lt;p&gt;As of version 4.0.0, Echo is available as a &lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34;&gt;Go module&lt;/a&gt;. Therefore a Go version capable of understanding /vN suffixed imports is required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.9.7+&lt;/li&gt; &#xA; &lt;li&gt;1.10.3+&lt;/li&gt; &#xA; &lt;li&gt;1.14+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any of these versions will allow you to import Echo as &lt;code&gt;github.com/labstack/echo/v4&lt;/code&gt; which is the recommended way of using Echo going forward.&lt;/p&gt; &#xA;&lt;p&gt;For older versions, please use the latest v3 tag.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimized HTTP router which smartly prioritize routes&lt;/li&gt; &#xA; &lt;li&gt;Build robust and scalable RESTful APIs&lt;/li&gt; &#xA; &lt;li&gt;Group APIs&lt;/li&gt; &#xA; &lt;li&gt;Extensible middleware framework&lt;/li&gt; &#xA; &lt;li&gt;Define middleware at root, group or route level&lt;/li&gt; &#xA; &lt;li&gt;Data binding for JSON, XML and form payload&lt;/li&gt; &#xA; &lt;li&gt;Handy functions to send variety of HTTP responses&lt;/li&gt; &#xA; &lt;li&gt;Centralized HTTP error handling&lt;/li&gt; &#xA; &lt;li&gt;Template rendering with any template engine&lt;/li&gt; &#xA; &lt;li&gt;Define your format for the logger&lt;/li&gt; &#xA; &lt;li&gt;Highly customizable&lt;/li&gt; &#xA; &lt;li&gt;Automatic TLS via Let’s Encrypt&lt;/li&gt; &#xA; &lt;li&gt;HTTP/2 support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Date: 2020/11/11&lt;br&gt; Source: &lt;a href=&#34;https://github.com/vishr/web-framework-benchmark&#34;&gt;https://github.com/vishr/web-framework-benchmark&lt;/a&gt;&lt;br&gt; Lower is better!&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/qwPNQbl.png&#34;&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/s8yKQjx.png&#34;&gt; &#xA;&lt;p&gt;The benchmarks above were run on an Intel(R) Core(TM) i7-6820HQ CPU @ 2.70GHz&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://echo.labstack.com/guide&#34;&gt;Guide&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;// go get github.com/labstack/echo/{version}&#xA;go get github.com/labstack/echo/v4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;  &#34;github.com/labstack/echo/v4&#34;&#xA;  &#34;github.com/labstack/echo/v4/middleware&#34;&#xA;  &#34;net/http&#34;&#xA;)&#xA;&#xA;func main() {&#xA;  // Echo instance&#xA;  e := echo.New()&#xA;&#xA;  // Middleware&#xA;  e.Use(middleware.Logger())&#xA;  e.Use(middleware.Recover())&#xA;&#xA;  // Routes&#xA;  e.GET(&#34;/&#34;, hello)&#xA;&#xA;  // Start server&#xA;  e.Logger.Fatal(e.Start(&#34;:1323&#34;))&#xA;}&#xA;&#xA;// Handler&#xA;func hello(c echo.Context) error {&#xA;  return c.String(http.StatusOK, &#34;Hello, World!&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Third-party middlewares&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Repository&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/labstack/echo-contrib&#34;&gt;github.com/labstack/echo-contrib&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(by Echo team) &lt;a href=&#34;https://github.com/casbin/casbin&#34;&gt;casbin&lt;/a&gt;, &lt;a href=&#34;https://github.com/gorilla/sessions&#34;&gt;gorilla/sessions&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/labstack/echo/master/github.com/uber/jaeger-client-go&#34;&gt;jaegertracing&lt;/a&gt;, &lt;a href=&#34;https://github.com/prometheus/client_golang/&#34;&gt;prometheus&lt;/a&gt;, &lt;a href=&#34;https://pkg.go.dev/net/http/pprof&#34;&gt;pprof&lt;/a&gt;, &lt;a href=&#34;https://github.com/openzipkin/zipkin-go&#34;&gt;zipkin&lt;/a&gt; middlewares&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/deepmap/oapi-codegen&#34;&gt;deepmap/oapi-codegen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automatically generate RESTful API documentation with &lt;a href=&#34;https://swagger.io/specification/&#34;&gt;OpenAPI&lt;/a&gt; Client and Server Code Generator&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swaggo/echo-swagger&#34;&gt;github.com/swaggo/echo-swagger&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automatically generate RESTful API documentation with &lt;a href=&#34;https://swagger.io/&#34;&gt;Swagger&lt;/a&gt; 2.0.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ziflex/lecho&#34;&gt;github.com/ziflex/lecho&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rs/zerolog&#34;&gt;Zerolog&lt;/a&gt; logging library wrapper for Echo logger interface.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/brpaz/echozap&#34;&gt;github.com/brpaz/echozap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uber´s &lt;a href=&#34;https://github.com/uber-go/zap&#34;&gt;Zap&lt;/a&gt; logging library wrapper for Echo logger interface.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/darkweak/souin/tree/master/plugins/echo&#34;&gt;github.com/darkweak/souin/plugins/echo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP cache system based on &lt;a href=&#34;https://github.com/darkweak/souin&#34;&gt;Souin&lt;/a&gt; to automatically get your endpoints cached. It supports some distributed and non-distributed storage systems depending your needs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mikestefanello/pagoda&#34;&gt;github.com/mikestefanello/pagoda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rapid, easy full-stack web development starter kit built with Echo.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Please send a PR to add your own library here.&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/labstack/echo/discussions&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Use issues for everything&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For a small change, just send a PR.&lt;/li&gt; &#xA; &lt;li&gt;For bigger changes open an issue for discussion before sending a PR.&lt;/li&gt; &#xA; &lt;li&gt;PR should have: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Test case&lt;/li&gt; &#xA;   &lt;li&gt;Documentation&lt;/li&gt; &#xA;   &lt;li&gt;Example (If it makes sense)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also contribute by: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Reporting issues&lt;/li&gt; &#xA;   &lt;li&gt;Suggesting new features or enhancements&lt;/li&gt; &#xA;   &lt;li&gt;Improve/fix documentation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vishr&#34;&gt;Vishal Rana&lt;/a&gt; (Author)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nr17&#34;&gt;Nitin Rana&lt;/a&gt; (Consultant)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lammel&#34;&gt;Roland Lammel&lt;/a&gt; (Maintainer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aldas&#34;&gt;Martti T.&lt;/a&gt; (Maintainer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pafuent&#34;&gt;Pablo Andres Fuente&lt;/a&gt; (Maintainer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/labstack/echo/graphs/contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/labstack/echo/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>safing/portmaster</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/safing/portmaster</id>
    <link href="https://github.com/safing/portmaster" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🏔 Love Freedom - ❌ Block Mass Surveillance&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Take Back Control of Your Computer&lt;/h1&gt; &#xA;&lt;p&gt;Portmaster is a free and open-source application that puts you back in charge over all your computer&#39;s network connections. Developed in the EU 🇪🇺, Austria.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://assets.safing.io/portmaster/full-interface.png?&#34; alt=&#34;Portmaster User Interface&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;⚠️ Disclaimer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Portmaster is Alpha Software, treat as such; expect bugs here and there. Early Adopters welcome.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/portmaster#network-all-network-activity&#34;&gt;Monitor All Network Activity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/portmaster#manually-allow-or-block-connections&#34;&gt;Manually Allow or Block Connections&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/portmaster#auto-block-via-selected-filter-lists&#34;&gt;Auto-Block via Selected Filter Lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/portmaster#enforce-dns-over-tls&#34;&gt;Enforce DNS-over-TLS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/portmaster#configure-settings-for-different-networks&#34;&gt;Configure Settings for Different Networks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/portmaster#set-global-and-app-settings&#34;&gt;Set Global &amp;amp; per‑App Settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/portmaster#downloads&#34;&gt;&lt;strong&gt;Download For Free&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/portmaster#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All technical details and guides live on the dedicated docs website:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/guides/contribute&#34;&gt;Guides&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/guides/contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/settings&#34;&gt;Settings Handbook&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/guides/dns-configuration&#34;&gt;DNS Configuration&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/windows&#34;&gt;Install&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/windows&#34;&gt;on Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/linux&#34;&gt;on Linux&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/linux#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/status/vpn-compatibility&#34;&gt;Status&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/status/vpn-compatibility&#34;&gt;VPN Compatibility&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/status/software-compatibility&#34;&gt;Software Compatibility&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/status/mobile&#34;&gt;Mobile&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/install/status/mac&#34;&gt;Mac&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/overview&#34;&gt;Architecture&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/overview&#34;&gt;Technical Overview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/core-service&#34;&gt;Core Service&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/core-service/fundamentals&#34;&gt;Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/core-service/core&#34;&gt;Core&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/core-service/privacy-filter&#34;&gt;Privacy Filter&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/core-service/secure-dns&#34;&gt;Secure DNS&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/core-service/spn&#34;&gt;SPN&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/os-integration&#34;&gt;OS Integration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/user-interface&#34;&gt;User Interface&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.safing.io/portmaster/architecture/notifier&#34;&gt;Notifier&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About Safing&lt;/h2&gt; &#xA;&lt;p&gt;Find out more about Safing, the company behind the Portmaster:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/about/&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/business-model/&#34;&gt;Business Model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/ownership/&#34;&gt;Ownership&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://safing.io/team/&#34;&gt;Team&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>open-telemetry/opentelemetry-go</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/open-telemetry/opentelemetry-go</id>
    <link href="https://github.com/open-telemetry/opentelemetry-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenTelemetry Go API and SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTelemetry-Go&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go/actions?query=workflow%3Aci+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/open-telemetry/opentelemetry-go/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/open-telemetry/opentelemetry-go?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/open-telemetry/opentelemetry-go/coverage.svg?branch=main&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/go.opentelemetry.io/otel&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/go.opentelemetry.io/otel&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/go.opentelemetry.io/otel&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/go.opentelemetry.io/otel&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud-native.slack.com/archives/C01NPAXACKT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@cncf/otel--go-brightgreen.svg?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenTelemetry-Go is the &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; implementation of &lt;a href=&#34;https://opentelemetry.io/&#34;&gt;OpenTelemetry&lt;/a&gt;. It provides a set of APIs to directly measure performance and behavior of your software and send this data to observability platforms.&lt;/p&gt; &#xA;&lt;h2&gt;Project Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Signal&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Traces&lt;/td&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Metrics&lt;/td&gt; &#xA;   &lt;td&gt;Alpha&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Logs&lt;/td&gt; &#xA;   &lt;td&gt;Frozen [1]&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[1]: The Logs signal development is halted for this project while we develop both Traces and Metrics. No Logs Pull Requests are currently being accepted.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Progress and status specific to this repository is tracked in our local &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go/projects&#34;&gt;project boards&lt;/a&gt; and &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go/milestones&#34;&gt;milestones&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Project versioning information and stability guarantees can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/VERSIONING.md&#34;&gt;versioning documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compatibility&lt;/h3&gt; &#xA;&lt;p&gt;OpenTelemetry-Go attempts to track the current supported versions of the &lt;a href=&#34;https://golang.org/doc/devel/release#policy&#34;&gt;Go language&lt;/a&gt;. The release schedule after a new minor version of go is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The first release or one month, which ever is sooner, will add build steps for the new go version.&lt;/li&gt; &#xA; &lt;li&gt;The first release after three months will remove support for the oldest go version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project is tested on the following systems.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Go Version&lt;/th&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.17&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;1.17&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MacOS&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MacOS&lt;/td&gt; &#xA;   &lt;td&gt;1.17&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.17&lt;/td&gt; &#xA;   &lt;td&gt;amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.18&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;1.17&lt;/td&gt; &#xA;   &lt;td&gt;386&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;While this project should work for other systems, no compatibility guarantees are made for those systems currently.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find a getting started guide on &lt;a href=&#34;https://opentelemetry.io/docs/go/getting-started/&#34;&gt;opentelemetry.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenTelemetry&#39;s goal is to provide a single set of APIs to capture distributed traces and metrics from your application and send them to an observability platform. This project allows you to do just that for applications written in Go. There are two steps to this process: instrument your application, and configure an exporter.&lt;/p&gt; &#xA;&lt;h3&gt;Instrumentation&lt;/h3&gt; &#xA;&lt;p&gt;To start capturing distributed traces and metric events from your application it first needs to be instrumented. The easiest way to do this is by using an instrumentation library for your code. Be sure to check out &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/instrumentation&#34;&gt;the officially supported instrumentation libraries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need to extend the telemetry an instrumentation library provides or want to build your own instrumentation for your application directly you will need to use the &lt;a href=&#34;https://pkg.go.dev/go.opentelemetry.io/otel&#34;&gt;Go otel&lt;/a&gt; package. The included &lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/example/&#34;&gt;examples&lt;/a&gt; are a good way to see some practical uses of this process.&lt;/p&gt; &#xA;&lt;h3&gt;Export&lt;/h3&gt; &#xA;&lt;p&gt;Now that your application is instrumented to collect telemetry, it needs an export pipeline to send that telemetry to an observability platform.&lt;/p&gt; &#xA;&lt;p&gt;All officially supported exporters for the OpenTelemetry project are contained in the &lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters&#34;&gt;exporters directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Exporter&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Metrics&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Traces&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/jaeger/&#34;&gt;Jaeger&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/otlp/&#34;&gt;OTLP&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/prometheus/&#34;&gt;Prometheus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/stdout/&#34;&gt;stdout&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/zipkin/&#34;&gt;Zipkin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/CONTRIBUTING.md&#34;&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>argoproj/argo-cd</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/argoproj/argo-cd</id>
    <link href="https://github.com/argoproj/argo-cd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Declarative continuous deployment for Kubernetes.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/argoproj/argo-cd/actions?query=workflow%3A%22Integration+tests%22&#34;&gt;&lt;img src=&#34;https://github.com/argoproj/argo-cd/workflows/Integration%20tests/badge.svg?branch=master&#34; alt=&#34;Integration tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://argoproj.github.io/community/join-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack&#34; alt=&#34;slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/argoproj/argo-cd&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/argoproj/argo-cd/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/argoproj/argo-cd/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/argoproj/argo-cd?label=argo-cd&#34; alt=&#34;Release Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/4486&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/4486/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/argoproj&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/argoproj?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Argo CD - Declarative Continuous Delivery for Kubernetes&lt;/h1&gt; &#xA;&lt;h2&gt;What is Argo CD?&lt;/h2&gt; &#xA;&lt;p&gt;Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/argoproj/argo-cd/master/docs/assets/argocd-ui.gif&#34; alt=&#34;Argo CD UI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/0WAm0y2vLIo&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/0WAm0y2vLIo/0.jpg&#34; alt=&#34;Argo CD Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why Argo CD?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Application definitions, configurations, and environments should be declarative and version controlled.&lt;/li&gt; &#xA; &lt;li&gt;Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Who uses Argo CD?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/argoproj/argo-cd/master/USERS.md&#34;&gt;Official Argo CD user list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about Argo CD &lt;a href=&#34;https://argo-cd.readthedocs.io/&#34;&gt;go to the complete documentation&lt;/a&gt;. Check live demo at &lt;a href=&#34;https://cd.apps.argoproj.io/&#34;&gt;https://cd.apps.argoproj.io/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;h3&gt;Contribution, Discussion and Support&lt;/h3&gt; &#xA;&lt;p&gt;You can reach the Argo CD community and developers via the following channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Q &amp;amp; A : &lt;a href=&#34;https://github.com/argoproj/argo-cd/discussions&#34;&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chat : &lt;a href=&#34;https://argoproj.github.io/community/join-slack&#34;&gt;The #argo-cd Slack channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Contributors Office Hours: &lt;a href=&#34;https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com&#34;&gt;Every Thursday&lt;/a&gt; | &lt;a href=&#34;https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8&#34;&gt;Agenda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;User Community meeting: &lt;a href=&#34;https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com&#34;&gt;First Wednesday of the month&lt;/a&gt; | &lt;a href=&#34;https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ&#34;&gt;Agenda&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Participation in the Argo CD project is governed by the &lt;a href=&#34;https://github.com/cncf/foundation/raw/master/code-of-conduct.md&#34;&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Blogs and Presentations&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/terrytangyuan/awesome-argo&#34;&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.akuity.io/unveil-the-secret-ingredients-of-continuous-delivery-at-enterprise-scale-with-argo-cd-7c5b4057ee49&#34;&gt;Unveil the Secret Ingredients of Continuous Delivery at Enterprise Scale with Argo CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/avPUQin9kzU&#34;&gt;GitOps Without Pipelines With ArgoCD Image Updater&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/eEcgn_gU3SM&#34;&gt;Combining Argo CD (GitOps), Crossplane (Control Plane), And KubeVela (OAM)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/yrj4lmScKHQ&#34;&gt;How to Apply GitOps to Everything - Combining Argo CD and Crossplane&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/nkPoPaVzExY&#34;&gt;Couchbase - How To Run a Database Cluster in Kubernetes Using Argo CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/XNXJtxkUKeY&#34;&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/cpAaI8p4R60&#34;&gt;Environments Based On Pull Requests (PRs): Using Argo CD To Apply GitOps Principles On Previews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/vpWQeoaiRM4&#34;&gt;Argo CD: Applying GitOps Principles To Manage Production Environment In Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codefresh.io/continuous-deployment/creating-temporary-preview-environments-based-pull-requests-argo-cd-codefresh/&#34;&gt;Creating Temporary Preview Environments Based On Pull Requests With Argo CD And Codefresh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=r50tRQjisxw&#34;&gt;Tutorial: Everything You Need To Become A GitOps Ninja&lt;/a&gt; 90m tutorial on GitOps and Argo CD.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.inovex.de/blog/spinnaker-vs-argo-cd-vs-tekton-vs-jenkins-x/&#34;&gt;Comparison of Argo CD, Spinnaker, Jenkins X, and Tekton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ibm.com/cloud/blog/simplify-and-automate-deployments-using-gitops-with-ibm-multicloud-manager-3-1-2&#34;&gt;Simplify and Automate Deployments Using GitOps with IBM Multicloud Manager 3.1.2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v0-6.kubeflow.org/docs/use-cases/gitops-for-kubeflow/&#34;&gt;GitOps for Kubeflow using Argo CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/webinar-series-gitops-tool-sets-on-kubernetes-with-circleci-and-argo-cd&#34;&gt;GitOps Toolsets on Kubernetes with CircleCI and Argo CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OdzH82VpMwI&amp;amp;feature=youtu.be&#34;&gt;CI/CD in Light Speed with K8s and Argo CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VXrGp5er1ZE&amp;amp;t=0s&amp;amp;index=135&amp;amp;list=PLj6h78yzYM2PZf9eA7bhWnIh_mK1vyOfU&#34;&gt;Machine Learning as Code&lt;/a&gt;. Among other things, describes how Kubeflow uses Argo CD to implement GitOPs for ML&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aWDIQMbp1cc&amp;amp;feature=youtu.be&amp;amp;t=1m4s&#34;&gt;Argo CD - GitOps Continuous Delivery for Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2WSJF7d8dUg&amp;amp;feature=youtu.be&#34;&gt;Introduction to Argo CD : Kubernetes DevOps CI/CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/riskified-technology/gitops-deployment-and-kubernetes-f1ab289efa4b&#34;&gt;GitOps Deployment and Kubernetes - using Argo CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itnext.io/deploy-argo-cd-with-ingress-and-tls-in-three-steps-no-yaml-yak-shaving-required-bc536d401491&#34;&gt;Deploy Argo CD with Ingress and TLS in Three Steps: No YAML Yak Shaving Required&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codefresh.io/events/cncf-member-webinar-gitops-continuous-delivery-argo-codefresh/&#34;&gt;GitOps Continuous Delivery with Argo and Codefresh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mjpitz.com/blog/2020/12/03/renovate-your-gitops/&#34;&gt;Stay up to date with Argo CD and Renovate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.arthurkoziel.com/setting-up-argocd-with-helm/&#34;&gt;Setting up Argo CD with Helm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thenewstack.io/applied-gitops-with-argocd/&#34;&gt;Applied GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cncf.io/blog/2020/12/17/solving-configuration-drift-using-gitops-with-argo-cd/&#34;&gt;Solving configuration drift using GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.sap.com/2021/05/06/decentralized-gitops-over-environments/&#34;&gt;Decentralized GitOps over environments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://paytmlabs.com/blog/2021/10/how-to-improve-operational-work-with-operators-and-gitops/&#34;&gt;How GitOps and Operators mark the rise of Infrastructure-As-Software&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/AvLuplh1skA&#34;&gt;Getting Started with ArgoCD for GitOps Deployments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/17894DTru2Y&#34;&gt;Using Argo CD &amp;amp; Datree for Stable Kubernetes CI/CD Deployments&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>cockroachdb/pebble</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/cockroachdb/pebble</id>
    <link href="https://github.com/cockroachdb/pebble" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RocksDB/LevelDB inspired key-value database in Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pebble &lt;a href=&#34;https://github.com/cockroachdb/pebble/actions/workflows/ci.yaml&#34;&gt;&lt;img src=&#34;https://github.com/cockroachdb/pebble/actions/workflows/ci.yaml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/cockroachdb/pebble&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/cockroachdb/pebble?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://cockroachdb.github.io/pebble/&#34;&gt;Nightly benchmarks&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Pebble is a LevelDB/RocksDB inspired key-value store focused on performance and internal usage by CockroachDB. Pebble inherits the RocksDB file formats and a few extensions such as range deletion tombstones, table-level bloom filters, and updates to the MANIFEST format.&lt;/p&gt; &#xA;&lt;p&gt;Pebble intentionally does not aspire to include every feature in RocksDB and is specifically targetting the use case and feature set needed by CockroachDB:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Block-based tables&lt;/li&gt; &#xA; &lt;li&gt;Checkpoints&lt;/li&gt; &#xA; &lt;li&gt;Indexed batches&lt;/li&gt; &#xA; &lt;li&gt;Iterator options (lower/upper bound, table filter)&lt;/li&gt; &#xA; &lt;li&gt;Level-based compaction&lt;/li&gt; &#xA; &lt;li&gt;Manual compaction&lt;/li&gt; &#xA; &lt;li&gt;Merge operator&lt;/li&gt; &#xA; &lt;li&gt;Prefix bloom filters&lt;/li&gt; &#xA; &lt;li&gt;Prefix iteration&lt;/li&gt; &#xA; &lt;li&gt;Range deletion tombstones&lt;/li&gt; &#xA; &lt;li&gt;Reverse iteration&lt;/li&gt; &#xA; &lt;li&gt;SSTable ingestion&lt;/li&gt; &#xA; &lt;li&gt;Single delete&lt;/li&gt; &#xA; &lt;li&gt;Snapshots&lt;/li&gt; &#xA; &lt;li&gt;Table-level bloom filters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;RocksDB has a large number of features that are not implemented in Pebble:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Backups&lt;/li&gt; &#xA; &lt;li&gt;Column families&lt;/li&gt; &#xA; &lt;li&gt;Delete files in range&lt;/li&gt; &#xA; &lt;li&gt;FIFO compaction style&lt;/li&gt; &#xA; &lt;li&gt;Forward iterator / tailing iterator&lt;/li&gt; &#xA; &lt;li&gt;Hash table format&lt;/li&gt; &#xA; &lt;li&gt;Memtable bloom filter&lt;/li&gt; &#xA; &lt;li&gt;Persistent cache&lt;/li&gt; &#xA; &lt;li&gt;Pin iterator key / value&lt;/li&gt; &#xA; &lt;li&gt;Plain table format&lt;/li&gt; &#xA; &lt;li&gt;SSTable ingest-behind&lt;/li&gt; &#xA; &lt;li&gt;Sub-compactions&lt;/li&gt; &#xA; &lt;li&gt;Transactions&lt;/li&gt; &#xA; &lt;li&gt;Universal compaction style&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/em&gt;: Pebble may silently corrupt data or behave incorrectly if used with a RocksDB database that uses a feature Pebble doesn&#39;t support. Caveat emptor!&lt;/p&gt; &#xA;&lt;h2&gt;Production Ready&lt;/h2&gt; &#xA;&lt;p&gt;Pebble was introduced as an alternative storage engine to RocksDB in CockroachDB v20.1 (released May 2020) and was used in production successfully at that time. Pebble was made the default storage engine in CockroachDB v20.2 (released Nov 2020). Pebble is being used in production by users of CockroachDB at scale and is considered stable and production ready.&lt;/p&gt; &#xA;&lt;h2&gt;Advantages&lt;/h2&gt; &#xA;&lt;p&gt;Pebble offers several improvements over RocksDB:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Faster reverse iteration via backwards links in the memtable&#39;s skiplist.&lt;/li&gt; &#xA; &lt;li&gt;Faster commit pipeline that achieves better concurrency.&lt;/li&gt; &#xA; &lt;li&gt;Seamless merged iteration of indexed batches. The mutations in the batch conceptually occupy another memtable level.&lt;/li&gt; &#xA; &lt;li&gt;Smaller, more approachable code base.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/cockroachdb/pebble/master/docs/rocksdb.md&#34;&gt;Pebble vs RocksDB: Implementation Differences&lt;/a&gt; doc for more details on implementation differences.&lt;/p&gt; &#xA;&lt;h2&gt;RocksDB Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Pebble strives for forward compatibility with RocksDB 6.2.1 (the latest version of RocksDB used by CockroachDB). Forward compatibility means that a DB generated by RocksDB can be used by Pebble. Currently, Pebble provides bidirectional compatibility with RocksDB (a Pebble generated DB can be used by RocksDB) when using its FormatMostCompatible format. New functionality that is backwards incompatible is gated behind new format major versions. In general, Pebble only provides compatibility with the subset of functionality and configuration used by CockroachDB. The scope of RocksDB functionality and configuration is too large to adequately test and document all the incompatibilities. The list below contains known incompatibilities.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pebble&#39;s use of WAL recycling is only compatible with RocksDB&#39;s &lt;code&gt;kTolerateCorruptedTailRecords&lt;/code&gt; WAL recovery mode. Older versions of RocksDB would automatically map incompatible WAL recovery modes to &lt;code&gt;kTolerateCorruptedTailRecords&lt;/code&gt;. New versions of RocksDB will disable WAL recycling.&lt;/li&gt; &#xA; &lt;li&gt;Column families. Pebble does not support column families, nor does it attempt to detect their usage when opening a DB that may contain them.&lt;/li&gt; &#xA; &lt;li&gt;Hash table format. Pebble does not support the hash table sstable format.&lt;/li&gt; &#xA; &lt;li&gt;Plain table format. Pebble does not support the plain table sstable format.&lt;/li&gt; &#xA; &lt;li&gt;SSTable format version 3 and 4. Pebble does not currently support version 3 and version 4 format sstables. The sstable format version is controlled by the &lt;code&gt;BlockBasedTableOptions::format_version&lt;/code&gt; option. See &lt;a href=&#34;https://github.com/cockroachdb/pebble/issues/97&#34;&gt;#97&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pedigree&lt;/h2&gt; &#xA;&lt;p&gt;Pebble is based on the incomplete Go version of LevelDB:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/golang/leveldb&#34;&gt;https://github.com/golang/leveldb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Go version of LevelDB is based on the C++ original:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/leveldb&#34;&gt;https://github.com/google/leveldb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Optimizations and inspiration were drawn from RocksDB:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/facebook/rocksdb&#34;&gt;https://github.com/facebook/rocksdb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Example Code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;log&#34;&#xA;&#xA;&#x9;&#34;github.com/cockroachdb/pebble&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;db, err := pebble.Open(&#34;demo&#34;, &amp;amp;pebble.Options{})&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#x9;key := []byte(&#34;hello&#34;)&#xA;&#x9;if err := db.Set(key, []byte(&#34;world&#34;), pebble.Sync); err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#x9;value, closer, err := db.Get(key)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#x9;fmt.Printf(&#34;%s %s\n&#34;, key, value)&#xA;&#x9;if err := closer.Close(); err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;&#x9;if err := db.Close(); err != nil {&#xA;&#x9;&#x9;log.Fatal(err)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jpillora/chisel</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/jpillora/chisel</id>
    <link href="https://github.com/jpillora/chisel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast TCP/UDP tunnel over HTTP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chisel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/jpillora/chisel&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/jpillora/chisel?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jpillora/chisel/actions?workflow=CI&#34;&gt;&lt;img src=&#34;https://github.com/jpillora/chisel/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chisel is a fast TCP/UDP tunnel, transported over HTTP, secured via SSH. Single executable including both client and server. Written in Go (golang). Chisel is mainly useful for passing through firewalls, though it can also be used to provide a secure endpoint into your network.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.google.com/drawings/d/1p53VWxzGNfy8rjr-mW8pvisJmhkoLl82vAgctO_6f1w/pub?w=960&amp;amp;h=720&#34; alt=&#34;overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to use&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/test/bench/perf.md&#34;&gt;Performant&lt;/a&gt;*&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#security&#34;&gt;Encrypted connections&lt;/a&gt; using the SSH protocol (via &lt;code&gt;crypto/ssh&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#authentication&#34;&gt;Authenticated connections&lt;/a&gt;; authenticated client connections with a users config file, authenticated server connections with fingerprint matching.&lt;/li&gt; &#xA; &lt;li&gt;Client auto-reconnects with &lt;a href=&#34;https://github.com/jpillora/backoff&#34;&gt;exponential backoff&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clients can create multiple tunnel endpoints over one TCP connection&lt;/li&gt; &#xA; &lt;li&gt;Clients can optionally pass through SOCKS or HTTP CONNECT proxies&lt;/li&gt; &#xA; &lt;li&gt;Reverse port forwarding (Connections go through the server and out the client)&lt;/li&gt; &#xA; &lt;li&gt;Server optionally doubles as a &lt;a href=&#34;http://golang.org/pkg/net/http/httputil/#NewSingleHostReverseProxy&#34;&gt;reverse proxy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Server optionally allows &lt;a href=&#34;https://en.wikipedia.org/wiki/SOCKS&#34;&gt;SOCKS5&lt;/a&gt; connections (See &lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/#socks5-guide&#34;&gt;guide below&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Clients optionally allow &lt;a href=&#34;https://en.wikipedia.org/wiki/SOCKS&#34;&gt;SOCKS5&lt;/a&gt; connections from a reversed port forward&lt;/li&gt; &#xA; &lt;li&gt;Client connections over stdio which supports &lt;code&gt;ssh -o ProxyCommand&lt;/code&gt; providing SSH over HTTP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Binaries&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jpillora/chisel/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/jpillora/chisel.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jpillora/chisel/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/jpillora/chisel/total.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/jpillora/chisel/releases/latest&#34;&gt;the latest release&lt;/a&gt; or download and install it now with &lt;code&gt;curl https://i.jpillora.com/chisel! | bash&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jpillora/chisel/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jpillora/chisel.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/jpillora/chisel&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/jpillora/chisel/latest&#34; alt=&#34;Image Size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --rm -it jpillora/chisel --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fedora&lt;/h3&gt; &#xA;&lt;p&gt;The package is maintained by the Fedora community. If you encounter issues related to the usage of the RPM, please use this &lt;a href=&#34;https://bugzilla.redhat.com/buglist.cgi?bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;classification=Fedora&amp;amp;component=chisel&amp;amp;list_id=11614537&amp;amp;product=Fedora&amp;amp;product=Fedora%20EPEL&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf -y install chisel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ go install github.com/jpillora/chisel@latest -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://chisel-demo.herokuapp.com&#34;&gt;demo app&lt;/a&gt; on Heroku is running this &lt;code&gt;chisel server&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ chisel server --port $PORT --proxy http://example.com&#xA;# listens on $PORT, proxy web requests to http://example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This demo app is also running a &lt;a href=&#34;https://www.npmjs.com/package/serve&#34;&gt;simple file server&lt;/a&gt; on &lt;code&gt;:3000&lt;/code&gt;, which is normally inaccessible due to Heroku&#39;s firewall. However, if we tunnel in with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ chisel client https://chisel-demo.herokuapp.com 3000&#xA;# connects to chisel server at https://chisel-demo.herokuapp.com,&#xA;# tunnels your localhost:3000 to the server&#39;s localhost:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then visit &lt;a href=&#34;http://localhost:3000/&#34;&gt;localhost:3000&lt;/a&gt;, we should see a directory listing. Also, if we visit the &lt;a href=&#34;https://chisel-demo.herokuapp.com&#34;&gt;demo app&lt;/a&gt; in the browser we should hit the server&#39;s default proxy and see a copy of &lt;a href=&#34;http://example.com&#34;&gt;example.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;!-- render these help texts by hand,&#xA;  or use https://github.com/jpillora/md-tmpl&#xA;    with $ md-tmpl -w README.md --&gt; &#xA;&lt;!--tmpl,code=plain:echo &#34;$ chisel --help&#34; &amp;&amp; go run main.go --help | sed &#39;s#0.0.0-src (go1\..*)#X.Y.Z#&#39; --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plain&#34;&gt;$ chisel --help&#xA;&#xA;  Usage: chisel [command] [--help]&#xA;&#xA;  Version: X.Y.Z&#xA;&#xA;  Commands:&#xA;    server - runs chisel in server mode&#xA;    client - runs chisel in client mode&#xA;&#xA;  Read more:&#xA;    https://github.com/jpillora/chisel&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--/tmpl--&gt; &#xA;&lt;!--tmpl,code=plain:echo &#34;$ chisel server --help&#34; &amp;&amp; go run main.go server --help | cat | sed &#39;s#0.0.0-src (go1\..*)#X.Y.Z#&#39; --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plain&#34;&gt;$ chisel server --help&#xA;&#xA;  Usage: chisel server [options]&#xA;&#xA;  Options:&#xA;&#xA;    --host, Defines the HTTP listening host – the network interface&#xA;    (defaults the environment variable HOST and falls back to 0.0.0.0).&#xA;&#xA;    --port, -p, Defines the HTTP listening port (defaults to the environment&#xA;    variable PORT and fallsback to port 8080).&#xA;&#xA;    --key, An optional string to seed the generation of a ECDSA public&#xA;    and private key pair. All communications will be secured using this&#xA;    key pair. Share the subsequent fingerprint with clients to enable detection&#xA;    of man-in-the-middle attacks (defaults to the CHISEL_KEY environment&#xA;    variable, otherwise a new key is generate each run).&#xA;&#xA;    --authfile, An optional path to a users.json file. This file should&#xA;    be an object with users defined like:&#xA;      {&#xA;        &#34;&amp;lt;user:pass&amp;gt;&#34;: [&#34;&amp;lt;addr-regex&amp;gt;&#34;,&#34;&amp;lt;addr-regex&amp;gt;&#34;]&#xA;      }&#xA;    when &amp;lt;user&amp;gt; connects, their &amp;lt;pass&amp;gt; will be verified and then&#xA;    each of the remote addresses will be compared against the list&#xA;    of address regular expressions for a match. Addresses will&#xA;    always come in the form &#34;&amp;lt;remote-host&amp;gt;:&amp;lt;remote-port&amp;gt;&#34; for normal remotes&#xA;    and &#34;R:&amp;lt;local-interface&amp;gt;:&amp;lt;local-port&amp;gt;&#34; for reverse port forwarding&#xA;    remotes. This file will be automatically reloaded on change.&#xA;&#xA;    --auth, An optional string representing a single user with full&#xA;    access, in the form of &amp;lt;user:pass&amp;gt;. It is equivalent to creating an&#xA;    authfile with {&#34;&amp;lt;user:pass&amp;gt;&#34;: [&#34;&#34;]}. If unset, it will use the&#xA;    environment variable AUTH.&#xA;&#xA;    --keepalive, An optional keepalive interval. Since the underlying&#xA;    transport is HTTP, in many instances we&#39;ll be traversing through&#xA;    proxies, often these proxies will close idle connections. You must&#xA;    specify a time with a unit, for example &#39;5s&#39; or &#39;2m&#39;. Defaults&#xA;    to &#39;25s&#39; (set to 0s to disable).&#xA;&#xA;    --backend, Specifies another HTTP server to proxy requests to when&#xA;    chisel receives a normal HTTP request. Useful for hiding chisel in&#xA;    plain sight.&#xA;&#xA;    --socks5, Allow clients to access the internal SOCKS5 proxy. See&#xA;    chisel client --help for more information.&#xA;&#xA;    --reverse, Allow clients to specify reverse port forwarding remotes&#xA;    in addition to normal remotes.&#xA;&#xA;    --tls-key, Enables TLS and provides optional path to a PEM-encoded&#xA;    TLS private key. When this flag is set, you must also set --tls-cert,&#xA;    and you cannot set --tls-domain.&#xA;&#xA;    --tls-cert, Enables TLS and provides optional path to a PEM-encoded&#xA;    TLS certificate. When this flag is set, you must also set --tls-key,&#xA;    and you cannot set --tls-domain.&#xA;&#xA;    --tls-domain, Enables TLS and automatically acquires a TLS key and&#xA;    certificate using LetsEncypt. Setting --tls-domain requires port 443.&#xA;    You may specify multiple --tls-domain flags to serve multiple domains.&#xA;    The resulting files are cached in the &#34;$HOME/.cache/chisel&#34; directory.&#xA;    You can modify this path by setting the CHISEL_LE_CACHE variable,&#xA;    or disable caching by setting this variable to &#34;-&#34;. You can optionally&#xA;    provide a certificate notification email by setting CHISEL_LE_EMAIL.&#xA;&#xA;    --tls-ca, a path to a PEM encoded CA certificate bundle or a directory&#xA;    holding multiple PEM encode CA certificate bundle files, which is used to &#xA;    validate client connections. The provided CA certificates will be used &#xA;    instead of the system roots. This is commonly used to implement mutual-TLS. &#xA;&#xA;    --pid Generate pid file in current working directory&#xA;&#xA;    -v, Enable verbose logging&#xA;&#xA;    --help, This help text&#xA;&#xA;  Signals:&#xA;    The chisel process is listening for:&#xA;      a SIGUSR2 to print process stats, and&#xA;      a SIGHUP to short-circuit the client reconnect timer&#xA;&#xA;  Version:&#xA;    X.Y.Z&#xA;&#xA;  Read more:&#xA;    https://github.com/jpillora/chisel&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--/tmpl--&gt; &#xA;&lt;!--tmpl,code=plain:echo &#34;$ chisel client --help&#34; &amp;&amp; go run main.go client --help | sed &#39;s#0.0.0-src (go1\..*)#X.Y.Z#&#39; --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plain&#34;&gt;$ chisel client --help&#xA;&#xA;  Usage: chisel client [options] &amp;lt;server&amp;gt; &amp;lt;remote&amp;gt; [remote] [remote] ...&#xA;&#xA;  &amp;lt;server&amp;gt; is the URL to the chisel server.&#xA;&#xA;  &amp;lt;remote&amp;gt;s are remote connections tunneled through the server, each of&#xA;  which come in the form:&#xA;&#xA;    &amp;lt;local-host&amp;gt;:&amp;lt;local-port&amp;gt;:&amp;lt;remote-host&amp;gt;:&amp;lt;remote-port&amp;gt;/&amp;lt;protocol&amp;gt;&#xA;&#xA;    ■ local-host defaults to 0.0.0.0 (all interfaces).&#xA;    ■ local-port defaults to remote-port.&#xA;    ■ remote-port is required*.&#xA;    ■ remote-host defaults to 0.0.0.0 (server localhost).&#xA;    ■ protocol defaults to tcp.&#xA;&#xA;  which shares &amp;lt;remote-host&amp;gt;:&amp;lt;remote-port&amp;gt; from the server to the client&#xA;  as &amp;lt;local-host&amp;gt;:&amp;lt;local-port&amp;gt;, or:&#xA;&#xA;    R:&amp;lt;local-interface&amp;gt;:&amp;lt;local-port&amp;gt;:&amp;lt;remote-host&amp;gt;:&amp;lt;remote-port&amp;gt;/&amp;lt;protocol&amp;gt;&#xA;&#xA;  which does reverse port forwarding, sharing &amp;lt;remote-host&amp;gt;:&amp;lt;remote-port&amp;gt;&#xA;  from the client to the server&#39;s &amp;lt;local-interface&amp;gt;:&amp;lt;local-port&amp;gt;.&#xA;&#xA;    example remotes&#xA;&#xA;      3000&#xA;      example.com:3000&#xA;      3000:google.com:80&#xA;      192.168.0.5:3000:google.com:80&#xA;      socks&#xA;      5000:socks&#xA;      R:2222:localhost:22&#xA;      R:socks&#xA;      R:5000:socks&#xA;      stdio:example.com:22&#xA;      1.1.1.1:53/udp&#xA;&#xA;    When the chisel server has --socks5 enabled, remotes can&#xA;    specify &#34;socks&#34; in place of remote-host and remote-port.&#xA;    The default local host and port for a &#34;socks&#34; remote is&#xA;    127.0.0.1:1080. Connections to this remote will terminate&#xA;    at the server&#39;s internal SOCKS5 proxy.&#xA;&#xA;    When the chisel server has --reverse enabled, remotes can&#xA;    be prefixed with R to denote that they are reversed. That&#xA;    is, the server will listen and accept connections, and they&#xA;    will be proxied through the client which specified the remote.&#xA;    Reverse remotes specifying &#34;R:socks&#34; will listen on the server&#39;s&#xA;    default socks port (1080) and terminate the connection at the&#xA;    client&#39;s internal SOCKS5 proxy.&#xA;&#xA;    When stdio is used as local-host, the tunnel will connect standard&#xA;    input/output of this program with the remote. This is useful when &#xA;    combined with ssh ProxyCommand. You can use&#xA;      ssh -o ProxyCommand=&#39;chisel client chiselserver stdio:%h:%p&#39; \&#xA;          user@example.com&#xA;    to connect to an SSH server through the tunnel.&#xA;&#xA;  Options:&#xA;&#xA;    --fingerprint, A *strongly recommended* fingerprint string&#xA;    to perform host-key validation against the server&#39;s public key.&#xA;&#x9;Fingerprint mismatches will close the connection.&#xA;&#x9;Fingerprints are generated by hashing the ECDSA public key using&#xA;&#x9;SHA256 and encoding the result in base64.&#xA;&#x9;Fingerprints must be 44 characters containing a trailing equals (=).&#xA;&#xA;    --auth, An optional username and password (client authentication)&#xA;    in the form: &#34;&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;&#34;. These credentials are compared to&#xA;    the credentials inside the server&#39;s --authfile. defaults to the&#xA;    AUTH environment variable.&#xA;&#xA;    --keepalive, An optional keepalive interval. Since the underlying&#xA;    transport is HTTP, in many instances we&#39;ll be traversing through&#xA;    proxies, often these proxies will close idle connections. You must&#xA;    specify a time with a unit, for example &#39;5s&#39; or &#39;2m&#39;. Defaults&#xA;    to &#39;25s&#39; (set to 0s to disable).&#xA;&#xA;    --max-retry-count, Maximum number of times to retry before exiting.&#xA;    Defaults to unlimited.&#xA;&#xA;    --max-retry-interval, Maximum wait time before retrying after a&#xA;    disconnection. Defaults to 5 minutes.&#xA;&#xA;    --proxy, An optional HTTP CONNECT or SOCKS5 proxy which will be&#xA;    used to reach the chisel server. Authentication can be specified&#xA;    inside the URL.&#xA;    For example, http://admin:password@my-server.com:8081&#xA;            or: socks://admin:password@my-server.com:1080&#xA;&#xA;    --header, Set a custom header in the form &#34;HeaderName: HeaderContent&#34;.&#xA;    Can be used multiple times. (e.g --header &#34;Foo: Bar&#34; --header &#34;Hello: World&#34;)&#xA;&#xA;    --hostname, Optionally set the &#39;Host&#39; header (defaults to the host&#xA;    found in the server url).&#xA;&#xA;    --tls-ca, An optional root certificate bundle used to verify the&#xA;    chisel server. Only valid when connecting to the server with&#xA;    &#34;https&#34; or &#34;wss&#34;. By default, the operating system CAs will be used.&#xA;&#xA;    --tls-skip-verify, Skip server TLS certificate verification of&#xA;    chain and host name (if TLS is used for transport connections to&#xA;    server). If set, client accepts any TLS certificate presented by&#xA;    the server and any host name in that certificate. This only affects&#xA;    transport https (wss) connection. Chisel server&#39;s public key&#xA;    may be still verified (see --fingerprint) after inner connection&#xA;    is established.&#xA;&#xA;    --tls-key, a path to a PEM encoded private key used for client &#xA;    authentication (mutual-TLS).&#xA;&#xA;    --tls-cert, a path to a PEM encoded certificate matching the provided &#xA;    private key. The certificate must have client authentication &#xA;    enabled (mutual-TLS).&#xA;&#xA;    --pid Generate pid file in current working directory&#xA;&#xA;    -v, Enable verbose logging&#xA;&#xA;    --help, This help text&#xA;&#xA;  Signals:&#xA;    The chisel process is listening for:&#xA;      a SIGUSR2 to print process stats, and&#xA;      a SIGHUP to short-circuit the client reconnect timer&#xA;&#xA;  Version:&#xA;    X.Y.Z&#xA;&#xA;  Read more:&#xA;    https://github.com/jpillora/chisel&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--/tmpl--&gt; &#xA;&lt;h3&gt;Security&lt;/h3&gt; &#xA;&lt;p&gt;Encryption is always enabled. When you start up a chisel server, it will generate an in-memory ECDSA public/private key pair. The public key fingerprint (base64 encoded SHA256) will be displayed as the server starts. Instead of generating a random key, the server may optionally specify a key seed, using the &lt;code&gt;--key&lt;/code&gt; option, which will be used to seed the key generation. When clients connect, they will also display the server&#39;s public key fingerprint. The client can force a particular fingerprint using the &lt;code&gt;--fingerprint&lt;/code&gt; option. See the &lt;code&gt;--help&lt;/code&gt; above for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;--authfile&lt;/code&gt; option, the server may optionally provide a &lt;code&gt;user.json&lt;/code&gt; configuration file to create a list of accepted users. The client then authenticates using the &lt;code&gt;--auth&lt;/code&gt; option. See &lt;a href=&#34;https://raw.githubusercontent.com/jpillora/chisel/master/example/users.json&#34;&gt;users.json&lt;/a&gt; for an example authentication configuration file. See the &lt;code&gt;--help&lt;/code&gt; above for more information.&lt;/p&gt; &#xA;&lt;p&gt;Internally, this is done using the &lt;em&gt;Password&lt;/em&gt; authentication method provided by SSH. Learn more about &lt;code&gt;crypto/ssh&lt;/code&gt; here &lt;a href=&#34;http://blog.gopheracademy.com/go-and-ssh/&#34;&gt;http://blog.gopheracademy.com/go-and-ssh/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;SOCKS5 Guide&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start your chisel server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run \&#xA;  --name chisel -p 9312:9312 \&#xA;  -d --restart always \&#xA;  jpillora/chisel server -p 9312 --socks5 --key supersecret&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Connect your chisel client (using server&#39;s fingerprint)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chisel client --fingerprint &#39;rHb55mcxf6vSckL2AezFV09rLs7pfPpavVu++MF7AhQ=&#39; &amp;lt;server-address&amp;gt;:9312 socks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Point your SOCKS5 clients (e.g. OS/Browser) to:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;client-address&amp;gt;:1080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Now you have an encrypted, authenticated SOCKS5 connection over HTTP&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Caveats&lt;/h4&gt; &#xA;&lt;p&gt;Since WebSockets support is required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IaaS providers all will support WebSockets (unless an unsupporting HTTP proxy has been forced in front of you, in which case I&#39;d argue that you&#39;ve been downgraded to PaaS)&lt;/li&gt; &#xA; &lt;li&gt;PaaS providers vary in their support for WebSockets &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Heroku has full support&lt;/li&gt; &#xA;   &lt;li&gt;Openshift has full support though connections are only accepted on ports 8443 and 8080&lt;/li&gt; &#xA;   &lt;li&gt;Google App Engine has &lt;strong&gt;no&lt;/strong&gt; support (Track this on &lt;a href=&#34;https://code.google.com/p/googleappengine/issues/detail?id=2535&#34;&gt;their repo&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://golang.org/doc/code.html&#34;&gt;http://golang.org/doc/code.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://golang.org/doc/effective_go.html&#34;&gt;http://golang.org/doc/effective_go.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;github.com/jpillora/chisel/share&lt;/code&gt; contains the shared package&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;github.com/jpillora/chisel/server&lt;/code&gt; contains the server package&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;github.com/jpillora/chisel/client&lt;/code&gt; contains the client package&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;1.0&lt;/code&gt; - Initial release&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.1&lt;/code&gt; - Replaced simple symmetric encryption for ECDSA SSH&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.2&lt;/code&gt; - Added SOCKS5 (server) and HTTP CONNECT (client) support&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.3&lt;/code&gt; - Added reverse tunnelling support&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.4&lt;/code&gt; - Added arbitrary HTTP header support&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.5&lt;/code&gt; - Added reverse SOCKS support (by @aus)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.6&lt;/code&gt; - Added client stdio support (by @BoleynSu)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.7&lt;/code&gt; - Added UDP support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jpillora/chisel/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt; © Jaime Pillora&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>casdoor/casdoor</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/casdoor/casdoor</id>
    <link href="https://github.com/casdoor/casdoor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Identity and Access Management (IAM) / Single-Sign-On (SSO) platform with web UI supporting OAuth 2.0, OIDC, SAML and CAS, QQ group: 645200447&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34; style=&#34;border-bottom: none;&#34;&gt;📦⚡️ Casdoor&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;A UI-first centralized authentication / Single-Sign-On (SSO) platform based on OAuth 2.0 / OIDC.&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/casdoor/casdoor/master/#badge&#34;&gt; &lt;img alt=&#34;semantic-release&#34; src=&#34;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/casbin/casdoor&#34;&gt; &lt;img alt=&#34;docker pull casbin/casdoor&#34; src=&#34;https://img.shields.io/docker/pulls/casbin/casdoor.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/casdoor/casdoor/actions/workflows/build.yml&#34;&gt; &lt;img alt=&#34;GitHub Workflow Status (branch)&#34; src=&#34;https://github.com/casbin/jcasbin/workflows/build/badge.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/casdoor/casdoor/releases/latest&#34;&gt; &lt;img alt=&#34;GitHub Release&#34; src=&#34;https://img.shields.io/github/v/release/casbin/casdoor.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/repository/docker/casbin/casdoor&#34;&gt; &lt;img alt=&#34;Docker Image Version (latest semver)&#34; src=&#34;https://img.shields.io/badge/Docker%20Hub-latest-brightgreen&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/casdoor/casdoor&#34;&gt; &lt;img alt=&#34;Go Report Card&#34; src=&#34;https://goreportcard.com/badge/github.com/casdoor/casdoor?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/casdoor/casdoor/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/casbin/casdoor?style=flat-square&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/casdoor/casdoor/issues&#34;&gt; &lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/casbin/casdoor?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/casdoor/casdoor/master/#&#34;&gt; &lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/casbin/casdoor?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/casdoor/casdoor/network&#34;&gt; &lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/casbin/casdoor?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/casdoor-site&#34;&gt; &lt;img alt=&#34;Crowdin&#34; src=&#34;https://badges.crowdin.net/casdoor-site/localized.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://gitter.im/casbin/casdoor&#34;&gt; &lt;img alt=&#34;Gitter&#34; src=&#34;https://badges.gitter.im/casbin/casdoor.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Online demo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;International: &lt;a href=&#34;https://door.casdoor.org&#34;&gt;https://door.casdoor.org&lt;/a&gt; (read-only)&lt;/li&gt; &#xA; &lt;li&gt;Asian mirror: &lt;a href=&#34;https://door.casdoor.com&#34;&gt;https://door.casdoor.com&lt;/a&gt; (read-only)&lt;/li&gt; &#xA; &lt;li&gt;Asian mirror: &lt;a href=&#34;https://demo.casdoor.com&#34;&gt;https://demo.casdoor.com&lt;/a&gt; (read-write, will restore for every 5 minutes)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;International: &lt;a href=&#34;https://casdoor.org&#34;&gt;https://casdoor.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Asian mirror: &lt;a href=&#34;https://docs.casdoor.cn&#34;&gt;https://docs.casdoor.cn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By source code: &lt;a href=&#34;https://casdoor.org/docs/basic/server-installation&#34;&gt;https://casdoor.org/docs/basic/server-installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;By Docker: &lt;a href=&#34;https://casdoor.org/docs/basic/try-with-docker&#34;&gt;https://casdoor.org/docs/basic/try-with-docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to connect to Casdoor?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://casdoor.org/docs/how-to-connect/overview&#34;&gt;https://casdoor.org/docs/how-to-connect/overview&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Casdoor Public API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docs: &lt;a href=&#34;https://casdoor.org/docs/basic/public-api&#34;&gt;https://casdoor.org/docs/basic/public-api&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Swagger: &lt;a href=&#34;https://door.casdoor.com/swagger&#34;&gt;https://door.casdoor.com/swagger&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://casdoor.org/docs/integration/apisix&#34;&gt;https://casdoor.org/docs/integration/apisix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to contact?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gitter: &lt;a href=&#34;https://gitter.im/casbin/casdoor&#34;&gt;https://gitter.im/casbin/casdoor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Forum: &lt;a href=&#34;https://forum.casbin.com&#34;&gt;https://forum.casbin.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Contact: &lt;a href=&#34;https://tawk.to/chat/623352fea34c2456412b8c51/1fuc7od6e&#34;&gt;https://tawk.to/chat/623352fea34c2456412b8c51/1fuc7od6e&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;For casdoor, if you have any questions, you can give Issues, or you can also directly start Pull Requests(but we recommend giving issues first to communicate with the community).&lt;/p&gt; &#xA;&lt;h3&gt;I18n translation&lt;/h3&gt; &#xA;&lt;p&gt;If you are contributing to casdoor, please note that we use &lt;a href=&#34;https://crowdin.com/project/casdoor-web&#34;&gt;Crowdin&lt;/a&gt; as translating platform and i18next as translating tool. When you add some words using i18next in the &lt;code&gt;web/&lt;/code&gt; directory, please remember to add what you have added to the &lt;code&gt;web/src/locales/en/data.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/casdoor/casdoor/raw/master/LICENSE&#34;&gt;Apache-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubeedge/kubeedge</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/kubeedge/kubeedge</id>
    <link href="https://github.com/kubeedge/kubeedge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kubernetes Native Edge Computing Framework (project under CNCF)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KubeEdge&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/kubeedge/kubeedge&#34;&gt;&lt;img src=&#34;https://travis-ci.org/kubeedge/kubeedge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/kubeedge/kubeedge&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/kubeedge/kubeedge&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kubeedge/kubeedge/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/kubeedge/kubeedge.svg?style=flat-square&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kubeedge/kubeedge/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/kubeedge/kubeedge/all.svg?style=flat-square&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kubeedge.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/kubeedge/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3018&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3018/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kubeedge/kubeedge/master/docs/images/kubeedge-logo-only.png&#34;&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/kubeedge/kubeedge/master/README_zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;KubeEdge is built upon Kubernetes and extends native containerized application orchestration and device management to hosts at the Edge. It consists of cloud part and edge part, provides core infrastructure support for networking, application deployment and metadata synchronization between cloud and edge. It also supports &lt;strong&gt;MQTT&lt;/strong&gt; which enables edge devices to access through edge nodes.&lt;/p&gt; &#xA;&lt;p&gt;With KubeEdge it is easy to get and deploy existing complicated machine learning, image recognition, event processing and other high level applications to the Edge. With business logic running at the Edge, much larger volumes of data can be secured &amp;amp; processed locally where the data is produced. With data processed at the Edge, the responsiveness is increased dramatically and data privacy is protected.&lt;/p&gt; &#xA;&lt;p&gt;KubeEdge is an incubation-level hosted project by the &lt;a href=&#34;https://cncf.io&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF). KubeEdge incubation &lt;a href=&#34;https://www.cncf.io/blog/2020/09/16/toc-approves-kubeedge-as-incubating-project/&#34;&gt;announcement&lt;/a&gt; by CNCF.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;The versions before &lt;em&gt;1.7&lt;/em&gt; have not been supported, please try upgrade.&lt;/p&gt; &#xA;&lt;h2&gt;Advantages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kubernetes-native support&lt;/strong&gt;: Managing edge applications and edge devices in the cloud with fully compatible Kubernetes APIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud-Edge Reliable Collaboration&lt;/strong&gt;: Ensure reliable messages delivery without loss over unstable cloud-edge network.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Edge Autonomy&lt;/strong&gt;: Ensure edge nodes run autonomously and the applications in edge run normally, when the cloud-edge network is unstable or edge is offline and restarted.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Edge Devices Management&lt;/strong&gt;: Managing edge devices through Kubernetes native APIs implemented by CRD.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extremely Lightweight Edge Agent&lt;/strong&gt;: Extremely lightweight Edge Agent(EdgeCore) to run on resource constrained edge.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How It Works&lt;/h2&gt; &#xA;&lt;p&gt;KubeEdge consists of cloud part and edge part.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/kubeedge/kubeedge/master/docs/images/kubeedge_arch.png&#34; width=&#34;85%&#34; align=&#34;center&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;In the Cloud&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/cloud/cloudhub&#34;&gt;CloudHub&lt;/a&gt;: a web socket server responsible for watching changes at the cloud side, caching and sending messages to EdgeHub.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/cloud/edge_controller&#34;&gt;EdgeController&lt;/a&gt;: an extended kubernetes controller which manages edge nodes and pods metadata so that the data can be targeted to a specific edge node.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/cloud/device_controller&#34;&gt;DeviceController&lt;/a&gt;: an extended kubernetes controller which manages devices so that the device metadata/status data can be synced between edge and cloud.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;On the Edge&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/edge/edgehub&#34;&gt;EdgeHub&lt;/a&gt;: a web socket client responsible for interacting with Cloud Service for the edge computing (like Edge Controller as in the KubeEdge Architecture). This includes syncing cloud-side resource updates to the edge, and reporting edge-side host and device status changes to the cloud.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/edge/edged&#34;&gt;Edged&lt;/a&gt;: an agent that runs on edge nodes and manages containerized applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/edge/eventbus&#34;&gt;EventBus&lt;/a&gt;: a MQTT client to interact with MQTT servers (mosquitto), offering publish and subscribe capabilities to other components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/edge/servicebus&#34;&gt;ServiceBus&lt;/a&gt;: a HTTP client to interact with HTTP servers (REST), offering HTTP client capabilities to components of cloud to reach HTTP servers running at edge.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/edge/devicetwin&#34;&gt;DeviceTwin&lt;/a&gt;: responsible for storing device status and syncing device status to the cloud. It also provides query interfaces for applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubeedge.io/en/docs/architecture/edge/metamanager&#34;&gt;MetaManager&lt;/a&gt;: the message processor between edged and edgehub. It is also responsible for storing/retrieving metadata to/from a lightweight database (SQLite).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Kubernetes compatibility&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.16&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.17&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.18&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.19&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.20&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.21&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.22&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeEdge 1.8&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeEdge 1.9&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeEdge 1.10&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeEdge HEAD (master)&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Key:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;✓&lt;/code&gt; KubeEdge and the Kubernetes version are exactly compatible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;+&lt;/code&gt; KubeEdge has features or API objects that may not be present in the Kubernetes version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-&lt;/code&gt; The Kubernetes version has features or API objects that KubeEdge can&#39;t use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Guides&lt;/h2&gt; &#xA;&lt;p&gt;Get start with this &lt;a href=&#34;https://kubeedge.io/en/docs&#34;&gt;doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See our documentation on &lt;a href=&#34;https://kubeedge.io&#34;&gt;kubeedge.io&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;To learn deeply about KubeEdge, try some examples on &lt;a href=&#34;https://github.com/kubeedge/examples&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubeedge/kubeedge/master/docs/roadmap.md#roadmap&#34;&gt;2021 Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Meeting&lt;/h2&gt; &#xA;&lt;p&gt;Regular Community Meeting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Europe Time: &lt;strong&gt;Wednesdays at 16:30-17:30 Beijing Time&lt;/strong&gt; (biweekly, starting from Feb. 19th 2020). (&lt;a href=&#34;https://www.thetimezoneconverter.com/?t=16%3A30&amp;amp;tz=GMT%2B8&amp;amp;&#34;&gt;Convert to your timezone.&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Pacific Time: &lt;strong&gt;Wednesdays at 10:00-11:00 Beijing Time&lt;/strong&gt; (biweekly, starting from Feb. 26th 2020). (&lt;a href=&#34;https://www.thetimezoneconverter.com/?t=10%3A00&amp;amp;tz=GMT%2B8&amp;amp;&#34;&gt;Convert to your timezone.&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1Sr5QS_Z04uPfRbA7PrXr3aPwCRpx7EtsyHq7mp6CnHs/edit&#34;&gt;Meeting notes and agenda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLQtlO1kVWGXkRGkjSrLGEPJODoPb8s5FM&#34;&gt;Meeting recordings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zoom.us/j/4167237304&#34;&gt;Meeting link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendar.google.com/calendar/embed?src=8rjk8o516vfte21qibvlae3lj4%40group.calendar.google.com&#34;&gt;Meeting Calendar&lt;/a&gt; | &lt;a href=&#34;https://calendar.google.com/calendar?cid=OHJqazhvNTE2dmZ0ZTIxcWlidmxhZTNsajRAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&#34;&gt;Subscribe&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you need support, start with the &lt;a href=&#34;https://kubeedge.io/en/docs/developer/troubleshooting&#34;&gt;troubleshooting guide&lt;/a&gt;, and work your way through the process that we&#39;ve outlined.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, feel free to reach out to us in the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/kubeedge&#34;&gt;mailing list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/kubeedge/shared_invite/enQtNjc0MTg2NTg2MTk0LWJmOTBmOGRkZWNhMTVkNGU1ZjkwNDY4MTY4YTAwNDAyMjRkMjdlMjIzYmMxODY1NGZjYzc4MWM5YmIxZjU1ZDI&#34;&gt;slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/kubeedge&#34;&gt;twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re interested in being a contributor and want to get involved in developing the KubeEdge code, please see &lt;a href=&#34;https://raw.githubusercontent.com/kubeedge/kubeedge/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;KubeEdge is under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/kubeedge/kubeedge/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zricethezav/gitleaks</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/zricethezav/gitleaks</id>
    <link href="https://github.com/zricethezav/gitleaks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Protect and discover secrets using Gitleaks 🔑&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gitleaks&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;┌─○───┐&#xA;│ │╲  │&#xA;│ │ ○ │&#xA;│ ○ ░ │&#xA;└─░───┘&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://github.com/zricethezav/gitleaks/actions/workflows/test.yml&#34;&gt; &lt;img alt=&#34;Github Test&#34; src=&#34;https://github.com/zricethezav/gitleaks/actions/workflows/test.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/zricethezav/gitleaks&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/zricethezav/gitleaks.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.jit.io/jit-open-source-gitleaks?utm_source=github&amp;amp;utm_medium=badge&amp;amp;utm_campaign=GitleaksReadme&amp;amp;utm_id=oss&amp;amp;items=item-secret-detection&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Secured%20by-Jit-B8287F?style=?style=plastic&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=zricethezav&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/zricethezav?label=Follow%20zricethezav&amp;amp;style=social&amp;amp;color=blue&#34; alt=&#34;Follow @zricethezav&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Gitleaks is a SAST tool for &lt;strong&gt;detecting&lt;/strong&gt; and &lt;strong&gt;preventing&lt;/strong&gt; hardcoded secrets like passwords, api keys, and tokens in git repos. Gitleaks is an &lt;strong&gt;easy-to-use, all-in-one solution&lt;/strong&gt; for detecting secrets, past or present, in your code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/455683&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/455683.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Gitleaks can be installed using Homebrew, Docker, or Go. Gitleaks is also available in binary form for many popular platforms and OS types on the &lt;a href=&#34;https://github.com/zricethezav/gitleaks/releases&#34;&gt;releases page&lt;/a&gt;. In addition, Gitleaks can be implemented as a pre-commit hook directly in your repo.&lt;/p&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install gitleaks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;h4&gt;DockerHub&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull zricethezav/gitleaks:latest&#xA;docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] --source=&#34;/path&#34; [OPTIONS]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ghcr.io&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull ghcr.io/zricethezav/gitleaks:latest&#xA;docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] --source=&#34;/path&#34; [OPTIONS]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From Source&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and install Go from &lt;a href=&#34;https://golang.org/dl/&#34;&gt;https://golang.org/dl/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/zricethezav/gitleaks.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Build the binary&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd gitleaks&#xA;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pre-Commit&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install pre-commit from &lt;a href=&#34;https://pre-commit.com/#install&#34;&gt;https://pre-commit.com/#install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; file at the root of your repository with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;repos:&#xA;  - repo: https://github.com/zricethezav/gitleaks&#xA;    rev: v8.2.0&#xA;    hooks:&#xA;      - id: gitleaks&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;for a &lt;a href=&#34;https://github.com/zricethezav/gitleaks/releases&#34;&gt;native execution of GitLeaks&lt;/a&gt; or use the &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/master/.pre-commit-hooks.yaml&#34;&gt;&lt;code&gt;gitleaks-docker&lt;/code&gt; pre-commit ID&lt;/a&gt; for executing GitLeaks using the &lt;a href=&#34;https://raw.githubusercontent.com/zricethezav/gitleaks/master/#docker&#34;&gt;official Docker images&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install with &lt;code&gt;pre-commit install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now you&#39;re all set!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;➜ git commit -m &#34;this commit contains a secret&#34;&#xA;Detect hardcoded secrets.................................................Failed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: to disable the gitleaks pre-commit hook you can prepend &lt;code&gt;SKIP=gitleaks&lt;/code&gt; to the commit command and it will skip running gitleaks&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;➜ SKIP=gitleaks git commit -m &#34;skip gitleaks check&#34;&#xA;Detect hardcoded secrets................................................Skipped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  gitleaks [command]&#xA;&#xA;Available Commands:&#xA;  completion  generate the autocompletion script for the specified shell&#xA;  detect      Detect secrets in code&#xA;  help        Help about any command&#xA;  protect     Protect secrets in code&#xA;  version     Display gitleaks version&#xA;&#xA;Flags:&#xA;  -c, --config string          config file path&#xA;                               order of precedence:&#xA;                               1. --config/-c&#xA;                               2. env var GITLEAKS_CONFIG&#xA;                               3. (--source/-s)/.gitleaks.toml&#xA;                               If none of the three options are used, then gitleaks will use the default config&#xA;      --exit-code string       exit code when leaks have been encountered (default: 1)&#xA;  -h, --help                   help for gitleaks&#xA;  -l, --log-level string       log level (debug, info, warn, error, fatal) (default &#34;info&#34;)&#xA;      --redact                 redact secrets from logs and stdout&#xA;  -f, --report-format string   output format (json, csv, sarif)&#xA;  -r, --report-path string     report file&#xA;  -s, --source string          path to source (git repo, directory, file)&#xA;  -v, --verbose                show verbose output from scan&#xA;&#xA;Use &#34;gitleaks [command] --help&#34; for more information about a command.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;There are two commands you will use to detect secrets; &lt;code&gt;detect&lt;/code&gt; and &lt;code&gt;protect&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Detect&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;detect&lt;/code&gt; command is used to scan repos, directories, and files. This command can be used on developer machines and in CI environments.&lt;/p&gt; &#xA;&lt;p&gt;When running &lt;code&gt;detect&lt;/code&gt; on a git repository, gitleaks will parse the output of a &lt;code&gt;git log -p&lt;/code&gt; command (you can see how this executed &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/7240e16769b92d2a1b137c17d6bf9d55a8562899/git/git.go#L17-L25&#34;&gt;here&lt;/a&gt;). &lt;a href=&#34;https://git-scm.com/docs/git-log#_generating_patch_text_with_p&#34;&gt;&lt;code&gt;git log -p&lt;/code&gt; generates patches&lt;/a&gt; which gitleaks will use to detect secrets. You can configure what commits &lt;code&gt;git log&lt;/code&gt; will range over by using the &lt;code&gt;--log-opts&lt;/code&gt; flag. &lt;code&gt;--log-opts&lt;/code&gt; accepts any option for &lt;code&gt;git log -p&lt;/code&gt;. For example, if you wanted to run gitleaks on a range of commits you could use the following command: &lt;code&gt;gitleaks detect --source . --log-opts=&#34;--all commitA..commitB&#34;&lt;/code&gt;. See the &lt;code&gt;git log&lt;/code&gt; &lt;a href=&#34;https://git-scm.com/docs/git-log&#34;&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;You can scan files and directories by using the &lt;code&gt;--no-git&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h4&gt;Protect&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;protect&lt;/code&gt; command is used to uncommitted changes in a git repo. This command should be used on developer machines in accordance with &lt;a href=&#34;https://cloud.google.com/architecture/devops/devops-tech-shifting-left-on-security&#34;&gt;shifting left on security&lt;/a&gt;. When running &lt;code&gt;protect&lt;/code&gt; on a git repository, gitleaks will parse the output of a &lt;code&gt;git diff&lt;/code&gt; command (you can see how this executed &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/7240e16769b92d2a1b137c17d6bf9d55a8562899/git/git.go#L48-L49&#34;&gt;here&lt;/a&gt;). You can set the &lt;code&gt;--staged&lt;/code&gt; flag to check for changes in commits that have been &lt;code&gt;git add&lt;/code&gt;ed. The &lt;code&gt;--staged&lt;/code&gt; flag should be used when running Gitleaks as a pre-commit.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: the &lt;code&gt;protect&lt;/code&gt; command can only be used on git repos, running &lt;code&gt;protect&lt;/code&gt; on files or directories will result in an error message.&lt;/p&gt; &#xA;&lt;h3&gt;Verify Findings&lt;/h3&gt; &#xA;&lt;p&gt;You can verify a finding found by gitleaks using a &lt;code&gt;git log&lt;/code&gt; command. Example output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;        &#34;Description&#34;: &#34;AWS&#34;,&#xA;        &#34;StartLine&#34;: 37,&#xA;        &#34;EndLine&#34;: 37,&#xA;        &#34;StartColumn&#34;: 19,&#xA;        &#34;EndColumn&#34;: 38,&#xA;        &#34;Match&#34;: &#34;\t\t\&#34;aws_secret= \\\&#34;AKIAIMNOJVGFDXXXE4OA\\\&#34;\&#34;:          true,&#34;,&#xA;        &#34;Secret&#34;: &#34;AKIAIMNOJVGFDXXXE4OA&#34;,&#xA;        &#34;File&#34;: &#34;checks_test.go&#34;,&#xA;        &#34;Commit&#34;: &#34;ec2fc9d6cb0954fb3b57201cf6133c48d8ca0d29&#34;,&#xA;        &#34;Entropy&#34;: 0,&#xA;        &#34;Author&#34;: &#34;zricethezav&#34;,&#xA;        &#34;Email&#34;: &#34;thisispublicanyways@gmail.com&#34;,&#xA;        &#34;Date&#34;: &#34;2018-01-28 17:39:00 -0500 -0500&#34;,&#xA;        &#34;Message&#34;: &#34;[update] entropy check&#34;,&#xA;        &#34;Tags&#34;: [],&#xA;        &#34;RuleID&#34;: &#34;aws-access-token&#34;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can use the following format to verify the leak:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git log -L {StartLine,EndLine}:{File} {Commit}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So in this example it would look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git log -L 37,37:checks_test.go ec2fc9d6cb0954fb3b57201cf6133c48d8ca0d29&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which gives us:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;commit ec2fc9d6cb0954fb3b57201cf6133c48d8ca0d29&#xA;Author: zricethezav &amp;lt;thisispublicanyways@gmail.com&amp;gt;&#xA;Date:   Sun Jan 28 17:39:00 2018 -0500&#xA;&#xA;    [update] entropy check&#xA;&#xA;diff --git a/checks_test.go b/checks_test.go&#xA;--- a/checks_test.go&#xA;+++ b/checks_test.go&#xA;@@ -28,0 +37,1 @@&#xA;+               &#34;aws_secret= \&#34;AKIAIMNOJVGFDXXXE4OA\&#34;&#34;:          true,&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pre-Commit hook&lt;/h2&gt; &#xA;&lt;p&gt;You can run Gitleaks as a pre-commit hook by copying the example &lt;code&gt;pre-commit.py&lt;/code&gt; script into your &lt;code&gt;.git/hooks/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Gitleaks offers a configuration format you can follow to write your own secret detection rules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;# Title for the gitleaks configuration file.&#xA;title = &#34;Gitleaks title&#34;&#xA;&#xA;# An array of tables that contain information that define instructions&#xA;# on how to detect secrets&#xA;[[rules]]&#xA;&#xA;# Unique identifier for this rule&#xA;id = &#34;awesome-rule-1&#34;&#xA;&#xA;# Short human readable description of the rule.&#xA;description = &#34;awesome rule 1&#34;&#xA;&#xA;# Golang regular expression used to detect secrets. Note Golang&#39;s regex engine&#xA;# does not support lookaheads.&#xA;regex = &#39;&#39;&#39;one-go-style-regex-for-this-rule&#39;&#39;&#39;&#xA;&#xA;# Golang regular expression used to match paths. This can be used as a standalone rule or it can be used&#xA;# in conjunction with a valid `regex` entry.&#xA;path = &#39;&#39;&#39;a-file-path-regex&#39;&#39;&#39;&#xA;&#xA;# Array of strings used for metadata and reporting purposes.&#xA;tags = [&#34;tag&#34;,&#34;another tag&#34;]&#xA;&#xA;# Int used to extract secret from regex match and used as the group that will have&#xA;# its entropy checked if `entropy` is set.&#xA;secretGroup = 3&#xA;&#xA;# Float representing the minimum shannon entropy a regex group must have to be considered a secret.&#xA;entropy = 3.5&#xA;&#xA;# Keywords are used for pre-regex check filtering. Rules that contain&#xA;# keywords will perform a quick string compare check to make sure the&#xA;# keyword(s) are in the content being scanned. Ideally these values should&#xA;# either be part of the idenitifer or unique strings specific to the rule&#39;s regex&#xA;# (introduced in v8.6.0)&#xA;keywords = [&#xA;  &#34;auth&#34;,&#xA;  &#34;password&#34;,&#xA;  &#34;token&#34;,&#xA;]&#xA;&#xA;# You can include an allowlist table for a single rule to reduce false positives or ignore commits&#xA;# with known/rotated secrets&#xA;[rules.allowlist]&#xA;description = &#34;ignore commit A&#34;&#xA;commits = [ &#34;commit-A&#34;, &#34;commit-B&#34;]&#xA;paths = [&#xA;  &#39;&#39;&#39;go\.mod&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;go\.sum&#39;&#39;&#39;&#xA;]&#xA;regexes = [&#xA;  &#39;&#39;&#39;process&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;getenv&#39;&#39;&#39;,&#xA;]&#xA;# note: stopwords targets the extracted secret, not the entire regex match&#xA;# like &#39;regexes&#39; does. (stopwords introduced in 8.8.0)&#xA;stopwords = [&#xA;  &#39;&#39;&#39;client&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;endpoint&#39;&#39;&#39;,&#xA;]&#xA;&#xA;&#xA;# This is a global allowlist which has a higher order of precedence than rule-specific allowlists.&#xA;# If a commit listed in the `commits` field below is encountered then that commit will be skipped and no&#xA;# secrets will be detected for said commit. The same logic applies for regexes and paths.&#xA;[allowlist]&#xA;description = &#34;global allow list&#34;&#xA;commits = [ &#34;commit-A&#34;, &#34;commit-B&#34;, &#34;commit-C&#34;]&#xA;paths = [&#xA;  &#39;&#39;&#39;gitleaks\.toml&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;(.*?)(jpg|gif|doc)&#39;&#39;&#39;&#xA;]&#xA;regexes = [&#xA;  &#39;&#39;&#39;219-09-9999&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;078-05-1120&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;(9[0-9]{2}|666)-\d{2}-\d{4}&#39;&#39;&#39;,&#xA;]&#xA;# note: stopwords targets the extracted secret, not the entire regex match&#xA;# like &#39;regexes&#39; does. (stopwords introduced in 8.8.0)&#xA;stopwords = [&#xA;  &#39;&#39;&#39;client&#39;&#39;&#39;,&#xA;  &#39;&#39;&#39;endpoint&#39;&#39;&#39;,&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the default &lt;a href=&#34;https://github.com/zricethezav/gitleaks/raw/master/config/gitleaks.toml&#34;&gt;gitleaks config&lt;/a&gt; for examples and advice on writing regular expressions for secret detection.&lt;/p&gt; &#xA;&lt;h2&gt;Secured by Jit&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://www.jit.io/jit-open-source-gitleaks?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=GitleaksReadme&amp;amp;utm_id=oss&amp;amp;items=item-secret-detection&#34;&gt;Jit&lt;/a&gt; to secure our codebase, to achieve fully automated, full-stack continuous security using the world&#39;s best OSS security tools.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsorships&lt;/h2&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://www.tines.com/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks&#34;&gt; &lt;img alt=&#34;Tines Sponsorship&#34; src=&#34;https://user-images.githubusercontent.com/15034943/146411864-4878f936-b4f7-49a0-b625-f9f40c704bfa.png&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Exit Codes&lt;/h2&gt; &#xA;&lt;p&gt;You can always set the exit code when leaks are encountered with the --exit-code flag. Default exit codes below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0 - no leaks present&#xA;1 - leaks or error encountered&#xA;126 - unknown flag&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>kubevela/kubevela</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/kubevela/kubevela</id>
    <link href="https://github.com/kubevela/kubevela" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Modern Application Platform.&lt;/p&gt;&lt;hr&gt;&lt;div style=&#34;text-align: center&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kubevela/kubevela.io/main/docs/resources/KubeVela-03.png&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;i&gt;Make shipping applications more enjoyable.&lt;/i&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kubevela/kubevela/workflows/E2E/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/kubevela/kubevela&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/kubevela/kubevela&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/oamdev/vela-core&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/kubevela/kubevela&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/kubevela/kubevela/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kubevela/kubevela/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/kubevela/kubevela.svg?style=flat-square&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kubevela/kubevela/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/kubevela/kubevela/all.svg?style=flat-square&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.tickgit.com/browse?repo=github.com/kubevela/kubevela&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://api.tickgit.com/badge?repo=github.com/kubevela/kubevela&#34; alt=&#34;TODOs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/oam_dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Foam_dev&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/search?repo=kubevela&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/kubevela&#34; alt=&#34;Artifact HUB&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/4602&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/4602/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;KubeVela is a modern application delivery platform that makes deploying and operating applications across today&#39;s hybrid, multi-cloud environments easier, faster and more reliable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubevela/kubevela/master/docs/resources/what-is-kubevela.png&#34; alt=&#34;kubevela&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;p&gt;KubeVela practices the &#34;render, orchestrate, deploy&#34; workflow with below highlighted values added to existing ecosystem:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deployment as Code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Declare your deployment plan as workflow, run it automatically with any CI/CD or GitOps system, extend or re-program the workflow steps with CUE. No add-hoc scripts, no dirty glue code, just deploy. The deployment workflow in KubeVela is powered by &lt;a href=&#34;https://oam.dev/&#34;&gt;Open Application Model&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built-in security and compliance building blocks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Choose from the wide range of LDAP integrations we provided out-of-box, enjoy multi-cluster authorization that is fully automated, pick and apply fine-grained RBAC modules and customize them per your own supply chain requirements.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-cloud/hybrid-environments app delivery as first-class citizen&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Progressive rollout across test/staging/production environments, automatic canary, blue-green and continuous verification, rich placement strategy across clusters and clouds, fully managed cloud environments provision.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubevela.io/docs&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubevela.io/docs/install&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubevela.io/docs/quick-start&#34;&gt;Deploy Your Application&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Full documentation is available on the &lt;a href=&#34;https://kubevela.io/&#34;&gt;KubeVela website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Blog&lt;/h2&gt; &#xA;&lt;p&gt;Official blog is available on &lt;a href=&#34;https://kubevela.io/blog&#34;&gt;KubeVela blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We want your contributions and suggestions! One of the easiest ways to contribute is to participate in discussions on the Github Issues/Discussion, chat on IM or the bi-weekly community calls. For more information on the community engagement, developer and contributing guidelines and more, head over to the &lt;a href=&#34;https://github.com/kubevela/community&#34;&gt;KubeVela community repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contact Us&lt;/h3&gt; &#xA;&lt;p&gt;Reach out with any questions you may have and we&#39;ll make sure to answer them as soon as possible!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Slack: &lt;a href=&#34;https://cloud-native.slack.com/archives/C01BLQ3HTJA&#34;&gt;CNCF Slack kubevela channel&lt;/a&gt; (&lt;em&gt;English&lt;/em&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://page.dingtalk.com/wow/dingtalk/act/en-home&#34;&gt;DingTalk Group&lt;/a&gt;: &lt;code&gt;23310022&lt;/code&gt; (&lt;em&gt;Chinese&lt;/em&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wechat Group (&lt;em&gt;Chinese&lt;/em&gt;): Broker wechat to add you into the user group.&lt;/p&gt; &lt;img src=&#34;https://static.kubevela.net/images/barnett-wechat.jpg&#34; width=&#34;200&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community Call&lt;/h3&gt; &#xA;&lt;p&gt;Every two weeks we host a community call to showcase new features, review upcoming milestones, and engage in a Q&amp;amp;A. All are welcome!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bi-weekly Community Call: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1nqdFEyULekyksFHtFvgvFAYE-0AMHKoS3RMnaKsarjs&#34;&gt;Meeting Notes&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubevela.io/videos/meetings/en/meetings&#34;&gt;Video Records&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bi-weekly Chinese Community Call: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubevela.io/videos/meetings/cn/v1.3&#34;&gt;Video Records&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Talks and Conferences&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Engagement&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🎤 Talks&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;- &lt;a href=&#34;https://docs.google.com/presentation/d/1CWCLcsKpDQB3bBDTfdv2BZ8ilGGJv2E8L-iOA5HMrV0/edit?usp=sharing&#34;&gt;KubeVela - The Modern App Delivery System in Alibaba&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🌎 KubeCon&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;- &lt;a href=&#34;https://www.youtube.com/watch?v=0yhVuBIbHcI&#34;&gt; [NA 2020] Standardizing Cloud Native Application Delivery Across Different Clouds&lt;/a&gt; &lt;br&gt; - &lt;a href=&#34;https://sched.co/iE4S&#34;&gt; [EU 2021] Zero Pain Microservice Development and Deployment with Dapr and KubeVela&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;📺 Conferences&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;- &lt;a href=&#34;https://www.youtube.com/watch?v=eJCu6a-x9uo&#34;&gt;Dapr, Rudr, OAM: Mark Russinovich presents next gen app development &amp;amp; deployment&lt;/a&gt; &lt;br&gt; - &lt;a href=&#34;https://myignite.techcommunity.microsoft.com/sessions/82059&#34;&gt;Mark Russinovich presents &#34;The Future of Cloud Native Applications with OAM and Dapr&#34;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For more talks, please checkout &lt;a href=&#34;https://kubevela.io/videos/talks/en/standardizing-app&#34;&gt;KubeVela Talks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/kubevela/kubevela/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; to see how to develop with KubeVela.&lt;/p&gt; &#xA;&lt;h2&gt;Report Vulnerability&lt;/h2&gt; &#xA;&lt;p&gt;Security is a first priority thing for us at KubeVela. If you come across a related issue, please send email to &lt;a href=&#34;mailto:security@mail.kubevela.io&#34;&gt;security@mail.kubevela.io&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;KubeVela adopts &lt;a href=&#34;https://github.com/cncf/foundation/raw/master/code-of-conduct.md&#34;&gt;CNCF Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>karmada-io/karmada</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/karmada-io/karmada</id>
    <link href="https://github.com/karmada-io/karmada" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open, Multi-Cloud, Multi-Cluster Kubernetes Orchestration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Karmada&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/Karmada-logo-horizontal-color.png&#34; alt=&#34;Karmada-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/karmada-io/karmada/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/karmada-io/karmada&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/karmada-io/karmada&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/karmada-io/karmada.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/karmada-io/karmada/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/karmada-io/karmada/all.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/karmada-io/shared_invite/zt-omhy1wfa-LmAkCLfpDMnBjVXp3_U~0w&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-brightgreen&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5301&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5301/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Karmada: Open, Multi-Cloud, Multi-Cluster Kubernetes Orchestration&lt;/h2&gt; &#xA;&lt;p&gt;Karmada (Kubernetes Armada) is a Kubernetes management system that enables you to run your cloud-native applications across multiple Kubernetes clusters and clouds, with no changes to your applications. By speaking Kubernetes-native APIs and providing advanced scheduling capabilities, Karmada enables truly open, multi-cloud Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;Karmada aims to provide turnkey automation for multi-cluster application management in multi-cloud and hybrid cloud scenarios, with key features such as centralized multi-cloud management, high availability, failure recovery, and traffic scheduling.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/cncf-logo.png&#34; alt=&#34;cncf_logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Karmada is a sandbox project of the &lt;a href=&#34;https://cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF).&lt;/p&gt; &#xA;&lt;h2&gt;Why Karmada:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;K8s Native API Compatible&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Zero change upgrade, from single-cluster to multi-cluster&lt;/li&gt; &#xA;   &lt;li&gt;Seamless integration of existing K8s tool chain&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Out of the Box&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Built-in policy sets for scenarios, including: Active-active, Remote DR, Geo Redundant, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Cross-cluster applications auto-scaling, failover and load-balancing on multi-cluster.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Avoid Vendor Lock-in&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Integration with mainstream cloud providers&lt;/li&gt; &#xA;   &lt;li&gt;Automatic allocation, migration across clusters&lt;/li&gt; &#xA;   &lt;li&gt;Not tied to proprietary vendor orchestration&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Centralized Management&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Location agnostic cluster management&lt;/li&gt; &#xA;   &lt;li&gt;Support clusters in Public cloud, on-prem or edge&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fruitful Multi-Cluster Scheduling Policies&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cluster Affinity, Multi Cluster Splitting/Rebalancing,&lt;/li&gt; &#xA;   &lt;li&gt;Multi-Dimension HA: Region/AZ/Cluster/Provider&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open and Neutral&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Jointly initiated by Internet, finance, manufacturing, teleco, cloud providers, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Target for open governance with CNCF&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notice: this project is developed in continuation of Kubernetes &lt;a href=&#34;https://github.com/kubernetes-retired/federation&#34;&gt;Federation v1&lt;/a&gt; and &lt;a href=&#34;https://github.com/kubernetes-sigs/kubefed&#34;&gt;v2&lt;/a&gt;. Some basic concepts are inherited from these two versions.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/architecture.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Karmada Control Plane consists of the following components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Karmada API Server&lt;/li&gt; &#xA; &lt;li&gt;Karmada Controller Manager&lt;/li&gt; &#xA; &lt;li&gt;Karmada Scheduler&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ETCD stores the Karmada API objects, the API Server is the REST endpoint all other components talk to, and the Karmada Controller Manager performs operations based on the API objects you create through the API server.&lt;/p&gt; &#xA;&lt;p&gt;The Karmada Controller Manager runs the various controllers, the controllers watch Karmada objects and then talk to the underlying clusters&#39; API servers to create regular Kubernetes resources.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Cluster Controller: attach Kubernetes clusters to Karmada for managing the lifecycle of the clusters by creating cluster objects.&lt;/li&gt; &#xA; &lt;li&gt;Policy Controller: the controller watches PropagationPolicy objects. When the PropagationPolicy object is added, it selects a group of resources matching the resourceSelector and creates ResourceBinding with each single resource object.&lt;/li&gt; &#xA; &lt;li&gt;Binding Controller: the controller watches ResourceBinding object and create Work object corresponding to each cluster with a single resource manifest.&lt;/li&gt; &#xA; &lt;li&gt;Execution Controller: the controller watches Work objects. When Work objects are created, it will distribute the resources to member clusters.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Concepts&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Resource template&lt;/strong&gt;: Karmada uses Kubernetes Native API definition for federated resource template, to make it easy to integrate with existing tools that already adopt on Kubernetes&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Propagation Policy&lt;/strong&gt;: Karmada offers a standalone Propagation(placement) Policy API to define multi-cluster scheduling and spreading requirements.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support 1:n mapping of Policy: workload, users don&#39;t need to indicate scheduling constraints every time creating federated applications.&lt;/li&gt; &#xA; &lt;li&gt;With default policies, users can just interact with K8s API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Override Policy&lt;/strong&gt;: Karmada provides standalone Override Policy API for specializing cluster relevant configuration automation. E.g.:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Override image prefix according to member cluster region&lt;/li&gt; &#xA; &lt;li&gt;Override StorageClass according to cloud provider&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following diagram shows how Karmada resources are involved when propagating resources to member clusters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/karmada-resource-relation.png&#34; alt=&#34;karmada-resource-relation&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;This guide will cover:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;code&gt;karmada&lt;/code&gt; control plane components in a Kubernetes cluster which is known as &lt;code&gt;host cluster&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join a member cluster to &lt;code&gt;karmada&lt;/code&gt; control plane.&lt;/li&gt; &#xA; &lt;li&gt;Propagate an application by using &lt;code&gt;karmada&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; version v1.17+&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34;&gt;kubectl&lt;/a&gt; version v1.19+&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;kind&lt;/a&gt; version v0.9.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install the Karmada control plane&lt;/h3&gt; &#xA;&lt;h4&gt;1. Clone this repo to your machine:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/karmada-io/karmada&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Change to the karmada directory:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd karmada&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Deploy and run Karmada control plane:&lt;/h4&gt; &#xA;&lt;p&gt;run the following script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# hack/local-up-karmada.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will do following tasks for you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start a Kubernetes cluster to run the Karmada control plane, aka. the &lt;code&gt;host cluster&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Build Karmada control plane components based on a current codebase.&lt;/li&gt; &#xA; &lt;li&gt;Deploy Karmada control plane components on the &lt;code&gt;host cluster&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create member clusters and join Karmada.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If everything goes well, at the end of the script output, you will see similar messages as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Local Karmada is running.&#xA;&#xA;To start using your Karmada environment, run:&#xA;  export KUBECONFIG=&#34;$HOME/.kube/karmada.config&#34;&#xA;Please use &#39;kubectl config use-context karmada-host/karmada-apiserver&#39; to switch the host and control plane cluster.&#xA;&#xA;To manage your member clusters, run:&#xA;  export KUBECONFIG=&#34;$HOME/.kube/members.config&#34;&#xA;Please use &#39;kubectl config use-context member1/member2/member3&#39; to switch to the different member cluster.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are two contexts in Karmada:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;karmada-apiserver &lt;code&gt;kubectl config use-context karmada-apiserver&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;karmada-host &lt;code&gt;kubectl config use-context karmada-host&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;karmada-apiserver&lt;/code&gt; is the &lt;strong&gt;main kubeconfig&lt;/strong&gt; to be used when interacting with the Karmada control plane, while &lt;code&gt;karmada-host&lt;/code&gt; is only used for debugging Karmada installation with the host cluster. You can check all clusters at any time by running: &lt;code&gt;kubectl config view&lt;/code&gt;. To switch cluster contexts, run &lt;code&gt;kubectl config use-context [CONTEXT_NAME]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/sample-nginx.svg?sanitize=true&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Propagate application&lt;/h3&gt; &#xA;&lt;p&gt;In the following steps, we are going to propagate a deployment by Karmada.&lt;/p&gt; &#xA;&lt;h4&gt;1. Create nginx deployment in Karmada.&lt;/h4&gt; &#xA;&lt;p&gt;First, create a &lt;a href=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/samples/nginx/deployment.yaml&#34;&gt;deployment&lt;/a&gt; named &lt;code&gt;nginx&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl create -f samples/nginx/deployment.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Create PropagationPolicy that will propagate nginx to member cluster&lt;/h4&gt; &#xA;&lt;p&gt;Then, we need to create a policy to propagate the deployment to our member cluster.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl create -f samples/nginx/propagationpolicy.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Check the deployment status from Karmada&lt;/h4&gt; &#xA;&lt;p&gt;You can check deployment status from Karmada, don&#39;t need to access member cluster:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get deployment&#xA;NAME    READY   UP-TO-DATE   AVAILABLE   AGE&#xA;nginx   2/2     2            2           20s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Kubernetes compatibility&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.15&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.16&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.17&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.18&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.19&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.20&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.21&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.22&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.23&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v0.9&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v0.10&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v1.0&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada HEAD (master)&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Key:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;✓&lt;/code&gt; Karmada and the Kubernetes version are exactly compatible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;+&lt;/code&gt; Karmada has features or API objects that may not be present in the Kubernetes version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-&lt;/code&gt; The Kubernetes version has features or API objects that Karmada can&#39;t use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Meeting&lt;/h2&gt; &#xA;&lt;p&gt;Regular Community Meeting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tuesday at 14:30 UTC+8 (Chinese)(biweekly). &lt;a href=&#34;https://www.thetimezoneconverter.com/?t=14%3A30&amp;amp;tz=GMT%2B8&amp;amp;&#34;&gt;Convert to your timezone.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TBD (English)(biweekly). &lt;a href=&#34;https://github.com/karmada-io/karmada/issues/1560&#34;&gt;Please propose the time&lt;/a&gt; if you are interested to attend.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1y6YLVC-v7cmVAdbjedoyR5WL0-q45DBRXTvz5_I7bkA/edit&#34;&gt;Meeting Notes and Agenda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendar.google.com/calendar/embed?src=karmadaoss%40gmail.com&amp;amp;ctz=Asia%2FShanghai&#34;&gt;Meeting Calendar&lt;/a&gt; | &lt;a href=&#34;https://calendar.google.com/calendar/u/1?cid=a2FybWFkYW9zc0BnbWFpbC5jb20&#34;&gt;Subscribe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zoom.com/my/karmada&#34;&gt;Meeting Link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions, feel free to reach out to us in the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/karmada&#34;&gt;mailing list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud-native.slack.com/archives/C02MUF8QXUN&#34;&gt;slack&lt;/a&gt; | &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;Join&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/karmada_io&#34;&gt;twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Talks and References&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeCon(EU 2021)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LJJoaGszBVk&#34;&gt;Beyond federation: automating multi-cloud workloads with K8s native APIs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeCon(EU 2022)&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For blogs please refer to &lt;a href=&#34;https://karmada.io/blog/&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re interested in being a contributor and want to get involved in developing the Karmada code, please see &lt;a href=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Karmada is under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>photoprism/photoprism</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/photoprism/photoprism</id>
    <link href="https://github.com/photoprism/photoprism" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI-Powered Photos App for the Decentralized Web 🌈💎✨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PhotoPrism: Browse Your Life in Pictures&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.photoprism.app/license/agpl/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-AGPL-blue.svg?sanitize=true&#34; alt=&#34;License: AGPL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://photoprism.app/team&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/photoprism/photoprism.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.photoprism.app/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/read-the%20docs-4aa087.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://link.photoprism.app/chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20gitter-4aa087.svg?sanitize=true&#34; alt=&#34;Community Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://link.photoprism.app/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ask-%20on%20github-4d6a91.svg?sanitize=true&#34; alt=&#34;GitHub Discussions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://link.photoprism.app/twitter&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/follow-@photoprism_app-00acee.svg?sanitize=true&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://link.photoprism.app/reddit&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-/r/photoprism-EC5800.svg?sanitize=true&#34; alt=&#34;Reddit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PhotoPrism® is an AI-Powered Photos App for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Decentralized_web&#34;&gt;Decentralized Web&lt;/a&gt;. It makes use of the latest technologies to tag and find pictures automatically without getting in your way. You can run it at home, on a private server, or in the cloud.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dl.photoprism.app/img/ui/desktop-1000px.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To get a first impression, you are welcome to play with our &lt;a href=&#34;https://try.photoprism.app/&#34;&gt;public demo&lt;/a&gt;. Be careful not to upload any private pictures.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Our mission is to provide the most user- and privacy-friendly solution to keep your pictures organized and accessible.&lt;/strong&gt; PhotoPrism was designed from the ground up to run wherever you need it, without compromising freedom, privacy, or functionality:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Browse &lt;a href=&#34;https://docs.photoprism.app/user-guide/organize/browse/&#34;&gt;all your photos&lt;/a&gt; and &lt;a href=&#34;https://try.photoprism.app/videos&#34;&gt;videos&lt;/a&gt; without worrying about &lt;a href=&#34;https://docs.photoprism.app/user-guide/settings/library/&#34;&gt;RAW conversion, duplicates or video formats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Easily find specific pictures using &lt;a href=&#34;https://try.photoprism.app/browse?view=cards&amp;amp;q=flower%20color%3Ared&#34;&gt;powerful search filters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recognizes &lt;a href=&#34;https://try.photoprism.app/people&#34;&gt;the faces of your family and friends&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://try.photoprism.app/labels&#34;&gt;Automatic classification&lt;/a&gt; of pictures based on their content and location&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://try.photoprism.app/live&#34;&gt;Play Live Photos&lt;/a&gt; by hovering over them in &lt;a href=&#34;https://try.photoprism.app/albums&#34;&gt;albums&lt;/a&gt; and &lt;a href=&#34;https://try.photoprism.app/browse?view=cards&amp;amp;q=type%3Alive&#34;&gt;search results&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Since the &lt;a href=&#34;https://try.photoprism.app/&#34;&gt;User Interface&lt;/a&gt; is a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps&#34;&gt;Progressive Web App&lt;/a&gt;, it provides a native app-like experience, and you can conveniently install it on the home screen of all major operating systems and mobile devices&lt;/li&gt; &#xA; &lt;li&gt;Includes four high-resolution &lt;a href=&#34;https://try.photoprism.app/places&#34;&gt;World Maps&lt;/a&gt; to bring back the memories of your favorite trips&lt;/li&gt; &#xA; &lt;li&gt;Metadata is extracted and merged from Exif, XMP, and other sources such as Google Photos&lt;/li&gt; &#xA; &lt;li&gt;Many more image properties like &lt;a href=&#34;https://try.photoprism.app/browse?view=cards&amp;amp;q=color:red&#34;&gt;Colors&lt;/a&gt;, &lt;a href=&#34;https://try.photoprism.app/browse?view=cards&amp;amp;q=mono%3Atrue&#34;&gt;Chroma&lt;/a&gt;, and &lt;a href=&#34;https://try.photoprism.app/review&#34;&gt;Quality&lt;/a&gt; can be searched as well&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://link.photoprism.app/photosync&#34;&gt;PhotoSync&lt;/a&gt; to securely backup iOS and Android phones in the background&lt;/li&gt; &#xA; &lt;li&gt;WebDAV clients such as Microsoft&#39;s Windows Explorer and Apple&#39;s Finder &lt;a href=&#34;https://docs.photoprism.app/user-guide/sync/webdav/&#34;&gt;can connect directly&lt;/a&gt; to PhotoPrism, allowing you to open, edit, and delete files from your computer as if they were local&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Because we are &lt;a href=&#34;https://photoprism.app/membership&#34;&gt;&lt;strong&gt;100% self-funded and independent&lt;/strong&gt;&lt;/a&gt;, we can promise you that we will &lt;a href=&#34;https://photoprism.app/privacy&#34;&gt;never sell your data&lt;/a&gt; and that we will &lt;a href=&#34;https://photoprism.app/terms&#34;&gt;always be transparent&lt;/a&gt; about our software and services. Your data will also never be shared with Google, Amazon, Facebook, or Apple unless you intentionally upload files to one of their services. 🔒&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;25%&#34; src=&#34;https://photoprism.app/user/pages/01.home/03._screenshots/iphone-maps-hybrid-540px.png&#34;&gt; &#xA;&lt;p&gt;Step-by-step installation instructions for our self-hosted &lt;a href=&#34;https://photoprism.app/get&#34;&gt;community edition&lt;/a&gt; can be found on &lt;a href=&#34;https://docs.photoprism.app/getting-started/&#34;&gt;docs.photoprism.app&lt;/a&gt; - all you need is a Web browser and &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; to run the server. It is available for Mac, Linux, and Windows.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.photoprism.app/release-notes/&#34;&gt;stable version&lt;/a&gt; and development preview have been built into a single &lt;a href=&#34;https://link.photoprism.app/docker-hub&#34;&gt;multi-arch image&lt;/a&gt; for 64-bit AMD, Intel, and ARM processors. That means, &lt;a href=&#34;https://docs.photoprism.app/getting-started/raspberry-pi/&#34;&gt;Raspberry Pi&lt;/a&gt; 3 / 4 owners can pull from the same repository, enjoy the exact same functionality, and can follow the regular &lt;a href=&#34;https://docs.photoprism.app/getting-started/docker-compose/&#34;&gt;installation instructions&lt;/a&gt; after going through a short list of &lt;a href=&#34;https://docs.photoprism.app/getting-started/raspberry-pi/&#34;&gt;requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Existing users are advised to update their &lt;code&gt;docker-compose.yml&lt;/code&gt; config based on our examples available at &lt;a href=&#34;https://dl.photoprism.app/docker/&#34;&gt;dl.photoprism.app/docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support Our Mission 💎&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;We encourage all of our users to &lt;a href=&#34;https://photoprism.app/membership&#34;&gt;become a sponsor&lt;/a&gt;, as this allows us to make more features available to the public and remain independent.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sponsors enjoy additional features, including access to &lt;a href=&#34;https://demo.photoprism.app/places&#34;&gt;interactive world maps&lt;/a&gt;, and can join our private chat room to connect with &lt;a href=&#34;https://photoprism.app/team&#34;&gt;our team&lt;/a&gt; and other sponsors. We currently have the following sponsorship options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://link.photoprism.app/sponsor&#34;&gt;GitHub Sponsors&lt;/a&gt; is priced in USD and also offers &lt;a href=&#34;https://link.photoprism.app/donate&#34;&gt;one-time donations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://link.photoprism.app/patreon&#34;&gt;Patreon&lt;/a&gt; is priced in Euro and also offers yearly payments&lt;/li&gt; &#xA; &lt;li&gt;Stripe will be available in 2022, so you can sign up directly in the app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You are welcome to &lt;a href=&#34;https://photoprism.app/contact&#34;&gt;contact us&lt;/a&gt; for &lt;a href=&#34;https://photoprism.app/crypto-donations&#34;&gt;crypto donations&lt;/a&gt;, bank account details, and business partnerships. Why your support matters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your continued support helps us provide regular updates and remain independent, so we can fulfill our mission and protect your privacy&lt;/li&gt; &#xA; &lt;li&gt;Sustained funding is key to quickly releasing new features requested by you and other community members&lt;/li&gt; &#xA; &lt;li&gt;Being &lt;strong&gt;100% self-funded and independent&lt;/strong&gt;, we can personally promise you that we will never sell your data and that we will always be transparent about our software and services&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://photoprism.app/membership&#34;&gt;photoprism.app/membership&lt;/a&gt; to learn more. Also, please &lt;a href=&#34;https://github.com/photoprism/photoprism/stargazers&#34;&gt;leave a star&lt;/a&gt; on GitHub if you like this project. It provides additional motivation to keep going.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Support&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://docs.photoprism.app/user-guide/&#34;&gt;docs.photoprism.app/user-guide&lt;/a&gt; to learn how to &lt;a href=&#34;https://docs.photoprism.app/user-guide/sync/webdav/&#34;&gt;sync&lt;/a&gt;, &lt;a href=&#34;https://docs.photoprism.app/user-guide/library/&#34;&gt;organize&lt;/a&gt;, and &lt;a href=&#34;https://docs.photoprism.app/user-guide/share/share/&#34;&gt;share&lt;/a&gt; your pictures. If you need help installing our software at home, you can &lt;a href=&#34;https://link.photoprism.app/reddit&#34;&gt;join us on Reddit&lt;/a&gt;, ask in our &lt;a href=&#34;https://link.photoprism.app/chat&#34;&gt;Community Chat&lt;/a&gt;, or post your question in &lt;a href=&#34;https://link.photoprism.app/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Common problems can be quickly diagnosed and solved using the &lt;a href=&#34;https://docs.photoprism.app/getting-started/troubleshooting/&#34;&gt;Troubleshooting Checklists&lt;/a&gt; in &lt;a href=&#34;https://docs.photoprism.app/getting-started/&#34;&gt;Getting Started&lt;/a&gt;. Eligible &lt;a href=&#34;https://photoprism.app/membership&#34;&gt;sponsors&lt;/a&gt; are also welcome to &lt;a href=&#34;https://photoprism.app/contact&#34;&gt;email us for technical support&lt;/a&gt; and personalized advice.&lt;/p&gt; &#xA;&lt;h2&gt;Upcoming Features and Improvements&lt;/h2&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://link.photoprism.app/roadmap&#34;&gt;Project Roadmap&lt;/a&gt; shows what tasks are in progress and what features will be implemented next. You are invited to give ideas you like a thumbs-up, so we know what&#39;s most popular.&lt;/p&gt; &#xA;&lt;p&gt;Be aware that we have a zero-bug policy and do our best to help users when they need support or have other questions. This comes at a price though, as we can&#39;t give exact release dates for new features. Our team receives many more requests than can be implemented, so we want to emphasize that we are in no way obligated to implement the features, improvements, or other changes you request. We do, however, appreciate your feedback and carefully consider all requests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Because sustained funding is key to releasing new features in a timely manner, we encourage you to support our mission by &lt;a href=&#34;https://link.photoprism.app/sponsor&#34;&gt;signing up as a sponsor&lt;/a&gt; or purchasing a commercial license. Ultimately, that&#39;s what&#39;s best for the product and the community.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GitHub Issues ⚠️&lt;/h2&gt; &#xA;&lt;p&gt;We kindly ask you not to report bugs via GitHub Issues &lt;strong&gt;unless you are certain to have found a fully reproducible and previously unreported issue&lt;/strong&gt; that must be fixed directly in the app. Thank you for your careful consideration!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When reporting a problem, always include the software versions you are using and other information about your environment such as &lt;a href=&#34;https://docs.photoprism.app/getting-started/troubleshooting/browsers/&#34;&gt;browser, browser plugins&lt;/a&gt;, operating system, &lt;a href=&#34;https://docs.photoprism.app/getting-started/troubleshooting/performance/#storage&#34;&gt;storage type&lt;/a&gt;, &lt;a href=&#34;https://docs.photoprism.app/getting-started/troubleshooting/performance/#memory&#34;&gt;memory size&lt;/a&gt;, and &lt;a href=&#34;https://docs.photoprism.app/getting-started/troubleshooting/performance/#server-cpu&#34;&gt;processor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Note that all issue &lt;strong&gt;subscribers receive an email notification&lt;/strong&gt; from GitHub for each new comment, so these should only be used for sharing important information and not for personal discussions/questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://photoprism.app/contact&#34;&gt;Contact us&lt;/a&gt; or &lt;a href=&#34;https://link.photoprism.app/discussions&#34;&gt;a community member&lt;/a&gt; if you need help, it could be a local configuration problem, or a misunderstanding in how the software works&lt;/li&gt; &#xA; &lt;li&gt;This gives our team the opportunity to &lt;a href=&#34;https://docs.photoprism.app/getting-started/troubleshooting/&#34;&gt;improve the docs&lt;/a&gt; and provide best-in-class support to you, instead of handling unclear/duplicate bug reports or triggering a flood of notifications by responding to comments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Connect with the Community&lt;/h2&gt; &#xA;&lt;p&gt;Follow us on &lt;a href=&#34;https://link.photoprism.app/twitter&#34;&gt;Twitter&lt;/a&gt; and join the &lt;a href=&#34;https://link.photoprism.app/chat&#34;&gt;Community Chat&lt;/a&gt; to get regular updates, connect with other users, and discuss your ideas. Our &lt;a href=&#34;https://photoprism.app/code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt; explains the &#34;dos and don’ts&#34; when interacting with other community members.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to contact us at &lt;a href=&#34;mailto:hello@photoprism.app&#34;&gt;hello@photoprism.app&lt;/a&gt; with anything that is on your mind. We appreciate your feedback! Due to the high volume of emails we receive, our team may be unable to get back to you immediately. We do our best to respond within five business days or less.&lt;/p&gt; &#xA;&lt;h2&gt;Every Contribution Makes a Difference&lt;/h2&gt; &#xA;&lt;p&gt;We welcome &lt;a href=&#34;https://raw.githubusercontent.com/photoprism/photoprism/develop/CONTRIBUTING.md&#34;&gt;contributions&lt;/a&gt; of any kind, including blog posts, tutorials, testing, writing documentation, and pull requests. Our &lt;a href=&#34;https://docs.photoprism.app/developer-guide/&#34;&gt;Developer Guide&lt;/a&gt; contains all the information necessary for you to get started.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;PhotoPrism® is a &lt;a href=&#34;https://photoprism.app/trademark&#34;&gt;registered trademark&lt;/a&gt;. By using the software and services we provide, you agree to our &lt;a href=&#34;https://photoprism.app/terms&#34;&gt;Terms of Service&lt;/a&gt;, &lt;a href=&#34;https://photoprism.app/privacy&#34;&gt;Privacy Policy&lt;/a&gt;, and &lt;a href=&#34;https://photoprism.app/code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;. Docs are &lt;a href=&#34;https://link.photoprism.app/github-docs&#34;&gt;available&lt;/a&gt; under the &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;CC BY-NC-SA 4.0 License&lt;/a&gt;; &lt;a href=&#34;https://github.com/photoprism/photoprism/raw/develop/assets/README.md&#34;&gt;additional terms&lt;/a&gt; may apply.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>restic/restic</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/restic/restic</id>
    <link href="https://github.com/restic/restic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, secure, efficient backup program&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/restic/badge/?version=latest&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/restic/restic/actions?query=workflow%3Atest&#34;&gt;&lt;img src=&#34;https://github.com/restic/restic/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/restic/restic&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/restic/restic&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;restic is a backup program that is fast, efficient and secure. It supports the three major operating systems (Linux, macOS, Windows) and a few smaller ones (FreeBSD, OpenBSD).&lt;/p&gt; &#xA;&lt;p&gt;For detailed usage and installation instructions check out the &lt;a href=&#34;https://restic.readthedocs.io/en/latest&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can ask questions in our &lt;a href=&#34;https://forum.restic.net&#34;&gt;Discourse forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve &lt;a href=&#34;https://restic.readthedocs.io/en/latest/020_installation.html&#34;&gt;installed&lt;/a&gt; restic, start off with creating a repository for your backups:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ restic init --repo /tmp/backup&#xA;enter password for new backend:&#xA;enter password again:&#xA;created restic backend 085b3c76b9 at /tmp/backup&#xA;Please note that knowledge of your password is required to access the repository.&#xA;Losing your password means that your data is irrecoverably lost.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and add some data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ restic --repo /tmp/backup backup ~/work&#xA;enter password for repository:&#xA;scan [/home/user/work]&#xA;scanned 764 directories, 1816 files in 0:00&#xA;[0:29] 100.00%  54.732 MiB/s  1.582 GiB / 1.582 GiB  2580 / 2580 items  0 errors  ETA 0:00&#xA;duration: 0:29, 54.47MiB/s&#xA;snapshot 40dc1520 saved&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next you can either use &lt;code&gt;restic restore&lt;/code&gt; to restore files or use &lt;code&gt;restic mount&lt;/code&gt; to mount the repository via fuse and browse the files from previous snapshots.&lt;/p&gt; &#xA;&lt;p&gt;For more options check out the &lt;a href=&#34;https://restic.readthedocs.io/en/latest/&#34;&gt;online documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Backends&lt;/h1&gt; &#xA;&lt;p&gt;Saving a backup on the same machine is nice but not a real backup strategy. Therefore, restic supports the following backends for storing backups natively:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#local&#34;&gt;Local directory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#sftp&#34;&gt;sftp server (via SSH)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#rest-server&#34;&gt;HTTP REST server&lt;/a&gt; (&lt;a href=&#34;https://restic.readthedocs.io/en/latest/100_references.html#rest-backend&#34;&gt;protocol&lt;/a&gt;, &lt;a href=&#34;https://github.com/restic/rest-server&#34;&gt;rest-server&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#amazon-s3&#34;&gt;Amazon S3&lt;/a&gt; (either from Amazon or using the &lt;a href=&#34;https://minio.io&#34;&gt;Minio&lt;/a&gt; server)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#openstack-swift&#34;&gt;OpenStack Swift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#backblaze-b2&#34;&gt;BackBlaze B2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#microsoft-azure-blob-storage&#34;&gt;Microsoft Azure Blob Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#google-cloud-storage&#34;&gt;Google Cloud Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;And many other services via the &lt;a href=&#34;https://rclone.org&#34;&gt;rclone&lt;/a&gt; &lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#other-services-via-rclone&#34;&gt;Backend&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Design Principles&lt;/h1&gt; &#xA;&lt;p&gt;Restic is a program that does backups right and was designed with the following principles in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy:&lt;/strong&gt; Doing backups should be a frictionless process, otherwise you might be tempted to skip it. Restic should be easy to configure and use, so that, in the event of a data loss, you can just restore it. Likewise, restoring data should not be complicated.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Backing up your data with restic should only be limited by your network or hard disk bandwidth so that you can backup your files every day. Nobody does backups if it takes too much time. Restoring backups should only transfer data that is needed for the files that are to be restored, so that this process is also fast.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verifiable&lt;/strong&gt;: Much more important than backup is restore, so restic enables you to easily verify that all data can be restored.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure&lt;/strong&gt;: Restic uses cryptography to guarantee confidentiality and integrity of your data. The location the backup data is stored is assumed not to be a trusted environment (e.g. a shared space where others like system administrators are able to access your backups). Restic is built to secure your data against such attackers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Efficient&lt;/strong&gt;: With the growth of data, additional snapshots should only take the storage of the actual increment. Even more, duplicate data should be de-duplicated before it is actually written to the storage back end to save precious backup space.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Reproducible Builds&lt;/h1&gt; &#xA;&lt;p&gt;The binaries released with each restic version starting at 0.6.1 are &lt;a href=&#34;https://reproducible-builds.org/&#34;&gt;reproducible&lt;/a&gt;, which means that you can reproduce a byte identical version from the source code for that release. Instructions on how to do that are contained in the &lt;a href=&#34;https://github.com/restic/builder&#34;&gt;builder repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;You can follow the restic project on Twitter &lt;a href=&#34;https://twitter.com/resticbackup&#34;&gt;@resticbackup&lt;/a&gt; or by subscribing to the &lt;a href=&#34;https://restic.net/blog/&#34;&gt;project blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Restic is licensed under &lt;a href=&#34;https://opensource.org/licenses/BSD-2-Clause&#34;&gt;BSD 2-Clause License&lt;/a&gt;. You can find the complete text in &lt;a href=&#34;https://raw.githubusercontent.com/restic/restic/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt;Backend integration tests for Google Cloud Storage and Microsoft Azure Blob Storage are sponsored by &lt;a href=&#34;https://appscode.com&#34;&gt;AppsCode&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://appscode.com&#34;&gt;&lt;img src=&#34;https://cdn.appscode.com/images/logo/appscode/ac-logo-color.png&#34; alt=&#34;Sponsored by AppsCode&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>go-gorm/gorm</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/go-gorm/gorm</id>
    <link href="https://github.com/go-gorm/gorm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The fantastic ORM library for Golang, aims to be developer friendly&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GORM&lt;/h1&gt; &#xA;&lt;p&gt;The fantastic ORM library for Golang, aims to be developer friendly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/go-gorm/gorm&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/go-gorm/gorm&#34; alt=&#34;go report card&#34; title=&#34;go report card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/go-gorm/gorm/actions&#34;&gt;&lt;img src=&#34;https://github.com/go-gorm/gorm/workflows/tests/badge.svg?branch=master&#34; alt=&#34;test status&#34; title=&#34;test status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/jinzhu/gorm?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/jinzhu/gorm.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/jinzhu/gorm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/gorm&#34;&gt;&lt;img src=&#34;https://opencollective.com/gorm/tiers/backer/badge.svg?label=backer&amp;amp;color=brightgreen&#34; alt=&#34;Open Collective Backer&#34; title=&#34;Open Collective Backer&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/gorm&#34;&gt;&lt;img src=&#34;https://opencollective.com/gorm/tiers/sponsor/badge.svg?label=sponsor&amp;amp;color=brightgreen&#34; alt=&#34;Open Collective Sponsor&#34; title=&#34;Open Collective Sponsor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-brightgreen.svg?sanitize=true&#34; alt=&#34;MIT license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/gorm.io/gorm?tab=doc&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go.dev-reference-blue?logo=go&amp;amp;logoColor=white&#34; alt=&#34;Go.Dev reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full-Featured ORM&lt;/li&gt; &#xA; &lt;li&gt;Associations (Has One, Has Many, Belongs To, Many To Many, Polymorphism, Single-table inheritance)&lt;/li&gt; &#xA; &lt;li&gt;Hooks (Before/After Create/Save/Update/Delete/Find)&lt;/li&gt; &#xA; &lt;li&gt;Eager loading with &lt;code&gt;Preload&lt;/code&gt;, &lt;code&gt;Joins&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Transactions, Nested Transactions, Save Point, RollbackTo to Saved Point&lt;/li&gt; &#xA; &lt;li&gt;Context, Prepared Statement Mode, DryRun Mode&lt;/li&gt; &#xA; &lt;li&gt;Batch Insert, FindInBatches, Find To Map&lt;/li&gt; &#xA; &lt;li&gt;SQL Builder, Upsert, Locking, Optimizer/Index/Comment Hints, NamedArg, Search/Update/Create with SQL Expr&lt;/li&gt; &#xA; &lt;li&gt;Composite Primary Key&lt;/li&gt; &#xA; &lt;li&gt;Auto Migrations&lt;/li&gt; &#xA; &lt;li&gt;Logger&lt;/li&gt; &#xA; &lt;li&gt;Extendable, flexible plugin API: Database Resolver (Multiple Databases, Read/Write Splitting) / Prometheus…&lt;/li&gt; &#xA; &lt;li&gt;Every feature comes with tests&lt;/li&gt; &#xA; &lt;li&gt;Developer Friendly&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GORM Guides &lt;a href=&#34;https://gorm.io&#34;&gt;https://gorm.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GORM Gen &lt;a href=&#34;https://github.com/go-gorm/gen#gormgen&#34;&gt;gorm/gen&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gorm.io/contribute.html&#34;&gt;You can help to deliver a better GORM, check out things you can do&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;© Jinzhu, 2013~time.Now&lt;/p&gt; &#xA;&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/go-gorm/gorm/raw/master/License&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BishopFox/sliver</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/BishopFox/sliver</id>
    <link href="https://github.com/BishopFox/sliver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Adversary Emulation Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sliver&lt;/h1&gt; &#xA;&lt;p&gt;Sliver is an open source cross-platform adversary emulation/red team framework, it can be used by organizations of all sizes to perform security testing. Sliver&#39;s implants support C2 over Mutual TLS (mTLS), WireGuard, HTTP(S), and DNS and are dynamically compiled with per-binary asymmetric encryption keys.&lt;/p&gt; &#xA;&lt;p&gt;The server and client support MacOS, Windows, and Linux. Implants are supported on MacOS, Windows, and Linux (and possibly every Golang compiler target but we&#39;ve not tested them all).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BishopFox/sliver/workflows/Go/badge.svg?branch=master&#34; alt=&#34;Go&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/BishopFox/sliver&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/BishopFox/sliver&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic code generation&lt;/li&gt; &#xA; &lt;li&gt;Compile-time obfuscation&lt;/li&gt; &#xA; &lt;li&gt;Multiplayer-mode&lt;/li&gt; &#xA; &lt;li&gt;Staged and Stageless payloads&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/HTTP(S)-C2#under-the-hood&#34;&gt;Procedurally generated C2&lt;/a&gt; over HTTP(S)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/DNS-C2#dns-canaries&#34;&gt;DNS canary&lt;/a&gt; blue team detection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/Transport-Encryption&#34;&gt;Secure C2&lt;/a&gt; over mTLS, WireGuard, HTTP(S), and DNS&lt;/li&gt; &#xA; &lt;li&gt;Fully scriptable using &lt;a href=&#34;https://github.com/moloch--/sliver-script&#34;&gt;JavaScript/TypeScript&lt;/a&gt; or &lt;a href=&#34;https://github.com/moloch--/sliver-py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows process migration, process injection, user token manipulation, etc.&lt;/li&gt; &#xA; &lt;li&gt;Let&#39;s Encrypt integration&lt;/li&gt; &#xA; &lt;li&gt;In-memory .NET assembly execution&lt;/li&gt; &#xA; &lt;li&gt;COFF/BOF in-memory loader&lt;/li&gt; &#xA; &lt;li&gt;TCP and named pipe pivots&lt;/li&gt; &#xA; &lt;li&gt;Much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest &lt;a href=&#34;https://github.com/BishopFox/sliver/releases&#34;&gt;release&lt;/a&gt; and see the Sliver &lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/Getting-Started&#34;&gt;wiki&lt;/a&gt; for a quick tutorial on basic setup and usage. To get the very latest and greatest compile from source.&lt;/p&gt; &#xA;&lt;h4&gt;Linux One Liner&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;curl https://sliver.sh/install|sudo bash&lt;/code&gt; and then run &lt;code&gt;sliver&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Help!&lt;/h3&gt; &#xA;&lt;p&gt;Please checkout the &lt;a href=&#34;https://github.com/BishopFox/sliver/wiki&#34;&gt;wiki&lt;/a&gt;, or start a &lt;a href=&#34;https://github.com/BishopFox/sliver/discussions&#34;&gt;GitHub discussion&lt;/a&gt;. We also tend to hang out in the #golang Slack channel on the &lt;a href=&#34;https://bloodhoundgang.herokuapp.com/&#34;&gt;Bloodhound Gang&lt;/a&gt; server.&lt;/p&gt; &#xA;&lt;h3&gt;Compile From Source&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/Compile-From-Source&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Feedback&lt;/h3&gt; &#xA;&lt;p&gt;Please take a moment and fill out &lt;a href=&#34;https://forms.gle/SwVsHFNh24ChG58C6&#34;&gt;our survey&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License - GPLv3&lt;/h3&gt; &#xA;&lt;p&gt;Sliver is licensed under &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;GPLv3&lt;/a&gt;, some sub-components may have separate licenses. See their respective subdirectories in this project for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>twpayne/chezmoi</title>
    <updated>2022-06-01T01:41:55Z</updated>
    <id>tag:github.com,2022-06-01:/twpayne/chezmoi</id>
    <link href="https://github.com/twpayne/chezmoi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Manage your dotfiles across multiple diverse machines, securely.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/twpayne/chezmoi/master/logo.svg?sanitize=true&#34; alt=&#34;chezmoi logo&#34;&gt; chezmoi&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/twpayne/chezmoi/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/twpayne/chezmoi.svg?sanitize=true&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Manage your dotfiles across multiple diverse machines, securely.&lt;/p&gt; &#xA;&lt;p&gt;chezmoi&#39;s documentation is at &lt;a href=&#34;https://chezmoi.io/&#34;&gt;chezmoi.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/twpayne/chezmoi/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=twpayne/chezmoi&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>