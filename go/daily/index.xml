<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-27T01:32:10Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>applejag/kubectl-klock</title>
    <updated>2025-05-27T01:32:10Z</updated>
    <id>tag:github.com,2025-05-27:/applejag/kubectl-klock</id>
    <link href="https://github.com/applejag/kubectl-klock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A kubectl plugin to render watch output in a more readable fashion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kubectl-klock&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/applejag/kubectl-klock/main/docs/demo.gif&#34; alt=&#34;demonstration animation&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/applejag/kubectl-klock/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/applejag/kubectl-klock.svg?sanitize=true&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.reuse.software/info/github.com/applejag/kubectl-klock&#34;&gt;&lt;img src=&#34;https://api.reuse.software/badge/github.com/applejag/kubectl-klock&#34; alt=&#34;REUSE status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;kubectl&lt;/code&gt; plugin to render the &lt;code&gt;kubectl get pods --watch&lt;/code&gt; output in a much more readable fashion.&lt;/p&gt; &#xA;&lt;p&gt;Think of it as running &lt;code&gt;watch kubectl get pods&lt;/code&gt;, but instead of polling, it uses the regular watch feature to stream updates as soon as they occur.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Krew&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://krew.sigs.k8s.io/plugins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?url=https%3A%2F%2Fgithub.com%2Fkubernetes-sigs%2Fkrew-index%2Fraw%2Fmaster%2Fplugins%2Fklock.yaml&amp;amp;query=spec.version&amp;amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAACPVBMVEVHcEwRR3sHR4B6ruEEP3UkW48QRnssZp1Vir4TToQlW5AYV5A1cqoEP3ZXjMD%2F%2F%2F8TToUtZ50HSIEKT4uCncErdbIYaa0hY50tWHwGUY93te0FLk0onfcFL08Rab8SkO8tV3oMl%2F4fnv4hXaIqov8Qa8IjW5wDK0wDL1MPju45qP7%2F9%2F9Pr%2F0SXpwXY6Fck8dTl9Ignv0Qmf8ETosJQnk0fLkkb60RWJIPk%2FYsWX4TQmYRRG1Wo%2BRctv8lVXwHZKkEM1dWh7T4%2F%2F8KVJIxZZgFN2sgaqdYmdIIUY4Pcc4xcqooh9QdYLAFOWwEe9YUlfcqXZErX5IAQXoAK0sASogARoEATo4AKUkARoIAOnEAM2YAUpMAKEcAKEYAJkQAQHkALE0ANGcAU5YAS4gBRoIBTIkAXaYAVJgBPGwAarwAWaABLE4BMVYAUpUAgOABRHkBR4MBK04BSocBOG0BQ30BN2sBSYQANmkAetcAcccAKUgAK00AO3EBNWABiOwAPXQALlUAVpkAWZ0AKEoATZAAJ0UAZbMEkfoAK0wAYqwASYgAKkoARH8EkvoAOnAAPGsBP3cBN2wAMmQAU5gAOmYAM2cAQXsAN2wAN2AAcMMANmoAhegANFsANmAARHcANWkAg%2BQAO3AAMmUAU5oAfdkANmsAabwAOW8BSIQAQnoAZa8AMVcAOWQAgeAAVZUAMFUALU8Ai%2FIATpAAP3cAQXwAft4AcssASIUAg%2BYAb8UANGgCN20AOnMAZLQAd9LE9of%2BAAAAUnRSTlMA6fcJ%2FH7qUxbDe6w8%2BxUCwFH27QhUqYRZ9wn5Xvnt41nlm5Zm8o%2F%2B%2FvQvARTErQwXgc389T2A7NVSwesVEH31%2BxUC7Uz7hg32%2BkxzrPv92GBgoriJcQAAAQFJREFUGNNjYAABPi5GNlYOBhgQERTgjYxk4WRnBvG0tWTEhOKDQICJm4efgUFFsb2uMjc0NCIiIjRFWFyfQb6zsa0iLzM9JCQkOaTHxIVBrrm1tiwrLSksLKxownzXAAY19bi47IzU6OiwkolRUb6BDArSsTGxMTn5BcWTFiUm7vZhkJANB4KqwtKWxVt2Re3xZFDWCAaC7uryrmVbd%2B7d58%2Bg2tCREJwwp79m6tJN23b4eTNoNk2ZMW%2FVkpmTI6cv37zdw4tBqXf2go1r182d1Vc%2FbYWzmzuDjqGRhf2aDesXxodK6pk6gXxja2Np5bB6pbGuqBTcv4521uZmBmAmAERnUiB8Vh3oAAAAAElFTkSuQmCC&amp;amp;label=krew&#34; alt=&#34;krew status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl krew install klock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Snap&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snapcraft.io/klock&#34;&gt;&lt;img src=&#34;https://snapcraft.io/klock/badge.svg?sanitize=true&#34; alt=&#34;klock&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo snap install klock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scoop&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fgithub.com%2Fapplejag%2Fapplejag-bucket%2Fraw%2Fmaster%2Fbucket%2Fkubectl-klock.json&amp;amp;query=%24.version&amp;amp;logo=scoop&amp;amp;label=applejag-bucket%2Fkubectl-klock&#34; alt=&#34;Scoop&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pwsh&#34;&gt;scoop bucket add applejag https://github.com/applejag/applejag-bucket&#xA;scoop install applejag/kubectl-klock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nix&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/kubectl-klock/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/kubectl-klock.svg?header=&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nix-shell -p kubectl-klock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pre-built binaries&lt;/h3&gt; &#xA;&lt;p&gt;You can download pre-built binaries from the latest GitHub release: &lt;a href=&#34;https://github.com/applejag/kubectl-klock/releases/latest&#34;&gt;https://github.com/applejag/kubectl-klock/releases/latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Download the one that fits your OS and architecture, extract the tarball/zip file, and move the &lt;code&gt;kubectl-klock&lt;/code&gt; binary to somewhere in your PATH. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;tar -xzf kubectl-klock_linux_amd64.tar.gz&#xA;sudo mv ./kubectl-klock /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From source&lt;/h3&gt; &#xA;&lt;p&gt;Requires Go 1.21 (or later).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/applejag/kubectl-klock@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Supports a wide range of flags&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl klock &amp;lt;resource&amp;gt; [name(s)] [flags]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Watch all pods&#xA;kubectl klock pods&#xA;&#xA;# Watch all pods with more information (such as node name)&#xA;kubectl klock pods -o wide&#xA;&#xA;# Watch a specific pod&#xA;kubectl klock pods my-pod-7d68885db5-6dfst&#xA;&#xA;# Watch a subset of pods, filtering on labels&#xA;kubectl klock pods --selector app=my-app&#xA;kubectl klock pods -l app=my-app&#xA;&#xA;# Watch all pods in all namespaces&#xA;kubectl klock pods --all-namespaces&#xA;kubectl klock pods -A&#xA;&#xA;# Watch other resource types&#xA;kubectl klock cronjobs&#xA;kubectl klock deployments&#xA;kubectl klock statefulsets&#xA;kubectl klock nodes&#xA;&#xA;# Watch all pods, but restart the watch when your ~/.kube/config file changes,&#xA;# such as when using &#34;kubectl config use-context NAME&#34;&#xA;kubectl klock pods --watch-kubeconfig&#xA;kubectl klock pods -W&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s also some hotkeys available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;  →/l/pgdn next page      /        filter by text                  ctrl+c quit&#xA;  ←/h/pgup prev page      enter    close the filter input field    ?/esc  close help&#xA;  g/home   go to start    esc      clear the applied filter        d      show all deleted&#xA;  G/end    go to end      ↓/ctrl+n show next suggestion            f      toggle fullscreen&#xA;                          ↑/ctrl+p show previous suggestion&#xA;                          tab      accept a suggestion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pagination, for when the terminal window gets too small (height-wise)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Same output format as &lt;code&gt;kubectl get&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Watch arbitrary resources, just like &lt;code&gt;kubectl get &amp;lt;resource&amp;gt; [name]&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Filter results&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Auto updating age column.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Colors on statuses (e.g &lt;code&gt;Running&lt;/code&gt;) and fractions (e.g &lt;code&gt;1/1&lt;/code&gt;) to make them stand out more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Restart watch when kubeconfig file changes (flag: &lt;code&gt;--watch-kubeconfig&lt;/code&gt;, &lt;code&gt;-W&lt;/code&gt;), such as when changed by &lt;a href=&#34;https://github.com/ahmetb/kubectx&#34;&gt;kubectx&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Color themes powered by &lt;a href=&#34;https://kubecolor.github.io/&#34;&gt;kubecolor&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shows deleted table rows for a short duration, controllable via the &lt;code&gt;--hide-deleted=10s&lt;/code&gt; flag and &lt;code&gt;KLOCK_HIDE_DELETED=10s&lt;/code&gt; environment variable. Can be disabled to always show deleted rows by setting &lt;code&gt;--hide-deleted=false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Command-line flags can be controlled via environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export KLOCK_ALL_NAMESPACES=&#34;true&#34;                     # --all-namespaces&#xA;export KLOCK_FIELD_SELECTOR=&#34;status.phase!=Succeeded&#34;  # --field-separator&#xA;export KLOCK_HIDE_DELETED=&#34;false&#34;                      # --hide-deleted&#xA;export KLOCK_LABEL_COLUMNS=&#34;app.kubernetes.io/name&#34;    # --label-columns&#xA;export KLOCK_OUTPUT=&#34;wide&#34;                             # --output&#xA;export KLOCK_SELECTOR=&#34;team!=frontend&#34;                 # --selector&#xA;export KLOCK_WATCH_KUBECONFIG=&#34;true&#34;                   # --watch-kubeconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command-line flags have precedense over the environment variables. So if you set &lt;code&gt;KLOCK_ALL_NAMESPACES=true&lt;/code&gt; then you can revert the value by passing the flag &lt;code&gt;--all-namespaces=false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Color themes&lt;/h3&gt; &#xA;&lt;p&gt;Klock uses kubecolor&#39;s coloring logic and behavior when coloring its output. See: &lt;a href=&#34;https://kubecolor.github.io/customizing/themes/&#34;&gt;https://kubecolor.github.io/customizing/themes/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Color settings that klock uses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_BASE_DANGER&lt;/code&gt; for rows with errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_BASE_MUTED&lt;/code&gt; for &#34;No resources found&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_BASE_MUTED&lt;/code&gt; for deleted rows&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_BASE_MUTED&lt;/code&gt; for status line&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_BASE_SECONDARY&lt;/code&gt; for &#34;FILTER:&#34; prompt&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_BASE_WARNING&lt;/code&gt; for &#34;No resources visible&#34; when filtering&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_DATA_DURATIONFRESH&lt;/code&gt; for &lt;code&gt;AGE: 12h&lt;/code&gt; when below threshold&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_DATA_RATIO_EQUAL&lt;/code&gt; for &lt;code&gt;READY: 1/1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_DATA_RATIO_UNEQUAL&lt;/code&gt; for &lt;code&gt;READY: 0/1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_STATUS_ERROR&lt;/code&gt; for &lt;code&gt;STATUS: CrashLoopBackOff&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_STATUS_SUCCESS&lt;/code&gt; for &lt;code&gt;STATUS: Running&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_STATUS_WARNING&lt;/code&gt; for &lt;code&gt;STATUS: Terminating&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_TABLE_COLUMNS&lt;/code&gt; for table columns&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KUBECOLOR_THEME_TABLE_HEADER&lt;/code&gt; for table header&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can configure these colors either via &lt;a href=&#34;https://kubecolor.github.io/reference/environment-variables/&#34;&gt;environment variables&lt;/a&gt; or via the &lt;a href=&#34;https://kubecolor.github.io/reference/config/&#34;&gt;&lt;code&gt;~/.kube/color.yaml&lt;/code&gt; config file&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Completion&lt;/h3&gt; &#xA;&lt;p&gt;To get completion when writing &lt;code&gt;kubectl klock&lt;/code&gt;, you need to add &lt;a href=&#34;https://raw.githubusercontent.com/applejag/kubectl-klock/main/bin/kubectl_complete-klock&#34;&gt;&lt;code&gt;./bin/kubectl_complete-klock&lt;/code&gt;&lt;/a&gt; to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo curl https://github.com/applejag/kubectl-klock/raw/main/bin/kubectl_complete-klock -o /usr/local/bin/kubectl_complete-klock&#xA;sudo chmod +x /usr/local/bin/kubectl_complete-klock&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>