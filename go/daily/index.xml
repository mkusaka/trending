<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-07T01:29:08Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dustin/go-humanize</title>
    <updated>2023-09-07T01:29:08Z</updated>
    <id>tag:github.com,2023-09-07:/dustin/go-humanize</id>
    <link href="https://github.com/dustin/go-humanize" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go Humans! (formatters for units to human friendly sizes)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Humane Units &lt;a href=&#34;https://travis-ci.org/dustin/go-humanize&#34;&gt;&lt;img src=&#34;https://travis-ci.org/dustin/go-humanize.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/dustin/go-humanize&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/dustin/go-humanize?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Just a few functions for helping humanize times and sizes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;go get&lt;/code&gt; it as &lt;code&gt;github.com/dustin/go-humanize&lt;/code&gt;, import it as &lt;code&gt;&#34;github.com/dustin/go-humanize&#34;&lt;/code&gt;, use it as &lt;code&gt;humanize&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://pkg.go.dev/github.com/dustin/go-humanize&#34;&gt;godoc&lt;/a&gt; for complete documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Sizes&lt;/h2&gt; &#xA;&lt;p&gt;This lets you take numbers like &lt;code&gt;82854982&lt;/code&gt; and convert them to useful strings like, &lt;code&gt;83 MB&lt;/code&gt; or &lt;code&gt;79 MiB&lt;/code&gt; (whichever you prefer).&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;fmt.Printf(&#34;That file is %s.&#34;, humanize.Bytes(82854982)) // That file is 83 MB.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Times&lt;/h2&gt; &#xA;&lt;p&gt;This lets you take a &lt;code&gt;time.Time&lt;/code&gt; and spit it out in relative terms. For example, &lt;code&gt;12 seconds ago&lt;/code&gt; or &lt;code&gt;3 days from now&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;fmt.Printf(&#34;This was touched %s.&#34;, humanize.Time(someTimeInstance)) // This was touched 7 hours ago.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Thanks to Kyle Lemons for the time implementation from an IRC conversation one day. It&#39;s pretty neat.&lt;/p&gt; &#xA;&lt;h2&gt;Ordinals&lt;/h2&gt; &#xA;&lt;p&gt;From a &lt;a href=&#34;https://groups.google.com/d/topic/golang-nuts/l8NhI74jl-4/discussion&#34;&gt;mailing list discussion&lt;/a&gt; where a user wanted to be able to label ordinals.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0 -&amp;gt; 0th&#xA;1 -&amp;gt; 1st&#xA;2 -&amp;gt; 2nd&#xA;3 -&amp;gt; 3rd&#xA;4 -&amp;gt; 4th&#xA;[...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;fmt.Printf(&#34;You&#39;re my %s best friend.&#34;, humanize.Ordinal(193)) // You are my 193rd best friend.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commas&lt;/h2&gt; &#xA;&lt;p&gt;Want to shove commas into numbers? Be my guest.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0 -&amp;gt; 0&#xA;100 -&amp;gt; 100&#xA;1000 -&amp;gt; 1,000&#xA;1000000000 -&amp;gt; 1,000,000,000&#xA;-100000 -&amp;gt; -100,000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;fmt.Printf(&#34;You owe $%s.\n&#34;, humanize.Comma(6582491)) // You owe $6,582,491.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ftoa&lt;/h2&gt; &#xA;&lt;p&gt;Nicer float64 formatter that removes trailing zeros.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;fmt.Printf(&#34;%f&#34;, 2.24)                // 2.240000&#xA;fmt.Printf(&#34;%s&#34;, humanize.Ftoa(2.24)) // 2.24&#xA;fmt.Printf(&#34;%f&#34;, 2.0)                 // 2.000000&#xA;fmt.Printf(&#34;%s&#34;, humanize.Ftoa(2.0))  // 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SI notation&lt;/h2&gt; &#xA;&lt;p&gt;Format numbers with &lt;a href=&#34;http://en.wikipedia.org/wiki/Metric_prefix&#34;&gt;SI notation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;humanize.SI(0.00000000223, &#34;M&#34;) // 2.23 nM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;English-specific functions&lt;/h2&gt; &#xA;&lt;p&gt;The following functions are in the &lt;code&gt;humanize/english&lt;/code&gt; subpackage.&lt;/p&gt; &#xA;&lt;h3&gt;Plurals&lt;/h3&gt; &#xA;&lt;p&gt;Simple English pluralization&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;english.PluralWord(1, &#34;object&#34;, &#34;&#34;) // object&#xA;english.PluralWord(42, &#34;object&#34;, &#34;&#34;) // objects&#xA;english.PluralWord(2, &#34;bus&#34;, &#34;&#34;) // buses&#xA;english.PluralWord(99, &#34;locus&#34;, &#34;loci&#34;) // loci&#xA;&#xA;english.Plural(1, &#34;object&#34;, &#34;&#34;) // 1 object&#xA;english.Plural(42, &#34;object&#34;, &#34;&#34;) // 42 objects&#xA;english.Plural(2, &#34;bus&#34;, &#34;&#34;) // 2 buses&#xA;english.Plural(99, &#34;locus&#34;, &#34;loci&#34;) // 99 loci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Word series&lt;/h3&gt; &#xA;&lt;p&gt;Format comma-separated words lists with conjuctions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;english.WordSeries([]string{&#34;foo&#34;}, &#34;and&#34;) // foo&#xA;english.WordSeries([]string{&#34;foo&#34;, &#34;bar&#34;}, &#34;and&#34;) // foo and bar&#xA;english.WordSeries([]string{&#34;foo&#34;, &#34;bar&#34;, &#34;baz&#34;}, &#34;and&#34;) // foo, bar and baz&#xA;&#xA;english.OxfordWordSeries([]string{&#34;foo&#34;, &#34;bar&#34;, &#34;baz&#34;}, &#34;and&#34;) // foo, bar, and baz&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>lotusdblabs/lotusdb</title>
    <updated>2023-09-07T01:29:08Z</updated>
    <id>tag:github.com,2023-09-07:/lotusdblabs/lotusdb</id>
    <link href="https://github.com/lotusdblabs/lotusdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Most advanced key-value store written in Go, extremely fast, compatible with LSM tree and B+ tree, optimization of badger and bbolt.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What is LotusDB&lt;/h2&gt; &#xA;&lt;p&gt;LotusDB is the most advanced key-value store written in Go, extremely fast, compatible with LSM tree and B+ tree, and optimization of badger and bbolt.&lt;/p&gt; &#xA;&lt;p&gt;Key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Combine the advantages of LSM and B+ tree&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast read/write performance&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Much lower read and space amplification than typical LSM&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Design Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lotusdblabs/lotusdb/raw/main/resource/img/design-overview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import &#34;github.com/lotusdblabs/lotusdb/v2&#34;&#xA;&#xA;func main() {&#xA;&#x9;// Set Options&#xA;&#x9;options := lotusdb.DefaultOptions&#xA;&#x9;options.DirPath = &#34;/tmp/lotusdb_basic&#34;&#xA;&#xA;&#x9;// Open LotusDB&#xA;&#x9;db, err := lotusdb.Open(options)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;panic(err)&#xA;&#x9;}&#xA;&#x9;defer func() {&#xA;&#x9;&#x9;_ = db.Close()&#xA;&#x9;}()&#xA;&#xA;&#x9;// Put Key-Value&#xA;&#x9;key := []byte(&#34;KV store engine&#34;)&#xA;&#x9;value := []byte(&#34;LotusDB&#34;)&#xA;&#x9;putOptions := &amp;amp;lotusdb.WriteOptions{&#xA;&#x9;&#x9;Sync:       true,&#xA;&#x9;&#x9;DisableWal: false,&#xA;&#x9;}&#xA;&#x9;err = db.Put(key, value, putOptions)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;panic(err)&#xA;&#x9;}&#xA;&#xA;&#x9;// Get Key-Value&#xA;&#x9;value, err = db.Get(key)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;panic(err)&#xA;&#x9;}&#xA;&#x9;println(string(value))&#xA;&#xA;&#x9;// Delete Key-Value&#xA;&#x9;err = db.Delete(key, putOptions)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;panic(err)&#xA;&#x9;}&#xA;&#xA;&#x9;// Start Compaction of Value Log&#xA;&#x9;err = db.Compact()&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;panic(err)&#xA;&#x9;}&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to join the &lt;a href=&#34;https://join.slack.com/t/rosedblabs/shared_invite/zt-19oj8ecqb-V02ycMV0BH1~Tn6tfeTz6A&#34;&gt;Slack channel&lt;/a&gt; and &lt;a href=&#34;https://github.com/lotusdblabs/lotusdb/discussions&#34;&gt;Discussions&lt;/a&gt; to connect with LotusDB team members and other users.&lt;/p&gt; &#xA;&lt;p&gt;If you are a Chinese user, you are also welcome to join our WeChat group, scan the QR code and you will be invited:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://i.loli.net/2021/05/06/tGTH7SXg8w95slA.jpg&#34; width=&#34;200px&#34; align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>