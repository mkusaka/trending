<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-14T01:29:02Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MHNightCat/superfile</title>
    <updated>2024-05-14T01:29:02Z</updated>
    <id>tag:github.com,2024-05-14:/MHNightCat/superfile</id>
    <link href="https://github.com/MHNightCat/superfile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pretty fancy and modern terminal file manager&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;/asset/superfilelogowhite.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;/asset/superfilelogoblack.png&#34;&gt; &#xA;  &lt;img alt=&#34;superfile LOGO&#34; src=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/asset/superfilelogowhite.png&#34;&gt; &#xA; &lt;/picture&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/asset/demo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Perform common operations&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/asset/demo.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#install&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#homebrew&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#install-pre-built-binaries&#34;&gt;Install pre-built binaries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#Windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#nixos&#34;&gt;NixOs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#font&#34;&gt;Font&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#supported-systems&#34;&gt;Supported Systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#tutorial&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#plugins&#34;&gt;Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#themes&#34;&gt;Themes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#use-an-existing-theme&#34;&gt;Use an existing theme&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#create-your-own-theme&#34;&gt;Create your own theme&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#hotkeys&#34;&gt;Hotkeys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#thanks&#34;&gt;Thanks&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#Support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#star-history&#34;&gt;Star History&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Any &lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#font&#34;&gt;&lt;code&gt;Nerd Font&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;Install homebrew and execute the following commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install superfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install pre-built binaries&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Just copy and paste this one-line command:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(curl -sLo- https://raw.githubusercontent.com/MHNightCat/superfile/main/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or wget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(wget -qO- https://raw.githubusercontent.com/MHNightCat/superfile/main/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;It actually supports windows! Well.. sort of.&lt;/p&gt; &#xA;&lt;p&gt;Use powershell to run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;powershell -ExecutionPolicy Bypass -Command &#34;Invoke-Expression ((New-Object System.Net.WebClient).DownloadString(&#39;https://raw.githubusercontent.com/MHNightCat/superfile/main/install.ps1&#39;))&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For uninstall do the same but uninstall.ps1&lt;/p&gt; &#xA;&lt;h3&gt;NixOS&lt;/h3&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Click to expand&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h4&gt;Install with nix command-line:&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix profile install github:MHNightCat/superfile#superfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Install with flake:&lt;/h4&gt; &#xA; &lt;p&gt;Add superfile to your flake inputs:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;inputs = {&#xA;  superfile = {&#xA;    url = &#34;github:MHNightCat/superfile&#34;;&#xA;  };&#xA;  # ...&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then you can add it to your packages:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;let&#xA;  system = &#34;x86_64-linux&#34;;&#xA;in {&#xA;  environment.systemPackages = with pkgs; [&#xA;    # ...&#xA;    inputs.superfile.packages.${system}.default  ];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Font&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] This is a reminder that you must use a &lt;a href=&#34;https://www.nerdfonts.com/font-downloads&#34;&gt;Nerd font&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Once the font is installed if &lt;code&gt;superfile&lt;/code&gt; isn&#39;t working make sure to update your terminal preferences to use the font.&lt;/p&gt; &#xA;&lt;p&gt;After installed, type &#34;spf&#34; to open superfile.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;You can build the source code yourself by using these steps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/doc/install&#34;&gt;golang&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build Steps&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clone this repository using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/MHNightCat/superfile.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enter the downloaded directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd superfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the &lt;code&gt;build.sh&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the binary file to your $PATH, e.g., in &lt;code&gt;/usr/local/bin&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv ./bin/spf /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Systems&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[x] Linux&lt;/li&gt; &#xA; &lt;li&gt;[x] MacOS&lt;/li&gt; &#xA; &lt;li&gt;[ ] Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;After you install superfile, you can go &lt;a href=&#34;https://github.com/MHNightCat/superfile/wiki/Tutorial&#34;&gt;here&lt;/a&gt; to briefly understand how to use superfile!&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MHNightCat/superfile/wiki/Plugins&#34;&gt;Click me to the plugins wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Themes&lt;/h2&gt; &#xA;&lt;h3&gt;Use an existing theme&lt;/h3&gt; &#xA;&lt;p&gt;You can go to &lt;a href=&#34;https://github.com/MHNightCat/superfile/raw/main/THEMELIST.md&#34;&gt;theme list&lt;/a&gt; to find one you like!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We only have a few themes at the moment, but we will be making more overtime! You can also &lt;a href=&#34;https://github.com/MHNightCat/superfile/pulls&#34;&gt;submit a pull request&lt;/a&gt; for your own theme!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;copy &lt;code&gt;theme_name&lt;/code&gt; in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Theme name: theme_name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;config.toml&lt;/code&gt; using your preferred editor:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] If your OS is macOS the file path should be in the &lt;code&gt;~/Library/Application Support/superfile/config.toml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;$EDITOR ~/.config/superfile/config.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and change:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;theme = &#34;gruvbox&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;theme = &#34;theme-name&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create your own theme&lt;/h3&gt; &#xA;&lt;p&gt;If you want to customize your own theme, you can go to &lt;code&gt;~/.config/superfile/theme/YOUR_THEME_NAME.toml&lt;/code&gt; and copy the existing theme&#39;s json to your own theme file&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to change the &lt;code&gt;theme&lt;/code&gt; variable in &lt;code&gt;config.toml&lt;/code&gt; to your theme name.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/#contribute&#34;&gt;If you are satisfied with your theme, you might as well put it into the default theme list!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hotkeys&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MHNightCat/superfile/wiki/Hotkey-list&#34;&gt;&lt;strong&gt;Click me to see the hotkey list&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] If your OS is macOS the file path should be in the &lt;code&gt;~/Library/Application Support/superfile/hotkeys.toml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can change all hotkeys in&lt;/strong&gt; &lt;code&gt;~/.config/superfile/hotkeys.toml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;Normal mode&#34; is the default browsing mode&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Global hotkeys cannot conflict with other hotkeys (The only exception is the special hotkey).&lt;/p&gt; &#xA;&lt;p&gt;The hotkey ranges are found in &lt;code&gt;hotkeys.toml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Help! My superfile&#39;s rendering is all messed up!&lt;/h3&gt; &#xA;&lt;p&gt;Try these things below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set your locale to utf-8&lt;/li&gt; &#xA; &lt;li&gt;chcp 65001 ( If that&#39;s an option for your shell )&lt;/li&gt; &#xA; &lt;li&gt;Set environment variable RUNEWIDTH_EASTASIAN to 0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute please follow the &lt;a href=&#34;https://raw.githubusercontent.com/MHNightCat/superfile/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;h3&gt;Support&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a Star on my GitHub repository would be nice 🌟&lt;/li&gt; &#xA; &lt;li&gt;You can buy a coffee for me 💖&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/G2G1JEGGC&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Thanks to all the contributors for making this project even greater!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/mhnightcat/superfile/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=mhnightcat/superfile&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Star History&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;THANKS FOR All OF YOUR STARS!&lt;/strong&gt; Your stars are my motivation to keep updating!&lt;/p&gt; &#xA;&lt;a href=&#34;https://star-history.com/#MHNightCat/superfile&amp;amp;Timeline&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=MHNightCat/superfile&amp;amp;type=Timeline&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=MHNightCat/superfile&amp;amp;type=Timeline&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=MHNightCat/superfile&amp;amp;type=Timeline&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>fdx-xdf/darkPulse</title>
    <updated>2024-05-14T01:29:02Z</updated>
    <id>tag:github.com,2024-05-14:/fdx-xdf/darkPulse</id>
    <link href="https://github.com/fdx-xdf/darkPulse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;darkPulse是一个用go编写的shellcode Packer，用于生成各种各样的shellcode loader，目前免杀火绒，360，360核晶。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;darkPulse是一个用go编写的shellcode Packer，用于生成各种各样的shellcode loader,目前可过火绒，360，360核晶。&lt;/p&gt; &#xA;&lt;p&gt;目前只实现了c语言的模板。&lt;/p&gt; &#xA;&lt;h2&gt;特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;使用sgn编码，使用了&lt;a href=&#34;https://github.com/EgeBalci/sgn&#34;&gt;EgeBalci/sgn: Shikata ga nai (仕方がない) encoder ported into go with several improvements (github.com)&lt;/a&gt;提供的二进制文件。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持aes/xor加密，uuid/words混淆，支持间接syscall和unhook两种模式下的callback，fiber，earlybird三种加载方式。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;间接sysacll使用了SysWhispers3的项目，链接：&lt;a href=&#34;https://github.com/klezVirus/SysWhispers3&#34;&gt;klezVirus/SysWhispers3: SysWhispers on Steroids - AV/EDR evasion via direct system calls. (github.com)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;unhook使用了&lt;a href=&#34;https://killer.wtf/2022/01/19/CustomJmpUnhook.html&#34;&gt;自定义跳转函数的unhook方法 - root@Ev1LAsH ~ (killer.wtf)&lt;/a&gt;文中所讲述的方法，文中提到的github仓库&lt;a href=&#34;https://github.com/trickster0/LdrLoadDll-Unhooking&#34;&gt;https://github.com/trickster0/LdrLoadDll-Unhooking&lt;/a&gt; 只实现了64位下的demo，我在 &lt;a href=&#34;https://github.com/fdx-xdf/LdrLoadDll-Unhooking-x86-x64&#34;&gt;fdx-xdf/LdrLoadDll-Unhooking-x86-x64 (github.com)&lt;/a&gt; 完善了32位和64位通用的一段代码。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;p&gt;首先要配好gcc的环境，命令行运行&lt;code&gt;gcc -v&lt;/code&gt;有反应即可&lt;/p&gt; &#xA;&lt;p&gt;为了规避内存扫描会休眠10s左右，所以并不能一下就上线&lt;/p&gt; &#xA;&lt;p&gt;在实战中推荐使用-sandbox参数，针对不同机器情况大概会休眠40s&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;示例1：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;darkPulse.exe -i calc_shellcode.bin -h&#xA;      _            _    _____       _&#xA;     | |          | |  |  __ \     | |&#xA;   __| | __ _ _ __| | _| |__) |   _| |___  ___&#xA;  / _` |/ _` | &#39;__| |/ /  ___/ | | | / __|/ _ \&#xA; | (_| | (_| | |  |   &amp;lt;| |   | |_| | \__ \  __/&#xA;  \__,_|\__,_|_|  |_|\_\_|    \__,_|_|___/\___|&#xA;&#xA;                    author fdx_xdf&#xA;                    version 1.2&#xA;                    2024.05&#xA;&#xA;Usage:&#xA;    &#xA;  -h &amp;lt;help&amp;gt;: 显示帮助信息&#xA;  -i &amp;lt;path&amp;gt;: 原始格式 Shellcode 的路径&#xA;  -enc &amp;lt;encryption&amp;gt;: Shellcode加密方式 (默认: aes)&#xA;  -lang &amp;lt;language&amp;gt;: 加载器的语言 (默认: c)&#xA;  -o &amp;lt;output&amp;gt;: 输出文件 (默认: Program)&#xA;  -k &amp;lt;keyLength&amp;gt;: 加密的密钥长度 (默认: 16)&#xA;  -obf &amp;lt;obfuscation&amp;gt;: 混淆Shellcode以降低熵值 (默认: uuid)&#xA;  -f &amp;lt;framework&amp;gt;: 目标架构32位还是64位&#xA;  -sandbox &amp;lt;true/false&amp;gt;: 是否开启反沙箱模式 (默认: true)&#xA;  -unhook &amp;lt;true/false&amp;gt;: 是否开启unhook模式 (默认: false,使用间接syscall加载)&#xA;  -loading &amp;lt;loadingTechnique&amp;gt;: 请选择加载方式，支持callback, fiber, earlybird (默认: callback)&#xA;  -debug  &amp;lt;true/false&amp;gt;: 是否打印shellcode中间加密/混淆过程(默认为 &#39;false&#39;，即不打印)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;示例2：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;darkPulse.exe -i calc_shellcode.bin -f 32 -sandbox -unhook&#xA;      _            _    _____       _&#xA;     | |          | |  |  __ \     | |&#xA;   __| | __ _ _ __| | _| |__) |   _| |___  ___&#xA;  / _` |/ _` | &#39;__| |/ /  ___/ | | | / __|/ _ \&#xA; | (_| | (_| | |  |   &amp;lt;| |   | |_| | \__ \  __/&#xA;  \__,_|\__,_|_|  |_|\_\_|    \__,_|_|___/\___|&#xA;&#xA;                    author fdx_xdf&#xA;                    version 1.2&#xA;                    2024.05&#xA;[+] 开始为您打包exe&#xA;&#xA;[+] 正在使用 sgn 工具进行编码&#xA;&#xA;[+] 进行sgn编码后的shellcode: 0xe8, 0xe7, 0x00, 0x00, 0x00, 0xeb, 0x04, 0xf7, 0xc8, 0xb9, 0xd8, 0x00, 0x00, 0x00, 0x74, 0x28, 0x35, 0x53, 0xcf, 0x00, 0x00, 0x00, 0x16, 0x22, 0x6c, 0x73, 0x4c, 0xd0, 0x90, 0xbb, 0x18, 0x06, 0xc5, 0x9d, 0xc8, 0x9c, 0x24, 0x28, 0x6e, 0xc8, 0x1b, 0xc4, 0x02, 0x02, 0xfe, 0x16, 0x94, 0x94, 0x94, 0x54, 0x22, 0x23, 0xa4, 0x15, 0x15, 0x6d, 0xc6, 0x56, 0x50, 0xdb, 0x71, 0x79, 0xf2, 0x98, 0x8a, 0xfd, 0x4f, 0x57, 0x16, 0x1d, 0x17, 0x31, 0xfe, 0xf9, 0x25, 0xd9, 0x40, 0x38, 0x22, 0xce, 0xec, 0x91, 0x5c, 0x51, 0x4e, 0x45, 0x47, 0x31, 0x5b, 0x0a, 0x7d, 0x0f, 0x1f, 0x00, 0x32, 0x08, 0x7b, 0x37, 0xd6, 0x28, 0xcb, 0x83, 0x60, 0x31, 0x5e, 0x25, 0x7c, 0x5a, 0x5b, 0x76, 0xfd, 0x84, 0x5a, 0x45, 0x7f, 0x20, 0x43, 0x67, 0xea, 0xc3, 0xd5, 0x1a, 0x95, 0xb9, 0x66, 0x91, 0x9a, 0x13, 0xa4, 0x5c, 0x32, 0xa7, 0x4d, 0xac, 0x21, 0xa5, 0x5c, 0xd9, 0xfd, 0x40, 0x14, 0x4a, 0x31, 0x61, 0x45, 0xa2, 0x6d, 0x0b, 0x78, 0x62, 0x15, 0x1e, 0x36, 0x28, 0x85, 0x40, 0xc3, 0xb7, 0x3a, 0xbb, 0x6b, 0xda, 0x5e, 0x72, 0xa0, 0xfb, 0x5e, 0xbf, 0xd6, 0x6a, 0xc3, 0xbc, 0xa2, 0xc1, 0x1e, 0x32, 0xb5, 0x57, 0xa2, 0x8f, 0x02, 0x66, 0x57, 0xd0, 0x11, 0xa3, 0xa3, 0xa3, 0x03, 0x83, 0x8b, 0xa4, 0xaf, 0xbe, 0xc5, 0xb0, 0x11, 0x4a, 0xb0, 0xc1, 0x5b, 0xcd, 0x59, 0xff, 0x10, 0x8d, 0xee, 0xe9, 0x3c, 0xfc, 0x02, 0x7e, 0x74, 0x02, 0xf9, 0xd1, 0x9a, 0x5f, 0xda, 0x99, 0x6a, 0xc6, 0x55, 0x3f, 0xbf, 0x12, 0xcd, 0xd6, 0x35, 0x84, 0xe6, 0x79, 0x97, 0x02, 0x70, 0x15, 0x89, 0xc0, 0xeb, 0x04, 0x01, 0x5d, 0xcd, 0x58, 0x5b, 0xc1, 0x4b, 0x06, 0x17, 0xeb, 0x04, 0x06, 0x79, 0xc5, 0xf8, 0x0f, 0x46, 0xd2, 0x81, 0x6b, 0x0a, 0x28, 0xd7, 0x99, 0x0a, 0xeb, 0x04, 0xc6, 0xe0, 0xfd, 0x61, 0xc1, 0x4b, 0x0e, 0x9d, 0xeb, 0x04, 0xac, 0x15, 0xdb, 0x80, 0x81, 0x73, 0x12, 0x37, 0x5c, 0xf7, 0x42, 0xeb, 0x00, 0xeb, 0x04, 0xd5, 0x7e, 0xed, 0x06, 0x81, 0x73, 0x16, 0xc7, 0x90, 0xbb, 0x18, 0xeb, 0x04, 0x71, 0x5f, 0x24, 0x89, 0x81, 0x6b, 0x1a, 0x04, 0x41, 0x8f, 0xb1, 0xeb, 0x04, 0x15, 0x91, 0x47, 0xfa, 0x81, 0x6b, 0x1e, 0x9c, 0x24, 0x28, 0x8c, 0xeb, 0x04, 0x9b, 0x0f, 0x5b, 0x0a, 0x81, 0x73, 0x22, 0x38, 0x1f, 0xf5, 0xf8, 0xff, 0xe3&#xA;&#xA;[+] Generated AES key: 0x36, 0x37, 0x54, 0x4c, 0x37, 0x4d, 0x78, 0x53, 0x69, 0x52, 0x53, 0x59, 0x32, 0x47, 0x49, 0x67&#xA;&#xA;[+] Generated IV (16-byte): 0x52, 0x42, 0x62, 0x4c, 0x6e, 0x69, 0x4f, 0x5a, 0x44, 0x44, 0x43, 0x4d, 0x6d, 0x6e, 0x58, 0x&#xA;63&#xA;&#xA;[+] Using AES-128-CBC encryption&#xA;&#xA;[+] 进行加密后的shellcode：0x11, 0xef, 0xfd, 0x48, 0x48, 0x69, 0x4f, 0x7e, 0xa7, 0x8d, 0x7d, 0x9a, 0x3c, 0xaf, 0x0b, 0x2f, 0xfc, 0xc7, 0x1f, 0xaa, 0xaf, 0x8d, 0x3b, 0x2f, 0x55, 0x55, 0x0e, 0xa1, 0x95, 0x62, 0x85, 0xc3, 0xc1, 0xa5, 0x67, 0x82, 0x65, 0x38, 0x90, 0x39, 0x20, 0x67, 0x86, 0x6a, 0x5c, 0x18, 0x53, 0x1b, 0xa1, 0x87, 0x1e, 0x9e, 0x70, 0xb1, 0x2e, 0x38, 0x67, 0x0d, 0xe7, 0x2f, 0x3e, 0x3f, 0x49, 0x17, 0xaf, 0x2d, 0x98, 0xcd, 0x68, 0x7d, 0x84, 0x49, 0x35, 0x4d, 0xa5, 0xc5, 0xe3, 0x89, 0xa7, 0x5f, 0x86, 0x6a, 0x72, 0xfa, 0x95, 0x27, 0x60, 0xe7, 0x6f, 0x3a, 0x62, 0x7e, 0x07, 0x1f, 0xc8, 0x11, 0x89, 0xc0, 0x34, 0xb4, 0x0f, 0x65, 0xe6, 0xe3, 0x8e, 0xdb, 0x78, 0x4e, 0x29, 0x51, 0xa2, 0xb2, 0xbf, 0xc8, 0xe7, 0x74, 0x5c, 0xb6, 0x98, 0xec, 0x25, 0xe4, 0x85, 0x9a, 0x08, 0xdc, 0xaf, 0xe9, 0x55, 0xa5, 0xf7, 0x5e, 0x23, 0x66, 0xc1, 0x68, 0xb0, 0xd1, 0x58, 0xa2, 0x68, 0x76, 0x4d, 0xcd, 0x95, 0x5e, 0xf0, 0x1e, 0x2f, 0xd9, 0xca, 0x01, 0xe7, 0x0b, 0x9e, 0x0a, 0x4c, 0x35, 0xe1, 0x83, 0x31, 0xfc, 0x82, 0xa7, 0xbb, 0x20, 0x5d, 0xe2, 0xe0, 0xc3, 0xff, 0xbb, 0x2f, 0xfa, 0xed, 0xdd, 0x3c, 0xfd, 0x37, 0x3f, 0x5b, 0x19, 0x58, 0xa3, 0xa9, 0xf2, 0x0f, 0x77, 0x41, 0x5e, 0x72, 0xb8, 0x20, 0x61, 0x8b, 0x24, 0x64, 0x12, 0x64, 0x99, 0x73, 0x1f, 0xe2, 0x64, 0xa4, 0x07, 0x84, 0xfe, 0x26, 0x4d, 0x29, 0x89, 0xde, 0xcd, 0x5a, 0x91, 0x48, 0x22, 0x4e, 0x22, 0x20, 0x8a, 0x05, 0x03, 0xb8, 0xea, 0x30, 0x86, 0x36, 0x62, 0xbf, 0xdd, 0x71, 0x4d, 0xd2, 0x0c, 0x56, 0x35, 0x8c, 0x87, 0x39, 0x26, 0xc6, 0xc1, 0xef, 0xad, 0xf5, 0x62, 0x2c, 0x09, 0xe3, 0xab, 0xf3, 0x18, 0xb7, 0xa8, 0x2a, 0xcc, 0xdb, 0xf0, 0xd4, 0x38, 0x4e, 0x58, 0x14, 0xa6, 0x4b, 0x7e, 0x9e, 0xba, 0x3e, 0x4f, 0xf3, 0xe8, 0x60, 0xb0, 0x46, 0xa9, 0x5d, 0x98, 0xb9, 0x7d, 0x0a, 0x35, 0x9d, 0xbf, 0x29, 0x8a, 0x79, 0x99, 0x96, 0x8e, 0xd7, 0xbc, 0x77, 0x36, 0xa5, 0xe6, 0x39, 0x3f, 0x32, 0x70, 0x5e, 0x75, 0x9b, 0xd7, 0xb9, 0x24, 0xa9, 0x24, 0x78, 0x80, 0x70, 0x9f, 0x80, 0x2a, 0x43, 0x0f, 0x04, 0xea, 0xd0, 0xba, 0x22, 0x2c, 0x4e, 0x20, 0x64, 0x65, 0x8a, 0x15, 0xc7, 0x28, 0x32, 0x4e, 0xa3, 0x8c, 0x16, 0xf7, 0x3d, 0xee, 0x79, 0x8b, 0x75, 0x4b, 0xdc, 0x3a, 0x27, 0xb6, 0xfc, 0x41, 0x9b, 0x40&#xA;&#xA;[+] Generated UUIDs:&#34;48fdef11-6948-7e4f-a78d-7d9a3caf0b2f&#34;,&#xA;                    &#34;aa1fc7fc-8daf-2f3b-5555-0ea1956285c3&#34;,&#xA;                    &#34;8267a5c1-3865-3990-2067-866a5c18531b&#34;,&#xA;                    &#34;9e1e87a1-b170-382e-670d-e72f3e3f4917&#34;,&#xA;                    &#34;cd982daf-7d68-4984-354d-a5c5e389a75f&#34;,&#xA;                    &#34;fa726a86-2795-e760-6f3a-627e071fc811&#34;,&#xA;                    &#34;b434c089-650f-e3e6-8edb-784e2951a2b2&#34;,&#xA;                    &#34;74e7c8bf-b65c-ec98-25e4-859a08dcafe9&#34;,&#xA;                    &#34;5ef7a555-6623-68c1-b0d1-58a268764dcd&#34;,&#xA;                    &#34;1ef05e95-d92f-01ca-e70b-9e0a4c35e183&#34;,&#xA;                    &#34;a782fc31-20bb-e25d-e0c3-ffbb2ffaeddd&#34;,&#xA;                    &#34;3f37fd3c-195b-a358-a9f2-0f77415e72b8&#34;,&#xA;                    &#34;248b6120-1264-9964-731f-e264a40784fe&#34;,&#xA;                    &#34;89294d26-cdde-915a-4822-4e22208a0503&#34;,&#xA;                    &#34;8630eab8-6236-ddbf-714d-d20c56358c87&#34;,&#xA;                    &#34;c1c62639-adef-62f5-2c09-e3abf318b7a8&#34;,&#xA;                    &#34;f0dbcc2a-38d4-584e-14a6-4b7e9eba3e4f&#34;,&#xA;                    &#34;b060e8f3-a946-985d-b97d-0a359dbf298a&#34;,&#xA;                    &#34;8e969979-bcd7-3677-a5e6-393f32705e75&#34;,&#xA;                    &#34;24b9d79b-24a9-8078-709f-802a430f04ea&#34;,&#xA;                    &#34;2c22bad0-204e-6564-8a15-c728324ea38c&#34;,&#xA;                    &#34;ee3df716-8b79-4b75-dc3a-27b6fc419b40&#34;,&#xA;&#xA;[+] 正在为您生成模板文件: Program.c&#xA;&#xA;[+] 编译成功: Program.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;即在当前目录下生成 Program.exe&lt;/p&gt; &#xA;&lt;p&gt;注意：syscall下的earlybird方式由于某些bug并没有使用间接syscall方式加载，尽量不要使用。&lt;/p&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;p&gt;2024.5.1 优化了错误提示，解决了部分bug，优化了unhook模板，新增debug模式，可以选择是否打印中间加密/混淆过程，新增加编译好的Mac可执行文件&lt;/p&gt; &#xA;&lt;p&gt;2024.5.4 解决了部分bug，新增加 sgn 编码工具，增加静态规避效果&lt;/p&gt; &#xA;&lt;h2&gt;实现效果&lt;/h2&gt; &#xA;&lt;p&gt;5.1日师傅们的测试&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fdx-xdf/darkPulse/main/images/41070139c5a430be6a6030dd41395556.png&#34; alt=&#34;image-20240504135314215&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;微步云沙箱无检出&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fdx-xdf/darkPulse/main/images/1711596621444-4b4ab40f-7327-481f-a5f8-ca2d39330db6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;360（未开核晶）：无检出&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fdx-xdf/darkPulse/main/images/c3dcf083-609e-4b55-87c1-8311e5d28a40&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;火绒：无检出&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fdx-xdf/darkPulse/main/images/1712452727509-f3c2d4b3-90ab-448d-9335-d8ac90a3a2a3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;360（开启核晶）：无检出（使用syscall和unhook两种方式生成的exe均成功绕过核晶）&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fdx-xdf/darkPulse/main/images/1712553684319-6e2573f1-7d58-4c36-9f92-4dba958a67f5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;to do list:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust 模板&lt;/li&gt; &#xA; &lt;li&gt;更多加密算法&lt;/li&gt; &#xA; &lt;li&gt;分离加载&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;- unhook&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;.....&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;本项目仅用安全研究的学习交流和研究，强烈不建议您用于任何的实际途径（包括黑灰产交易、非法渗透攻击、割韭菜），网络不是法外之地！如果您使用该工具则应该自觉遵守以上要求。&lt;/p&gt; &#xA;&lt;p&gt;如果遇到问题可以提交issue，也可以通过企鹅号联系我：MTM1MDE0MTk0MA==&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>NHAS/wag</title>
    <updated>2024-05-14T01:29:02Z</updated>
    <id>tag:github.com,2024-05-14:/NHAS/wag</id>
    <link href="https://github.com/NHAS/wag" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple Wireguard 2FA&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wag&lt;/h1&gt; &#xA;&lt;p&gt;Wag adds MFA, route restriction and device enrolment to wireguard.&lt;/p&gt; &#xA;&lt;p&gt;Key Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Define routes which require MFA authorisation, or public always accessible routes&lt;/li&gt; &#xA; &lt;li&gt;Easy API for registering new clients&lt;/li&gt; &#xA; &lt;li&gt;High Availability&lt;/li&gt; &#xA; &lt;li&gt;Multiple MFA options, including webauthn, oidc and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/NHAS/wag/assets/6820641/3a2b2dd9-15af-40c4-bb81-3e479d48425a&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/NHAS/wag/assets/6820641/89976794-10af-493a-b8c4-3d02f50417ce&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/NHAS/wag/assets/6820641/83cae3c0-bb19-4aa0-846f-c045387a0910&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/NHAS/wag/assets/6820641/ff237473-d522-451e-8529-92bd111d4b96&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sponsorship&lt;/h1&gt; &#xA;&lt;p&gt;This work was very kindly supported by &lt;a href=&#34;https://www.aurainfosec.com/&#34;&gt;Aura Information Security&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6820641/181147262-c7baa5a5-36b2-4153-b01f-5064226ec56e.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;iptables&lt;/code&gt; and &lt;code&gt;libpam&lt;/code&gt; must be installed.&lt;br&gt; Wag must be run as root, to manage &lt;code&gt;iptables&lt;/code&gt; and the &lt;code&gt;wireguard&lt;/code&gt; device.&lt;/p&gt; &#xA;&lt;p&gt;Forwarding must be enabled in &lt;code&gt;sysctl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sysctl -w net.ipv4.ip_forward=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wag does not need &lt;code&gt;wg-quick&lt;/code&gt; or other equalivent as long as the kernel supports wireguard.&lt;/p&gt; &#xA;&lt;h1&gt;Setup instructions&lt;/h1&gt; &#xA;&lt;p&gt;Both options require a kernel newer than 5.9+&lt;/p&gt; &#xA;&lt;p&gt;Binary release (requires glibc 2.31+):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L $(curl -s https://api.github.com/repos/NHAS/wag/releases/latest | jq -M -r &#39;.assets[0].browser_download_url&#39;) -o wag&#xA;sudo ./wag gen-config&#xA;&#xA;sudo ./wag start -config &amp;lt;generated_config_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From source (will require &lt;code&gt;go1.19&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;gulp&lt;/code&gt;, &lt;code&gt;clang&lt;/code&gt;, &lt;code&gt;llvm-strip&lt;/code&gt;, &lt;code&gt;libbpf&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:NHAS/wag.git&#xA;cd wag&#xA;make&#xA;&#xA;cp example_config.json config.json&#xA;&#xA;sudo ./wag start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If running behind a reverse proxy, &lt;code&gt;X-Forwarded-For&lt;/code&gt; must be set.&lt;/p&gt; &#xA;&lt;h1&gt;Management&lt;/h1&gt; &#xA;&lt;p&gt;The root user is able to manage the wag server with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wag subcommand [-options]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Supported commands: &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reload&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;firewall&lt;/code&gt;, &lt;code&gt;registration&lt;/code&gt;, &lt;code&gt;devices&lt;/code&gt;, &lt;code&gt;users&lt;/code&gt;, &lt;code&gt;webadmin&lt;/code&gt;, &lt;code&gt;gen-config&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;start&lt;/code&gt;: starts the wag server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of start:&#xA;  Start wag server (does not daemonise)&#xA;  -join string&#xA;        Cluster join token&#xA;  -config string&#xA;        Configuration file location (default &#34;./config.json&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;cleanup&lt;/code&gt;: Will remove all firewall forwards, and shutdown the wireguard device&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;reload&lt;/code&gt;: Reloads ACLs from configuration&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;version&lt;/code&gt;: Display the version of wag&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;firewall&lt;/code&gt;: Get firewall rules&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of firewall:&#xA;  -list&#xA;        List firewall rules&#xA;  -socket string&#xA;        Wag socket to act on (default &#34;/tmp/wag.sock&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;registration&lt;/code&gt;: Deals with creating, deleting and listing the registration tokens&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of registration:&#xA;  -add&#xA;        Create a new enrolment token&#xA;  -del&#xA;        Delete existing enrolment token&#xA;  -group value&#xA;        Manually set user group (can supply multiple -group, or use -groups for , delimited group list, useful for OIDC)&#xA;  -groups string&#xA;        Set user groups manually, &#39;,&#39; delimited list of groups, useful for OIDC&#xA;  -list&#xA;        List tokens&#xA;  -overwrite string&#xA;        Add registration token for an existing user device, will overwrite wireguard public key (but not 2FA)&#xA;  -socket string&#xA;        Wag socket to act on (default &#34;/tmp/wag.sock&#34;)&#xA;  -token string&#xA;        Manually set registration token (Optional)&#xA;  -username string&#xA;        User to add device to&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;devices&lt;/code&gt;: Manages devices&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of devices:&#xA;  -address string&#xA;        Address of device&#xA;  -del&#xA;        Remove device and block wireguard access&#xA;  -list&#xA;        List wireguard devices&#xA;  -lock&#xA;        Lock device access to mfa routes&#xA;  -mfa_sessions&#xA;        Get list of devices with active authorised sessions&#xA;  -socket string&#xA;        Wag control socket to act on (default &#34;/tmp/wag.sock&#34;)&#xA;  -unlock&#xA;        Unlock device&#xA;  -username string&#xA;        Owner of device (indicates that command acts on all devices owned by user)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;users&lt;/code&gt;: Manages users MFA and can delete all users devices&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of users:&#xA;  -del&#xA;        Delete user and all associated devices&#xA;  -list&#xA;        List users, if &#39;-username&#39; supply will filter by user&#xA;  -lockaccount&#xA;        Lock account disable authention from any device, deauthenticates user active sessions&#xA;  -reset-mfa&#xA;        Reset MFA details, invalids all session and set MFA to be shown&#xA;  -socket string&#xA;        Wag socket location, (default &#34;/tmp/wag.sock&#34;)&#xA;  -unlockaccount&#xA;        Unlock a locked account, does not unlock specific device locks (use device -unlock -username &amp;lt;&amp;gt; for that)&#xA;  -username string&#xA;        Username to act upon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;webadmin&lt;/code&gt;: Manages the administrative users for the web UI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of webadmin:&#xA;  -add&#xA;        Add web administrator user (requires -password)&#xA;  -del&#xA;        Delete admin user&#xA;  -list&#xA;        List web administration users, if &#39;-username&#39; supply will filter by user&#xA;  -lockaccount&#xA;        Lock admin account disable login for this web administrator user&#xA;  -password string&#xA;        Username to act upon&#xA;  -socket string&#xA;        Wag instance control socket (default &#34;/tmp/wag.sock&#34;)&#xA;  -unlockaccount&#xA;        Unlock a web administrator account&#xA;  -username string&#xA;        Admin Username to act upon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;User guide&lt;/h1&gt; &#xA;&lt;h2&gt;Installing wag&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;wag&lt;/code&gt;, &lt;code&gt;config.json&lt;/code&gt; to &lt;code&gt;/opt/wag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate a wireguard private key with &lt;code&gt;wg genkey&lt;/code&gt; set &lt;code&gt;PrivateKey&lt;/code&gt; in the example config to it&lt;/li&gt; &#xA; &lt;li&gt;Copy (or link) &lt;code&gt;wag.service&lt;/code&gt; to &lt;code&gt;/etc/systemd/system/&lt;/code&gt; and start/enable the service&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Creating new registration tokens&lt;/h2&gt; &#xA;&lt;p&gt;First generate a token.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# ./wag registration -add -username tester&#xA;token,username&#xA;e83253fd9962c68f73aa5088604f3f425d58a963bfb5c0889cca54d63a34b2e3,tester&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then curl said token.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://public.server.address:8080/register_device?key=e83253fd9962c68f73aa5088604f3f425d58a963bfb5c0889cca54d63a34b2e3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The service will return a fully templated response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Interface]&#xA;PrivateKey = &amp;lt;omitted&amp;gt;&#xA;Address = 192.168.1.1&#xA;&#xA;[Peer]&#xA;Endpoint =  public.server.address:51820&#xA;PublicKey = pnvl40WiRt++0NucEGexlpfwWA8QzBYg2+8ZWZJvejA=&#xA;AllowedIPs = 10.7.7.7/32, 192.168.1.1/32, 192.168.3.4/32, 192.168.3.5/32&#xA;PersistentKeepAlive = 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which can then be written to a config file.&lt;/p&gt; &#xA;&lt;h2&gt;Entering MFA&lt;/h2&gt; &#xA;&lt;p&gt;To authenticate the user should browse to the servers vpn address, in the example, case &lt;code&gt;192.168.1.1:8080&lt;/code&gt;, where they will be prompted for their 2fa code.&lt;br&gt; The configuration file specifies how long a session can live for, before expiring.&lt;/p&gt; &#xA;&lt;h2&gt;Signing in to the Management console&lt;/h2&gt; &#xA;&lt;p&gt;Make sure that you have &lt;code&gt;ManagementUI.Enabled&lt;/code&gt; set as &lt;code&gt;true&lt;/code&gt;, then do the following from the console:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo ./wag webadmin -add -username &amp;lt;your_username&amp;gt; -password &amp;lt;your-password-here&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then browse to your management listening address and enter your credentials.&lt;/p&gt; &#xA;&lt;p&gt;The web interface itself cannot add administrative users.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration file reference&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;NumberProxies&lt;/code&gt;: The number of trusted reverse proxies before the client, makes wag respect the &lt;code&gt;X-Forward-For&lt;/code&gt; directive and parses the client IP from it correctly &lt;code&gt;HelpMail&lt;/code&gt;: The email address that is shown on the prompt page&lt;br&gt; &lt;code&gt;Lockout&lt;/code&gt;: Number of times a person can attempt mfa authentication before their account locks&lt;br&gt; &lt;code&gt;NAT&lt;/code&gt;: Turn on or off masquerading&lt;br&gt; &lt;code&gt;ExposePorts&lt;/code&gt;: Expose ports on the VPN server to the client (adds rules to IPtables) example: [ &#34;443/tcp&#34;, &#34;100-200/udp&#34; ]&lt;br&gt; &lt;code&gt;CheckUpdates&lt;/code&gt;: If enabled (off by default) the management UI will show an alert if a new version of wag is available. This talks to api.github.com&lt;br&gt; &lt;code&gt;MFATemplatesDirectory&lt;/code&gt;: A string path option, when set templates will be queried from disk rather than the embedded copies. Allows you to customise the MFA registration, entry, and success pages, allows custom &lt;code&gt;js&lt;/code&gt; and &lt;code&gt;css&lt;/code&gt; in the &lt;code&gt;MFATemplatesDirectory /custom/&lt;/code&gt; directory&lt;br&gt; &lt;code&gt;DownloadConfigFileName&lt;/code&gt;: The filename of the wireguard config that is downloaded, defaults to &lt;code&gt;wg0.conf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ExternalAddress&lt;/code&gt;: The public address of the server, the place where wireguard is listening to the internet, and where clients can reach the &lt;code&gt;/register_device&lt;/code&gt; endpoint&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;MaxSessionLifetimeMinutes&lt;/code&gt;: After authenticating, a device will be allowed to talk to privileged routes for this many minutes, if -1, timeout is disabled&lt;br&gt; &lt;code&gt;SessionInactivityTimeoutMinutes&lt;/code&gt;: If a device has not sent data in &lt;code&gt;n&lt;/code&gt; minutes, it will be required to reauthenticate, if -1 timeout is disabled&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;DatabaseLocation&lt;/code&gt;: Where to load the sqlite3 database from, it will be created if it does not exist&lt;br&gt; &lt;code&gt;Socket&lt;/code&gt;: Wag control socket, changing this will allow multiple wag instances to run on the same machine&lt;br&gt; &lt;code&gt;Acls&lt;/code&gt;: Defines the &lt;code&gt;Groups&lt;/code&gt; and &lt;code&gt;Policies&lt;/code&gt; that restrict routes&lt;br&gt; &lt;code&gt;Policies&lt;/code&gt;: A map of group or user names to policy objects which contain the wag firewall &amp;amp; route capture rules. The most specific match governs the type of access a user has to a route, e.g if you have a &lt;code&gt;/16&lt;/code&gt; defined as MFA, but one ip address in that range as allow that is &lt;code&gt;/32&lt;/code&gt; then the &lt;code&gt;/32&lt;/code&gt; will take precedence over the &lt;code&gt;/16&lt;/code&gt;&lt;br&gt; &lt;code&gt;Policies.&amp;lt;policy name&amp;gt;.Mfa&lt;/code&gt;: The routes and services that require Mfa to access&lt;br&gt; &lt;code&gt;Policies.&amp;lt;policy name&amp;gt;.Public&lt;/code&gt;: Routes and services that do not require authorisation &lt;code&gt;Policies.&amp;lt;policy name&amp;gt;.Deny&lt;/code&gt;: Deny access to this route&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Webserver&lt;/code&gt;: Object that contains the public and tunnel listening addresses of the webserver&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;WebServer.Public.ListenAddress&lt;/code&gt;: Listen address for endpoint&lt;br&gt; &lt;code&gt;WebServer.Tunnel.Port&lt;/code&gt;: Port for in-vpn-tunnel webserver, this does not take a full IP address, as the tunnel listener should &lt;em&gt;never&lt;/em&gt; be outside the wireguard device&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;WebServer.&amp;lt;endpoint&amp;gt;.CertPath&lt;/code&gt;: TLS Certificate path for endpoint&lt;br&gt; &lt;code&gt;WebServer.&amp;lt;endpoint&amp;gt;.KeyPath&lt;/code&gt;: TLS key for endpoint&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Authenticators&lt;/code&gt;: Object that contains configurations for the authentication methods wag provides&lt;br&gt; &lt;code&gt;Authenticators.Issuer&lt;/code&gt;: TOTP issuer, the name that will get added to the TOTP app&lt;br&gt; &lt;code&gt;Authenticators.DomainURL&lt;/code&gt;: Full url of the vpn authentication endpoint, required for &lt;code&gt;webauthn&lt;/code&gt; and &lt;code&gt;oidc&lt;/code&gt; &lt;code&gt;Authenticators.DefaultMethod&lt;/code&gt;: String, default method the user will be presented, if not specified a list of methods is displayed to the user (possible values: &lt;code&gt;webauth&lt;/code&gt;, &lt;code&gt;totp&lt;/code&gt;, &lt;code&gt;oidc&lt;/code&gt;, &lt;code&gt;pam&lt;/code&gt;)&lt;br&gt; &lt;code&gt;Authenticators.Methods&lt;/code&gt;: String array, enabled authentication methods, e.g &lt;code&gt;[&#34;totp&#34;,&#34;webauthn&#34;,&#34;oidc&#34;, &#34;pam&#34;]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Authenticators.OIDC&lt;/code&gt;: Object that contains &lt;code&gt;OIDC&lt;/code&gt; specific configuration options &lt;code&gt;Authenticators.OIDC.IssuerURL&lt;/code&gt;: Identity provider endpoint, e.g &lt;code&gt;http://localhost:8080/realms/account&lt;/code&gt; &lt;code&gt;Authenticators.OIDC.ClientID&lt;/code&gt;: OIDC identifier for application &lt;code&gt;Authenticators.OIDC.ClientSecret&lt;/code&gt;: OIDC secret &lt;code&gt;Authenticators.OIDC.GroupsClaimName&lt;/code&gt;: Not yet used.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Authenticators.PAM.ServiceName&lt;/code&gt;: Name of PAM-Auth file in &lt;code&gt;/etc/pam.d/&lt;/code&gt; will default to &lt;code&gt;/etc/pam.d/login&lt;/code&gt; if unset or empty&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Clustering&lt;/code&gt;: Object containing the clustering details&lt;br&gt; &lt;code&gt;Clustering.ClusterState&lt;/code&gt;: Same as the etcd cluster state setting, can be either &lt;code&gt;new&lt;/code&gt;, create a new cluster, or &lt;code&gt;existing&lt;/code&gt;. If you are joining an existing cluster, use &lt;code&gt;start -join&lt;/code&gt; rather than this&lt;br&gt; &lt;code&gt;Clustering.ETCDLogLevel&lt;/code&gt;: Level of logging for the embedded etcd server to emit, options &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;&lt;br&gt; &lt;code&gt;Clustering.Witness&lt;/code&gt;: Is the node a witness node, i.e one that does not start a wireguard device, or management UI, but replicates events for the RAFT concensus&lt;br&gt; &lt;code&gt;Clustering.TLSManagerListenURL&lt;/code&gt;: URL for generating certificates for the wag cluster, must be reachable by all nodes, typically automatically set by &lt;code&gt;start -join&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Wireguard&lt;/code&gt;: Object that contains the wireguard device configuration&lt;br&gt; &lt;code&gt;Wireguard.DevName&lt;/code&gt;: The wireguard device to attach or to create if it does not exist, will automatically add peers (no need to configure peers with &lt;code&gt;wg-quick&lt;/code&gt;)&lt;br&gt; &lt;code&gt;Wireguard.ListenPort&lt;/code&gt;: Port that wireguard will listen on&lt;br&gt; &lt;code&gt;Wireguard.PrivateKey&lt;/code&gt;: The wireguard private key, can be generated with &lt;code&gt;wg genkey&lt;/code&gt;&lt;br&gt; &lt;code&gt;Wireguard.Address&lt;/code&gt;: Subnet the VPN is responsible for&lt;br&gt; &lt;code&gt;Wireguard.MTU&lt;/code&gt;: Maximum transmissible unit defaults to 1420 if not set for IPv4 over Ethernet&lt;br&gt; &lt;code&gt;Wireguard.DNS&lt;/code&gt;: An array of DNS servers that will be automatically used, and set as &#34;Allowed&#34; (no MFA)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ManagementUI&lt;/code&gt;: Object that contains configurations for the webadministration portal. It is not recommend to expose this portal, I recommend setting &lt;code&gt;ListenAddress&lt;/code&gt; to &lt;code&gt;127.0.0.1&lt;/code&gt;/&lt;code&gt;localhost&lt;/code&gt; and then use ssh forwarding to expose it&lt;br&gt; &lt;code&gt;ManagementUI.Enabled&lt;/code&gt;: Enable the web UI&lt;br&gt; &lt;code&gt;ManagementUI.ListenAddress&lt;/code&gt;: Listen address to expose the management UI on&lt;br&gt; &lt;code&gt;ManagementUI.CertPath&lt;/code&gt;: TLS Certificate path for management endpoint&lt;br&gt; &lt;code&gt;ManagementUI.KeyPath&lt;/code&gt;: TLS key for the management endpoint&lt;/p&gt; &#xA;&lt;p&gt;Full config example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;Proxied&#34;: true,&#xA;    &#34;ExposePorts&#34;: [&#xA;        &#34;443/tcp&#34;,&#xA;        &#34;100-200/udp&#34;&#xA;     ],&#xA;    &#34;CheckUpdates&#34;: true,&#xA;    &#34;Lockout&#34;: 5,&#xA;    &#34;NAT&#34;: true,&#xA;    &#34;HelpMail&#34;: &#34;help@example.com&#34;,&#xA;    &#34;MaxSessionLifetimeMinutes&#34;: 2,&#xA;    &#34;SessionInactivityTimeoutMinutes&#34;: 1,&#xA;    &#34;ExternalAddress&#34;: &#34;81.80.79.78&#34;,&#xA;    &#34;DatabaseLocation&#34;: &#34;devices.db&#34;,&#xA;    &#34;Socket&#34;:&#34;/tmp/wag.sock&#34;,&#xA;    &#34;Webserver&#34;: {&#xA;        &#34;Public&#34;: {&#xA;            &#34;ListenAddress&#34;: &#34;192.168.121.61:8080&#34;,&#xA;            &#34;CertPath&#34;: &#34;/etc/example/cert/path&#34;,&#xA;            &#34;KeyPath&#34;: &#34;/etc/ssl/private/somecert.key&#34;&#xA;        },&#xA;        &#34;Tunnel&#34;: {&#xA;            &#34;Port&#34;: &#34;8080&#34;&#xA;        }&#xA;    },&#xA;    &#34;ManagementUI&#34;: {&#xA;        &#34;ListenAddress&#34;: &#34;127.0.0.1:4433&#34;,&#xA;        &#34;CertPath&#34;: &#34;/etc/example/cert/path&#34;,&#xA;        &#34;KeyPath&#34;: &#34;/etc/ssl/private/somecert.key&#34;,&#xA;        &#34;Enabled&#34;: true&#xA;    },&#xA;    &#34;Authenticators&#34;: {&#xA;        &#34;Issuer&#34;: &#34;vpn.test&#34;,&#xA;        &#34;DomainURL&#34;: &#34;https://vpn.test:8080&#34;,&#xA;        &#34;DefaultMethod&#34;:&#34;webauthn&#34;,&#xA;        &#34;Methods&#34;:[&#34;totp&#34;,&#34;webauthn&#34;, &#34;oidc&#34;, &#34;pam&#34;],&#xA;        &#34;OIDC&#34;: {&#xA;            &#34;IssuerURL&#34;: &#34;http://localhost:8080/&#34;,&#xA;            &#34;ClientSecret&#34;: &#34;&amp;lt;OMITTED&amp;gt;&#34;,&#xA;            &#34;ClientID&#34;: &#34;account&#34;,&#xA;            &#34;GroupsClaimName&#34;: &#34;groups&#34;&#xA;        }&#xA;    },&#xA;    &#34;Clustering&#34;: {&#xA;        &#34;ClusterState&#34;: &#34;new&#34;,&#xA;        &#34;ETCDLogLevel&#34;: &#34;error&#34;,&#xA;        &#34;Witness&#34;: false,&#xA;        &#34;TLSManagerListenURL&#34;: &#34;https://wag.server:3434&#34;&#xA;    },&#xA;    &#34;Wireguard&#34;: {&#xA;        &#34;DevName&#34;: &#34;wg0&#34;,&#xA;        &#34;ListenPort&#34;: 53230,&#xA;        &#34;PrivateKey&#34;: &#34;AN EXAMPLE KEY&#34;,&#xA;        &#34;Address&#34;: &#34;192.168.1.1/24&#34;,&#xA;        &#34;MTU&#34;: 1420,&#xA;        &#34;DNS&#34;: [&#34;1.1.1.1&#34;]&#xA;    },&#xA;    &#34;Acls&#34;: {&#xA;        &#34;Groups&#34;: {&#xA;            &#34;group:nerds&#34;: [&#xA;                &#34;daviv.test&#34;,&#xA;                &#34;franky.someone&#34;,&#xA;                &#34;any_username&#34;&#xA;            ]&#xA;        },&#xA;        &#34;Policies&#34;: {&#xA;            &#34;*&#34;: {&#xA;                &#34;Mfa&#34;: [&#xA;                     &#34;10.0.0.2/32 8080/any&#34;&#xA;                ],&#xA;                &#34;Allow&#34;: [&#xA;                    &#34;10.7.7.7/32&#34;,&#xA;                    &#34;google.com&#34;&#xA;                ]&#xA;            },&#xA;            &#34;username&#34;: { &#xA;                &#34;Mfa&#34;: [&#xA;                     &#34;someinternal.service 9100/tcp&#34;&#xA;                ],&#xA;                &#34;Allow&#34;:[ &#34;10.0.0.1/32&#34;]&#xA;            },&#xA;            &#34;group:nerds&#34;: {&#xA;                &#34;Mfa&#34;: [&#xA;                    &#34;192.168.3.4/32&#34;,&#xA;                    &#34;10.0.0.0/24&#34;,&#xA;                    &#34;thing.internal 443/tcp icmp&#34;&#xA;                ],&#xA;                &#34;Allow&#34;: [&#xA;                    &#34;192.168.3.5/32&#34;&#xA;                ],&#xA;                &#34;Deny&#34;: [&#xA;                    &#34;10.0.0.5/32&#34;&#xA;                 ]&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Defining ACL rules&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Policies&lt;/code&gt; section allows you to define what routes should be both captured by the VPN and what ports and protocols are allowed through Wag.&lt;/p&gt; &#xA;&lt;p&gt;Rules use the subnet prefix length to determine which rule applies. The most &lt;em&gt;specific&lt;/em&gt; match is use to determine the level of user access to a route.&lt;br&gt; For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt; &#34;*&#34;: {&#xA;                &#34;Mfa&#34;: [&#xA;                     &#34;10.0.0.0/16&#34;&#xA;                ],&#xA;                &#34;Allow&#34;: [&#xA;                    &#34;10.0.1.1/32&#34;,&#xA;                ]&#xA;            },&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Users will be able to access 10.0.1.1 &lt;strong&gt;without&lt;/strong&gt; MFA as the match is more specific. This change occured in v6.0.0, previously MFA routes would always take precedence.&lt;/p&gt; &#xA;&lt;p&gt;Additionally if multiple policies are defined for a single route they are composed with MFA rules taking preference.&lt;br&gt; For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt; &#34;*&#34;: {&#xA;            &#34;Mfa&#34;: [&#xA;                  &#34;10.0.0.0/16&#34;,&#xA;                  &#34;10.0.1.1/32 22/tcp&#34;,&#xA;            ]&#xA;  },&#xA; &#34;group:users&#34;: {&#xA;            &#34;Allow&#34;: [&#xA;                  &#34;10.0.1.1/32 443/tcp&#34;,&#xA;            ]&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All users will be able to access &lt;code&gt;22/tcp&lt;/code&gt; on the &lt;code&gt;10.0.1.1/32&lt;/code&gt; host, but users in the &lt;code&gt;group:users&lt;/code&gt; will be able to access &lt;code&gt;443/tcp&lt;/code&gt; on that host as well, along with &lt;code&gt;22/tcp&lt;/code&gt; when authorized.&lt;/p&gt; &#xA;&lt;p&gt;As of &lt;strong&gt;[version number, yet to be released]&lt;/strong&gt; you can now define deny rules which will block access to a route.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt; &#34;*&#34;: {&#xA;            &#34;Allow&#34;: [&#xA;                  &#34;10.0.0.0/16&#34;,&#xA;                  &#34;10.0.1.1/32 443/tcp&#34;,&#xA;            ]&#xA;  },&#xA; &#34;group:users&#34;: {&#xA;            &#34;Deny&#34;: [&#xA;                  &#34;10.0.1.1/32 443/tcp&#34;,&#xA;            ]&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Its important to note that the most specific rule effectively creates a new rule &#34;bucket&#34;, so if you do something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;group:nerds&#34;: {&#xA;      &#34;Allow&#34;: [&#xA;            &#34;10.0.0.0/24 443/tcp&#34;&#xA;      ],&#xA;      &#34;Deny&#34;: [&#xA;            &#34;10.0.0.5/32 22/tcp&#34;&#xA;      ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your clients will not be able to access &lt;code&gt;10.0.0.5/32 443/tcp&lt;/code&gt;, as the only rule in the &lt;code&gt;/32&lt;/code&gt; &#34;bucket&#34; is a deny rule. You can solve this by adding the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;group:nerds&#34;: {&#xA;      &#34;Allow&#34;: [&#xA;            &#34;10.0.0.0/24 443/tcp&#34;&#xA;            &#34;10.0.0.5/32 22/tcp&#34;&#xA;      ],&#xA;      &#34;Deny&#34;: [&#xA;            &#34;10.0.0.5/32 22/tcp&#34;&#xA;      ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;group:nerds&#34;: {&#xA;      &#34;Allow&#34;: [&#xA;            &#34;10.0.0.0/24 443/tcp&#34;&#xA;      ],&#xA;      &#34;Deny&#34;: [&#xA;            &#34;10.0.0.0/24 22/tcp&#34;&#xA;      ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As then you&#39;re adding the deny rule to the &lt;code&gt;/24&lt;/code&gt; &#34;bucket&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, It is possible to define what services a user can access by defining port and protocol rules.&lt;br&gt; Currently 3 types of port and protocol rules are supported:&lt;/p&gt; &#xA;&lt;h3&gt;Any&lt;/h3&gt; &#xA;&lt;p&gt;When no other rules are defined or the &lt;code&gt;any&lt;/code&gt; keyword is used wag will allow all services and port combinations.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;1.1.1.1&#34;: Allows all ports and protocols to 1.1.1.1/32&#xA;&#34;1.1.1.1 54/any&#34;: Allows both tcp and udp to 1.1.1.1/32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Single Service&lt;/h3&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;192.168.1.1 22/tcp 53/udp: Fairly self explanatory, allows you to hit 22/tcp and 53/udp on a host&#xA;1.1.1.1 icmp: As icmp doesnt have ports really you dont need it either&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ranges&lt;/h3&gt; &#xA;&lt;p&gt;You can also define a range of ports with a protocol. wag requires that the lower port is first.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;192.168.1.1 22-1024/tcp 23-53/any: Format is low port-high port/service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Limitations&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only supports clients with one &lt;code&gt;AllowedIP&lt;/code&gt;, which is perfect for site to site, or client -&amp;gt; server based architecture.&lt;/li&gt; &#xA; &lt;li&gt;IPv4 only.&lt;/li&gt; &#xA; &lt;li&gt;Linux only&lt;/li&gt; &#xA; &lt;li&gt;Very Modern kernel 5.9+ at least (&amp;gt;5.9 allows loops in ebpf and &lt;code&gt;bpf_link&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Custom templates&lt;/h2&gt; &#xA;&lt;p&gt;With the introduction of the &lt;code&gt;MFATemplatesDirectory&lt;/code&gt; option, you can now specify a directory that contains template files for customising the MFA entry, registration and wireguard config file.&lt;br&gt; An example of all these files can be found in the embedded variants here: &lt;code&gt;internal/webserver/resources/templates&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When the option is set, you must define &lt;em&gt;all&lt;/em&gt; the files this guide is a brief description of what each file is:&lt;br&gt; &lt;code&gt;interface.tmpl&lt;/code&gt;: The wireguard configuration file that is served to clients&lt;br&gt; &lt;code&gt;oidc_error.html&lt;/code&gt;: If a users login to the oidc provider as some issue (i.e user isnt registered for the device)&lt;br&gt; &lt;code&gt;prompt_mfa_totp.html&lt;/code&gt;: Page for taking TOTP code entry&lt;br&gt; &lt;code&gt;prompt_mfa_webauthn.html&lt;/code&gt;: Page for webauthn entry&lt;br&gt; &lt;code&gt;qrcode_registration.html&lt;/code&gt;: When a client registers with the &lt;code&gt;?type=mobile&lt;/code&gt; option set, shows a QR code for the wireguard app on android/ios to simply registration&lt;br&gt; &lt;code&gt;register_mfa_totp.html&lt;/code&gt;: Registration for TOTP that should show a QR code&lt;br&gt; &lt;code&gt;register_mfa_webauth.html&lt;/code&gt;: Page to do webauthn registration&lt;br&gt; &lt;code&gt;register_mfa.html&lt;/code&gt;: If multiple MFA methods are registered this page is displayed giving the user an option of what method to use&lt;br&gt; &lt;code&gt;success.html&lt;/code&gt;: This page is not a template, and is displayed when a user is successfully authed, or if they attempt to access the authorisation endpoint while being authorised&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd internal/router&#xA;sudo go test -v .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sudo is required to load the eBPF program into the kernel.&lt;/p&gt; &#xA;&lt;h2&gt;Building a release&lt;/h2&gt; &#xA;&lt;p&gt;If you havent build the release docker image (used because it has a stable version of glibc) do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd release_builder&#xA;sudo docker build -t wag_builder .&#xA;cd ..&#xA;&#xA;make docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;External contributions&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re looking to add your own features, or bug fixes to wag (thank you!). Please make sure that you&#39;ve written a test for your changes if possible.&lt;br&gt; There are a few &lt;code&gt;_test.go&lt;/code&gt; files around that give example on how to do this.&lt;/p&gt; &#xA;&lt;p&gt;Then open a pull request and we can discuss it there.&lt;/p&gt; &#xA;&lt;h1&gt;Donations and Support&lt;/h1&gt; &#xA;&lt;p&gt;If you like &lt;code&gt;wag&lt;/code&gt; and use it to support your work flow, consider donating to the project. Your donations go directly towards the time and effort I put in, and the amount of support I can provide.&lt;/p&gt; &#xA;&lt;p&gt;You can do this by either using the &lt;code&gt;Support&lt;/code&gt; button on the side or the cryptocurrency wallets detailed below.&lt;/p&gt; &#xA;&lt;p&gt;Monero (XMR):&lt;br&gt; &lt;code&gt;8A8TRqsBKpMMabvt5RxMhCFWcuCSZqGV5L849XQndZB4bcbgkenH8KWJUXinYbF6ySGBznLsunrd1WA8YNPiejGp3FFfPND&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bitcoin (BTC):&lt;br&gt; &lt;code&gt;bc1qm9e9sfrm7l7tnq982nrm6khnsfdlay07h0dxfr&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>