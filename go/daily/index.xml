<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-16T01:33:43Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alibaba/RedisShake</title>
    <updated>2022-11-16T01:33:43Z</updated>
    <id>tag:github.com,2022-11-16:/alibaba/RedisShake</id>
    <link href="https://github.com/alibaba/RedisShake" rel="alternate"></link>
    <summary type="html">&lt;p&gt;redis-shake is a tool for Redis data migration and data filtering. redis-shake 是一个用于 Redis 数据迁移与过滤的工具。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;redis-shake&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alibaba/RedisShake/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/alibaba/RedisShake/actions/workflows/ci.yml/badge.svg?branch=v3&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/RedisShake/wiki&#34;&gt;中文文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;redis-shake is a tool for Redis data migration and data filtering.&lt;/p&gt; &#xA;&lt;h2&gt;Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🚄 High performance&lt;/li&gt; &#xA; &lt;li&gt;✅ Tested on Redis 5.0, Redis 6.0 and Redis 7.0&lt;/li&gt; &#xA; &lt;li&gt;🤗 Support custom filtering rules&lt;/li&gt; &#xA; &lt;li&gt;💪 Support large instance migration&lt;/li&gt; &#xA; &lt;li&gt;💖 Support &lt;code&gt;restore&lt;/code&gt; mode and &lt;code&gt;sync&lt;/code&gt; mode&lt;/li&gt; &#xA; &lt;li&gt;☁️ Support Aliyun Redis and ElastiCache&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For older versions of redis-shake (support codis, twemproxy) please visit &lt;a href=&#34;https://github.com/alibaba/RedisShake/tree/develop&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/07/10/OZrSGutknlI8XNp.png&#34; alt=&#34;redis-shake2.PNG&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/06/30/vU346lVBrNofKzu.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Document&lt;/h1&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Binary package&lt;/h3&gt; &#xA;&lt;p&gt;Download from Release: &lt;a href=&#34;https://github.com/alibaba/RedisShake/releases&#34;&gt;https://github.com/alibaba/RedisShake/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Compile from source&lt;/h3&gt; &#xA;&lt;p&gt;After downloading the source code, run the &lt;code&gt;sh build.sh&lt;/code&gt; command to compile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/alibaba/RedisShake&#xA;cd RedisShake&#xA;sh build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;sync.toml&lt;/code&gt; or &lt;code&gt;restore.toml&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Start redis-shake.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./bin/redis-shake redis-shake.toml&#xA;# or&#xA;./bin/redis-shake restore.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Check data synchronization status.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Configure&lt;/h2&gt; &#xA;&lt;p&gt;The redis-shake configuration file refers to &lt;code&gt;sync.toml&lt;/code&gt; or &lt;code&gt;restore.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Data filtering&lt;/h2&gt; &#xA;&lt;p&gt;redis-shake supports custom filtering rules using lua scripts. redis-shake can be started with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./bin/redis-shake sync.toml filter/xxx.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some following filter templates are provided in &lt;code&gt;filter&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;filter/print.lua&lt;/code&gt;：print all commands&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filter/swap_db.lua&lt;/code&gt;：swap the data of db0 and db1&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Custom filter rules&lt;/h3&gt; &#xA;&lt;p&gt;Refer to &lt;code&gt;filter/print.lua&lt;/code&gt; to create a new lua script, and implement the filter function in the lua script. The arguments of the function are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;id: command id&lt;/li&gt; &#xA; &lt;li&gt;is_base: is the command read from the dump.rdb file&lt;/li&gt; &#xA; &lt;li&gt;group: command group, see the description file under &lt;a href=&#34;https://github.com/redis/redis/tree/unstable/src/commands&#34;&gt;redis/src/commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cmd_name: command name&lt;/li&gt; &#xA; &lt;li&gt;keys: keys in command&lt;/li&gt; &#xA; &lt;li&gt;slots: slots in command&lt;/li&gt; &#xA; &lt;li&gt;db_id: database id&lt;/li&gt; &#xA; &lt;li&gt;timestamp_ms: timestamp of the command in milliseconds. The current version does not support it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The return value is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;code &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0: allow this command to pass&lt;/li&gt; &#xA;   &lt;li&gt;1: this command is not allowed to pass&lt;/li&gt; &#xA;   &lt;li&gt;2: this command should not appear, and let redis-shake exit with an error&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;db_id: redirected db_id&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contribution&lt;/h1&gt; &#xA;&lt;h2&gt;Lua script&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to share more creative lua scripts.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add lua scripts under &lt;code&gt;filters/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add description to &lt;code&gt;README.md&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Redis Module support&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add code under &lt;code&gt;internal/rdb/types&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add a command file under &lt;code&gt;scripts/commands&lt;/code&gt;, and use the script to generate a &lt;code&gt;table.go&lt;/code&gt; file and move it to the &lt;code&gt;internal/commands&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Add test cases under &lt;code&gt;test/cases&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;感谢&lt;/h1&gt; &#xA;&lt;p&gt;redis-shake 旧版是阿里云基于豌豆荚开源的 redis-port 进行二次开发的一个支持 Redis 异构集群实时同步的工具。 redis-shake v3 在 redis-shake 旧版的基础上重新组织代码结构，使其更具可维护性的版本。&lt;/p&gt; &#xA;&lt;p&gt;redis-shake v3 参考借鉴了以下项目：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HDT3213/rdb&#34;&gt;https://github.com/HDT3213/rdb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sripathikrishnan/redis-rdb-tools&#34;&gt;https://github.com/sripathikrishnan/redis-rdb-tools&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mikefarah/yq</title>
    <updated>2022-11-16T01:33:43Z</updated>
    <id>tag:github.com,2022-11-16:/mikefarah/yq</id>
    <link href="https://github.com/mikefarah/yq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;yq is a portable command-line YAML, JSON, XML, CSV and properties processor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;yq&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mikefarah/yq/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/mikefarah/yq.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/mikefarah/yq/total.svg?sanitize=true&#34; alt=&#34;Github Releases (by Release)&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/mikefarah/yq&#34; alt=&#34;Go Report&#34;&gt; &lt;img src=&#34;https://github.com/mikefarah/yq/workflows/CodeQL/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;a lightweight and portable command-line YAML, JSON and XML processor. &lt;code&gt;yq&lt;/code&gt; uses &lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;jq&lt;/a&gt; like syntax but works with yaml files as well as json, xml, properties, csv and tsv. It doesn&#39;t yet support everything &lt;code&gt;jq&lt;/code&gt; does - but it does support the most common operations and functions, and more is being added continuously.&lt;/p&gt; &#xA;&lt;p&gt;yq is written in go - so you can download a dependency free binary for your platform and you are good to go! If you prefer there are a variety of package managers that can be used as well as Docker and Podman, all listed below.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Usage Guide&lt;/h2&gt; &#xA;&lt;p&gt;Read a value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yq &#39;.a.b[0].c&#39; file.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pipe from STDIN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yq &#39;.a.b[0].c&#39; &amp;lt; file.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update a yaml file, inplace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yq -i &#39;.a.b[0].c = &#34;cool&#34;&#39; file.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update using environment variables&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NAME=mike yq -i &#39;.a.b[0].c = strenv(NAME)&#39; file.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Merge multiple files&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# note the use of `ea` to evaluate all the files at once&#xA;# instead of in sequence&#xA;yq ea &#39;. as $item ireduce ({}; . * $item )&#39; path/to/*.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple updates to a yaml file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yq -i &#39;&#xA;  .a.b[0].c = &#34;cool&#34; |&#xA;  .x.y.z = &#34;foobar&#34; |&#xA;  .person.name = strenv(NAME)&#xA;&#39; file.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Convert JSON to YAML&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yq -P sample.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://mikefarah.gitbook.io/yq/&#34;&gt;documentation&lt;/a&gt; for more examples.&lt;/p&gt; &#xA;&lt;p&gt;Take a look at the discussions for &lt;a href=&#34;https://github.com/mikefarah/yq/discussions/categories/q-a&#34;&gt;common questions&lt;/a&gt;, and &lt;a href=&#34;https://github.com/mikefarah/yq/discussions/categories/show-and-tell&#34;&gt;cool ideas&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/mikefarah/yq/releases/latest&#34;&gt;Download the latest binary&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;wget&lt;/h3&gt; &#xA;&lt;p&gt;Use wget to download, gzipped pre-compiled binaries:&lt;/p&gt; &#xA;&lt;p&gt;For instance, VERSION=v4.2.0 and BINARY=yq_linux_amd64&lt;/p&gt; &#xA;&lt;h4&gt;Compressed via tar.gz&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\&#xA;  tar xz &amp;amp;&amp;amp; mv ${BINARY} /usr/bin/yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Plain binary&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq &amp;amp;&amp;amp;\&#xA;    chmod +x /usr/bin/yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Latest version&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &amp;amp;&amp;amp;\&#xA;    chmod +x /usr/bin/yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacOS / Linux via Homebrew:&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux via snap:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;snap install yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Snap notes&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;yq&lt;/code&gt; installs with &lt;a href=&#34;https://docs.snapcraft.io/snap-confinement/6233&#34;&gt;&lt;em&gt;strict confinement&lt;/em&gt;&lt;/a&gt; in snap, this means it doesn&#39;t have direct access to root files. To read root files you can:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo cat /etc/myfile | yq &#39;.a.path&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to write to a root file you can either use &lt;a href=&#34;https://linux.die.net/man/1/sponge&#34;&gt;sponge&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo cat /etc/myfile | yq &#39;.a.path = &#34;value&#34;&#39; | sudo sponge /etc/myfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or write to a temporary file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo cat /etc/myfile | yq &#39;.a.path = &#34;value&#34;&#39; | sudo tee /etc/myfile.tmp&#xA;sudo mv /etc/myfile.tmp /etc/myfile&#xA;rm /etc/myfile.tmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run with Docker or Podman&lt;/h3&gt; &#xA;&lt;h4&gt;Oneshot use:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -v &#34;${PWD}&#34;:/workdir mikefarah/yq [command] [flags] [expression ]FILE...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that you can run &lt;code&gt;yq&lt;/code&gt; in docker without network access and other privileges if you desire, namely &lt;code&gt;--security-opt=no-new-privileges --cap-drop all --network none&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;podman run --rm -v &#34;${PWD}&#34;:/workdir mikefarah/yq [command] [flags] [expression ]FILE...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Pipe in via STDIN:&lt;/h4&gt; &#xA;&lt;p&gt;You&#39;ll need to pass the &lt;code&gt;-i\--interactive&lt;/code&gt; flag to docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -i --rm mikefarah/yq &#39;.this.thing&#39; &amp;lt; myfile.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;podman run -i --rm mikefarah/yq &#39;.this.thing&#39; &amp;lt; myfile.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run commands interactively:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it -v &#34;${PWD}&#34;:/workdir --entrypoint sh mikefarah/yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;podman run --rm -it -v &#34;${PWD}&#34;:/workdir --entrypoint sh mikefarah/yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It can be useful to have a bash function to avoid typing the whole docker command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yq() {&#xA;  docker run --rm -i -v &#34;${PWD}&#34;:/workdir mikefarah/yq &#34;$@&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yq() {&#xA;  podman run --rm -i -v &#34;${PWD}&#34;:/workdir mikefarah/yq &#34;$@&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running as root:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;yq&lt;/code&gt;&#39;s container image no longer runs under root (&lt;a href=&#34;https://github.com/mikefarah/yq/pull/860&#34;&gt;https://github.com/mikefarah/yq/pull/860&lt;/a&gt;). If you&#39;d like to install more things in the container image, or you&#39;re having permissions issues when attempting to read/write files you&#39;ll need to either:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --user=&#34;root&#34; -it --entrypoint sh mikefarah/yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;podman run --user=&#34;root&#34; -it --entrypoint sh mikefarah/yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, in your Dockerfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM mikefarah/yq&#xA;&#xA;USER root&#xA;RUN apk add --no-cache bash&#xA;USER yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Missing timezone data&lt;/h4&gt; &#xA;&lt;p&gt;By default, the alpine image yq uses does not include timezone data. If you&#39;d like to use the &lt;code&gt;tz&lt;/code&gt; operator, you&#39;ll need to include this data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM mikefarah/yq&#xA;&#xA;USER root&#xA;RUN apk add --no-cache tzdata&#xA;USER yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Podman with SELinux&lt;/h4&gt; &#xA;&lt;p&gt;If you are using podman with SELinux, you will need to set the shared volume flag &lt;code&gt;:z&lt;/code&gt; on the volume mount:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-v &#34;${PWD}&#34;:/workdir:z&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Action&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - name: Set foobar to cool&#xA;    uses: mikefarah/yq@master&#xA;    with:&#xA;      cmd: yq -i &#39;.foo.bar = &#34;cool&#34;&#39; &#39;config.yml&#39;&#xA;  - name: Get an entry with a variable that might contain dots or spaces&#xA;    id: get_username&#xA;    uses: mikefarah/yq@master&#xA;    with:&#xA;      cmd: yq &#39;.all.children.[&#34;${{ matrix.ip_address }}&#34;].username&#39; ops/inventories/production.yml&#xA;  - name: Reuse a variable obtained in another step&#xA;    run: echo ${{ steps.get_username.outputs.result }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://mikefarah.gitbook.io/yq/usage/github-action&#34;&gt;https://mikefarah.gitbook.io/yq/usage/github-action&lt;/a&gt; for more.&lt;/p&gt; &#xA;&lt;h3&gt;Go Install:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install github.com/mikefarah/yq/v4@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community Supported Installation methods&lt;/h2&gt; &#xA;&lt;p&gt;As these are supported by the community &lt;span&gt;❤️&lt;/span&gt; - however, they may be out of date with the officially supported releases.&lt;/p&gt; &#xA;&lt;h3&gt;Nix&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix profile install nixpkgs#yq-go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://search.nixos.org/packages?channel=unstable&amp;amp;show=yq-go&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=yq-go&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Webi&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;webi yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://webinstall.dev/&#34;&gt;webi&lt;/a&gt; Supported by @adithyasunil26 (&lt;a href=&#34;https://github.com/webinstall/webi-installers/tree/master/yq&#34;&gt;https://github.com/webinstall/webi-installers/tree/master/yq&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -S go-yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/packages/yq&#34;&gt;&lt;img src=&#34;https://img.shields.io/chocolatey/v/yq.svg?sanitize=true&#34; alt=&#34;Chocolatey&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chocolatey.org/packages/yq&#34;&gt;&lt;img src=&#34;https://img.shields.io/chocolatey/dt/yq.svg?sanitize=true&#34; alt=&#34;Chocolatey&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;choco install yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Supported by @chillum (&lt;a href=&#34;https://chocolatey.org/packages/yq&#34;&gt;https://chocolatey.org/packages/yq&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;and&lt;/p&gt; &#xA;&lt;h3&gt;Winget&lt;/h3&gt; &#xA;&lt;p&gt;winget install yq&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://winget.run/pkg/MikeFarah/yq&#34;&gt;https://winget.run/pkg/MikeFarah/yq&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mac:&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo port selfupdate&#xA;sudo port install yq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Supported by @herbygillot (&lt;a href=&#34;https://ports.macports.org/maintainer/github/herbygillot&#34;&gt;https://ports.macports.org/maintainer/github/herbygillot&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Alpine Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable edge/community repo by adding &lt;code&gt;$MIRROR/alpine/edge/community&lt;/code&gt; to &lt;code&gt;/etc/apk/repositories&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update database index with &lt;code&gt;apk update&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install yq with &lt;code&gt;apk add yq&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported by Tuan Hoang &lt;a href=&#34;https://pkgs.alpinelinux.org/package/edge/community/x86/yq&#34;&gt;https://pkgs.alpinelinux.org/package/edge/community/x86/yq&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;On Ubuntu 16.04 or higher from Debian package:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CC86BB64&#xA;sudo add-apt-repository ppa:rmescandon/yq&#xA;sudo apt update&#xA;sudo apt install yq -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Supported by @rmescandon (&lt;a href=&#34;https://launchpad.net/~rmescandon/+archive/ubuntu/yq&#34;&gt;https://launchpad.net/~rmescandon/+archive/ubuntu/yq&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/&#34;&gt;Detailed documentation with many examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Written in portable go, so you can download a lovely dependency free binary&lt;/li&gt; &#xA; &lt;li&gt;Uses similar syntax as &lt;code&gt;jq&lt;/code&gt; but works with YAML, &lt;a href=&#34;https://mikefarah.gitbook.io/yq/usage/convert&#34;&gt;JSON&lt;/a&gt; and &lt;a href=&#34;https://mikefarah.gitbook.io/yq/usage/xml&#34;&gt;XML&lt;/a&gt; files&lt;/li&gt; &#xA; &lt;li&gt;Fully supports multi document yaml files&lt;/li&gt; &#xA; &lt;li&gt;Supports yaml &lt;a href=&#34;https://mikefarah.gitbook.io/yq/usage/front-matter&#34;&gt;front matter&lt;/a&gt; blocks (e.g. jekyll/assemble)&lt;/li&gt; &#xA; &lt;li&gt;Colorized yaml output&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/datetime&#34;&gt;Date/Time manipulation and formatting with TZ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/traverse-read&#34;&gt;Deeply data structures&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/sort-keys&#34;&gt;Sort keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Manipulate yaml &lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/comment-operators&#34;&gt;comments&lt;/a&gt;, &lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/style&#34;&gt;styling&lt;/a&gt;, &lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/tag&#34;&gt;tags&lt;/a&gt; and &lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/anchor-and-alias-operators&#34;&gt;anchors and aliases&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/v/v4.x/commands/evaluate#flags&#34;&gt;Update inplace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/select#select-and-update-matching-values-in-map&#34;&gt;Complex expressions to select and update&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Keeps yaml formatting and comments when updating (though there are issues with whitespace)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/encode-decode&#34;&gt;Decode/Encode base64 data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/load&#34;&gt;Load content from other files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/v/v4.x/usage/convert&#34;&gt;Convert to/from json/ndjson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/v/v4.x/usage/xml&#34;&gt;Convert to/from xml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/v/v4.x/usage/properties&#34;&gt;Convert to/from properties&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/usage/csv-tsv&#34;&gt;Convert to/from csv/tsv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/v/v4.x/commands/shell-completion&#34;&gt;General shell completion scripts (bash/zsh/fish/powershell)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/operators/reduce&#34;&gt;Reduce&lt;/a&gt; to merge multiple files or sum an array or other fancy things.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/usage/github-action&#34;&gt;Github Action&lt;/a&gt; to use in your automated pipeline (thanks @devorbitus)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq/&#34;&gt;Usage&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://mikefarah.gitbook.io/yq/&#34;&gt;documentation&lt;/a&gt; for more detailed and advanced usage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  yq [flags]&#xA;  yq [command]&#xA;&#xA;Examples:&#xA;&#xA;# yq defaults to &#39;eval&#39; command if no command is specified. See &#34;yq eval --help&#34; for more examples.&#xA;yq &#39;.stuff&#39; &amp;lt; myfile.yml # outputs the data at the &#34;stuff&#34; node from &#34;myfile.yml&#34;&#xA;&#xA;yq -i &#39;.stuff = &#34;foo&#34;&#39; myfile.yml # update myfile.yml inplace&#xA;&#xA;&#xA;Available Commands:&#xA;  completion       Generate the autocompletion script for the specified shell&#xA;  eval             (default) Apply the expression to each document in each yaml file in sequence&#xA;  eval-all         Loads _all_ yaml documents of _all_ yaml files and runs expression once&#xA;  help             Help about any command&#xA;  shell-completion Generate completion script&#xA;&#xA;Flags:&#xA;  -C, --colors                        force print with colors&#xA;  -e, --exit-status                   set exit status if there are no matches or null or false is returned&#xA;  -f, --front-matter string           (extract|process) first input as yaml front-matter. Extract will pull out the yaml content, process will run the expression against the yaml content, leaving the remaining data intact&#xA;      --header-preprocess             Slurp any header comments and separators before processing expression. (default true)&#xA;  -h, --help                          help for yq&#xA;  -I, --indent int                    sets indent level for output (default 2)&#xA;  -i, --inplace                       update the file inplace of first file given.&#xA;  -p, --input-format string           [yaml|y|xml|x] parse format for input. Note that json is a subset of yaml. (default &#34;yaml&#34;)&#xA;  -M, --no-colors                     force print with no colors&#xA;  -N, --no-doc                        Don&#39;t print document separators (---)&#xA;  -n, --null-input                    Don&#39;t read input, simply evaluate the expression given. Useful for creating docs from scratch.&#xA;  -o, --output-format string          [yaml|y|json|j|props|p|xml|x] output format type. (default &#34;yaml&#34;)&#xA;  -P, --prettyPrint                   pretty print, shorthand for &#39;... style = &#34;&#34;&#39;&#xA;  -s, --split-exp string              print each result (or doc) into a file named (exp). [exp] argument must return a string. You can use $index in the expression as the result counter.&#xA;      --unwrapScalar                  unwrap scalar, print the value with no quotes, colors or comments (default true)&#xA;  -v, --verbose                       verbose mode&#xA;  -V, --version                       Print version information and quit&#xA;      --xml-attribute-prefix string   prefix for xml attributes (default &#34;+&#34;)&#xA;      --xml-content-name string       name for xml content (if no attribute name is present). (default &#34;+content&#34;)&#xA;&#xA;Use &#34;yq [command] --help&#34; for more information about a command.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Known Issues / Missing Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yq&lt;/code&gt; attempts to preserve comment positions and whitespace as much as possible, but it does not handle all scenarios (see &lt;a href=&#34;https://github.com/go-yaml/yaml/tree/v3&#34;&gt;https://github.com/go-yaml/yaml/tree/v3&lt;/a&gt; for details)&lt;/li&gt; &#xA; &lt;li&gt;Powershell has its own...&lt;a href=&#34;https://mikefarah.gitbook.io/yq/usage/tips-and-tricks#quotes-in-windows-powershell&#34;&gt;opinions on quoting yq&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://mikefarah.gitbook.io/yq/usage/tips-and-tricks&#34;&gt;tips and tricks&lt;/a&gt; for more common problems and solutions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>crawlab-team/crawlab</title>
    <updated>2022-11-16T01:33:43Z</updated>
    <id>tag:github.com,2022-11-16:/crawlab-team/crawlab</id>
    <link href="https://github.com/crawlab-team/crawlab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Distributed web crawler admin platform for spiders management regardless of languages and frameworks. 分布式爬虫管理平台，支持任何语言和框架&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Crawlab&lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/crawlab-team/crawlab/actions/workflows/dockerpush.yml&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/crawlab-team/crawlab/actions/workflows/dockerpush.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/tikazyq/crawlab&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/tikazyq/crawlab?label=pulls&amp;amp;logo=docker&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/crawlab-team/crawlab/releases&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/crawlab-team/crawlab.svg?logo=github&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/crawlab-team/crawlab/commits/master&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/crawlab-team/crawlab.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/crawlab-team/crawlab/issues?q=is%3Aissue+is%3Aopen+label%3Abug&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/crawlab-team/crawlab/bug.svg?label=bugs&amp;amp;color=red&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/crawlab-team/crawlab/issues?q=is%3Aissue+is%3Aopen+label%3Aenhancement&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/crawlab-team/crawlab/enhancement.svg?label=enhancements&amp;amp;color=cyan&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/crawlab-team/crawlab/raw/master/LICENSE&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/crawlab-team/crawlab.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/crawlab-team/crawlab/raw/master/README-zh.md&#34;&gt;中文&lt;/a&gt; | English&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crawlab-team/crawlab/main/#installation&#34;&gt;Installation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/crawlab-team/crawlab/main/#run&#34;&gt;Run&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/crawlab-team/crawlab/main/#screenshot&#34;&gt;Screenshot&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/crawlab-team/crawlab/main/#architecture&#34;&gt;Architecture&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/crawlab-team/crawlab/main/#integration-with-other-frameworks&#34;&gt;Integration&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/crawlab-team/crawlab/main/#comparison-with-other-frameworks&#34;&gt;Compare&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/crawlab-team/crawlab/main/#community--sponsorship&#34;&gt;Community &amp;amp; Sponsorship&lt;/a&gt; | &lt;a href=&#34;https://github.com/crawlab-team/crawlab/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; | &lt;a href=&#34;https://github.com/crawlab-team/crawlab/raw/master/DISCLAIMER.md&#34;&gt;Disclaimer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Golang-based distributed web crawler management platform, supporting various languages including Python, NodeJS, Go, Java, PHP and various web crawler frameworks including Scrapy, Puppeteer, Selenium.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://demo-pro.crawlab.cn&#34;&gt;Demo&lt;/a&gt; | &lt;a href=&#34;https://docs.crawlab.cn/en/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can follow the &lt;a href=&#34;https://docs.crawlab.cn/en/guide/installation/&#34;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Please open the command line prompt and execute the command below. Make sure you have installed &lt;code&gt;docker-compose&lt;/code&gt; in advance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/crawlab-team/examples&#xA;cd examples/docker/basic&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, you can look into the &lt;code&gt;docker-compose.yml&lt;/code&gt; (with detailed config params) and the &lt;a href=&#34;http://docs.crawlab.cn/en/&#34;&gt;Documentation&lt;/a&gt; for further information.&lt;/p&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Please use &lt;code&gt;docker-compose&lt;/code&gt; to one-click to start up. By doing so, you don&#39;t even have to configure MongoDB database. Create a file named &lt;code&gt;docker-compose.yml&lt;/code&gt; and input the code below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3.3&#39;&#xA;services:&#xA;  master: &#xA;    image: crawlabteam/crawlab:latest&#xA;    container_name: crawlab_example_master&#xA;    environment:&#xA;      CRAWLAB_NODE_MASTER: &#34;Y&#34;&#xA;      CRAWLAB_MONGO_HOST: &#34;mongo&#34;&#xA;    volumes:&#xA;      - &#34;./.crawlab/master:/root/.crawlab&#34;&#xA;    ports:    &#xA;      - &#34;8080:8080&#34;&#xA;    depends_on:&#xA;      - mongo&#xA;&#xA;  worker01: &#xA;    image: crawlabteam/crawlab:latest&#xA;    container_name: crawlab_example_worker01&#xA;    environment:&#xA;      CRAWLAB_NODE_MASTER: &#34;N&#34;&#xA;      CRAWLAB_GRPC_ADDRESS: &#34;master&#34;&#xA;      CRAWLAB_FS_FILER_URL: &#34;http://master:8080/api/filer&#34;&#xA;    volumes:&#xA;      - &#34;./.crawlab/worker01:/root/.crawlab&#34;&#xA;    depends_on:&#xA;      - master&#xA;&#xA;  worker02: &#xA;    image: crawlabteam/crawlab:latest&#xA;    container_name: crawlab_example_worker02&#xA;    environment:&#xA;      CRAWLAB_NODE_MASTER: &#34;N&#34;&#xA;      CRAWLAB_GRPC_ADDRESS: &#34;master&#34;&#xA;      CRAWLAB_FS_FILER_URL: &#34;http://master:8080/api/filer&#34;&#xA;    volumes:&#xA;      - &#34;./.crawlab/worker02:/root/.crawlab&#34;&#xA;    depends_on:&#xA;      - master&#xA;&#xA;  mongo:&#xA;    image: mongo:4.2&#xA;    container_name: crawlab_example_mongo&#xA;    restart: always&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then execute the command below, and Crawlab Master and Worker Nodes + MongoDB will start up. Open the browser and enter &lt;code&gt;http://localhost:8080&lt;/code&gt; to see the UI interface.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Docker Deployment details, please refer to &lt;a href=&#34;https://docs.crawlab.cn/en/guide/installation/docker.html&#34;&gt;relevant documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;h4&gt;Login&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-login.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Home Page&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-home.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Node List&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-node-list.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Spider List&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-spider-list.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Spider Overview&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-spider-detail-overview.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Spider Files&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-spider-detail-files.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Task Log&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-task-detail-logs.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Task Results&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-task-detail-data.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Cron Job&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/screenshot-schedule-detail-overview.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The architecture of Crawlab is consisted of a master node, worker nodes, &lt;a href=&#34;https://github.com/chrislusf/seaweedfs&#34;&gt;SeaweedFS&lt;/a&gt; (a distributed file system) and MongoDB database.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/crawlab-team/images/raw/main/20210729/crawlab-architecture-v0.6.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The frontend app interacts with the master node, which communicates with other components such as MongoDB, SeaweedFS and worker nodes. Master node and worker nodes communicate with each other via &lt;a href=&#34;https://grpc.io&#34;&gt;gRPC&lt;/a&gt; (a RPC framework). Tasks are scheduled by the task scheduler module in the master node, and received by the task handler module in worker nodes, which executes these tasks in task runners. Task runners are actually processes running spider or crawler programs, and can also send data through gRPC (integrated in SDK) to other data sources, e.g. MongoDB.&lt;/p&gt; &#xA;&lt;h3&gt;Master Node&lt;/h3&gt; &#xA;&lt;p&gt;The Master Node is the core of the Crawlab architecture. It is the center control system of Crawlab.&lt;/p&gt; &#xA;&lt;p&gt;The Master Node provides below services:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Task Scheduling;&lt;/li&gt; &#xA; &lt;li&gt;Worker Node Management and Communication;&lt;/li&gt; &#xA; &lt;li&gt;Spider Deployment;&lt;/li&gt; &#xA; &lt;li&gt;Frontend and API Services;&lt;/li&gt; &#xA; &lt;li&gt;Task Execution (you can regard the Master Node as a Worker Node)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The Master Node communicates with the frontend app, and send crawling tasks to Worker Nodes. In the mean time, the Master Node uploads (deploys) spiders to the distributed file system SeaweedFS, for synchronization by worker nodes.&lt;/p&gt; &#xA;&lt;h3&gt;Worker Node&lt;/h3&gt; &#xA;&lt;p&gt;The main functionality of the Worker Nodes is to execute crawling tasks and store results and logs, and communicate with the Master Node through gRPC. By increasing the number of Worker Nodes, Crawlab can scale horizontally, and different crawling tasks can be assigned to different nodes to execute.&lt;/p&gt; &#xA;&lt;h3&gt;MongoDB&lt;/h3&gt; &#xA;&lt;p&gt;MongoDB is the operational database of Crawlab. It stores data of nodes, spiders, tasks, schedules, etc. Task queue is also stored in MongoDB.&lt;/p&gt; &#xA;&lt;h3&gt;SeaweedFS&lt;/h3&gt; &#xA;&lt;p&gt;SeaweedFS is an open source distributed file system authored by &lt;a href=&#34;https://github.com/chrislusf&#34;&gt;Chris Lu&lt;/a&gt;. It can robustly store and share files across a distributed system. In Crawlab, SeaweedFS mainly plays the role as file synchronization system and the place where task log files are stored.&lt;/p&gt; &#xA;&lt;h3&gt;Frontend&lt;/h3&gt; &#xA;&lt;p&gt;Frontend app is built upon &lt;a href=&#34;https://github.com/element-plus/element-plus&#34;&gt;Element-Plus&lt;/a&gt;, a popular &lt;a href=&#34;https://github.com/vuejs/vue-next&#34;&gt;Vue 3&lt;/a&gt;-based UI framework. It interacts with API hosted on the Master Node, and indirectly controls Worker Nodes.&lt;/p&gt; &#xA;&lt;h2&gt;Integration with Other Frameworks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/crawlab-team/crawlab-sdk&#34;&gt;Crawlab SDK&lt;/a&gt; provides some &lt;code&gt;helper&lt;/code&gt; methods to make it easier for you to integrate your spiders into Crawlab, e.g. saving results.&lt;/p&gt; &#xA;&lt;h3&gt;Scrapy&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;code&gt;settings.py&lt;/code&gt; in your Scrapy project, find the variable named &lt;code&gt;ITEM_PIPELINES&lt;/code&gt; (a &lt;code&gt;dict&lt;/code&gt; variable). Add content below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ITEM_PIPELINES = {&#xA;    &#39;crawlab.scrapy.pipelines.CrawlabPipeline&#39;: 888,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, start the Scrapy spider. After it&#39;s done, you should be able to see scraped results in &lt;strong&gt;Task Detail -&amp;gt; Data&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;General Python Spider&lt;/h3&gt; &#xA;&lt;p&gt;Please add below content to your spider files to save results.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# import result saving method&#xA;from crawlab import save_item&#xA;&#xA;# this is a result record, must be dict type&#xA;result = {&#39;name&#39;: &#39;crawlab&#39;}&#xA;&#xA;# call result saving method&#xA;save_item(result)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, start the spider. After it&#39;s done, you should be able to see scraped results in &lt;strong&gt;Task Detail -&amp;gt; Data&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other Frameworks / Languages&lt;/h3&gt; &#xA;&lt;p&gt;A crawling task is actually executed through a shell command. The Task ID will be passed to the crawling task process in the form of environment variable named &lt;code&gt;CRAWLAB_TASK_ID&lt;/code&gt;. By doing so, the data can be related to a task.&lt;/p&gt; &#xA;&lt;h2&gt;Comparison with Other Frameworks&lt;/h2&gt; &#xA;&lt;p&gt;There are existing spider management frameworks. So why use Crawlab?&lt;/p&gt; &#xA;&lt;p&gt;The reason is that most of the existing platforms are depending on Scrapyd, which limits the choice only within python and scrapy. Surely scrapy is a great web crawl framework, but it cannot do everything.&lt;/p&gt; &#xA;&lt;p&gt;Crawlab is easy to use, general enough to adapt spiders in any language and any framework. It has also a beautiful frontend interface for users to manage spiders much more easily.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Framework&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Technology&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Pros&lt;/th&gt; &#xA;   &lt;th&gt;Cons&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Github Stats&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/crawlab-team/crawlab&#34;&gt;Crawlab&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Golang + Vue&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Not limited to Scrapy, available for all programming languages and frameworks. Beautiful UI interface. Naturally support distributed spiders. Support spider management, task management, cron job, result export, analytics, notifications, configurable spiders, online code editor, etc.&lt;/td&gt; &#xA;   &lt;td&gt;Not yet support spider versioning&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/crawlab-team/crawlab&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/crawlab-team/crawlab&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/my8100/scrapydweb&#34;&gt;ScrapydWeb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Python Flask + Vue&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Beautiful UI interface, built-in Scrapy log parser, stats and graphs for task execution, support node management, cron job, mail notification, mobile. Full-feature spider management platform.&lt;/td&gt; &#xA;   &lt;td&gt;Not support spiders other than Scrapy. Limited performance because of Python Flask backend.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/my8100/scrapydweb&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/my8100/scrapydweb&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/Gerapy/Gerapy&#34;&gt;Gerapy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Python Django + Vue&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gerapy is built by web crawler guru &lt;a href=&#34;https://github.com/Germey&#34;&gt;Germey Cui&lt;/a&gt;. Simple installation and deployment. Beautiful UI interface. Support node management, code edit, configurable crawl rules, etc.&lt;/td&gt; &#xA;   &lt;td&gt;Again not support spiders other than Scrapy. A lot of bugs based on user feedback in v1.0. Look forward to improvement in v2.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Gerapy/Gerapy&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Gerapy/Gerapy&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/DormyMo/SpiderKeeper&#34;&gt;SpiderKeeper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Python Flask&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Open-source Scrapyhub. Concise and simple UI interface. Support cron job.&lt;/td&gt; &#xA;   &lt;td&gt;Perhaps too simplified, not support pagination, not support node management, not support spiders other than Scrapy.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/DormyMo/SpiderKeeper&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/DormyMo/SpiderKeeper&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/tikazyq&#34;&gt; &lt;img src=&#34;https://avatars3.githubusercontent.com/u/3393101?s=460&amp;amp;v=4&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/wo10378931&#34;&gt; &lt;img src=&#34;https://avatars2.githubusercontent.com/u/8297691?s=460&amp;amp;v=4&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/yaziming&#34;&gt; &lt;img src=&#34;https://avatars2.githubusercontent.com/u/54052849?s=460&amp;amp;v=4&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/hantmac&#34;&gt; &lt;img src=&#34;https://avatars2.githubusercontent.com/u/7600925?s=460&amp;amp;v=4&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/duanbin0414&#34;&gt; &lt;img src=&#34;https://avatars3.githubusercontent.com/u/50389867?s=460&amp;amp;v=4&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/zkqiang&#34;&gt; &lt;img src=&#34;https://avatars3.githubusercontent.com/u/32983588?s=460&amp;amp;u=83082ddc0a3020279374b94cce70f1aebb220b3d&amp;amp;v=4&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Community &amp;amp; Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt;If you feel Crawlab could benefit your daily work or your company, please add the author&#39;s Wechat account noting &#34;Crawlab&#34; to enter the discussion group. Or you scan the Alipay QR code below to give us a reward to upgrade our teamwork software or buy a coffee.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://crawlab.oss-cn-hangzhou.aliyuncs.com/gitbook/qrcode.png&#34; height=&#34;360&#34;&gt; &lt;img src=&#34;https://crawlab.oss-cn-hangzhou.aliyuncs.com/gitbook/payment.jpg&#34; height=&#34;360&#34;&gt; &lt;/p&gt;</summary>
  </entry>
</feed>