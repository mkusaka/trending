<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-05T01:26:32Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Geniucker/CoGPT</title>
    <updated>2024-03-05T01:26:32Z</updated>
    <id>tag:github.com,2024-03-05:/Geniucker/CoGPT</id>
    <link href="https://github.com/Geniucker/CoGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hmm Copilot or GPT? Who knows. Get access to gpt-4 via copilot.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CoGPT&lt;/h1&gt; &#xA;&lt;p&gt;中文教程见 &lt;a href=&#34;https://blog.geniucker.top/2024/01/26/%E9%80%9A%E8%BF%87-GitHub-Copilot-%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8-gpt-4/&#34;&gt;我的博客&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;发 Issue 和 Discussion 之前请确保你已经搜索过 &lt;a href=&#34;https://github.com/Geniucker/CoGPT/issues&#34;&gt;Issues&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/Geniucker/CoGPT/discussions&#34;&gt;Discussions&lt;/a&gt;。否则会直接关闭。并且对于非 bug 和 新特性，你应该使用 &lt;a href=&#34;https://github.com/Geniucker/CoGPT/discussions&#34;&gt;Discussions&lt;/a&gt; 来提问。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please make sure you have searched &lt;a href=&#34;https://github.com/Geniucker/CoGPT/issues&#34;&gt;Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/Geniucker/CoGPT/discussions&#34;&gt;Discussions&lt;/a&gt; before creating a new one. Otherwise it will be closed directly. And for non-bug and new feature, you should use &lt;a href=&#34;https://github.com/Geniucker/CoGPT/discussions&#34;&gt;Discussions&lt;/a&gt; to ask questions.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Only for network programming learning purposes.&lt;/p&gt; &#xA;&lt;p&gt;The previous version in Python is archieved in &lt;a href=&#34;https://github.com/Geniucker/CoGPT/tree/py&#34;&gt;py&lt;/a&gt; branch, which is not stable and difficult to maintain (there are many problems with async in Python).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Provide an API nearly the same as OpenAI API （with gpt-3.5-turbo and gpt-4).&lt;br&gt; The only difference is that you should use the application token of Copilot instead of OpenAI token.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Get token&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest release for your platform. Unzip it and run &lt;code&gt;cogpt-get-apptoken&lt;/code&gt; (or &lt;code&gt;cogpt-get-apptoken.exe&lt;/code&gt; on Windows).&lt;/p&gt; &#xA;&lt;p&gt;You can set proxy through environment variables or command line arguments. To see the help of command line arguments, run &lt;code&gt;./cogpt-get-apptoken -h&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Returns &lt;code&gt;Hi, I&#39;m CoGPT.&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /health&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Returns &lt;code&gt;{&#34;status&#34;:&#34;OK&#34;}&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /v1/models&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;return available models&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /v1/chat/completions&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;for chat api&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /v1/embeddings&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;for embeddings api&lt;br&gt; Pay attention that this api is &lt;strong&gt;not totally compatible&lt;/strong&gt; with OpenAI API.&lt;br&gt; For &lt;code&gt;input&lt;/code&gt; field, OpenAI API accepts following types:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;string&lt;/code&gt;: The string that will be turned into an embedding.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;array&lt;/code&gt;: The array of strings that will be turned into an embedding.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;array&lt;/code&gt;: The array of integers that will be turned into an embedding.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;array&lt;/code&gt;: The array of arrays containing integers that will be turned into an embedding.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;Unfortunately, this service only accepts the first 2 types as well as the array of arrays containing strings.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deploy&lt;/h3&gt; &#xA;&lt;h4&gt;Warning&lt;/h4&gt; &#xA;&lt;p&gt;This service is not designed to be deployed on public network.&lt;br&gt; The best way to use is to deploy it on your own computer or local network. Or you can deploy it on public network, but only for yourself.&lt;br&gt; &lt;strong&gt;DO NOT&lt;/strong&gt; share your token with others. If a token is accessed from many different IPs, it will be banned. And if too many tokens are requested from one IP, something bad may happen.&lt;br&gt; So again, &lt;strong&gt;ONLY&lt;/strong&gt; for yourself.&lt;/p&gt; &#xA;&lt;h4&gt;Best approach&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Deploy locally on your own computer&lt;/li&gt; &#xA; &lt;li&gt;Deploy on local network for personal use or share in small group&lt;/li&gt; &#xA; &lt;li&gt;Deploy on your own server for personal use&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Bad approach&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Provide public interface for everyone to use&lt;br&gt; In this way, many tokens will be requested from one IP, which will cause problems.&lt;/li&gt; &#xA; &lt;li&gt;Provide public integrade (web) apps (such as ChatGPT-Next-Web)&lt;br&gt; Makint too many requests with one token will cause problems.&lt;/li&gt; &#xA; &lt;li&gt;Deploy on with serverless services (such as Vercel)&lt;br&gt; Serverless services will change IP frequently, and they have short lifetime.&lt;/li&gt; &#xA; &lt;li&gt;Any abuse of the service&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; try any of theses approaches.&lt;/p&gt; &#xA;&lt;h4&gt;Deploy in Docker&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir CoGPT &amp;amp;&amp;amp; cd CoGPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with following content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;&#xA;services:&#xA;  cogpt-api:&#xA;    image: geniucker/cogpt:latest&#xA;    environment:&#xA;      - HOST=0.0.0.0&#xA;    ports:&#xA;      - 8080:8080&#xA;    volumes:&#xA;      - ./db:/app/db&#xA;      - ./log:/app/log&#xA;    restart: unless-stopped&#xA;    container_name: cogpt-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use development version, replace &lt;code&gt;geniucker/cogpt:latest&lt;/code&gt; with &lt;code&gt;geniucker/cogpt:dev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, the service will listen on port 8080. If you want to change the port, edit &lt;code&gt;docker-compose.yml&lt;/code&gt; and change the port in &lt;code&gt;ports&lt;/code&gt; section. For example, if you want to listen on port 80, change &lt;code&gt;8080:8080&lt;/code&gt; to &lt;code&gt;80:8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Other config options can also be changed in &lt;code&gt;environment&lt;/code&gt; section. Or more conveniently, you can edit &lt;code&gt;.env&lt;/code&gt; file (You can copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and edit it). &lt;strong&gt;Note that&lt;/strong&gt; the config for &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;log&lt;/code&gt; should be changed in &lt;code&gt;volumes&lt;/code&gt; section in &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All config options are listed in &lt;a href=&#34;https://raw.githubusercontent.com/Geniucker/CoGPT/main/#config&#34;&gt;Config&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;docker compose up -d&lt;/code&gt; to start the service.&lt;/p&gt; &#xA;&lt;h4&gt;Deploy without Docker&lt;/h4&gt; &#xA;&lt;p&gt;Download the latest release for your platform. Unzip it and run &lt;code&gt;cogpt-api&lt;/code&gt; (or &lt;code&gt;cogpt-api.exe&lt;/code&gt; on Windows).&lt;/p&gt; &#xA;&lt;p&gt;By default, the service will listen on &lt;code&gt;localhost:8080&lt;/code&gt;. For configuration, see &lt;a href=&#34;https://raw.githubusercontent.com/Geniucker/CoGPT/main/#config&#34;&gt;Config&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Run as a service&lt;/h4&gt; &#xA;&lt;h5&gt;Linux&lt;/h5&gt; &#xA;&lt;p&gt;For Linux based on systemd, you can follow the steps below.&lt;/p&gt; &#xA;&lt;p&gt;First, download the latest release for Linux. Unzip it and move &lt;code&gt;cogpt-api&lt;/code&gt; to &lt;code&gt;/opt/cogpt/&lt;/code&gt; and grant it executable permission.&lt;/p&gt; &#xA;&lt;p&gt;Then copy the content of &lt;a href=&#34;https://raw.githubusercontent.com/Geniucker/CoGPT/main/examples/cogpt-api.service&#34;&gt;cogpt-api.service&lt;/a&gt; to &lt;code&gt;/etc/systemd/system/cogpt-api.service&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need to change the config, you should edit &lt;code&gt;/opt/cogpt/.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Finally, run following commands to enable and start the service.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl enable cogpt-api&#xA;sudo systemctl start cogpt-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run &lt;code&gt;sudo systemctl stop cogpt-api&lt;/code&gt; to stop the service.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;sudo systemctl disable cogpt-api&lt;/code&gt; to disable the service.&lt;/p&gt; &#xA;&lt;h5&gt;MacOS&lt;/h5&gt; &#xA;&lt;p&gt;For MacOS, services are based on &lt;code&gt;launchd&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First, download the latest release for MacOS. Unzip it and move &lt;code&gt;cogpt-api&lt;/code&gt; to &lt;code&gt;/opt/cogpt/&lt;/code&gt; and grant it executable permission.&lt;/p&gt; &#xA;&lt;p&gt;Then copy the content of &lt;a href=&#34;https://raw.githubusercontent.com/Geniucker/CoGPT/main/examples/com.cogpt-api.plist&#34;&gt;com.cogpt-api.plist&lt;/a&gt; to &lt;code&gt;/Library/LaunchDaemons/com.cogpt-api.plist&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need to change the config, you should edit &lt;code&gt;/opt/cogpt/.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Finally, run &lt;code&gt;sudo launchctl load /Library/LaunchDaemons/com.cogpt-api.plist&lt;/code&gt; to start the service.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;sudo launchctl unload /Library/LaunchDaemons/com.cogpt-api.plist&lt;/code&gt; to stop the service.&lt;/p&gt; &#xA;&lt;h5&gt;Windows&lt;/h5&gt; &#xA;&lt;p&gt;For Windows, we can use scheduled tasks. You can follow the steps below.&lt;/p&gt; &#xA;&lt;p&gt;First, download the latest release for Windows. Unzip it to a directory. Let&#39;s say &lt;code&gt;C:\CoGPT\&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then create a file &lt;code&gt;cogpt-api-service.ps1&lt;/code&gt; in &lt;code&gt;C:\CoGPT\&lt;/code&gt; with copy content of &lt;a href=&#34;https://raw.githubusercontent.com/Geniucker/CoGPT/main/examples/cogpt-api-service.ps1&#34;&gt;cogpt-api-service.ps1&lt;/a&gt; to it.&lt;/p&gt; &#xA;&lt;p&gt;Start a PowerShell &lt;strong&gt;with administrator permission&lt;/strong&gt; and run following commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cd C:\CoGPT\&#xA;./cogpt-api-service.ps1 enable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here are all commands you can use. All commands should be run in PowerShell &lt;strong&gt;with administrator permission&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;./cogpt-api-service.ps1 enable  # enable and start the service&#xA;./copgt-api-service.ps1 disable # stop and disable the service&#xA;./cogpt-api-service.ps1 start   # start the service&#xA;./cogpt-api-service.ps1 stop    # stop the service&#xA;./cogpt-api-service.ps1 restart # restart the service&#xA;./cogpt-api-service.ps1 status  # check the status of the service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Share Token&lt;/h4&gt; &#xA;&lt;p&gt;If you want to share this service with your friends, it&#39;s not safe to directly share your GitHub app token. This feature is designed for this situation. You can create map that maps so-called share token to real GitHub app token.&lt;/p&gt; &#xA;&lt;p&gt;The first way is to set environment variable or modify &lt;code&gt;.env&lt;/code&gt; environment variable file. You should set &lt;code&gt;SHARE_TOKEN&lt;/code&gt; to a string like &lt;code&gt;share-xxxxxxx1:ghu_xxxxxxx1,share-xxxxxxx2:ghu_xxxxxxx2&lt;/code&gt;. The format is &lt;code&gt;share-token:real-token,share-token:real-token&lt;/code&gt;. You can add as many pairs as you want.&lt;/p&gt; &#xA;&lt;p&gt;The other way is to use command line argument. You can run &lt;code&gt;./cogpt-api -share-token share-xxxxxxx1:ghu_xxxxxxx1,share-xxxxxxx2:ghu_xxxxxxx2&lt;/code&gt; to start the service. You can add as many pairs as you want.&lt;/p&gt; &#xA;&lt;p&gt;If you set as above, when you make a request with a token that starts with &lt;code&gt;share-&lt;/code&gt;, the service will use the real token mapped to the share token. If you make a request with a token that starts with &lt;code&gt;ghu_&lt;/code&gt;, the service will use the token directly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that&lt;/strong&gt; share tokens must start with &lt;code&gt;share-&lt;/code&gt;. Maps that don&#39;t start with &lt;code&gt;share-&lt;/code&gt; will be ignored.&lt;/p&gt; &#xA;&lt;p&gt;To generate a random share token, you can download the latest release for your platform. Unzip it and run &lt;code&gt;./gen-share-token&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;.env&lt;/code&gt; or set &lt;strong&gt;environment variables&lt;/strong&gt; or &lt;strong&gt;command line arguments&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here are the config options and their default values (&lt;strong&gt;.env or environment variables&lt;/strong&gt;):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;keys&lt;/th&gt; &#xA;   &lt;th&gt;default&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Host to listen on&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Port to listen on&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CACHE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to cache tokens in sqlite database. If false, tokens will be cached in memory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CACHE_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;db/cache.sqlite3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to sqlite database. Only used if &lt;code&gt;CACHE&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to enable debug mode. If true, the service will print debug info&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LOG_LEVEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Log level.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SHARE_TOKEN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maps of share-token and real token. For example, &lt;code&gt;SHARE_TOKEN=share-xxxxxxx1:ghu_xxxxxxx1,share-xxxxxxx2:ghu_xxxxxxx2&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For &lt;strong&gt;command line arguments&lt;/strong&gt;, run &lt;code&gt;./cogpt-api -h&lt;/code&gt; to see the help message.&lt;/p&gt; &#xA;&lt;p&gt;Precedence: &lt;strong&gt;command line arguments&lt;/strong&gt; &amp;gt; &lt;strong&gt;environment variables&lt;/strong&gt; &amp;gt; &lt;strong&gt;.env&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Proxy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Environment variables for proxy&lt;/strong&gt; are also supported. They are &lt;code&gt;ALL_PROXY&lt;/code&gt;, &lt;code&gt;HTTPS_PROXY&lt;/code&gt; and &lt;code&gt;HTTP_PROXY&lt;/code&gt;. You can also use &lt;strong&gt;command line arguments&lt;/strong&gt; to set proxy. Run &lt;code&gt;./cogpt-api -h&lt;/code&gt; to see the help message. Precedence: &lt;strong&gt;command line arguments&lt;/strong&gt; &amp;gt; &lt;strong&gt;environment variables&lt;/strong&gt; (&lt;code&gt;ALL_PROXY&lt;/code&gt; &amp;gt; &lt;code&gt;HTTPS_PROXY&lt;/code&gt; &amp;gt; &lt;code&gt;HTTP_PROXY&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aaamoon/copilot-gpt4-service&#34;&gt;copilot-gpt4-service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jellydn/CopilotChat.nvim&#34;&gt;CopilogChat.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Geniucker/CoGPT/main/LICENSE&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#Geniucker/CoGPT&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=Geniucker/CoGPT&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=Geniucker/CoGPT&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=Geniucker/CoGPT&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>jovandeginste/payme</title>
    <updated>2024-03-05T01:26:32Z</updated>
    <id>tag:github.com,2024-03-05:/jovandeginste/payme</id>
    <link href="https://github.com/jovandeginste/payme" rel="alternate"></link>
    <summary type="html">&lt;p&gt;QR code generator (ASCII &amp; PNG) for SEPA payments&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QR code generator (ASCII &amp;amp; PNG) for SEPA payments&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/jovandeginste/payme&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/jovandeginste/payme&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/jovandeginste/payme&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/jovandeginste/payme&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githack.com/wiki/jovandeginste/payme/coverage.html&#34;&gt;&lt;img src=&#34;https://github.com/jovandeginste/payme/wiki/coverage.svg?sanitize=true&#34; alt=&#34;Go Coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;This tool makes it easier for people (in Europe) to pay with bank transfers. It does not serve as a payment gateway or anything similar. It does no payment verification at all, it simply provides the necessary payment information in a QR code, which may be scanned by the person who wants to pay.&lt;/p&gt; &#xA;&lt;p&gt;The QR code contains the information necessary for a bank transaction in the form of a &lt;a href=&#34;https://epc-qr.eu/&#34;&gt;SEPA credit transfer&lt;/a&gt;. It can be used to prefill the transaction form if your &lt;a href=&#34;https://raw.githubusercontent.com/jovandeginste/payme/master/#Support&#34;&gt;banking app supports&lt;/a&gt; payment by QR code.&lt;/p&gt; &#xA;&lt;p&gt;The process of generating the QR code is entirely local and offline. It can be printed in ASCII in the terminal, or exported as a PNG for inclusion in eg. a web page or a mail.&lt;/p&gt; &#xA;&lt;p&gt;One QR code can be used without limit, but will always contain the same payment information: amount, remittance message, destination account. More than one person can scan the same code to pay the same amount (eg. split a bill with friends), or one person can scan the code on a recurring base (eg. you pay your internet invoice every month and it&#39;s a fixed price)&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go install github.com/jovandeginste/payme@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Generate SEPA payment QR code&#xA;&#xA;Usage:&#xA;  payme [flags]&#xA;&#xA;Flags:&#xA;      --amount float        Amount of the transaction&#xA;      --bic string          BIC of the beneficiary&#xA;      --character-set int   QR code character set (default 2)&#xA;      --debug               print debug output&#xA;      --file string         write code to file, leave empty for stdout&#xA;  -h, --help                help for payme&#xA;      --iban string         IBAN of the beneficiary&#xA;      --name string         Name of the beneficiary&#xA;      --output string       output type: png or stdout (default &#34;stdout&#34;)&#xA;      --purpose string      Purpose of the transaction&#xA;      --remittance string   Remittance (message)&#xA;      --structured          Make the remittance (message) structured&#xA;      --qr-version int         QR code version (default 2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can set some default values in your ENV, eg.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PAYME_IBAN=DE71110220330123456789&#xA;export PAYME_NAME=&#34;Franz Mustermänn&#34;&#xA;export PAYME_BIC=BHBLDEHHXXX&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate QR code as text, print on the console:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ payme \&#xA;  --name &#34;Franz Mustermänn&#34; \&#xA;  --iban &#34;DE71110220330123456789&#34; \&#xA;  --amount 12.3 \&#xA;  --remittance &#34;RF18539007547034&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate QR code as png, save as file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ payme \&#xA;  --name &#34;Franz Mustermänn&#34; \&#xA;  --iban &#34;DE71110220330123456789&#34; \&#xA;  --amount 12.3 \&#xA;  --remittance &#34;RF18539007547034&#34; \&#xA;  --output png \&#xA;  --file QR.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Please provide feedback if your banking app supports or does not support these QR codes.&lt;/p&gt; &#xA;&lt;p&gt;The QR code is tested with the mobile apps of these banks:&lt;/p&gt; &#xA;&lt;h3&gt;Belgium&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Bank&lt;/th&gt; &#xA;   &lt;th&gt;Support&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Belfius&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fortis&lt;/td&gt; &#xA;   &lt;td&gt;Problems with characters in the remittance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KBC&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Single_Euro_Payments_Area&#34;&gt;https://en.wikipedia.org/wiki/Single_Euro_Payments_Area&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/EPC_QR_code&#34;&gt;https://en.wikipedia.org/wiki/EPC_QR_code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://epc-qr.eu/&#34;&gt;https://epc-qr.eu/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>