<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-21T01:35:58Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>noborus/ov</title>
    <updated>2023-01-21T01:35:58Z</updated>
    <id>tag:github.com,2023-01-21:/noborus/ov</id>
    <link href="https://github.com/noborus/ov" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸŽ‘Feature-rich terminal-based text viewer. It is a so-called terminal pager.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ov - feature rich terminal pager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/noborus/ov&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/noborus/ov&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/noborus/ov/actions&#34;&gt;&lt;img src=&#34;https://github.com/noborus/ov/workflows/Go/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/noborus/ov&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/noborus/ov&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ov is a terminal pager.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ov&lt;/code&gt; can be used instead of &lt;code&gt;less&lt;/code&gt; or &lt;code&gt;more&lt;/code&gt; or &lt;code&gt;tail -f&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ov&lt;/code&gt; also has an effective function for tabular text.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/noborus/ov/master/docs/ov1.png&#34; alt=&#34;ov1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- vscode-markdown-toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#feature&#34;&gt;Feature&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1.1. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#not-supported&#34;&gt;Not supported&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2.1. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#deb-package&#34;&gt;deb package&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.2. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#rpm-package&#34;&gt;rpm package&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.3. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#macports-(macos)&#34;&gt;MacPorts (macOS)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.4. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#homebrew(macos-or-linux)&#34;&gt;Homebrew(macOS or Linux)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.5. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#pkg-(freebsd)&#34;&gt;pkg (FreeBSD)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.6. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#arch-linux&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.7. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#nix-(nixos,-linux,-or-macos)&#34;&gt;nix (nixOS, Linux, or macOS)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.8. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#binary&#34;&gt;Binary&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.9. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#go-install&#34;&gt;go install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.10. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#go-get(details-or-developer-version)&#34;&gt;go get(details or developer version)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;3&#34;&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;3.1. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#basic-usage&#34;&gt;Basic usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.2. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#config&#34;&gt;Config&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.3. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#header&#34;&gt;Header&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.4. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#column-mode&#34;&gt;Column mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.5. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#column-rainbow-mode&#34;&gt;Column rainbow mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.6. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#wrap/nowrap&#34;&gt;Wrap/NoWrap&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.7. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#alternate-rows&#34;&gt;Alternate-Rows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.8. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#section&#34;&gt;Section&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.9. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#follow-mode&#34;&gt;Follow mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.10. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#follow-all-mode&#34;&gt;Follow all mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.11. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#follow-section-mode&#34;&gt;Follow section mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.12. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#exec-mode&#34;&gt;Exec mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.13. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#search&#34;&gt;Search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.14. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#mark&#34;&gt;Mark&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.15. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#watch&#34;&gt;Watch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.16. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#mouse-support&#34;&gt;Mouse support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.17. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#multi-color-highlight&#34;&gt;Multi color highlight&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.18. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#plain&#34;&gt;Plain&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.19. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#jump-target&#34;&gt;Jump target&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.20. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#view-mode&#34;&gt;View mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;4&#34;&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#command-option&#34;&gt;Command option&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;5&#34;&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#key-bindings&#34;&gt;Key bindings&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;6&#34;&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#customize&#34;&gt;Customize&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;6.1. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#style-customization&#34;&gt;Style customization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;6.2. &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#key-binding-customization&#34;&gt;Key binding customization&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- vscode-markdown-toc-config&#xA;&#x9;numbering=true&#xA;&#x9;autoSave=true&#xA;&#x9;/vscode-markdown-toc-config --&gt; &#xA;&lt;!-- /vscode-markdown-toc --&gt; &#xA;&lt;h2&gt;1. &lt;a name=&#34;feature&#34;&gt;&lt;/a&gt;Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports fixed &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#header&#34;&gt;header&lt;/a&gt; line display (both wrap/nowrap).&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#column-mode&#34;&gt;column mode&lt;/a&gt;, which recognizes columns by delimiter.&lt;/li&gt; &#xA; &lt;li&gt;Also, in column mode, there is a &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#column-rainbow-mode&#34;&gt;column-rainbow&lt;/a&gt; mode that colors each column.&lt;/li&gt; &#xA; &lt;li&gt;Supports section-by-section movement, splitting &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#section&#34;&gt;sections&lt;/a&gt; by delimiter.&lt;/li&gt; &#xA; &lt;li&gt;Dynamic &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#wrap/nowrap&#34;&gt;wrap/nowrap&lt;/a&gt; switchable.&lt;/li&gt; &#xA; &lt;li&gt;Supports alternating row styling.&lt;/li&gt; &#xA; &lt;li&gt;Shortcut keys are &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#key-binding-customization&#34;&gt;customizable&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The style of the effect is &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#style-customization&#34;&gt;customizable&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#follow-mode&#34;&gt;follow-mode&lt;/a&gt; (like tail -f).&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#follow-section-mode&#34;&gt;follow-section&lt;/a&gt;, which is displayed when the section is updated.&lt;/li&gt; &#xA; &lt;li&gt;Supports following multiple files and switching when updated(&lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#follow-all-mode&#34;&gt;follow-all&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Supports the &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#exec-mode&#34;&gt;execution&lt;/a&gt; of commands that toggle both stdout and stder for display.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#watch&#34;&gt;watch&lt;/a&gt; mode, which reads files on a regular basis.&lt;/li&gt; &#xA; &lt;li&gt;Supports incremental &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#search&#34;&gt;search&lt;/a&gt; and regular expression search.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#multi-color-highlight&#34;&gt;multi-color&lt;/a&gt; to color each after multiple.&lt;/li&gt; &#xA; &lt;li&gt;Better support for Unicode and East Asian Width.&lt;/li&gt; &#xA; &lt;li&gt;Supports compressed files (gzip, bzip2, zstd, lz4, xz).&lt;/li&gt; &#xA; &lt;li&gt;Suitable for tabular text. &lt;a href=&#34;https://noborus.github.io/ov/psql&#34;&gt;psql&lt;/a&gt;, &lt;a href=&#34;https://noborus.github.io/ov/mysql/&#34;&gt;mysql&lt;/a&gt;, &lt;a href=&#34;https://noborus.github.io/ov/&#34;&gt;etc...&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1. &lt;a name=&#34;not-supported&#34;&gt;&lt;/a&gt;Not supported&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Does not support syntax highlighting for file types (source code, markdown, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Does not support Filter function (&lt;code&gt;&amp;amp;pattern&lt;/code&gt; equivalent of &lt;code&gt;less&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Does not support files that are too large to fit in memory&lt;/li&gt; &#xA; &lt;li&gt;Does not support follow by file name when the file descriptor changes(equivalent to &lt;code&gt;tail -F&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. &lt;a name=&#34;install&#34;&gt;&lt;/a&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;2.1. &lt;a name=&#34;deb-package&#34;&gt;&lt;/a&gt;deb package&lt;/h3&gt; &#xA;&lt;p&gt;You can download the package from &lt;a href=&#34;https://github.com/noborus/ov/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -L -O https://github.com/noborus/ov/releases/download/vx.x.x/ov_x.x.x-1_amd64.deb&#xA;sudo dpkg -i ov_x.x.x-1_amd64.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.2. &lt;a name=&#34;rpm-package&#34;&gt;&lt;/a&gt;rpm package&lt;/h3&gt; &#xA;&lt;p&gt;You can download the package from &lt;a href=&#34;https://github.com/noborus/ov/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo rpm -ivh https://github.com/noborus/ov/releases/download/vx.x.x/ov_x.x.x-1_amd64.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.3. &lt;a name=&#34;macports-(macos)&#34;&gt;&lt;/a&gt;MacPorts (macOS)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo port install ov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.4. &lt;a name=&#34;homebrew(macos-or-linux)&#34;&gt;&lt;/a&gt;Homebrew(macOS or Linux)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install noborus/tap/ov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.5. &lt;a name=&#34;pkg-(freebsd)&#34;&gt;&lt;/a&gt;pkg (FreeBSD)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pkg install ov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.6. &lt;a name=&#34;arch-linux&#34;&gt;&lt;/a&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;You can install ov using an &lt;a href=&#34;https://wiki.archlinux.org/title/AUR_helpers&#34;&gt;AUR helper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;AUR package: &lt;a href=&#34;https://aur.archlinux.org/packages/ov-bin&#34;&gt;https://aur.archlinux.org/packages/ov-bin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.7. &lt;a name=&#34;nix-(nixos,-linux,-or-macos)&#34;&gt;&lt;/a&gt;nix (nixOS, Linux, or macOS)&lt;/h3&gt; &#xA;&lt;p&gt;ov is available as a nix package. You can install it with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;nix profile install nixpkgs#ov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you use flakes, or using nix-env otherwise:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;nix-env -iA nixpkgs.ov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.8. &lt;a name=&#34;binary&#34;&gt;&lt;/a&gt;Binary&lt;/h3&gt; &#xA;&lt;p&gt;You can download the binary from &lt;a href=&#34;https://github.com/noborus/ov/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -L -O https://github.com/noborus/ov/releases/download/vx.x.x/ov_x.x.x_linux_amd64.zip&#xA;unzip ov_x.x.x_linux_amd64.zip&#xA;sudo install ov /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.9. &lt;a name=&#34;go-install&#34;&gt;&lt;/a&gt;go install&lt;/h3&gt; &#xA;&lt;p&gt;It will be installed in $GOPATH/bin by the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go install github.com/noborus/ov@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.10. &lt;a name=&#34;go-get(details-or-developer-version)&#34;&gt;&lt;/a&gt;go get(details or developer version)&lt;/h3&gt; &#xA;&lt;p&gt;First of all, download only with the following command without installing it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go get -d github.com/noborus/ov&#xA;cd $GOPATH/src/github.com/noborus/ov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, to install to $GOPATH/bin, run the make install command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, install it in a PATH location for other users to use (For example, in /usr/local/bin).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;make&#xA;sudo install ov /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. &lt;a name=&#34;usage&#34;&gt;&lt;/a&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;3.1. &lt;a name=&#34;basic-usage&#34;&gt;&lt;/a&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;ov supports open file name or standard input.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov filename&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cat filename|ov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Used by other commands by setting the environment variable &lt;strong&gt;PAGER&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;export PAGER=ov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://noborus.github.io/ov/&#34;&gt;ov site&lt;/a&gt; for more use cases.&lt;/p&gt; &#xA;&lt;h3&gt;3.2. &lt;a name=&#34;config&#34;&gt;&lt;/a&gt;Config&lt;/h3&gt; &#xA;&lt;p&gt;You can set style and key bindings in the configuration file.&lt;/p&gt; &#xA;&lt;p&gt;ov will look for a configuration file in the following paths in descending order:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-filepath&#34;&gt;$XDG_CONFIG_HOME/ov/config.yaml&#xA;$HOME/.config/ov/config.yaml&#xA;$HOME/.ov.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-filepath&#34;&gt;%USERPROFILE%/.config/ov/config.yaml&#xA;%USERPROFILE%/.ov.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;config.yaml&lt;/code&gt; file in one of the above directories. If the file is in the user home directory, it should be named &lt;code&gt;.ov.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to the sample &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/ov.yaml&#34;&gt;ov.yaml&lt;/a&gt; configuration file.&lt;/p&gt; &#xA;&lt;p&gt;If you like &lt;code&gt;less&lt;/code&gt; key bindings, copy &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/ov-less.yaml&#34;&gt;ov-less.yaml&lt;/a&gt; and use it.&lt;/p&gt; &#xA;&lt;h3&gt;3.3. &lt;a name=&#34;header&#34;&gt;&lt;/a&gt;Header&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;--header&lt;/code&gt; (&lt;code&gt;-H&lt;/code&gt;) option fixedly displays the specified number of lines.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --header 1 README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When used with the &lt;code&gt;--skip-lines&lt;/code&gt; option, it hides the number of lines specified by skip and then displays the header.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --skip-lines 1 --header 1 README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.4. &lt;a name=&#34;column-mode&#34;&gt;&lt;/a&gt;Column mode&lt;/h3&gt; &#xA;&lt;p&gt;Specify the delimiter with &lt;code&gt;--column-delimiter&lt;/code&gt; and set it to &lt;code&gt;--column-mode&lt;/code&gt; to highlight the column.&lt;/p&gt; &#xA;&lt;p&gt;After startup, switch the display in column mode (default key is &lt;code&gt;c&lt;/code&gt;). You can also enter a column-delimiter after startup (default key is &lt;code&gt;d&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --column-delimiter &#34;,&#34; --column-mode test.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.5. &lt;a name=&#34;column-rainbow-mode&#34;&gt;&lt;/a&gt;Column rainbow mode&lt;/h3&gt; &#xA;&lt;p&gt;You can also color each column individually in column mode. Specify &lt;code&gt;--column-rainbow&lt;/code&gt; in addition to the &lt;code&gt;--column-mode&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;After startup, switch the display with column rainbow (default key is &lt;code&gt;ctrl+r&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;3.6. &lt;a name=&#34;wrap/nowrap&#34;&gt;&lt;/a&gt;Wrap/NoWrap&lt;/h3&gt; &#xA;&lt;p&gt;Supports switching between wrapping and not wrapping lines.&lt;/p&gt; &#xA;&lt;p&gt;The option is &lt;code&gt;--wrap&lt;/code&gt;, specify &lt;code&gt;--wrap=false&lt;/code&gt; if you do not want to wrap. After startup, toggle display with wrap (default key &lt;code&gt;w&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;3.7. &lt;a name=&#34;alternate-rows&#34;&gt;&lt;/a&gt;Alternate-Rows&lt;/h3&gt; &#xA;&lt;p&gt;Alternate row styles with the &lt;code&gt;--alternate-rows&lt;/code&gt;(&lt;code&gt;-C&lt;/code&gt;) option The style can be set with &lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#style-customization&#34;&gt;Style customization&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --alternate-rows test.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.8. &lt;a name=&#34;section&#34;&gt;&lt;/a&gt;Section&lt;/h3&gt; &#xA;&lt;p&gt;You specify &lt;code&gt;--section-delimiter&lt;/code&gt;, you can move up and down in section units. The start of the section can be adjusted with &lt;code&gt;--section-start&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/noborus/ov/master/docs/section.png&#34; alt=&#34;section.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The section-delimiter is written in a regular expression (for example: &#34;^#&#34;). (Line breaks are not included in matching lines).&lt;/p&gt; &#xA;&lt;p&gt;For example, if you specify &#34;^diff&#34; for a diff that contains multiple files, you can move the diff for each file.&lt;/p&gt; &#xA;&lt;h3&gt;3.9. &lt;a name=&#34;follow-mode&#34;&gt;&lt;/a&gt;Follow mode&lt;/h3&gt; &#xA;&lt;p&gt;Output appended data and move it to the bottom line (like &lt;code&gt;tail -f&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --follow-mode /var/log/syslog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;(while :; do echo random-$RANDOM; sleep 0.1; done;)|./ov  --follow-mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.10. &lt;a name=&#34;follow-all-mode&#34;&gt;&lt;/a&gt;Follow all mode&lt;/h3&gt; &#xA;&lt;p&gt;Same as follow-mode, and switches to the last updated file when there are multiple files.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --follow-all /var/log/nginx/access.log /var/log/nginx/error.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.11. &lt;a name=&#34;follow-section-mode&#34;&gt;&lt;/a&gt;Follow section mode&lt;/h3&gt; &#xA;&lt;p&gt;Follow mode is line-by-line, while follow section mode is section-by-section. Follow section mode displays the bottom section. The following example is displayed from the header (#) at the bottom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --section-delimiter &#34;^#&#34; --follow-section README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noborus/ov/master/#watch&#34;&gt;Watch&lt;/a&gt; mode is a mode in which &lt;code&gt;--follow-section&lt;/code&gt; and &lt;code&gt;--section-delimiter &#34;^\f&#34;&lt;/code&gt; are automatically set.&lt;/p&gt; &#xA;&lt;h3&gt;3.12. &lt;a name=&#34;exec-mode&#34;&gt;&lt;/a&gt;Exec mode&lt;/h3&gt; &#xA;&lt;p&gt;Execute the command to display stdout/stderr separately. Arguments after (&lt;code&gt;--&lt;/code&gt;) are interpreted as command arguments.&lt;/p&gt; &#xA;&lt;p&gt;Shows the stderr screen as soon as an error occurs, when used with &lt;code&gt;--follow-all&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --follow-all --exec -- make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.13. &lt;a name=&#34;search&#34;&gt;&lt;/a&gt;Search&lt;/h3&gt; &#xA;&lt;p&gt;Search by forward search &lt;code&gt;/&lt;/code&gt; key(default) or the backward search &lt;code&gt;?&lt;/code&gt; key(defualt). Search can be toggled between incremental search, regular expression search, and case sensitivity. Displayed when the following are enabled in the search input prompt:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;display&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;(Default)key&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;command option&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Incremental search&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;(I)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;alt+i&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;--incremental&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Regular expression search&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;(R)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;alt+r&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;--regexp-search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Case sensitive&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;(Aa)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;alt+c&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-i, --case-sensitive&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;3.14. &lt;a name=&#34;mark&#34;&gt;&lt;/a&gt;Mark&lt;/h3&gt; &#xA;&lt;p&gt;Mark the display position with the &lt;code&gt;m&lt;/code&gt; key(default). The mark is decorated with &lt;code&gt;StyleMarkLine&lt;/code&gt; and &lt;code&gt;MarkStyleWidth&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Marks can be erased individually with the &lt;code&gt;M&lt;/code&gt; key(default). It is also possible to delete all marks with the &lt;code&gt;ctrl + delete&lt;/code&gt; key(default).&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;&amp;gt;&lt;/code&gt;next and &lt;code&gt;&amp;lt;&lt;/code&gt;previous (default) key to move to the marked position.&lt;/p&gt; &#xA;&lt;h3&gt;3.15. &lt;a name=&#34;watch&#34;&gt;&lt;/a&gt;Watch&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ov&lt;/code&gt; has a watch mode that reads the file every N seconds and adds it to the end. When you reach EOF, add &#39;\f&#39; instead. Go further to the last section. The default is&#39;section-delimiter&#39;, so the last loaded content is displayed.&lt;/p&gt; &#xA;&lt;p&gt;for example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --watch 1 /proc/meminfo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.16. &lt;a name=&#34;mouse-support&#34;&gt;&lt;/a&gt;Mouse support&lt;/h3&gt; &#xA;&lt;p&gt;The ov makes the mouse support its control. This can be disabled with the option &lt;code&gt;--disable-mouse&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If mouse support is enabled, tabs and line breaks will be interpreted correctly when copying.&lt;/p&gt; &#xA;&lt;p&gt;Copying to the clipboard uses &lt;a href=&#34;https://github.com/atotto/clipboard&#34;&gt;atotto/clipboard&lt;/a&gt;. For this reason, the &#39;xclip&#39; or &#39;xsel&#39; command is required in Linux/Unix environments.&lt;/p&gt; &#xA;&lt;p&gt;Selecting the range with the mouse and then left-clicking will copy it to the clipboard.&lt;/p&gt; &#xA;&lt;p&gt;Pasting in ov is done with the middle button. In other applications, it is pasted from the clipboard (often by pressing the right-click).&lt;/p&gt; &#xA;&lt;h3&gt;3.17. &lt;a name=&#34;multi-color-highlight&#34;&gt;&lt;/a&gt;Multi color highlight&lt;/h3&gt; &#xA;&lt;p&gt;This feature styles multiple words individually. &lt;code&gt;.&lt;/code&gt;key(defualt) enters multi-word input mode. Enter multiple words (regular expressions) separated by spaces.&lt;/p&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;error info warn debug&lt;/code&gt; will color errors red, info cyan, warn yellow, and debug magenta.&lt;/p&gt; &#xA;&lt;p&gt;It can also be specified with the command line option &lt;code&gt;--multi-color&lt;/code&gt;(or &lt;code&gt;-M&lt;/code&gt;). For command line options, pass them separated by ,(comma).&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --multi-color &#34;ERROR,WARN,INFO,DEBUG,not,^.{24}&#34; access.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/noborus/ov/master/docs/multi-color.png&#34; alt=&#34;multi-color.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3.18. &lt;a name=&#34;plain&#34;&gt;&lt;/a&gt;Plain&lt;/h3&gt; &#xA;&lt;p&gt;Supports undecorating ANSI escape sequences. The option is &lt;code&gt;--plain&lt;/code&gt; (or &lt;code&gt;-p&lt;/code&gt;). After startup, toggle the original decoration (default key &lt;code&gt;ctrl+e&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;3.19. &lt;a name=&#34;jump-target&#34;&gt;&lt;/a&gt;Jump target&lt;/h3&gt; &#xA;&lt;p&gt;You can specify the lines to be displayed in the search results. This function is similar to &lt;code&gt;--jump-target&lt;/code&gt; of &lt;code&gt;less&lt;/code&gt;. Positive numbers are displayed downwards by the number of lines from the top(1). Negative numbers are displayed up by the number of lines from the bottom(-1). . (dot) can be used to specify a percentage. .5 is the middle of the screen(.5). You can also specify a percentage, such as (50%).&lt;/p&gt; &#xA;&lt;p&gt;This option can be specified with &lt;code&gt;--jump-target&lt;/code&gt;(or &lt;code&gt;-j&lt;/code&gt;). It can be entered after startup (default key &lt;code&gt;j&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;3.20. &lt;a name=&#34;view-mode&#34;&gt;&lt;/a&gt;View mode&lt;/h3&gt; &#xA;&lt;p&gt;You may want to use some modes in combination. In that case, you can set it in advance and specify the combined mode at once.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you write the following settings in ov.yaml, the csv mode will be set with &lt;code&gt;--view-mode csv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ov --view-mode csv test.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After startup, you can enter view-mode with (default key &lt;code&gt;p&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ov.yaml&#34;&gt;Mode:&#xA;  p:&#xA;    Header: 2&#xA;    AlternateRows: true&#xA;    ColumnMode: true&#xA;    LineNumMode: false&#xA;    WrapMode: true&#xA;    ColumnDelimiter: &#34;|&#34;&#xA;    ColumnRainbow: true&#xA;  m:&#xA;    Header: 3&#xA;    AlternateRows: true&#xA;    ColumnMode: true&#xA;    LineNumMode: false&#xA;    WrapMode: true&#xA;    ColumnDelimiter: &#34;|&#34;&#xA;  csv:&#xA;    Header: 1&#xA;    AlternateRows: true&#xA;    ColumnMode: true&#xA;    LineNumMode: false&#xA;    WrapMode: true&#xA;    ColumnDelimiter: &#34;,&#34;&#xA;    ColumnRainbow: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;4. &lt;a name=&#34;command-option&#34;&gt;&lt;/a&gt;Command option&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ov --help&#xA;ov is a feature rich pager(such as more/less).&#xA;It supports various compressed files(gzip, bzip2, zstd, lz4, and xz).&#xA;&#xA;Usage:&#xA;  ov [flags]&#xA;&#xA;Flags:&#xA;  -C, --alternate-rows             alternately change the line color&#xA;  -i, --case-sensitive             case-sensitive in search&#xA;  -d, --column-delimiter string    column delimiter (default &#34;,&#34;)&#xA;  -c, --column-mode                column mode&#xA;      --column-rainbow             column rainbow&#xA;      --completion string          generate completion script [bash|zsh|fish|powershell]&#xA;      --config string              config file (default is $XDG_CONFIG_HOME/ov/config.yaml)&#xA;      --debug                      debug mode&#xA;      --disable-mouse              disable mouse support&#xA;  -e, --exec                       exec command&#xA;  -X, --exit-write                 output the current screen when exiting&#xA;  -a, --exit-write-after int       NUM after the current lines when exiting&#xA;  -b, --exit-write-before int      NUM before the current lines when exiting&#xA;  -A, --follow-all                 follow all&#xA;  -f, --follow-mode                follow mode&#xA;      --follow-section             follow section&#xA;  -H, --header int                 number of header rows to fix&#xA;  -h, --help                       help for ov&#xA;      --help-key                   display key bind information&#xA;      --incsearch                  incremental search (default true)&#xA;  -j, --jump-target string         jump-target&#xA;  -n, --line-number                line number mode&#xA;  -M, --multi-color strings        multi-color&#xA;  -p, --plain                      disable original decoration&#xA;  -F, --quit-if-one-screen         quit if the output fits on one screen&#xA;      --regexp-search              regular expression search&#xA;      --section-delimiter string   section delimiter&#xA;      --section-start int          section start position&#xA;      --skip-lines int             skip the number of lines&#xA;  -x, --tab-width int              tab stop width (default 8)&#xA;  -v, --version                    display version information&#xA;      --view-mode string           view mode&#xA;  -T, --watch int                  watch mode interval&#xA;  -w, --wrap                       wrap mode (default true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It can also be changed after startup.&lt;/p&gt; &#xA;&lt;h2&gt;5. &lt;a name=&#34;key-bindings&#34;&gt;&lt;/a&gt;Key bindings&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt; [Escape], [q]                * quit&#xA; [ctrl+c]                     * cancel&#xA; [Q]                          * output screen and quit&#xA; [ctrl+q]                     * set output screen and quit&#xA; [ctrl+z]                     * suspend&#xA; [h], [ctrl+alt+c], [ctrl+f1] * display help screen&#xA; [ctrl+f2], [ctrl+alt+e]      * display log screen&#xA; [ctrl+l]                     * screen sync&#xA; [ctrl+f]                     * follow mode toggle&#xA; [ctrl+a]                     * follow all mode toggle&#xA; [ctrl+f3], [ctrl+alt+r]      * enable/disable mouse&#xA;&#xA;&#x9;Moving&#xA;&#xA; [Enter], [Down], [ctrl+N]    * forward by one line&#xA; [Up], [ctrl+p]               * backward by one line&#xA; [Home]                       * go to top of document&#xA; [End]                        * go to end of document&#xA; [PageDown], [ctrl+v]         * forward by page&#xA; [PageUp], [ctrl+b]           * backward by page&#xA; [ctrl+d]                     * forward a half page&#xA; [ctrl+u]                     * backward a half page&#xA; [left]                       * scroll to left&#xA; [right]                      * scroll to right&#xA; [ctrl+left]                  * scroll left half screen&#xA; [ctrl+right]                 * scroll right half screen&#xA; [g]                          * go to line(input number)&#xA;&#xA;&#x9;Move document&#xA;&#xA; []]                          * next document&#xA; [[]                          * previous document&#xA; [ctrl+k]                     * close current document&#xA;&#xA;&#x9;Mark position&#xA;&#xA; [m]                          * mark current position&#xA; [M]                          * remove mark current position&#xA; [ctrl+delete]                * remove all mark&#xA; [&amp;gt;]                          * move to next marked position&#xA; [&amp;lt;]                          * move to previous marked position&#xA;&#xA;&#x9;Search&#xA;&#xA; [/]                          * forward search mode&#xA; [?]                          * backward search mode&#xA; [n]                          * repeat forward search&#xA; [N]                          * repeat backward search&#xA;&#xA;&#x9;Change display&#xA;&#xA; [w], [W]                     * wrap/nowrap toggle&#xA; [c]                          * column mode toggle&#xA; [ctrl+r]                     * column rainbow toggle&#xA; [C]                          * alternate rows of style toggle&#xA; [G]                          * line number toggle&#xA; [ctrl+e]                     * original decoration toggle&#xA;&#xA;&#x9;Change Display with Input&#xA;&#xA; [p], [P]                     * view mode selection&#xA; [d]                          * column delimiter string&#xA; [H]                          * number of header lines&#xA; [ctrl+s]                     * number of skip lines&#xA; [t]                          * TAB width&#xA; [.]                          * multi color highlight&#xA; [j]                          * jump target&#xA;&#xA;&#x9;Section&#xA;&#xA; [alt+d]                      * section delimiter regular expression&#xA; [ctrl+F3], [alt+s]           * section start position&#xA; [space], [ctrl+down]         * next section&#xA; [^], [ctrl+up]               * previous section&#xA; [9]                          * last section&#xA; [F2]                         * follow section mode toggle&#xA;&#xA;&#x9;Close and reload&#xA;&#xA; [ctrl+F9], [ctrl+alt+s]      * close file&#xA; [ctrl+alt+l], [F5]           * reload file&#xA; [ctrl+alt+w], [F4]           * watch mode&#xA; [ctrl+w]                     * set watch interval&#xA;&#xA;&#x9;Key binding when typing&#xA;&#xA; [alt+c]                      * case-sensitive toggle&#xA; [alt+r]                      * regular expression search toggle&#xA; [alt+i]                      * incremental search toggle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;6. &lt;a name=&#34;customize&#34;&gt;&lt;/a&gt;Customize&lt;/h2&gt; &#xA;&lt;h3&gt;6.1. &lt;a name=&#34;style-customization&#34;&gt;&lt;/a&gt;Style customization&lt;/h3&gt; &#xA;&lt;p&gt;You can customize the following items.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;StyleAlternate&lt;/li&gt; &#xA; &lt;li&gt;StyleHeader&lt;/li&gt; &#xA; &lt;li&gt;StyleOverStrike&lt;/li&gt; &#xA; &lt;li&gt;StyleOverLine&lt;/li&gt; &#xA; &lt;li&gt;StyleLineNumber&lt;/li&gt; &#xA; &lt;li&gt;StyleSearchHighlight&lt;/li&gt; &#xA; &lt;li&gt;StyleColumnHighlight&lt;/li&gt; &#xA; &lt;li&gt;StyleMarkLine&lt;/li&gt; &#xA; &lt;li&gt;StyleSectionLine&lt;/li&gt; &#xA; &lt;li&gt;StyleMultiColorHighlight&lt;/li&gt; &#xA; &lt;li&gt;StyleJumpTargetLine&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Specifies the color name for the foreground and background &lt;a href=&#34;https://pkg.go.dev/github.com/gdamore/tcell/v2#pkg-constants&#34;&gt;colors&lt;/a&gt;. Specify bool values for Reverse, Bold, Blink, Dim, Italic, and Underline.&lt;/p&gt; &#xA;&lt;p&gt;[Example]&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;StyleAlternate:&#xA;  Background: &#34;gray&#34;&#xA;  Bold: true&#xA;  Underline: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;item name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;value&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Foreground&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&#34;color name&#34; or &#34;rgb&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&#34;red&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Background&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&#34;color name&#34; or &#34;rgb&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&#34;#2a2a2a&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Reverse&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true/false&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bold&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true/false&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Blink&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true/false&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Dim&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true/false&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Italic&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true/false&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Underline&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true/false&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;6.2. &lt;a name=&#34;key-binding-customization&#34;&gt;&lt;/a&gt;Key binding customization&lt;/h3&gt; &#xA;&lt;p&gt;You can customize key bindings.&lt;/p&gt; &#xA;&lt;p&gt;[Example]&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    down:&#xA;        - &#34;Enter&#34;&#xA;        - &#34;Down&#34;&#xA;        - &#34;ctrl+N&#34;&#xA;    up:&#xA;        - &#34;Up&#34;&#xA;        - &#34;ctrl+p&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/noborus/ov/raw/master/ov.yaml&#34;&gt;ov.yaml&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>project-copacetic/copacetic</title>
    <updated>2023-01-21T01:35:58Z</updated>
    <id>tag:github.com,2023-01-21:/project-copacetic/copacetic</id>
    <link href="https://github.com/project-copacetic/copacetic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CLI tool for directly patching container images using reports from vulnerability scanners&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project Copacetic: Directly patch container image vulnerabilities&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-copacetic/copacetic/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/project-copacetic/copacetic/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build in DevContainer&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/project-copacetic/copacetic&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/project-copacetic/copacetic/branch/main/graph/badge.svg?token=PBC8EPNHRL&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/project-copacetic/copacetic/main/code_of_conduct.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;copa&lt;/code&gt; is a CLI tool written in &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt; and based on &lt;a href=&#34;https://github.com/moby/buildkit&#34;&gt;buildkit&lt;/a&gt; that can be used to directly patch container images given the vulnerability scanning results from popular tools like &lt;a href=&#34;https://github.com/aquasecurity/trivy&#34;&gt;Trivy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;We needed the ability to patch containers quickly without going upstream for a full rebuild. As the window between &lt;a href=&#34;https://www.bleepingcomputer.com/news/security/hackers-scan-for-vulnerabilities-within-15-minutes-of-disclosure/&#34;&gt;vulnerability disclosure and active exploitation continues to narrow&lt;/a&gt;, there is a growing operational need to patch critical security vulnerabilities in container images so they can be quickly redeployed into production. The need is especially acute when those vulnerabilities are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;inherited from base images several levels deep and waiting on updated releases to percolate through the supply chain is not an option&lt;/li&gt; &#xA; &lt;li&gt;found in 3rd party app images you don&#39;t maintain with update cadences that don&#39;t meet your security SLAs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/project-copacetic/copacetic/main/docs/imgs/direct-image-patching.png&#34; alt=&#34;direct image patching&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In addition to filling the operational gap not met by left-shift security practices and tools, the ability of &lt;code&gt;copa&lt;/code&gt; to patch a container without requiring a rebuild of the container image provides other benefits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allows users other than the image publishers to also patch container images, such as DevSecOps engineers.&lt;/li&gt; &#xA; &lt;li&gt;Reduces the storage and transmission costs of redistributing patched images by only creating an additional patch layer, instead of rebuilding the entire image which usually results in different layer hashes that break layer caching.&lt;/li&gt; &#xA; &lt;li&gt;Reduces the turnaround time for patching a container image by not having to wait for base image updates and being a faster operation than a full image rebuild.&lt;/li&gt; &#xA; &lt;li&gt;Reduces the complexity of patching the image from running a rebuild pipeline to running a single tool on the image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How?&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;copa&lt;/code&gt; tool is an extensible engine that:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Parses the needed update packages from the container imageâ€™s vulnerability report produced by a scanner like Trivy. New adapters can be written to accommodate more report formats.&lt;/li&gt; &#xA; &lt;li&gt;Obtains and processes the needed update packages using the appropriate package manager tools such as apt, apk, etc. New adapters can be written to support more package managers.&lt;/li&gt; &#xA; &lt;li&gt;Applies the resulting update binaries to the container image using buildkit.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/project-copacetic/copacetic/main/docs/imgs/vulnerability-patch.png&#34; alt=&#34;report-driven vulnerability patching&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This approach is motivated by the core principles of making direct container patching broadly applicable and accessible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Copa supports patching &lt;em&gt;existing&lt;/em&gt; container images&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Devs don&#39;t need to build their images using specific tools or modify them in some way just to support container patching.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Copa works with the existing vulnerability scanning and mitigation ecosystems&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Image publishers don&#39;t need to create new workflows for container patching since Copa supports patching container images using the security update packages already being published today.&lt;/li&gt; &#xA;   &lt;li&gt;Consumers do not need to migrate to a new and potentially more limited support ecosystem for custom distros or change their container vulnerability scanning pipelines to include remediation, since Copa can be integrated seamlessly as an extra step to patch containers based on those scanning reports.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Copa reduces the technical expertise needed and waiting on dependencies needed to patch an image&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For OS package vulnerabilities, no specialized knowledge about a specific image is needed to be patch it as Copa relies on the vulnerability remediation knowledge already embedded in the reports produced by popular container scanning tools today.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details refer to the &lt;a href=&#34;https://project-copacetic.github.io/copacetic/&#34;&gt;full documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chainguard-images/images</title>
    <updated>2023-01-21T01:35:58Z</updated>
    <id>tag:github.com,2023-01-21:/chainguard-images/images</id>
    <link href="https://github.com/chainguard-images/images" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Public Chainguard Images&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chainguard Images&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;OCI Reference&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Variants/Tags&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/alpine-base&#34;&gt;alpine-base&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/alpine-base&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/alpine-base:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/alpine-base.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/apko&#34;&gt;apko&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/apko&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/apko:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/apko.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/bazel&#34;&gt;bazel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/bazel&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/bazel:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/bazel.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/busybox&#34;&gt;busybox&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/busybox&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/busybox:latest-glibc&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/busybox.build.status.latest-glibc.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/busybox:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/busybox.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/cc-dynamic&#34;&gt;cc-dynamic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/cc-dynamic&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/cc-dynamic:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/cc-dynamic.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/curl&#34;&gt;curl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/curl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/curl:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/curl.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/deno&#34;&gt;deno&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/deno&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/deno:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/deno.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/envoy&#34;&gt;envoy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/envoy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/envoy:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/envoy.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/etcd&#34;&gt;etcd&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/etcd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/etcd:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/etcd.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/gcc-glibc&#34;&gt;gcc-glibc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/gcc-glibc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/gcc-glibc:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/gcc-glibc.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/gcc-musl&#34;&gt;gcc-musl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/gcc-musl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/gcc-musl:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/gcc-musl.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/git&#34;&gt;git&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/git&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/git:latest-glibc-root&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/git.build.status.latest-glibc-root.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/git:latest-glibc&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/git.build.status.latest-glibc.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/git:latest-root&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/git.build.status.latest-root.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/git:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/git.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/glibc-dynamic&#34;&gt;glibc-dynamic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/glibc-dynamic&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/glibc-dynamic:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/glibc-dynamic.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/go&#34;&gt;go&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/go&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/go:1.20&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/go.build.status.1.20.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/go:latest-musl&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/go.build.status.latest-musl.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/go:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/go.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/graalvm-native&#34;&gt;graalvm-native&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/graalvm-native&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/graalvm-native:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/graalvm-native.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/haproxy&#34;&gt;haproxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/haproxy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/haproxy:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/haproxy.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/jdk&#34;&gt;jdk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/jdk&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/jdk:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/jdk.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/jdk:openjdk-11&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/jdk.build.status.openjdk-11.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/jenkins&#34;&gt;jenkins&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/jenkins&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/jenkins:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/jenkins.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/jre&#34;&gt;jre&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/jre&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/jre:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/jre.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/jre:openjdk-jre-11&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/jre.build.status.openjdk-jre-11.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/ko&#34;&gt;ko&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/ko&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/ko:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/ko.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/kubectl&#34;&gt;kubectl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/kubectl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/kubectl:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/kubectl.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/maven&#34;&gt;maven&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/maven&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/maven:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/maven.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/maven:openjdk-11&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/maven.build.status.openjdk-11.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/melange&#34;&gt;melange&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/melange&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/melange:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/melange.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/memcached&#34;&gt;memcached&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/memcached&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/memcached:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/memcached.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/musl-dynamic&#34;&gt;musl-dynamic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/musl-dynamic&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/musl-dynamic:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/musl-dynamic.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/nginx&#34;&gt;nginx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/nginx&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/nginx:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/nginx.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/node&#34;&gt;node&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/node&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/node:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/node.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/php&#34;&gt;php&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/php&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/php:latest-dev&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/php.build.status.latest-dev.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/php:latest-musl-dev&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/php.build.status.latest-musl-dev.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/php:latest-musl&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/php.build.status.latest-musl.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/php:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/php.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/postgres&#34;&gt;postgres&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/postgres&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/postgres:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/postgres.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/prometheus&#34;&gt;prometheus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/prometheus&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/prometheus:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/prometheus.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/python&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/python:latest-dev&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/python.build.status.latest-dev.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/python:latest-musl-dev&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/python.build.status.latest-musl-dev.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/python:latest-musl&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/python.build.status.latest-musl.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/python:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/python.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/rabbitmq&#34;&gt;rabbitmq&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/rabbitmq&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/rabbitmq:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/rabbitmq.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/redis&#34;&gt;redis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/redis&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/redis:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/redis.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/ruby&#34;&gt;ruby&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/ruby&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/ruby:3.0&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/ruby.build.status.3.0.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/ruby:3.1&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/ruby.build.status.3.1.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/ruby:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/ruby.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/rust&#34;&gt;rust&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/rust&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;experimental&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/rust:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/rust.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/static&#34;&gt;static&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/static&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/static:latest-glibc&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/static.build.status.latest-glibc.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/static:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/static.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/wait-for-it&#34;&gt;wait-for-it&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/wait-for-it&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/wait-for-it:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/wait-for-it.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chainguard-images/images/main/images/wolfi-base&#34;&gt;wolfi-base&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cgr.dev/chainguard/wolfi-base&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry-ui.chainguard.app/?image=cgr.dev/chainguard/wolfi-base:latest&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/chainguard-images-build-outputs/badges/wolfi-base.build.status.latest.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>