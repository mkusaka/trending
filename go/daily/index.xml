<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-04T01:36:11Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ethereum/go-ethereum</title>
    <updated>2022-09-04T01:36:11Z</updated>
    <id>tag:github.com,2022-09-04:/ethereum/go-ethereum</id>
    <link href="https://github.com/ethereum/go-ethereum" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Go implementation of the Ethereum protocol&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Go Ethereum&lt;/h2&gt; &#xA;&lt;p&gt;Official Golang execution layer implementation of the Ethereum protocol.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/ethereum/go-ethereum?tab=doc&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/915b7be44ada53c290eb157634330494ebe3e30a/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f676f6c616e672f6764646f3f7374617475732e737667&#34; alt=&#34;API Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/ethereum/go-ethereum&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/ethereum/go-ethereum&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/ethereum/go-ethereum&#34;&gt;&lt;img src=&#34;https://travis-ci.com/ethereum/go-ethereum.svg?branch=master&#34; alt=&#34;Travis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/nthXNEv&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join%20chat-blue.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Automated builds are available for stable releases and the unstable master branch. Binary archives are published at &lt;a href=&#34;https://geth.ethereum.org/downloads/&#34;&gt;https://geth.ethereum.org/downloads/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building the source&lt;/h2&gt; &#xA;&lt;p&gt;For prerequisites and detailed build instructions please read the &lt;a href=&#34;https://geth.ethereum.org/docs/install-and-build/installing-geth&#34;&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Building &lt;code&gt;geth&lt;/code&gt; requires both a Go (version 1.16 or later) and a C compiler. You can install them using your favourite package manager. Once the dependencies are installed, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make geth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, to build the full suite of utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Executables&lt;/h2&gt; &#xA;&lt;p&gt;The go-ethereum project comes with several wrappers/executables found in the &lt;code&gt;cmd&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;code&gt;geth&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Our main Ethereum CLI client. It is the entry point into the Ethereum network (main-, test- or private net), capable of running as a full node (default), archive node (retaining all historical state) or a light node (retrieving data live). It can be used by other processes as a gateway into the Ethereum network via JSON RPC endpoints exposed on top of HTTP, WebSocket and/or IPC transports. &lt;code&gt;geth --help&lt;/code&gt; and the &lt;a href=&#34;https://geth.ethereum.org/docs/interface/command-line-options&#34;&gt;CLI page&lt;/a&gt; for command line options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;clef&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stand-alone signing tool, which can be used as a backend signer for &lt;code&gt;geth&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;devp2p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utilities to interact with nodes on the networking layer, without running a full blockchain.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;abigen&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Source code generator to convert Ethereum contract definitions into easy-to-use, compile-time type-safe Go packages. It operates on plain &lt;a href=&#34;https://docs.soliditylang.org/en/develop/abi-spec.html&#34;&gt;Ethereum contract ABIs&lt;/a&gt; with expanded functionality if the contract bytecode is also available. However, it also accepts Solidity source files, making development much more streamlined. Please see our &lt;a href=&#34;https://geth.ethereum.org/docs/dapp/native-bindings&#34;&gt;Native DApps&lt;/a&gt; page for details.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;bootnode&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stripped down version of our Ethereum client implementation that only takes part in the network node discovery protocol, but does not run any of the higher level application protocols. It can be used as a lightweight bootstrap node to aid in finding peers in private networks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;evm&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Developer utility version of the EVM (Ethereum Virtual Machine) that is capable of running bytecode snippets within a configurable environment and execution mode. Its purpose is to allow isolated, fine-grained debugging of EVM opcodes (e.g. &lt;code&gt;evm --code 60ff60ff --debug run&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;rlpdump&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Developer utility tool to convert binary RLP (&lt;a href=&#34;https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp&#34;&gt;Recursive Length Prefix&lt;/a&gt;) dumps (data encoding used by the Ethereum protocol both network as well as consensus wise) to user-friendlier hierarchical representation (e.g. &lt;code&gt;rlpdump --hex CE0183FFFFFFC4C304050583616263&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;puppeth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a CLI wizard that aids in creating a new Ethereum network.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Running &lt;code&gt;geth&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Going through all the possible command line flags is out of scope here (please consult our &lt;a href=&#34;https://geth.ethereum.org/docs/interface/command-line-options&#34;&gt;CLI Wiki page&lt;/a&gt;), but we&#39;ve enumerated a few common parameter combos to get you up to speed quickly on how you can run your own &lt;code&gt;geth&lt;/code&gt; instance.&lt;/p&gt; &#xA;&lt;h3&gt;Hardware Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Minimum:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU with 2+ cores&lt;/li&gt; &#xA; &lt;li&gt;4GB RAM&lt;/li&gt; &#xA; &lt;li&gt;1TB free storage space to sync the Mainnet&lt;/li&gt; &#xA; &lt;li&gt;8 MBit/sec download Internet service&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Recommended:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast CPU with 4+ cores&lt;/li&gt; &#xA; &lt;li&gt;16GB+ RAM&lt;/li&gt; &#xA; &lt;li&gt;High-performance SSD with at least 1TB of free space&lt;/li&gt; &#xA; &lt;li&gt;25+ MBit/sec download Internet service&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Full node on the main Ethereum network&lt;/h3&gt; &#xA;&lt;p&gt;By far the most common scenario is people wanting to simply interact with the Ethereum network: create accounts; transfer funds; deploy and interact with contracts. For this particular use case, the user doesn&#39;t care about years-old historical data, so we can sync quickly to the current state of the network. To do so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start &lt;code&gt;geth&lt;/code&gt; in snap sync mode (default, can be changed with the &lt;code&gt;--syncmode&lt;/code&gt; flag), causing it to download more data in exchange for avoiding processing the entire history of the Ethereum network, which is very CPU intensive.&lt;/li&gt; &#xA; &lt;li&gt;Start the built-in interactive &lt;a href=&#34;https://geth.ethereum.org/docs/interface/javascript-console&#34;&gt;JavaScript console&lt;/a&gt;, (via the trailing &lt;code&gt;console&lt;/code&gt; subcommand) through which you can interact using &lt;a href=&#34;https://github.com/ChainSafe/web3.js/raw/0.20.7/DOCUMENTATION.md&#34;&gt;&lt;code&gt;web3&lt;/code&gt; methods&lt;/a&gt; (note: the &lt;code&gt;web3&lt;/code&gt; version bundled within &lt;code&gt;geth&lt;/code&gt; is very old, and not up to date with official docs), as well as &lt;code&gt;geth&lt;/code&gt;&#39;s own &lt;a href=&#34;https://geth.ethereum.org/docs/rpc/server&#34;&gt;management APIs&lt;/a&gt;. This tool is optional and if you leave it out you can always attach it to an already running &lt;code&gt;geth&lt;/code&gt; instance with &lt;code&gt;geth attach&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;A Full node on the GÃ¶rli test network&lt;/h3&gt; &#xA;&lt;p&gt;Transitioning towards developers, if you&#39;d like to play around with creating Ethereum contracts, you almost certainly would like to do that without any real money involved until you get the hang of the entire system. In other words, instead of attaching to the main network, you want to join the &lt;strong&gt;test&lt;/strong&gt; network with your node, which is fully equivalent to the main network, but with play-Ether only.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth --goerli console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;console&lt;/code&gt; subcommand has the same meaning as above and is equally useful on the testnet too.&lt;/p&gt; &#xA;&lt;p&gt;Specifying the &lt;code&gt;--goerli&lt;/code&gt; flag, however, will reconfigure your &lt;code&gt;geth&lt;/code&gt; instance a bit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Instead of connecting to the main Ethereum network, the client will connect to the GÃ¶rli test network, which uses different P2P bootnodes, different network IDs and genesis states.&lt;/li&gt; &#xA; &lt;li&gt;Instead of using the default data directory (&lt;code&gt;~/.ethereum&lt;/code&gt; on Linux for example), &lt;code&gt;geth&lt;/code&gt; will nest itself one level deeper into a &lt;code&gt;goerli&lt;/code&gt; subfolder (&lt;code&gt;~/.ethereum/goerli&lt;/code&gt; on Linux). Note, on OSX and Linux this also means that attaching to a running testnet node requires the use of a custom endpoint since &lt;code&gt;geth attach&lt;/code&gt; will try to attach to a production node endpoint by default, e.g., &lt;code&gt;geth attach &amp;lt;datadir&amp;gt;/goerli/geth.ipc&lt;/code&gt;. Windows users are not affected by this.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Although some internal protective measures prevent transactions from crossing over between the main network and test network, you should always use separate accounts for play and real money. Unless you manually move accounts, &lt;code&gt;geth&lt;/code&gt; will by default correctly separate the two networks and will not make any accounts available between them.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Full node on the Rinkeby test network&lt;/h3&gt; &#xA;&lt;p&gt;Go Ethereum also supports connecting to the older proof-of-authority based test network called &lt;a href=&#34;https://www.rinkeby.io&#34;&gt;&lt;em&gt;Rinkeby&lt;/em&gt;&lt;/a&gt; which is operated by members of the community.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth --rinkeby console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Full node on the Ropsten test network&lt;/h3&gt; &#xA;&lt;p&gt;In addition to GÃ¶rli and Rinkeby, Geth also supports the ancient Ropsten testnet. The Ropsten test network is based on the Ethash proof-of-work consensus algorithm. As such, it has certain extra overhead and is more susceptible to reorganization attacks due to the network&#39;s low difficulty/security.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth --ropsten console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Older Geth configurations store the Ropsten database in the &lt;code&gt;testnet&lt;/code&gt; subdirectory.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;As an alternative to passing the numerous flags to the &lt;code&gt;geth&lt;/code&gt; binary, you can also pass a configuration file via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth --config /path/to/your_config.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get an idea of how the file should look like you can use the &lt;code&gt;dumpconfig&lt;/code&gt; subcommand to export your existing configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth --your-favourite-flags dumpconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: This works only with &lt;code&gt;geth&lt;/code&gt; v1.6.0 and above.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Docker quick start&lt;/h4&gt; &#xA;&lt;p&gt;One of the quickest ways to get Ethereum up and running on your machine is by using Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -d --name ethereum-node -v /Users/alice/ethereum:/root \&#xA;           -p 8545:8545 -p 30303:30303 \&#xA;           ethereum/client-go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start &lt;code&gt;geth&lt;/code&gt; in snap-sync mode with a DB memory allowance of 1GB, as the above command does. It will also create a persistent volume in your home directory for saving your blockchain as well as map the default ports. There is also an &lt;code&gt;alpine&lt;/code&gt; tag available for a slim version of the image.&lt;/p&gt; &#xA;&lt;p&gt;Do not forget &lt;code&gt;--http.addr 0.0.0.0&lt;/code&gt;, if you want to access RPC from other containers and/or hosts. By default, &lt;code&gt;geth&lt;/code&gt; binds to the local interface and RPC endpoints are not accessible from the outside.&lt;/p&gt; &#xA;&lt;h3&gt;Programmatically interfacing &lt;code&gt;geth&lt;/code&gt; nodes&lt;/h3&gt; &#xA;&lt;p&gt;As a developer, sooner rather than later you&#39;ll want to start interacting with &lt;code&gt;geth&lt;/code&gt; and the Ethereum network via your own programs and not manually through the console. To aid this, &lt;code&gt;geth&lt;/code&gt; has built-in support for a JSON-RPC based APIs (&lt;a href=&#34;https://ethereum.github.io/execution-apis/api-documentation/&#34;&gt;standard APIs&lt;/a&gt; and &lt;a href=&#34;https://geth.ethereum.org/docs/rpc/server&#34;&gt;&lt;code&gt;geth&lt;/code&gt; specific APIs&lt;/a&gt;). These can be exposed via HTTP, WebSockets and IPC (UNIX sockets on UNIX based platforms, and named pipes on Windows).&lt;/p&gt; &#xA;&lt;p&gt;The IPC interface is enabled by default and exposes all the APIs supported by &lt;code&gt;geth&lt;/code&gt;, whereas the HTTP and WS interfaces need to manually be enabled and only expose a subset of APIs due to security reasons. These can be turned on/off and configured as you&#39;d expect.&lt;/p&gt; &#xA;&lt;p&gt;HTTP based JSON-RPC API options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--http&lt;/code&gt; Enable the HTTP-RPC server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--http.addr&lt;/code&gt; HTTP-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--http.port&lt;/code&gt; HTTP-RPC server listening port (default: &lt;code&gt;8545&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--http.api&lt;/code&gt; API&#39;s offered over the HTTP-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--http.corsdomain&lt;/code&gt; Comma separated list of domains from which to accept cross origin requests (browser enforced)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws&lt;/code&gt; Enable the WS-RPC server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws.addr&lt;/code&gt; WS-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws.port&lt;/code&gt; WS-RPC server listening port (default: &lt;code&gt;8546&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws.api&lt;/code&gt; API&#39;s offered over the WS-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws.origins&lt;/code&gt; Origins from which to accept WebSocket requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ipcdisable&lt;/code&gt; Disable the IPC-RPC server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ipcapi&lt;/code&gt; API&#39;s offered over the IPC-RPC interface (default: &lt;code&gt;admin,debug,eth,miner,net,personal,txpool,web3&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ipcpath&lt;/code&gt; Filename for IPC socket/pipe within the datadir (explicit paths escape it)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll need to use your own programming environments&#39; capabilities (libraries, tools, etc) to connect via HTTP, WS or IPC to a &lt;code&gt;geth&lt;/code&gt; node configured with the above flags and you&#39;ll need to speak &lt;a href=&#34;https://www.jsonrpc.org/specification&#34;&gt;JSON-RPC&lt;/a&gt; on all transports. You can reuse the same connection for multiple requests!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: Please understand the security implications of opening up an HTTP/WS based transport before doing so! Hackers on the internet are actively trying to subvert Ethereum nodes with exposed APIs! Further, all browser tabs can access locally running web servers, so malicious web pages could try to subvert locally available APIs!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Operating a private network&lt;/h3&gt; &#xA;&lt;p&gt;Maintaining your own private network is more involved as a lot of configurations taken for granted in the official networks need to be manually set up.&lt;/p&gt; &#xA;&lt;h4&gt;Defining the private genesis state&lt;/h4&gt; &#xA;&lt;p&gt;First, you&#39;ll need to create the genesis state of your networks, which all nodes need to be aware of and agree upon. This consists of a small JSON file (e.g. call it &lt;code&gt;genesis.json&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;config&#34;: {&#xA;    &#34;chainId&#34;: &amp;lt;arbitrary positive integer&amp;gt;,&#xA;    &#34;homesteadBlock&#34;: 0,&#xA;    &#34;eip150Block&#34;: 0,&#xA;    &#34;eip155Block&#34;: 0,&#xA;    &#34;eip158Block&#34;: 0,&#xA;    &#34;byzantiumBlock&#34;: 0,&#xA;    &#34;constantinopleBlock&#34;: 0,&#xA;    &#34;petersburgBlock&#34;: 0,&#xA;    &#34;istanbulBlock&#34;: 0,&#xA;    &#34;berlinBlock&#34;: 0,&#xA;    &#34;londonBlock&#34;: 0&#xA;  },&#xA;  &#34;alloc&#34;: {},&#xA;  &#34;coinbase&#34;: &#34;0x0000000000000000000000000000000000000000&#34;,&#xA;  &#34;difficulty&#34;: &#34;0x20000&#34;,&#xA;  &#34;extraData&#34;: &#34;&#34;,&#xA;  &#34;gasLimit&#34;: &#34;0x2fefd8&#34;,&#xA;  &#34;nonce&#34;: &#34;0x0000000000000042&#34;,&#xA;  &#34;mixhash&#34;: &#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;,&#xA;  &#34;parentHash&#34;: &#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;,&#xA;  &#34;timestamp&#34;: &#34;0x00&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above fields should be fine for most purposes, although we&#39;d recommend changing the &lt;code&gt;nonce&lt;/code&gt; to some random value so you prevent unknown remote nodes from being able to connect to you. If you&#39;d like to pre-fund some accounts for easier testing, create the accounts and populate the &lt;code&gt;alloc&lt;/code&gt; field with their addresses.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;alloc&#34;: {&#xA;  &#34;0x0000000000000000000000000000000000000001&#34;: {&#xA;    &#34;balance&#34;: &#34;111111111&#34;&#xA;  },&#xA;  &#34;0x0000000000000000000000000000000000000002&#34;: {&#xA;    &#34;balance&#34;: &#34;222222222&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the genesis state defined in the above JSON file, you&#39;ll need to initialize &lt;strong&gt;every&lt;/strong&gt; &lt;code&gt;geth&lt;/code&gt; node with it prior to starting it up to ensure all blockchain parameters are correctly set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth init path/to/genesis.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Creating the rendezvous point&lt;/h4&gt; &#xA;&lt;p&gt;With all nodes that you want to run initialized to the desired genesis state, you&#39;ll need to start a bootstrap node that others can use to find each other in your network and/or over the internet. The clean way is to configure and run a dedicated bootnode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ bootnode --genkey=boot.key&#xA;$ bootnode --nodekey=boot.key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the bootnode online, it will display an &lt;a href=&#34;https://ethereum.org/en/developers/docs/networking-layer/network-addresses/#enode&#34;&gt;&lt;code&gt;enode&lt;/code&gt; URL&lt;/a&gt; that other nodes can use to connect to it and exchange peer information. Make sure to replace the displayed IP address information (most probably &lt;code&gt;[::]&lt;/code&gt;) with your externally accessible IP to get the actual &lt;code&gt;enode&lt;/code&gt; URL.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: You could also use a full-fledged &lt;code&gt;geth&lt;/code&gt; node as a bootnode, but it&#39;s the less recommended way.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Starting up your member nodes&lt;/h4&gt; &#xA;&lt;p&gt;With the bootnode operational and externally reachable (you can try &lt;code&gt;telnet &amp;lt;ip&amp;gt; &amp;lt;port&amp;gt;&lt;/code&gt; to ensure it&#39;s indeed reachable), start every subsequent &lt;code&gt;geth&lt;/code&gt; node pointed to the bootnode for peer discovery via the &lt;code&gt;--bootnodes&lt;/code&gt; flag. It will probably also be desirable to keep the data directory of your private network separated, so do also specify a custom &lt;code&gt;--datadir&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth --datadir=path/to/custom/data/folder --bootnodes=&amp;lt;bootnode-enode-url-from-above&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Since your network will be completely cut off from the main and test networks, you&#39;ll also need to configure a miner to process transactions and create new blocks for you.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Running a private miner&lt;/h4&gt; &#xA;&lt;p&gt;Mining on the public Ethereum network is a complex task as it&#39;s only feasible using GPUs, requiring an OpenCL or CUDA enabled &lt;code&gt;ethminer&lt;/code&gt; instance. For information on such a setup, please consult the &lt;a href=&#34;https://www.reddit.com/r/EtherMining/&#34;&gt;EtherMining subreddit&lt;/a&gt; and the &lt;a href=&#34;https://github.com/ethereum-mining/ethminer&#34;&gt;ethminer&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;In a private network setting, however, a single CPU miner instance is more than enough for practical purposes as it can produce a stable stream of blocks at the correct intervals without needing heavy resources (consider running on a single thread, no need for multiple ones either). To start a &lt;code&gt;geth&lt;/code&gt; instance for mining, run it with all your usual flags, extended by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth &amp;lt;usual-flags&amp;gt; --mine --miner.threads=1 --miner.etherbase=0x0000000000000000000000000000000000000000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which will start mining blocks and transactions on a single CPU thread, crediting all proceedings to the account specified by &lt;code&gt;--miner.etherbase&lt;/code&gt;. You can further tune the mining by changing the default gas limit blocks converge to (&lt;code&gt;--miner.targetgaslimit&lt;/code&gt;) and the price transactions are accepted at (&lt;code&gt;--miner.gasprice&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering helping out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to go-ethereum, please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base. If you wish to submit more complex changes though, please check up with the core devs first on &lt;a href=&#34;https://discord.gg/invite/nthXNEv&#34;&gt;our Discord Server&lt;/a&gt; to ensure those changes are in line with the general philosophy of the project and/or get some early feedback which can make both your efforts much lighter as well as our review and merge procedures quick and simple.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure your contributions adhere to our coding guidelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code must adhere to the official Go &lt;a href=&#34;https://golang.org/doc/effective_go.html#formatting&#34;&gt;formatting&lt;/a&gt; guidelines (i.e. uses &lt;a href=&#34;https://golang.org/cmd/gofmt/&#34;&gt;gofmt&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Code must be documented adhering to the official Go &lt;a href=&#34;https://golang.org/doc/effective_go.html#commentary&#34;&gt;commentary&lt;/a&gt; guidelines.&lt;/li&gt; &#xA; &lt;li&gt;Pull requests need to be based on and opened against the &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt; &#xA; &lt;li&gt;Commit messages should be prefixed with the package(s) they modify. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;E.g. &#34;eth, rpc: make trace configs optional&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://geth.ethereum.org/docs/developers/devguide&#34;&gt;Developers&#39; Guide&lt;/a&gt; for more details on configuring your environment, managing project dependencies, and testing procedures.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The go-ethereum library (i.e. all code outside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/lgpl-3.0.en.html&#34;&gt;GNU Lesser General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING.LESSER&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;The go-ethereum binaries (i.e. all code inside of the &lt;code&gt;cmd&lt;/code&gt; directory) are licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;GNU General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vmware-tanzu/kubeapps</title>
    <updated>2022-09-04T01:36:11Z</updated>
    <id>tag:github.com,2022-09-04:/vmware-tanzu/kubeapps</id>
    <link href="https://github.com/vmware-tanzu/kubeapps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A web-based UI for deploying and managing applications in Kubernetes clusters&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/img/logo.svg?sanitize=true&#34; width=&#34;40&#34; align=&#34;left&#34;&gt; Kubeapps&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/vmware-tanzu/kubeapps/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/vmware-tanzu/kubeapps/tree/main.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.netlify.com/sites/kubeapps-dev/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/7e0e2833-1d75-43f6-b006-632d359bb83b/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Kubeapps is an in-cluster web-based application that enables users with a one-time installation to deploy, manage, and upgrade applications on a Kubernetes cluster.&lt;/p&gt; &#xA;&lt;p&gt;With Kubeapps you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Browse and deploy different packages like &lt;a href=&#34;https://github.com/helm/helm&#34;&gt;Helm&lt;/a&gt; charts, &lt;a href=&#34;https://fluxcd.io/&#34;&gt;Flux&lt;/a&gt; or &lt;a href=&#34;https://carvel.dev/&#34;&gt;Carvel&lt;/a&gt; packages from public or private repositories (including &lt;a href=&#34;https://marketplace.cloud.vmware.com&#34;&gt;VMware Marketplaceâ¢&lt;/a&gt; and &lt;a href=&#34;https://bitnami.com/application-catalog&#34;&gt;Bitnami Application Catalog&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Customize deployments through an intuitive user interface&lt;/li&gt; &#xA; &lt;li&gt;Browse, upgrade and delete applications installed in the cluster&lt;/li&gt; &#xA; &lt;li&gt;Browse and deploy &lt;a href=&#34;https://operatorhub.io/&#34;&gt;Kubernetes Operators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Secure authentication to Kubeapps using a &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/tutorials/using-an-OIDC-provider.md&#34;&gt;standalone OAuth2/OIDC provider&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/howto/OIDC/using-an-OIDC-provider-with-pinniped.md&#34;&gt;using Pinniped&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Secure authorization based on Kubernetes &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/howto/access-control.md&#34;&gt;Role-Based Access Control&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; Kubeapps 2.0 and onwards supports Helm 3 only. While only the Helm 3 API is supported, in most cases, charts made for Helm 2 will still work.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started with Kubeapps&lt;/h2&gt; &#xA;&lt;p&gt;Installing Kubeapps is as simple as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;helm repo add bitnami https://charts.bitnami.com/bitnami&#xA;kubectl create namespace kubeapps&#xA;helm install kubeapps --namespace kubeapps bitnami/kubeapps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/tutorials/getting-started.md&#34;&gt;Getting Started Guide&lt;/a&gt; for detailed instructions on how to install and use Kubeapps.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kubeapps is deployed using the official &lt;a href=&#34;https://github.com/bitnami/charts/tree/master/bitnami/kubeapps&#34;&gt;Bitnami Kubeapps chart&lt;/a&gt; from the separate Bitnami charts repository. Although the Kubeapps repository also defines a chart, this is intended for development purposes only.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Complete documentation available in Kubeapps &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/README.md&#34;&gt;documentation section&lt;/a&gt;. Including complete tutorials, how-to guides, and reference for configuration and development in Kubeapps.&lt;/p&gt; &#xA;&lt;p&gt;For getting started into Kubeapps, please refer to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/tutorials/getting-started.md&#34;&gt;Getting started guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/chart/kubeapps/README.md&#34;&gt;Detailed installation instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/howto/dashboard.md&#34;&gt;Kubeapps user guide&lt;/a&gt; to easily manage your applications running in your cluster.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/chart/kubeapps/README.md#faq&#34;&gt;Kubeapps FAQs&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See how to deploy and configure &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/site/content/docs/latest/tutorials/kubeapps-on-tkg/README.md&#34;&gt;Kubeapps on VMware Tanzuâ¢ Kubernetes Gridâ¢&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter issues, please review the &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/chart/kubeapps/README.md#troubleshooting&#34;&gt;troubleshooting docs&lt;/a&gt;, review our &lt;a href=&#34;https://github.com/orgs/vmware-tanzu/projects/38/views/2&#34;&gt;project board&lt;/a&gt;, file an &lt;a href=&#34;https://github.com/vmware-tanzu/kubeapps/issues&#34;&gt;issue&lt;/a&gt;, or talk to Kubeapps maintainers on the &lt;a href=&#34;https://kubernetes.slack.com/messages/kubeapps&#34;&gt;#Kubeapps channel&lt;/a&gt; on the Kubernetes Slack server.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://slack.k8s.io&#34;&gt;Sign up&lt;/a&gt; to the Kubernetes Slack org.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Review the FAQs section on the &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/chart/kubeapps/README.md#faq&#34;&gt;Kubeapps chart README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are ready to jump in and test, add code, or help with documentation, follow the instructions on the &lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/kubeapps/main/CONTRIBUTING.md&#34;&gt;start contributing&lt;/a&gt; documentation for guidance on how to setup Kubeapps for development.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Take a look at the list of &lt;a href=&#34;https://github.com/vmware-tanzu/kubeapps/releases&#34;&gt;releases&lt;/a&gt; to stay tuned for the latest features and changes.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubernetes-sigs/kind</title>
    <updated>2022-09-04T01:36:11Z</updated>
    <id>tag:github.com,2022-09-04:/kubernetes-sigs/kind</id>
    <link href="https://github.com/kubernetes-sigs/kind" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kubernetes IN Docker - local clusters for testing Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img alt=&#34;kind&#34; src=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/logo/logo.png&#34; width=&#34;300px&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Please see &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/&#34;&gt;Our Documentation&lt;/a&gt; for more in-depth installation etc.&lt;/h1&gt; &#xA;&lt;p&gt;kind is a tool for running local Kubernetes clusters using Docker container &#34;nodes&#34;. kind was primarily designed for testing Kubernetes itself, but may be used for local development or CI.&lt;/p&gt; &#xA;&lt;p&gt;If you have &lt;a href=&#34;https://golang.org/&#34;&gt;go&lt;/a&gt; (&lt;a href=&#34;https://golang.org/doc/devel/release.html#policy&#34;&gt;1.17+&lt;/a&gt;) and &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; installed &lt;code&gt;go install sigs.k8s.io/kind@{{&amp;lt; stableVersion &amp;gt;}} &amp;amp;&amp;amp; kind create cluster&lt;/code&gt; is all you need!&lt;/p&gt; &#xA;&lt;p&gt;For older versions use &lt;code&gt;GO111MODULE=&#34;on&#34; go get sigs.k8s.io/kind@{{&amp;lt; stableVersion &amp;gt;}}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/site/static/images/kind-create-cluster.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;kind consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/pkg&#34;&gt;packages&lt;/a&gt; implementing &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/pkg/cluster&#34;&gt;cluster creation&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/pkg/build&#34;&gt;image build&lt;/a&gt;, etc.&lt;/li&gt; &#xA; &lt;li&gt;A command line interface (&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/main.go&#34;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;) built on these packages.&lt;/li&gt; &#xA; &lt;li&gt;Docker &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/images&#34;&gt;image(s)&lt;/a&gt; written to run systemd, Kubernetes, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/kubetest&#34;&gt;&lt;code&gt;kubetest&lt;/code&gt;&lt;/a&gt; integration also built on these packages (WIP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;kind bootstraps each &#34;node&#34; with &lt;a href=&#34;https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm/&#34;&gt;kubeadm&lt;/a&gt;. For more details see &lt;a href=&#34;https://kind.sigs.k8s.io/docs/design/initial&#34;&gt;the design documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: kind is still a work in progress, see the &lt;a href=&#34;https://kind.sigs.k8s.io/docs/contributing/1.0-roadmap&#34;&gt;1.0 roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and usage&lt;/h2&gt; &#xA;&lt;p&gt;For a complete &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/#installation&#34;&gt;install guide&lt;/a&gt; see &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/#installation&#34;&gt;the documentation here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can install kind with &lt;code&gt;GO111MODULE=&#34;on&#34; go get sigs.k8s.io/kind@v0.15.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: please use the latest go to do this. KIND is developed with the latest stable go, see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/.go-version&#34;&gt;&lt;code&gt;.go-version&lt;/code&gt;&lt;/a&gt; for the exact version we&#39;re using.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;go get&lt;/code&gt; should not be run from a Go &lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34;&gt;modules&lt;/a&gt; enabled project directory, as go get inside a modules enabled project updates dependencies / behaves differently. Try for example &lt;code&gt;cd $HOME&lt;/code&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;This will put &lt;code&gt;kind&lt;/code&gt; in &lt;code&gt;$(go env GOPATH)/bin&lt;/code&gt;. If you encounter the error &lt;code&gt;kind: command not found&lt;/code&gt; after installation then you may need to either add that directory to your &lt;code&gt;$PATH&lt;/code&gt; as shown &lt;a href=&#34;https://golang.org/doc/code.html#GOPATH&#34;&gt;here&lt;/a&gt; or do a manual installation by cloning the repo and run &lt;code&gt;make build&lt;/code&gt; from the repository.&lt;/p&gt; &#xA;&lt;p&gt;Without installing go, kind can be built reproducibly with docker using &lt;code&gt;make build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Stable binaries are also available on the &lt;a href=&#34;https://github.com/kubernetes-sigs/kind/releases&#34;&gt;releases&lt;/a&gt; page. Stable releases are generally recommended for CI usage in particular. To install, download the binary for your platform from &#34;Assets&#34; and place this into your &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;On Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;curl -Lo ./kind &#34;https://kind.sigs.k8s.io/dl/v0.15.0/kind-$(uname)-amd64&#34;&#xA;chmod +x ./kind&#xA;sudo mv ./kind /usr/local/bin/kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS via Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS via MacPorts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo port selfupdate &amp;amp;&amp;amp; sudo port install kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS via Bash:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# for Intel Macs&#xA;[ $(uname -m) = x86_64 ]&amp;amp;&amp;amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.15.0/kind-darwin-amd64&#xA;# for M1 / ARM Macs&#xA;[ $(uname -m) = arm64 ] &amp;amp;&amp;amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.15.0/kind-darwin-arm64&#xA;chmod +x ./kind&#xA;mv ./kind /some-dir-in-your-PATH/kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;curl.exe -Lo kind-windows-amd64.exe https://kind.sigs.k8s.io/dl/v0.15.0/kind-windows-amd64&#xA;Move-Item .\kind-windows-amd64.exe c:\some-dir-in-your-PATH\kind.exe&#xA;&#xA;# OR via Chocolatey (https://chocolatey.org/packages/kind)&#xA;choco install kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use kind, you will need to &lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;install docker&lt;/a&gt;. Once you have docker running you can create a cluster with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kind create cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To delete your cluster use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kind delete cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--TODO(bentheelder): improve this part of the guide--&gt; &#xA;&lt;p&gt;To create a cluster from Kubernetes source:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ensure that Kubernetes is cloned in &lt;code&gt;$(go env GOPATH)/src/k8s.io/kubernetes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;build a node image and create a cluster with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kind build node-image&#xA;kind create cluster --image kindest/node:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multi-node clusters and other advanced features may be configured with a config file, for more usage see &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start&#34;&gt;the docs&lt;/a&gt; or run &lt;code&gt;kind [command] --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Please reach out for bugs, feature requests, and other issues! The maintainers of this project are reachable via:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.k8s.io/&#34;&gt;Kubernetes Slack&lt;/a&gt; in the &lt;a href=&#34;https://kubernetes.slack.com/messages/CEKK1KTN2/&#34;&gt;#kind&lt;/a&gt; channel&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/kind/issues/new&#34;&gt;filing an issue&lt;/a&gt; against this repo&lt;/li&gt; &#xA; &lt;li&gt;The Kubernetes &lt;a href=&#34;https://groups.google.com/forum/#!forum/kubernetes-sig-testing&#34;&gt;SIG-Testing Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Current maintainers are &lt;a href=&#34;https://github.com/BenTheElder&#34;&gt;@BenTheElder&lt;/a&gt;, &lt;a href=&#34;https://github.com/munnerz&#34;&gt;@munnerz&lt;/a&gt;, &lt;a href=&#34;https://github.com/aojea&#34;&gt;@aojea&lt;/a&gt;, and &lt;a href=&#34;https://github.com/amwat&#34;&gt;@amwat&lt;/a&gt; - feel free to reach out if you have any questions!&lt;/p&gt; &#xA;&lt;p&gt;Pull Requests are very welcome! If you&#39;re planning a new feature, please file an issue to discuss first.&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/kubernetes-sigs/kind/issues&#34;&gt;issue tracker&lt;/a&gt; for &lt;code&gt;help wanted&lt;/code&gt; issues if you&#39;re unsure where to start, or feel free to reach out to discuss. ð&lt;/p&gt; &#xA;&lt;p&gt;See also: our own &lt;a href=&#34;https://kind.sigs.k8s.io/docs/contributing/getting-started&#34;&gt;contributor guide&lt;/a&gt; and the Kubernetes &lt;a href=&#34;https://kubernetes.io/community/&#34;&gt;community page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why kind?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;kind supports multi-node (including HA) clusters&lt;/li&gt; &#xA; &lt;li&gt;kind supports building Kubernetes release builds from source &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;support for make / bash or docker, in addition to pre-published builds&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;kind supports Linux, macOS and Windows&lt;/li&gt; &#xA; &lt;li&gt;kind is a &lt;a href=&#34;https://landscape.cncf.io/?selected=kind&#34;&gt;CNCF certified conformant Kubernetes installer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code of conduct&lt;/h3&gt; &#xA;&lt;p&gt;Participation in the Kubernetes community is governed by the &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/code-of-conduct.md&#34;&gt;Kubernetes Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--links--&gt;</summary>
  </entry>
</feed>