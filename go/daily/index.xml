<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-01T01:38:19Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dreddsa5dies/goHackTools</title>
    <updated>2023-12-01T01:38:19Z</updated>
    <id>tag:github.com,2023-12-01:/dreddsa5dies/goHackTools</id>
    <link href="https://github.com/dreddsa5dies/goHackTools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hacker tools on Go (Golang)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/dreddsa5dies/goHackTools&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/dreddsa5dies/goHackTools&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/img/goHackTools.png&#34; alt=&#34;IMAGE&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hacker tools on Go (Golang)&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;I used examples from the books &amp;amp; materials&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&#34;Violent Python&#34; TJ O&#39;Connor;&lt;/li&gt; &#xA;  &lt;li&gt;&#34;Black Hat Python&#34; Python Programming for Hackers and Pentesters by Justin Seitz;&lt;/li&gt; &#xA;  &lt;li&gt;&#34;Security with Go&#34; by John Daniel Leon;&lt;/li&gt; &#xA;  &lt;li&gt;&#34;Python Web Penetration Testing Cookbook&#34; by C.Buchanan, T.Ip, B.May, D.Mound, A.Mabbit;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://asecuritysite.com/&#34;&gt;asecuritysite&lt;/a&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://vk.com/doc187366527_464874978?hash=45d8e4c6fd48820484&amp;amp;dl=8e644ab04c8ad6520d&#34;&gt;Криптография с Python&lt;/a&gt;;&lt;/li&gt; &#xA;  &lt;li&gt;&#34;Black Hat Go&#34; Go Programming For Hackers and Pentesters by Tom Steele, Chris Patten, and Dan Kottmann.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List of projects&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/01_crackUnixPass/&#34;&gt;Перебор паролей в passwd&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/02_crackZipPass/&#34;&gt;Перебор паролей к архиву&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/12_sshCrack/&#34;&gt;Перебор паролей SSH&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/36_bruteHtmlForm/&#34;&gt;Перебор HTML-форм&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/03_tcpScanner/&#34;&gt;Сканер портов&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/04_goNmapScan/&#34;&gt;Сканер портов через Nmap&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/56_PerformingConcurrentScanning/&#34;&gt;Конкурентное сканирование портов&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/08_geoIp/&#34;&gt;Определение IP и адреса&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/10_buildGoogleMap/&#34;&gt;Определение IP и адреса II&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/43_netScan/&#34;&gt;Поиск устройств в сети&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/61_findNetDevs/&#34;&gt;Поиск сетевых устройств&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/31_lookupIP/&#34;&gt;Проверка хоста по IP&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/32_lookupHost/&#34;&gt;Получение IP-адреса хоста&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/33_getMXRec/&#34;&gt;Получение MX записей&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/34_getServName/&#34;&gt;Получение имен серверов DNS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/28_webChecker/&#34;&gt;Checker ресурса&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/05_sshGexpectShavac/&#34;&gt;Тест SSH&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/09_packetParser/&#34;&gt;Перебор сетевых пакетов&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/58_dnsGetA/&#34;&gt;Получение DNS записей&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/59_subdomains/&#34;&gt;Перебор поддоменов&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/06_forensicMozillaSQLITE/&#34;&gt;Исследование Sqlite браузера&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/07_metaDataPdf/&#34;&gt;Получение данных PDF&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/17_forensicImage/&#34;&gt;Определение типа файла (изображения)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/18_forensicFile/&#34;&gt;Определение типа файла (расширенное)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/19_getGeoTagPhoto/&#34;&gt;Получение геотегов изображения&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/24_getCookies/&#34;&gt;Получение cookies&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/25_calculateYouByMac/&#34;&gt;Получение информации по MAC-адресу&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/26_getFileInfo/&#34;&gt;Получение информации о файлах&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/21_RSAapp/&#34;&gt;Шифр RSA&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/22_CipherOfCaesar/&#34;&gt;Шифр Цезаря&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/53_cipherROT13/&#34;&gt;Шифр ROT-13&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/54_Vigenere/&#34;&gt;Шифр Виженера&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/55_bookCipher/&#34;&gt;Книжный шифр&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/23_Cryptographer/&#34;&gt;Шифровальщик&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/44_base64/&#34;&gt;Кодирование base-64&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/29_steganoImgArch/&#34;&gt;Стеганография&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/30_detectSteganoImgAndExtractIt/&#34;&gt;Поиск данных в изображении и их извлечение&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/37_httpHead/&#34;&gt;Получение заголовков HTTP&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/38_findHtmlComm/&#34;&gt;Поиск комментариев на web-страницах&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/39_findFilesOnWebServ/&#34;&gt;Поиск скрытых файлов на web-сервере&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/40_userAgent/&#34;&gt;Подмена User Agent&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/41_getHeader/&#34;&gt;Получение заголовков&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/42_grabbing/&#34;&gt;Grabbing сетевого устройства&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/45_findWrFiles/&#34;&gt;Поиск изменяемых файлов&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/60_filepathInfoSearcher/&#34;&gt;Поиск уязвимых файлов&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/46_fileTimestamp/&#34;&gt;Изменение атрибутов файлов&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/47_filePerm/&#34;&gt;Определение прав доступа к файлам&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/48_fileOwnership/&#34;&gt;Определение принадлежности файлов&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/50_extrLinkToMaltego/&#34;&gt;Получение ссылок для Maltego&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/51_extrEmailToMaltego/&#34;&gt;Получение данных email для Maltego&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/52_findAltSites/&#34;&gt;Идентификация альтернативных сайтов путем подмены данных agent&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/57_shodanAPI/&#34;&gt;Использование API Shodan&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/13_sshSwarm/&#34;&gt;SSH бот-сеть&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/14_TCPProxy/&#34;&gt;TCP proxy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/15_sshTunnel/&#34;&gt;SSH туннелирование&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/16_shell/&#34;&gt;Удаленный шелл&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/62_synFlood/&#34;&gt;SYN flood&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/11_netcat/&#34;&gt;Netcat&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/20_ospfGetAuth/&#34;&gt;Взлом OSPF&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/63_icmpPayload/&#34;&gt;Загрузка своих данных в icmp пакет&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/27_readingBootSector/&#34;&gt;Чтение загрузочного сектора&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/35_CSPRNG/&#34;&gt;Генератор случайных цифр (псевдо)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dreddsa5dies/goHackTools/master/projects/49_buildPNGmap/&#34;&gt;Создание карт объектов&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/boyter/scc&#34;&gt;SCC&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;───────────────────────────────────────────────────────────────────────────────&#xA;Language                 Files     Lines   Blanks  Comments     Code Complexity&#xA;───────────────────────────────────────────────────────────────────────────────&#xA;Go                          65      4758      878       269     3611        888&#xA;Plain Text                   9     21110        0         0    21110          0&#xA;Markdown                     2        20        3         0       17          0&#xA;───────────────────────────────────────────────────────────────────────────────&#xA;Total                       76     25888      881       269    24738        888&#xA;───────────────────────────────────────────────────────────────────────────────&#xA;Estimated Cost to Develop (organic) $784,563&#xA;Estimated Schedule Effort (organic) 12.54 months&#xA;Estimated People Required (organic) 5.56&#xA;───────────────────────────────────────────────────────────────────────────────&#xA;Processed 262599 bytes, 0.263 megabytes (SI)&#xA;───────────────────────────────────────────────────────────────────────────────&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thank you&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all authors of amazing books on information security&lt;/p&gt; &#xA;&lt;h2&gt;Predict&lt;/h2&gt; &#xA;&lt;p&gt;In spite of the license, I PREDICT that all the examples here are for reference only, and not for criminal (or malicious) purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://blog.golang.org/using-go-modules&#34;&gt;Go Modules&lt;/a&gt; &amp;amp;&amp;amp; install&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install libpcap-dev &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The code contains comments in Russian&lt;/h2&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under MIT license. Please read the &lt;a href=&#34;https://github.com/dreddsa5dies/goHackTools/tree/master/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Welcomes any kind of contribution. Please read the &lt;a href=&#34;https://github.com/dreddsa5dies/goHackTools/tree/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;, &lt;a href=&#34;https://github.com/dreddsa5dies/goHackTools/tree/master/ISSUE_TEMPLATE.md&#34;&gt;ISSUE TEMPLATE&lt;/a&gt; and &lt;a href=&#34;https://github.com/dreddsa5dies/goHackTools/tree/master/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>angelofallars/htmx-go</title>
    <updated>2023-12-01T01:38:19Z</updated>
    <id>tag:github.com,2023-12-01:/angelofallars/htmx-go</id>
    <link href="https://github.com/angelofallars/htmx-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/&gt; Build awesome HTMX + Go projects faster.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://github.com/angelofallars/htmx-go/assets/39676098/c1a14954-27fd-4276-8948-0800e5372b14&#34; width=&#34;400px&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/angelofallars/htmx-go?tab=doc&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/angelofallars/htmx-go?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/angelofallars/htmx-go/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/angelofallars/htmx-go/go.yml?cacheSeconds=30&#34; alt=&#34;GitHub Workflow Status (with event)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/angelofallars/htmx-go/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/angelofallars/htmx-go&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/angelofallars/htmx-go/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/angelofallars/htmx-go&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://htmx.org/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/725789699527933952?label=htmx%20discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;htmx-go is a &lt;strong&gt;type-safe&lt;/strong&gt; library for working with &lt;a href=&#34;https://htmx.org/&#34;&gt;HTMX&lt;/a&gt; in Go.&lt;/p&gt; &#xA;&lt;p&gt;Less time fiddling with HTTP headers, more time developing awesome Hypermedia-driven applications.&lt;/p&gt; &#xA;&lt;p&gt;Easily check if requests are from HTMX, and utilize a type-safe, declarative syntax for HTMX response headers to control HTMX behavior from the server.&lt;/p&gt; &#xA;&lt;p&gt;Write &lt;a href=&#34;https://raw.githubusercontent.com/angelofallars/htmx-go/main/#triggers&#34;&gt;triggers&lt;/a&gt; without dealing with JSON formatting. Define trigger behavior, and htmx-go handles the rest.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/angelofallars/htmx-go/main/#swap-strategy&#34;&gt;Swap Strategy&lt;/a&gt; methods to fine-tune &lt;code&gt;hx-swap&lt;/code&gt; behavior.&lt;/p&gt; &#xA;&lt;p&gt;Uses standard &lt;code&gt;net/http&lt;/code&gt; types. Has basic &lt;a href=&#34;https://raw.githubusercontent.com/angelofallars/htmx-go/main/#templ-integration&#34;&gt;integration&lt;/a&gt; with &lt;a href=&#34;https://templ.guide/&#34;&gt;templ&lt;/a&gt; components.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;  &#34;net/http&#34;&#xA;  &#34;github.com/angelofallars/htmx-go&#34;&#xA;)&#xA;&#xA;func(w http.ResponseWriter, r *http.Request) {&#xA;&#x9;if htmx.IsHTMX(r) {&#xA;&#x9;&#x9;htmx.NewResponse().&#xA;&#x9;&#x9;&#x9;Reswap(htmx.SwapBeforeEnd).&#xA;&#x9;&#x9;&#x9;Retarget(&#34;#errors&#34;).&#xA;&#x9;&#x9;&#x9;ReplaceURL(&#34;/errors&#34;).&#xA;&#x9;&#x9;&#x9;Write(w)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Think this project is awesome? &lt;a href=&#34;https://github.com/sponsors/angelofallars&#34;&gt;Consider sponsoring me&lt;/a&gt; 💙&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use go get.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go get github.com/angelofallars/htmx-go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then import htmx-go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;github.com/angelofallars/htmx-go&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;HTMX requests&lt;/h2&gt; &#xA;&lt;h3&gt;Check request origin&lt;/h3&gt; &#xA;&lt;p&gt;You can determine if a request is from HTMX. With this, you can add custom handling for non-HTMX requests.&lt;/p&gt; &#xA;&lt;p&gt;You can also use this for checking if this is a GET request for the initial (very first) page loads on your website, as initial page load requests don&#39;t use HTMX.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func(w http.ResponseWriter, r *http.Request) {&#xA;&#x9;if htmx.IsHTMX(r) {&#xA;&#x9;&#x9;// logic for handling HTMX requests&#xA;&#x9;} else {&#xA;&#x9;&#x9;// logic for handling non-HTMX requests (e.g. render a full page for first-time visitors)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Check if request is Boosted (&lt;code&gt;hx-boost&lt;/code&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func(w http.ResponseWriter, r *http.Request) {&#xA;&#x9;if htmx.IsBoosted(r) {&#xA;&#x9;&#x9;// logic for handling boosted requests&#xA;&#x9;} else {&#xA;&#x9;&#x9;// logic for handling non-boosted requests&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;HTMX responses&lt;/h2&gt; &#xA;&lt;p&gt;htmx-go takes inspiration from &lt;a href=&#34;https://github.com/charmbracelet/lipgloss&#34;&gt;Lip Gloss&lt;/a&gt; for a declarative way of specifying HTMX response headers.&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;Make a response writer with &lt;code&gt;htmx.NewResponse()&lt;/code&gt;, and add a header to it to make the page refresh:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func(w http.ResponseWriter, r *http.Request) {&#xA; &#x9;writer := htmx.NewResponse().Refresh(true)&#xA; &#x9;writer.Write(w)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retarget response to a different element&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func(w http.ResponseWriter, r *http.Request) {&#xA;&#x9;htmx.NewResponse().&#xA;&#x9;&#x9;// Override &#39;hx-target&#39; to specify which target to load into&#xA;&#x9;&#x9;Retarget(&#34;#errors&#34;).&#xA;&#x9;&#x9;// Also override the &#39;hx-swap&#39; value of the request&#xA;&#x9;&#x9;Reswap(htmx.SwapBeforeEnd).&#xA;&#x9;&#x9;Write(w)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Triggers&lt;/h3&gt; &#xA;&lt;p&gt;You can add triggers and let htmx-go take care of formatting and JSON serialization of the header values.&lt;/p&gt; &#xA;&lt;p&gt;Define event triggers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;htmx.Trigger(eventName string)&lt;/code&gt; - A trigger with no details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;htmx.TriggerDetail(eventName string, detailValue string)&lt;/code&gt; - A trigger with one detail value.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;htmx.TriggerObject(eventName string, detailObject any)&lt;/code&gt; - A trigger with a JSON-serializable detail object. Recommended to pass in either &lt;code&gt;map[string]string&lt;/code&gt; or structs with JSON field tags.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Set trigger headers using the triggers above:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Response.AddTrigger(trigger ...EventTrigger)&lt;/code&gt; - appends to the &lt;code&gt;HX-Trigger&lt;/code&gt; header&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Response.AddTriggerAfterSettle(trigger ...EventTrigger)&lt;/code&gt; - appends to the &lt;code&gt;HX-Trigger-After-Settle&lt;/code&gt; header&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Response.AddTriggerAfterSwap(trigger ...EventTrigger)&lt;/code&gt; - appends to the &lt;code&gt;HX-Trigger-After-Swap&lt;/code&gt; header&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;&#xA;htmx.NewResponse().&#xA;&#x9;AddTrigger(htmx.Trigger(&#34;myEvent&#34;))&#xA;// HX-Trigger: myEvent&#xA;&#xA;htmx.NewResponse().&#xA;&#x9;AddTrigger(htmx.TriggerDetail(&#34;showMessage&#34;, &#34;Here Is A Message&#34;))&#xA;// HX-Trigger: {&#34;showMessage&#34;:&#34;Here Is A Message&#34;}&#xA;&#xA;htmx.NewResponse().&#xA;&#x9;AddTrigger(&#xA;&#x9;&#x9;&#x9;htmx.TriggerDetail(&#34;hello&#34;, &#34;world&#34;),&#xA;&#x9;&#x9;&#x9;htmx.TriggerObject(&#34;myEvent&#34;, map[string]string{&#xA;&#x9;&#x9;&#x9;&#x9;&#34;level&#34;:   &#34;info&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;message&#34;: &#34;Here Is A Message&#34;,&#xA;&#x9;&#x9;&#x9;}),&#xA;  )&#xA;// HX-Trigger: {&#34;hello&#34;:&#34;world&#34;,&#34;myEvent&#34;:{&#34;level&#34;:&#34;info&#34;,&#34;message&#34;:&#34;Here is a Message&#34;}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swap Strategy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Response.Reswap()&lt;/code&gt; takes in &lt;code&gt;SwapStrategy&lt;/code&gt; values from this library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;htmx.NewResponse().&#xA;&#x9;Reswap(htmx.SwapInnerHTML)&#xA;// HX-Reswap: innerHTML&#xA;&#xA;htmx.NewResponse().&#xA;&#x9;Reswap(htmx.SwapAfterEnd.Transition(true))&#xA;// HX-Reswap: innerHTML transition:true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exported &lt;code&gt;SwapStrategy&lt;/code&gt; constant values can be appended with modifiers through their methods. If successive methods write to the same modifier, the modifier is always replaced with the latest one.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;time&#34;&#xA;&#xA;htmx.SwapInnerHTMl.After(time.Second * 1)&#xA;// HX-Reswap: innerHTML swap:1s&#xA;&#xA;htmx.SwapBeforeEnd.Scroll(htmx.Bottom)&#xA;// HX-Reswap: beforeend scroll:bottom&#xA;&#xA;htmx.SwapAfterEnd.IgnoreTitle(true)&#xA;// HX-Reswap: afterend ignoreTitle:true&#xA;&#xA;htmx.SwapAfterEnd.FocusScroll(true)&#xA;// HX-Reswap: afterend ignoreTitle:true&#xA;&#xA;htmx.SwapInnerHTML.ShowOn(&#34;#another-div&#34;, htmx.Top)&#xA;// HX-Reswap: innerHTML show:#another-div:top&#xA;&#xA;// Modifier chaining&#xA;htmx.SwapInnerHTML.ShowOn(&#34;#another-div&#34;, htmx.Top).After(time.Millisecond * 500)&#xA;// HX-Reswap: innerHTML show:#another-div:top swap:500ms&#xA;&#xA;htmx.SwapBeforeBegin.ShowWindow(htmx.Top)&#xA;// HX-Reswap: beforebegin show&lt;span&gt;🪟&lt;/span&gt;top&#xA;&#xA;htmx.SwapDefault.ShowNone()&#xA;// HX-Reswap: show:none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://htmx.org/attributes/hx-swap/&#34;&gt;HTMX Reference: &lt;code&gt;hx-swap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Code organization&lt;/h3&gt; &#xA;&lt;p&gt;HTMX response writers can be declared outside of functions with &lt;code&gt;var&lt;/code&gt; so you can reuse them in several places.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] If you&#39;re adding additional headers to a global response writer, always use the &lt;code&gt;.Clone()&lt;/code&gt; method to avoid accidentally modifying the global response writer.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var deleter = htmx.NewResponse().&#xA;    Reswap(htmx.SwapDelete)&#xA;&#xA;func(w http.ResponseWriter, r *http.Request) {&#xA;&#x9;deleter.Clone().&#xA;&#x9;&#x9;Reselect(&#34;#messages&#34;).&#xA;&#x9;&#x9;Write(w)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Templ integration&lt;/h3&gt; &#xA;&lt;p&gt;HTMX pairs well with &lt;a href=&#34;https://templ.guide&#34;&gt;Templ&lt;/a&gt;, and this library is no exception. You can render both the necessary HTMX response headers and Templ components in one step with the &lt;code&gt;.RenderTempl()&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// hello.templ&#xA;templ Hello() {&#xA;    &amp;lt;div&amp;gt;Hello { name }!&amp;lt;/div&amp;gt;&#xA;}&#xA;&#xA;// main.go&#xA;func(w http.ResponseWriter, r *http.Request) {&#xA;&#x9;htmx.NewResponse().&#xA;&#x9;&#x9;Retarget(&#34;#hello&#34;).&#xA;&#x9;&#x9;RenderTempl(r.Context(), w, Hello())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] To avoid issues with custom HTTP status code headers with this approach, it is recommended to use &lt;code&gt;Response().StatusCode()&lt;/code&gt; so the status code header is always set after the HTMX headers.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Stop polling&lt;/h3&gt; &#xA;&lt;p&gt;If you have an element that is polling a URL and you want it to stop, use the &lt;code&gt;htmx.StatusStopPolling&lt;/code&gt; 286 status code in a response to cancel the polling. &lt;a href=&#34;https://htmx.org/docs/#polling&#34;&gt;HTMX documentation reference&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;w.WriteHeader(htmx.StatusStopPolling)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Header names&lt;/h2&gt; &#xA;&lt;p&gt;If you need to work with HTMX headers directly, htmx-go provides constant values for all HTTP header field names of HTMX so you don&#39;t have to write them yourself. This mitigates the risk of writing header names with typos.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Request headers&#xA;const (&#xA;&#x9;HeaderBoosted               = &#34;HX-Boosted&#34;&#xA;&#x9;HeaderCurrentURL            = &#34;HX-Current-URL&#34;&#xA;&#x9;HeaderHistoryRestoreRequest = &#34;HX-History-Restore-Request&#34;&#xA;&#x9;HeaderPrompt                = &#34;HX-Prompt&#34;&#xA;&#x9;HeaderRequest               = &#34;Hx-Request&#34;&#xA;&#x9;HeaderTarget                = &#34;HX-Target&#34;&#xA;&#x9;HeaderTriggerName           = &#34;Hx-Trigger-Name&#34;&#xA;)&#xA;&#xA;// Common headers&#xA;const (&#xA;&#x9;HeaderTrigger = &#34;HX-Trigger&#34;&#xA;)&#xA;&#xA;// Response headers&#xA;const (&#xA;&#x9;HeaderLocation           = &#34;HX-Location&#34;&#xA;&#x9;HeaderPushURL            = &#34;HX-Push-Url&#34;&#xA;&#x9;HeaderRedirect           = &#34;HX-Redirect&#34;&#xA;&#x9;HeaderRefresh            = &#34;HX-Refresh&#34;&#xA;&#x9;HeaderReplaceUrl         = &#34;HX-Replace-Url&#34;&#xA;&#x9;HeaderReswap             = &#34;HX-Reswap&#34;&#xA;&#x9;HeaderRetarget           = &#34;HX-Retarget&#34;&#xA;&#x9;HeaderReselect           = &#34;HX-Reselect&#34;&#xA;&#x9;HeaderTriggerAfterSettle = &#34;HX-Trigger-After-Settle&#34;&#xA;&#x9;HeaderTriggerAfterSwap   = &#34;HX-Trigger-After-Swap&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;This library is compatible with the standard &lt;code&gt;net/http&lt;/code&gt; library, as well as other routers like Chi and Gorilla Mux that use the standard &lt;code&gt;http.HandlerFunc&lt;/code&gt; handler type.&lt;/p&gt; &#xA;&lt;p&gt;With the Echo web framework, try passing in &lt;code&gt;context.Request()&lt;/code&gt; and &lt;code&gt;context.Response().Writer&lt;/code&gt; for requests and responses, respectively.&lt;/p&gt; &#xA;&lt;p&gt;With the Gin web framework on the other hand, try using &lt;code&gt;context.Request&lt;/code&gt; and &lt;code&gt;context.Writer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use Fiber, it is recommended to use &lt;a href=&#34;https://github.com/sopa0/htmx-fiber&#34;&gt;&lt;code&gt;htmx-fiber&lt;/code&gt;&lt;/a&gt; instead, which is a fork of htmx-go.&lt;/p&gt; &#xA;&lt;h2&gt;Additional resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://htmx.org/reference/#headers&#34;&gt;HTMX - HTTP Header Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angelofallars/htmx-go/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tilt-dev/tilt</title>
    <updated>2023-12-01T01:38:19Z</updated>
    <id>tag:github.com,2023-12-01:/tilt-dev/tilt</id>
    <link href="https://github.com/tilt-dev/tilt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Define your dev environment as code. For microservice apps on Kubernetes.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tilt&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/tilt-dev/tilt/master/assets/logo-wordmark.png&#34; width=&#34;250&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/tilt-dev/tilt&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/tilt-dev/tilt/tree/master.svg?style=shield&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/tilt-dev/tilt&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/tilt-dev/tilt?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes for Prod, Tilt for Dev&lt;/p&gt; &#xA;&lt;p&gt;Modern apps are made of too many services. They&#39;re everywhere and in constant communication.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tilt.dev&#34;&gt;Tilt&lt;/a&gt; powers microservice development and makes sure they behave! Run &lt;code&gt;tilt up&lt;/code&gt; to work in a complete dev environment configured for your team.&lt;/p&gt; &#xA;&lt;p&gt;Tilt automates all the steps from a code change to a new process: watching files, building container images, and bringing your environment up-to-date. Think &lt;code&gt;docker build &amp;amp;&amp;amp; kubectl apply&lt;/code&gt; or &lt;code&gt;docker-compose up&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Watch: Tilt in Two Minutes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=FSMc3kQgd5Y&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tilt-dev/tilt/master/assets/tilt-video.png&#34; alt=&#34;screencast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install Tilt&lt;/h2&gt; &#xA;&lt;p&gt;Installing the &lt;code&gt;tilt&lt;/code&gt; binary is a one-step command.&lt;/p&gt; &#xA;&lt;h3&gt;macOS/Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;iex ((new-object net.webclient).DownloadString(&#39;https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.ps1&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For specific package managers (Homebrew, Scoop, Conda, asdf), see the &lt;a href=&#34;https://docs.tilt.dev/install.html&#34;&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run Tilt&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;New to Tilt?&lt;/strong&gt; Our tutorial will &lt;a href=&#34;https://docs.tilt.dev/tutorial.html&#34;&gt;get you started&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuring a Service?&lt;/strong&gt; We have best practice guides for &lt;a href=&#34;https://docs.tilt.dev/example_static_html.html&#34;&gt;HTML&lt;/a&gt;, &lt;a href=&#34;https://docs.tilt.dev/example_nodejs.html&#34;&gt;NodeJS&lt;/a&gt;, &lt;a href=&#34;https://docs.tilt.dev/example_python.html&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://docs.tilt.dev/example_go.html&#34;&gt;Go&lt;/a&gt;, &lt;a href=&#34;https://docs.tilt.dev/example_java.html&#34;&gt;Java&lt;/a&gt;, and &lt;a href=&#34;https://docs.tilt.dev/example_csharp.html&#34;&gt;C#&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Optimizing a Tiltfile?&lt;/strong&gt; Search for the function you need in our &lt;a href=&#34;https://docs.tilt.dev/api.html&#34;&gt;complete API reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community &amp;amp; Contributions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Questions:&lt;/strong&gt; Join &lt;a href=&#34;http://slack.k8s.io&#34;&gt;the Kubernetes slack&lt;/a&gt; and find us in the &lt;a href=&#34;https://kubernetes.slack.com/messages/CESBL84MV/&#34;&gt;#tilt&lt;/a&gt; channel. Or &lt;a href=&#34;https://github.com/tilt-dev/tilt/issues&#34;&gt;file an issue&lt;/a&gt;. For code snippets of Tiltfile functionality shared by the Tilt community, check out &lt;a href=&#34;https://github.com/tilt-dev/tilt-extensions&#34;&gt;Tilt Extensions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Contribute:&lt;/strong&gt; Check out our &lt;a href=&#34;https://raw.githubusercontent.com/tilt-dev/tilt/master/CONTRIBUTING.md&#34;&gt;guidelines&lt;/a&gt; to contribute to Tilt&#39;s source code. To extend the capabilities of Tilt via new Tiltfile functionality, read more about &lt;a href=&#34;https://docs.tilt.dev/extensions.html&#34;&gt;Extensions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Follow along:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/tilt_dev&#34;&gt;@tilt_dev&lt;/a&gt; on Twitter. For updates and announcements, follow &lt;a href=&#34;https://blog.tilt.dev&#34;&gt;the blog&lt;/a&gt; or subscribe to &lt;a href=&#34;https://tilt.dev/subscribe&#34;&gt;the newsletter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Help us make Tilt even better:&lt;/strong&gt; Tilt sends anonymized usage data, so we can improve Tilt on every platform. Details in &lt;a href=&#34;http://docs.tilt.dev/telemetry_faq.html&#34;&gt;&#34;What does Tilt send?&#34;&lt;/a&gt;. If you find a security issue in Tilt, see our &lt;a href=&#34;https://raw.githubusercontent.com/tilt-dev/tilt/master/SECURITY.md&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We expect everyone in our community (users, contributors, followers, and employees alike) to abide by our &lt;a href=&#34;https://raw.githubusercontent.com/tilt-dev/tilt/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2022 Docker, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under &lt;a href=&#34;https://raw.githubusercontent.com/tilt-dev/tilt/master/LICENSE&#34;&gt;the Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>