<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-04T01:32:08Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yuin/goldmark</title>
    <updated>2023-01-04T01:32:08Z</updated>
    <id>tag:github.com,2023-01-04:/yuin/goldmark</id>
    <link href="https://github.com/yuin/goldmark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üèÜ A markdown parser written in Go. Easy to extend, standard(CommonMark) compliant, well structured.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;goldmark&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/yuin/goldmark&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/yuin/goldmark.svg?sanitize=true&#34; alt=&#34;https://pkg.go.dev/github.com/yuin/goldmark&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yuin/goldmark/actions?query=workflow:test&#34;&gt;&lt;img src=&#34;https://github.com/yuin/goldmark/workflows/test/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;https://github.com/yuin/goldmark/actions?query=workflow:test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/yuin/goldmark&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/yuin/goldmark/badge.svg?branch=master&#34; alt=&#34;https://coveralls.io/github/yuin/goldmark&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/yuin/goldmark&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/yuin/goldmark&#34; alt=&#34;https://goreportcard.com/report/github.com/yuin/goldmark&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A Markdown parser written in Go. Easy to extend, standards-compliant, well-structured.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;goldmark is compliant with CommonMark 0.30.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;I needed a Markdown parser for Go that satisfies the following requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to extend. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Markdown is poor in document expressions compared to other light markup languages such as reStructuredText.&lt;/li&gt; &#xA;   &lt;li&gt;We have extensions to the Markdown syntax, e.g. PHP Markdown Extra, GitHub Flavored Markdown.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Standards-compliant. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Markdown has many dialects.&lt;/li&gt; &#xA;   &lt;li&gt;GitHub-Flavored Markdown is widely used and is based upon CommonMark, effectively mooting the question of whether or not CommonMark is an ideal specification. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;CommonMark is complicated and hard to implement.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Well-structured. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AST-based; preserves source position of nodes.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Written in pure Go.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/golang-commonmark/markdown&#34;&gt;golang-commonmark&lt;/a&gt; may be a good choice, but it seems to be a copy of &lt;a href=&#34;https://github.com/markdown-it&#34;&gt;markdown-it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/russross/blackfriday/tree/v2&#34;&gt;blackfriday.v2&lt;/a&gt; is a fast and widely-used implementation, but is not CommonMark-compliant and cannot be extended from outside of the package, since its AST uses structs instead of interfaces.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, its behavior differs from other implementations in some cases, especially regarding lists: &lt;a href=&#34;https://github.com/russross/blackfriday/issues/329&#34;&gt;Deep nested lists don&#39;t output correctly #329&lt;/a&gt;, &lt;a href=&#34;https://github.com/russross/blackfriday/issues/244&#34;&gt;List block cannot have a second line #244&lt;/a&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;This behavior sometimes causes problems. If you migrate your Markdown text from GitHub to blackfriday-based wikis, many lists will immediately be broken.&lt;/p&gt; &#xA;&lt;p&gt;As mentioned above, CommonMark is complicated and hard to implement, so Markdown parsers based on CommonMark are few and far between.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Standards-compliant.&lt;/strong&gt; goldmark is fully compliant with the latest &lt;a href=&#34;https://commonmark.org/&#34;&gt;CommonMark&lt;/a&gt; specification.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensible.&lt;/strong&gt; Do you want to add a &lt;code&gt;@username&lt;/code&gt; mention syntax to Markdown? You can easily do so in goldmark. You can add your AST nodes, parsers for block-level elements, parsers for inline-level elements, transformers for paragraphs, transformers for the whole AST structure, and renderers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance.&lt;/strong&gt; goldmark&#39;s performance is on par with that of cmark, the CommonMark reference implementation written in C.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Robust.&lt;/strong&gt; goldmark is tested with &lt;code&gt;go test --fuzz&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built-in extensions.&lt;/strong&gt; goldmark ships with common extensions like tables, strikethrough, task lists, and definition lists.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Depends only on standard libraries.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go get github.com/yuin/goldmark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Import packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;    &#34;bytes&#34;&#xA;    &#34;github.com/yuin/goldmark&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Convert Markdown documents with the CommonMark-compliant mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var buf bytes.Buffer&#xA;if err := goldmark.Convert(source, &amp;amp;buf); err != nil {&#xA;  panic(err)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;With options&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var buf bytes.Buffer&#xA;if err := goldmark.Convert(source, &amp;amp;buf, parser.WithContext(ctx)); err != nil {&#xA;  panic(err)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.WithContext&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;code&gt;parser.Context&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Context for the parsing phase.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Context options&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.WithIDs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;code&gt;parser.IDs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IDs&lt;/code&gt; allows you to change logics that are related to element id(ex: Auto heading id generation).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Custom parser and renderer&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;    &#34;bytes&#34;&#xA;    &#34;github.com/yuin/goldmark&#34;&#xA;    &#34;github.com/yuin/goldmark/extension&#34;&#xA;    &#34;github.com/yuin/goldmark/parser&#34;&#xA;    &#34;github.com/yuin/goldmark/renderer/html&#34;&#xA;)&#xA;&#xA;md := goldmark.New(&#xA;          goldmark.WithExtensions(extension.GFM),&#xA;          goldmark.WithParserOptions(&#xA;              parser.WithAutoHeadingID(),&#xA;          ),&#xA;          goldmark.WithRendererOptions(&#xA;              html.WithHardWraps(),&#xA;              html.WithXHTML(),&#xA;          ),&#xA;      )&#xA;var buf bytes.Buffer&#xA;if err := md.Convert(source, &amp;amp;buf); err != nil {&#xA;    panic(err)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;goldmark.WithParser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.Parser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This option must be passed before &lt;code&gt;goldmark.WithParserOptions&lt;/code&gt; and &lt;code&gt;goldmark.WithExtensions&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;goldmark.WithRenderer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;renderer.Renderer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This option must be passed before &lt;code&gt;goldmark.WithRendererOptions&lt;/code&gt; and &lt;code&gt;goldmark.WithExtensions&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;goldmark.WithParserOptions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...parser.Option&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;goldmark.WithRendererOptions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...renderer.Option&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;goldmark.WithExtensions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...goldmark.Extender&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Parser and Renderer options&lt;/h2&gt; &#xA;&lt;h3&gt;Parser options&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.WithBlockParsers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;code&gt;util.PrioritizedSlice&lt;/code&gt; whose elements are &lt;code&gt;parser.BlockParser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Parsers for parsing block level elements.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.WithInlineParsers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;code&gt;util.PrioritizedSlice&lt;/code&gt; whose elements are &lt;code&gt;parser.InlineParser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Parsers for parsing inline level elements.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.WithParagraphTransformers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;code&gt;util.PrioritizedSlice&lt;/code&gt; whose elements are &lt;code&gt;parser.ParagraphTransformer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Transformers for transforming paragraph nodes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.WithASTTransformers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;code&gt;util.PrioritizedSlice&lt;/code&gt; whose elements are &lt;code&gt;parser.ASTTransformer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Transformers for transforming an AST.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.WithAutoHeadingID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enables auto heading ids.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parser.WithAttribute&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enables custom attributes. Currently only headings supports attributes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;HTML Renderer options&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;html.WithWriter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;html.Writer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;html.Writer&lt;/code&gt; for writing contents to an &lt;code&gt;io.Writer&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;html.WithHardWraps&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Render newlines as &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;html.WithXHTML&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Render as XHTML.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;html.WithUnsafe&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;By default, goldmark does not render raw HTML or potentially dangerous links. With this option, goldmark renders such content as written.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Built-in extensions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.Table&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.github.com/gfm/#tables-extension-&#34;&gt;GitHub Flavored Markdown: Tables&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.Strikethrough&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.github.com/gfm/#strikethrough-extension-&#34;&gt;GitHub Flavored Markdown: Strikethrough&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.Linkify&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.github.com/gfm/#autolinks-extension-&#34;&gt;GitHub Flavored Markdown: Autolinks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.TaskList&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.github.com/gfm/#task-list-items-extension-&#34;&gt;GitHub Flavored Markdown: Task list items&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.GFM&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This extension enables Table, Strikethrough, Linkify and TaskList.&lt;/li&gt; &#xA;   &lt;li&gt;This extension does not filter tags defined in &lt;a href=&#34;https://github.github.com/gfm/#disallowed-raw-html-extension-&#34;&gt;6.11: Disallowed Raw HTML (extension)&lt;/a&gt;. If you need to filter HTML tags, see &lt;a href=&#34;https://raw.githubusercontent.com/yuin/goldmark/master/#security&#34;&gt;Security&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;If you need to parse github emojis, you can use &lt;a href=&#34;https://github.com/yuin/goldmark-emoji&#34;&gt;goldmark-emoji&lt;/a&gt; extension.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.DefinitionList&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://michelf.ca/projects/php-markdown/extra/#def-list&#34;&gt;PHP Markdown Extra: Definition lists&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.Footnote&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://michelf.ca/projects/php-markdown/extra/#footnotes&#34;&gt;PHP Markdown Extra: Footnotes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.Typographer&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This extension substitutes punctuations with typographic entities like &lt;a href=&#34;https://daringfireball.net/projects/smartypants/&#34;&gt;smartypants&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extension.CJK&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This extension is a shortcut for CJK related functionalities.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;parser.WithAttribute&lt;/code&gt; option allows you to define attributes on some elements.&lt;/p&gt; &#xA;&lt;p&gt;Currently only headings support attributes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attributes are being discussed in the &lt;a href=&#34;https://talk.commonmark.org/t/consistent-attribute-syntax/272&#34;&gt;CommonMark forum&lt;/a&gt;. This syntax may possibly change in the future.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Headings&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;## heading ## {#id .className attrName=attrValue class=&#34;class1 class2&#34;}&#xA;&#xA;## heading {#id .className attrName=attrValue class=&#34;class1 class2&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;heading {#id .className attrName=attrValue}&#xA;============&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Table extension&lt;/h3&gt; &#xA;&lt;p&gt;The Table extension implements &lt;a href=&#34;https://github.github.com/gfm/#tables-extension-&#34;&gt;Table(extension)&lt;/a&gt;, as defined in &lt;a href=&#34;https://github.github.com/gfm/&#34;&gt;GitHub Flavored Markdown Spec&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Specs are defined for XHTML, so specs use some deprecated attributes for HTML5.&lt;/p&gt; &#xA;&lt;p&gt;You can override alignment rendering method via options.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithTableCellAlignMethod&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.TableCellAlignMethod&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Option indicates how are table cells aligned.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Typographer extension&lt;/h3&gt; &#xA;&lt;p&gt;The Typographer extension translates plain ASCII punctuation characters into typographic-punctuation HTML entities.&lt;/p&gt; &#xA;&lt;p&gt;Default substitutions are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Punctuation&lt;/th&gt; &#xA;   &lt;th&gt;Default entity&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;lsquo;&lt;/code&gt;, &lt;code&gt;&amp;amp;rsquo;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;ldquo;&lt;/code&gt;, &lt;code&gt;&amp;amp;rdquo;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;ndash;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;---&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;mdash;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;hellip;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;laquo;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;raquo;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can override the default substitutions via &lt;code&gt;extensions.WithTypographicSubstitutions&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;markdown := goldmark.New(&#xA;    goldmark.WithExtensions(&#xA;        extension.NewTypographer(&#xA;            extension.WithTypographicSubstitutions(extension.TypographicSubstitutions{&#xA;                extension.LeftSingleQuote:  []byte(&#34;&amp;amp;sbquo;&#34;),&#xA;                extension.RightSingleQuote: nil, // nil disables a substitution&#xA;            }),&#xA;        ),&#xA;    ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linkify extension&lt;/h3&gt; &#xA;&lt;p&gt;The Linkify extension implements &lt;a href=&#34;https://github.github.com/gfm/#autolinks-extension-&#34;&gt;Autolinks(extension)&lt;/a&gt;, as defined in &lt;a href=&#34;https://github.github.com/gfm/&#34;&gt;GitHub Flavored Markdown Spec&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since the spec does not define details about URLs, there are numerous ambiguous cases.&lt;/p&gt; &#xA;&lt;p&gt;You can override autolinking patterns via options.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithLinkifyAllowedProtocols&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[][]byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;List of allowed protocols such as &lt;code&gt;[][]byte{ []byte(&#34;http:&#34;) }&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithLinkifyURLRegexp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;*regexp.Regexp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Regexp that defines URLs, including protocols&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithLinkifyWWWRegexp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;*regexp.Regexp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Regexp that defines URL starting with &lt;code&gt;www.&lt;/code&gt;. This pattern corresponds to &lt;a href=&#34;https://github.github.com/gfm/#extended-www-autolink&#34;&gt;the extended www autolink&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithLinkifyEmailRegexp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;*regexp.Regexp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Regexp that defines email addresses`&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Example, using &lt;a href=&#34;https://github.com/mvdan/xurls&#34;&gt;xurls&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;mvdan.cc/xurls/v2&#34;&#xA;&#xA;markdown := goldmark.New(&#xA;    goldmark.WithRendererOptions(&#xA;        html.WithXHTML(),&#xA;        html.WithUnsafe(),&#xA;    ),&#xA;    goldmark.WithExtensions(&#xA;        extension.NewLinkify(&#xA;            extension.WithLinkifyAllowedProtocols([][]byte{&#xA;                []byte(&#34;http:&#34;),&#xA;                []byte(&#34;https:&#34;),&#xA;            }),&#xA;            extension.WithLinkifyURLRegexp(&#xA;                xurls.Strict,&#xA;            ),&#xA;        ),&#xA;    ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Footnotes extension&lt;/h3&gt; &#xA;&lt;p&gt;The Footnote extension implements &lt;a href=&#34;https://michelf.ca/projects/php-markdown/extra/#footnotes&#34;&gt;PHP Markdown Extra: Footnotes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This extension has some options:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithFootnoteIDPrefix&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a prefix for the id attributes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithFootnoteIDPrefixFunction&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;func(gast.Node) []byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a function that determines the id attribute for given Node.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithFootnoteLinkTitle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;an optional title attribute for footnote links.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithFootnoteBacklinkTitle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;an optional title attribute for footnote backlinks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithFootnoteLinkClass&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a class for footnote links. This defaults to &lt;code&gt;footnote-ref&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithFootnoteBacklinkClass&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a class for footnote backlinks. This defaults to &lt;code&gt;footnote-backref&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithFootnoteBacklinkHTML&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]byte&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a class for footnote backlinks. This defaults to &lt;code&gt;&amp;amp;#x21a9;&amp;amp;#xfe0e;&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Some options can have special substitutions. Occurrences of ‚Äú^^‚Äù in the string will be replaced by the corresponding footnote number in the HTML output. Occurrences of ‚Äú%%‚Äù will be replaced by a number for the reference (footnotes can have multiple references).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;extension.WithFootnoteIDPrefix&lt;/code&gt; and &lt;code&gt;extension.WithFootnoteIDPrefixFunction&lt;/code&gt; are useful if you have multiple Markdown documents displayed inside one HTML document to avoid footnote ids to clash each other.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;extension.WithFootnoteIDPrefix&lt;/code&gt; sets fixed id prefix, so you may write codes like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;for _, path := range files {&#xA;    source := readAll(path)&#xA;    prefix := getPrefix(path)&#xA;&#xA;    markdown := goldmark.New(&#xA;        goldmark.WithExtensions(&#xA;            NewFootnote(&#xA;                WithFootnoteIDPrefix([]byte(path)),&#xA;            ),&#xA;        ),&#xA;    )&#xA;    var b bytes.Buffer&#xA;    err := markdown.Convert(source, &amp;amp;b)&#xA;    if err != nil {&#xA;        t.Error(err.Error())&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;extension.WithFootnoteIDPrefixFunction&lt;/code&gt; determines an id prefix by calling given function, so you may write codes like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;markdown := goldmark.New(&#xA;    goldmark.WithExtensions(&#xA;        NewFootnote(&#xA;                WithFootnoteIDPrefixFunction(func(n gast.Node) []byte {&#xA;                    v, ok := n.OwnerDocument().Meta()[&#34;footnote-prefix&#34;]&#xA;                    if ok {&#xA;                        return util.StringToReadOnlyBytes(v.(string))&#xA;                    }&#xA;                    return nil&#xA;                }),&#xA;        ),&#xA;    ),&#xA;)&#xA;&#xA;for _, path := range files {&#xA;    source := readAll(path)&#xA;    var b bytes.Buffer&#xA;&#xA;    doc := markdown.Parser().Parse(text.NewReader(source))&#xA;    doc.Meta()[&#34;footnote-prefix&#34;] = getPrefix(path)&#xA;    err := markdown.Renderer().Render(&amp;amp;b, source, doc)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/yuin/goldmark-meta&#34;&gt;goldmark-meta&lt;/a&gt; to define a id prefix in the markdown document:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;---&#xA;title: document title&#xA;slug: article1&#xA;footnote-prefix: article1&#xA;---&#xA;&#xA;# My article&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CJK extension&lt;/h3&gt; &#xA;&lt;p&gt;CommonMark gives compatibilities a high priority and original markdown was designed by westerners. So CommonMark lacks considerations for languages like CJK.&lt;/p&gt; &#xA;&lt;p&gt;This extension provides additional options for CJK users.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functional option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithEastAsianLineBreaks&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Soft line breaks are rendered as a newline. Some asian users will see it as an unnecessary space. With this option, soft line breaks between east asian wide characters will be ignored.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extension.WithEscapedSpace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Without spaces around an emphasis started with east asian punctuations, it is not interpreted as an emphasis(as defined in CommonMark spec). With this option, you can avoid this inconvenient behavior by putting &#39;not rendered&#39; spaces around an emphasis like &lt;code&gt;Â§™ÈÉé„ÅØ\ **„Äå„Åì„Çì„Å´„Å°„Çè„Äç**\ „Å®„ÅÑ„Å£„Åü&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;By default, goldmark does not render raw HTML or potentially-dangerous URLs. If you need to gain more control over untrusted contents, it is recommended that you use an HTML sanitizer such as &lt;a href=&#34;https://github.com/microcosm-cc/bluemonday&#34;&gt;bluemonday&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmark&lt;/h2&gt; &#xA;&lt;p&gt;You can run this benchmark in the &lt;code&gt;_benchmark&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;against other golang libraries&lt;/h3&gt; &#xA;&lt;p&gt;blackfriday v2 seems to be the fastest, but as it is not CommonMark compliant, its performance cannot be directly compared to that of the CommonMark-compliant libraries.&lt;/p&gt; &#xA;&lt;p&gt;goldmark, meanwhile, builds a clean, extensible AST structure, achieves full compliance with CommonMark, and consumes less memory, all while being reasonably fast.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MBP 2019 13‚Ä≥(i5, 16GB), Go1.17&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;BenchmarkMarkdown/Blackfriday-v2-8                   302           3743747 ns/op         3290445 B/op      20050 allocs/op&#xA;BenchmarkMarkdown/GoldMark-8                         280           4200974 ns/op         2559738 B/op      13435 allocs/op&#xA;BenchmarkMarkdown/CommonMark-8                       226           5283686 ns/op         2702490 B/op      20792 allocs/op&#xA;BenchmarkMarkdown/Lute-8                              12          92652857 ns/op        10602649 B/op      40555 allocs/op&#xA;BenchmarkMarkdown/GoMarkdown-8                        13          81380167 ns/op         2245002 B/op      22889 allocs/op&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;against cmark (CommonMark reference implementation written in C)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MBP 2019 13‚Ä≥(i5, 16GB), Go1.17&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;----------- cmark -----------&#xA;file: _data.md&#xA;iteration: 50&#xA;average: 0.0044073057 sec&#xA;------- goldmark -------&#xA;file: _data.md&#xA;iteration: 50&#xA;average: 0.0041611990 sec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see, goldmark&#39;s performance is on par with cmark&#39;s.&lt;/p&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yuin/goldmark-meta&#34;&gt;goldmark-meta&lt;/a&gt;: A YAML metadata extension for the goldmark Markdown parser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yuin/goldmark-highlighting&#34;&gt;goldmark-highlighting&lt;/a&gt;: A syntax-highlighting extension for the goldmark markdown parser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yuin/goldmark-emoji&#34;&gt;goldmark-emoji&lt;/a&gt;: An emoji extension for the goldmark Markdown parser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/litao91/goldmark-mathjax&#34;&gt;goldmark-mathjax&lt;/a&gt;: Mathjax support for the goldmark markdown parser&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stephenafamo/goldmark-pdf&#34;&gt;goldmark-pdf&lt;/a&gt;: A PDF renderer that can be passed to &lt;code&gt;goldmark.WithRenderer()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abhinav/goldmark-hashtag&#34;&gt;goldmark-hashtag&lt;/a&gt;: Adds support for &lt;code&gt;#hashtag&lt;/code&gt;-based tagging to goldmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abhinav/goldmark-wikilink&#34;&gt;goldmark-wikilink&lt;/a&gt;: Adds support for &lt;code&gt;[[wiki]]&lt;/code&gt;-style links to goldmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abhinav/goldmark-toc&#34;&gt;goldmark-toc&lt;/a&gt;: Adds support for generating tables-of-contents for goldmark documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abhinav/goldmark-mermaid&#34;&gt;goldmark-mermaid&lt;/a&gt;: Adds support for rendering &lt;a href=&#34;https://mermaid-js.github.io/mermaid/&#34;&gt;Mermaid&lt;/a&gt; diagrams in goldmark documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jchenry/goldmark-pikchr&#34;&gt;goldmark-pikchr&lt;/a&gt;: Adds support for rendering &lt;a href=&#34;https://pikchr.org/home/doc/trunk/homepage.md&#34;&gt;Pikchr&lt;/a&gt; diagrams in goldmark documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/13rac1/goldmark-embed&#34;&gt;goldmark-embed&lt;/a&gt;: Adds support for rendering embeds from YouTube links.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soypat/goldmark-latex&#34;&gt;goldmark-latex&lt;/a&gt;: A $\LaTeX$ renderer that can be passed to &lt;code&gt;goldmark.WithRenderer()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stefanfritsch/goldmark-fences&#34;&gt;goldmark-fences&lt;/a&gt;: Support for pandoc-style &lt;a href=&#34;https://pandoc.org/MANUAL.html#divs-and-spans&#34;&gt;fenced divs&lt;/a&gt; in goldmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FurqanSoftware/goldmark-d2&#34;&gt;goldmark-d2&lt;/a&gt;: Adds support for &lt;a href=&#34;https://d2lang.com/&#34;&gt;D2&lt;/a&gt; diagrams.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FurqanSoftware/goldmark-katex&#34;&gt;goldmark-katex&lt;/a&gt;: Adds support for &lt;a href=&#34;https://katex.org/&#34;&gt;KaTeX&lt;/a&gt; math and equations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;goldmark internal(for extension developers)&lt;/h2&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;goldmark&#39;s Markdown processing is outlined in the diagram below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;            &amp;lt;Markdown in []byte, parser.Context&amp;gt;&#xA;                           |&#xA;                           V&#xA;            +-------- parser.Parser ---------------------------&#xA;            | 1. Parse block elements into AST&#xA;            |   1. If a parsed block is a paragraph, apply &#xA;            |      ast.ParagraphTransformer&#xA;            | 2. Traverse AST and parse blocks.&#xA;            |   1. Process delimiters(emphasis) at the end of&#xA;            |      block parsing&#xA;            | 3. Apply parser.ASTTransformers to AST&#xA;                           |&#xA;                           V&#xA;                      &amp;lt;ast.Node&amp;gt;&#xA;                           |&#xA;                           V&#xA;            +------- renderer.Renderer ------------------------&#xA;            | 1. Traverse AST and apply renderer.NodeRenderer&#xA;            |    corespond to the node type&#xA;&#xA;                           |&#xA;                           V&#xA;                        &amp;lt;Output&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Parsing&lt;/h3&gt; &#xA;&lt;p&gt;Markdown documents are read through &lt;code&gt;text.Reader&lt;/code&gt; interface.&lt;/p&gt; &#xA;&lt;p&gt;AST nodes do not have concrete text. AST nodes have segment information of the documents, represented by &lt;code&gt;text.Segment&lt;/code&gt; .&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;text.Segment&lt;/code&gt; has 3 attributes: &lt;code&gt;Start&lt;/code&gt;, &lt;code&gt;End&lt;/code&gt;, &lt;code&gt;Padding&lt;/code&gt; .&lt;/p&gt; &#xA;&lt;p&gt;(TBC)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;extension&lt;/code&gt; directory for examples of extensions.&lt;/p&gt; &#xA;&lt;p&gt;Summary:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Define AST Node as a struct in which &lt;code&gt;ast.BaseBlock&lt;/code&gt; or &lt;code&gt;ast.BaseInline&lt;/code&gt; is embedded.&lt;/li&gt; &#xA; &lt;li&gt;Write a parser that implements &lt;code&gt;parser.BlockParser&lt;/code&gt; or &lt;code&gt;parser.InlineParser&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Write a renderer that implements &lt;code&gt;renderer.NodeRenderer&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Define your goldmark extension that implements &lt;code&gt;goldmark.Extender&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;BTC: 1NEDSyUmo4SMTDP83JJQSWi1MvQUGGNMZB&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Yusuke Inuzuka&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>influxdata/influxdb</title>
    <updated>2023-01-04T01:32:08Z</updated>
    <id>tag:github.com,2023-01-04:/influxdata/influxdb</id>
    <link href="https://github.com/influxdata/influxdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scalable datastore for metrics, events, and real-time analytics&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;InfluxDB&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/influxdata/influxdb/master/assets/influxdb-logo.png&#34; width=&#34;600&#34; alt=&#34;InfluxDB Logo&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://circleci.com/gh/influxdata/influxdb&#34;&gt; &lt;img alt=&#34;CircleCI&#34; src=&#34;https://circleci.com/gh/influxdata/influxdb.svg?style=svg&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.influxdata.com/slack&#34;&gt; &lt;img alt=&#34;Slack Status&#34; src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://docs.influxdata.com/influxdb/v2.4/install/?t=Docker&#34;&gt; &lt;img alt=&#34;Docker Pulls&#34; src=&#34;https://img.shields.io/docker/pulls/_/influxdb&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/influxdata/influxdb/raw/master/LICENSE&#34;&gt; &lt;img alt=&#34;Docker Pulls&#34; src=&#34;https://img.shields.io/github/license/influxdata/influxdb&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;b&gt;&lt;a href=&#34;https://www.influxdata.com/&#34;&gt;Website&lt;/a&gt;&lt;/b&gt; ‚Ä¢ &lt;a href=&#34;https://docs.influxdata.com/&#34;&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://university.influxdata.com/&#34;&gt;InfluxDB University&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://www.influxdata.com/blog/&#34;&gt;Blog&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;InfluxDB is an open source time series platform. This includes APIs for storing and querying data, processing it in the background for ETL or monitoring and alerting purposes, user dashboards, and visualizing and exploring the data and more. The master branch on this repo now represents the latest InfluxDB, which now includes functionality for Kapacitor (background processing) and Chronograf (the UI) all in a single binary.&lt;/p&gt; &#xA;&lt;p&gt;The list of InfluxDB Client Libraries that are compatible with the latest version can be found in &lt;a href=&#34;https://docs.influxdata.com/influxdb/latest/tools/client-libraries/&#34;&gt;our documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for the 1.x line of releases, there are branches for each minor version as well as a &lt;code&gt;master-1.x&lt;/code&gt; branch that will contain the code for the next 1.x release. The master-1.x &lt;a href=&#34;https://github.com/influxdata/influxdb/tree/master-1.x&#34;&gt;working branch is here&lt;/a&gt;. The &lt;a href=&#34;https://github.com/influxdata/influxdb1-client&#34;&gt;InfluxDB 1.x Go Client can be found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Try &lt;strong&gt;InfluxDB Cloud&lt;/strong&gt; for free and get started fast with no local setup required. Click &lt;a href=&#34;https://cloud2.influxdata.com/signup&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; to start building your application on InfluxDB Cloud.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;We have nightly and versioned Docker images, Debian packages, RPM packages, and tarballs of InfluxDB available at the &lt;a href=&#34;https://portal.influxdata.com/downloads/&#34;&gt;InfluxData downloads page&lt;/a&gt;. We also provide the &lt;code&gt;influx&lt;/code&gt; command line interface (CLI) client as a separate binary available at the same location.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in building from source, see the &lt;a href=&#34;https://raw.githubusercontent.com/influxdata/influxdb/master/CONTRIBUTING.md#building-from-source&#34;&gt;building from source&lt;/a&gt; guide for contributors.&lt;/p&gt; &#xA;&lt;a href=&#34;https://university.influxdata.com/catalog/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/influxdata/influxdb/master/assets/influxdbU-banner.png&#34; width=&#34;600&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;For a complete getting started guide, please see our full &lt;a href=&#34;https://docs.influxdata.com/influxdb/latest/&#34;&gt;online documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To write and query data or use the API in any way, you&#39;ll need to first create a user, credentials, organization and bucket. Everything in InfluxDB is organized under a concept of an organization. The API is designed to be multi-tenant. Buckets represent where you store time series data. They&#39;re synonymous with what was previously in InfluxDB 1.x a database and retention policy.&lt;/p&gt; &#xA;&lt;p&gt;The simplest way to get set up is to point your browser to &lt;a href=&#34;http://localhost:8086&#34;&gt;http://localhost:8086&lt;/a&gt; and go through the prompts.&lt;/p&gt; &#xA;&lt;p&gt;You can also get set up from the CLI using the command &lt;code&gt;influx setup&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bin/$(uname -s | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)/influx setup&#xA;Welcome to InfluxDB 2.0!&#xA;Please type your primary username: marty&#xA;&#xA;Please type your password:&#xA;&#xA;Please type your password again:&#xA;&#xA;Please type your primary organization name.: InfluxData&#xA;&#xA;Please type your primary bucket name.: telegraf&#xA;&#xA;Please type your retention period in hours.&#xA;Or press ENTER for infinite.: 72&#xA;&#xA;&#xA;You have entered:&#xA;  Username:          marty&#xA;  Organization:      InfluxData&#xA;  Bucket:            telegraf&#xA;  Retention Period:  72 hrs&#xA;Confirm? (y/n): y&#xA;&#xA;UserID                  Username        Organization    Bucket&#xA;033a3f2c5ccaa000        marty           InfluxData      Telegraf&#xA;Your token has been stored in /Users/marty/.influxdbv2/credentials&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run this command non-interactively using the &lt;code&gt;-f, --force&lt;/code&gt; flag if you are automating the setup. Some added flags can help:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bin/$(uname -s | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)/influx setup \&#xA;--username marty \&#xA;--password F1uxKapacit0r85 \&#xA;--org InfluxData \&#xA;--bucket telegraf \&#xA;--retention 168 \&#xA;--token where-were-going-we-dont-need-roads \&#xA;--force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once setup is complete, a configuration profile is created to allow you to interact with your local InfluxDB without passing in credentials each time. You can list and manage those profiles using the &lt;code&gt;influx config&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bin/$(uname -s | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)/influx config&#xA;Active&#x9;Name&#x9;URL&#x9;&#x9;&#x9;            Org&#xA;*&#x9;    default&#x9;http://localhost:8086&#x9;InfluxData&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Write Data&lt;/h2&gt; &#xA;&lt;p&gt;Write to measurement &lt;code&gt;m&lt;/code&gt;, with tag &lt;code&gt;v=2&lt;/code&gt;, in bucket &lt;code&gt;telegraf&lt;/code&gt;, which belongs to organization &lt;code&gt;InfluxData&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bin/$(uname -s | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)/influx write --bucket telegraf --precision s &#34;m v=2 $(date +%s)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since you have a default profile set up, you can omit the Organization and Token from the command.&lt;/p&gt; &#xA;&lt;p&gt;Write the same point using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --header &#34;Authorization: Token $(bin/$(uname -s | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)/influx auth list --json | jq -r &#39;.[0].token&#39;)&#34; \&#xA;--data-raw &#34;m v=2 $(date +%s)&#34; \&#xA;&#34;http://localhost:8086/api/v2/write?org=InfluxData&amp;amp;bucket=telegraf&amp;amp;precision=s&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read that back with a simple Flux query:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bin/$(uname -s | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)/influx query &#39;from(bucket:&#34;telegraf&#34;) |&amp;gt; range(start:-1h)&#39;&#xA;Result: _result&#xA;Table: keys: [_start, _stop, _field, _measurement]&#xA;                   _start:time                      _stop:time           _field:string     _measurement:string                      _time:time                  _value:float&#xA;------------------------------  ------------------------------  ----------------------  ----------------------  ------------------------------  ----------------------------&#xA;2019-12-30T22:19:39.043918000Z  2019-12-30T23:19:39.043918000Z                       v                       m  2019-12-30T23:17:02.000000000Z                             2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;-r, --raw&lt;/code&gt; option to return the raw flux response from the query. This is useful for moving data from one instance to another as the &lt;code&gt;influx write&lt;/code&gt; command can accept the Flux response using the &lt;code&gt;--format csv&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h2&gt;Script with Flux&lt;/h2&gt; &#xA;&lt;p&gt;Flux (previously named IFQL) is an open source functional data scripting language designed for querying, analyzing, and acting on data. Flux supports multiple data source types, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Time series databases (such as InfluxDB)&lt;/li&gt; &#xA; &lt;li&gt;Relational SQL databases (such as MySQL and PostgreSQL)&lt;/li&gt; &#xA; &lt;li&gt;CSV&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The source for Flux is &lt;a href=&#34;https://github.com/influxdata/flux&#34;&gt;available on GitHub&lt;/a&gt;. To learn more about Flux, see the latest &lt;a href=&#34;https://docs.influxdata.com/flux/&#34;&gt;InfluxData Flux documentation&lt;/a&gt; and &lt;a href=&#34;https://speakerdeck.com/pauldix/flux-number-fluxlang-a-new-time-series-data-scripting-language&#34;&gt;CTO Paul Dix&#39;s presentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to the Project&lt;/h2&gt; &#xA;&lt;p&gt;InfluxDB is an &lt;a href=&#34;https://raw.githubusercontent.com/influxdata/influxdb/master/LICENSE&#34;&gt;MIT licensed&lt;/a&gt; open source project and we love our community. The fastest way to get something fixed is to open a PR. Check out our &lt;a href=&#34;https://raw.githubusercontent.com/influxdata/influxdb/master/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; guide if you&#39;re interested in helping out. Also, join us on our &lt;a href=&#34;https://influxdata.com/slack&#34;&gt;Community Slack Workspace&lt;/a&gt; if you have questions or comments for our engineering teams.&lt;/p&gt; &#xA;&lt;h2&gt;CI and Static Analysis&lt;/h2&gt; &#xA;&lt;h3&gt;CI&lt;/h3&gt; &#xA;&lt;p&gt;All pull requests will run through CI, which is currently hosted by Circle. Community contributors should be able to see the outcome of this process by looking at the checks on their PR. Please fix any issues to ensure a prompt review from members of the team.&lt;/p&gt; &#xA;&lt;p&gt;The InfluxDB project is used internally in a number of proprietary InfluxData products, and as such, PRs and changes need to be tested internally. This can take some time, and is not really visible to community contributors.&lt;/p&gt; &#xA;&lt;h3&gt;Static Analysis&lt;/h3&gt; &#xA;&lt;p&gt;This project uses the following static analysis tools. Failure during the running of any of these tools results in a failed build. Generally, code must be adjusted to satisfy these tools, though there are exceptions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/cmd/vet/&#34;&gt;go vet&lt;/a&gt; checks for Go code that should be considered incorrect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/cmd/gofmt/&#34;&gt;go fmt&lt;/a&gt; checks that Go code is correctly formatted.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tip.golang.org/cmd/go/#hdr-Add_missing_and_remove_unused_modules&#34;&gt;go mod tidy&lt;/a&gt; ensures that the source code and go.mod agree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://staticcheck.io/docs/&#34;&gt;staticcheck&lt;/a&gt; checks for things like: unused code, code that can be simplified, code that is incorrect and code that will have performance issues.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;staticcheck&lt;/h3&gt; &#xA;&lt;p&gt;If your PR fails &lt;code&gt;staticcheck&lt;/code&gt; it is easy to dig into why it failed, and also to fix the problem. First, take a look at the error message in Circle under the &lt;code&gt;staticcheck&lt;/code&gt; build section, e.g.,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tsdb/tsm1/encoding.gen.go:1445:24: func BooleanValues.assertOrdered is unused (U1000)&#xA;tsdb/tsm1/encoding.go:172:7: receiver name should not be an underscore, omit the name if it is unused (ST1006)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, go and take a &lt;a href=&#34;http://next.staticcheck.io/docs/checks&#34;&gt;look here&lt;/a&gt; for some clarification on the error code that you have received, e.g., &lt;code&gt;U1000&lt;/code&gt;. The docs will tell you what&#39;s wrong, and often what you need to do to fix the issue.&lt;/p&gt; &#xA;&lt;h4&gt;Generated Code&lt;/h4&gt; &#xA;&lt;p&gt;Sometimes generated code will contain unused code or occasionally that will fail a different check. &lt;code&gt;staticcheck&lt;/code&gt; allows for &lt;a href=&#34;http://next.staticcheck.io/docs/#ignoring-problems&#34;&gt;entire files&lt;/a&gt; to be ignored, though it&#39;s not ideal. A linter directive, in the form of a comment, must be placed within the generated file. This is problematic because it will be erased if the file is re-generated. Until a better solution comes about, below is the list of generated files that need an ignores comment. If you re-generate a file and find that &lt;code&gt;staticcheck&lt;/code&gt; has failed, please see this list below for what you need to put back:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;File&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;query/promql/promql.go&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;//lint:file-ignore SA6001 Ignore all unused code, it&#39;s generated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;End-to-End Tests&lt;/h4&gt; &#xA;&lt;p&gt;CI also runs end-to-end tests. These test the integration between the &lt;code&gt;influxd&lt;/code&gt; server the UI. Since the UI is used by interal repositories as well as the &lt;code&gt;influxdb&lt;/code&gt; repository, the end-to-end tests cannot be run on forked pull requests or run locally. The extent of end-to-end testing required for forked pull requests will be determined as part of the review process.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.influxdata.com/blog/category/tech/influxdb/&#34;&gt;InfluxDB Tips and Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://university.influxdata.com/courses/influxdb-essentials-tutorial/&#34;&gt;InfluxDB Essentials Course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://university.influxdata.com/courses/exploring-influxdb-cloud-tutorial/&#34;&gt;Exploring InfluxDB Cloud Course&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>gravitl/netmaker</title>
    <updated>2023-01-04T01:32:08Z</updated>
    <id>tag:github.com,2023-01-04:/gravitl/netmaker</id>
    <link href="https://github.com/gravitl/netmaker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Netmaker makes networks with WireGuard. Netmaker automates fast, secure, and distributed virtual networks.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://netmaker.io&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gravitl/netmaker-docs/master/images/netmaker-github/netmaker-teal.png&#34; width=&#34;50%&#34;&gt;&#xA;  &lt;break /&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://runacap.com/ross-index/q1-2022/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;img src=&#34;https://runacap.com/wp-content/uploads/2022/06/ROSS_badge_white_Q1_2022.svg?sanitize=true&#34; alt=&#34;ROSS Index - Fastest Growing Open-Source Startups in Q1 2022 | Runa Capital&#34; width=&#34;15%&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.ycombinator.com/companies/netmaker/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gravitl/netmaker-docs/master/images/netmaker-github/y-combinator.png&#34; alt=&#34;Y-Combinator&#34; width=&#34;16%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/gravitl/netmaker/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Version-0.17.1-informational?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/gravitl/netmaker/tags&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/gravitl/netmaker?label=downloads&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/gravitl/netmaker&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/gravitl/netmaker&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=netmaker_io&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/netmaker_io?label=follow&amp;amp;style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCach3lJY_xBV7rGrbUSvkZQ&#34;&gt; &lt;img src=&#34;https://img.shields.io/youtube/channel/views/UCach3lJY_xBV7rGrbUSvkZQ?style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://reddit.com/r/netmaker&#34;&gt; &lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/netmaker?label=%2Fr%2Fnetmaker&amp;amp;style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/zRb9Vfhk8A&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/825071750290210916?color=%09%237289da&amp;amp;label=chat&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;WireGuard&lt;sup&gt;¬Æ&lt;/sup&gt; automation from homelab to enterprise&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Create&lt;/th&gt; &#xA;   &lt;th&gt;Manage&lt;/th&gt; &#xA;   &lt;th&gt;Automate&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; WireGuard Networks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Admin UI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Remote Access Gateways&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; OAuth&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; FreeBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Mesh VPNs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Private DNS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Mac&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Site-to-Site&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Access Control Lists&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt; Windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Get Started in 5 Minutes&lt;/h1&gt; &#xA;&lt;p&gt;(For production-grade installations, visit the &lt;a href=&#34;https://netmaker.readthedocs.io/en/master/install.html&#34;&gt;Install Docs&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get a cloud VM with Ubuntu 22.04 and a public IP.&lt;/li&gt; &#xA; &lt;li&gt;Open ports 443, 80, and 51821-51830/udp on the VM firewall and in cloud security settings.&lt;/li&gt; &#xA; &lt;li&gt;(optional) Prepare DNS - Set a wildcard subdomain in your DNS for Netmaker, e.g. *.netmaker.example.com&lt;/li&gt; &#xA; &lt;li&gt;Run the script:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo wget -qO /root/nm-quick-interactive.sh https://raw.githubusercontent.com/gravitl/netmaker/master/scripts/nm-quick-interactive.sh &amp;amp;&amp;amp; sudo chmod +x /root/nm-quick-interactive.sh &amp;amp;&amp;amp; sudo /root/nm-quick-interactive.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This script gives you the option to deploy the Community or Enterprise version of Netmaker. If deploying Enterprise, you get a free account with a 50 node limit by default. It also gives you the option to use your own domain (recommended) or an auto-generated domain.&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34; align=&#34;middle&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gravitl/netmaker-docs/master/images/netmaker-github/readme.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;After installing Netmaker, check out the &lt;a href=&#34;https://itnext.io/getting-started-with-netmaker-a-wireguard-virtual-networking-platform-3d563fbd87f0&#34;&gt;Walkthrough&lt;/a&gt; and &lt;a href=&#34;https://netmaker.readthedocs.io/en/master/getting-started.html&#34;&gt;Getting Started&lt;/a&gt; guides to learn more about configuring networks. Or, check out some of our other &lt;a href=&#34;https://www.netmaker.io/blog&#34;&gt;Tutorials&lt;/a&gt; for different use cases, including Kubernetes.&lt;/p&gt; &#xA;&lt;h1&gt;Get Support&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://discord.gg/zRb9Vfhk8A&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://reddit.com/r/netmaker&#34;&gt;Reddit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://netmaker.io/blog&#34;&gt;Learning Resources&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Why Netmaker + WireGuard?&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Netmaker automates virtual networks between data centers, clouds, and edge devices, so you don&#39;t have to.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Kernel WireGuard offers maximum speed, performance, and security.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Netmaker is built to scale from the small business to the enterprise.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Netmaker with WireGuard can be highly customized for peer-to-peer, site-to-site, Kubernetes, and more.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Community Projects&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bsherman/netmaker-traefik&#34;&gt;Netmaker + Traefik Proxy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sbilly/netmaker-openwrt&#34;&gt;OpenWRT Netclient Packager&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mattkasun/netmaker-gui&#34;&gt;Golang GUI&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gravitl/netmaker-coredns-plugin&#34;&gt;CoreDNS Plugin&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gravitl/netmak8s&#34;&gt;Multi-Cluster K8S Plugin&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/madacluster/netmaker-terraform-provider&#34;&gt;Terraform Provider&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kylechase/vyos-netmaker&#34;&gt;VyOS Integration&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geragcp/netmaker-k3s&#34;&gt;Netmaker K3S&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/agorgl/nm-setup&#34;&gt;Run Netmaker + Netclient with Podman&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wireguard.com/&#34;&gt;WireGuard&lt;/a&gt; is a registered trademark of Jason A. Donenfeld.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Netmaker&#39;s source code and all artifacts in this repository are freely available. All versions are published under the Server Side Public License (SSPL), version 1, which can be found here: &lt;a href=&#34;https://raw.githubusercontent.com/gravitl/netmaker/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>