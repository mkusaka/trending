<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-27T01:35:37Z</updated>
  <subtitle>Daily Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>komodorio/helm-dashboard</title>
    <updated>2022-10-27T01:35:37Z</updated>
    <id>tag:github.com,2022-10-27:/komodorio/helm-dashboard</id>
    <link href="https://github.com/komodorio/helm-dashboard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The missing UI for Helm - visualize your releases&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/komodorio/helm-dashboard/main/pkg/dashboard/static/logo.png&#34; height=&#34;30&#34; style=&#34;height: 2rem&#34;&gt; Helm Dashboard&lt;/h1&gt; &#xA;&lt;p&gt;A simplified way of working with Helm.&lt;/p&gt; &#xA;&lt;p&gt;&lt;kbd&gt;&lt;a href=&#34;https://raw.githubusercontent.com/komodorio/helm-dashboard/main/screenshot.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/komodorio/helm-dashboard/main/screenshot.png&#34; style=&#34;width: 100%; border: 1px solid silver;&#34; border=&#34;1&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What it Does?&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;em&gt;Helm Dashboard&lt;/em&gt; plugin offers a UI-driven way to view the installed Helm charts, see their revision history and corresponding k8s resources. Also, you can perform simple actions like roll back to a revision or upgrade to newer version.&lt;/p&gt; &#xA;&lt;p&gt;This project is part of &lt;a href=&#34;https://komodor.com/?utm_campaign=Helm-Dash&amp;amp;utm_source=helm-dash-gh&#34;&gt;Komodor&#39;s&lt;/a&gt; vision of helping Kubernetes users to navigate and troubleshoot their clusters.&lt;/p&gt; &#xA;&lt;p&gt;Some of the key capabilities of the tool:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See all installed charts and their revision history&lt;/li&gt; &#xA; &lt;li&gt;See manifest diff of the past revisions&lt;/li&gt; &#xA; &lt;li&gt;Browse k8s resources resulting from the chart&lt;/li&gt; &#xA; &lt;li&gt;Easy rollback or upgrade version with a clear and easy manifest diff&lt;/li&gt; &#xA; &lt;li&gt;Integration with popular problem scanners&lt;/li&gt; &#xA; &lt;li&gt;Easy switch between multiple clusters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;To install it, simply run Helm command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm plugin install https://github.com/komodorio/helm-dashboard.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update the plugin to the latest version, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm plugin update dashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm plugin uninstall dashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: In case standard Helm plugin way did not work for you, you can just download the appropriate &lt;a href=&#34;https://github.com/komodorio/helm-dashboard/releases&#34;&gt;release package&lt;/a&gt; for your platform, unpack it and just run &lt;code&gt;dashboard&lt;/code&gt; binary from it.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;To use the plugin, your machine needs to have working &lt;code&gt;helm&lt;/code&gt; and also &lt;code&gt;kubectl&lt;/code&gt; commands. Helm version 3.4.0+ is required.&lt;/p&gt; &#xA;&lt;p&gt;After installing, start the UI by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm dashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command above will launch the local Web server and will open the UI in new browser tab. The command will hang waiting for you to terminate it in command-line or web UI.&lt;/p&gt; &#xA;&lt;p&gt;By default, the web server is only available locally. You can change that by specifying &lt;code&gt;HD_BIND&lt;/code&gt; environment variable to the desired value. For example, &lt;code&gt;0.0.0.0&lt;/code&gt; would bind to all IPv4 addresses or &lt;code&gt;[::0]&lt;/code&gt; would be all IPv6 addresses.&lt;/p&gt; &#xA;&lt;p&gt;If your port 8080 is busy, you can specify a different port to use via &lt;code&gt;HD_PORT&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t want browser tab to automatically open, set &lt;code&gt;HD_NOBROWSER=1&lt;/code&gt; in your environment variables.&lt;/p&gt; &#xA;&lt;p&gt;If you want to increase the logging verbosity and see all the debug info, set &lt;code&gt;DEBUG=1&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h2&gt;Scanner Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Upon startup, Helm Dashboard detects the presence of &lt;a href=&#34;https://github.com/aquasecurity/trivy&#34;&gt;Trivy&lt;/a&gt; and &lt;a href=&#34;https://github.com/bridgecrewio/checkov&#34;&gt;Checkov&lt;/a&gt; scanners. When available, these scanners are offered on k8s resources page, as well as install/upgrade preview page.&lt;/p&gt; &#xA;&lt;p&gt;You can request scanning of the specific k8s resource in your cluster: &lt;img src=&#34;https://raw.githubusercontent.com/komodorio/helm-dashboard/main/screenshot_scan_resource.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to validate the k8s manifest prior to installing/reconfiguring a Helm chart, look for &#34;Scan for Problems&#34; button at the bottom of the dialog: &lt;img src=&#34;https://raw.githubusercontent.com/komodorio/helm-dashboard/main/screenshot_scan_manifest.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support Channels&lt;/h2&gt; &#xA;&lt;p&gt;We have two main channels for supporting the Helm Dashboard users: &lt;a href=&#34;https://join.slack.com/t/komodorkommunity/shared_invite/zt-1dm3cnkue-ov1Yh~_95teA35QNx5yuMg&#34;&gt;Slack community&lt;/a&gt; for general conversations and &lt;a href=&#34;https://github.com/komodorio/helm-dashboard/issues&#34;&gt;GitHub issues&lt;/a&gt; for real bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Local Dev Testing&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites: &lt;code&gt;helm&lt;/code&gt; and &lt;code&gt;kubectl&lt;/code&gt; binaries installed and operational.&lt;/p&gt; &#xA;&lt;p&gt;There is a need to build binary for plugin to function, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go build -o bin/dashboard .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can just run the &lt;code&gt;bin/dashboard&lt;/code&gt; binary directly, it will just work.&lt;/p&gt; &#xA;&lt;p&gt;To install, checkout the source code and run from source dir:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm plugin install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Local installation of plugin just creates a symlink, so making the changes and rebuilding the binary would not require to reinstall a plugin.&lt;/p&gt; &#xA;&lt;p&gt;To use the plugin, run in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;helm dashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, use the web UI.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>answerdev/answer</title>
    <updated>2022-10-27T01:35:37Z</updated>
    <id>tag:github.com,2022-10-27:/answerdev/answer</id>
    <link href="https://github.com/answerdev/answer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source knowledge based community software. You can use it to quickly build your Q&amp;A community for product technical support, customer support, user communication, and more.&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://answer.dev&#34;&gt; &lt;img alt=&#34;logo&#34; src=&#34;https://raw.githubusercontent.com/answerdev/answer/main/docs/img/logo.svg?sanitize=true&#34; height=&#34;99px&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Answer - Build Q&amp;amp;A community&lt;/h1&gt; &#xA;&lt;p&gt;An open-source knowledge based community software. You can use it to quickly build your Q&amp;amp;A community for product technical support, customer support, user communication, and more.&lt;/p&gt; &#xA;&lt;p&gt;To learn more about the project, visit &lt;a href=&#34;https://answer.dev&#34;&gt;answer.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/answerdev/answer/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache-green&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://reactjs.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-React-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/answerdev/answer/main/docs/img/screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;Running with docker-compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir answer &amp;amp;&amp;amp; cd answer&#xA;wget https://raw.githubusercontent.com/answerdev/answer/main/docker-compose.yaml&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information you can see &lt;a href=&#34;https://raw.githubusercontent.com/answerdev/answer/main/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/answerdev/answer/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for ways to get started.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/answerdev/answer/raw/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>themsaid/hover</title>
    <updated>2022-10-27T01:35:37Z</updated>
    <id>tag:github.com,2022-10-27:/themsaid/hover</id>
    <link href="https://github.com/themsaid/hover" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CLI for deploying web applications to AWS Lambda&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/images/splash.png&#34; alt=&#34;Hover&#34; width=&#34;600&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Hover is a CLI for deploying web applications to AWS Lambda. It containerizes and deploys your app using Docker, CloudFormation, and the AWS SDK.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Laravel PHP&lt;/strong&gt; is currently supported by Hover. Contributions to help support more web frameworks (PHP or otherwise) are greatly appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multiple stages (dev, sandbox, production, ...)&lt;/li&gt; &#xA; &lt;li&gt;Manages each stage separately. You can deploy each stage in a different AWS account.&lt;/li&gt; &#xA; &lt;li&gt;Docker-based. Full control over the runtime environment.&lt;/li&gt; &#xA; &lt;li&gt;Tests run on the same docker image that gets deployed.&lt;/li&gt; &#xA; &lt;li&gt;Can configure multiple queue lambdas for better prioritization management.&lt;/li&gt; &#xA; &lt;li&gt;Environment variables are packaged with the code. Forget the 4 KB Lambda environment variables limit.&lt;/li&gt; &#xA; &lt;li&gt;Environment secrets are securely encrypted and packaged into the image.&lt;/li&gt; &#xA; &lt;li&gt;Deploys from your local/CI machines. From the machine to AWS APIs directly.&lt;/li&gt; &#xA; &lt;li&gt;The application and its asset files are served from the same domain.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/taylorotwell&#34;&gt;Taylor Otwell&lt;/a&gt; introduced serverless to Laravel in 2019 with the release of &lt;a href=&#34;https://vapor.laravel.com/&#34;&gt;Laravel Vapor&lt;/a&gt;. Since then, I&#39;ve seen how serverless has assisted monolithic application developers in scaling their apps without complex infrastructure management.&lt;/p&gt; &#xA;&lt;p&gt;However, due to strict compliance requirements, using Vapor or any deployment platform was not an option in some cases. Teams developing apps under such constraints were not permitted to share their AWS credentials with a third party. Hover was designed specifically for these teams. It is a small tool that allows you to deploy serverless applications directly from your CI or local machines.&lt;/p&gt; &#xA;&lt;p&gt;If your team doesn&#39;t operate under such compliance rules, go for &lt;a href=&#34;https://vapor.laravel.com/&#34;&gt;Vapor&lt;/a&gt;. Vapor isn&#39;t just a deployment tool, it is a complete platform that provides both a GUI &amp;amp; CLI for managing all AWS resources needed to run a Laravel app on AWS Lambda. It handles databases, Redis cache, SSL certificates, S3 storage, DynamoDB tables, DNS management, Load Balancing and more.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew tap themsaid/tools&#xA;brew install hover&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual download&lt;/h3&gt; &#xA;&lt;p&gt;On the &lt;a href=&#34;https://github.com/themsaid/hover/releases&#34;&gt;releases page&lt;/a&gt;, open the latest release and download the binary that matches your OS and architecture.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s create a &#34;dev&#34; stage for an application called &#34;Clouder&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;hover stage new clouder dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will create two files in the root directory of our project: &lt;code&gt;/.hover/dev.yml&lt;/code&gt; and &lt;code&gt;/.hover/.Dockerfile&lt;/code&gt;. Using these files, we can configure how Hover builds and deploys the stage.&lt;/p&gt; &#xA;&lt;p&gt;Next, we will build our stage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;hover build dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will add the runtime files required for the app to run on Lambda. It will also generate the Docker images specified in the &lt;code&gt;.Dockerfile&lt;/code&gt; file. More information on the build process is available &lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/the-build-process.md&#34;&gt;in this guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now that the build is complete, let&#39;s deploy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;hover deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will upload our asset files to S3 and our Docker image to ECR. It will also deploy a CloudFormation stack that will configure the various AWS resources that will be used to serve our application. More information on the deployment process is available &lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/the-deployment-process.md&#34;&gt;in this guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/getting-started.md&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/concept.md&#34;&gt;Architecture Concept&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/iam-execution-policies.md&#34;&gt;IAM Execution Policies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/the-build-process.md&#34;&gt;The Build Process&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/the-deployment-process.md&#34;&gt;The Deployment Process&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/runtime-environment.md&#34;&gt;The Runtime Environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/stage-variables-secrets.md&#34;&gt;Stage Variables &amp;amp; Secrets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/working-with-queues.md&#34;&gt;Working With Queues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/working-with-domains.md&#34;&gt;Working With Domains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/manifest-file-reference.md&#34;&gt;Manifest Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Hover ships as a binary that uses Docker to build the application, allowing it to support any web framework written in any programming language. For more information on how Hover works, see the &lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/concept.md&#34;&gt;architecture concept&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/themsaid/hover/master/docs/runtime-environment.md&#34;&gt;runtime environment&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>