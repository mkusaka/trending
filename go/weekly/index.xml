<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-24T02:10:05Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mitchellh/mapstructure</title>
    <updated>2022-07-24T02:10:05Z</updated>
    <id>tag:github.com,2022-07-24:/mitchellh/mapstructure</id>
    <link href="https://github.com/mitchellh/mapstructure" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go library for decoding generic map values into native Go structures and vice versa.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mapstructure &lt;a href=&#34;https://godoc.org/github.com/mitchellh/mapstructure&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/mitchellh/mapstructure?status.svg?sanitize=true&#34; alt=&#34;Godoc&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;mapstructure is a Go library for decoding generic map values to structures and vice versa, while providing helpful error handling.&lt;/p&gt; &#xA;&lt;p&gt;This library is most useful when decoding values from some data stream (JSON, Gob, etc.) where you don&#39;t &lt;em&gt;quite&lt;/em&gt; know the structure of the underlying data until you read a part of it. You can therefore read a &lt;code&gt;map[string]interface{}&lt;/code&gt; and use this library to decode it into the proper underlying native Go structure.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Standard &lt;code&gt;go get&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ go get github.com/mitchellh/mapstructure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage &amp;amp; Example&lt;/h2&gt; &#xA;&lt;p&gt;For usage and examples see the &lt;a href=&#34;http://godoc.org/github.com/mitchellh/mapstructure&#34;&gt;Godoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;Decode&lt;/code&gt; function has examples associated with it there.&lt;/p&gt; &#xA;&lt;h2&gt;But Why?!&lt;/h2&gt; &#xA;&lt;p&gt;Go offers fantastic standard libraries for decoding formats such as JSON. The standard method is to have a struct pre-created, and populate that struct from the bytes of the encoded format. This is great, but the problem is if you have configuration or an encoding that changes slightly depending on specific fields. For example, consider this JSON:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;type&#34;: &#34;person&#34;,&#xA;  &#34;name&#34;: &#34;Mitchell&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Perhaps we can&#39;t populate a specific structure without first reading the &#34;type&#34; field from the JSON. We could always do two passes over the decoding of the JSON (reading the &#34;type&#34; first, and the rest later). However, it is much simpler to just decode this into a &lt;code&gt;map[string]interface{}&lt;/code&gt; structure, read the &#34;type&#34; key, then use something like this library to decode it into the proper structure.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jesseduffield/lazygit</title>
    <updated>2022-07-24T02:10:05Z</updated>
    <id>tag:github.com,2022-07-24:/jesseduffield/lazygit</id>
    <link href="https://github.com/jesseduffield/lazygit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;simple terminal UI for git commands&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;536&#34; src=&#34;https://user-images.githubusercontent.com/8456633/174470852-339b5011-5800-4bb9-a628-ff230aa8cd4e.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/jesseduffield/lazygit/workflows/Continuous%20Integration/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/jesseduffield/lazygit&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/jesseduffield/lazygit&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golangci.com&#34;&gt;&lt;img src=&#34;https://golangci.com/badges/github.com/jesseduffield/lazygit.svg?sanitize=true&#34; alt=&#34;GolangCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://godoc.org/github.com/jesseduffield/lazygit&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/jesseduffield/lazygit?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jesseduffield/lazygit/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/jesseduffield/lazygit/total&#34; alt=&#34;GitHub Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jesseduffield/lazygit/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/jesseduffield/lazygit.svg?sanitize=true&#34; alt=&#34;GitHub tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Homebrew/homebrew-core/raw/master/Formula/lazygit.rb&#34;&gt;&lt;img src=&#34;https://img.shields.io/homebrew/v/lazygit&#34; alt=&#34;homebrew&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A simple terminal UI for git commands, written in Go with the &lt;a href=&#34;https://github.com/jroimartin/gocui&#34; title=&#34;gocui&#34;&gt;gocui&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/staging.gif&#34; alt=&#34;Gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Maintainence of this project is made possible by all the &lt;a href=&#34;https://github.com/jesseduffield/lazygit/graphs/contributors&#34;&gt;contributors&lt;/a&gt; and &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsors&lt;/a&gt;. If you&#39;d like to sponsor this project and have your avatar or company logo appear below &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;click here&lt;/a&gt;. ðŸ’™ &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- sponsors --&gt;&lt;a href=&#34;https://github.com/atecce&#34;&gt;&lt;img src=&#34;https://github.com/atecce.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/intabulas&#34;&gt;&lt;img src=&#34;https://github.com/intabulas.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/peppy&#34;&gt;&lt;img src=&#34;https://github.com/peppy.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/piot&#34;&gt;&lt;img src=&#34;https://github.com/piot.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/kristijanhusak&#34;&gt;&lt;img src=&#34;https://github.com/kristijanhusak.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/blacky14&#34;&gt;&lt;img src=&#34;https://github.com/blacky14.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/rgwood&#34;&gt;&lt;img src=&#34;https://github.com/rgwood.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/oliverguenther&#34;&gt;&lt;img src=&#34;https://github.com/oliverguenther.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/pawanjay176&#34;&gt;&lt;img src=&#34;https://github.com/pawanjay176.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/bdach&#34;&gt;&lt;img src=&#34;https://github.com/bdach.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/naoey&#34;&gt;&lt;img src=&#34;https://github.com/naoey.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/jryom&#34;&gt;&lt;img src=&#34;https://github.com/jryom.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/sagor999&#34;&gt;&lt;img src=&#34;https://github.com/sagor999.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/fargozhu&#34;&gt;&lt;img src=&#34;https://github.com/fargozhu.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/carstengehling&#34;&gt;&lt;img src=&#34;https://github.com/carstengehling.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ceuk&#34;&gt;&lt;img src=&#34;https://github.com/ceuk.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/akospwc&#34;&gt;&lt;img src=&#34;https://github.com/akospwc.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/peterdieleman&#34;&gt;&lt;img src=&#34;https://github.com/peterdieleman.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/Xetera&#34;&gt;&lt;img src=&#34;https://github.com/Xetera.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/HoldenLucas&#34;&gt;&lt;img src=&#34;https://github.com/HoldenLucas.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/barbados-clemens&#34;&gt;&lt;img src=&#34;https://github.com/barbados-clemens.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/nartc&#34;&gt;&lt;img src=&#34;https://github.com/nartc.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/matejcik&#34;&gt;&lt;img src=&#34;https://github.com/matejcik.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/lucatume&#34;&gt;&lt;img src=&#34;https://github.com/lucatume.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/dbabiak&#34;&gt;&lt;img src=&#34;https://github.com/dbabiak.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/davidlattimore&#34;&gt;&lt;img src=&#34;https://github.com/davidlattimore.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/zach-fuller&#34;&gt;&lt;img src=&#34;https://github.com/zach-fuller.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/escrafford&#34;&gt;&lt;img src=&#34;https://github.com/escrafford.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/KowalskiPiotr98&#34;&gt;&lt;img src=&#34;https://github.com/KowalskiPiotr98.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/IvanZuy&#34;&gt;&lt;img src=&#34;https://github.com/IvanZuy.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/nicholascloud&#34;&gt;&lt;img src=&#34;https://github.com/nicholascloud.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/topher200&#34;&gt;&lt;img src=&#34;https://github.com/topher200.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/&#34;&gt;&lt;img src=&#34;https://github.com/.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/PhotonQuantum&#34;&gt;&lt;img src=&#34;https://github.com/PhotonQuantum.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/GitSquared&#34;&gt;&lt;img src=&#34;https://github.com/GitSquared.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ava1ar&#34;&gt;&lt;img src=&#34;https://github.com/ava1ar.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/alqh&#34;&gt;&lt;img src=&#34;https://github.com/alqh.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/pedropombeiro&#34;&gt;&lt;img src=&#34;https://github.com/pedropombeiro.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/minidfx&#34;&gt;&lt;img src=&#34;https://github.com/minidfx.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/JoeKlemmer&#34;&gt;&lt;img src=&#34;https://github.com/JoeKlemmer.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/MikaelElkiaer&#34;&gt;&lt;img src=&#34;https://github.com/MikaelElkiaer.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/smoogipoo&#34;&gt;&lt;img src=&#34;https://github.com/smoogipoo.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/marcusyqy&#34;&gt;&lt;img src=&#34;https://github.com/marcusyqy.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ColonelBucket8&#34;&gt;&lt;img src=&#34;https://github.com/ColonelBucket8.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/mutewinter&#34;&gt;&lt;img src=&#34;https://github.com/mutewinter.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/mertovich&#34;&gt;&lt;img src=&#34;https://github.com/mertovich.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/cristianmartinez&#34;&gt;&lt;img src=&#34;https://github.com/cristianmartinez.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/collegeimprovements&#34;&gt;&lt;img src=&#34;https://github.com/collegeimprovements.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/limenet&#34;&gt;&lt;img src=&#34;https://github.com/limenet.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA; &lt;!-- sponsors --&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Elevator Pitch&lt;/h2&gt; &#xA;&lt;p&gt;Rant time: You&#39;ve heard it before, git is &lt;em&gt;powerful&lt;/em&gt;, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? &lt;em&gt;Are you kidding me?&lt;/em&gt; To stage part of a file you need to use a command line program to step through each hunk and if a hunk can&#39;t be split down any further but contains code you don&#39;t want to stage, you have to edit an arcane patch file &lt;em&gt;by hand&lt;/em&gt;? &lt;em&gt;Are you KIDDING me?!&lt;/em&gt; Sometimes you get asked to stash your changes when switching branches only to realise that after you switch and unstash that there weren&#39;t even any conflicts and it would have been fine to just checkout the branch directly? &lt;em&gt;YOU HAVE GOT TO BE KIDDING ME!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a mere mortal like me and you&#39;re tired of hearing how powerful git is when in your daily life it&#39;s a powerful pain in your ass, lazygit might be for you.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#binary-releases&#34;&gt;Binary releases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#homebrew&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#macports&#34;&gt;MacPorts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#void-linux&#34;&gt;Void Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#scoop-windows&#34;&gt;Scoop (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#arch-linux&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#fedora-and-rhel&#34;&gt;Fedora and RHEL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#solus-linux&#34;&gt;Solus Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#funtoo-linux&#34;&gt;Funtoo Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#freebsd&#34;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#conda&#34;&gt;Conda&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#chocolatey-windows&#34;&gt;Chocolatey (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#keybindings&#34;&gt;Keybindings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#changing-directory-on-exit&#34;&gt;Changing directory on exit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#undoredo&#34;&gt;Undo/Redo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration&#34;&gt;Custom pagers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration&#34;&gt;Custom commands&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#cool-features&#34;&gt;Cool Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#donate&#34;&gt;Donate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#alternatives&#34;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Github Sponsors is matching all donations dollar-for-dollar for 12 months so if you&#39;re feeling generous consider &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsoring me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/CPLdltN7wgE&#34;&gt;&lt;img src=&#34;https://i.imgur.com/sVEktDn.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Binary Releases&lt;/h3&gt; &#xA;&lt;p&gt;For Windows, Mac OS(10.12+) or Linux, you can download a binary release &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;Normally the lazygit formula can be found in the Homebrew core but we suggest you tap our formula to get the frequently updated one. It works with Linux, too.&lt;/p&gt; &#xA;&lt;p&gt;Tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install jesseduffield/lazygit/lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Core:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacPorts&lt;/h3&gt; &#xA;&lt;p&gt;Latest version built from github releases. Tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo port install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Void Linux&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Void Linux are available in the distro repo&lt;/p&gt; &#xA;&lt;p&gt;They follow upstream latest releases&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo xbps-install -S lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href=&#34;https://scoop.sh/&#34;&gt;scoop&lt;/a&gt;. It&#39;s in the &lt;code&gt;extras&lt;/code&gt; bucket:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Add the extras bucket&#xA;scoop bucket add extras&#xA;&#xA;# Install lazygit&#xA;scoop install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Arch Linux are available via pacman and AUR (Arch User Repository).&lt;/p&gt; &#xA;&lt;p&gt;There are two packages. The stable one which is built with the latest release and the git version which builds from the most recent commit.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stable: &lt;code&gt;sudo pacman -S lazygit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Development: &lt;a href=&#34;https://aur.archlinux.org/packages/lazygit-git/&#34;&gt;https://aur.archlinux.org/packages/lazygit-git/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instruction of how to install AUR content can be found here: &lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_User_Repository&#34;&gt;https://wiki.archlinux.org/index.php/Arch_User_Repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fedora and RHEL&lt;/h3&gt; &#xA;&lt;p&gt;Packages for Fedora/RHEL and CentOS Stream are available via &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/atim/lazygit/&#34;&gt;Copr&lt;/a&gt; (Cool Other Package Repo).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf copr enable atim/lazygit -y&#xA;sudo dnf install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Solus Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo eopkg install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Funtoo Linux&lt;/h3&gt; &#xA;&lt;p&gt;Funtoo Linux has an autogenerated lazygit package in &lt;a href=&#34;https://github.com/funtoo/dev-kit/tree/1.4-release/dev-vcs/lazygit&#34;&gt;dev-kit&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo emerge dev-vcs/lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FreeBSD&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkg install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Conda&lt;/h3&gt; &#xA;&lt;p&gt;Released versions are available for different platforms, see &lt;a href=&#34;https://anaconda.org/conda-forge/lazygit&#34;&gt;https://anaconda.org/conda-forge/lazygit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda install -c conda-forge lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/jesseduffield/lazygit@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note: If you get an error claiming that lazygit cannot be found or is not defined, you may need to add &lt;code&gt;~/go/bin&lt;/code&gt; to your $PATH (MacOS/Linux), or &lt;code&gt;%HOME%\go\bin&lt;/code&gt; (Windows). Not to be mistaken for &lt;code&gt;C:\Go\bin&lt;/code&gt; (which is for Go&#39;s own binaries, not apps like lazygit).&lt;/p&gt; &#xA;&lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;install Go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/jesseduffield/lazygit.git&#xA;cd lazygit&#xA;go install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;go run main.go&lt;/code&gt; to compile and run in one go (pun definitely intended)&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Call &lt;code&gt;lazygit&lt;/code&gt; in your terminal inside a git repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ lazygit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want, you can also add an alias for this with &lt;code&gt;echo &#34;alias lg=&#39;lazygit&#39;&#34; &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt; (or whichever rc file you&#39;re using).&lt;/p&gt; &#xA;&lt;h3&gt;Keybindings&lt;/h3&gt; &#xA;&lt;p&gt;You can check out the list of keybindings &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/keybindings&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Changing Directory On Exit&lt;/h3&gt; &#xA;&lt;p&gt;If you change repos in lazygit and want your shell to change directory into that repo on exiting lazygit, add this to your &lt;code&gt;~/.zshrc&lt;/code&gt; (or other rc file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lg()&#xA;{&#xA;    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir&#xA;&#xA;    lazygit &#34;$@&#34;&#xA;&#xA;    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then&#xA;            cd &#34;$(cat $LAZYGIT_NEW_DIR_FILE)&#34;&#xA;            rm -f $LAZYGIT_NEW_DIR_FILE &amp;gt; /dev/null&#xA;    fi&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;code&gt;source ~/.zshrc&lt;/code&gt; and from now on when you call &lt;code&gt;lg&lt;/code&gt; and exit you&#39;ll switch directories to whatever you were in inside lazygit. To override this behaviour you can exit using &lt;code&gt;shift+Q&lt;/code&gt; rather than just &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Undo/Redo&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Undoing.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Config.md&#34;&gt;configuration docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Pagers&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Pagers.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom Commands&lt;/h3&gt; &#xA;&lt;p&gt;If lazygit is missing a feature, there&#39;s a good chance you can implement it yourself with a custom command!&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Command_Keybindings.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/VDXvbHZYeKY&#34;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/4XaToVut_hs&#34;&gt;Rebase Magic Video Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.twitch.tv/jesseduffield&#34;&gt;Twitch Stream&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adding files easily&lt;/li&gt; &#xA; &lt;li&gt;Resolving merge conflicts&lt;/li&gt; &#xA; &lt;li&gt;Easily check out recent branches&lt;/li&gt; &#xA; &lt;li&gt;Scroll through logs/diffs of branches/commits/stash&lt;/li&gt; &#xA; &lt;li&gt;Quick pushing/pulling&lt;/li&gt; &#xA; &lt;li&gt;Squash down and reword commits&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Resolving merge conflicts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/resolving-merge-conflicts.gif&#34; alt=&#34;Gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Interactive Rebasing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/rebase.gif&#34; alt=&#34;Interactive Rebasing&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We love your input! Please check out the &lt;a href=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;. For contributor discussion about things not better discussed here in the repo, join the slack channel&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/lazygit/shared_invite/zt-5bo2clzo-hB8ZTVN5dWUCqj5QFiQVLA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/slack_rgb.png&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://www.youtube.com/watch?v=kNavnhzZHtk&#34;&gt;video&lt;/a&gt; walking through the creation of a small feature in lazygit if you want an idea of where to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging Locally&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;lazygit --debug&lt;/code&gt; in one terminal tab and &lt;code&gt;lazygit --logs&lt;/code&gt; in another to view the program and its log output side by side&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to support the development of lazygit, consider &lt;a href=&#34;https://github.com/sponsors/jesseduffield&#34;&gt;sponsoring me&lt;/a&gt; (github is matching all donations dollar-for-dollar for 12 months)&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;What do the commit colors represent?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Green: the commit is included in the master branch&lt;/li&gt; &#xA; &lt;li&gt;Yellow: the commit is not included in the master branch&lt;/li&gt; &#xA; &lt;li&gt;Red: the commit has not been pushed to the upstream branch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shameless Plug&lt;/h2&gt; &#xA;&lt;p&gt;If you want to see what I (Jesse) am up to in terms of development, follow me on &lt;a href=&#34;https://twitter.com/DuffieldJesse&#34;&gt;twitter&lt;/a&gt; or check out my &lt;a href=&#34;https://jesseduffield.com/&#34;&gt;blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;If you find that lazygit doesn&#39;t quite satisfy your requirements, these may be a better fit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Extrawurst/gitui&#34;&gt;GitUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonas/tig&#34;&gt;tig&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>livebud/bud</title>
    <updated>2022-07-24T02:10:05Z</updated>
    <id>tag:github.com,2022-07-24:/livebud/bud</id>
    <link href="https://github.com/livebud/bud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Full-Stack Web Framework for Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bud&lt;/h1&gt; &#xA;&lt;p&gt;The Full-Stack Web Framework for Go. Bud writes the boring code for you, helping you launch your website faster.&lt;/p&gt; &#xA;&lt;h2&gt;Video Demo&lt;/h2&gt; &#xA;&lt;p&gt;Watch a video demonstrating how to build a minimal HN clone in 15 minutes with Bud.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LoypcRqn-xA&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/170299/168361927-9165c2f9-55d4-4fa0-a53e-966028a79b39.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69&#34;&gt;the documentation&lt;/a&gt; to learn how to get started with Bud.&lt;/p&gt; &#xA;&lt;h1&gt;Installing Bud&lt;/h1&gt; &#xA;&lt;p&gt;Bud ships as a single binary that runs on Linux and Mac. You can follow along for Windows support in &lt;a href=&#34;https://github.com/livebud/bud/issues/7&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to get started is by copying and pasting the command below in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;curl -sf https://raw.githubusercontent.com/livebud/bud/main/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will download the right binary for your operating system and move the binary to the right location in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Confirm that you&#39;ve installed Bud by typing &lt;code&gt;bud&lt;/code&gt; in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bud -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Usage:&#xA;    bud [flags] [command]&#xA;&#xA;Flags:&#xA;  -C, --chdir  Change the working directory&#xA;&#xA;Commands:&#xA;  build    build the production server&#xA;  create   create a new project&#xA;  run      run the development server&#xA;  tool     extra tools&#xA;  version  Show package versions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;The following software is required to use Bud.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Node v14+&lt;/p&gt; &lt;p&gt;This is a temporary requirement that we plan to remove in &lt;a href=&#34;https://github.com/livebud/bud/discussions/21&#34;&gt;v0.3&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go v1.17+&lt;/p&gt; &lt;p&gt;Bud relies heavily on &lt;code&gt;io/fs&lt;/code&gt; and will take advantage of generics in the future, so while Go v1.16 will work, we suggest running Go v1.18+ if you can.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Your First Project&lt;/h1&gt; &#xA;&lt;p&gt;With bud installed, you can now scaffold a new project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bud create hello&#xA;$ cd hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The create command will scaffold everything you need to get started with bud.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls&#xA;go.mod  node_modules/  package-lock.json  package.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... which is not very much by the way! Unlike most other fullstack frameworks, Bud starts out very minimal. As you add dependencies, Bud will generate all the boring code to glue your app together. Let&#39;s see this in action.&lt;/p&gt; &#xA;&lt;p&gt;Start the development server with &lt;code&gt;bud run&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bud run&#xA;| Listening on http://127.0.0.1:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Click on the link to open the browser. You&#39;ll be greeted with bud&#39;s welcome page.&lt;/p&gt; &#xA;&lt;p&gt;Congrats! You&#39;re running your first web server with Bud. The welcome server is your jumping off point to learn more about the framework.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://denim-cub-301.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdb7f750b-a699-4117-ac07-303124e5d2f4%2FCleanShot_2022-05-12_at_22.00.192x.png?table=block&amp;amp;id=9488d91f-b72d-4c6d-9ce0-358c31f7f964&amp;amp;spaceId=faf0f409-6e25-40a4-871e-3b311037350f&amp;amp;width=2000&amp;amp;userId=&amp;amp;cache=v2&#34; alt=&#34;CleanShot 2022-05-12 at 22.00.19@2x.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;p&gt;Check out the Hacker News &lt;a href=&#34;https://www.youtube.com/watch?v=LoypcRqn-xA&#34;&gt;demo&lt;/a&gt;, read the &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69#156ea69b8d044bacb65fc2897f3e52b8&#34;&gt;documentation&lt;/a&gt;, &lt;a href=&#34;https://cal.com/mattmueller/30min&#34;&gt;schedule a quick call&lt;/a&gt; or go on your own adventure. The only limit is your imagination.&lt;/p&gt; &#xA;&lt;p&gt;Recent discussions: &lt;a href=&#34;https://www.reddit.com/r/golang/comments/uoxocj/bud_the_fullstack_web_framework_for_go_developers/&#34;&gt;Reddit&lt;/a&gt;, &lt;a href=&#34;https://news.ycombinator.com/item?id=31371340&#34;&gt;Hacker News&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/golivebud&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Real-World Projects&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vito/bass-loop&#34;&gt;Bass Loop&lt;/a&gt;: a CI/CD stack for &lt;a href=&#34;https://bass-lang.org/&#34;&gt;https://bass-lang.org/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livebud/welcome&#34;&gt;Welcome Page&lt;/a&gt;: Bud&#39;s welcome page is written in Bud.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;History of Bud&lt;/h1&gt; &#xA;&lt;p&gt;I started working on Bud in April 2019 after seeing how productive developers could be in &lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel&lt;/a&gt;. I wanted the same for Go, so I decided to try creating Laravel for the Go ecosystem. However, my first version after 6 months needed to scaffold many files just to get started. If you are coming from &lt;a href=&#34;https://github.com/rails/rails&#34;&gt;Rails&lt;/a&gt; or Laravel, you may shrug and consider this as pretty normal.&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately, I have been spoiled by the renaissance in frontend frameworks like &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; that start barebones but every file you add incrementally enhances your web application. This keeps the initial complexity under control.&lt;/p&gt; &#xA;&lt;p&gt;With this additional inspiration, I worked on the next iteration for the ensuing 18 months.&lt;/p&gt; &#xA;&lt;p&gt;The goals are now:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate files only as you need them. Keep these generated files away from your application code and give developers the choice to keep them out of source control. You shouldn&#39;t need to care about the generated code. You may be surprised to learn that Go also generates code to turn your Go code into an executable, but it works so well you don&#39;t need to think about it. Bud should feel like this.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Feel like using a modern JS framework. This means it should work with &lt;a href=&#34;https://github.com/livebud/bud/discussions/8&#34;&gt;multiple&lt;/a&gt; modern frontend frameworks like &lt;a href=&#34;https://svelte.dev/&#34;&gt;Svelte&lt;/a&gt; and &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;, support &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69#4c7dff15ef3e458587b81fb9b1819afb&#34;&gt;live reload&lt;/a&gt;, and have &lt;a href=&#34;https://www.reddit.com/r/golang/comments/uoxocj/bud_the_fullstack_web_framework_for_go_developers/i8ke92h/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;server-side rendering&lt;/a&gt; for better performance and SEO.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The framework should be extensible from Day 1. Bud is too ambitious for one person. We&#39;re going to need an ambitious community behind this framework. Extensibility should be primarily driven by adding code, rather than by adding configuration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bud should provide high-level, type-safe APIs for developers while generating performant, low-level Go code under the covers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bud should compile to a single binary that contains your entire web app and can be copied to a server that doesn&#39;t even have Go installed.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/livebud/bud/main/contributing/Readme.md&#34;&gt;Contributing Guide&lt;/a&gt; to learn how to develop Bud locally.&lt;/p&gt;</summary>
  </entry>
</feed>