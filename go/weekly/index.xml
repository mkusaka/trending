<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-14T01:37:59Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Netflix/chaosmonkey</title>
    <updated>2024-07-14T01:37:59Z</updated>
    <id>tag:github.com,2024-07-14:/Netflix/chaosmonkey</id>
    <link href="https://github.com/Netflix/chaosmonkey" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chaos Monkey is a resiliency tool that helps applications tolerate random instance failures.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Netflix/chaosmonkey/master/docs/logo.png&#34; alt=&#34;logo&#34; title=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Netflix/chaosmonkey/master/OSSMETADATA&#34;&gt;&lt;img src=&#34;https://img.shields.io/osslifecycle/Netflix/chaosmonkey.svg?sanitize=true&#34; alt=&#34;NetflixOSS Lifecycle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/Netflix/chaosmonkey&#34;&gt;&lt;img src=&#34;https://travis-ci.com/Netflix/chaosmonkey.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/Netflix/chaosmonkey&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/Netflix/chaosmonkey?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/Netflix/chaosmonkey&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/Netflix/chaosmonkey&#34; alt=&#34;GoReportCard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chaos Monkey randomly terminates virtual machine instances and containers that run inside of your production environment. Exposing engineers to failures more frequently incentivizes them to build resilient services.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://netflix.github.io/chaosmonkey&#34;&gt;documentation&lt;/a&gt; for info on how to use Chaos Monkey.&lt;/p&gt; &#xA;&lt;p&gt;Chaos Monkey is an example of a tool that follows the &lt;a href=&#34;http://principlesofchaos.org/&#34;&gt;Principles of Chaos Engineering&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;This version of Chaos Monkey is fully integrated with &lt;a href=&#34;http://www.spinnaker.io/&#34;&gt;Spinnaker&lt;/a&gt;, the continuous delivery platform that we use at Netflix. You must be managing your apps with Spinnaker to use Chaos Monkey to terminate instances.&lt;/p&gt; &#xA;&lt;p&gt;Chaos Monkey should work with any backend that Spinnaker supports (AWS, Google Compute Engine, Azure, Kubernetes, Cloud Foundry). It has been tested with AWS, &lt;a href=&#34;https://medium.com/continuous-delivery-scale/running-chaos-monkey-on-spinnaker-google-compute-engine-gce-155dc52f20ef&#34;&gt;GCE&lt;/a&gt;, and Kubernetes.&lt;/p&gt; &#xA;&lt;h3&gt;Install locally&lt;/h3&gt; &#xA;&lt;p&gt;To install the Chaos Monkey binary on your local machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/netflix/chaosmonkey/cmd/chaosmonkey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to deploy&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://netflix.github.io/chaosmonkey&#34;&gt;docs&lt;/a&gt; for instructions on how to configure and deploy Chaos Monkey.&lt;/p&gt; &#xA;&lt;h3&gt;Support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://groups.google.com/group/simianarmy-users&#34;&gt;Simian Army Google group&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GoogleCloudPlatform/microservices-demo</title>
    <updated>2024-07-14T01:37:59Z</updated>
    <id>tag:github.com,2024-07-14:/GoogleCloudPlatform/microservices-demo</id>
    <link href="https://github.com/GoogleCloudPlatform/microservices-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample cloud-first application with 10 microservices showcasing Kubernetes, Istio, and gRPC.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/GoogleCloudPlatform/microservices-demo/workflows/Continuous%20Integration%20-%20Main/Release/badge.svg?sanitize=true&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Online Boutique&lt;/strong&gt; is a cloud-first microservices demo application. The application is a web-based e-commerce app where users can browse items, add them to the cart, and purchase them.&lt;/p&gt; &#xA;&lt;p&gt;Google uses this application to demonstrate how developers can modernize enterprise applications using Google Cloud products, including: &lt;a href=&#34;https://cloud.google.com/kubernetes-engine&#34;&gt;Google Kubernetes Engine (GKE)&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/service-mesh&#34;&gt;Anthos Service Mesh (ASM)&lt;/a&gt;, &lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/products/operations&#34;&gt;Cloud Operations&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/spanner&#34;&gt;Spanner&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/memorystore&#34;&gt;Memorystore&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/alloydb&#34;&gt;AlloyDB&lt;/a&gt;, and &lt;a href=&#34;https://ai.google.dev/&#34;&gt;Gemini&lt;/a&gt;. This application works on any Kubernetes cluster.&lt;/p&gt; &#xA;&lt;p&gt;If you’re using this demo, please &lt;strong&gt;★Star&lt;/strong&gt; this repository to show your interest!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note to Googlers:&lt;/strong&gt; Please fill out the form at &lt;a href=&#34;http://go/microservices-demo&#34;&gt;go/microservices-demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Online Boutique&lt;/strong&gt; is composed of 11 microservices written in different languages that talk to each other over gRPC.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/architecture-diagram.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/architecture-diagram.png&#34; alt=&#34;Architecture of microservices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Find &lt;strong&gt;Protocol Buffers Descriptions&lt;/strong&gt; at the &lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/protos&#34;&gt;&lt;code&gt;./protos&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/frontend&#34;&gt;frontend&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;Exposes an HTTP server to serve the website. Does not require signup/login and generates session IDs for all users automatically.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/cartservice&#34;&gt;cartservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;Stores the items in the user&#39;s shopping cart in Redis and retrieves it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/productcatalogservice&#34;&gt;productcatalogservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;Provides the list of products from a JSON file and ability to search products and get individual products.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/currencyservice&#34;&gt;currencyservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Converts one money amount to another currency. Uses real values fetched from European Central Bank. It&#39;s the highest QPS service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/paymentservice&#34;&gt;paymentservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Charges the given credit card info (mock) with the given amount and returns a transaction ID.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/shippingservice&#34;&gt;shippingservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;Gives shipping cost estimates based on the shopping cart. Ships items to the given address (mock)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/emailservice&#34;&gt;emailservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;Sends users an order confirmation email (mock).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/checkoutservice&#34;&gt;checkoutservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;Retrieves user cart, prepares order and orchestrates the payment, shipping and the email notification.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/recommendationservice&#34;&gt;recommendationservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;Recommends other products based on what&#39;s given in the cart.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/adservice&#34;&gt;adservice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;Provides text ads based on given context words.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/loadgenerator&#34;&gt;loadgenerator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python/Locust&lt;/td&gt; &#xA;   &lt;td&gt;Continuously sends requests imitating realistic user shopping flows to the frontend.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Home Page&lt;/th&gt; &#xA;   &lt;th&gt;Checkout Screen&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/online-boutique-frontend-1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/online-boutique-frontend-1.png&#34; alt=&#34;Screenshot of store homepage&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/online-boutique-frontend-2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/online-boutique-frontend-2.png&#34; alt=&#34;Screenshot of checkout screen&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Quickstart (GKE)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure you have the following requirements:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/resource-manager/docs/creating-managing-projects#creating_a_project&#34;&gt;Google Cloud project&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Shell environment with &lt;code&gt;gcloud&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;, and &lt;code&gt;kubectl&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the latest major version.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth 1 --branch v0 https://github.com/GoogleCloudPlatform/microservices-demo.git&#xA;cd microservices-demo/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;--depth 1&lt;/code&gt; argument skips downloading git history.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the Google Cloud project and region and ensure the Google Kubernetes Engine API is enabled.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export PROJECT_ID=&amp;lt;PROJECT_ID&amp;gt;&#xA;export REGION=us-central1&#xA;gcloud services enable container.googleapis.com \&#xA;  --project=${PROJECT_ID}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Substitute &lt;code&gt;&amp;lt;PROJECT_ID&amp;gt;&lt;/code&gt; with the ID of your Google Cloud project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a GKE cluster and get the credentials for it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gcloud container clusters create-auto online-boutique \&#xA;  --project=${PROJECT_ID} --region=${REGION}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Creating the cluster may take a few minutes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploy Online Boutique to the cluster.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl apply -f ./release/kubernetes-manifests.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wait for the pods to be ready.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl get pods&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After a few minutes, you should see the Pods in a &lt;code&gt;Running&lt;/code&gt; state:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;NAME                                     READY   STATUS    RESTARTS   AGE&#xA;adservice-76bdd69666-ckc5j               1/1     Running   0          2m58s&#xA;cartservice-66d497c6b7-dp5jr             1/1     Running   0          2m59s&#xA;checkoutservice-666c784bd6-4jd22         1/1     Running   0          3m1s&#xA;currencyservice-5d5d496984-4jmd7         1/1     Running   0          2m59s&#xA;emailservice-667457d9d6-75jcq            1/1     Running   0          3m2s&#xA;frontend-6b8d69b9fb-wjqdg                1/1     Running   0          3m1s&#xA;loadgenerator-665b5cd444-gwqdq           1/1     Running   0          3m&#xA;paymentservice-68596d6dd6-bf6bv          1/1     Running   0          3m&#xA;productcatalogservice-557d474574-888kr   1/1     Running   0          3m&#xA;recommendationservice-69c56b74d4-7z8r5   1/1     Running   0          3m1s&#xA;redis-cart-5f59546cdd-5jnqf              1/1     Running   0          2m58s&#xA;shippingservice-6ccc89f8fd-v686r         1/1     Running   0          2m58s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the web frontend in a browser using the frontend&#39;s external IP.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl get service frontend-external | awk &#39;{print $4}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Visit &lt;code&gt;http://EXTERNAL_IP&lt;/code&gt; in a web browser to access your instance of Online Boutique.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Congrats! You&#39;ve deployed the default Online Boutique. To deploy a different variation of Online Boutique (e.g., with Google Cloud Operations tracing, Istio, etc.), see &lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/#deploy-online-boutique-variations-with-kustomize&#34;&gt;Deploy Online Boutique variations with Kustomize&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once you are done with it, delete the GKE cluster.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gcloud container clusters delete online-boutique \&#xA;  --project=${PROJECT_ID} --region=${REGION}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Deleting the cluster may take a few minutes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Additional deployment options&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Terraform&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/terraform&#34;&gt;See these instructions&lt;/a&gt; to learn how to deploy Online Boutique using &lt;a href=&#34;https://www.terraform.io/intro&#34;&gt;Terraform&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Istio / Anthos Service Mesh&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/kustomize/components/service-mesh-istio/README.md&#34;&gt;See these instructions&lt;/a&gt; to deploy Online Boutique alongside an Istio-backed service mesh.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Non-GKE clusters (Minikube, Kind, etc)&lt;/strong&gt;: See the &lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/development-guide.md&#34;&gt;Development guide&lt;/a&gt; to learn how you can deploy Online Boutique on non-GKE clusters.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI assistant using Gemini&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/kustomize/components/shopping-assistant/README.md&#34;&gt;See these instructions&lt;/a&gt; to deploy a Gemini-powered AI assistant that suggests products to purchase based on an image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;And more&lt;/strong&gt;: The &lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/kustomize&#34;&gt;&lt;code&gt;/kustomize&lt;/code&gt; directory&lt;/a&gt; contains instructions for customizing the deployment of Online Boutique with other variations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/development-guide.md&#34;&gt;Development&lt;/a&gt; to learn how to run and develop this app locally.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demos featuring Online Boutique&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/d99101001e69&#34;&gt;Platform Engineering in action: Deploy the Online Boutique sample apps with Score and Humanitec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/9d64c7009cd&#34;&gt;The new Kubernetes Gateway API with Istio and Anthos Service Mesh (ASM)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/981bd98b53f8&#34;&gt;Use Azure Redis Cache with the Online Boutique sample on AKS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/c68ba253844a&#34;&gt;Sail Sharp, 8 tips to optimize and secure your .NET containers for Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/google-cloud/a2ea3493ed0&#34;&gt;Deploy multi-region application with Anthos and Google cloud Spanner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/82f7879a900d&#34;&gt;Use Google Cloud Memorystore (Redis) with the Online Boutique sample on GKE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/246119e46d53&#34;&gt;Use Helm to simplify the deployment of Online Boutique, with a Service Mesh, GitOps, and more!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/products/application-modernization/api-management-and-service-mesh-go-together&#34;&gt;How to reduce microservices complexity with Apigee and Anthos Service Mesh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/b5bd26253a4c&#34;&gt;gRPC health probes with Kubernetes 1.24+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/f7248e077339&#34;&gt;Use Google Cloud Spanner with the Online Boutique sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/google-cloud/64b71969318d&#34;&gt;Seamlessly encrypt traffic from any apps in your Mesh to Memorystore (redis)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/service-mesh/docs/strengthen-app-security&#34;&gt;Strengthen your app&#39;s security with Anthos Service Mesh and Anthos Config Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/architecture/exposing-service-mesh-apps-through-gke-ingress&#34;&gt;From edge to mesh: Exposing service mesh applications through GKE Ingress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/products/operations/on-the-road-to-sre-with-cloud-operations-sandbox&#34;&gt;Take the first step toward SRE with Cloud Operations Sandbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/service-mesh/docs/onlineboutique-install-kpt&#34;&gt;Deploying the Online Boutique sample application on Anthos Service Mesh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/anthos-service-mesh-workshop&#34;&gt;Anthos Service Mesh Workshop: Lab Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/-t2BfT59zJA?t=982&#34;&gt;KubeCon EU 2019 - Reinventing Networking: A Deep Dive into Istio&#39;s Multicluster Gateways - Steve Dake, Independent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Google Cloud Next&#39;18 SF &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/vJ9OaAqfxo4?t=2416&#34;&gt;Day 1 Keynote&lt;/a&gt; showing GKE On-Prem&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/JQPOPV_VH5w?t=815&#34;&gt;Day 3 Keynote&lt;/a&gt; showing Stackdriver APM (Tracing, Code Search, Profiler, Google Cloud Build)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wCJrdKdD6UM&amp;amp;feature=youtu.be&amp;amp;t=586&#34;&gt;Introduction to Service Management with Istio&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/nIq2pkNcfEI?t=3071&#34;&gt;Google Cloud Next&#39;18 London – Keynote&lt;/a&gt; showing Stackdriver Incident Response Management&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>iyear/tdl</title>
    <updated>2024-07-14T01:37:59Z</updated>
    <id>tag:github.com,2024-07-14:/iyear/tdl</id>
    <link href="https://github.com/iyear/tdl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📥 A Telegram toolkit written in Golang&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tdl&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/iyear/tdl/master/docs/assets/img/logo.png&#34; height=&#34;280&#34; alt=&#34;&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;📥 Telegram Downloader, but more than a downloader&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/iyear/tdl/master/README_zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/iyear/tdl?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/iyear/tdl?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/iyear/tdl/master.yml?branch=master&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/iyear/tdl?color=red&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/iyear/tdl/total?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Features:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Single file start-up&lt;/li&gt; &#xA; &lt;li&gt;Low resource usage&lt;/li&gt; &#xA; &lt;li&gt;Take up all your bandwidth&lt;/li&gt; &#xA; &lt;li&gt;Faster than official clients&lt;/li&gt; &#xA; &lt;li&gt;Download files from (protected) chats&lt;/li&gt; &#xA; &lt;li&gt;Forward messages with automatic fallback and message routing&lt;/li&gt; &#xA; &lt;li&gt;Upload files to Telegram&lt;/li&gt; &#xA; &lt;li&gt;Export messages/members/subscribers to JSON&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;It reaches my proxy&#39;s speed limit, and the &lt;strong&gt;speed depends on whether you are a premium&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iyear/tdl/master/docs/assets/img/preview.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://docs.iyear.me/tdl/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iyear/sponsor/master/sponsors.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;AGPL-3.0 License&lt;/p&gt;</summary>
  </entry>
</feed>