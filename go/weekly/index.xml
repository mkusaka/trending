<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T02:11:03Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>evrone/go-clean-template</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/evrone/go-clean-template</id>
    <link href="https://github.com/evrone/go-clean-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Clean Architecture template for Golang services&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/docs/img/logo.svg?sanitize=true&#34; alt=&#34;Go Clean Template&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Go Clean template&lt;/h1&gt; &#xA;&lt;p&gt;Clean Architecture template for Golang services&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/evrone/go-clean-template&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/evrone/go-clean-template&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/evrone/go-clean-template/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/evrone/go-clean-template.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/evrone/go-clean-template/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/evrone/go-clean-template.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/evrone/go-clean-template&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/evrone/go-clean-template/branch/master/graph/badge.svg?token=XE3E0X3EVQ&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The purpose of the template is to show:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;how to organize a project and prevent it from turning into spaghetti code&lt;/li&gt; &#xA; &lt;li&gt;where to store business logic so that it remains independent, clean, and extensible&lt;/li&gt; &#xA; &lt;li&gt;how not to lose control when a microservice grows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using the principles of Robert Martin (aka Uncle Bob).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://evrone.com/go-clean-template?utm_source=github&amp;amp;utm_campaign=go-clean-template&#34;&gt;Go-clean-template&lt;/a&gt; is created &amp;amp; supported by &lt;a href=&#34;https://evrone.com/?utm_source=github&amp;amp;utm_campaign=go-clean-template&#34;&gt;Evrone&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/#quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/#project-structure&#34;&gt;Project structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/#dependency-injection&#34;&gt;Dependency Injection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/#clean-architecture&#34;&gt;Clean Architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Local development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Postgres, RabbitMQ&#xA;$ make compose-up&#xA;# Run app with migrations&#xA;$ make run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Integration tests (can be run in CI):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# DB, app + migrations, integration tests&#xA;$ make compose-up-integration-test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;cmd/app/main.go&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Configuration and logger initialization. Then the main function &#34;continues&#34; in &lt;code&gt;internal/app/app.go&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;config&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Configuration. First, &lt;code&gt;config.yml&lt;/code&gt; is read, then environment variables overwrite the yaml config if they match. The config structure is in the &lt;code&gt;config.go&lt;/code&gt;. The &lt;code&gt;env-required: true&lt;/code&gt; tag obliges you to specify a value (either in yaml, or in environment variables).&lt;/p&gt; &#xA;&lt;p&gt;For configuration, we chose the &lt;a href=&#34;https://github.com/ilyakaznacheev/cleanenv&#34;&gt;cleanenv&lt;/a&gt; library. It does not have many stars on GitHub, but is simple and meets all the requirements.&lt;/p&gt; &#xA;&lt;p&gt;Reading the config from yaml contradicts the ideology of 12 factors, but in practice, it is more convenient than reading the entire config from ENV. It is assumed that default values are in yaml, and security-sensitive variables are defined in ENV.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Swagger documentation. Auto-generated by &lt;a href=&#34;https://github.com/swaggo/swag&#34;&gt;swag&lt;/a&gt; library. You don&#39;t need to correct anything by yourself.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;integration-test&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Integration tests. They are launched as a separate container, next to the application container. It is convenient to test the Rest API using &lt;a href=&#34;https://github.com/Eun/go-hit&#34;&gt;go-hit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;internal/app&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;There is always one &lt;em&gt;Run&lt;/em&gt; function in the &lt;code&gt;app.go&lt;/code&gt; file, which &#34;continues&#34; the &lt;em&gt;main&lt;/em&gt; function.&lt;/p&gt; &#xA;&lt;p&gt;This is where all the main objects are created. Dependency injection occurs through the &#34;New ...&#34; constructors (see Dependency Injection). This technique allows us to layer the application using the &lt;a href=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/#dependency-injection&#34;&gt;Dependency Injection&lt;/a&gt; principle. This makes the business logic independent from other layers.&lt;/p&gt; &#xA;&lt;p&gt;Next, we start the server and wait for signals in &lt;em&gt;select&lt;/em&gt; for graceful completion. If &lt;code&gt;app.go&lt;/code&gt; starts to grow, you can split it into multiple files.&lt;/p&gt; &#xA;&lt;p&gt;For a large number of injections, &lt;a href=&#34;https://github.com/google/wire&#34;&gt;wire&lt;/a&gt; can be used.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;migrate.go&lt;/code&gt; file is used for database auto migrations. It is included if an argument with the &lt;em&gt;migrate&lt;/em&gt; tag is specified. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ go run -tags migrate ./cmd/app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;internal/controller&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Server handler layer (MVC controllers). The template shows 2 servers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RPC (RabbitMQ as transport)&lt;/li&gt; &#xA; &lt;li&gt;REST http (Gin framework)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Server routers are written in the same style:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handlers are grouped by area of application (by a common basis)&lt;/li&gt; &#xA; &lt;li&gt;For each group, its own router structure is created, the methods of which process paths&lt;/li&gt; &#xA; &lt;li&gt;The structure of the business logic is injected into the router structure, which will be called by the handlers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;internal/controller/http&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Simple REST versioning. For v2, we will need to add the &lt;code&gt;http/v2&lt;/code&gt; folder with the same content. And in the file &lt;code&gt;internal/app&lt;/code&gt; add the line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;handler := gin.New()&#xA;v1.NewRouter(handler, t)&#xA;v2.NewRouter(handler, t)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Instead of Gin, you can use any other http framework or even the standard &lt;code&gt;net/http&lt;/code&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;v1/router.go&lt;/code&gt; and above the handler methods, there are comments for generating swagger documentation using &lt;a href=&#34;https://github.com/swaggo/swag&#34;&gt;swag&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;internal/entity&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Entities of business logic (models) can be used in any layer. There can also be methods, for example, for validation.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;internal/usecase&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Business logic.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Methods are grouped by area of application (on a common basis)&lt;/li&gt; &#xA; &lt;li&gt;Each group has its own structure&lt;/li&gt; &#xA; &lt;li&gt;One file - one structure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Repositories, webapi, rpc, and other business logic structures are injected into business logic structures (see &lt;a href=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/#dependency-injection&#34;&gt;Dependency Injection&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;internal/usecase/repo&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A repository is an abstract storage (database) that business logic works with.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;internal/usecase/webapi&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;It is an abstract web API that business logic works with. For example, it could be another microservice that business logic accesses via the REST API. The package name changes depending on the purpose.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;pkg/rabbitmq&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;RabbitMQ RPC pattern:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There is no routing inside RabbitMQ&lt;/li&gt; &#xA; &lt;li&gt;Exchange fanout is used, to which 1 exclusive queue is bound, this is the most productive config&lt;/li&gt; &#xA; &lt;li&gt;Reconnect on the loss of connection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependency Injection&lt;/h2&gt; &#xA;&lt;p&gt;In order to remove the dependence of business logic on external packages, dependency injection is used.&lt;/p&gt; &#xA;&lt;p&gt;For example, through the New constructor, we inject the dependency into the structure of the business logic. This makes the business logic independent (and portable). We can override the implementation of the interface without making changes to the &lt;code&gt;usecase&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package usecase&#xA;&#xA;import (&#xA;    // Nothing!&#xA;)&#xA;&#xA;type Repository interface {&#xA;    Get()&#xA;}&#xA;&#xA;type UseCase struct {&#xA;    repo Repository&#xA;}&#xA;&#xA;func New(r Repository) *UseCase{&#xA;    return &amp;amp;UseCase{&#xA;        repo: r,&#xA;    }&#xA;}&#xA;&#xA;func (uc *UseCase) Do()  {&#xA;    uc.repo.Get()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will also allow us to do auto-generation of mocks (for example with &lt;a href=&#34;https://github.com/vektra/mockery&#34;&gt;mockery&lt;/a&gt;) and easily write unit tests.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We are not tied to specific implementations in order to always be able to change one component to another. If the new component implements the interface, nothing needs to be changed in the business logic.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Clean Architecture&lt;/h2&gt; &#xA;&lt;h3&gt;Key idea&lt;/h3&gt; &#xA;&lt;p&gt;Programmers realize the optimal architecture for an application after most of the code has been written.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A good architecture allows decisions to be delayed to as late as possible.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;The main principle&lt;/h3&gt; &#xA;&lt;p&gt;Dependency Inversion (the same one from SOLID) is the principle of dependency inversion. The direction of dependencies goes from the outer layer to the inner layer. Due to this, business logic and entities remain independent from other parts of the system.&lt;/p&gt; &#xA;&lt;p&gt;So, the application is divided into 2 layers, internal and external:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Business logic&lt;/strong&gt; (Go standard library).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tools&lt;/strong&gt; (databases, servers, message brokers, any other packages and frameworks).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/docs/img/layers-1.png&#34; alt=&#34;Clean Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The inner layer&lt;/strong&gt; with business logic should be clean. It should:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not have package imports from the outer layer.&lt;/li&gt; &#xA; &lt;li&gt;Use only the capabilities of the standard library.&lt;/li&gt; &#xA; &lt;li&gt;Make calls to the outer layer through the interface (!).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The business logic doesn&#39;t know anything about Postgres or a specific web API. Business logic has an interface for working with an &lt;em&gt;abstract&lt;/em&gt; database or &lt;em&gt;abstract&lt;/em&gt; web API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The outer layer&lt;/strong&gt; has other limitations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All components of this layer are unaware of each other&#39;s existence. How to call another from one tool? Not directly, only through the inner layer of business logic.&lt;/li&gt; &#xA; &lt;li&gt;All calls to the inner layer are made through the interface (!).&lt;/li&gt; &#xA; &lt;li&gt;Data is transferred in a format that is convenient for business logic (&lt;code&gt;internal/entity&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, you need to access the database from HTTP (controller). Both HTTP and database are in the outer layer, which means they know nothing about each other. The communication between them is carried out through &lt;code&gt;usecase&lt;/code&gt; (business logic):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    HTTP &amp;gt; usecase&#xA;           usecase &amp;gt; repository (Postgres)&#xA;           usecase &amp;lt; repository (Postgres)&#xA;    HTTP &amp;lt; usecase&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The symbols &amp;gt; and &amp;lt; show the intersection of layer boundaries through Interfaces. The same is shown in the picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/docs/img/example-http-db.png&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or more complex business logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    HTTP &amp;gt; usecase&#xA;           usecase &amp;gt; repository&#xA;           usecase &amp;lt; repository&#xA;           usecase &amp;gt; webapi&#xA;           usecase &amp;lt; webapi&#xA;           usecase &amp;gt; RPC&#xA;           usecase &amp;lt; RPC&#xA;           usecase &amp;gt; repository&#xA;           usecase &amp;lt; repository&#xA;    HTTP &amp;lt; usecase&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Layers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/evrone/go-clean-template/master/docs/img/layers-2.png&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Clean Architecture Terminology&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Entities&lt;/strong&gt; are structures that business logic operates on. They are located in the &lt;code&gt;internal/entity&lt;/code&gt; folder. In MVC terms, entities are models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use Cases&lt;/strong&gt; is business logic located in &lt;code&gt;internal/usecase&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The layer with which business logic directly interacts is usually called the &lt;em&gt;infrastructure&lt;/em&gt; layer. These can be repositories &lt;code&gt;internal/usecase/repo&lt;/code&gt;, external webapi &lt;code&gt;internal/usecase/webapi&lt;/code&gt;, any pkg, and other microservices. In the template, the &lt;em&gt;infrastructure&lt;/em&gt; packages are located inside &lt;code&gt;internal/usecase&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can choose how to call the entry points as you wish. The options are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;controller (in our case)&lt;/li&gt; &#xA; &lt;li&gt;delivery&lt;/li&gt; &#xA; &lt;li&gt;transport&lt;/li&gt; &#xA; &lt;li&gt;gateways&lt;/li&gt; &#xA; &lt;li&gt;entrypoints&lt;/li&gt; &#xA; &lt;li&gt;primary&lt;/li&gt; &#xA; &lt;li&gt;input&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional layers&lt;/h3&gt; &#xA;&lt;p&gt;The classic version of &lt;a href=&#34;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&#34;&gt;Clean Architecture&lt;/a&gt; was designed for building large monolithic applications and has 4 layers.&lt;/p&gt; &#xA;&lt;p&gt;In the original version, the outer layer is divided into two more, which also have an inversion of dependencies to each other (directed inward) and communicate through interfaces.&lt;/p&gt; &#xA;&lt;p&gt;The inner layer is also divided into two (with separation of interfaces), in the case of complex logic.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Complex tools can be divided into additional layers. However, you should add layers only if really necessary.&lt;/p&gt; &#xA;&lt;h3&gt;Alternative approaches&lt;/h3&gt; &#xA;&lt;p&gt;In addition to Clean architecture, &lt;em&gt;Onion architecture&lt;/em&gt; and &lt;em&gt;Hexagonal&lt;/em&gt; (&lt;em&gt;Ports and adapters&lt;/em&gt;) are similar to it. Both are based on the principle of Dependency Inversion. &lt;em&gt;Ports and adapters&lt;/em&gt; are very close to &lt;em&gt;Clean Architecture&lt;/em&gt;, the differences are mainly in terminology.&lt;/p&gt; &#xA;&lt;h2&gt;Similar projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bxcodec/go-clean-arch&#34;&gt;https://github.com/bxcodec/go-clean-arch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhashkevych/courses-backend&#34;&gt;https://github.com/zhashkevych/courses-backend&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&#34;&gt;The Clean Architecture article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://12factor.net/ru/&#34;&gt;Twelve factors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>livekit/livekit</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/livekit/livekit</id>
    <link href="https://github.com/livekit/livekit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scalable, high-performance WebRTC SFU. SDKs in JavaScript, React, React Native, Flutter, Swift, Kotlin, Unity/C#, Go, Ruby and Node.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LiveKit - Open source, high performance WebRTC infrastructure&lt;/h1&gt; &#xA;&lt;p&gt;LiveKit is an open source project that provides scalable, multi-user conferencing over WebRTC. It&#39;s designed to give you everything you need to build real time video/audio/data capabilities in your applications.&lt;/p&gt; &#xA;&lt;p&gt;LiveKit is written in Go, using the awesome &lt;a href=&#34;https://github.com/pion/webrtc&#34;&gt;Pion WebRTC&lt;/a&gt; implementation.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scalable, distributed WebRTC SFU (Selective Forwarding Unit)&lt;/li&gt; &#xA; &lt;li&gt;Modern, full-featured &lt;a href=&#34;https://docs.livekit.io/references/client-sdks/&#34;&gt;client SDKs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Built for production - JWT authentication and &lt;a href=&#34;https://docs.livekit.io/guides/server-api&#34;&gt;server APIs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Robust networking &amp;amp; connectivity. UDP/TCP/TURN&lt;/li&gt; &#xA; &lt;li&gt;Easy to deploy - single binary, docker &amp;amp; kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Advanced features - speaker detection, simulcast, selective subscription, moderation APIs, and webhooks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation &amp;amp; Guides&lt;/h2&gt; &#xA;&lt;p&gt;Docs &amp;amp; Guides at: &lt;a href=&#34;https://docs.livekit.io&#34;&gt;https://docs.livekit.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Try it live&lt;/h2&gt; &#xA;&lt;p&gt;Head to &lt;a href=&#34;https://livekit.io/playground&#34;&gt;our playground&lt;/a&gt; and give it a spin. Build a Zoom-like conferencing app in under 100 lines of code!&lt;/p&gt; &#xA;&lt;h2&gt;SDKs &amp;amp; Tools&lt;/h2&gt; &#xA;&lt;p&gt;Client SDKs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/client-sdk-js&#34;&gt;Javascript&lt;/a&gt; (&lt;a href=&#34;https://docs.livekit.io/client-sdk-js/&#34;&gt;docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/livekit-react&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/client-sdk-swift&#34;&gt;iOS &amp;amp; MacOS - Swift&lt;/a&gt; (&lt;a href=&#34;https://docs.livekit.io/client-sdk-swift/&#34;&gt;docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/client-sdk-android&#34;&gt;Android - Kotlin&lt;/a&gt; (&lt;a href=&#34;https://docs.livekit.io/client-sdk-android/&#34;&gt;docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/client-sdk-flutter&#34;&gt;Flutter&lt;/a&gt; (&lt;a href=&#34;https://docs.livekit.io/client-sdk-flutter/&#34;&gt;docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/client-sdk-unity-web&#34;&gt;Unity (WebGL)&lt;/a&gt; (&lt;a href=&#34;https://livekit.github.io/client-sdk-unity-web/&#34;&gt;docs&lt;/a&gt; &lt;a href=&#34;https://unity.livekit.io&#34;&gt;demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/client-sdk-react-native&#34;&gt;React Native&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Server SDKs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/server-sdk-js&#34;&gt;Javascript&lt;/a&gt; (&lt;a href=&#34;https://docs.livekit.io/server-sdk-js/&#34;&gt;docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/server-sdk-go&#34;&gt;Go&lt;/a&gt; (&lt;a href=&#34;https://pkg.go.dev/github.com/livekit/server-sdk-go&#34;&gt;docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/server-sdk-ruby&#34;&gt;Ruby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tradablebits/livekit-server-sdk-python&#34;&gt;Python (community)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/egress&#34;&gt;Egress&lt;/a&gt;: export and record your rooms&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/livekit-cli&#34;&gt;livekit-cli&lt;/a&gt;: command line admin &amp;amp; tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/livekit-cli#livekit-load-tester&#34;&gt;livekit-load-tester&lt;/a&gt;: load testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/livekit/livekit-server&#34;&gt;Docker image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/livekit/livekit-helm&#34;&gt;Helm charts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;Generate config file and keys&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -v$PWD:/output livekit/generate --local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above command generates a &lt;code&gt;livekit.yaml&lt;/code&gt; you can use to start LiveKit. It&#39;ll contain an API key/secret pair you can use with your LiveKit install.&lt;/p&gt; &#xA;&lt;h3&gt;Starting with docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -p 7880:7880 \&#xA;    -p 7881:7881 \&#xA;    -p 7882:7882/udp \&#xA;    -v $PWD/livekit.yaml:/livekit.yaml \&#xA;    livekit/livekit-server \&#xA;    --config /livekit.yaml \&#xA;    --node-ip &amp;lt;machine-ip&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When running with docker, &lt;code&gt;--node-ip&lt;/code&gt; needs to be set to your machine&#39;s IP address. If the service will be exposed to the public Internet, this should the machine&#39;s public IP.&lt;/p&gt; &#xA;&lt;h3&gt;Test with example app&lt;/h3&gt; &#xA;&lt;p&gt;Head over to the &lt;a href=&#34;https://example.livekit.io&#34;&gt;example app&lt;/a&gt; and enter the generated token to connect to your LiveKit server. This app is built with our &lt;a href=&#34;https://github.com/livekit/livekit-react&#34;&gt;React SDK&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once connected, your video and audio are now published to your new LiveKit instance!&lt;/p&gt; &#xA;&lt;h3&gt;Generating access tokens (JWT)&lt;/h3&gt; &#xA;&lt;p&gt;To add more users to a room, you&#39;ll have to create a token for each participant. &lt;a href=&#34;https://docs.livekit.io/guides/access-tokens/&#34;&gt;Learn more about access tokens&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;livekit-server&lt;/code&gt; provides a convenient sub-command to create a development token. This token has an expiration of a month, which is useful for development and testing, but not appropriate for production use.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -e LIVEKIT_KEYS=&#34;&amp;lt;api-key&amp;gt;: &amp;lt;api-secret&amp;gt;&#34; \&#xA;    livekit/livekit-server create-join-token \&#xA;    --room &#34;&amp;lt;room-name&amp;gt;&#34; \&#xA;    --identity &#34;&amp;lt;participant-identity&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploying to server&lt;/h2&gt; &#xA;&lt;p&gt;Deployment Docs: &lt;a href=&#34;https://docs.livekit.io/deploy/&#34;&gt;https://docs.livekit.io/deploy/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Single node server&lt;/h3&gt; &#xA;&lt;p&gt;Use our deploy config generator to set up a single node deployment with automatic TLS termination and built-in TURN.&lt;/p&gt; &#xA;&lt;p&gt;It includes a cloud-init/setup script that&#39;s supported by most cloud environments.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -it -v$PWD:/output livekit/generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;We publish a &lt;a href=&#34;https://github.com/livekit/livekit-helm&#34;&gt;helm chart&lt;/a&gt; that helps you to set up a cluster with high availability. For detailed instructions, see &lt;a href=&#34;https://docs.livekit.io/deploy/kubernetes&#34;&gt;Kubernetes guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Testing your deployment&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;a href=&#34;https://livekit.io/connection-test&#34;&gt;connection tester&lt;/a&gt; to ensure your installation is set up properly for user traffic.&lt;/p&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;Pre-requisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go 1.15+ is installed&lt;/li&gt; &#xA; &lt;li&gt;GOPATH/bin is in your PATH&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/livekit/livekit&#xA;cd livekit&#xA;./bootstrap.sh&#xA;mage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your contributions to make LiveKit better! Please join us &lt;a href=&#34;http://livekit.io/join-slack&#34;&gt;on Slack&lt;/a&gt; to discuss your ideas and/or submit PRs.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;LiveKit server is licensed under Apache License v2.0.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zinclabs/zinc</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/zinclabs/zinc</id>
    <link href="https://github.com/zinclabs/zinc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zinc Search engine. A lightweight alternative to elasticsearch that requires minimal resources, written in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zinc Search Engine&lt;/h1&gt; &#xA;&lt;p&gt;Zinc is a search engine that does full text indexing. It is a lightweight alternative to Elasticsearch and runs using a fraction of the resources. It uses &lt;a href=&#34;https://github.com/blugelabs/bluge&#34;&gt;bluge&lt;/a&gt; as the underlying indexing library.&lt;/p&gt; &#xA;&lt;p&gt;It is very simple and easy to operate as opposed to Elasticsearch which requires a couple dozen knobs to understand and tune which you can get up and running in 2 minutes&lt;/p&gt; &#xA;&lt;p&gt;It is a drop-in replacement for Elasticsearch if you are just ingesting data using APIs and searching using kibana (Kibana is not supported with zinc. Zinc provides its own UI).&lt;/p&gt; &#xA;&lt;p&gt;Check the below video for a quick demo of Zinc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aZXtuVjt1ow&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/zinc-youtube.jpg&#34; alt=&#34;Zinc Youtube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Playground Server&lt;/h1&gt; &#xA;&lt;p&gt;You could try ZincSearch without installing using below details:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://playground.dev.zincsearch.com&#34;&gt;https://playground.dev.zincsearch.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User ID&lt;/td&gt; &#xA;   &lt;td&gt;admin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Password&lt;/td&gt; &#xA;   &lt;td&gt;Complexpass#123&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: Do not store sensitive data on this server as its available to everyone on internet. Data will also be cleaned on this server regularly.&lt;/p&gt; &#xA;&lt;h1&gt;Join slack channel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/zinc-nvh4832/shared_invite/zt-11r96hv2b-UwxUILuSJ1duzl_6mhJwVg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/slack.png&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Why zinc&lt;/h1&gt; &#xA;&lt;p&gt;While Elasticsearch is a very good product, it is complex and requires lots of resources and is more than a decade old. I built Zinc so it becomes easier for folks to use full text search indexing without doing a lot of work.&lt;/p&gt; &#xA;&lt;h1&gt;Features:&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Provides full text indexing capability&lt;/li&gt; &#xA; &lt;li&gt;Single binary for installation and running. Binaries available under releases for multiple platforms.&lt;/li&gt; &#xA; &lt;li&gt;Web UI for querying data written in Vue&lt;/li&gt; &#xA; &lt;li&gt;Compatibility with Elasticsearch APIs for ingestion of data (single record and bulk API)&lt;/li&gt; &#xA; &lt;li&gt;Out of the box authentication&lt;/li&gt; &#xA; &lt;li&gt;Schema less - No need to define schema upfront and different documents in the same index can have different fields.&lt;/li&gt; &#xA; &lt;li&gt;Index storage in s3 and minio (experimental)&lt;/li&gt; &#xA; &lt;li&gt;aggregation support&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Roadmap items:&lt;/h1&gt; &#xA;&lt;p&gt;Public roadmap is available at &lt;a href=&#34;https://github.com/orgs/zinclabs/projects/3/views/1&#34;&gt;https://github.com/orgs/zinclabs/projects/3/views/1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please create an issue if you would like something to be added to the roadmap.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;h2&gt;Search screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/search_screen.jpg&#34; alt=&#34;Search screen 1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/search_screen_paris.jpg&#34; alt=&#34;Search screen for games&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;User management screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/users_screen.jpg&#34; alt=&#34;Users screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;h2&gt;Download / Installation / Run&lt;/h2&gt; &#xA;&lt;p&gt;Check installation &lt;a href=&#34;https://docs.zinclabs.io/04_installation/&#34;&gt;installation docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data ingestion&lt;/h2&gt; &#xA;&lt;h3&gt;Single record&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/ingestion/single-record/&#34;&gt;single record ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bulk ingestion&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/ingestion/bulk-ingestion/#bulk-ingestion&#34;&gt;bulk ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fluent bit&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/ingestion/fluent-bit/&#34;&gt;fluet-bit ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Syslog-ng&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/ingestion/syslog-ng/&#34;&gt;syslog-ng ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API Reference&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zinclabs.io/API%20Reference/&#34;&gt;Zinc API docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to develop and contribute to Zinc&lt;/h1&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Who uses Zinc (Known users)?&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quadrantsec.com/&#34;&gt;Quadrantsec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://accodeing.com/&#34;&gt;Accodeing to you&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please do raise a PR adding your details if you are using Zinc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>noisetorch/NoiseTorch</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/noisetorch/NoiseTorch</id>
    <link href="https://github.com/noisetorch/NoiseTorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Real-time microphone noise suppression on Linux.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/noisetorch/NoiseTorch/master/assets/icon/noisetorch.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &#xA;&lt;h1&gt;NoiseTorch&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/noisetorch/NoiseTorch/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/noisetorch/NoiseTorch?label=latest&amp;amp;style=flat-square&#34; alt=&#34;Last Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Probable insecurity / remove NoiseTorch&lt;/h2&gt; &#xA;&lt;p&gt;At least one of the original developers&#39; (@lawl) systems has probably been compromised. Due to that we currently can not expect the source code NOR the binaries to be secure. Therefore you should for now remove NoiseTorch from your systems, until this issue is cleared up:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rm ~/.local/bin/noisetorch&#xA;rm ~/.local/share/applications/noisetorch.desktop&#xA;rm ~/.local/share/icons/hicolor/256x256/apps/noisetorch.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Seeking help with code review&lt;/h2&gt; &#xA;&lt;p&gt;If the community can help review ALL of the code, maybe we can trust the code again and work from there.&lt;/p&gt; &#xA;&lt;p&gt;To help go here to read up on the history: &lt;a href=&#34;https://github.com/noisetorch/NoiseTorch/discussions/264&#34;&gt;https://github.com/noisetorch/NoiseTorch/discussions/264&lt;/a&gt; ... and here to check what still needs to be done: &lt;a href=&#34;https://github.com/noisetorch/NoiseTorch/discussions/275&#34;&gt;https://github.com/noisetorch/NoiseTorch/discussions/275&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>go-redis/redis</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/go-redis/redis</id>
    <link href="https://github.com/go-redis/redis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Type-safe Redis client for Golang&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Redis client for Go&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/go-redis/redis/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;build workflow&#34;&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/go-redis/redis/v8?tab=doc&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/go-redis/redis/v8&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://redis.uptrace.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/redis-documentation-informational&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/rWtp5Aj&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/752070105847955518/widget.png&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;go-redis is brought to you by &lt;span&gt;⭐&lt;/span&gt; &lt;a href=&#34;https://github.com/uptrace/uptrace&#34;&gt;&lt;strong&gt;uptrace/uptrace&lt;/strong&gt;&lt;/a&gt;. Uptrace is an open source and blazingly fast &lt;a href=&#34;https://get.uptrace.dev/compare/distributed-tracing-tools.html&#34;&gt;distributed tracing tool&lt;/a&gt; powered by OpenTelemetry and ClickHouse. Give it a star as well!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;h3&gt;Upstash: Serverless Database for Redis&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://upstash.com/?utm_source=goredis&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/upstash/sponsorship/master/redis.png&#34; alt=&#34;Upstash&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Upstash is a Serverless Database with Redis/REST API and durable storage. It is the perfect database for your applications thanks to its per request pricing and low latency data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://upstash.com/?utm_source=goredis&#34;&gt;Start for free in 30 seconds!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br clear=&#34;both&#34;&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.uptrace.dev&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-redis/redis/discussions&#34;&gt;Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/rWtp5Aj&#34;&gt;Chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/go-redis/redis/v8?tab=doc&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/go-redis/redis/v8?tab=doc#pkg-examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-redis/redismock&#34;&gt;Redis Mock&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bsm/redislock&#34;&gt;Distributed Locks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-redis/cache&#34;&gt;Redis Cache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-redis/redis_rate&#34;&gt;Rate limiting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This client also works with &lt;a href=&#34;https://github.com/KvrocksLabs/kvrocks&#34;&gt;kvrocks&lt;/a&gt;, a distributed key value NoSQL database that uses RocksDB as storage engine and is compatible with Redis protocol.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redis 3 commands except QUIT, MONITOR, and SYNC.&lt;/li&gt; &#xA; &lt;li&gt;Automatic connection pooling with&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.uptrace.dev/guide/go-redis-pubsub.html&#34;&gt;Pub/Sub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.uptrace.dev/guide/go-redis-pipelines.html&#34;&gt;Pipelines and transactions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.uptrace.dev/guide/lua-scripting.html&#34;&gt;Scripting&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.uptrace.dev/guide/go-redis-sentinel.html&#34;&gt;Redis Sentinel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.uptrace.dev/guide/go-redis-cluster.html&#34;&gt;Redis Cluster&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.uptrace.dev/guide/ring.html&#34;&gt;Redis Ring&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.uptrace.dev/guide/redis-performance-monitoring.html&#34;&gt;Redis Performance Monitoring&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;go-redis supports 2 last Go versions and requires a Go version with &lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34;&gt;modules&lt;/a&gt; support. So make sure to initialize a Go module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go mod init github.com/my/repo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then install go-redis/v8 (note &lt;em&gt;v8&lt;/em&gt; in the import; omitting it is a popular mistake):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get github.com/go-redis/redis/v8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;    &#34;context&#34;&#xA;    &#34;github.com/go-redis/redis/v8&#34;&#xA;    &#34;fmt&#34;&#xA;)&#xA;&#xA;var ctx = context.Background()&#xA;&#xA;func ExampleClient() {&#xA;    rdb := redis.NewClient(&amp;amp;redis.Options{&#xA;        Addr:     &#34;localhost:6379&#34;,&#xA;        Password: &#34;&#34;, // no password set&#xA;        DB:       0,  // use default DB&#xA;    })&#xA;&#xA;    err := rdb.Set(ctx, &#34;key&#34;, &#34;value&#34;, 0).Err()&#xA;    if err != nil {&#xA;        panic(err)&#xA;    }&#xA;&#xA;    val, err := rdb.Get(ctx, &#34;key&#34;).Result()&#xA;    if err != nil {&#xA;        panic(err)&#xA;    }&#xA;    fmt.Println(&#34;key&#34;, val)&#xA;&#xA;    val2, err := rdb.Get(ctx, &#34;key2&#34;).Result()&#xA;    if err == redis.Nil {&#xA;        fmt.Println(&#34;key2 does not exist&#34;)&#xA;    } else if err != nil {&#xA;        panic(err)&#xA;    } else {&#xA;        fmt.Println(&#34;key2&#34;, val2)&#xA;    }&#xA;    // Output: key value&#xA;    // key2 does not exist&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Look and feel&lt;/h2&gt; &#xA;&lt;p&gt;Some corner cases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// SET key value EX 10 NX&#xA;set, err := rdb.SetNX(ctx, &#34;key&#34;, &#34;value&#34;, 10*time.Second).Result()&#xA;&#xA;// SET key value keepttl NX&#xA;set, err := rdb.SetNX(ctx, &#34;key&#34;, &#34;value&#34;, redis.KeepTTL).Result()&#xA;&#xA;// SORT list LIMIT 0 2 ASC&#xA;vals, err := rdb.Sort(ctx, &#34;list&#34;, &amp;amp;redis.Sort{Offset: 0, Count: 2, Order: &#34;ASC&#34;}).Result()&#xA;&#xA;// ZRANGEBYSCORE zset -inf +inf WITHSCORES LIMIT 0 2&#xA;vals, err := rdb.ZRangeByScoreWithScores(ctx, &#34;zset&#34;, &amp;amp;redis.ZRangeBy{&#xA;    Min: &#34;-inf&#34;,&#xA;    Max: &#34;+inf&#34;,&#xA;    Offset: 0,&#xA;    Count: 2,&#xA;}).Result()&#xA;&#xA;// ZINTERSTORE out 2 zset1 zset2 WEIGHTS 2 3 AGGREGATE SUM&#xA;vals, err := rdb.ZInterStore(ctx, &#34;out&#34;, &amp;amp;redis.ZStore{&#xA;    Keys: []string{&#34;zset1&#34;, &#34;zset2&#34;},&#xA;    Weights: []int64{2, 3}&#xA;}).Result()&#xA;&#xA;// EVAL &#34;return {KEYS[1],ARGV[1]}&#34; 1 &#34;key&#34; &#34;hello&#34;&#xA;vals, err := rdb.Eval(ctx, &#34;return {KEYS[1],ARGV[1]}&#34;, []string{&#34;key&#34;}, &#34;hello&#34;).Result()&#xA;&#xA;// custom command&#xA;res, err := rdb.Do(ctx, &#34;set&#34;, &#34;key&#34;, &#34;value&#34;).Result()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run the test&lt;/h2&gt; &#xA;&lt;p&gt;go-redis will start a redis-server and run the test cases.&lt;/p&gt; &#xA;&lt;p&gt;The paths of redis-server bin file and redis config file are defined in &lt;code&gt;main_test.go&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var (&#xA;&#x9;redisServerBin, _  = filepath.Abs(filepath.Join(&#34;testdata&#34;, &#34;redis&#34;, &#34;src&#34;, &#34;redis-server&#34;))&#xA;&#x9;redisServerConf, _ = filepath.Abs(filepath.Join(&#34;testdata&#34;, &#34;redis&#34;, &#34;redis.conf&#34;))&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For local testing, you can change the variables to refer to your local files, or create a soft link to the corresponding folder for redis-server and copy the config file to &lt;code&gt;testdata/redis/&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ln -s /usr/bin/redis-server ./go-redis/testdata/redis/src&#xA;cp ./go-redis/testdata/redis.conf ./go-redis/testdata/redis/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Lastly, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bun.uptrace.dev&#34;&gt;Golang ORM&lt;/a&gt; for PostgreSQL, MySQL, MSSQL, and SQLite&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bun.uptrace.dev/postgres/&#34;&gt;Golang PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bunrouter.uptrace.dev/&#34;&gt;Golang HTTP router&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uptrace/go-clickhouse&#34;&gt;Golang ClickHouse ORM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the people who already contributed!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/go-redis/redis/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=go-redis/redis&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>stretchr/testify</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/stretchr/testify</id>
    <link href="https://github.com/stretchr/testify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A toolkit with common assertions and mocks that plays nicely with the standard library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Testify - Thou Shalt Write Tests&lt;/h1&gt; &#xA;&lt;p&gt;ℹ️ We are working on testify v2 and would love to hear what you&#39;d like to see in it, have your say here: &lt;a href=&#34;https://cutt.ly/testify&#34;&gt;https://cutt.ly/testify&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/stretchr/testify&#34;&gt;&lt;img src=&#34;https://travis-ci.org/stretchr/testify.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/stretchr/testify&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/stretchr/testify&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/stretchr/testify&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/stretchr/testify&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Go code (golang) set of packages that provide many tools for testifying that your code will behave as you intend.&lt;/p&gt; &#xA;&lt;p&gt;Features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#assert-package&#34;&gt;Easy assertions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#mock-package&#34;&gt;Mocking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#suite-package&#34;&gt;Testing suite interfaces and functions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Get started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install testify with &lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#installation&#34;&gt;one line of code&lt;/a&gt;, or &lt;a href=&#34;https://raw.githubusercontent.com/stretchr/testify/master/#staying-up-to-date&#34;&gt;update it with another&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For an introduction to writing test code in Go, see &lt;a href=&#34;http://golang.org/doc/code.html#Testing&#34;&gt;http://golang.org/doc/code.html#Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out the API Documentation &lt;a href=&#34;http://godoc.org/github.com/stretchr/testify&#34;&gt;http://godoc.org/github.com/stretchr/testify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To make your testing life easier, check out our other project, &lt;a href=&#34;http://github.com/stretchr/gorc&#34;&gt;gorc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A little about &lt;a href=&#34;http://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;Test-Driven Development (TDD)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/assert&#34; title=&#34;API documentation&#34;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;assert&lt;/code&gt; package provides some helpful methods that allow you to write better test code in Go.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prints friendly, easy to read failure descriptions&lt;/li&gt; &#xA; &lt;li&gt;Allows for very readable code&lt;/li&gt; &#xA; &lt;li&gt;Optionally annotate each assertion with a message&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See it in action:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package yours&#xA;&#xA;import (&#xA;  &#34;testing&#34;&#xA;  &#34;github.com/stretchr/testify/assert&#34;&#xA;)&#xA;&#xA;func TestSomething(t *testing.T) {&#xA;&#xA;  // assert equality&#xA;  assert.Equal(t, 123, 123, &#34;they should be equal&#34;)&#xA;&#xA;  // assert inequality&#xA;  assert.NotEqual(t, 123, 456, &#34;they should not be equal&#34;)&#xA;&#xA;  // assert for nil (good for errors)&#xA;  assert.Nil(t, object)&#xA;&#xA;  // assert for not nil (good when you expect something)&#xA;  if assert.NotNil(t, object) {&#xA;&#xA;    // now we know that object isn&#39;t nil, we are safe to make&#xA;    // further assertions without causing any errors&#xA;    assert.Equal(t, &#34;Something&#34;, object.Value)&#xA;&#xA;  }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every assert func takes the &lt;code&gt;testing.T&lt;/code&gt; object as the first argument. This is how it writes the errors out through the normal &lt;code&gt;go test&lt;/code&gt; capabilities.&lt;/li&gt; &#xA; &lt;li&gt;Every assert func returns a bool indicating whether the assertion was successful or not, this is useful for if you want to go on making further assertions under certain conditions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;if you assert many times, use the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package yours&#xA;&#xA;import (&#xA;  &#34;testing&#34;&#xA;  &#34;github.com/stretchr/testify/assert&#34;&#xA;)&#xA;&#xA;func TestSomething(t *testing.T) {&#xA;  assert := assert.New(t)&#xA;&#xA;  // assert equality&#xA;  assert.Equal(123, 123, &#34;they should be equal&#34;)&#xA;&#xA;  // assert inequality&#xA;  assert.NotEqual(123, 456, &#34;they should not be equal&#34;)&#xA;&#xA;  // assert for nil (good for errors)&#xA;  assert.Nil(object)&#xA;&#xA;  // assert for not nil (good when you expect something)&#xA;  if assert.NotNil(object) {&#xA;&#xA;    // now we know that object isn&#39;t nil, we are safe to make&#xA;    // further assertions without causing any errors&#xA;    assert.Equal(&#34;Something&#34;, object.Value)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/require&#34; title=&#34;API documentation&#34;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;require&lt;/code&gt; package provides same global functions as the &lt;code&gt;assert&lt;/code&gt; package, but instead of returning a boolean result they terminate current test.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://golang.org/pkg/testing/#T.FailNow&#34;&gt;t.FailNow&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/mock&#34; title=&#34;API documentation&#34;&gt;&lt;code&gt;mock&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;mock&lt;/code&gt; package provides a mechanism for easily writing mock objects that can be used in place of real objects when writing test code.&lt;/p&gt; &#xA;&lt;p&gt;An example test function that tests a piece of code that relies on an external object &lt;code&gt;testObj&lt;/code&gt;, can setup expectations (testify) and assert that they indeed happened:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package yours&#xA;&#xA;import (&#xA;  &#34;testing&#34;&#xA;  &#34;github.com/stretchr/testify/mock&#34;&#xA;)&#xA;&#xA;/*&#xA;  Test objects&#xA;*/&#xA;&#xA;// MyMockedObject is a mocked object that implements an interface&#xA;// that describes an object that the code I am testing relies on.&#xA;type MyMockedObject struct{&#xA;  mock.Mock&#xA;}&#xA;&#xA;// DoSomething is a method on MyMockedObject that implements some interface&#xA;// and just records the activity, and returns what the Mock object tells it to.&#xA;//&#xA;// In the real object, this method would do something useful, but since this&#xA;// is a mocked object - we&#39;re just going to stub it out.&#xA;//&#xA;// NOTE: This method is not being tested here, code that uses this object is.&#xA;func (m *MyMockedObject) DoSomething(number int) (bool, error) {&#xA;&#xA;  args := m.Called(number)&#xA;  return args.Bool(0), args.Error(1)&#xA;&#xA;}&#xA;&#xA;/*&#xA;  Actual test functions&#xA;*/&#xA;&#xA;// TestSomething is an example of how to use our test object to&#xA;// make assertions about some target code we are testing.&#xA;func TestSomething(t *testing.T) {&#xA;&#xA;  // create an instance of our test object&#xA;  testObj := new(MyMockedObject)&#xA;&#xA;  // setup expectations&#xA;  testObj.On(&#34;DoSomething&#34;, 123).Return(true, nil)&#xA;&#xA;  // call the code we are testing&#xA;  targetFuncThatDoesSomethingWithObj(testObj)&#xA;&#xA;  // assert that the expectations were met&#xA;  testObj.AssertExpectations(t)&#xA;&#xA;&#xA;}&#xA;&#xA;// TestSomethingWithPlaceholder is a second example of how to use our test object to&#xA;// make assertions about some target code we are testing.&#xA;// This time using a placeholder. Placeholders might be used when the&#xA;// data being passed in is normally dynamically generated and cannot be&#xA;// predicted beforehand (eg. containing hashes that are time sensitive)&#xA;func TestSomethingWithPlaceholder(t *testing.T) {&#xA;&#xA;  // create an instance of our test object&#xA;  testObj := new(MyMockedObject)&#xA;&#xA;  // setup expectations with a placeholder in the argument list&#xA;  testObj.On(&#34;DoSomething&#34;, mock.Anything).Return(true, nil)&#xA;&#xA;  // call the code we are testing&#xA;  targetFuncThatDoesSomethingWithObj(testObj)&#xA;&#xA;  // assert that the expectations were met&#xA;  testObj.AssertExpectations(t)&#xA;&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on how to write mock code, check out the &lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/mock&#34;&gt;API documentation for the &lt;code&gt;mock&lt;/code&gt; package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;http://github.com/vektra/mockery&#34;&gt;mockery tool&lt;/a&gt; to autogenerate the mock code against an interface as well, making using mocks much quicker.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/suite&#34; title=&#34;API documentation&#34;&gt;&lt;code&gt;suite&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;suite&lt;/code&gt; package provides functionality that you might be used to from more common object oriented languages. With it, you can build a testing suite as a struct, build setup/teardown methods and testing methods on your struct, and run them with &#39;go test&#39; as per normal.&lt;/p&gt; &#xA;&lt;p&gt;An example suite is shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Basic imports&#xA;import (&#xA;    &#34;testing&#34;&#xA;    &#34;github.com/stretchr/testify/assert&#34;&#xA;    &#34;github.com/stretchr/testify/suite&#34;&#xA;)&#xA;&#xA;// Define the suite, and absorb the built-in basic suite&#xA;// functionality from testify - including a T() method which&#xA;// returns the current testing context&#xA;type ExampleTestSuite struct {&#xA;    suite.Suite&#xA;    VariableThatShouldStartAtFive int&#xA;}&#xA;&#xA;// Make sure that VariableThatShouldStartAtFive is set to five&#xA;// before each test&#xA;func (suite *ExampleTestSuite) SetupTest() {&#xA;    suite.VariableThatShouldStartAtFive = 5&#xA;}&#xA;&#xA;// All methods that begin with &#34;Test&#34; are run as tests within a&#xA;// suite.&#xA;func (suite *ExampleTestSuite) TestExample() {&#xA;    assert.Equal(suite.T(), 5, suite.VariableThatShouldStartAtFive)&#xA;}&#xA;&#xA;// In order for &#39;go test&#39; to run this suite, we need to create&#xA;// a normal test function and pass our suite to suite.Run&#xA;func TestExampleTestSuite(t *testing.T) {&#xA;    suite.Run(t, new(ExampleTestSuite))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a more complete example, using all of the functionality provided by the suite package, look at our &lt;a href=&#34;https://github.com/stretchr/testify/raw/master/suite/suite_test.go&#34;&gt;example testing suite&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information on writing suites, check out the &lt;a href=&#34;http://godoc.org/github.com/stretchr/testify/suite&#34;&gt;API documentation for the &lt;code&gt;suite&lt;/code&gt; package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Suite&lt;/code&gt; object has assertion methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Basic imports&#xA;import (&#xA;    &#34;testing&#34;&#xA;    &#34;github.com/stretchr/testify/suite&#34;&#xA;)&#xA;&#xA;// Define the suite, and absorb the built-in basic suite&#xA;// functionality from testify - including assertion methods.&#xA;type ExampleTestSuite struct {&#xA;    suite.Suite&#xA;    VariableThatShouldStartAtFive int&#xA;}&#xA;&#xA;// Make sure that VariableThatShouldStartAtFive is set to five&#xA;// before each test&#xA;func (suite *ExampleTestSuite) SetupTest() {&#xA;    suite.VariableThatShouldStartAtFive = 5&#xA;}&#xA;&#xA;// All methods that begin with &#34;Test&#34; are run as tests within a&#xA;// suite.&#xA;func (suite *ExampleTestSuite) TestExample() {&#xA;    suite.Equal(suite.VariableThatShouldStartAtFive, 5)&#xA;}&#xA;&#xA;// In order for &#39;go test&#39; to run this suite, we need to create&#xA;// a normal test function and pass our suite to suite.Run&#xA;func TestExampleTestSuite(t *testing.T) {&#xA;    suite.Run(t, new(ExampleTestSuite))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;To install Testify, use &lt;code&gt;go get&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get github.com/stretchr/testify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will then make the following packages available to you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github.com/stretchr/testify/assert&#xA;github.com/stretchr/testify/require&#xA;github.com/stretchr/testify/mock&#xA;github.com/stretchr/testify/suite&#xA;github.com/stretchr/testify/http (deprecated)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Import the &lt;code&gt;testify/assert&lt;/code&gt; package into your code using this template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package yours&#xA;&#xA;import (&#xA;  &#34;testing&#34;&#xA;  &#34;github.com/stretchr/testify/assert&#34;&#xA;)&#xA;&#xA;func TestSomething(t *testing.T) {&#xA;&#xA;  assert.True(t, true, &#34;True is true!&#34;)&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Staying up to date&lt;/h1&gt; &#xA;&lt;p&gt;To update Testify to the latest version, use &lt;code&gt;go get -u github.com/stretchr/testify&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Supported go versions&lt;/h1&gt; &#xA;&lt;p&gt;We currently support the most recent major Go versions from 1.13 onward.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please feel free to submit issues, fork the repository and send pull requests!&lt;/p&gt; &#xA;&lt;p&gt;When submitting an issue, we ask that you please include a complete test function that demonstrates the issue. Extra credit for those using Testify to write the test code that demonstrates it.&lt;/p&gt; &#xA;&lt;p&gt;Code generation is used. Look for &lt;code&gt;CODE GENERATED AUTOMATICALLY&lt;/code&gt; at the top of some files. Run &lt;code&gt;go generate ./...&lt;/code&gt; to update generated files.&lt;/p&gt; &#xA;&lt;p&gt;We also chat on the &lt;a href=&#34;https://gophers.slack.com&#34;&gt;Gophers Slack&lt;/a&gt; group in the &lt;code&gt;#testify&lt;/code&gt; and &lt;code&gt;#testify-dev&lt;/code&gt; channels.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>helm/charts</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/helm/charts</id>
    <link href="https://github.com/helm/charts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚠️(OBSOLETE) Curated applications for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Warning.svg/156px-Warning.svg.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;This project is no longer supported.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Helm Charts&lt;/h1&gt; &#xA;&lt;p&gt;The canonical source for Helm charts is the &lt;a href=&#34;https://artifacthub.io&#34;&gt;Artifact Hub&lt;/a&gt;, an aggregator for distributed chart repos.&lt;/p&gt; &#xA;&lt;p&gt;This GitHub project is the source for Helm &lt;code&gt;stable&lt;/code&gt; and &lt;code&gt;incubator&lt;/code&gt; &lt;a href=&#34;https://v3.helm.sh/docs/topics/chart_repository/&#34;&gt;Helm chart repositories&lt;/a&gt;. This is now an archive no longer under active development.&lt;/p&gt; &#xA;&lt;p&gt;For more information about installing and using Helm, see the &lt;a href=&#34;https://helm.sh/docs/&#34;&gt;Helm Docs&lt;/a&gt;. For a quick introduction to Charts, see the &lt;a href=&#34;https://helm.sh/docs/topics/charts/&#34;&gt;Chart Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;⚠️ Deprecation and Archive Notice&lt;/h2&gt; &#xA;&lt;p&gt;Similar to the &lt;a href=&#34;https://helm.sh/blog/2019-10-22-helm-2150-released/#helm-2-support-plan&#34;&gt;Helm 2 Support Plan&lt;/a&gt;, this GitHub project has begun transition to a 1 year &#34;maintenance mode&#34; (see &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/#deprecation-timeline&#34;&gt;Deprecation Timeline&lt;/a&gt; below). Given the deprecation plan, this project is intended for &lt;a href=&#34;https://helm.sh/docs/topics/charts/#the-apiversion-field&#34;&gt;apiVersion: v1&lt;/a&gt; Charts (installable by both Helm 2 and 3), and not for &lt;code&gt;apiVersion: v2&lt;/code&gt; charts (installable by Helm 3 only).&lt;/p&gt; &#xA;&lt;h3&gt;Deprecation Timeline&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Nov 13, 2019&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;At &lt;a href=&#34;https://helm.sh/blog/helm-3-released/&#34;&gt;Helm 3&#39;s public release&lt;/a&gt;, new charts are no longer accepted to &lt;code&gt;stable&lt;/code&gt; or &lt;code&gt;incubator&lt;/code&gt;. Patches to existing charts may continue to be submitted by the community, and (time permitting) reviewed by chart OWNERS for acceptance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Aug 13, 2020&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;At 9 months – when Helm v2 goes security fix only – the &lt;code&gt;stable&lt;/code&gt; and &lt;code&gt;incubator&lt;/code&gt; repos will be de-listed from the Helm Hub. Chart OWNERS are encouraged to accept security fixes only. ℹ️ &lt;em&gt;Note: the original date has been extended 3 months to match Helm v2 support. See &lt;a href=&#34;https://helm.sh/blog/covid-19-extending-helm-v2-bug-fixes/&#34;&gt;COVID-19: Extending Helm v2 Bug Fixes&lt;/a&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Nov 13, 2020&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;At 1 year, support for this project will formally end, at which point the &lt;code&gt;stable&lt;/code&gt; and &lt;code&gt;incubator&lt;/code&gt; chart repos will be marked obsolete. At that time these chart repos will likely be garbage collected and no longer available. This git repository will remain as an archive.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This timeline gives the community (chart OWNERS, organizations, groups or individuals who want to host charts) 9 months to move charts to new Helm repos, and list these new repos on the Helm Hub before &lt;code&gt;stable&lt;/code&gt; and &lt;code&gt;incubator&lt;/code&gt; are de-listed.&lt;/p&gt; &#xA;&lt;p&gt;Note that this project has been under active development for some time, so you might run into &lt;a href=&#34;https://github.com/helm/charts/issues&#34;&gt;issues&lt;/a&gt;. If you do, please don&#39;t be shy about letting us know, or better yet, contribute a fix or feature (within the deprecation timeline of course). Also be aware the repo and chart OWNERS are volunteers so reviews are as time allows, and acceptance is up to the chart OWNERS - you may &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/#where-to-find-us&#34;&gt;reach out&lt;/a&gt; but please be patient and courteous.&lt;/p&gt; &#xA;&lt;h2&gt;Where to Find Us&lt;/h2&gt; &#xA;&lt;p&gt;For general Helm Chart discussions join the Helm Charts (#charts) room in the &lt;a href=&#34;http://slack.kubernetes.io/&#34;&gt;Kubernetes Slack instance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For issues and support for Helm and Charts see &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/CONTRIBUTING.md#support-channels&#34;&gt;Support Channels&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How Do I Install These Charts?&lt;/h2&gt; &#xA;&lt;p&gt;Just &lt;code&gt;helm install stable/&amp;lt;chart&amp;gt;&lt;/code&gt;. This is the default repository for Helm v2 which is located at &lt;a href=&#34;https://charts.helm.sh/stable/&#34;&gt;https://charts.helm.sh/stable/&lt;/a&gt; and was installed by default prior to Helm v3.&lt;/p&gt; &#xA;&lt;p&gt;For more information on using Helm, refer to the &lt;a href=&#34;https://github.com/kubernetes/helm#docs&#34;&gt;Helm documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How Do I Enable the Stable Repository for Helm 3?&lt;/h2&gt; &#xA;&lt;p&gt;To add the Helm Stable Charts for your local client, run &lt;code&gt;helm repo add&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ helm repo add stable https://charts.helm.sh/stable&#xA;&#34;stable&#34; has been added to your repositories&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How Do I Enable the Incubator Repository?&lt;/h2&gt; &#xA;&lt;p&gt;To add the Incubator charts for your local client, run &lt;code&gt;helm repo add&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ helm repo add incubator https://charts.helm.sh/incubator&#xA;&#34;incubator&#34; has been added to your repositories&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then run &lt;code&gt;helm search incubator&lt;/code&gt; to see the charts.&lt;/p&gt; &#xA;&lt;h2&gt;Chart Format&lt;/h2&gt; &#xA;&lt;p&gt;Take a look at the &lt;a href=&#34;https://github.com/helm/helm/tree/master/cmd/helm/testdata/testcharts/alpine&#34;&gt;alpine example chart&lt;/a&gt; for reference when you&#39;re writing your first few charts.&lt;/p&gt; &#xA;&lt;p&gt;Before contributing a Chart, become familiar with the format. Note that the project is still under active development and the format may still evolve a bit.&lt;/p&gt; &#xA;&lt;h2&gt;Repository Structure&lt;/h2&gt; &#xA;&lt;p&gt;This GitHub repository contains the source for the packaged and versioned charts released using &lt;a href=&#34;https://github.com/helm/charts/tree/gh-pages/stable&#34;&gt;GitHub pages&lt;/a&gt; (the Chart Repository).&lt;/p&gt; &#xA;&lt;p&gt;The Charts in the &lt;code&gt;stable/&lt;/code&gt; directory in the master branch of this repository match the latest packaged Chart in the Chart Repository, though there may be previous versions of a Chart available in that Chart Repository.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this repository is to provide a place for maintaining and contributing official Charts, with CI processes in place for managing the releasing of Charts into the Chart Repository.&lt;/p&gt; &#xA;&lt;p&gt;The Charts in this repository are organized into two folders:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;stable&lt;/li&gt; &#xA; &lt;li&gt;incubator&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Stable Charts meet the criteria in the &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/CONTRIBUTING.md#technical-requirements&#34;&gt;technical requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Incubator Charts are those that do not meet these criteria. Having the incubator folder allows charts to be shared and improved on until they are ready to be moved into the stable folder. The charts in the &lt;code&gt;incubator/&lt;/code&gt; directory can be found on the &lt;a href=&#34;https://github.com/helm/charts/tree/gh-pages/incubator&#34;&gt;&lt;code&gt;gh-pages&lt;/code&gt; branch of the repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to get a Chart from incubator to stable, Chart maintainers should open a pull request that moves the chart folder.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to an Existing Chart&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love for you to contribute to an existing Chart that you find provides a useful application or service for Kubernetes. Please read our &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt; for more information on how you can contribute Charts.&lt;/p&gt; &#xA;&lt;p&gt;Note: We use the same &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/devel/development.md#workflow&#34;&gt;workflow&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/LICENSE&#34;&gt;License&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/CONTRIBUTING.md&#34;&gt;Contributor License Agreement&lt;/a&gt; as the main Kubernetes repository.&lt;/p&gt; &#xA;&lt;h2&gt;Owning and Maintaining A Chart&lt;/h2&gt; &#xA;&lt;p&gt;Individual charts can be maintained by one or more users of GitHub. When someone maintains a chart they have the access to merge changes to that chart. To have merge access to a chart someone needs to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Be listed on the chart, in the &lt;code&gt;Chart.yaml&lt;/code&gt; file, as a maintainer. If you need sponsors and have contributed to the chart, please reach out to the existing maintainers, or if you are having trouble connecting with them, please reach out to one of the &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/OWNERS&#34;&gt;OWNERS&lt;/a&gt; of the charts repository.&lt;/li&gt; &#xA; &lt;li&gt;Be invited (and accept your invite) as a read-only collaborator on &lt;a href=&#34;https://github.com/helm/charts&#34;&gt;this repo&lt;/a&gt;. This is required for @k8s-ci-robot &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/guide/pull-requests.md&#34;&gt;PR comment interaction&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;An OWNERS file needs to be added to a chart. That OWNERS file should list the maintainers&#39; GitHub login names for both the reviewers and approvers sections. For an example see the &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/stable/drupal/OWNERS&#34;&gt;Drupal chart&lt;/a&gt;. The &lt;code&gt;OWNERS&lt;/code&gt; file should also be appended to the &lt;code&gt;.helmignore&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Once these three steps are done a chart approver can merge pull requests following the directions in the &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/REVIEW_GUIDELINES.md&#34;&gt;REVIEW_GUIDELINES.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Trusted Collaborator&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;pull-charts-e2e&lt;/code&gt; test run, that installs a chart to test it, is required before a pull request can be merged. These tests run automatically for members of the Helm Org and for chart &lt;a href=&#34;https://help.github.com/articles/adding-outside-collaborators-to-repositories-in-your-organization/&#34;&gt;repository collaborators&lt;/a&gt;. For regular contributors who are trusted, in a manner similar to Kubernetes community members, we have trusted collaborators. These individuals can have their tests run automatically as well as mark other pull requests as ok to test by adding a comment of &lt;code&gt;/ok-to-test&lt;/code&gt; on pull requests.&lt;/p&gt; &#xA;&lt;p&gt;There are two paths to becoming a trusted collaborator. One only needs follow one of them.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you are a Kubernetes GitHub org member and have your Kubernetes org membership public you can become a trusted collaborator for Helm Charts&lt;/li&gt; &#xA; &lt;li&gt;Get sponsorship from one of the Charts Maintainers listed in the OWNERS file at the root of this repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The process to get added is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File an issue asking to be a trusted collaborator&lt;/li&gt; &#xA; &lt;li&gt;A Helm Chart Maintainer can then add the user as a read only collaborator to the repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Review Process&lt;/h2&gt; &#xA;&lt;p&gt;For information related to the review procedure used by the Chart repository maintainers, see &lt;a href=&#34;https://raw.githubusercontent.com/helm/charts/master/CONTRIBUTING.md#merge-approval-and-release-process&#34;&gt;Merge approval and release process&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Stale Pull Requests and Issues&lt;/h3&gt; &#xA;&lt;p&gt;Pull Requests and Issues that have no activity for 30 days automatically become stale. After 30 days of being stale, without activity, they become rotten. Pull Requests and Issues can rot for 30 days and then they are automatically closed. This is the standard stale process handling for all repositories on the Kubernetes GitHub organization.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Kubernetes Versions&lt;/h2&gt; &#xA;&lt;p&gt;This chart repository supports the latest and previous minor versions of Kubernetes. For example, if the latest minor release of Kubernetes is 1.8 then 1.7 and 1.8 are supported. Charts may still work on previous versions of Kubernertes even though they are outside the target supported window.&lt;/p&gt; &#xA;&lt;p&gt;To provide that support the API versions of objects should be those that work for both the latest minor release and the previous one.&lt;/p&gt; &#xA;&lt;h2&gt;Happy Helming in China&lt;/h2&gt; &#xA;&lt;p&gt;If you are in China, there are some problems to use upstream Helm Charts directly (e.g. images hosted on &lt;code&gt;gcr.io&lt;/code&gt;, &lt;code&gt;quay.io&lt;/code&gt;, and Charts hosted on &lt;code&gt;googleapis.com&lt;/code&gt; etc), you can use this mirror repo at &lt;a href=&#34;https://github.com/cloudnativeapp/charts&#34;&gt;https://github.com/cloudnativeapp/charts&lt;/a&gt; which automatically sync &amp;amp; replace unavailable image &amp;amp; repo URLs in every Chart.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>deepmap/oapi-codegen</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/deepmap/oapi-codegen</id>
    <link href="https://github.com/deepmap/oapi-codegen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate Go client and server boilerplate from OpenAPI 3 specifications&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;OpenAPI Client and Server Code Generator&lt;/h2&gt; &#xA;&lt;p&gt;This package contains a set of utilities for generating Go boilerplate code for services based on &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification/raw/master/versions/3.0.0.md&#34;&gt;OpenAPI 3.0&lt;/a&gt; API definitions. When working with services, it&#39;s important to have an API contract which servers and clients both implement to minimize the chances of incompatibilities. It&#39;s tedious to generate Go models which precisely correspond to OpenAPI specifications, so let our code generator do that work for you, so that you can focus on implementing the business logic for your service.&lt;/p&gt; &#xA;&lt;p&gt;We have chosen to focus on &lt;a href=&#34;https://github.com/labstack/echo&#34;&gt;Echo&lt;/a&gt; as our default HTTP routing engine, due to its speed and simplicity for the generated stubs, and &lt;a href=&#34;https://github.com/go-chi/chi&#34;&gt;Chi&lt;/a&gt;, and &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;Gin&lt;/a&gt; have also been added by contributors as additional routers. We chose Echo because the &lt;code&gt;Context&lt;/code&gt; object is a mockable interface, and it allows for some advanced testing.&lt;/p&gt; &#xA;&lt;p&gt;This package tries to be too simple rather than too generic, so we&#39;ve made some design decisions in favor of simplicity, knowing that we can&#39;t generate strongly typed Go code for all possible OpenAPI Schemas. If there is a way to accomplish something via utility code or reflection, it&#39;s probably a better approach than code generation, which is fragile due to the very dynamic nature of OpenAPI and the very static nature of Go.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re going to use the OpenAPI example of the &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification/raw/master/examples/v3.0/petstore-expanded.yaml&#34;&gt;Expanded Petstore&lt;/a&gt; in the descriptions below, please have a look at it.&lt;/p&gt; &#xA;&lt;p&gt;In order to create a Go server to serve this exact schema, you would have to write a lot of boilerplate code to perform all the marshalling and unmarshalling into objects which match the OpenAPI 3.0 definition. The code generator in this directory does a lot of that for you. You would run it like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest&#xA;oapi-codegen petstore-expanded.yaml &amp;gt; petstore.gen.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s go through that &lt;code&gt;petstore.gen.go&lt;/code&gt; file to show you everything which was generated.&lt;/p&gt; &#xA;&lt;h2&gt;Generated Server Boilerplate&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;/components/schemas&lt;/code&gt; section in OpenAPI defines reusable objects, so Go types are generated for these. The Pet Store example defines &lt;code&gt;Error&lt;/code&gt;, &lt;code&gt;Pet&lt;/code&gt;, &lt;code&gt;Pets&lt;/code&gt; and &lt;code&gt;NewPet&lt;/code&gt;, so we do the same in Go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Error defines model for Error.&#xA;type Error struct {&#xA;    // Error code&#xA;    Code int32 `json:&#34;code&#34;`&#xA;&#xA;    // Error message&#xA;    Message string `json:&#34;message&#34;`&#xA;}&#xA;&#xA;// NewPet defines model for NewPet.&#xA;type NewPet struct {&#xA;    // Name of the pet&#xA;    Name string `json:&#34;name&#34;`&#xA;&#xA;    // Type of the pet&#xA;    Tag *string `json:&#34;tag,omitempty&#34;`&#xA;}&#xA;&#xA;// Pet defines model for Pet.&#xA;type Pet struct {&#xA;    // Unique id of the pet&#xA;    Id int64 `json:&#34;id&#34;`&#xA;&#xA;    // Name of the pet&#xA;    Name string `json:&#34;name&#34;`&#xA;&#xA;    // Type of the pet&#xA;    Tag *string `json:&#34;tag,omitempty&#34;`&#xA;}&#xA;&#xA;// Type definition for component schema &#34;Pets&#34;&#xA;type Pets []Pet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s best to define objects under &lt;code&gt;/components&lt;/code&gt; field in the schema, since those will be turned into named Go types. If you use inline types in your handler definitions, we will generate inline, anonymous Go types, but those are more tedious to deal with since you will have to redeclare them at every point of use.&lt;/p&gt; &#xA;&lt;p&gt;For each element in the &lt;code&gt;paths&lt;/code&gt; map in OpenAPI, we will generate a Go handler function in an interface object. Here is the generated Go interface for our Echo server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type ServerInterface interface {&#xA;    //  (GET /pets)&#xA;    FindPets(ctx echo.Context, params FindPetsParams) error&#xA;    //  (POST /pets)&#xA;    AddPet(ctx echo.Context) error&#xA;    //  (DELETE /pets/{id})&#xA;    DeletePet(ctx echo.Context, id int64) error&#xA;    //  (GET /pets/{id})&#xA;    FindPetById(ctx echo.Context, id int64) error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These are the functions which you will implement yourself in order to create a server conforming to the API specification. Normally, all the arguments and parameters are stored on the &lt;code&gt;echo.Context&lt;/code&gt; in handlers, so we do the tedious work of of unmarshaling the JSON automatically, simply passing values into your handlers.&lt;/p&gt; &#xA;&lt;p&gt;Notice that &lt;code&gt;FindPetById&lt;/code&gt; takes a parameter &lt;code&gt;id int64&lt;/code&gt;. All path arguments will be passed as arguments to your function, since they are mandatory.&lt;/p&gt; &#xA;&lt;p&gt;Remaining arguments can be passed in headers, query arguments or cookies. Those will be written to a &lt;code&gt;params&lt;/code&gt; object. Look at the &lt;code&gt;FindPets&lt;/code&gt; function above, it takes as input &lt;code&gt;FindPetsParams&lt;/code&gt;, which is defined as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Parameters object for FindPets&#xA;type FindPetsParams struct {&#xA;   Tags  *[]string `json:&#34;tags,omitempty&#34;`&#xA;   Limit *int32   `json:&#34;limit,omitempty&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The HTTP query parameter &lt;code&gt;limit&lt;/code&gt; turns into a Go field named &lt;code&gt;Limit&lt;/code&gt;. It is passed by pointer, since it is an optional parameter. If the parameter is specified, the pointer will be non-&lt;code&gt;nil&lt;/code&gt;, and you can read its value.&lt;/p&gt; &#xA;&lt;p&gt;If you changed the OpenAPI specification to make the parameter required, the &lt;code&gt;FindPetsParams&lt;/code&gt; structure will contain the type by value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type FindPetsParams struct {&#xA;    Tags  *[]string `json:&#34;tags,omitempty&#34;`&#xA;    Limit int32     `json:&#34;limit&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Registering handlers&lt;/h3&gt; &#xA;&lt;p&gt;There are a few ways of registering your http handler based on the type of server generated i.e. &lt;code&gt;-generate server&lt;/code&gt; or &lt;code&gt;-generate chi-server&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;Echo&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Code generated using &lt;code&gt;-generate server&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;The usage of &lt;code&gt;Echo&lt;/code&gt; is out of scope of this doc, but once you have an echo instance, we generate a utility function to help you associate your handlers with this autogenerated code. For the pet store, it looks like this:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func RegisterHandlers(router codegen.EchoRouter, si ServerInterface) {&#xA;    wrapper := ServerInterfaceWrapper{&#xA;        Handler: si,&#xA;    }&#xA;    router.GET(&#34;/pets&#34;, wrapper.FindPets)&#xA;    router.POST(&#34;/pets&#34;, wrapper.AddPet)&#xA;    router.DELETE(&#34;/pets/:id&#34;, wrapper.DeletePet)&#xA;    router.GET(&#34;/pets/:id&#34;, wrapper.FindPetById)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The wrapper functions referenced above contain generated code which pulls parameters off the &lt;code&gt;Echo&lt;/code&gt; request context, and unmarshals them into Go objects.&lt;/p&gt; &#xA; &lt;p&gt;You would register the generated handlers as follows:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func SetupHandler() {&#xA;    var myApi PetStoreImpl  // This implements the pet store interface&#xA;    e := echo.New()&#xA;    petstore.RegisterHandlers(e, &amp;amp;myApi)&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;Chi&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Code generated using &lt;code&gt;-generate chi-server&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type PetStoreImpl struct {}&#xA;func (*PetStoreImpl) GetPets(w http.ResponseWriter, r *http.Request) {&#xA;    // Implement me&#xA;}&#xA;&#xA;func SetupHandler() {&#xA;    var myApi PetStoreImpl&#xA;&#xA;    r := chi.NewRouter()&#xA;    r.Mount(&#34;/&#34;, Handler(&amp;amp;myApi))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;Gin&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Code generated using &lt;code&gt;-generate gin&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;The usage of &lt;code&gt;gin&lt;/code&gt; is out of scope of this doc, but once you have an gin instance, we generate a utility function to help you associate your handlers with this autogenerated code. For the pet store, it looks like this:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// RegisterHandlersWithOptions creates http.Handler with additional options&#xA;func RegisterHandlersWithOptions(router *gin.Engine, si ServerInterface, options GinServerOptions) *gin.Engine {&#xA;&#x9;wrapper := ServerInterfaceWrapper{&#xA;&#x9;&#x9;Handler:            si,&#xA;&#x9;&#x9;HandlerMiddlewares: options.Middlewares,&#xA;&#x9;}&#xA;&#xA;&#x9;router.GET(options.BaseURL+&#34;/pets&#34;, wrapper.FindPets)&#xA;&#x9;router.POST(options.BaseURL+&#34;/pets&#34;, wrapper.AddPet)&#xA;&#x9;router.DELETE(options.BaseURL+&#34;/pets/:id&#34;, wrapper.DeletePet)&#xA;&#x9;router.GET(options.BaseURL+&#34;/pets/:id&#34;, wrapper.FindPetByID)&#xA;&#x9;return router&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;&#x9;&#34;github.com/gin-gonic/gin&#34;&#xA;&#x9;&#34;github.com/deepmap/oapi-codegen/examples/petstore-expanded/gin/api&#34;&#xA;&#x9;middleware &#34;github.com/deepmap/oapi-codegen/pkg/gin-middleware&#34;&#xA;)&#xA;&#xA;type PetStoreImpl struct {}&#xA;func (*PetStoreImpl) GetPets(w http.ResponseWriter, r *http.Request) {&#xA;    // Implement me&#xA;}&#xA;&#xA;func SetupHandler() {&#xA;    var myApi PetStoreImpl&#xA;&#xA;    r := gin.Default()&#xA;&#x9;  r.Use(middleware.OapiRequestValidator(swagger))&#xA;    r = api.RegisterHandlers(r, petStore)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;net/http&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/go-chi/chi&#34;&gt;Chi&lt;/a&gt; is 100% compatible with &lt;code&gt;net/http&lt;/code&gt; allowing the following with code generated using &lt;code&gt;-generate chi-server&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type PetStoreImpl struct {}&#xA;func (*PetStoreImpl) GetPets(w http.ResponseWriter, r *http.Request) {&#xA;    // Implement me&#xA;}&#xA;&#xA;func SetupHandler() {&#xA;    var myApi PetStoreImpl&#xA;&#xA;    http.Handle(&#34;/&#34;, Handler(&amp;amp;myApi))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Alternatively, &lt;a href=&#34;https://github.com/gorilla/mux&#34;&gt;Gorilla&lt;/a&gt; is also 100% compatible with &lt;code&gt;net/http&lt;/code&gt; and can be generated with &lt;code&gt;-generate gorilla&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Additional Properties in type definitions&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swagger.io/specification/#schemaObject&#34;&gt;OpenAPI Schemas&lt;/a&gt; implicitly accept &lt;code&gt;additionalProperties&lt;/code&gt;, meaning that any fields provided, but not explicitly defined via properties on the schema are accepted as input, and propagated. When unspecified, the &lt;code&gt;additionalProperties&lt;/code&gt; field is assumed to be &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additional properties are tricky to support in Go with typing, and require lots of boilerplate code, so in this library, we assume that &lt;code&gt;additionalProperties&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt; and we don&#39;t generate this boilerplate. If you would like an object to accept &lt;code&gt;additionalProperties&lt;/code&gt;, specify a schema for &lt;code&gt;additionalProperties&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Say we declared &lt;code&gt;NewPet&lt;/code&gt; above like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    NewPet:&#xA;      required:&#xA;        - name&#xA;      properties:&#xA;        name:&#xA;          type: string&#xA;        tag:&#xA;          type: string&#xA;      additionalProperties:&#xA;        type: string&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Go code for &lt;code&gt;NewPet&lt;/code&gt; would now look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// NewPet defines model for NewPet.&#xA;type NewPet struct {&#xA;&#x9;Name                 string            `json:&#34;name&#34;`&#xA;&#x9;Tag                  *string           `json:&#34;tag,omitempty&#34;`&#xA;&#x9;AdditionalProperties map[string]string `json:&#34;-&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The additionalProperties, of type &lt;code&gt;string&lt;/code&gt; become &lt;code&gt;map[string]string&lt;/code&gt;, which maps field names to instances of the &lt;code&gt;additionalProperties&lt;/code&gt; schema.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Getter for additional properties for NewPet. Returns the specified&#xA;// element and whether it was found&#xA;func (a NewPet) Get(fieldName string) (value string, found bool) {...}&#xA;&#xA;// Setter for additional properties for NewPet&#xA;func (a *NewPet) Set(fieldName string, value string) {...}&#xA;&#xA;// Override default JSON handling for NewPet to handle additionalProperties&#xA;func (a *NewPet) UnmarshalJSON(b []byte) error {...}&#xA;&#xA;// Override default JSON handling for NewPet to handle additionalProperties&#xA;func (a NewPet) MarshalJSON() ([]byte, error) {...}w&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are many special cases for &lt;code&gt;additionalProperties&lt;/code&gt;, such as having to define types for inner fields which themselves support additionalProperties, and all of them are tested via the &lt;code&gt;internal/test/components&lt;/code&gt; schemas and tests. Please look through those tests for more usage examples.&lt;/p&gt; &#xA;&lt;h2&gt;Generated Client Boilerplate&lt;/h2&gt; &#xA;&lt;p&gt;Once your server is up and running, you probably want to make requests to it. If you&#39;re going to do those requests from your Go code, we also generate a client which is conformant with your schema to help in marshaling objects to JSON. It uses the same types and similar function signatures to your request handlers.&lt;/p&gt; &#xA;&lt;p&gt;The interface for the pet store looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// The interface specification for the client above.&#xA;type ClientInterface interface {&#xA;&#xA;&#x9;// FindPets request&#xA;&#x9;FindPets(ctx context.Context, params *FindPetsParams, reqEditors ...RequestEditorFn) (*http.Response, error)&#xA;&#xA;&#x9;// AddPet request with JSON body&#xA;&#x9;AddPet(ctx context.Context, body NewPet, reqEditors ...RequestEditorFn) (*http.Response, error)&#xA;&#xA;&#x9;// DeletePet request&#xA;&#x9;DeletePet(ctx context.Context, id int64, reqEditors ...RequestEditorFn) (*http.Response, error)&#xA;&#xA;&#x9;// FindPetById request&#xA;&#x9;FindPetById(ctx context.Context, id int64, reqEditors ...RequestEditorFn) (*http.Response, error)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A Client object which implements the above interface is also generated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Client which conforms to the OpenAPI3 specification for this service.&#xA;type Client struct {&#xA;    // The endpoint of the server conforming to this interface, with scheme,&#xA;    // https://api.deepmap.com for example.&#xA;    Server string&#xA;&#xA;    // HTTP client with any customized settings, such as certificate chains.&#xA;    Client http.Client&#xA;&#xA;    // A callback for modifying requests which are generated before sending over&#xA;    // the network.&#xA;    RequestEditors []func(ctx context.Context, req *http.Request) error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each operation in your OpenAPI spec will result in a client function which takes the same arguments. It&#39;s difficult to handle any arbitrary body that Swagger supports, so we&#39;ve done some special casing for bodies, and you may get more than one function for an operation with a request body.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have more than one request body type, meaning more than one media type, you will have a generic handler of this form:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; AddPet(ctx context.Context, contentType string, body io.Reader)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have only a JSON request body, you will get:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; AddPet(ctx context.Context, body NewPet)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have multiple request body types, which include a JSON type you will get two functions. We&#39;ve chosen to give the JSON version a shorter name, as we work with JSON and don&#39;t want to wear out our keyboards.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; AddPet(ctx context.Context, body NewPet)&#xA; AddPetWithBody(ctx context.Context, contentType string, body io.Reader)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The Client object above is fairly flexible, since you can pass in your own &lt;code&gt;http.Client&lt;/code&gt; and a request editing callback. You can use that callback to add headers. In our middleware stack, we annotate the context with additional information such as the request ID and function tracing information, and we use the callback to propagate that information into the request headers. Still, we can&#39;t foresee all possible usages, so those functions call through to helper functions which create requests. In the case of the pet store, we have:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Request generator for FindPets&#xA;func NewFindPetsRequest(server string, params *FindPetsParams) (*http.Request, error) {...}&#xA;&#xA;// Request generator for AddPet with JSON body&#xA;func NewAddPetRequest(server string, body NewPet) (*http.Request, error) {...}&#xA;&#xA;// Request generator for AddPet with non-JSON body&#xA;func NewAddPetRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {...}&#xA;&#xA;// Request generator for DeletePet&#xA;func NewDeletePetRequest(server string, id int64) (*http.Request, error) {...}&#xA;&#xA;// Request generator for FindPetById&#xA;func NewFindPetByIdRequest(server string, id int64) (*http.Request, error) {...}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can call these functions to build an &lt;code&gt;http.Request&lt;/code&gt; from Go objects, which will correspond to your request schema. They map one-to-one to the functions on the client, except that we always generate the generic non-JSON body handler.&lt;/p&gt; &#xA;&lt;p&gt;There are some caveats to using this code.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;exploded, form style query arguments, which are the default argument format in OpenAPI 3.0 are undecidable. Say that I have two objects, one composed of the fields &lt;code&gt;(name=bob, id=5)&lt;/code&gt; and another which has &lt;code&gt;(name=shoe, color=brown)&lt;/code&gt;. The first parameter is named &lt;code&gt;person&lt;/code&gt; and the second is named &lt;code&gt;item&lt;/code&gt;. The default marshaling style for query args would result in &lt;code&gt;/path/?name=bob,id=5&amp;amp;name=shoe,color=brown&lt;/code&gt;. In order to tell what belongs to which object, we&#39;d have to look at all the parameters and try to deduce it, but we&#39;re lazy, so we didn&#39;t. Don&#39;t use exploded form style arguments if you&#39;re passing around objects which have similar field names. If you used unexploded form parameters, you&#39;d have &lt;code&gt;/path/?person=name,bob,id,5&amp;amp;item=name,shoe,color,brown&lt;/code&gt;, which an be parsed unambiguously.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Parameters can be defined via &lt;code&gt;schema&lt;/code&gt; or via &lt;code&gt;content&lt;/code&gt;. Use the &lt;code&gt;content&lt;/code&gt; form for anything other than trivial objects, they can marshal to arbitrary JSON structures. When you send them as cookie (&lt;code&gt;in: cookie&lt;/code&gt;) arguments, we will URL encode them, since JSON delimiters aren&#39;t allowed in cookies.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using SecurityProviders&lt;/h2&gt; &#xA;&lt;p&gt;If you generate client-code, you can use some default-provided security providers which help you to use the various OpenAPI 3 Authentication mechanism.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;    import (&#xA;        &#34;github.com/deepmap/oapi-codegen/pkg/securityprovider&#34;&#xA;    )&#xA;&#xA;    func CreateSampleProviders() error {&#xA;        // Example BasicAuth&#xA;        // See: https://swagger.io/docs/specification/authentication/basic-authentication/&#xA;        basicAuthProvider, basicAuthProviderErr := securityprovider.NewSecurityProviderBasicAuth(&#34;MY_USER&#34;, &#34;MY_PASS&#34;)&#xA;        if basicAuthProviderErr != nil {&#xA;            panic(basicAuthProviderErr)&#xA;        }&#xA;&#xA;        // Example BearerToken&#xA;        // See: https://swagger.io/docs/specification/authentication/bearer-authentication/&#xA;        bearerTokenProvider, bearerTokenProviderErr := securityprovider.NewSecurityProviderBearerToken(&#34;MY_TOKEN&#34;)&#xA;        if bearerTokenProviderErr != nil {&#xA;            panic(bearerTokenProviderErr)&#xA;        }&#xA;&#xA;        // Example ApiKey provider&#xA;        // See: https://swagger.io/docs/specification/authentication/api-keys/&#xA;        apiKeyProvider, apiKeyProviderErr := securityprovider.NewSecurityProviderApiKey(&#34;query&#34;, &#34;myApiKeyParam&#34;, &#34;MY_API_KEY&#34;)&#xA;        if apiKeyProviderErr != nil {&#xA;            panic(apiKeyProviderErr)&#xA;        }&#xA;&#xA;        // Example providing your own provider using an anonymous function wrapping in the&#xA;        // InterceptoFn adapter. The behaviour between the InterceptorFn and the Interceptor interface&#xA;        // are the same as http.HandlerFunc and http.Handler.&#xA;        customProvider := func(req *http.Request, ctx context.Context) error {&#xA;            // Just log the request header, nothing else.&#xA;            log.Println(req.Header)&#xA;            return nil&#xA;        }&#xA;&#xA;        // Exhaustive list of some defaults you can use to initialize a Client.&#xA;        // If you need to override the underlying httpClient, you can use the option&#xA;        //&#xA;        // WithHTTPClient(httpClient *http.Client)&#xA;        //&#xA;        client, clientErr := NewClient(&#34;https://api.deepmap.com&#34;, WithRequestEditorFn(apiKeyProvider.Intercept))&#xA;&#xA;        return nil&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;oapi-codegen&lt;/code&gt; supports the following extended properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;x-go-type&lt;/code&gt;: specifies Go type name. It allows you to specify the type name for a schema, and will override any default value. This extended property isn&#39;t supported in all parts of OpenAPI, so please refer to the spec as to where it&#39;s allowed. Swagger validation tools will flag incorrect usage of this property.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;x-go-name&lt;/code&gt;: specifies Go field name. It allows you to specify the field name for a schema, and will override any default value. This extended property isn&#39;t supported in all parts of OpenAPI, so please refer to the spec as to where it&#39;s allowed. Swagger validation tools will flag incorrect usage of this property.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;x-oapi-codegen-extra-tags&lt;/code&gt;: adds extra Go field tags to the generated struct field. This is useful for interfacing with tag based ORM or validation libraries. The extra tags that are added are in addition to the regular json tags that are generated. If you specify your own &lt;code&gt;json&lt;/code&gt; tag, you will override the default one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;components:&#xA;  schemas:&#xA;    Object:&#xA;      properties:&#xA;        name:&#xA;          type: string&#xA;          x-oapi-codegen-extra-tags:&#xA;            tag1: value1&#xA;            tag2: value2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the example above, field &lt;code&gt;name&lt;/code&gt; will be declared as:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Name string `json:&#34;name&#34; tag1:&#34;value1&#34; tag2:&#34;value2&#34;`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using &lt;code&gt;oapi-codegen&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The default options for &lt;code&gt;oapi-codegen&lt;/code&gt; will generate everything; client, server, type definitions and embedded swagger spec, but you can generate subsets of those via the &lt;code&gt;-generate&lt;/code&gt; flag. It defaults to &lt;code&gt;types,client,server,spec&lt;/code&gt;, but you can specify any combination of those.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;types&lt;/code&gt;: generate all type definitions for all types in the OpenAPI spec. This will be everything under &lt;code&gt;#components&lt;/code&gt;, as well as request parameter, request body, and response type objects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server&lt;/code&gt;: generate the Echo server boilerplate. &lt;code&gt;server&lt;/code&gt; requires the types in the same package to compile.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chi-server&lt;/code&gt;: generate the Chi server boilerplate. This code is dependent on that produced by the &lt;code&gt;types&lt;/code&gt; target.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: generate the client boilerplate. It, too, requires the types to be present in its package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;spec&lt;/code&gt;: embed the OpenAPI spec into the generated code as a gzipped blob. This&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;skip-fmt&lt;/code&gt;: skip running &lt;code&gt;goimports&lt;/code&gt; on the generated code. This is useful for debugging the generated file in case the spec contains weird strings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;skip-prune&lt;/code&gt;: skip pruning unused components from the spec prior to generating the code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;import-mapping&lt;/code&gt;: specifies a map of references external OpenAPI specs to go Go include paths. Please see below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So, for example, if you would like to produce only the server code, you could run &lt;code&gt;oapi-codegen -generate types,server&lt;/code&gt;. You could generate &lt;code&gt;types&lt;/code&gt; and &lt;code&gt;server&lt;/code&gt; into separate files, but both are required for the server code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;oapi-codegen&lt;/code&gt; can filter paths base on their tags in the openapi definition. Use either &lt;code&gt;-include-tags&lt;/code&gt; or &lt;code&gt;-exclude-tags&lt;/code&gt; followed by a comma-separated list of tags. For instance, to generate a server that serves all paths except those tagged with &lt;code&gt;auth&lt;/code&gt; or &lt;code&gt;admin&lt;/code&gt;, use the argument, &lt;code&gt;-exclude-tags=&#34;auth,admin&#34;&lt;/code&gt;. To generate a server that only handles &lt;code&gt;admin&lt;/code&gt; paths, use the argument &lt;code&gt;-include-tags=&#34;admin&#34;&lt;/code&gt;. When neither of these arguments is present, all paths are generated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;oapi-codegen&lt;/code&gt; can filter schemas based on the option &lt;code&gt;--exclude-schemas&lt;/code&gt;, which is a comma separated list of schema names. For instance, &lt;code&gt;--exclude-schemas=Pet,NewPet&lt;/code&gt; will exclude from generation schemas &lt;code&gt;Pet&lt;/code&gt; and &lt;code&gt;NewPet&lt;/code&gt;. This allow to have a in the same package a manually defined structure or interface and refer to it in the openapi spec.&lt;/p&gt; &#xA;&lt;p&gt;Since &lt;code&gt;go generate&lt;/code&gt; commands must be a single line, all the options above can make them pretty unwieldy, so you can specify all of the options in a configuration file via the &lt;code&gt;--config&lt;/code&gt; option. Please see the test under &lt;a href=&#34;https://github.com/deepmap/oapi-codegen/raw/master/internal/test/externalref/externalref.cfg.yaml&#34;&gt;&lt;code&gt;/internal/test/externalref/&lt;/code&gt;&lt;/a&gt; for an example. The structure of the file is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;output:&#xA;  externalref.gen.go&#xA;package: externalref&#xA;generate:&#xA;  - types&#xA;  - skip-prune&#xA;import-mapping:&#xA;  ./packageA/spec.yaml: github.com/deepmap/oapi-codegen/internal/test/externalref/packageA&#xA;  ./packageB/spec.yaml: github.com/deepmap/oapi-codegen/internal/test/externalref/packageB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Have a look at &lt;a href=&#34;https://github.com/deepmap/oapi-codegen/raw/master/cmd/oapi-codegen/oapi-codegen.go#L48&#34;&gt;&lt;code&gt;cmd/oapi-codegen/oapi-codegen.go&lt;/code&gt;&lt;/a&gt; to see all the fields on the configuration structure.&lt;/p&gt; &#xA;&lt;h3&gt;Import Mappings&lt;/h3&gt; &#xA;&lt;p&gt;OpenAPI specifications may contain references to other OpenAPI specifications, and we need some additional information in order to be able to generate correct Go code.&lt;/p&gt; &#xA;&lt;p&gt;An external reference looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ref: ./some_spec.yaml#/components/schemas/Type&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We assume that you have already generated the boilerplate code for &lt;code&gt;./some_spec.yaml&lt;/code&gt; using &lt;code&gt;oapi-codegen&lt;/code&gt;, and you have a package which contains the generated code, let&#39;s call it &lt;code&gt;github.com/deepmap/some-package&lt;/code&gt;. You need to tell &lt;code&gt;oapi-codegen&lt;/code&gt; that &lt;code&gt;some_spec.yaml&lt;/code&gt; corresponds to this package, and you would do it by specifying this command line argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-import-mapping=./some_spec.yaml:github.com/deepmap/some-package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This tells us that in order to resolve references generated from &lt;code&gt;some_spec.yaml&lt;/code&gt; we need to import &lt;code&gt;github.com/deepmap/some-package&lt;/code&gt;. You may specify multiple mappings by comma separating them in the form &lt;code&gt;key1:value1,key2:value2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s missing or incomplete&lt;/h2&gt; &#xA;&lt;p&gt;This code is still young, and not complete, since we&#39;re filling it in as we need it. We&#39;ve not yet implemented several things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;oneOf&lt;/code&gt;, &lt;code&gt;anyOf&lt;/code&gt; are not supported with strong Go typing. This schema:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  schema:&#xA;    oneOf:&#xA;      - $ref: &#39;#/components/schemas/Cat&#39;&#xA;      - $ref: &#39;#/components/schemas/Dog&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;will result in a Go type of &lt;code&gt;interface{}&lt;/code&gt;. It will be up to you to validate whether it conforms to &lt;code&gt;Cat&lt;/code&gt; and/or &lt;code&gt;Dog&lt;/code&gt;, depending on the keyword. It&#39;s not clear if we can do anything much better here given the limits of Go typing.&lt;/p&gt; &lt;p&gt;&lt;code&gt;allOf&lt;/code&gt; is supported, by taking the union of all the fields in all the component schemas. This is the most useful of these operations, and is commonly used to merge objects with an identifier, as in the &lt;code&gt;petstore-expanded&lt;/code&gt; example.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;patternProperties&lt;/code&gt; isn&#39;t yet supported and will exit with an error. Pattern properties were defined in JSONSchema, and the &lt;code&gt;kin-openapi&lt;/code&gt; Swagger object knows how to parse them, but they&#39;re not part of OpenAPI 3.0, so we&#39;ve left them out, as support is very complicated.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Making changes to code generation&lt;/h2&gt; &#xA;&lt;p&gt;The code generator uses a tool to inline all the template definitions into code, so that we don&#39;t have to deal with the location of the template files. When you update any of the files under the &lt;code&gt;templates/&lt;/code&gt; directory, you will need to regenerate the template inlines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go generate ./pkg/codegen/templates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All this command does is inline the files ending in &lt;code&gt;.tmpl&lt;/code&gt; into the specified Go file.&lt;/p&gt; &#xA;&lt;p&gt;Afterwards you should run &lt;code&gt;go generate ./...&lt;/code&gt;, and the templates will be updated accordingly.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can provide custom templates to override built-in ones using the &lt;code&gt;-templates&lt;/code&gt; flag specifying a path to a directory containing templates files. These files &lt;strong&gt;must&lt;/strong&gt; be named identically to built-in template files (see &lt;code&gt;pkg/codegen/templates/*.tmpl&lt;/code&gt; in the source code), and will be interpreted on-the-fly at run time. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls -1 my-templates/&#xA;client.tmpl&#xA;typedef.tmpl&#xA;$ oapi-codegen \&#xA;    -templates my-templates/ \&#xA;    -generate types,client \&#xA;    petstore-expanded.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>golang/mock</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/golang/mock</id>
    <link href="https://github.com/golang/mock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoMock is a mocking framework for the Go programming language.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gomock&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/golang/mock/actions&#34;&gt;&lt;img src=&#34;https://github.com/golang/mock/actions/workflows/test.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/golang/mock&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/golang/mock.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;gomock is a mocking framework for the &lt;a href=&#34;http://golang.org/&#34;&gt;Go programming language&lt;/a&gt;. It integrates well with Go&#39;s built-in &lt;code&gt;testing&lt;/code&gt; package, but can be used in other contexts too.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Once you have &lt;a href=&#34;http://golang.org/doc/install.html#releases&#34;&gt;installed Go&lt;/a&gt;, install the &lt;code&gt;mockgen&lt;/code&gt; tool.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have not done so already be sure to add &lt;code&gt;$GOPATH/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get the latest released version use:&lt;/p&gt; &#xA;&lt;h3&gt;Go version &amp;lt; 1.16&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GO111MODULE=on go get github.com/golang/mock/mockgen@v1.6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Go 1.16+&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/golang/mock/mockgen@v1.6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use &lt;code&gt;mockgen&lt;/code&gt; in your CI pipeline, it may be more appropriate to fixate on a specific mockgen version. You should try to keep the library in sync with the version of mockgen used to generate your mocks.&lt;/p&gt; &#xA;&lt;h2&gt;Running mockgen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;mockgen&lt;/code&gt; has two modes of operation: source and reflect.&lt;/p&gt; &#xA;&lt;h3&gt;Source mode&lt;/h3&gt; &#xA;&lt;p&gt;Source mode generates mock interfaces from a source file. It is enabled by using the -source flag. Other flags that may be useful in this mode are -imports and -aux_files.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mockgen -source=foo.go [other options]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reflect mode&lt;/h3&gt; &#xA;&lt;p&gt;Reflect mode generates mock interfaces by building a program that uses reflection to understand interfaces. It is enabled by passing two non-flag arguments: an import path, and a comma-separated list of symbols.&lt;/p&gt; &#xA;&lt;p&gt;You can use &#34;.&#34; to refer to the current path&#39;s package.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mockgen database/sql/driver Conn,Driver&#xA;&#xA;# Convenient for `go:generate`.&#xA;mockgen . Conn,Driver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Flags&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;mockgen&lt;/code&gt; command is used to generate source code for a mock class given a Go source file containing interfaces to be mocked. It supports the following flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-source&lt;/code&gt;: A file containing interfaces to be mocked.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-destination&lt;/code&gt;: A file to which to write the resulting source code. If you don&#39;t set this, the code is printed to standard output.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-package&lt;/code&gt;: The package to use for the resulting mock class source code. If you don&#39;t set this, the package name is &lt;code&gt;mock_&lt;/code&gt; concatenated with the package of the input file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-imports&lt;/code&gt;: A list of explicit imports that should be used in the resulting source code, specified as a comma-separated list of elements of the form &lt;code&gt;foo=bar/baz&lt;/code&gt;, where &lt;code&gt;bar/baz&lt;/code&gt; is the package being imported and &lt;code&gt;foo&lt;/code&gt; is the identifier to use for the package in the generated source code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-aux_files&lt;/code&gt;: A list of additional files that should be consulted to resolve e.g. embedded interfaces defined in a different file. This is specified as a comma-separated list of elements of the form &lt;code&gt;foo=bar/baz.go&lt;/code&gt;, where &lt;code&gt;bar/baz.go&lt;/code&gt; is the source file and &lt;code&gt;foo&lt;/code&gt; is the package name of that file used by the -source file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-build_flags&lt;/code&gt;: (reflect mode only) Flags passed verbatim to &lt;code&gt;go build&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-mock_names&lt;/code&gt;: A list of custom names for generated mocks. This is specified as a comma-separated list of elements of the form &lt;code&gt;Repository=MockSensorRepository,Endpoint=MockSensorEndpoint&lt;/code&gt;, where &lt;code&gt;Repository&lt;/code&gt; is the interface name and &lt;code&gt;MockSensorRepository&lt;/code&gt; is the desired mock name (mock factory method and mock recorder will be named after the mock). If one of the interfaces has no custom name specified, then default naming convention will be used.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-self_package&lt;/code&gt;: The full package import path for the generated code. The purpose of this flag is to prevent import cycles in the generated code by trying to include its own package. This can happen if the mock&#39;s package is set to one of its inputs (usually the main one) and the output is stdio so mockgen cannot detect the final output package. Setting this flag will then tell mockgen which import to exclude.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-copyright_file&lt;/code&gt;: Copyright file used to add copyright header to the resulting source code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-debug_parser&lt;/code&gt;: Print out parser results only.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-exec_only&lt;/code&gt;: (reflect mode) If set, execute this reflection program.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-prog_only&lt;/code&gt;: (reflect mode) Only generate the reflection program; write it to stdout and exit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;-write_package_comment&lt;/code&gt;: Writes package documentation comment (godoc) if true. (default true)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For an example of the use of &lt;code&gt;mockgen&lt;/code&gt;, see the &lt;code&gt;sample/&lt;/code&gt; directory. In simple cases, you will need only the &lt;code&gt;-source&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h2&gt;Building Mocks&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Foo interface {&#xA;  Bar(x int) int&#xA;}&#xA;&#xA;func SUT(f Foo) {&#xA; // ...&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func TestFoo(t *testing.T) {&#xA;  ctrl := gomock.NewController(t)&#xA;&#xA;  // Assert that Bar() is invoked.&#xA;  defer ctrl.Finish()&#xA;&#xA;  m := NewMockFoo(ctrl)&#xA;&#xA;  // Asserts that the first and only call to Bar() is passed 99.&#xA;  // Anything else will fail.&#xA;  m.&#xA;    EXPECT().&#xA;    Bar(gomock.Eq(99)).&#xA;    Return(101)&#xA;&#xA;  SUT(m)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using a Go version of 1.14+, a mockgen version of 1.5.0+, and are passing a *testing.T into &lt;code&gt;gomock.NewController(t)&lt;/code&gt; you no longer need to call &lt;code&gt;ctrl.Finish()&lt;/code&gt; explicitly. It will be called for you automatically from a self registered &lt;a href=&#34;https://pkg.go.dev/testing?tab=doc#T.Cleanup&#34;&gt;Cleanup&lt;/a&gt; function.&lt;/p&gt; &#xA;&lt;h2&gt;Building Stubs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Foo interface {&#xA;  Bar(x int) int&#xA;}&#xA;&#xA;func SUT(f Foo) {&#xA; // ...&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func TestFoo(t *testing.T) {&#xA;  ctrl := gomock.NewController(t)&#xA;  defer ctrl.Finish()&#xA;&#xA;  m := NewMockFoo(ctrl)&#xA;&#xA;  // Does not make any assertions. Executes the anonymous functions and returns&#xA;  // its result when Bar is invoked with 99.&#xA;  m.&#xA;    EXPECT().&#xA;    Bar(gomock.Eq(99)).&#xA;    DoAndReturn(func(_ int) int {&#xA;      time.Sleep(1*time.Second)&#xA;      return 101&#xA;    }).&#xA;    AnyTimes()&#xA;&#xA;  // Does not make any assertions. Returns 103 when Bar is invoked with 101.&#xA;  m.&#xA;    EXPECT().&#xA;    Bar(gomock.Eq(101)).&#xA;    Return(103).&#xA;    AnyTimes()&#xA;&#xA;  SUT(m)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Modifying Failure Messages&lt;/h2&gt; &#xA;&lt;p&gt;When a matcher reports a failure, it prints the received (&lt;code&gt;Got&lt;/code&gt;) vs the expected (&lt;code&gt;Want&lt;/code&gt;) value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Got: [3]&#xA;Want: is equal to 2&#xA;Expected call at user_test.go:33 doesn&#39;t match the argument at index 1.&#xA;Got: [0 1 1 2 3]&#xA;Want: is equal to 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Modifying &lt;code&gt;Want&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Want&lt;/code&gt; value comes from the matcher&#39;s &lt;code&gt;String()&lt;/code&gt; method. If the matcher&#39;s default output doesn&#39;t meet your needs, then it can be modified as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;gomock.WantFormatter(&#xA;  gomock.StringerFunc(func() string { return &#34;is equal to fifteen&#34; }),&#xA;  gomock.Eq(15),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This modifies the &lt;code&gt;gomock.Eq(15)&lt;/code&gt; matcher&#39;s output for &lt;code&gt;Want:&lt;/code&gt; from &lt;code&gt;is equal to 15&lt;/code&gt; to &lt;code&gt;is equal to fifteen&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Modifying &lt;code&gt;Got&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Got&lt;/code&gt; value comes from the object&#39;s &lt;code&gt;String()&lt;/code&gt; method if it is available. In some cases the output of an object is difficult to read (e.g., &lt;code&gt;[]byte&lt;/code&gt;) and it would be helpful for the test to print it differently. The following modifies how the &lt;code&gt;Got&lt;/code&gt; value is formatted:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;gomock.GotFormatterAdapter(&#xA;  gomock.GotFormatterFunc(func(i interface{}) string {&#xA;    // Leading 0s&#xA;    return fmt.Sprintf(&#34;%02d&#34;, i)&#xA;  }),&#xA;  gomock.Eq(15),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the received value is &lt;code&gt;3&lt;/code&gt;, then it will be printed as &lt;code&gt;03&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging Errors&lt;/h2&gt; &#xA;&lt;h3&gt;reflect vendoring error&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;cannot find package &#34;.&#34;&#xA;... github.com/golang/mock/mockgen/model&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you come across this error while using reflect mode and vendoring dependencies there are three workarounds you can choose from:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use source mode.&lt;/li&gt; &#xA; &lt;li&gt;Include an empty import &lt;code&gt;import _ &#34;github.com/golang/mock/mockgen/model&#34;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;--build_flags=--mod=mod&lt;/code&gt; to your mockgen command.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This error is due to changes in default behavior of the &lt;code&gt;go&lt;/code&gt; command in more recent versions. More details can be found in &lt;a href=&#34;https://github.com/golang/mock/issues/494&#34;&gt;#494&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>swaggo/swag</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/swaggo/swag</id>
    <link href="https://github.com/swaggo/swag" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatically generate RESTful API documentation with Swagger 2.0 for Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;swag&lt;/h1&gt; &#xA;&lt;p&gt;🌍 &lt;em&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/README.md&#34;&gt;English&lt;/a&gt; ∙ &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/README_zh-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;180px&#34; src=&#34;https://raw.githubusercontent.com/swaggo/swag/master/assets/swaggo.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;&lt;img src=&#34;https://github.com/swaggo/swag/actions/workflows/ci.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/swaggo/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/swaggo/swag/master.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/swaggo/swag&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/swaggo/swag&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codebeat.co/projects/github-com-swaggo-swag-master&#34;&gt;&lt;img src=&#34;https://codebeat.co/badges/71e2f5e5-9e6b-405d-baf9-7cc8b5037330&#34; alt=&#34;codebeat badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/swaggo/swag&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/swaggo/swagg?status.svg?sanitize=true&#34; alt=&#34;Go Doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fswaggo%2Fswag?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fswaggo%2Fswag.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/swaggo/swag/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/swaggo/swag.svg?style=flat-square&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Swag converts Go annotations to Swagger Documentation 2.0. We&#39;ve created a variety of plugins for popular &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#supported-web-frameworks&#34;&gt;Go web frameworks&lt;/a&gt;. This allows you to quickly integrate with an existing Go project (using Swagger UI).&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#supported-web-frameworks&#34;&gt;Supported Web Frameworks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#how-to-use-it-with-gin&#34;&gt;How to use it with Gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#the-swag-formatter&#34;&gt;The swag formatter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#implementation-status&#34;&gt;Implementation Status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#declarative-comments-format&#34;&gt;Declarative Comments Format&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#general-api-info&#34;&gt;General API Info&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#api-operation&#34;&gt;API Operation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#examples&#34;&gt;Examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#descriptions-over-multiple-lines&#34;&gt;Descriptions over multiple lines&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#user-defined-structure-with-an-array-type&#34;&gt;User defined structure with an array type&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#model-composition-in-response&#34;&gt;Model composition in response&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#add-a-headers-in-response&#34;&gt;Add a headers in response&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#use-multiple-path-params&#34;&gt;Use multiple path params&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#example-value-of-struct&#34;&gt;Example value of struct&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#schemaexample-of-body&#34;&gt;SchemaExample of body&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#description-of-struct&#34;&gt;Description of struct&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#use-swaggertype-tag-to-supported-custom-type&#34;&gt;Use swaggertype tag to supported custom type&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#use-global-overrides-to-support-a-custom-type&#34;&gt;Use global overrides to support a custom type&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#use-swaggerignore-tag-to-exclude-a-field&#34;&gt;Use swaggerignore tag to exclude a field&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#add-extension-info-to-struct-field&#34;&gt;Add extension info to struct field&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#rename-model-to-display&#34;&gt;Rename model to display&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#how-to-use-security-annotations&#34;&gt;How to use security annotations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#add-a-description-for-enum-items&#34;&gt;Add a description for enum items&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#generate-only-specific-docs-file-types&#34;&gt;Generate only specific docs file types&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#about-the-project&#34;&gt;About the Project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add comments to your API source code, See &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#declarative-comments-format&#34;&gt;Declarative Comments Format&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download swag by using:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ go get -u github.com/swaggo/swag/cmd/swag&#xA;&#xA;# 1.16 or newer&#xA;$ go install github.com/swaggo/swag/cmd/swag@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build from source you need &lt;a href=&#34;https://golang.org/dl/&#34;&gt;Go&lt;/a&gt; (1.15 or newer).&lt;/p&gt; &#xA;&lt;p&gt;Or download a pre-compiled binary from the &lt;a href=&#34;https://github.com/swaggo/swag/releases&#34;&gt;release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;swag init&lt;/code&gt; in the project&#39;s root folder which contains the &lt;code&gt;main.go&lt;/code&gt; file. This will parse your comments and generate the required files (&lt;code&gt;docs&lt;/code&gt; folder and &lt;code&gt;docs/docs.go&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ swag init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure to import the generated &lt;code&gt;docs/docs.go&lt;/code&gt; so that your specific configuration gets &lt;code&gt;init&lt;/code&gt;&#39;ed. If your General API annotations do not live in &lt;code&gt;main.go&lt;/code&gt;, you can let swag know with &lt;code&gt;-g&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;swag init -g http/api.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;(optional) Use &lt;code&gt;swag fmt&lt;/code&gt; format the SWAG comment. (Please upgrade to the latest version)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;swag fmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;swag cli&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ swag init -h&#xA;NAME:&#xA;   swag init - Create docs.go&#xA;&#xA;USAGE:&#xA;   swag init [command options] [arguments...]&#xA;&#xA;OPTIONS:&#xA;   --generalInfo value, -g value          Go file path in which &#39;swagger general API Info&#39; is written (default: &#34;main.go&#34;)&#xA;   --dir value, -d value                  Directories you want to parse,comma separated and general-info file must be in the first one (default: &#34;./&#34;)&#xA;   --exclude value                        Exclude directories and files when searching, comma separated&#xA;   --propertyStrategy value, -p value     Property Naming Strategy like snakecase,camelcase,pascalcase (default: &#34;camelcase&#34;)&#xA;   --output value, -o value               Output directory for all the generated files(swagger.json, swagger.yaml and docs.go) (default: &#34;./docs&#34;)&#xA;   --outputTypes value, --ot value        Output types of generated files (docs.go, swagger.json, swagger.yaml) like go,json,yaml (default: &#34;go,json,yaml&#34;)&#xA;   --parseVendor                          Parse go files in &#39;vendor&#39; folder, disabled by default (default: false)&#xA;   --parseDependency, --pd                Parse go files inside dependency folder, disabled by default (default: false)&#xA;   --markdownFiles value, --md value      Parse folder containing markdown files to use as description, disabled by default&#xA;   --codeExampleFiles value, --cef value  Parse folder containing code example files to use for the x-codeSamples extension, disabled by default&#xA;   --parseInternal                        Parse go files in internal packages, disabled by default (default: false)&#xA;   --generatedTime                        Generate timestamp at the top of docs.go, disabled by default (default: false)&#xA;   --parseDepth value                     Dependency parse depth (default: 100)&#xA;   --instanceName value                   This parameter can be used to name different swagger document instances. It is optional.&#xA;   --overridesFile value                  File to read global type overrides from. (default: &#34;.swaggo&#34;)&#xA;   --help, -h                             show help (default: false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;swag fmt -h&#xA;NAME:&#xA;   swag fmt - format swag comments&#xA;&#xA;USAGE:&#xA;   swag fmt [command options] [arguments...]&#xA;&#xA;OPTIONS:&#xA;   --dir value, -d value          Directories you want to parse,comma separated and general-info file must be in the first one (default: &#34;./&#34;)&#xA;   --exclude value                Exclude directories and files when searching, comma separated&#xA;   --generalInfo value, -g value  Go file path in which &#39;swagger general API Info&#39; is written (default: &#34;main.go&#34;)&#xA;   --help, -h                     show help (default: false)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Web Frameworks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/swaggo/gin-swagger&#34;&gt;gin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/swaggo/echo-swagger&#34;&gt;echo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swaggo/buffalo-swagger&#34;&gt;buffalo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swaggo/http-swagger&#34;&gt;net/http&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i-love-flamingo/swagger&#34;&gt;flamingo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arsmn/fiber-swagger&#34;&gt;fiber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nerzal/atreugo-swagger&#34;&gt;atreugo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use it with Gin&lt;/h2&gt; &#xA;&lt;p&gt;Find the example source code &lt;a href=&#34;https://github.com/swaggo/swag/tree/master/example/celler&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;After using &lt;code&gt;swag init&lt;/code&gt; to generate Swagger 2.0 docs, import the following packages:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;github.com/swaggo/gin-swagger&#34; // gin-swagger middleware&#xA;import &#34;github.com/swaggo/files&#34; // swagger embed files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#general-api-info&#34;&gt;General API&lt;/a&gt; annotations in &lt;code&gt;main.go&lt;/code&gt; code:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @title           Swagger Example API&#xA;// @version         1.0&#xA;// @description     This is a sample server celler server.&#xA;// @termsOfService  http://swagger.io/terms/&#xA;&#xA;// @contact.name   API Support&#xA;// @contact.url    http://www.swagger.io/support&#xA;// @contact.email  support@swagger.io&#xA;&#xA;// @license.name  Apache 2.0&#xA;// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html&#xA;&#xA;// @host      localhost:8080&#xA;// @BasePath  /api/v1&#xA;&#xA;// @securityDefinitions.basic  BasicAuth&#xA;func main() {&#xA;&#x9;r := gin.Default()&#xA;&#xA;&#x9;c := controller.NewController()&#xA;&#xA;&#x9;v1 := r.Group(&#34;/api/v1&#34;)&#xA;&#x9;{&#xA;&#x9;&#x9;accounts := v1.Group(&#34;/accounts&#34;)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;accounts.GET(&#34;:id&#34;, c.ShowAccount)&#xA;&#x9;&#x9;&#x9;accounts.GET(&#34;&#34;, c.ListAccounts)&#xA;&#x9;&#x9;&#x9;accounts.POST(&#34;&#34;, c.AddAccount)&#xA;&#x9;&#x9;&#x9;accounts.DELETE(&#34;:id&#34;, c.DeleteAccount)&#xA;&#x9;&#x9;&#x9;accounts.PATCH(&#34;:id&#34;, c.UpdateAccount)&#xA;&#x9;&#x9;&#x9;accounts.POST(&#34;:id/images&#34;, c.UploadAccountImage)&#xA;&#x9;&#x9;}&#xA;    //...&#xA;&#x9;}&#xA;&#x9;r.GET(&#34;/swagger/*any&#34;, ginSwagger.WrapHandler(swaggerFiles.Handler))&#xA;&#x9;r.Run(&#34;:8080&#34;)&#xA;}&#xA;//...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally some general API info can be set dynamically. The generated code package &lt;code&gt;docs&lt;/code&gt; exports &lt;code&gt;SwaggerInfo&lt;/code&gt; variable which we can use to set the title, description, version, host and base path programmatically. Example using Gin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;github.com/gin-gonic/gin&#34;&#xA;&#x9;&#34;github.com/swaggo/files&#34;&#xA;&#x9;&#34;github.com/swaggo/gin-swagger&#34;&#xA;&#xA;&#x9;&#34;./docs&#34; // docs is generated by Swag CLI, you have to import it.&#xA;)&#xA;&#xA;// @contact.name   API Support&#xA;// @contact.url    http://www.swagger.io/support&#xA;// @contact.email  support@swagger.io&#xA;&#xA;// @license.name  Apache 2.0&#xA;// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html&#xA;func main() {&#xA;&#xA;&#x9;// programmatically set swagger info&#xA;&#x9;docs.SwaggerInfo.Title = &#34;Swagger Example API&#34;&#xA;&#x9;docs.SwaggerInfo.Description = &#34;This is a sample server Petstore server.&#34;&#xA;&#x9;docs.SwaggerInfo.Version = &#34;1.0&#34;&#xA;&#x9;docs.SwaggerInfo.Host = &#34;petstore.swagger.io&#34;&#xA;&#x9;docs.SwaggerInfo.BasePath = &#34;/v2&#34;&#xA;&#x9;docs.SwaggerInfo.Schemes = []string{&#34;http&#34;, &#34;https&#34;}&#xA;&#xA;&#x9;r := gin.New()&#xA;&#xA;&#x9;// use ginSwagger middleware to serve the API docs&#xA;&#x9;r.GET(&#34;/swagger/*any&#34;, ginSwagger.WrapHandler(swaggerFiles.Handler))&#xA;&#xA;&#x9;r.Run()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Add &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#api-operation&#34;&gt;API Operation&lt;/a&gt; annotations in &lt;code&gt;controller&lt;/code&gt; code&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package controller&#xA;&#xA;import (&#xA;    &#34;fmt&#34;&#xA;    &#34;net/http&#34;&#xA;    &#34;strconv&#34;&#xA;&#xA;    &#34;github.com/gin-gonic/gin&#34;&#xA;    &#34;github.com/swaggo/swag/example/celler/httputil&#34;&#xA;    &#34;github.com/swaggo/swag/example/celler/model&#34;&#xA;)&#xA;&#xA;// ShowAccount godoc&#xA;// @Summary      Show an account&#xA;// @Description  get string by ID&#xA;// @Tags         accounts&#xA;// @Accept       json&#xA;// @Produce      json&#xA;// @Param        id   path      int  true  &#34;Account ID&#34;&#xA;// @Success      200  {object}  model.Account&#xA;// @Failure      400  {object}  httputil.HTTPError&#xA;// @Failure      404  {object}  httputil.HTTPError&#xA;// @Failure      500  {object}  httputil.HTTPError&#xA;// @Router       /accounts/{id} [get]&#xA;func (c *Controller) ShowAccount(ctx *gin.Context) {&#xA;  id := ctx.Param(&#34;id&#34;)&#xA;  aid, err := strconv.Atoi(id)&#xA;  if err != nil {&#xA;    httputil.NewError(ctx, http.StatusBadRequest, err)&#xA;    return&#xA;  }&#xA;  account, err := model.AccountOne(aid)&#xA;  if err != nil {&#xA;    httputil.NewError(ctx, http.StatusNotFound, err)&#xA;    return&#xA;  }&#xA;  ctx.JSON(http.StatusOK, account)&#xA;}&#xA;&#xA;// ListAccounts godoc&#xA;// @Summary      List accounts&#xA;// @Description  get accounts&#xA;// @Tags         accounts&#xA;// @Accept       json&#xA;// @Produce      json&#xA;// @Param        q    query     string  false  &#34;name search by q&#34;  Format(email)&#xA;// @Success      200  {array}   model.Account&#xA;// @Failure      400  {object}  httputil.HTTPError&#xA;// @Failure      404  {object}  httputil.HTTPError&#xA;// @Failure      500  {object}  httputil.HTTPError&#xA;// @Router       /accounts [get]&#xA;func (c *Controller) ListAccounts(ctx *gin.Context) {&#xA;  q := ctx.Request.URL.Query().Get(&#34;q&#34;)&#xA;  accounts, err := model.AccountsAll(q)&#xA;  if err != nil {&#xA;    httputil.NewError(ctx, http.StatusNotFound, err)&#xA;    return&#xA;  }&#xA;  ctx.JSON(http.StatusOK, accounts)&#xA;}&#xA;//...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ swag init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Run your app, and browse to &lt;a href=&#34;http://localhost:8080/swagger/index.html&#34;&gt;http://localhost:8080/swagger/index.html&lt;/a&gt;. You will see Swagger 2.0 Api documents as shown below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/swaggo/swag/master/assets/swagger-image.png&#34; alt=&#34;swagger_index.html&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;The swag formatter&lt;/h2&gt; &#xA;&lt;p&gt;The Swag Comments can be automatically formatted, just like &#39;go fmt&#39;. Find the result of formatting &lt;a href=&#34;https://github.com/swaggo/swag/tree/master/example/celler&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;swag fmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exclude folder：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;swag fmt -d ./ --exclude ./internal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Implementation Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swagger.io/docs/specification/2-0/basic-structure/&#34;&gt;Swagger 2.0 document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Basic Structure&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; API Host and Base Path&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Paths and Operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Describing Parameters&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Describing Request Body&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Describing Responses&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MIME Types&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Authentication &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Basic Authentication&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; API Keys&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Adding Examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File Upload&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Enums&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Grouping Operations With Tags&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Swagger Extensions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Declarative Comments Format&lt;/h1&gt; &#xA;&lt;h2&gt;General API Info&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; &lt;a href=&#34;https://github.com/swaggo/swag/raw/master/example/celler/main.go&#34;&gt;celler/main.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;annotation&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;   &lt;th&gt;example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;title&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Required.&lt;/strong&gt; The title of the application.&lt;/td&gt; &#xA;   &lt;td&gt;// @title Swagger Example API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;version&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Required.&lt;/strong&gt; Provides the version of the application API.&lt;/td&gt; &#xA;   &lt;td&gt;// @version 1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;description&lt;/td&gt; &#xA;   &lt;td&gt;A short description of the application.&lt;/td&gt; &#xA;   &lt;td&gt;// @description This is a sample server celler server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tag.name&lt;/td&gt; &#xA;   &lt;td&gt;Name of a tag.&lt;/td&gt; &#xA;   &lt;td&gt;// @tag.name This is the name of the tag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tag.description&lt;/td&gt; &#xA;   &lt;td&gt;Description of the tag&lt;/td&gt; &#xA;   &lt;td&gt;// @tag.description Cool Description&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tag.docs.url&lt;/td&gt; &#xA;   &lt;td&gt;Url of the external Documentation of the tag&lt;/td&gt; &#xA;   &lt;td&gt;// @tag.docs.url &lt;a href=&#34;https://example.com&#34;&gt;https://example.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tag.docs.description&lt;/td&gt; &#xA;   &lt;td&gt;Description of the external Documentation of the tag&lt;/td&gt; &#xA;   &lt;td&gt;// @tag.docs.description Best example documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;termsOfService&lt;/td&gt; &#xA;   &lt;td&gt;The Terms of Service for the API.&lt;/td&gt; &#xA;   &lt;td&gt;// @termsOfService &lt;a href=&#34;http://swagger.io/terms/&#34;&gt;http://swagger.io/terms/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;contact.name&lt;/td&gt; &#xA;   &lt;td&gt;The contact information for the exposed API.&lt;/td&gt; &#xA;   &lt;td&gt;// @contact.name API Support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;contact.url&lt;/td&gt; &#xA;   &lt;td&gt;The URL pointing to the contact information. MUST be in the format of a URL.&lt;/td&gt; &#xA;   &lt;td&gt;// @contact.url &lt;a href=&#34;http://www.swagger.io/support&#34;&gt;http://www.swagger.io/support&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;contact.email&lt;/td&gt; &#xA;   &lt;td&gt;The email address of the contact person/organization. MUST be in the format of an email address.&lt;/td&gt; &#xA;   &lt;td&gt;// @contact.email &lt;a href=&#34;mailto:support@swagger.io&#34;&gt;support@swagger.io&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;license.name&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Required.&lt;/strong&gt; The license name used for the API.&lt;/td&gt; &#xA;   &lt;td&gt;// @license.name Apache 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;license.url&lt;/td&gt; &#xA;   &lt;td&gt;A URL to the license used for the API. MUST be in the format of a URL.&lt;/td&gt; &#xA;   &lt;td&gt;// @license.url &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;host&lt;/td&gt; &#xA;   &lt;td&gt;The host (name or ip) serving the API.&lt;/td&gt; &#xA;   &lt;td&gt;// @host localhost:8080&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BasePath&lt;/td&gt; &#xA;   &lt;td&gt;The base path on which the API is served.&lt;/td&gt; &#xA;   &lt;td&gt;// @BasePath /api/v1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;accept&lt;/td&gt; &#xA;   &lt;td&gt;A list of MIME types the APIs can consume. Note that Accept only affects operations with a request body, such as POST, PUT and PATCH. Value MUST be as described under &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#mime-types&#34;&gt;Mime Types&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;// @accept json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;produce&lt;/td&gt; &#xA;   &lt;td&gt;A list of MIME types the APIs can produce. Value MUST be as described under &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#mime-types&#34;&gt;Mime Types&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;// @produce json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.collection.format&lt;/td&gt; &#xA;   &lt;td&gt;The default collection(array) param format in query,enums:csv,multi,pipes,tsv,ssv. If not set, csv is the default.&lt;/td&gt; &#xA;   &lt;td&gt;// @query.collection.format multi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;schemes&lt;/td&gt; &#xA;   &lt;td&gt;The transfer protocol for the operation that separated by spaces.&lt;/td&gt; &#xA;   &lt;td&gt;// @schemes http https&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;x-name&lt;/td&gt; &#xA;   &lt;td&gt;The extension key, must be start by x- and take only json value&lt;/td&gt; &#xA;   &lt;td&gt;// @x-example-key {&#34;key&#34;: &#34;value&#34;}&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Using markdown descriptions&lt;/h3&gt; &#xA;&lt;p&gt;When a short string in your documentation is insufficient, or you need images, code examples and things like that you may want to use markdown descriptions. In order to use markdown descriptions use the following annotations.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;annotation&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;   &lt;th&gt;example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;title&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Required.&lt;/strong&gt; The title of the application.&lt;/td&gt; &#xA;   &lt;td&gt;// @title Swagger Example API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;version&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Required.&lt;/strong&gt; Provides the version of the application API.&lt;/td&gt; &#xA;   &lt;td&gt;// @version 1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;description.markdown&lt;/td&gt; &#xA;   &lt;td&gt;A short description of the application. Parsed from the api.md file. This is an alternative to @description&lt;/td&gt; &#xA;   &lt;td&gt;// @description.markdown No value needed, this parses the description from api.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tag.name&lt;/td&gt; &#xA;   &lt;td&gt;Name of a tag.&lt;/td&gt; &#xA;   &lt;td&gt;// @tag.name This is the name of the tag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tag.description.markdown&lt;/td&gt; &#xA;   &lt;td&gt;Description of the tag this is an alternative to tag.description. The description will be read from a file named like tagname.md&lt;/td&gt; &#xA;   &lt;td&gt;// @tag.description.markdown&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;API Operation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; &lt;a href=&#34;https://github.com/swaggo/swag/tree/master/example/celler/controller&#34;&gt;celler/controller&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;annotation&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;description&lt;/td&gt; &#xA;   &lt;td&gt;A verbose explanation of the operation behavior.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;description.markdown&lt;/td&gt; &#xA;   &lt;td&gt;A short description of the application. The description will be read from a file. E.g. &lt;code&gt;@description.markdown details&lt;/code&gt; will load &lt;code&gt;details.md&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;id&lt;/td&gt; &#xA;   &lt;td&gt;A unique string used to identify the operation. Must be unique among all API operations.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tags&lt;/td&gt; &#xA;   &lt;td&gt;A list of tags to each API operation that separated by commas.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;summary&lt;/td&gt; &#xA;   &lt;td&gt;A short summary of what the operation does.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;accept&lt;/td&gt; &#xA;   &lt;td&gt;A list of MIME types the APIs can consume. Note that Accept only affects operations with a request body, such as POST, PUT and PATCH. Value MUST be as described under &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#mime-types&#34;&gt;Mime Types&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;produce&lt;/td&gt; &#xA;   &lt;td&gt;A list of MIME types the APIs can produce. Value MUST be as described under &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#mime-types&#34;&gt;Mime Types&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;param&lt;/td&gt; &#xA;   &lt;td&gt;Parameters that separated by spaces. &lt;code&gt;param name&lt;/code&gt;,&lt;code&gt;param type&lt;/code&gt;,&lt;code&gt;data type&lt;/code&gt;,&lt;code&gt;is mandatory?&lt;/code&gt;,&lt;code&gt;comment&lt;/code&gt; &lt;code&gt;attribute(optional)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;security&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#security&#34;&gt;Security&lt;/a&gt; to each API operation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;success&lt;/td&gt; &#xA;   &lt;td&gt;Success response that separated by spaces. &lt;code&gt;return code or default&lt;/code&gt;,&lt;code&gt;{param type}&lt;/code&gt;,&lt;code&gt;data type&lt;/code&gt;,&lt;code&gt;comment&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;failure&lt;/td&gt; &#xA;   &lt;td&gt;Failure response that separated by spaces. &lt;code&gt;return code or default&lt;/code&gt;,&lt;code&gt;{param type}&lt;/code&gt;,&lt;code&gt;data type&lt;/code&gt;,&lt;code&gt;comment&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;response&lt;/td&gt; &#xA;   &lt;td&gt;As same as &lt;code&gt;success&lt;/code&gt; and &lt;code&gt;failure&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;header&lt;/td&gt; &#xA;   &lt;td&gt;Header in response that separated by spaces. &lt;code&gt;return code&lt;/code&gt;,&lt;code&gt;{param type}&lt;/code&gt;,&lt;code&gt;data type&lt;/code&gt;,&lt;code&gt;comment&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;router&lt;/td&gt; &#xA;   &lt;td&gt;Path definition that separated by spaces. &lt;code&gt;path&lt;/code&gt;,&lt;code&gt;[httpMethod]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;x-name&lt;/td&gt; &#xA;   &lt;td&gt;The extension key, must be start by x- and take only json value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;x-codeSample&lt;/td&gt; &#xA;   &lt;td&gt;Optional Markdown usage. take &lt;code&gt;file&lt;/code&gt; as parameter. This will then search for a file named like the summary in the given folder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;deprecated&lt;/td&gt; &#xA;   &lt;td&gt;Mark endpoint as deprecated.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Mime Types&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;swag&lt;/code&gt; accepts all MIME Types which are in the correct format, that is, match &lt;code&gt;*/*&lt;/code&gt;. Besides that, &lt;code&gt;swag&lt;/code&gt; also accepts aliases for some MIME Types as follows:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Alias&lt;/th&gt; &#xA;   &lt;th&gt;MIME Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;json&lt;/td&gt; &#xA;   &lt;td&gt;application/json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xml&lt;/td&gt; &#xA;   &lt;td&gt;text/xml&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;plain&lt;/td&gt; &#xA;   &lt;td&gt;text/plain&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;html&lt;/td&gt; &#xA;   &lt;td&gt;text/html&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mpfd&lt;/td&gt; &#xA;   &lt;td&gt;multipart/form-data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;x-www-form-urlencoded&lt;/td&gt; &#xA;   &lt;td&gt;application/x-www-form-urlencoded&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;json-api&lt;/td&gt; &#xA;   &lt;td&gt;application/vnd.api+json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;json-stream&lt;/td&gt; &#xA;   &lt;td&gt;application/x-json-stream&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;octet-stream&lt;/td&gt; &#xA;   &lt;td&gt;application/octet-stream&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;png&lt;/td&gt; &#xA;   &lt;td&gt;image/png&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jpeg&lt;/td&gt; &#xA;   &lt;td&gt;image/jpeg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gif&lt;/td&gt; &#xA;   &lt;td&gt;image/gif&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Param Type&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;query&lt;/li&gt; &#xA; &lt;li&gt;path&lt;/li&gt; &#xA; &lt;li&gt;header&lt;/li&gt; &#xA; &lt;li&gt;body&lt;/li&gt; &#xA; &lt;li&gt;formData&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Type&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;string (string)&lt;/li&gt; &#xA; &lt;li&gt;integer (int, uint, uint32, uint64)&lt;/li&gt; &#xA; &lt;li&gt;number (float32)&lt;/li&gt; &#xA; &lt;li&gt;boolean (bool)&lt;/li&gt; &#xA; &lt;li&gt;user defined struct&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;annotation&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;   &lt;th&gt;parameters&lt;/th&gt; &#xA;   &lt;th&gt;example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;securitydefinitions.basic&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://swagger.io/docs/specification/2-0/authentication/basic-authentication/&#34;&gt;Basic&lt;/a&gt; auth.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;// @securityDefinitions.basic BasicAuth&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;securitydefinitions.apikey&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://swagger.io/docs/specification/2-0/authentication/api-keys/&#34;&gt;API key&lt;/a&gt; auth.&lt;/td&gt; &#xA;   &lt;td&gt;in, name, description&lt;/td&gt; &#xA;   &lt;td&gt;// @securityDefinitions.apikey ApiKeyAuth&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;securitydefinitions.oauth2.application&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://swagger.io/docs/specification/authentication/oauth2/&#34;&gt;OAuth2 application&lt;/a&gt; auth.&lt;/td&gt; &#xA;   &lt;td&gt;tokenUrl, scope, description&lt;/td&gt; &#xA;   &lt;td&gt;// @securitydefinitions.oauth2.application OAuth2Application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;securitydefinitions.oauth2.implicit&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://swagger.io/docs/specification/authentication/oauth2/&#34;&gt;OAuth2 implicit&lt;/a&gt; auth.&lt;/td&gt; &#xA;   &lt;td&gt;authorizationUrl, scope, description&lt;/td&gt; &#xA;   &lt;td&gt;// @securitydefinitions.oauth2.implicit OAuth2Implicit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;securitydefinitions.oauth2.password&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://swagger.io/docs/specification/authentication/oauth2/&#34;&gt;OAuth2 password&lt;/a&gt; auth.&lt;/td&gt; &#xA;   &lt;td&gt;tokenUrl, scope, description&lt;/td&gt; &#xA;   &lt;td&gt;// @securitydefinitions.oauth2.password OAuth2Password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;securitydefinitions.oauth2.accessCode&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://swagger.io/docs/specification/authentication/oauth2/&#34;&gt;OAuth2 access code&lt;/a&gt; auth.&lt;/td&gt; &#xA;   &lt;td&gt;tokenUrl, authorizationUrl, scope, description&lt;/td&gt; &#xA;   &lt;td&gt;// @securitydefinitions.oauth2.accessCode OAuth2AccessCode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;parameters annotation&lt;/th&gt; &#xA;   &lt;th&gt;example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;in&lt;/td&gt; &#xA;   &lt;td&gt;// @in header&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;name&lt;/td&gt; &#xA;   &lt;td&gt;// @name Authorization&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tokenUrl&lt;/td&gt; &#xA;   &lt;td&gt;// @tokenUrl &lt;a href=&#34;https://example.com/oauth/token&#34;&gt;https://example.com/oauth/token&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;authorizationurl&lt;/td&gt; &#xA;   &lt;td&gt;// @authorizationurl &lt;a href=&#34;https://example.com/oauth/authorize&#34;&gt;https://example.com/oauth/authorize&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scope.hoge&lt;/td&gt; &#xA;   &lt;td&gt;// @scope.write Grants write access&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;description&lt;/td&gt; &#xA;   &lt;td&gt;// @description OAuth protects our entity endpoints&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Attribute&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @Param   enumstring  query     string     false  &#34;string enums&#34;       Enums(A, B, C)&#xA;// @Param   enumint     query     int        false  &#34;int enums&#34;          Enums(1, 2, 3)&#xA;// @Param   enumnumber  query     number     false  &#34;int enums&#34;          Enums(1.1, 1.2, 1.3)&#xA;// @Param   string      query     string     false  &#34;string valid&#34;       minlength(5)  maxlength(10)&#xA;// @Param   int         query     int        false  &#34;int valid&#34;          minimum(1)    maximum(10)&#xA;// @Param   default     query     string     false  &#34;string default&#34;     default(A)&#xA;// @Param   example     query     string     false  &#34;string example&#34;     example(string)&#xA;// @Param   collection  query     []string   false  &#34;string collection&#34;  collectionFormat(multi)&#xA;// @Param   extensions  query     []string   false  &#34;string collection&#34;  extensions(x-example=test,x-nullable)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It also works for the struct fields:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Foo struct {&#xA;    Bar string `minLength:&#34;4&#34; maxLength:&#34;16&#34; example:&#34;random string&#34;`&#xA;    Baz int `minimum:&#34;10&#34; maximum:&#34;20&#34; default:&#34;15&#34;`&#xA;    Qux []string `enums:&#34;foo,bar,baz&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Available&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Field Name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;validate&#34;&gt;&lt;/a&gt;validate&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Determines the validation for the parameter. Possible values are: &lt;code&gt;required&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterDefault&#34;&gt;&lt;/a&gt;default&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;*&lt;/td&gt; &#xA;   &lt;td&gt;Declares the value of the parameter that the server will use if none is provided, for example a &#34;count&#34; to control the number of results per page might default to 100 if not supplied by the client in the request. (Note: &#34;default&#34; has no meaning for required parameters.) See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2&lt;/a&gt;. Unlike JSON Schema this value MUST conform to the defined &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#parameterType&#34;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; for this parameter.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterMaximum&#34;&gt;&lt;/a&gt;maximum&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.2&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.2&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterMinimum&#34;&gt;&lt;/a&gt;minimum&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.3&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.3&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterMultipleOf&#34;&gt;&lt;/a&gt;multipleOf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.1&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.1&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterMaxLength&#34;&gt;&lt;/a&gt;maxLength&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.1&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.1&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterMinLength&#34;&gt;&lt;/a&gt;minLength&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.2&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.2&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterEnums&#34;&gt;&lt;/a&gt;enums&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[*]&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterFormat&#34;&gt;&lt;/a&gt;format&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The extending format for the previously mentioned &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#parameterType&#34;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&#34;https://swagger.io/specification/v2/#dataTypeFormat&#34;&gt;Data Type Formats&lt;/a&gt; for further details.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterCollectionFormat&#34;&gt;&lt;/a&gt;collectionFormat&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Determines the format of the array if type array is used. Possible values are: &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;code&gt;csv&lt;/code&gt; - comma separated values &lt;code&gt;foo,bar&lt;/code&gt;. &lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;ssv&lt;/code&gt; - space separated values &lt;code&gt;foo bar&lt;/code&gt;. &lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;tsv&lt;/code&gt; - tab separated values &lt;code&gt;foo\tbar&lt;/code&gt;. &lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;pipes&lt;/code&gt; - pipe separated values &lt;code&gt;foo|bar&lt;/code&gt;. &lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;multi&lt;/code&gt; - corresponds to multiple parameter instances instead of multiple values for a single instance &lt;code&gt;foo=bar&amp;amp;foo=baz&lt;/code&gt;. This is valid only for parameters &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#parameterIn&#34;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; &#34;query&#34; or &#34;formData&#34;. &lt;/li&gt;&#xA;    &lt;/ul&gt; Default value is &lt;code&gt;csv&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterExample&#34;&gt;&lt;/a&gt;example&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;*&lt;/td&gt; &#xA;   &lt;td&gt;Declares the example for the parameter value&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterExtensions&#34;&gt;&lt;/a&gt;extensions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add extension to parameters.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Future&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Field Name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterPattern&#34;&gt;&lt;/a&gt;pattern&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterMaxItems&#34;&gt;&lt;/a&gt;maxItems&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.2&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.2&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterMinItems&#34;&gt;&lt;/a&gt;minItems&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.3&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.3&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a name=&#34;parameterUniqueItems&#34;&gt;&lt;/a&gt;uniqueItems&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.4&#34;&gt;https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.4&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Descriptions over multiple lines&lt;/h3&gt; &#xA;&lt;p&gt;You can add descriptions spanning multiple lines in either the general api description or routes definitions like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @description This is the first line&#xA;// @description This is the second line&#xA;// @description And so forth.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;User defined structure with an array type&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @Success 200 {array} model.Account &amp;lt;-- This is a user defined struct.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package model&#xA;&#xA;type Account struct {&#xA;    ID   int    `json:&#34;id&#34; example:&#34;1&#34;`&#xA;    Name string `json:&#34;name&#34; example:&#34;account name&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Model composition in response&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// JSONResult&#39;s data field will be overridden by the specific type proto.Order&#xA;@success 200 {object} jsonresult.JSONResult{data=proto.Order} &#34;desc&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type JSONResult struct {&#xA;    Code    int          `json:&#34;code&#34; `&#xA;    Message string       `json:&#34;message&#34;`&#xA;    Data    interface{}  `json:&#34;data&#34;`&#xA;}&#xA;&#xA;type Order struct { //in `proto` package&#xA;    Id  uint            `json:&#34;id&#34;`&#xA;    Data  interface{}   `json:&#34;data&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;also support array of objects and primitive types as nested response&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;@success 200 {object} jsonresult.JSONResult{data=[]proto.Order} &#34;desc&#34;&#xA;@success 200 {object} jsonresult.JSONResult{data=string} &#34;desc&#34;&#xA;@success 200 {object} jsonresult.JSONResult{data=[]string} &#34;desc&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;overriding multiple fields. field will be added if not exists&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;@success 200 {object} jsonresult.JSONResult{data1=string,data2=[]string,data3=proto.Order,data4=[]proto.Order} &#34;desc&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;overriding deep-level fields&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type DeepObject struct { //in `proto` package&#xA;&#x9;...&#xA;}&#xA;@success 200 {object} jsonresult.JSONResult{data1=proto.Order{data=proto.DeepObject},data2=[]proto.Order{data=[]proto.DeepObject}} &#34;desc&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add a headers in response&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @Success      200              {string}  string    &#34;ok&#34;&#xA;// @failure      400              {string}  string    &#34;error&#34;&#xA;// @response     default          {string}  string    &#34;other error&#34;&#xA;// @Header       200              {string}  Location  &#34;/entity/1&#34;&#xA;// @Header       200,400,default  {string}  Token     &#34;token&#34;&#xA;// @Header       all              {string}  Token2    &#34;token2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use multiple path params&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;/// ...&#xA;// @Param group_id   path int true &#34;Group ID&#34;&#xA;// @Param account_id path int true &#34;Account ID&#34;&#xA;// ...&#xA;// @Router /examples/groups/{group_id}/accounts/{account_id} [get]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add multiple paths&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;/// ...&#xA;// @Param group_id path int true &#34;Group ID&#34;&#xA;// @Param user_id  path int true &#34;User ID&#34;&#xA;// ...&#xA;// @Router /examples/groups/{group_id}/user/{user_id}/address [put]&#xA;// @Router /examples/user/{user_id}/address [put]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example value of struct&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Account struct {&#xA;    ID   int    `json:&#34;id&#34; example:&#34;1&#34;`&#xA;    Name string `json:&#34;name&#34; example:&#34;account name&#34;`&#xA;    PhotoUrls []string `json:&#34;photo_urls&#34; example:&#34;http://test/image/1.jpg,http://test/image/2.jpg&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SchemaExample of body&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @Param email body string true &#34;message/rfc822&#34; SchemaExample(Subject: Testmail\r\n\r\nBody Message\r\n)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Description of struct&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Account model info&#xA;// @Description User account information&#xA;// @Description with user id and username&#xA;type Account struct {&#xA;&#x9;// ID this is userid&#xA;&#x9;ID   int    `json:&#34;id&#34;`&#xA;&#x9;Name string `json:&#34;name&#34;` // This is Name&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/swaggo/swag/issues/708&#34;&gt;#708&lt;/a&gt; The parser handles only struct comments starting with &lt;code&gt;@Description&lt;/code&gt; attribute. But it writes all struct field comments as is.&lt;/p&gt; &#xA;&lt;p&gt;So, generated swagger doc as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;Account&#34;: {&#xA;  &#34;type&#34;:&#34;object&#34;,&#xA;  &#34;description&#34;: &#34;User account information with user id and username&#34;&#xA;  &#34;properties&#34;: {&#xA;    &#34;id&#34;: {&#xA;      &#34;type&#34;: &#34;integer&#34;,&#xA;      &#34;description&#34;: &#34;ID this is userid&#34;&#xA;    },&#xA;    &#34;name&#34;: {&#xA;      &#34;type&#34;:&#34;string&#34;,&#xA;      &#34;description&#34;: &#34;This is Name&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use swaggertype tag to supported custom type&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/swaggo/swag/issues/201#issuecomment-475479409&#34;&gt;#201&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type TimestampTime struct {&#xA;    time.Time&#xA;}&#xA;&#xA;///implement encoding.JSON.Marshaler interface&#xA;func (t *TimestampTime) MarshalJSON() ([]byte, error) {&#xA;    bin := make([]byte, 16)&#xA;    bin = strconv.AppendInt(bin[:0], t.Time.Unix(), 10)&#xA;    return bin, nil&#xA;}&#xA;&#xA;func (t *TimestampTime) UnmarshalJSON(bin []byte) error {&#xA;    v, err := strconv.ParseInt(string(bin), 10, 64)&#xA;    if err != nil {&#xA;        return err&#xA;    }&#xA;    t.Time = time.Unix(v, 0)&#xA;    return nil&#xA;}&#xA;///&#xA;&#xA;type Account struct {&#xA;    // Override primitive type by simply specifying it via `swaggertype` tag&#xA;    ID     sql.NullInt64 `json:&#34;id&#34; swaggertype:&#34;integer&#34;`&#xA;&#xA;    // Override struct type to a primitive type &#39;integer&#39; by specifying it via `swaggertype` tag&#xA;    RegisterTime TimestampTime `json:&#34;register_time&#34; swaggertype:&#34;primitive,integer&#34;`&#xA;&#xA;    // Array types can be overridden using &#34;array,&amp;lt;prim_type&amp;gt;&#34; format&#xA;    Coeffs []big.Float `json:&#34;coeffs&#34; swaggertype:&#34;array,number&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/swaggo/swag/issues/379&#34;&gt;#379&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type CerticateKeyPair struct {&#xA;&#x9;Crt []byte `json:&#34;crt&#34; swaggertype:&#34;string&#34; format:&#34;base64&#34; example:&#34;U3dhZ2dlciByb2Nrcw==&#34;`&#xA;&#x9;Key []byte `json:&#34;key&#34; swaggertype:&#34;string&#34; format:&#34;base64&#34; example:&#34;U3dhZ2dlciByb2Nrcw==&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;generated swagger doc as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;&#34;api.MyBinding&#34;: {&#xA;  &#34;type&#34;:&#34;object&#34;,&#xA;  &#34;properties&#34;:{&#xA;    &#34;crt&#34;:{&#xA;      &#34;type&#34;:&#34;string&#34;,&#xA;      &#34;format&#34;:&#34;base64&#34;,&#xA;      &#34;example&#34;:&#34;U3dhZ2dlciByb2Nrcw==&#34;&#xA;    },&#xA;    &#34;key&#34;:{&#xA;      &#34;type&#34;:&#34;string&#34;,&#xA;      &#34;format&#34;:&#34;base64&#34;,&#xA;      &#34;example&#34;:&#34;U3dhZ2dlciByb2Nrcw==&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use global overrides to support a custom type&lt;/h3&gt; &#xA;&lt;p&gt;If you are using generated files, the &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#use-swaggertype-tag-to-supported-custom-type&#34;&gt;&lt;code&gt;swaggertype&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;swaggerignore&lt;/code&gt; tags may not be possible.&lt;/p&gt; &#xA;&lt;p&gt;By passing a mapping to swag with &lt;code&gt;--overridesFile&lt;/code&gt; you can tell swag to use one type in place of another wherever it appears. By default, if a &lt;code&gt;.swaggo&lt;/code&gt; file is present in the current directory it will be used.&lt;/p&gt; &#xA;&lt;p&gt;Go code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type MyStruct struct {&#xA;  ID     sql.NullInt64 `json:&#34;id&#34;`&#xA;  Name   sql.NullString `json:&#34;name&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;.swaggo&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// Replace all NullInt64 with int&#xA;replace database/sql.NullInt64 int&#xA;&#xA;// Don&#39;t include any fields of type database/sql.NullString in the swagger docs&#xA;skip    database/sql.NullString&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Possible directives are comments (beginning with &lt;code&gt;//&lt;/code&gt;), &lt;code&gt;replace path/to/a.type path/to/b.type&lt;/code&gt;, and &lt;code&gt;skip path/to/a.type&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(Note that the full paths to any named types must be provided to prevent problems when multiple packages define a type with the same name)&lt;/p&gt; &#xA;&lt;p&gt;Rendered:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;&#34;types.MyStruct&#34;: {&#xA;  &#34;id&#34;: &#34;integer&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use swaggerignore tag to exclude a field&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Account struct {&#xA;    ID   string    `json:&#34;id&#34;`&#xA;    Name string     `json:&#34;name&#34;`&#xA;    Ignored int     `swaggerignore:&#34;true&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add extension info to struct field&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Account struct {&#xA;    ID   string    `json:&#34;id&#34;   extensions:&#34;x-nullable,x-abc=def,!x-omitempty&#34;` // extensions fields must start with &#34;x-&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;generate swagger doc as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;&#34;Account&#34;: {&#xA;    &#34;type&#34;: &#34;object&#34;,&#xA;    &#34;properties&#34;: {&#xA;        &#34;id&#34;: {&#xA;            &#34;type&#34;: &#34;string&#34;,&#xA;            &#34;x-nullable&#34;: true,&#xA;            &#34;x-abc&#34;: &#34;def&#34;,&#xA;            &#34;x-omitempty&#34;: false&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rename model to display&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;type Resp struct {&#xA;&#x9;Code int&#xA;}//@name Response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to use security annotations&lt;/h3&gt; &#xA;&lt;p&gt;General API info.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @securityDefinitions.basic BasicAuth&#xA;&#xA;// @securitydefinitions.oauth2.application OAuth2Application&#xA;// @tokenUrl https://example.com/oauth/token&#xA;// @scope.write Grants write access&#xA;// @scope.admin Grants read and write access to administrative information&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each API operation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @Security ApiKeyAuth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make it AND condition&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @Security ApiKeyAuth&#xA;// @Security OAuth2Application[write, admin]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make it OR condition&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// @Security ApiKeyAuth || firebase&#xA;// @Security OAuth2Application[write, admin] || APIKeyAuth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add a description for enum items&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Example struct {&#xA;&#x9;// Sort order:&#xA;&#x9;// * asc - Ascending, from A to Z.&#xA;&#x9;// * desc - Descending, from Z to A.&#xA;&#x9;Order string `enums:&#34;asc,desc&#34;`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate only specific docs file types&lt;/h3&gt; &#xA;&lt;p&gt;By default &lt;code&gt;swag&lt;/code&gt; command generates Swagger specification in three different files/file types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;docs.go&lt;/li&gt; &#xA; &lt;li&gt;swagger.json&lt;/li&gt; &#xA; &lt;li&gt;swagger.yaml&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you would like to limit a set of file types which should be generated you can use &lt;code&gt;--outputTypes&lt;/code&gt; (short &lt;code&gt;-ot&lt;/code&gt;) flag. Default value is &lt;code&gt;go,json,yaml&lt;/code&gt; - output types separated with comma. To limit output only to &lt;code&gt;go&lt;/code&gt; and &lt;code&gt;yaml&lt;/code&gt; files, you would write &lt;code&gt;go,yaml&lt;/code&gt;. With complete command that would be &lt;code&gt;swag init --outputTypes go,yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About the Project&lt;/h2&gt; &#xA;&lt;p&gt;This project was inspired by &lt;a href=&#34;https://github.com/yvasiyarov/swagger&#34;&gt;yvasiyarov/swagger&lt;/a&gt; but we simplified the usage and added support a variety of &lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/#supported-web-frameworks&#34;&gt;web frameworks&lt;/a&gt;. Gopher image source is &lt;a href=&#34;https://github.com/tenntenn/gopher-stickers&#34;&gt;tenntenn/gopher-stickers&lt;/a&gt;. It has licenses &lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/deed.en&#34;&gt;creative commons licensing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&#34;https://raw.githubusercontent.com/swaggo/swag/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;]. &lt;a href=&#34;https://github.com/swaggo/swag/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&#34;https://opencollective.com/swag#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/swag#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/swag#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/swag/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/swag/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/swag/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fswaggo%2Fswag?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fswaggo%2Fswag.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubernetes/kubernetes</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/kubernetes/kubernetes</id>
    <link href="https://github.com/kubernetes/kubernetes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Production-Grade Container Scheduling and Management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes (K8s)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/k8s.io/kubernetes&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/k8s.io/kubernetes.svg?sanitize=true&#34; alt=&#34;GoPkg Widget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/569&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/569/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/kubernetes/kubernetes/raw/master/logo/logo.png&#34; width=&#34;100&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Kubernetes, also known as K8s, is an open source system for managing &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&#34;&gt;containerized applications&lt;/a&gt; across multiple hosts. It provides basic mechanisms for deployment, maintenance, and scaling of applications.&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes builds upon a decade and a half of experience at Google running production workloads at scale using a system called &lt;a href=&#34;https://research.google.com/pubs/pub43438.html&#34;&gt;Borg&lt;/a&gt;, combined with best-of-breed ideas and practices from the community.&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes is hosted by the Cloud Native Computing Foundation (&lt;a href=&#34;https://www.cncf.io/about&#34;&gt;CNCF&lt;/a&gt;). If your company wants to help shape the evolution of technologies that are container-packaged, dynamically scheduled, and microservices-oriented, consider joining the CNCF. For details about who&#39;s involved and how Kubernetes plays a role, read the CNCF &lt;a href=&#34;https://cncf.io/news/announcement/2015/07/new-cloud-native-computing-foundation-drive-alignment-among-container&#34;&gt;announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;To start using K8s&lt;/h2&gt; &#xA;&lt;p&gt;See our documentation on &lt;a href=&#34;https://kubernetes.io&#34;&gt;kubernetes.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Try our &lt;a href=&#34;https://kubernetes.io/docs/tutorials/kubernetes-basics&#34;&gt;interactive tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Take a free course on &lt;a href=&#34;https://www.udacity.com/course/scalable-microservices-with-kubernetes--ud615&#34;&gt;Scalable Microservices with Kubernetes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use Kubernetes code as a library in other applications, see the &lt;a href=&#34;https://git.k8s.io/kubernetes/staging/README.md&#34;&gt;list of published components&lt;/a&gt;. Use of the &lt;code&gt;k8s.io/kubernetes&lt;/code&gt; module or &lt;code&gt;k8s.io/kubernetes/...&lt;/code&gt; packages as libraries is not supported.&lt;/p&gt; &#xA;&lt;h2&gt;To start developing K8s&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://git.k8s.io/community&#34;&gt;community repository&lt;/a&gt; hosts all information about building Kubernetes from source, how to contribute code and documentation, who to contact about what, etc.&lt;/p&gt; &#xA;&lt;p&gt;If you want to build Kubernetes right away there are two options:&lt;/p&gt; &#xA;&lt;h5&gt;You have a working &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go environment&lt;/a&gt;.&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p $GOPATH/src/k8s.io&#xA;cd $GOPATH/src/k8s.io&#xA;git clone https://github.com/kubernetes/kubernetes&#xA;cd kubernetes&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;You have a working &lt;a href=&#34;https://docs.docker.com/engine&#34;&gt;Docker environment&lt;/a&gt;.&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/kubernetes/kubernetes&#xA;cd kubernetes&#xA;make quick-release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the full story, head over to the &lt;a href=&#34;https://git.k8s.io/community/contributors/devel#readme&#34;&gt;developer&#39;s documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you need support, start with the &lt;a href=&#34;https://kubernetes.io/docs/tasks/debug/&#34;&gt;troubleshooting guide&lt;/a&gt;, and work your way through the process that we&#39;ve outlined.&lt;/p&gt; &#xA;&lt;p&gt;That said, if you have questions, reach out to us &lt;a href=&#34;https://git.k8s.io/community/communication&#34;&gt;one way or another&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community Meetings&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.kubernetes.dev/resources/calendar/&#34;&gt;Calendar&lt;/a&gt; has the list of all the meetings in Kubernetes community in a single location.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://kubernetes.io/case-studies/&#34;&gt;User Case Studies&lt;/a&gt; website has real-world use cases of organizations across industries that are deploying/migrating to Kubernetes.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;Kubernetes project is governed by a framework of principles, values, policies and processes to help our community and constituents towards our shared goals.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/governance.md&#34;&gt;Kubernetes Community&lt;/a&gt; is the launching point for learning about how we organize ourselves.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/steering&#34;&gt;Kubernetes Steering community repo&lt;/a&gt; is used by the Kubernetes Steering Committee, which oversees governance of the Kubernetes project.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/kubernetes/enhancements&#34;&gt;Kubernetes Enhancements repo&lt;/a&gt; provides information about Kubernetes releases, as well as feature tracking and backlogs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>panjf2000/ants</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/panjf2000/ants</id>
    <link href="https://github.com/panjf2000/ants" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐜🐜🐜 ants is a high-performance and low-cost goroutine pool in Go, inspired by fasthttp./ ants 是一个高性能且低损耗的 goroutine 池。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/logos/master/ants/logo.png&#34;&gt; &lt;b&gt;A goroutine pool for Go&lt;/b&gt; &lt;br&gt;&lt;br&gt; &lt;a title=&#34;Build Status&#34; target=&#34;_blank&#34; href=&#34;https://github.com/panjf2000/ants/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/panjf2000/ants/Tests?style=flat-square&amp;amp;logo=github-actions&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Codecov&#34; target=&#34;_blank&#34; href=&#34;https://codecov.io/gh/panjf2000/ants&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/panjf2000/ants?style=flat-square&amp;amp;logo=codecov&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Release&#34; target=&#34;_blank&#34; href=&#34;https://github.com/panjf2000/ants/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/panjf2000/ants.svg?color=161823&amp;amp;style=flat-square&amp;amp;logo=smartthings&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Tag&#34; target=&#34;_blank&#34; href=&#34;https://github.com/panjf2000/ants/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/panjf2000/ants?color=%23ff8936&amp;amp;logo=fitbit&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a title=&#34;Chat Room&#34; target=&#34;_blank&#34; href=&#34;https://gitter.im/ants-pool/ants?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=body_badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/ants-pool/ants.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Go Report Card&#34; target=&#34;_blank&#34; href=&#34;https://goreportcard.com/report/github.com/panjf2000/ants&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/panjf2000/ants?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Doc for ants&#34; target=&#34;_blank&#34; href=&#34;https://pkg.go.dev/github.com/panjf2000/ants/v2?tab=doc&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/go.dev-doc-007d9c?style=flat-square&amp;amp;logo=read-the-docs&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Mentioned in Awesome Go&#34; target=&#34;_blank&#34; href=&#34;https://github.com/avelino/awesome-go#goroutines&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge-flat.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/panjf2000/ants/master/README_ZH.md&#34;&gt;🇨🇳中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📖 Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Library &lt;code&gt;ants&lt;/code&gt; implements a goroutine pool with fixed capacity, managing and recycling a massive number of goroutines, allowing developers to limit the number of goroutines in your concurrent programs.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Managing and recycling a massive number of goroutines automatically&lt;/li&gt; &#xA; &lt;li&gt;Purging overdue goroutines periodically&lt;/li&gt; &#xA; &lt;li&gt;Abundant APIs: submitting tasks, getting the number of running goroutines, tuning capacity of pool dynamically, releasing pool, rebooting pool&lt;/li&gt; &#xA; &lt;li&gt;Handle panic gracefully to prevent programs from crash&lt;/li&gt; &#xA; &lt;li&gt;Efficient&amp;nbsp;in&amp;nbsp;memory&amp;nbsp;usage and it even achieves&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/panjf2000/ants/master/#-performance-summary&#34;&gt;higher performance&lt;/a&gt;&amp;nbsp;than unlimited goroutines in Golang&lt;/li&gt; &#xA; &lt;li&gt;Nonblocking mechanism&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚔️ Tested in the following Golang releases:&lt;/h2&gt; &#xA;&lt;p&gt;All releases from &lt;strong&gt;Go1.8.x&lt;/strong&gt; to &lt;strong&gt;Go1.16.x&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;💡 How &lt;code&gt;ants&lt;/code&gt; works&lt;/h2&gt; &#xA;&lt;h3&gt;Flow Diagram&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1011&#34; alt=&#34;ants-flowchart-en&#34; src=&#34;https://user-images.githubusercontent.com/7496278/66396509-7b42e700-ea0c-11e9-8612-b71a4b734683.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Activity Diagrams&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ants-pool-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ants-pool-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ants-pool-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ants-pool-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧰 How to install&lt;/h2&gt; &#xA;&lt;h3&gt;For &lt;code&gt;ants&lt;/code&gt; v1&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;go get -u github.com/panjf2000/ants&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For &lt;code&gt;ants&lt;/code&gt; v2 (with GO111MODULE=on)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;go get -u github.com/panjf2000/ants/v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🛠 How to use&lt;/h2&gt; &#xA;&lt;p&gt;Just take a imagination that your program starts a massive number of goroutines, resulting in a huge consumption of memory. To mitigate that kind of situation, all you need to do is to import &lt;code&gt;ants&lt;/code&gt; package and submit all your tasks to a default pool with fixed capacity, activated when package &lt;code&gt;ants&lt;/code&gt; is imported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;sync&#34;&#xA;&#x9;&#34;sync/atomic&#34;&#xA;&#x9;&#34;time&#34;&#xA;&#xA;&#x9;&#34;github.com/panjf2000/ants/v2&#34;&#xA;)&#xA;&#xA;var sum int32&#xA;&#xA;func myFunc(i interface{}) {&#xA;&#x9;n := i.(int32)&#xA;&#x9;atomic.AddInt32(&amp;amp;sum, n)&#xA;&#x9;fmt.Printf(&#34;run with %d\n&#34;, n)&#xA;}&#xA;&#xA;func demoFunc() {&#xA;&#x9;time.Sleep(10 * time.Millisecond)&#xA;&#x9;fmt.Println(&#34;Hello World!&#34;)&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;defer ants.Release()&#xA;&#xA;&#x9;runTimes := 1000&#xA;&#xA;&#x9;// Use the common pool.&#xA;&#x9;var wg sync.WaitGroup&#xA;&#x9;syncCalculateSum := func() {&#xA;&#x9;&#x9;demoFunc()&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;}&#xA;&#x9;for i := 0; i &amp;lt; runTimes; i++ {&#xA;&#x9;&#x9;wg.Add(1)&#xA;&#x9;&#x9;_ = ants.Submit(syncCalculateSum)&#xA;&#x9;}&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Printf(&#34;running goroutines: %d\n&#34;, ants.Running())&#xA;&#x9;fmt.Printf(&#34;finish all tasks.\n&#34;)&#xA;&#xA;&#x9;// Use the pool with a function,&#xA;&#x9;// set 10 to the capacity of goroutine pool and 1 second for expired duration.&#xA;&#x9;p, _ := ants.NewPoolWithFunc(10, func(i interface{}) {&#xA;&#x9;&#x9;myFunc(i)&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;})&#xA;&#x9;defer p.Release()&#xA;&#x9;// Submit tasks one by one.&#xA;&#x9;for i := 0; i &amp;lt; runTimes; i++ {&#xA;&#x9;&#x9;wg.Add(1)&#xA;&#x9;&#x9;_ = p.Invoke(int32(i))&#xA;&#x9;}&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Printf(&#34;running goroutines: %d\n&#34;, p.Running())&#xA;&#x9;fmt.Printf(&#34;finish all tasks, result is %d\n&#34;, sum)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Functional options for ants pool&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Option represents the optional function.&#xA;type Option func(opts *Options)&#xA;&#xA;// Options contains all options which will be applied when instantiating a ants pool.&#xA;type Options struct {&#xA;&#x9;// ExpiryDuration is a period for the scavenger goroutine to clean up those expired workers,&#xA;&#x9;// the scavenger scans all workers every `ExpiryDuration` and clean up those workers that haven&#39;t been&#xA;&#x9;// used for more than `ExpiryDuration`.&#xA;&#x9;ExpiryDuration time.Duration&#xA;&#xA;&#x9;// PreAlloc indicates whether to make memory pre-allocation when initializing Pool.&#xA;&#x9;PreAlloc bool&#xA;&#xA;&#x9;// Max number of goroutine blocking on pool.Submit.&#xA;&#x9;// 0 (default value) means no such limit.&#xA;&#x9;MaxBlockingTasks int&#xA;&#xA;&#x9;// When Nonblocking is true, Pool.Submit will never be blocked.&#xA;&#x9;// ErrPoolOverload will be returned when Pool.Submit cannot be done at once.&#xA;&#x9;// When Nonblocking is true, MaxBlockingTasks is inoperative.&#xA;&#x9;Nonblocking bool&#xA;&#xA;&#x9;// PanicHandler is used to handle panics from each worker goroutine.&#xA;&#x9;// if nil, panics will be thrown out again from worker goroutines.&#xA;&#x9;PanicHandler func(interface{})&#xA;&#xA;&#x9;// Logger is the customized logger for logging info, if it is not set,&#xA;&#x9;// default standard logger from log package is used.&#xA;&#x9;Logger Logger&#xA;}&#xA;&#xA;// WithOptions accepts the whole options config.&#xA;func WithOptions(options Options) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;*opts = options&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithExpiryDuration sets up the interval time of cleaning up goroutines.&#xA;func WithExpiryDuration(expiryDuration time.Duration) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.ExpiryDuration = expiryDuration&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithPreAlloc indicates whether it should malloc for workers.&#xA;func WithPreAlloc(preAlloc bool) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.PreAlloc = preAlloc&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithMaxBlockingTasks sets up the maximum number of goroutines that are blocked when it reaches the capacity of pool.&#xA;func WithMaxBlockingTasks(maxBlockingTasks int) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.MaxBlockingTasks = maxBlockingTasks&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithNonblocking indicates that pool will return nil when there is no available workers.&#xA;func WithNonblocking(nonblocking bool) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.Nonblocking = nonblocking&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithPanicHandler sets up panic handler.&#xA;func WithPanicHandler(panicHandler func(interface{})) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.PanicHandler = panicHandler&#xA;&#x9;}&#xA;}&#xA;&#xA;// WithLogger sets up a customized logger.&#xA;func WithLogger(logger Logger) Option {&#xA;&#x9;return func(opts *Options) {&#xA;&#x9;&#x9;opts.Logger = logger&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ants.Options&lt;/code&gt;contains all optional configurations of ants pool, which allows you to customize the goroutine pool by invoking option functions to set up each configuration in &lt;code&gt;NewPool&lt;/code&gt;/&lt;code&gt;NewPoolWithFunc&lt;/code&gt;method.&lt;/p&gt; &#xA;&lt;h3&gt;Customize limited pool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ants&lt;/code&gt; also supports customizing the capacity of pool. You can invoke the &lt;code&gt;NewPool&lt;/code&gt; method to instantiate a pool with a given capacity, as following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Set 10000 the size of goroutine pool&#xA;p, _ := ants.NewPool(10000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Submit tasks&lt;/h3&gt; &#xA;&lt;p&gt;Tasks can be submitted by calling &lt;code&gt;ants.Submit(func())&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;ants.Submit(func(){})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tune pool capacity in runtime&lt;/h3&gt; &#xA;&lt;p&gt;You can tune the capacity of &lt;code&gt;ants&lt;/code&gt; pool in runtime with &lt;code&gt;Tune(int)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;pool.Tune(1000) // Tune its capacity to 1000&#xA;pool.Tune(100000) // Tune its capacity to 100000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t worry about the synchronous problems in this case, the method here is thread-safe (or should be called goroutine-safe).&lt;/p&gt; &#xA;&lt;h3&gt;Pre-malloc goroutine queue in pool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ants&lt;/code&gt; allows you to pre-allocate memory of goroutine queue in pool, which may get a performance enhancement under some special certain circumstances such as the scenario that requires a pool with ultra-large capacity, meanwhile each task in goroutine lasts for a long time, in this case, pre-mallocing will reduce a lot of memory allocation in goroutine queue.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// ants will pre-malloc the whole capacity of pool when you invoke this method&#xA;p, _ := ants.NewPool(100000, ants.WithPreAlloc(true))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Release Pool&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;pool.Release()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reboot Pool&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// A pool that has been released can be still used once you invoke the Reboot().&#xA;pool.Reboot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚙️ About sequence&lt;/h2&gt; &#xA;&lt;p&gt;All tasks submitted to &lt;code&gt;ants&lt;/code&gt; pool will not be guaranteed to be addressed in order, because those tasks scatter among a series of concurrent workers, thus those tasks would be executed concurrently.&lt;/p&gt; &#xA;&lt;h2&gt;🧲 Benchmarks&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515466-c7ce9e00-1e4e-11e9-89c4-bd3785b3c667.png&#34;&gt;&#xA;&lt;/div&gt; In this benchmark result, the first and second benchmarks performed test cases with 1M tasks and the rest of benchmarks performed test cases with 10M tasks, both in unlimited goroutines and `ants` pool, and the capacity of this `ants` goroutine-pool was limited to 50K. &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;BenchmarkGoroutine-4 represents the benchmarks with unlimited goroutines in golang.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BenchmarkPoolGroutine-4 represents the benchmarks with a &lt;code&gt;ants&lt;/code&gt; pool.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Benchmarks with Pool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515499-f187c500-1e4e-11e9-80e5-3df8f94fa70f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In above benchmark result, the first and second benchmarks performed test cases with 1M tasks and the rest of benchmarks performed test cases with 10M tasks, both in unlimited goroutines and &lt;code&gt;ants&lt;/code&gt; pool, and the capacity of this &lt;code&gt;ants&lt;/code&gt; goroutine-pool was limited to 50K.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;As you can see, &lt;code&gt;ants&lt;/code&gt; performs 2 times faster than goroutines without pool (10M tasks) and it only consumes&amp;nbsp;half the memory comparing with goroutines without pool. (both in 1M and 10M tasks)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Benchmarks with PoolWithFunc&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515565-1e3bdc80-1e4f-11e9-8a08-452ab91d117e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Throughput (it is suitable for scenarios where tasks are submitted asynchronously without waiting for the final results)&lt;/h3&gt; &#xA;&lt;h4&gt;100K tasks&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515590-36abf700-1e4f-11e9-91e4-7bd3dcb5f4a5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1M tasks&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/51515596-44617c80-1e4f-11e9-89e3-01e19d2979a1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;10M tasks&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/52987732-537c2000-3437-11e9-86a6-177f00d7a1d6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📊 Performance Summary&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7496278/63449727-3ae6d400-c473-11e9-81e3-8b3280d8288a.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In conclusion, &lt;code&gt;ants&lt;/code&gt; performs 2~6 times faster than goroutines without a pool and the memory consumption is&amp;nbsp;reduced&amp;nbsp;by&amp;nbsp;10&amp;nbsp;to&amp;nbsp;20&amp;nbsp;times.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;👏 Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/panjf2000/ants/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; before opening a PR and thank you to all the developers who already made contributions to &lt;code&gt;ants&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/panjf2000/ants/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/ants/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;Source code in &lt;code&gt;ants&lt;/code&gt; is available under the &lt;a href=&#34;https://raw.githubusercontent.com/panjf2000/ants/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Relevant Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://taohuawu.club/high-performance-implementation-of-goroutine-pool&#34;&gt;Goroutine 并发调度模型深度解析之手撸一个高性能 goroutine 池&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/coinmonks/visually-understanding-worker-pool-48a83b7fc1f5&#34;&gt;Visually Understanding Worker Pool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brandur.org/go-worker-pool&#34;&gt;The Case For A Go Worker Pool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twin.sh/articles/39/go-concurrency-goroutines-worker-pools-and-throttling-made-simple&#34;&gt;Go Concurrency - GoRoutines, Worker Pools and Throttling Made Simple&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🖥 Use cases&lt;/h2&gt; &#xA;&lt;h3&gt;business companies&lt;/h3&gt; &#xA;&lt;p&gt;The following companies/organizations use &lt;code&gt;ants&lt;/code&gt; in production.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tencent.com&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/tencent_logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.bytedance.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/ByteDance_Logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://tieba.baidu.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/baidu-tieba-logo.png&#34; width=&#34;300&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.sina.com.cn/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/sina-logo.png&#34; width=&#34;200&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.163.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/netease-logo.png&#34; width=&#34;150&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.tencentmusic.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/tencent-music-logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.futuhk.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/futu-logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.shopify.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/shopify-logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://www.wechat.com/en/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/wechat-logo.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.baidu.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.taohuawu.club/gallery/baidu-mobile.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;open-source software&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/panjf2000/gnet&#34;&gt;gnet&lt;/a&gt;: A high-performance, lightweight, non-blocking, event-driven networking framework written in pure Go.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ehang-io/nps&#34;&gt;nps&lt;/a&gt;: A lightweight, high-performance, powerful intranet penetration proxy server, with a powerful web management terminal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/milvus-io/milvus&#34;&gt;milvus&lt;/a&gt;: An open-source vector database for scalable similarity search and AI applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/j3ssie/osmedeus&#34;&gt;osmedeus&lt;/a&gt;: A Workflow Engine for Offensive Security.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jitsucom/jitsu&#34;&gt;jitsu&lt;/a&gt;: An open-source Segment alternative. Fully-scriptable data ingestion engine for modern data teams. Set-up a real-time data pipeline in minutes, not days.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RH12503/triangula&#34;&gt;triangula&lt;/a&gt;: Generate high-quality triangulated and polygonal art from images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/binance-chain/bsc&#34;&gt;bsc&lt;/a&gt;: A Binance Smart Chain client based on the go-ethereum fork.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaeles-project/jaeles&#34;&gt;jaeles&lt;/a&gt;: The Swiss Army knife for automated Web Application Testing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/incubator-devlake&#34;&gt;devlake&lt;/a&gt;: The open-source dev data platform &amp;amp; dashboard for your DevOps tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;All use cases:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/panjf2000/ants/network/dependents?package_id=UGFja2FnZS0yMjY2ODgxMjg2&#34;&gt;Repositories that depend on ants/v2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/panjf2000/ants/network/dependents?package_id=UGFja2FnZS0yMjY0ODMzNjEw&#34;&gt;Repositories that depend on ants/v1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have &lt;code&gt;ants&lt;/code&gt; integrated into projects, feel free to open a pull request refreshing this list of use cases.&lt;/p&gt; &#xA;&lt;h2&gt;🔋 JetBrains OS licenses&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ants&lt;/code&gt; had been being developed with GoLand under the &lt;strong&gt;free JetBrains Open Source license(s)&lt;/strong&gt; granted by JetBrains s.r.o., hence I would like to express my thanks here.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=ants&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/jetbrains/jetbrains-variant-4.png&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💰 Backers&lt;/h2&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ants#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ants/backers.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💎 Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Become a bronze sponsor with a monthly donation of $10 and get your logo on our README on Github.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ants#sponsors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ants/sponsors.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;☕️ Buy me a coffee&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please be sure to leave your name, GitHub account or other social media accounts when you donate by the following means so that I can add it to the list of donors as a token of my appreciation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/WeChatPay.JPG&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/AliPay.JPG&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://www.paypal.me/R136a1X&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/PayPal.JPG&#34; width=&#34;250&#34; align=&#34;middle&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;💵 Patrons&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/patrick-othmer&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/8964313&#34; width=&#34;100&#34; alt=&#34;Patrick Othmer&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/panjf2000/gnet&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/50285334&#34; width=&#34;100&#34; alt=&#34;Jimmy&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/cafra&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/13758306&#34; width=&#34;100&#34; alt=&#34;ChenZhen&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/yangwenmai&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1710912&#34; width=&#34;100&#34; alt=&#34;Mai Yang&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/BeijingWks&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/33656339&#34; width=&#34;100&#34; alt=&#34;王开帅&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/refs&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/6905948&#34; width=&#34;100&#34; alt=&#34;Unger Alejandro&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/Wuvist&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/657796&#34; width=&#34;100&#34; alt=&#34;Weng Wei&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔋 Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt; &lt;img src=&#34;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/PoweredByDO/DO_Powered_by_Badge_blue.svg?sanitize=true&#34; width=&#34;201px&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>smartcontractkit/chainlink</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/smartcontractkit/chainlink</id>
    <link href="https://github.com/smartcontractkit/chainlink" rel="alternate"></link>
    <summary type="html">&lt;p&gt;node of the decentralized oracle network, bridging on and off-chain computation&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://chain.link&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/logo-chainlink-blue.svg?sanitize=true&#34; width=&#34;225&#34; alt=&#34;Chainlink logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/smartcontract/chainlink/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/smartcontractkit/chainlink?style=flat-square&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/smartcontractkit/chainlink?style=flat-square&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/actions?query=workflow%3AChangelog&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/smartcontractkit/chainlink/Changelog?style=flat-square&amp;amp;label=github-actions&#34; alt=&#34;GitHub workflow changelog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/smartcontractkit/chainlink/tree/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/build/github/smartcontractkit/chainlink/master?style=flat-square&amp;amp;label=circleci&amp;amp;logo=circleci&#34; alt=&#34;CircleCI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors-anon/smartcontractkit/chainlink?style=flat-square&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/y/smartcontractkit/chainlink?style=flat-square&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.chain.link/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=docs&amp;amp;message=latest&amp;amp;color=blue&#34; alt=&#34;Official documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chain.link/&#34;&gt;Chainlink&lt;/a&gt; expands the capabilities of smart contracts by enabling access to real-world data and off-chain computation while maintaining the security and reliability guarantees inherent to blockchain technology.&lt;/p&gt; &#xA;&lt;p&gt;This repo contains the Chainlink core node, operator UI and contracts. The core node is the bundled binary available to be run by node operators participating in a &lt;a href=&#34;https://link.smartcontract.com/whitepaper&#34;&gt;decentralized oracle network&lt;/a&gt;. All major release versions have pre-built docker images available for download from the &lt;a href=&#34;https://hub.docker.com/r/smartcontract/chainlink/tags&#34;&gt;Chainlink dockerhub&lt;/a&gt;. If you are interested in contributing please see our &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;. If you are here to report a bug or request a feature, please &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/issues&#34;&gt;check currently open Issues&lt;/a&gt;. For more information about how to get started with Chainlink, check our &lt;a href=&#34;https://docs.chain.link/&#34;&gt;official documentation&lt;/a&gt;. Resources for Solidity developers can be found in the &lt;a href=&#34;https://github.com/smartcontractkit/hardhat-starter-kit&#34;&gt;Chainlink Hardhat Box&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Chainlink has an active and ever growing community. &lt;a href=&#34;https://discordapp.com/invite/aSK4zew&#34;&gt;Discord&lt;/a&gt; is the primary communication channel used for day to day communication, answering development questions, and aggregating Chainlink related content. Take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/COMMUNITY.md&#34;&gt;community docs&lt;/a&gt; for more information regarding Chainlink social accounts, news, and networking.&lt;/p&gt; &#xA;&lt;h2&gt;Build Chainlink&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Install Go 1.18&lt;/a&gt;, and add your GOPATH&#39;s &lt;a href=&#34;https://golang.org/doc/code.html#GOPATH&#34;&gt;bin directory to your PATH&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example Path for macOS &lt;code&gt;export PATH=$GOPATH/bin:$PATH&lt;/code&gt; &amp;amp; &lt;code&gt;export GOPATH=/Users/$USER/go&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://nodejs.org/en/download/package-manager/&#34;&gt;NodeJS&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://yarnpkg.com/lang/en/docs/install/&#34;&gt;Yarn&lt;/a&gt;. See the current version in &lt;code&gt;package.json&lt;/code&gt; at the root of this repo under the &lt;code&gt;engines.node&lt;/code&gt; key. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It might be easier long term to use &lt;a href=&#34;https://nodejs.org/en/download/package-manager/#nvm&#34;&gt;nvm&lt;/a&gt; to switch between node versions for different projects. For example, assuming $NODE_VERSION was set to a valid version of NodeJS, you could run: &lt;code&gt;nvm install $NODE_VERSION &amp;amp;&amp;amp; nvm use $NODE_VERSION&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://wiki.postgresql.org/wiki/Detailed_installation_guides&#34;&gt;Postgres (&amp;gt;= 11.x)&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You should &lt;a href=&#34;https://www.postgresql.org/docs/12/ssl-tcp.html&#34;&gt;configure Postgres&lt;/a&gt; to use SSL connection (or for testing you can set &lt;code&gt;?sslmode=disable&lt;/code&gt; in your Postgres query string).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ensure you have Python 3 installed (this is required by &lt;a href=&#34;https://github.com/crytic/solc-select&#34;&gt;solc-select&lt;/a&gt; which is needed to compile solidity contracts)&lt;/li&gt; &#xA; &lt;li&gt;Download Chainlink: &lt;code&gt;git clone https://github.com/smartcontractkit/chainlink &amp;amp;&amp;amp; cd chainlink&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build and install Chainlink: &lt;code&gt;make install&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you got any errors regarding locked yarn package, try running &lt;code&gt;yarn install&lt;/code&gt; before this step&lt;/li&gt; &#xA;   &lt;li&gt;If &lt;code&gt;yarn install&lt;/code&gt; throws a network connection error, try increasing the network timeout by running &lt;code&gt;yarn install --network-timeout 150000&lt;/code&gt; before this step&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the node: &lt;code&gt;chainlink help&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For the latest information on setting up a development environment, see the &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/wiki/Development-Setup-Guide&#34;&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Mac M1/ARM64 [EXPERIMENTAL]&lt;/h3&gt; &#xA;&lt;p&gt;Chainlink can be experimentally compiled with ARM64 as the target arch. You may run into errors with cosmwasm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# github.com/CosmWasm/wasmvm/api&#xA;ld: warning: ignoring file ../../../.asdf/installs/golang/1.18/packages/pkg/mod/github.com/!cosm!wasm/wasmvm@v0.16.3/api/libwasmvm.dylib, building for macOS-arm64 but attempting to link with file built for macOS-x86_64&#xA;Undefined symbols for architecture arm64:# github.com/CosmWasm/wasmvm/api&#xA;ld: warning: ignoring file ../../../.asdf/installs/golang/1.18/packages/pkg/mod/github.com/!cosm!wasm/wasmvm@v0.16.3/api/libwasmvm.dylib, building for macOS-arm64 but attempting to link with file built for macOS-x86_64&#xA;Undefined symbols for architecture arm64:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, try the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone git@github.com:mandrean/terra-core.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd terra-core; git checkout feat/multiarch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make install; cd ..&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;go work init /path/to/chainlink&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;go work use /path/to/terra-core&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Ethereum Node Requirements&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the Chainlink node you must have access to a running Ethereum node with an open websocket connection. Any Ethereum based network will work once you&#39;ve &lt;a href=&#34;https://github.com/smartcontractkit/chainlink#configure&#34;&gt;configured&lt;/a&gt; the chain ID. Ethereum node versions currently tested and supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openethereum/openethereum&#34;&gt;Parity/Openethereum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/go-ethereum/releases&#34;&gt;Geth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NethermindEth/nethermind&#34;&gt;Nethermind&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We cannot recommend specific version numbers for ethereum nodes since the software is being continually updated, but you should usually try to run the latest version available.&lt;/p&gt; &#xA;&lt;h2&gt;Running a local Chainlink node&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: By default, chainlink will run in TLS mode. For local development you can disable this by setting the following env vars:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CHAINLINK_DEV=true&#xA;CHAINLINK_TLS_PORT=0&#xA;SECURE_COOKIES=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can generate self signed certificates using &lt;code&gt;tools/bin/self-signed-certs&lt;/code&gt; or &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/wiki/Creating-Self-Signed-Certificates&#34;&gt;manually&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To start your Chainlink node, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chainlink node start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default this will start on port 6688. You should be able to access the UI at &lt;a href=&#34;http://localhost:6688/&#34;&gt;http://localhost:6688/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Chainlink provides a remote CLI client as well as a UI. Once your node has started, you can open a new terminal window to use the CLI. You will need to log in to authorize the client first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chainlink admin login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(You can also set &lt;code&gt;ADMIN_CREDENTIALS_FILE=/path/to/credentials/file&lt;/code&gt; in future if you like, to avoid having to login again).&lt;/p&gt; &#xA;&lt;p&gt;Now you can view your current jobs with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chainlink jobs list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To find out more about the Chainlink CLI, you can always run &lt;code&gt;chainlink help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://docs.chain.link/&#34;&gt;doc&lt;/a&gt; pages on &lt;a href=&#34;https://docs.chain.link/docs/jobs/&#34;&gt;Jobs&lt;/a&gt; to learn more about how to create Jobs.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Node configuration is managed by a combination of environment variables and direct setting via API/UI/CLI.&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://docs.chain.link/docs/configuration-variables&#34;&gt;official documentation&lt;/a&gt; for more information on how to configure your node.&lt;/p&gt; &#xA;&lt;h3&gt;External Adapters&lt;/h3&gt; &#xA;&lt;p&gt;External adapters are what make Chainlink easily extensible, providing simple integration of custom computations and specialized APIs. A Chainlink node communicates with external adapters via a simple REST API.&lt;/p&gt; &#xA;&lt;p&gt;For more information on creating and using external adapters, please see our &lt;a href=&#34;https://docs.chain.link/docs/external-adapters&#34;&gt;external adapters page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://yarnpkg.com/lang/en/docs/install&#34;&gt;Install Yarn&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://github.com/fjl/gencodec&#34;&gt;gencodec&lt;/a&gt; and &lt;a href=&#34;https://stedolan.github.io/jq/download/&#34;&gt;jq&lt;/a&gt; to be able to run &lt;code&gt;go generate ./...&lt;/code&gt; and &lt;code&gt;make abigen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install mockery&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;make mockery&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;make&lt;/code&gt; command will install the correct version.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Build contracts:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn&#xA;yarn setup:contracts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Generate and compile static assets:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go generate ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Prepare your development environment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export DATABASE_URL=postgresql://127.0.0.1:5432/chainlink_test?sslmode=disable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Other environment variables should not be set for all tests to pass&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Drop/Create test database and run migrations:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;go run ./core/main.go local db preparetest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do end up modifying the migrations for the database, you will need to rerun&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Run tests:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go test ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;parallel&lt;/code&gt; flag can be used to limit CPU usage, for running tests in the background (&lt;code&gt;-parallel=4&lt;/code&gt;) - the default is &lt;code&gt;GOMAXPROCS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;p&lt;/code&gt; flag can be used to limit the number of &lt;em&gt;packages&lt;/em&gt; tested concurrently, if they are interferring with one another (&lt;code&gt;-p=1&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;-short&lt;/code&gt; flag skips tests which depend on the database, for quickly spot checking simpler tests in around one minute (you may still need a phony env var to pass some validation: &lt;code&gt;DATABASE_URL=_test&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Race Detector&lt;/h4&gt; &#xA;&lt;p&gt;As of Go 1.1, the runtime includes a data race detector, enabled with the &lt;code&gt;-race&lt;/code&gt; flag. This is used in CI via the &lt;code&gt;tools/bin/go_core_race_tests&lt;/code&gt; script. If the action detects a race, the artifact on the summary page will include &lt;code&gt;race.*&lt;/code&gt; files with detailed stack traces.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;It will not issue false positives, so take its warnings seriously.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For local, targeted race detection, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GORACE=&#34;log_path=$PWD/race&#34; go test -race ./core/path/to/pkg -count 10&#xA;GORACE=&#34;log_path=$PWD/race&#34; go test -race ./core/path/to/pkg -count 100 -run TestFooBar/sub_test &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://go.dev/doc/articles/race_detector&#34;&gt;https://go.dev/doc/articles/race_detector&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Fuzz tests&lt;/h4&gt; &#xA;&lt;p&gt;As of Go 1.18, fuzz tests &lt;code&gt;func FuzzXXX(*testing.F)&lt;/code&gt; are included as part of the normal test suite, so existing cases are executed with &lt;code&gt;go test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can run active fuzzing to search for new cases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go test ./pkg/path -run=XXX -fuzz=FuzzTestName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://go.dev/doc/fuzz/&#34;&gt;https://go.dev/doc/fuzz/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Solidity&lt;/h3&gt; &#xA;&lt;p&gt;Inside the &lt;code&gt;contracts/&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run tests:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code Generation&lt;/h3&gt; &#xA;&lt;p&gt;Go generate is used to generate mocks in this project. Mocks are generated with &lt;a href=&#34;https://github.com/vektra/mockery&#34;&gt;mockery&lt;/a&gt; and live in core/internal/mocks.&lt;/p&gt; &#xA;&lt;h3&gt;Nix Flake&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://nixos.wiki/wiki/Flakes&#34;&gt;flake&lt;/a&gt; is provided for use with the &lt;a href=&#34;https://nixos.org/&#34;&gt;Nix package manager&lt;/a&gt;. It defines a declarative, reproducible development environment.&lt;/p&gt; &#xA;&lt;p&gt;To use it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nixos.wiki/wiki/Flakes#Installing_flakes&#34;&gt;Nix has to be installed with flake support&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;nix develop&lt;/code&gt;. You will be put in shell containing all the dependencies. Alternatively, a &lt;code&gt;direnv&lt;/code&gt; integration exists to automatically change the environment when &lt;code&gt;cd&lt;/code&gt;-ing into the folder.&lt;/li&gt; &#xA; &lt;li&gt;Create a local postgres database:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd $PGDATA/&#xA;initdb&#xA;pg_ctl -l $PGDATA/postgres.log -o &#34;--unix_socket_directories=&#39;$PWD&#39;&#34; start&#xA;createdb chainlink_test -h localhost&#xA;createuser --superuser --no-password chainlink -h localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start postgres, &lt;code&gt;pg_ctl -l $PGDATA/postgres.log -o &#34;--unix_socket_directories=&#39;$PWD&#39;&#34; start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now you can run tests or compile code as usual.&lt;/p&gt; &#xA;&lt;h3&gt;Tips&lt;/h3&gt; &#xA;&lt;p&gt;For more tips on how to build and test Chainlink, see our &lt;a href=&#34;https://github.com/smartcontractkit/chainlink/wiki/Development-Tips&#34;&gt;development tips page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Chainlink&#39;s source code is &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/LICENSE&#34;&gt;licensed under the MIT License&lt;/a&gt;, and contributions are welcome.&lt;/p&gt; &#xA;&lt;p&gt;Please check out our &lt;a href=&#34;https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Thank you!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/beats</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/elastic/beats</id>
    <link href="https://github.com/elastic/beats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐠 Beats - Lightweight shippers for Elasticsearch &amp; Logstash&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/job/main/&#34;&gt;&lt;img src=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/job/main/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/elastic/beats&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/elastic/beats&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://houndci.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg?sanitize=true&#34; alt=&#34;Reviewed by Hound&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Beats - The Lightweight Shippers of the Elastic Stack&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.elastic.co/beats&#34;&gt;Beats&lt;/a&gt; are lightweight data shippers, written in Go, that you install on your servers to capture all sorts of operational data (think of logs, metrics, or network packet data). The Beats send the operational data to Elasticsearch, either directly or via Logstash, so it can be visualized with Kibana.&lt;/p&gt; &#xA;&lt;p&gt;By &#34;lightweight&#34;, we mean that Beats have a small installation footprint, use limited system resources, and have no runtime dependencies.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains &lt;a href=&#34;https://github.com/elastic/beats/tree/main/libbeat&#34;&gt;libbeat&lt;/a&gt;, our Go framework for creating Beats, and all the officially supported Beats:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Beat&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/auditbeat&#34;&gt;Auditbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Collect your Linux audit framework data and monitor the integrity of your files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/filebeat&#34;&gt;Filebeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tails and ships log files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/x-pack/functionbeat&#34;&gt;Functionbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Read and ships events from serverless infrastructure.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/heartbeat&#34;&gt;Heartbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ping remote services for availability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/metricbeat&#34;&gt;Metricbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fetches sets of metrics from the operating system and services&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/packetbeat&#34;&gt;Packetbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Monitors the network and applications by sniffing packets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/winlogbeat&#34;&gt;Winlogbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fetches and ships Windows Event logs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/x-pack/osquerybeat&#34;&gt;Osquerybeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs Osquery and manages interraction with it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;In addition to the above Beats, which are officially supported by &lt;a href=&#34;https://elastic.co&#34;&gt;Elastic&lt;/a&gt;, the community has created a set of other Beats that make use of libbeat but live outside of this Github repository. We maintain a list of community Beats &lt;a href=&#34;https://www.elastic.co/guide/en/beats/libbeat/master/community-beats.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for each of the Beats on the &lt;a href=&#34;https://www.elastic.co/guide/&#34;&gt;elastic.co site&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/libbeat/current/index.html&#34;&gt;Beats platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/auditbeat/current/index.html&#34;&gt;Auditbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/filebeat/current/index.html&#34;&gt;Filebeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/functionbeat/current/index.html&#34;&gt;Functionbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/heartbeat/current/index.html&#34;&gt;Heartbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/metricbeat/current/index.html&#34;&gt;Metricbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/packetbeat/current/index.html&#34;&gt;Packetbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/winlogbeat/current/index.html&#34;&gt;Winlogbeat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation and Getting Started information for the Elastic Agent&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for the Elastic Agent on the &lt;a href=&#34;https://www.elastic.co/downloads/elastic-agent&#34;&gt;elastic.co site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;If you need help or hit an issue, please start by opening a topic on our &lt;a href=&#34;https://discuss.elastic.co/c/beats&#34;&gt;discuss forums&lt;/a&gt;. Please note that we reserve GitHub tickets for confirmed bugs and enhancement requests.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;You can download pre-compiled Beats binaries, as well as packages for the supported platforms, from &lt;a href=&#34;https://www.elastic.co/downloads/beats&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love working with you! You can help make the Beats better in many ways: report issues, help us reproduce issues, fix bugs, add functionality, or even create your own Beat.&lt;/p&gt; &#xA;&lt;p&gt;Please start by reading our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/beats/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Building Beats from the Source&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/beats/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for information about setting up your dev environment to build Beats from the source.&lt;/p&gt; &#xA;&lt;h2&gt;Snapshots&lt;/h2&gt; &#xA;&lt;p&gt;For testing purposes, we generate snapshot builds that you can find &lt;a href=&#34;https://artifacts-api.elastic.co/v1/search/8.0-SNAPSHOT/&#34;&gt;here&lt;/a&gt;. Please be aware that these are built on top of main and are not meant for production.&lt;/p&gt; &#xA;&lt;h2&gt;CI&lt;/h2&gt; &#xA;&lt;h3&gt;PR Comments&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to trigger some jobs by putting a comment on a GitHub PR. (This service is only available for users affiliated with Elastic and not for open-source contributors.)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/&#34;&gt;beats&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;jenkins run the tests please&lt;/code&gt; or &lt;code&gt;jenkins run tests&lt;/code&gt; or &lt;code&gt;/test&lt;/code&gt; will kick off a default build.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test macos&lt;/code&gt; will kick off a default build with also the &lt;code&gt;macos&lt;/code&gt; stages.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test &amp;lt;beat-name&amp;gt;&lt;/code&gt; will kick off the default build for the given PR in addition to the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt; build itself.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test &amp;lt;beat-name&amp;gt; for macos&lt;/code&gt; will kick off a default build with also the &lt;code&gt;macos&lt;/code&gt; stage for the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/apm-beats-update/&#34;&gt;apm-beats-update&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/run apm-beats-update&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/packaging/&#34;&gt;apm-beats-packaging&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/package&lt;/code&gt; or &lt;code&gt;/packaging&lt;/code&gt; will kick of a build to generate the packages for beats.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats-tester/&#34;&gt;apm-beats-tester&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/beats-tester&lt;/code&gt; will kick of a build to validate the generated packages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PR Labels&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s possible to configure the build on a GitHub PR by labelling the PR with the below labels&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt; to force the following builds to run the stages for the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;macOS&lt;/code&gt; to force the following builds to run the &lt;code&gt;macos&lt;/code&gt; stages.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>uber/cadence</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/uber/cadence</id>
    <link href="https://github.com/uber/cadence" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cadence is a distributed, scalable, durable, and highly available orchestration engine to execute asynchronous long-running business logic in a scalable and resilient way.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cadence&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://buildkite.com/uberopensource/cadence-server&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/159887afd42000f11126f85237317d4090de97b26c287ebc40.svg?theme=github&amp;amp;branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/uber/cadence&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/uber/cadence/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo contains the source code of the Cadence server and other tooling including CLI, schema tools, bench and canary.&lt;/p&gt; &#xA;&lt;p&gt;You can implement your workflows with one of our client libraries. The &lt;a href=&#34;https://github.com/uber-go/cadence-client&#34;&gt;Go&lt;/a&gt; and &lt;a href=&#34;https://github.com/uber-java/cadence-client&#34;&gt;Java&lt;/a&gt; libraries are officially maintained by the Cadence team, while the &lt;a href=&#34;https://github.com/firdaus/cadence-python&#34;&gt;Python&lt;/a&gt; and &lt;a href=&#34;https://github.com/coinbase/cadence-ruby&#34;&gt;Ruby&lt;/a&gt; client libraries are developed by the community.&lt;/p&gt; &#xA;&lt;p&gt;See Maxim&#39;s talk at &lt;a href=&#34;https://atscaleconference.com/videos/cadence-microservice-architecture-beyond-requestreply&#34;&gt;Data@Scale Conference&lt;/a&gt; for an architectural overview of Cadence.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://cadenceworkflow.io&#34;&gt;cadenceworkflow.io&lt;/a&gt; to learn more about Cadence. Join us in &lt;a href=&#34;https://github.com/uber/cadence-docs&#34;&gt;Cadence Documentation&lt;/a&gt; project. Feel free to raise an Issue or Pull Request there.&lt;/p&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/cadence/discussions&#34;&gt;Github Discussion&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for Q&amp;amp;A, support/help, general discusion, and annoucement&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/cadence-workflow&#34;&gt;StackOverflow&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for Q&amp;amp;A and general discusion&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/cadence/issues&#34;&gt;Github Issues&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for reporting bugs and feature requests&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;Slack&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for contributing/development discussion&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Start the cadence-server&lt;/h3&gt; &#xA;&lt;p&gt;To run Cadence services locally, we highly recommend that you use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docker/README.md&#34;&gt;Cadence service docker&lt;/a&gt; to run the service. You can also follow the &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;instructions&lt;/a&gt; to build and run it.&lt;/p&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://cadenceworkflow.io/docs/operation-guide/&#34;&gt;documentation&lt;/a&gt; site for production/cluster setup.&lt;/p&gt; &#xA;&lt;h3&gt;Run the Samples&lt;/h3&gt; &#xA;&lt;p&gt;Try out the sample recipes for &lt;a href=&#34;https://github.com/uber-common/cadence-samples&#34;&gt;Go&lt;/a&gt; or &lt;a href=&#34;https://github.com/uber/cadence-java-samples&#34;&gt;Java&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Use &lt;a href=&#34;https://cadenceworkflow.io/docs/cli/&#34;&gt;Cadence CLI&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Cadence CLI can be used to operate workflows, tasklist, domain and even the clusters.&lt;/p&gt; &#xA;&lt;p&gt;You can use the following ways to install Cadence CLI:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use brew to install CLI: &lt;code&gt;brew install cadence-workflow&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow the &lt;a href=&#34;https://github.com/uber/cadence/discussions/4457&#34;&gt;instructions&lt;/a&gt; if you need to install older versions of CLI via homebrew. Usually this is only needed when you are running a server of a too old version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use docker image for CLI: &lt;code&gt;docker run --rm ubercadence/cli:&amp;lt;releaseVersion&amp;gt;&lt;/code&gt; or &lt;code&gt;docker run --rm ubercadence/cli:master &lt;/code&gt; . Be sure to update your image when you want to try new features: &lt;code&gt;docker pull ubercadence/cli:master &lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build the CLI binary yourself, check out the repo and run &lt;code&gt;make cadence&lt;/code&gt; to build all tools. See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for prerequisite of make command.&lt;/li&gt; &#xA; &lt;li&gt;Build the CLI image yourself, see &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docker/README.md#diy-building-an-image-for-any-tag-or-branch&#34;&gt;instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cadence CLI is a powerful tool. The commands are organized by &lt;strong&gt;tabs&lt;/strong&gt;. E.g. &lt;code&gt;workflow&lt;/code&gt;-&amp;gt;&lt;code&gt;batch&lt;/code&gt;-&amp;gt;&lt;code&gt;start&lt;/code&gt;, or &lt;code&gt;admin&lt;/code&gt;-&amp;gt;&lt;code&gt;workflow&lt;/code&gt;-&amp;gt;&lt;code&gt;describe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://cadenceworkflow.io/docs/cli/#documentation&#34;&gt;documentation&lt;/a&gt; and always try out &lt;code&gt;--help&lt;/code&gt; on any tab to learn &amp;amp; explore.&lt;/p&gt; &#xA;&lt;h3&gt;Use Cadence Web&lt;/h3&gt; &#xA;&lt;p&gt;Try out &lt;a href=&#34;https://github.com/uber/cadence-web&#34;&gt;Cadence Web UI&lt;/a&gt; to view your workflows on Cadence. (This is already available at localhost:8088 if you run Cadence with docker compose)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love your help in making Cadence great. Please review our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to propose a new feature, first join the &lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;Slack channel&lt;/a&gt; to start a discussion and check if there are existing design discussions. Also peruse our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docs/design/index.md&#34;&gt;design docs&lt;/a&gt; in case a feature has been designed but not yet implemented. Once you&#39;re sure the proposal is not covered elsewhere, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/PROPOSALS.md&#34;&gt;proposal instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other binaries in this repo&lt;/h2&gt; &#xA;&lt;h4&gt;Bench/stress test workflow tools&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/bench/README.md&#34;&gt;bench documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Periodical feature health check workflow tools(aka Canary)&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/canary/README.md&#34;&gt;canary documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Schema tools for SQL and Cassandra&lt;/h4&gt; &#xA;&lt;p&gt;The tools are for &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docs/persistence.md&#34;&gt;manual setup or upgrading database schema&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If server runs with Cassandra, Use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/tools/cassandra/README.md&#34;&gt;Cadence Cassandra tool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If server runs with SQL database, Use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/tools/sql/README.md&#34;&gt;Cadence SQL tool&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The easiest way to get the schema tool is via homebrew.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install cadence-workflow&lt;/code&gt; also includes &lt;code&gt;cadence-sql-tool&lt;/code&gt; and &lt;code&gt;cadence-cassandra-tool&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The schema files are located at &lt;code&gt;/usr/local/etc/cadence/schema/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To upgrade, make sure you remove the old ElasticSearch schema first: &lt;code&gt;mv /usr/local/etc/cadence/schema/elasticsearch /usr/local/etc/cadence/schema/elasticsearch.old &amp;amp;&amp;amp; brew upgrade cadence-workflow&lt;/code&gt;. Otherwise ElasticSearch schemas may not be able to get updated.&lt;/li&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://github.com/uber/cadence/discussions/4457&#34;&gt;instructions&lt;/a&gt; if you need to install older versions of schema tools via homebrew. However, easier way is to use new versions of schema tools with old versions of schemas. All you need is to check out the older version of schemas from this repo. Run &lt;code&gt;git checkout v0.21.3&lt;/code&gt; to get the v0.21.3 schemas in &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/schema&#34;&gt;the schema folder&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License, please see &lt;a href=&#34;https://github.com/uber/cadence/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cilium/cilium</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/cilium/cilium</id>
    <link href="https://github.com/cilium/cilium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;eBPF-based Networking, Security, and Observability&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://cdn.jsdelivr.net/gh/cilium/cilium@master/Documentation/images/logo.png&#34; width=&#34;350&#34; alt=&#34;Cilium Logo&#34;&gt; &#xA; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/cilium/cilium@master/Documentation/images/logo-dark.png&#34; width=&#34;350&#34; alt=&#34;Cilium Logo&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;|cii| |go-report| |clomonitor| |artifacthub| |slack| |go-doc| |rtd| |apache| |bsd| |gpl|&lt;/p&gt; &#xA;&lt;p&gt;Cilium is open source software for providing and transparently securing network connectivity and loadbalancing between application workloads such as application containers or processes. Cilium operates at Layer 3/4 to provide traditional networking and security services as well as Layer 7 to protect and secure use of modern application protocols such as HTTP, gRPC and Kafka. Cilium is integrated into common orchestration frameworks such as Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;A new Linux kernel technology called eBPF_ is at the foundation of Cilium. It supports dynamic insertion of eBPF bytecode into the Linux kernel at various integration points such as: network IO, application sockets, and tracepoints to implement security, networking and visibility logic. eBPF is highly efficient and flexible. To learn more about eBPF, visit &lt;code&gt;eBPF.io&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://cdn.jsdelivr.net/gh/cilium/cilium@master/Documentation/images/cilium_overview.png&#34;&gt;https://cdn.jsdelivr.net/gh/cilium/cilium@master/Documentation/images/cilium_overview.png&lt;/a&gt; :align: center&lt;/p&gt; &#xA;&lt;h1&gt;Stable Releases&lt;/h1&gt; &#xA;&lt;p&gt;The Cilium community maintains minor stable releases for the last three major Cilium versions. Older Cilium stable versions from major releases prior to that are considered EOL.&lt;/p&gt; &#xA;&lt;p&gt;For upgrades to new major releases please consult the &lt;code&gt;Cilium Upgrade Guide &amp;lt;https://docs.cilium.io/en/stable/operations/upgrade/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;Listed below are the actively maintained release branches along with their latest minor release, corresponding image pull tags and their release notes:&lt;/p&gt; &#xA;&lt;p&gt;+---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+--------------------------------------------------------------------------------+ | &lt;code&gt;v1.11 &amp;lt;https://github.com/cilium/cilium/tree/v1.11&amp;gt;&lt;/code&gt;__ | 2022-05-10 | &lt;code&gt;quay.io/cilium/cilium:v1.11.5&lt;/code&gt; | &lt;code&gt;Release Notes &amp;lt;https://github.com/cilium/cilium/releases/tag/v1.11.5&amp;gt;&lt;/code&gt;__ | &lt;code&gt;General Announcement &amp;lt;https://isovalent.com/blog/post/2021-12-release-111&amp;gt;&lt;/code&gt;__ | +---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+--------------------------------------------------------------------------------+ | &lt;code&gt;v1.10 &amp;lt;https://github.com/cilium/cilium/tree/v1.10&amp;gt;&lt;/code&gt;__ | 2022-05-10 | &lt;code&gt;quay.io/cilium/cilium:v1.10.11&lt;/code&gt; | &lt;code&gt;Release Notes &amp;lt;https://github.com/cilium/cilium/releases/tag/v1.10.11&amp;gt;&lt;/code&gt;__ | &lt;code&gt;General Announcement &amp;lt;https://cilium.io/blog/2021/05/20/cilium-110&amp;gt;&lt;/code&gt;__ | +---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+--------------------------------------------------------------------------------+ | &lt;code&gt;v1.9 &amp;lt;https://github.com/cilium/cilium/tree/v1.9&amp;gt;&lt;/code&gt;__ | 2022-05-10 | &lt;code&gt;quay.io/cilium/cilium:v1.9.16&lt;/code&gt; | &lt;code&gt;Release Notes &amp;lt;https://github.com/cilium/cilium/releases/tag/v1.9.16&amp;gt;&lt;/code&gt;__ | &lt;code&gt;General Announcement &amp;lt;https://cilium.io/blog/2020/11/10/cilium-19&amp;gt;&lt;/code&gt;__ | +---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+--------------------------------------------------------------------------------+&lt;/p&gt; &#xA;&lt;h1&gt;Functionality Overview&lt;/h1&gt; &#xA;&lt;p&gt;.. begin-functionality-overview&lt;/p&gt; &#xA;&lt;h2&gt;Protect and secure APIs transparently&lt;/h2&gt; &#xA;&lt;p&gt;Ability to secure modern application protocols such as REST/HTTP, gRPC and Kafka. Traditional firewalls operates at Layer 3 and 4. A protocol running on a particular port is either completely trusted or blocked entirely. Cilium provides the ability to filter on individual application protocol requests such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allow all HTTP requests with method &lt;code&gt;GET&lt;/code&gt; and path &lt;code&gt;/public/.*&lt;/code&gt;. Deny all other requests.&lt;/li&gt; &#xA; &lt;li&gt;Allow &lt;code&gt;service1&lt;/code&gt; to produce on Kafka topic &lt;code&gt;topic1&lt;/code&gt; and &lt;code&gt;service2&lt;/code&gt; to consume on &lt;code&gt;topic1&lt;/code&gt;. Reject all other Kafka messages.&lt;/li&gt; &#xA; &lt;li&gt;Require the HTTP header &lt;code&gt;X-Token: [0-9]+&lt;/code&gt; to be present in all REST calls.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the section &lt;code&gt;Layer 7 Policy&lt;/code&gt;_ in our documentation for the latest list of supported protocols and examples on how to use it.&lt;/p&gt; &#xA;&lt;h2&gt;Secure service to service communication based on identities&lt;/h2&gt; &#xA;&lt;p&gt;Modern distributed applications rely on technologies such as application containers to facilitate agility in deployment and scale out on demand. This results in a large number of application containers to be started in a short period of time. Typical container firewalls secure workloads by filtering on source IP addresses and destination ports. This concept requires the firewalls on all servers to be manipulated whenever a container is started anywhere in the cluster.&lt;/p&gt; &#xA;&lt;p&gt;In order to avoid this situation which limits scale, Cilium assigns a security identity to groups of application containers which share identical security policies. The identity is then associated with all network packets emitted by the application containers, allowing to validate the identity at the receiving node. Security identity management is performed using a key-value store.&lt;/p&gt; &#xA;&lt;h2&gt;Secure access to and from external services&lt;/h2&gt; &#xA;&lt;p&gt;Label based security is the tool of choice for cluster internal access control. In order to secure access to and from external services, traditional CIDR based security policies for both ingress and egress are supported. This allows to limit access to and from application containers to particular IP ranges.&lt;/p&gt; &#xA;&lt;h2&gt;Simple Networking&lt;/h2&gt; &#xA;&lt;p&gt;A simple flat Layer 3 network with the ability to span multiple clusters connects all application containers. IP allocation is kept simple by using host scope allocators. This means that each host can allocate IPs without any coordination between hosts.&lt;/p&gt; &#xA;&lt;p&gt;The following multi node networking models are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Overlay:&lt;/strong&gt; Encapsulation-based virtual network spanning all hosts. Currently VXLAN and Geneve are baked in but all encapsulation formats supported by Linux can be enabled.&lt;/p&gt; &lt;p&gt;When to use this mode: This mode has minimal infrastructure and integration requirements. It works on almost any network infrastructure as the only requirement is IP connectivity between hosts which is typically already given.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Native Routing:&lt;/strong&gt; Use of the regular routing table of the Linux host. The network is required to be capable to route the IP addresses of the application containers.&lt;/p&gt; &lt;p&gt;When to use this mode: This mode is for advanced users and requires some awareness of the underlying networking infrastructure. This mode works well with:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Native IPv6 networks&lt;/li&gt; &#xA;   &lt;li&gt;In conjunction with cloud network routers&lt;/li&gt; &#xA;   &lt;li&gt;If you are already running routing daemons&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Load Balancing&lt;/h2&gt; &#xA;&lt;p&gt;Cilium implements distributed load balancing for traffic between application containers and to external services and is able to fully replace components such as kube-proxy. The load balancing is implemented in eBPF using efficient hashtables allowing for almost unlimited scale.&lt;/p&gt; &#xA;&lt;p&gt;For north-south type load balancing, Cilium&#39;s eBPF implementation is optimized for maximum performance, can be attached to XDP (eXpress Data Path), and supports direct server return (DSR) as well as Maglev consistent hashing if the load balancing operation is not performed on the source host.&lt;/p&gt; &#xA;&lt;p&gt;For east-west type load balancing, Cilium performs efficient service-to-backend translation right in the Linux kernel&#39;s socket layer (e.g. at TCP connect time) such that per-packet NAT operations overhead can be avoided in lower layers.&lt;/p&gt; &#xA;&lt;h2&gt;Bandwidth Management&lt;/h2&gt; &#xA;&lt;p&gt;Cilium implements bandwidth management through efficient EDT-based (Earliest Departure Time) rate-limiting with eBPF for container traffic that is egressing a node. This allows to significantly reduce transmission tail latencies for applications and to avoid locking under multi-queue NICs compared to traditional approaches such as HTB (Hierarchy Token Bucket) or TBF (Token Bucket Filter) as used in the bandwidth CNI plugin, for example.&lt;/p&gt; &#xA;&lt;h2&gt;Monitoring and Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;The ability to gain visibility and to troubleshoot issues is fundamental to the operation of any distributed system. While we learned to love tools like &lt;code&gt;tcpdump&lt;/code&gt; and &lt;code&gt;ping&lt;/code&gt; and while they will always find a special place in our hearts, we strive to provide better tooling for troubleshooting. This includes tooling to provide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Event monitoring with metadata: When a packet is dropped, the tool doesn&#39;t just report the source and destination IP of the packet, the tool provides the full label information of both the sender and receiver among a lot of other information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Metrics export via Prometheus: Key metrics are exported via Prometheus for integration with your existing dashboards.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hubble_: An observability platform specifically written for Cilium. It provides service dependency maps, operational monitoring and alerting, and application and security visibility based on flow logs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _Hubble: &lt;a href=&#34;https://github.com/cilium/hubble/&#34;&gt;https://github.com/cilium/hubble/&lt;/a&gt; .. _&lt;code&gt;Layer 7 Policy&lt;/code&gt;: &lt;a href=&#34;http://docs.cilium.io/en/stable/policy/#layer-7&#34;&gt;http://docs.cilium.io/en/stable/policy/#layer-7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. end-functionality-overview&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Why Cilium?&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Getting Started&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Architecture and Concepts&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Installing Cilium&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Frequently Asked Questions&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;Contributing_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What is eBPF and XDP?&lt;/h1&gt; &#xA;&lt;p&gt;Berkeley Packet Filter (BPF) is a Linux kernel bytecode interpreter originally introduced to filter network packets, e.g. for tcpdump and socket filters. The BPF instruction set and surrounding architecture has recently been significantly reworked with additional data structures such as hash tables and arrays for keeping state as well as additional actions to support packet mangling, forwarding, encapsulation, etc. Furthermore, a compiler back end for LLVM allows for programs to be written in C and compiled into BPF instructions. An in-kernel verifier ensures that BPF programs are safe to run and a JIT compiler converts the BPF bytecode to CPU architecture specific instructions for native execution efficiency. BPF programs can be run at various hooking points in the kernel such as for incoming packets, outgoing packets, system calls, kprobes, uprobes, tracepoints, etc.&lt;/p&gt; &#xA;&lt;p&gt;BPF continues to evolve and gain additional capabilities with each new Linux release. Cilium leverages BPF to perform core data path filtering, mangling, monitoring and redirection, and requires BPF capabilities that are in any Linux kernel version 4.8.0 or newer (the latest current stable Linux kernel is 4.14.x).&lt;/p&gt; &#xA;&lt;p&gt;Many Linux distributions including CoreOS, Debian, Docker&#39;s LinuxKit, Fedora, openSUSE and Ubuntu already ship kernel versions &amp;gt;= 4.8.x. You can check your Linux kernel version by running &lt;code&gt;uname -a&lt;/code&gt;. If you are not yet running a recent enough kernel, check the Documentation of your Linux distribution on how to run Linux kernel 4.9.x or later.&lt;/p&gt; &#xA;&lt;p&gt;To read up on the necessary kernel versions to run the BPF runtime, see the section Prerequisites_.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://cdn.jsdelivr.net/gh/cilium/cilium@master/Documentation/images/bpf-overview.png&#34;&gt;https://cdn.jsdelivr.net/gh/cilium/cilium@master/Documentation/images/bpf-overview.png&lt;/a&gt; :align: center&lt;/p&gt; &#xA;&lt;p&gt;XDP is a further step in evolution and enables to run a specific flavor of BPF programs from the network driver with direct access to the packet&#39;s DMA buffer. This is, by definition, the earliest possible point in the software stack, where programs can be attached to in order to allow for a programmable, high performance packet processor in the Linux kernel networking data path.&lt;/p&gt; &#xA;&lt;p&gt;Further information about BPF and XDP targeted for developers can be found in the &lt;code&gt;BPF and XDP Reference Guide&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;To know more about Cilium, it&#39;s extensions and use cases around Cilium and BPF take a look at &lt;code&gt;Further Readings &amp;lt;FURTHER_READINGS.rst&amp;gt;&lt;/code&gt;_ section.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Slack&lt;/h2&gt; &#xA;&lt;p&gt;Join the Cilium &lt;code&gt;Slack channel &amp;lt;https://cilium.herokuapp.com/&amp;gt;&lt;/code&gt;_ to chat with Cilium developers and other Cilium users. This is a good place to learn about Cilium, ask questions, and share your experiences.&lt;/p&gt; &#xA;&lt;h2&gt;Special Interest Groups (SIG)&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;Special Interest groups &amp;lt;https://docs.cilium.io/en/stable/community/#special-interest-groups&amp;gt;&lt;/code&gt;_ for a list of all SIGs and their meeting times.&lt;/p&gt; &#xA;&lt;h2&gt;Weekly Developer meeting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The developer community is hanging out on zoom on a weekly basis to chat. Everybody is welcome.&lt;/li&gt; &#xA; &lt;li&gt;Weekly, Wednesday, 8:00 am PT, 11:00 am ET, 5:00 pm CEST&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Join zoom &amp;lt;https://zoom.us/j/596609673&amp;gt;&lt;/code&gt;_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;eBPF &amp;amp; Cilium Office Hours livestream&lt;/h2&gt; &#xA;&lt;p&gt;We host a weekly community &lt;code&gt;YouTube livestream called eCHO &amp;lt;https://www.youtube.com/channel/UCJFUxkVQTBJh3LD1wYBWvuQ&amp;gt;&lt;/code&gt;_ which (very loosely!) stands for eBPF &amp;amp; Cilium Office Hours. Join us live, catch up with past episodes, or head over to the &lt;code&gt;eCHO repo &amp;lt;https://github.com/isovalent/eCHO&amp;gt;&lt;/code&gt;_ and let us know your ideas for topics we should cover.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;The Cilium project is governed by a group of &lt;code&gt;Maintainers and Committers &amp;lt;https://raw.githubusercontent.com/cilium/cilium/master/MAINTAINERS.md&amp;gt;&lt;/code&gt;&lt;strong&gt;. How they are selected and govern is outlined in our &lt;code&gt;governance document &amp;lt;https://docs.cilium.io/en/latest/community/governance/commit_access/&amp;gt;&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;A list of adopters of the Cilium project who are deploying it in production, and of their use cases, can be found in file &lt;code&gt;USERS.md &amp;lt;https://raw.githubusercontent.com/cilium/cilium/master/USERS.md&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Cilium maintains a &lt;code&gt;public roadmap &amp;lt;https://docs.cilium.io/en/latest/community/roadmap/&amp;gt;&lt;/code&gt;__. It gives a a high-level view of the main priorities for the project, the maturity of different features, and how to influence the project direction.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;.. _apache-license: LICENSE .. _bsd-license: bpf/LICENSE.BSD-2-Clause .. _gpl-license: bpf/LICENSE.GPL-2.0&lt;/p&gt; &#xA;&lt;p&gt;The Cilium user space components are licensed under the &lt;code&gt;Apache License, Version 2.0 &amp;lt;apache-license_&amp;gt;&lt;/code&gt;&lt;strong&gt;. The BPF code templates are dual-licensed under the &lt;code&gt;General Public License, Version 2.0 (only) &amp;lt;gpl-license_&amp;gt;&lt;/code&gt;&lt;/strong&gt; and the &lt;code&gt;2-Clause BSD License &amp;lt;bsd-license_&amp;gt;&lt;/code&gt;__ (you can use the terms of either license, at your option).&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;Why Cilium?&lt;/code&gt;: &lt;a href=&#34;http://docs.cilium.io/en/stable/intro/#why-cilium&#34;&gt;http://docs.cilium.io/en/stable/intro/#why-cilium&lt;/a&gt; .. _&lt;code&gt;Getting Started&lt;/code&gt;: &lt;a href=&#34;http://docs.cilium.io/en/stable/gettingstarted/&#34;&gt;http://docs.cilium.io/en/stable/gettingstarted/&lt;/a&gt; .. _&lt;code&gt;Architecture and Concepts&lt;/code&gt;: &lt;a href=&#34;http://docs.cilium.io/en/stable/concepts/&#34;&gt;http://docs.cilium.io/en/stable/concepts/&lt;/a&gt; .. _&lt;code&gt;Installing Cilium&lt;/code&gt;: &lt;a href=&#34;http://docs.cilium.io/en/stable/gettingstarted/#installation&#34;&gt;http://docs.cilium.io/en/stable/gettingstarted/#installation&lt;/a&gt; .. _&lt;code&gt;Frequently Asked Questions&lt;/code&gt;: &lt;a href=&#34;https://github.com/cilium/cilium/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+label%3Akind%2Fquestion+&#34;&gt;https://github.com/cilium/cilium/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+label%3Akind%2Fquestion+&lt;/a&gt; .. _Contributing: &lt;a href=&#34;http://docs.cilium.io/en/stable/contributing/development/&#34;&gt;http://docs.cilium.io/en/stable/contributing/development/&lt;/a&gt; .. _Prerequisites: &lt;a href=&#34;http://docs.cilium.io/en/stable/operations/system_requirements&#34;&gt;http://docs.cilium.io/en/stable/operations/system_requirements&lt;/a&gt; .. _&lt;code&gt;BPF and XDP Reference Guide&lt;/code&gt;: &lt;a href=&#34;http://docs.cilium.io/en/stable/bpf/&#34;&gt;http://docs.cilium.io/en/stable/bpf/&lt;/a&gt; .. _&lt;code&gt;eBPF&lt;/code&gt;: &lt;a href=&#34;https://ebpf.io&#34;&gt;https://ebpf.io&lt;/a&gt; .. _&lt;code&gt;eBPF.io&lt;/code&gt;: &lt;a href=&#34;https://ebpf.io&#34;&gt;https://ebpf.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |go-report| image:: &lt;a href=&#34;https://goreportcard.com/badge/github.com/cilium/cilium&#34;&gt;https://goreportcard.com/badge/github.com/cilium/cilium&lt;/a&gt; :alt: Go Report Card :target: &lt;a href=&#34;https://goreportcard.com/report/github.com/cilium/cilium&#34;&gt;https://goreportcard.com/report/github.com/cilium/cilium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |go-doc| image:: &lt;a href=&#34;https://godoc.org/github.com/cilium/cilium?status.svg&#34;&gt;https://godoc.org/github.com/cilium/cilium?status.svg&lt;/a&gt; :alt: GoDoc :target: &lt;a href=&#34;https://godoc.org/github.com/cilium/cilium&#34;&gt;https://godoc.org/github.com/cilium/cilium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |rtd| image:: &lt;a href=&#34;https://readthedocs.org/projects/docs/badge/?version=latest&#34;&gt;https://readthedocs.org/projects/docs/badge/?version=latest&lt;/a&gt; :alt: Read the Docs :target: &lt;a href=&#34;http://docs.cilium.io/&#34;&gt;http://docs.cilium.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |apache| image:: &lt;a href=&#34;https://img.shields.io/badge/license-Apache-blue.svg&#34;&gt;https://img.shields.io/badge/license-Apache-blue.svg&lt;/a&gt; :alt: Apache licensed :target: apache-license_&lt;/p&gt; &#xA;&lt;p&gt;.. |bsd| image:: &lt;a href=&#34;https://img.shields.io/badge/license-BSD-blue.svg&#34;&gt;https://img.shields.io/badge/license-BSD-blue.svg&lt;/a&gt; :alt: BSD licensed :target: bsd-license_&lt;/p&gt; &#xA;&lt;p&gt;.. |gpl| image:: &lt;a href=&#34;https://img.shields.io/badge/license-GPL-blue.svg&#34;&gt;https://img.shields.io/badge/license-GPL-blue.svg&lt;/a&gt; :alt: GPL licensed :target: gpl-license_&lt;/p&gt; &#xA;&lt;p&gt;.. |slack| image:: &lt;a href=&#34;https://cilium.herokuapp.com/badge.svg&#34;&gt;https://cilium.herokuapp.com/badge.svg&lt;/a&gt; :alt: Join the Cilium slack channel :target: &lt;a href=&#34;https://cilium.herokuapp.com/&#34;&gt;https://cilium.herokuapp.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |cii| image:: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1269/badge&#34;&gt;https://bestpractices.coreinfrastructure.org/projects/1269/badge&lt;/a&gt; :alt: CII Best Practices :target: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1269&#34;&gt;https://bestpractices.coreinfrastructure.org/projects/1269&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |clomonitor| image:: &lt;a href=&#34;https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cilium/cilium/badge&#34;&gt;https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cilium/cilium/badge&lt;/a&gt; :alt: CLOMonitor :target: &lt;a href=&#34;https://clomonitor.io/projects/cncf/cilium/cilium&#34;&gt;https://clomonitor.io/projects/cncf/cilium/cilium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |artifacthub| image:: &lt;a href=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cilium&#34;&gt;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cilium&lt;/a&gt; :alt: Artifact Hub :target: &lt;a href=&#34;https://artifacthub.io/packages/helm/cilium/cilium&#34;&gt;https://artifacthub.io/packages/helm/cilium/cilium&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/incubator-devlake</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/apache/incubator-devlake</id>
    <link href="https://github.com/apache/incubator-devlake" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache DevLake is an open-source dev data platform that ingests, analyzes, and visualizes the fragmented data from DevOps tools to distill insights for engineering productivity.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/apache/incubator-devlake/main/img/logo.svg?sanitize=true&#34; width=&#34;120px&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Apache DevLake(Incubating)&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&amp;amp;logo=github&amp;amp;color=2370ff&amp;amp;labelColor=454545&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/apache/incubator-devlake/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;badge&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/apache/incubator-devlake&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/apache/incubator-devlake&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/devlake-io/shared_invite/zt-17b6vuvps-x98pqseoUagM7EAmKC82xQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-success.svg?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;h3&gt;What is Apache DevLake?&lt;/h3&gt; &#xA; &lt;p&gt;Apache DevLake is an open-source dev data platform that ingests, analyzes, and visualizes the fragmented data from DevOps tools to distill insights for engineering productivity.&lt;/p&gt; &#xA; &lt;p&gt;Apache DevLake is designed for developer teams looking to make better sense of their development process and to bring a more data-driven approach to their own practices. You can ask Apache DevLake many questions regarding your development process. Just connect and query.&lt;/p&gt; &#xA; &lt;h3&gt;Demo&lt;/h3&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://grafana-lake.demo.devlake.io/d/0Rjxknc7z/demo-homepage?orgId=1&#34;&gt;demo&lt;/a&gt;. The data in the demo comes from this repo.&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;div align=&#34;left&#34;&gt; &#xA;  &lt;img src=&#34;https://user-images.githubusercontent.com/14050754/145056261-ceaf7044-f5c5-420f-80ca-54e56eb8e2a7.png&#34; width=&#34;100%&#34; alt=&#34;User Flow&#34; style=&#34;border-radius:15px;&#34;&gt; &#xA;  &lt;p align=&#34;center&#34;&gt;User Flow&lt;/p&gt; &#xA;  &lt;br&gt; &#xA;  &lt;h2&gt;What can be accomplished with Apache DevLake?&lt;/h2&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Collect DevOps data across the entire Software Development Life Cycle (SDLC) and connect the siloed data with a standard &lt;a href=&#34;https://devlake.apache.org/docs/DataModels/DevLakeDomainLayerSchema&#34;&gt;data model&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Provide out-of-the-box engineering &lt;a href=&#34;https://devlake.apache.org/docs/EngineeringMetrics&#34;&gt;metrics&lt;/a&gt; to be visualized in a sereis of dashboards.&lt;/li&gt; &#xA;   &lt;li&gt;Allow a flexible &lt;a href=&#34;https://devlake.apache.org/docs/Overview/Architecture&#34;&gt;framework&lt;/a&gt; for data collection ad ETL to support customizable data analysis.&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;h2&gt;Supported Data Sources&lt;/h2&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Data Source&lt;/th&gt; &#xA;     &lt;th&gt;Domain&lt;/th&gt; &#xA;     &lt;th&gt;Versions&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://devlake.apache.org/docs/Plugins/feishu&#34;&gt;Feishu&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Documentation&lt;/td&gt; &#xA;     &lt;td&gt;Cloud&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://devlake.apache.org/docs/Plugins/github&#34;&gt;GitHub&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Source Code Management, Code Review, Issue/Task Management&lt;/td&gt; &#xA;     &lt;td&gt;Cloud&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://devlake.apache.org/docs/Plugins/gitlab&#34;&gt;Gitlab&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Source Code Management, Code Review, Issue/Task Management&lt;/td&gt; &#xA;     &lt;td&gt;Cloud, Community Edition 13.x+&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://devlake.apache.org/docs/Plugins/jenkins&#34;&gt;Jenkins&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;CI/CD&lt;/td&gt; &#xA;     &lt;td&gt;2.263.x+&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://devlake.apache.org/docs/Plugins/jira&#34;&gt;Jira&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Issue/Task Management&lt;/td&gt; &#xA;     &lt;td&gt;Cloud, Server 8.x+, Data Center 8.x+&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;TAPD&lt;/td&gt; &#xA;     &lt;td&gt;Issue/Task Management&lt;/td&gt; &#xA;     &lt;td&gt;Cloud&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://devlake.apache.org/docs/QuickStart/LocalSetup&#34;&gt;Deploy Locally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://devlake.apache.org/docs/QuickStart/KubernetesSetup&#34;&gt;Deploy to Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://devlake.apache.org/docs/QuickStart/TemporalSetup&#34;&gt;Deploy in Temporal Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://devlake.apache.org/docs/QuickStart/DeveloperSetup&#34;&gt;Deploy in Developer Mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;h2&gt;Project Roadmap&lt;/h2&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://devlake.apache.org/docs/Overview/Roadmap&#34; target=&#34;_blank&#34;&gt;Roadmap 2022&lt;/a&gt;: Detailed project roadmaps for 2022.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://devlake.apache.org/docs/EngineeringMetrics&#34; target=&#34;_blank&#34;&gt;Supported engineering metrics&lt;/a&gt;: provide rich perspectives to observe and analyze SDLC.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;  &lt;p&gt;This section lists all the documents to help you contribute to the repo.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://devlake.apache.org/docs/Overview/Architecture&#34;&gt;Architecture&lt;/a&gt;: Architecture of Apache DevLake&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://devlake.apache.org/docs/DataModels/DevLakeDomainLayerSchema&#34;&gt;Data Model&lt;/a&gt;: Domain Layer Schema&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-devlake/main/plugins/README.md&#34;&gt;Add a Plugin&lt;/a&gt;: Guide to add a plugin&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-devlake/main/plugins/HOW-TO-ADD-METRICS.md&#34;&gt;Add metrics&lt;/a&gt;: Guide to add metrics in a plugin&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-devlake/main/CONTRIBUTING.md&#34;&gt;Contribution guidelines&lt;/a&gt;: Start from here if you want to make contribution&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;h2&gt;Community&lt;/h2&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/devlake-io/shared_invite/zt-18uayb6ut-cHOjiYcBwERQ8VVPZ9cQQw&#34; target=&#34;_blank&#34;&gt;Slack&lt;/a&gt;: Message us on Slack&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/apache/incubator-devlake/wiki/FAQ&#34; target=&#34;_blank&#34;&gt;FAQ&lt;/a&gt;: Frequently Asked Questions&lt;/li&gt; &#xA;   &lt;li&gt;Wechat Community:&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/incubator-devlake/main/img/wechat_community_barcode.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;h2&gt;License&lt;a id=&#34;license&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;  &lt;p&gt;This project is licensed under Apache License 2.0 - see the &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-devlake/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA; &lt;/div&gt;&#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>solana-labs/token-list</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/solana-labs/token-list</id>
    <link href="https://github.com/solana-labs/token-list" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The community maintained Solana token registry&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h3&gt;Please note: This repository is being rebuilt to accept the new volume of token additions and modifications. PR merges will be delayed.&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#adding-new-token&#34;&gt;Adding new token&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#modifying-existing-token&#34;&gt;Modifying existing token&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#common-issues&#34;&gt;Common issues&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#automerge-failure-found-removed-line&#34;&gt;Automerge failure: found removed line&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#failed-to-normalize-failed-to-parse-json-json-unknown-field&#34;&gt;Failed to normalize: failed to parse JSON: json: unknown field&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#duplicate-token&#34;&gt;Duplicate token&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#scannerwallet-hasnt-updated-yet&#34;&gt;Scanner/wallet hasn&#39;t updated yet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#error-validating-schema-chainid-conflicting-values-103-and-0&#34;&gt;error validating schema: chainId: conflicting values 103 and 0&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#warning-about-the-last-element-in-the-list&#34;&gt;warning about the last element in the list&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/#disclaimer&#34;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;@solana/spl-token-registry&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unpkg.com/@solana/spl-token-registry@latest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@solana/spl-token-registry&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/solana-labs/token-list/raw/b3fa86b3fdd9c817139e38641d46c5a892542a52/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-APACHE-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Solana Token Registry is a package that allows application to query for list of tokens. The JSON schema for the tokens includes: chainId, address, name, decimals, symbol, logoURI (optional), tags (optional), and custom extensions metadata.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @solana/spl-token-registry&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add @solana/spl-token-registry&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Query available tokens&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;new TokenListProvider().resolve().then((tokens) =&amp;gt; {&#xA;  const tokenList = tokens.filterByClusterSlug(&#39;mainnet-beta&#39;).getList();&#xA;  console.log(tokenList);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Render icon for token in React&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import React, { useEffect, useState } from &#39;react&#39;;&#xA;import { TokenListProvider, TokenInfo } from &#39;@solana/spl-token-registry&#39;;&#xA;&#xA;&#xA;export const Icon = (props: { mint: string }) =&amp;gt; {&#xA;  const [tokenMap, setTokenMap] = useState&amp;lt;Map&amp;lt;string, TokenInfo&amp;gt;&amp;gt;(new Map());&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    new TokenListProvider().resolve().then(tokens =&amp;gt; {&#xA;      const tokenList = tokens.filterByChainId(ENV.MainnetBeta).getList();&#xA;&#xA;      setTokenMap(tokenList.reduce((map, item) =&amp;gt; {&#xA;        map.set(item.address, item);&#xA;        return map;&#xA;      },new Map()));&#xA;    });&#xA;  }, [setTokenMap]);&#xA;&#xA;  const token = tokenMap.get(props.mint);&#xA;  if (!token || !token.logoURI) return null;&#xA;&#xA;  return (&amp;lt;img src={token.logoURI} /&amp;gt;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Adding new token&lt;/h1&gt; &#xA;&lt;p&gt;To add a new token, add another json block to the large &lt;code&gt;tokens&lt;/code&gt; list in &lt;code&gt;src/tokens/solana.tokenlist.json&lt;/code&gt; and submit a PR.&lt;/p&gt; &#xA;&lt;p&gt;Tips:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;logoURI&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;should point to a &lt;code&gt;png&lt;/code&gt;, &lt;code&gt;jpg&lt;/code&gt;, or &lt;code&gt;svg&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;the logo can be hosted in this repo in &lt;code&gt;assets/mainnet/TOKEN_ADDRESS/FILE&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;in that case, the image should be added to this repo and logoURI should point to &lt;code&gt;https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/TOKEN_ADDRESS/FILE&lt;/code&gt;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;if your logo is hosted in any other repo or any other location, no need to add it here&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tags&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;please don&#39;t go crazy here, note that the valid tags are in the toplevel &lt;code&gt;tags&lt;/code&gt; section and any other tags will likely have no effect&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;`extensions: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the &lt;code&gt;extensions&lt;/code&gt; block can contain links to your twitter, discord, etc. A list of allowed extensions is &lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/token-list/main/automerge/schema.cue#L105&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;serumV3Usdc&lt;/code&gt; and &lt;code&gt;serumV3Usdt&lt;/code&gt; are the addresses of serum markets for your token (either paired with USDC or USDT)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;coingeckoId&lt;/code&gt; is the string that appears as &#39;API id&#39; on the corresponding coingecko page&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;it&#39;s recommended to not add your token as the final element to the list (second-to-last is best). This is because adding the token as the final element will create merge conflicts that are more difficult for maintainers to manually resolve.&lt;/li&gt; &#xA; &lt;li&gt;please squash commits into a single commit for cleanliness&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Changes will be automerged. If automerge fails, you can click the &#39;Details&#39; link for more information.&lt;/p&gt; &#xA;&lt;p&gt;Please follow the Uniswap Token List specification found here: &lt;a href=&#34;https://github.com/Uniswap/token-lists&#34;&gt;https://github.com/Uniswap/token-lists&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Modifying existing token&lt;/h1&gt; &#xA;&lt;p&gt;Modifications currently must be manually reviewed. For any modifications, please submit a PR, then raise an issue with a link to your PR (and leave the PR open) in order to request manual review.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;please check the &#39;Files changed&#39; tab on your PR to ensure that your change is as expected&lt;/li&gt; &#xA; &lt;li&gt;please link the commit or PR where the token was originally added. If the token was added by someone else, they will be asked to confirm that this change is authorized&lt;/li&gt; &#xA; &lt;li&gt;please squash commits into a single commit for cleanliness&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Common issues&lt;/h1&gt; &#xA;&lt;h2&gt;Automerge failure: found removed line&lt;/h2&gt; &#xA;&lt;p&gt;Any modifications must be manually merged; please submit an issue with a link to your PR (and leave the PR open).&lt;/p&gt; &#xA;&lt;h2&gt;Failed to normalize: failed to parse JSON: json: unknown field&lt;/h2&gt; &#xA;&lt;p&gt;e.g. &lt;code&gt;failed to normalize: failed to parse JSON: json: unknown field &#34;coingeckoId&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If this error is encountered while modifying an existing entry, note that this error is misleading; it is the automerger&#39;s way of saying that adding &lt;code&gt;coingeckoId&lt;/code&gt; to an existing entry is not allowed.&lt;/p&gt; &#xA;&lt;p&gt;Any modifications must be manually merged; please submit an issue with a link to your PR (and leave the PR open).&lt;/p&gt; &#xA;&lt;h2&gt;Duplicate token&lt;/h2&gt; &#xA;&lt;p&gt;&#34;duplicate token: token address &lt;code&gt;...&lt;/code&gt; is already used&#34;&lt;/p&gt; &#xA;&lt;p&gt;This occurs because the diff in your PR is re-adding a completely new block for a token that was already previously added. (You can verify this by looking at the &#39;Files changed&#39; tab of your PR.)&lt;/p&gt; &#xA;&lt;p&gt;This usually happens because your PR is intended to &lt;em&gt;update&lt;/em&gt; an existing token, but it still includes the commits that &lt;em&gt;added&lt;/em&gt; the original token (which were previously merged). You can verify this by checking the &#39;commits&#39; tab of the PR. If you see the original commit in there, that&#39;s bad! The PR should be relative to the current &lt;code&gt;HEAD&lt;/code&gt; of &lt;code&gt;main&lt;/code&gt;, i.e. your checkout should be &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Branching-Rebasing&#34;&gt;rebased&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To fix this, you can either:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;checkout the latest &lt;code&gt;HEAD&lt;/code&gt; of &lt;code&gt;main&lt;/code&gt; and then re-apply your change (simpler for git newbies but incurring a bit of duplicate work), or&lt;/li&gt; &#xA; &lt;li&gt;rebase your local checkout back to &lt;code&gt;origin/main&lt;/code&gt; before opening a PR.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For option (2), you can do this with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git remote add pub-origin git@github.com:solana-labs/token-list.git&#xA;git fetch pub-origin main &#xA;git rebase pub-origin/main&#xA;git push origin main -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More generally, for modifications to existing tokens, be sure to checkout the &lt;code&gt;HEAD&lt;/code&gt; of the &lt;code&gt;main&lt;/code&gt; branch, locate the existing block in &lt;code&gt;solana.tokenlist.json&lt;/code&gt;, and modify the appropriate fields.&lt;/p&gt; &#xA;&lt;p&gt;Always check the &#39;Files changed&#39; tab on your PR to see the impact of your change.&lt;/p&gt; &#xA;&lt;h2&gt;Scanner/wallet hasn&#39;t updated yet&lt;/h2&gt; &#xA;&lt;p&gt;Solscan, solana explorer, and wallets all pull from this repo at different cadences. Some update every few days.&lt;/p&gt; &#xA;&lt;p&gt;If your change has landed in the &lt;code&gt;HEAD&lt;/code&gt; of &lt;code&gt;main&lt;/code&gt; branch, it was successful, but it might take a few days for downstream users to reflect that change.&lt;/p&gt; &#xA;&lt;p&gt;Please especially do not raise issues saying &#39;solscan has updated but phantom has not&#39;, that definitely means your change is in this repo!&lt;/p&gt; &#xA;&lt;h2&gt;error validating schema: chainId: conflicting values 103 and 0&lt;/h2&gt; &#xA;&lt;p&gt;This automerge error arises if you touched a line outside of your token block. Some text editors introduce a diff to the final line of the file. You can see this by looking at the &#34;Files changed&#34; tab of your PR.&lt;/p&gt; &#xA;&lt;p&gt;If using vim, you can probably address this by adding&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;set nofixendofline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to &lt;code&gt;~/.vimrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t address this yourself, the PR will need to be manually merged; please submit an issue and link your PR.&lt;/p&gt; &#xA;&lt;h2&gt;Warning about the last element in the list&lt;/h2&gt; &#xA;&lt;p&gt;Please do not add your token as the final element to the list (second-to-last is best). This is because when the token is the final element, the closing brace won&#39;t be followed by a comma, which creates a specialcase which will create a merge conflict if the commit doesn&#39;t get automerged. This prevents the maintainers from manually merging your change in the event that it needs to be automerged.&lt;/p&gt; &#xA;&lt;p&gt;If the maintainers link you to this comment, it means you need to move your block in order for them to merge it.&lt;/p&gt; &#xA;&lt;p&gt;Addressing this more seamlessly is an open item; bear with us for now.&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;All claims, content, designs, algorithms, estimates, roadmaps, specifications, and performance measurements described in this project are done with the Solana Foundation&#39;s (&#34;SF&#34;) good faith efforts. It is up to the reader to check and validate their accuracy and truthfulness. Furthermore nothing in this project constitutes a solicitation for investment.&lt;/p&gt; &#xA;&lt;p&gt;Any content produced by SF or developer resources that SF provides, are for educational and inspiration purposes only. SF does not encourage, induce or sanction the deployment, integration or use of any such applications (including the code comprising the Solana blockchain protocol) in violation of applicable laws or regulations and hereby prohibits any such deployment, integration or use. This includes use of any such applications by the reader (a) in violation of export control or sanctions laws of the United States or any other applicable jurisdiction, (b) if the reader is located in or ordinarily resident in a country or territory subject to comprehensive sanctions administered by the U.S. Office of Foreign Assets Control (OFAC), or (c) if the reader is or is working on behalf of a Specially Designated National (SDN) or a person subject to similar blocking or denied party prohibitions.&lt;/p&gt; &#xA;&lt;p&gt;The reader should be aware that U.S. export control and sanctions laws prohibit U.S. persons (and other persons that are subject to such laws) from transacting with persons in certain countries and territories or that are on the SDN list. As a project based primarily on open-source software, it is possible that such sanctioned persons may nevertheless bypass prohibitions, obtain the code comprising the Solana blockchain protocol (or other project code or applications) and deploy, integrate, or otherwise use it. Accordingly, there is a risk to individuals that other persons using the Solana blockchain protocol may be sanctioned persons and that transactions with such persons would be a violation of U.S. export controls and sanctions law. This risk applies to individuals, organizations, and other ecosystem participants that deploy, integrate, or use the Solana blockchain protocol code directly (e.g., as a node operator), and individuals that transact on the Solana blockchain through light clients, third party interfaces, and/or wallet software.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>golang/go</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/golang/go</id>
    <link href="https://github.com/golang/go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Go programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Go Programming Language&lt;/h1&gt; &#xA;&lt;p&gt;Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://golang.org/doc/gopher/fiveyears.jpg&#34; alt=&#34;Gopher image&#34;&gt; &lt;em&gt;Gopher image by &lt;a href=&#34;https://reneefrench.blogspot.com/&#34;&gt;Renee French&lt;/a&gt;, licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/3.0/&#34;&gt;Creative Commons 3.0 Attributions license&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Our canonical Git repository is located at &lt;a href=&#34;https://go.googlesource.com/go&#34;&gt;https://go.googlesource.com/go&lt;/a&gt;. There is a mirror of the repository at &lt;a href=&#34;https://github.com/golang/go&#34;&gt;https://github.com/golang/go&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unless otherwise noted, the Go source files are distributed under the BSD-style license found in the LICENSE file.&lt;/p&gt; &#xA;&lt;h3&gt;Download and Install&lt;/h3&gt; &#xA;&lt;h4&gt;Binary Distributions&lt;/h4&gt; &#xA;&lt;p&gt;Official binary distributions are available at &lt;a href=&#34;https://go.dev/dl/&#34;&gt;https://go.dev/dl/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After downloading a binary release, visit &lt;a href=&#34;https://go.dev/doc/install&#34;&gt;https://go.dev/doc/install&lt;/a&gt; for installation instructions.&lt;/p&gt; &#xA;&lt;h4&gt;Install From Source&lt;/h4&gt; &#xA;&lt;p&gt;If a binary distribution is not available for your combination of operating system and architecture, visit &lt;a href=&#34;https://go.dev/doc/install/source&#34;&gt;https://go.dev/doc/install/source&lt;/a&gt; for source installation instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Go is the work of thousands of contributors. We appreciate your help!&lt;/p&gt; &#xA;&lt;p&gt;To contribute, please read the contribution guidelines at &lt;a href=&#34;https://go.dev/doc/contribute&#34;&gt;https://go.dev/doc/contribute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that the Go project uses the issue tracker for bug reports and proposals only. See &lt;a href=&#34;https://go.dev/wiki/Questions&#34;&gt;https://go.dev/wiki/Questions&lt;/a&gt; for a list of places to ask questions about the Go language.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sealerio/sealer</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/sealerio/sealer</id>
    <link href="https://github.com/sealerio/sealer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool to seal application&#39;s all dependencies and Kubernetes into CloudImage, distribute this application anywhere via CloudImage, and run it within any cluster in one command.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sealer -- Build, Share and Run Any Distributed Applications&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sealerio/sealer/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sealerio/sealer/actions/workflows/go.yml&#34;&gt;&lt;img src=&#34;https://github.com/sealerio/sealer/actions/workflows/go.yml/badge.svg?sanitize=true&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sealerio/sealer/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/sealerio/sealer/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/sealerio/sealer&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/sealerio/sealer?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/en/projects/5205&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5205/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/sealer_oss&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Follow-sealer-1DA1F2?logo=twitter&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fsealerio%2Fsealer?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fsealerio%2Fsealer.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/docs/README_zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/FAQ.md&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/Adopters.md&#34;&gt;Adopters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/code-of-conduct.md&#34;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;sealer[ˈsiːlər] provides the way for distributed application package and delivery based on kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8912557/117263291-b88b8700-ae84-11eb-8b46-838292e85c5c.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Concept&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CloudImage : like Dockerimage, but the rootfs is kubernetes, and contains all the dependencies(docker images,yaml files or helm chart...) your application needs.&lt;/li&gt; &#xA; &lt;li&gt;Kubefile : the file describe how to build a CloudImage.&lt;/li&gt; &#xA; &lt;li&gt;Clusterfile : the config of using CloudImage to run a cluster.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8912557/117400612-97cf3a00-af35-11eb-90b9-f5dc8e8117b5.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can write a Kubefile, and build a CloudImage, then using a Clusterfile to run a cluster.&lt;/p&gt; &#xA;&lt;p&gt;sealer[ˈsiːlər] provides the way for distributed application package and delivery based on kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;It solves the delivery problem of complex applications by packaging distributed applications and dependencies(like database,middleware) together.&lt;/p&gt; &#xA;&lt;p&gt;For example, build a dashboard CloudImage:&lt;/p&gt; &#xA;&lt;p&gt;Kubefile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# base CloudImage contains all the files that run a kubernetes cluster needed.&#xA;#    1. kubernetes components like kubectl kubeadm kubelet and apiserver images ...&#xA;#    2. docker engine, and a private registry&#xA;#    3. config files, yaml, static files, scripts ...&#xA;FROM registry.cn-qingdao.aliyuncs.com/sealer-io/kubernetes:v1.19.8&#xA;# download kubernetes dashboard yaml file&#xA;RUN wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml&#xA;# when run this CloudImage, will apply a dashboard manifests&#xA;CMD kubectl apply -f recommended.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build dashobard CloudImage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sealer build -t registry.cn-qingdao.aliyuncs.com/sealer-io/dashboard:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run a kubernetes cluster with dashboard:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# sealer will install a kubernetes on host 192.168.0.2 then apply the dashboard manifests&#xA;sealer run registry.cn-qingdao.aliyuncs.com/sealer-io/dashboard:latest --masters 192.168.0.2 --passwd xxx&#xA;# check the pod&#xA;kubectl get pod -A|grep dashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Push the CloudImage to the registry&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# you can push the CloudImage to docker hub, Ali ACR, or Harbor&#xA;sealer push registry.cn-qingdao.aliyuncs.com/sealer-io/dashboard:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage scenarios &amp;amp; features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; An extremely simple way to install kubernetes and other software in the kubernetes ecosystem in a production or offline environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Through Kubefile, you can easily customize the kubernetes CloudImage to package the cluster and applications, and submit them to the registry.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Powerful life cycle management capabilities, to perform operations such as cluster upgrade, cluster backup and recovery, node expansion and contraction in unimaginable simple ways&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Very fast, complete cluster installation within 3 minutes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support ARM x86, v1.20 and above versions support containerd, almost compatible with all Linux operating systems that support systemd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Does not rely on ansible haproxy keepalived, high availability is achieved through ipvs, takes up less resources, is stable and reliable&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Many ecological software images can be used directly, like prometheus mysql..., and you can combine then together.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Install a kubernetes cluster&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#install Sealer binaries&#xA;wget https://github.com/sealerio/sealer/releases/download/v0.8.5/sealer-v0.8.5-linux-amd64.tar.gz &amp;amp;&amp;amp; \&#xA;tar zxvf sealer-v0.8.5-linux-amd64.tar.gz &amp;amp;&amp;amp; mv sealer /usr/bin&#xA;#run a kubernetes cluster&#xA;sealer run kubernetes:v1.19.8 --masters 192.168.0.2 --passwd xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://sealer.cool/docs/getting-started/introduction.html&#34;&gt;get started&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Official website&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://sealer.cool&#34;&gt;official website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Developing Sealer&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/docs/contributing_zh.md&#34;&gt;贡献文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication Channels&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CNCF Mailing List: to be added.&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/sealer_oss&#34;&gt;@sealer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DingTalk Group Number: 34619594&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/9465626/167836908-65ca12e0-4600-44d4-b3bd-8b93d27600fb.png&#34; width=&#34;300&#34; title=&#34;dingtalk&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Sealer is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/sealerio/sealer/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fsealerio%2Fsealer?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fsealerio%2Fsealer.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sethvargo/ratchet</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/sethvargo/ratchet</id>
    <link href="https://github.com/sethvargo/ratchet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for securing CI/CD workflows with version pinning.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ratchet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sethvargo/ratchet/main/docs/ratchet.png&#34; alt=&#34;ratchet logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ratchet is a tool for improving the security of CI/CD workflows by automating the process of pinning and unpinning upstream versions. It&#39;s like Bundler, Cargo, Go modules, NPM, Pip, or Yarn, but for CI/CD workflows. Ratchet supports:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Circle CI&lt;/li&gt; &#xA; &lt;li&gt;GitHub Actions&lt;/li&gt; &#xA; &lt;li&gt;Google Cloud Build&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Problem statement&lt;/h2&gt; &#xA;&lt;p&gt;Most CI/CD systems are one layer of indirection away from &lt;code&gt;curl | sudo bash&lt;/code&gt;. Unless you are specifically pinning CI workflows, containers, and base images to checksummed versions, &lt;em&gt;everything&lt;/em&gt; is mutable: GitHub labels are mutable and Docker tags are mutable. This poses a substantial security and reliability risk.&lt;/p&gt; &#xA;&lt;p&gt;What you&#39;re probably doing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: &#39;actions/checkout@v3&#39;&#xA;# or&#xA;image: &#39;ubuntu:20.04&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;What you should really be doing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: &#39;actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b&#39;&#xA;# or&#xA;image: &#39;ubuntu@sha256:47f14534bda344d9fe6ffd6effb95eefe579f4be0d508b7445cf77f61a0e5724&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But resolving those checksums and managing the update lifecycle is extremely toilsome. That&#39;s what ratchet aims to solve! Ratchet resolves and updates unpinned references to the latest version that matches their constraint, and then keeps a record of the original constraint.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: &#39;actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b&#39; # ratchet:actions/checkout@v3&#xA;# or&#xA;image: &#39;ubuntu@sha256:47f14534bda344d9fe6ffd6effb95eefe579f4be0d508b7445cf77f61a0e5724&#39; # ratchet:ubuntu:20.04&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;⚠️ Warning!&lt;/strong&gt; The README corresponds to the &lt;code&gt;main&lt;/code&gt; branch of ratchet&#39;s development, and it may contain unreleased features.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pin to specific versions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# pin the input file&#xA;./ratchet pin workflow.yml&#xA;&#xA;# pin a circleci file&#xA;./ratchet pin -parser circleci circleci.yml&#xA;&#xA;# pin a cloudbuild file&#xA;./ratchet pin -parser cloudbuild cloudbuild.yml&#xA;&#xA;# output to a different path&#xA;./ratchet pin -out workflow-compiled.yml workflow.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unpin existing pinned versions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# unpin the input file&#xA;./ratchet unpin workflow.yml&#xA;&#xA;# output to a different path&#xA;./ratchet unpin -out workflow.yml workflow-compiled.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Update all versions to the latest matching constraint:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# update the input file&#xA;./ratchet update workflow.yml&#xA;&#xA;# update a circleci file&#xA;./ratchet update -parser circleci circleci.yml&#xA;&#xA;# update a cloudbuild file&#xA;./ratchet update -parser cloudbuild cloudbuild.yml&#xA;&#xA;# output to a different path&#xA;./ratchet pin -out workflow-compiled.yml workflow.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, run a command with &lt;code&gt;-help&lt;/code&gt; to use detailed usage instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Check if all versions are pinned:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./ratchet check workflow.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;In a CI/CD workflow:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ratchet is distributed as a very small container, so you can use it as a step inside CI/CD jobs. Here is a GitHub Actions example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  my_job:&#xA;    runs-on: &#39;ubuntu-latest&#39;&#xA;    name: &#39;ratchet&#39;&#xA;    steps:&#xA;      - uses: &#39;actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b&#39; # ratchet:actions/checkout@v3&#xA;&#xA;      # Example of pinning.&#xA;      - uses: &#39;docker://ghcr.io/sethvargo/ratchet:0.2.1&#39;&#xA;        with:&#xA;          args: [&#39;pin&#39;, &#39;.github/workflows/my-workflow.yml&#39;]&#xA;&#xA;      # Example of checking versions are pinned.&#xA;      - uses: &#39;docker://ghcr.io/sethvargo/ratchet:0.2.1&#39;&#xA;        with:&#xA;          args: [&#39;check&#39;, &#39;.github/workflows/my-workflow.yml&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This same pattern can be extended to other CI/CD systems that support container-based runtimes.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are a few options for installing ratchet:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As a single-static binary from the &lt;a href=&#34;https://github.com/sethvargo/ratchet/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;As a container image from the &lt;a href=&#34;https://github.com/sethvargo/ratchet/pkgs/container/ratchet&#34;&gt;container registry&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Compiled from source yourself. Note this option is not supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Auth&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The container resolver uses default &#34;keychain&#34; auth, which looks for local system auth, similar to the Docker and gcloud CLIs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The GitHub resolver defaults to public github.com. Provide an oauth access token with appropriate permissions via the &lt;code&gt;ACTIONS_TOKEN&lt;/code&gt; environment variable. To use a GitHub Enterprise installation, set the &lt;code&gt;ACTIONS_BASE_URL&lt;/code&gt; and &lt;code&gt;ACTIONS_UPLOAD_URL&lt;/code&gt; environment variables to point your instance.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Excluding&lt;/h2&gt; &#xA;&lt;p&gt;There may be instances in which you want to exclude a particular reference from being pinned. You can use the &lt;code&gt;ratchet:exclude&lt;/code&gt; annotation as a line comment and ratchet will not process that reference:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: &#39;actions/checkout@v3&#39; # ratchet:exclude&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There &lt;strong&gt;cannot&lt;/strong&gt; be any spaces in the exclusion string, and the exclusion string only applies to the line on which it appears.&lt;/p&gt; &#xA;&lt;h2&gt;Terminology&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unpinned version&lt;/strong&gt; - An unpinned version is a non-absolute reference to a floating tag or label, such as &lt;code&gt;actions/checkout@v3&lt;/code&gt; or &lt;code&gt;ubuntu:20.04&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pinned version&lt;/strong&gt; - A pinned version is an absolute hashed reference, such as &lt;code&gt;actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b&lt;/code&gt; or &lt;code&gt;ubuntu@sha256:82becede498899ec668628e7cb0ad87b6e1c371cb8a1e597d83a47fac21d6af3&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Indentation is always set to 2 spaces. The upstream YAML library does not capture pre-parsing indentation. Thus, all files will be saved with 2 spaces for indentation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Leading and trailing whitespace between nodes is not preserved. Similar indentation, the upstream YAML library does not capture truly empty nodes. Thus, blank lines may be removed between nodes. This will not affect multi-line values.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Does not support resolving values in anchors or aliases. This is technically possible, but most CI systems also don&#39;t support these advanced YAML features.&lt;/p&gt; &lt;p&gt;Similarly, Ratchet does not support matrix-style expansion, since those values cannot be guaranteed to be known at compile time. For example, Ratchet will error on the following GitHub Actions workflow:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  my_job:&#xA;    strategy:&#xA;      matrix:&#xA;        version:&#xA;        - &#39;1&#39;&#xA;        - &#39;2&#39;&#xA;&#xA;    steps:&#xA;      - uses: &#39;actions/checkout@v${{ matrix.version }}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>datastax-labs/astra-cli</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/datastax-labs/astra-cli</id>
    <link href="https://github.com/datastax-labs/astra-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DataStax Astra automation CLI https://astra.datastax.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;astra-cli&lt;/h1&gt; &#xA;&lt;p&gt;Apache 2.0 licensed Astra Cloud Management CLI&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/datastax-labs/astra-cli/actions/workflows/go.yaml&#34;&gt;&lt;img src=&#34;https://github.com/datastax-labs/astra-cli/actions/workflows/go.yaml/badge.svg?sanitize=true&#34; alt=&#34;.github/workflows/go.yaml&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/datastax-labs/astra-cli&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/datastax-labs/astra-cli&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/github/go-mod/go-version/datastax-labs/astra-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/datastax-labs/astra-cli&#34; alt=&#34;GitHub go.mod Go version of a Go module&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/datastax-labs/astra-cli/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/datastax-labs/astra-cli?include_prereleases&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/datastax-labs/astra-cli&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/datastax-labs/astra-cli/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;status&lt;/h2&gt; &#xA;&lt;p&gt;Ready for production&lt;/p&gt; &#xA;&lt;h2&gt;How to install - install script&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;/bin/bash -c &#34;$(curl -fsSL &lt;a href=&#34;https://raw.githubusercontent.com/datastax-labs/astra-cli/main/script/install-astra.sh&#34;&gt;https://raw.githubusercontent.com/datastax-labs/astra-cli/main/script/install-astra.sh&lt;/a&gt;)&#34;&lt;/li&gt; &#xA; &lt;li&gt;astra login&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install - Release Binaries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;download a &lt;a href=&#34;https://github.com/datastax-labs/astra-cli/releases&#34;&gt;release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;tar zxvf &#xA;  &lt;download&gt;&lt;/download&gt;&lt;/li&gt; &#xA; &lt;li&gt;cd &#xA;  &lt;extracted folder&gt;&lt;/extracted&gt;&lt;/li&gt; &#xA; &lt;li&gt;./astra&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install - From Source&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://golang.org/dl/&#34;&gt;Go 1.17&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;git clone git@github.com:datastax-labs/astra-cli.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;./scripts/build&lt;/code&gt; or &lt;code&gt;go build -o ./bin/astra .&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;login&lt;/li&gt; &#xA; &lt;li&gt;execute commands on your database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;login with token&lt;/h3&gt; &#xA;&lt;p&gt;After creating a token with rights to use the devops api&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra login --token &#34;changed&#34;&#xA;Login information saved&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;login service account&lt;/h3&gt; &#xA;&lt;p&gt;After creating a service account on the Astra page&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra login --id &#34;changed&#34; --name &#34;changed&#34; --secret &#34;changed&#34;&#xA;Login information saved&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;login service account with json&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra login --json &#39;{&#34;clientId&#34;:&#34;changed&#34;,&#34;clientName&#34;:&#34;change@me.com&#34;,&#34;clientSecret&#34;:&#34;changed&#34;}&#39;&#xA;Login information saved&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;creating database&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db create -v --keyspace myks --name mydb &#xA;............&#xA;database 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b created&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;get secure connection bundle&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db secBundle 3c577e51-4ff5-4551-86a4-41d475c61822 -d external -l external.zip            &#xA;file external.zip saved 12072 bytes written&#xA;astra db secBundle 3c577e51-4ff5-4551-86a4-41d475c61822 -d internal -l internal.zip            &#xA;file internal.zip saved 12066 bytes written&#xA;astra db secBundle 3c577e51-4ff5-4551-86a4-41d475c61822 -d proxy-internal -l proxy-internal.zip &#xA;file proxy-internal.zip saved 348 bytes written&#xA;astra db secBundle 3c577e51-4ff5-4551-86a4-41d475c61822 -d proxy-external -l proxy-external.zip &#xA;file proxy-external.zip saved 339 bytes written&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;get secure connection bundle URLs&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db secBundle 3c577e51-4ff5-4551-86a4-41d475c61822 -o list         &#xA;  external bundle: changed&#xA;  internal bundle: changed&#xA;  external proxy: changed&#xA;  internal proxy: changed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;listing databases&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db list                                                             &#xA;name id                                   status&#xA;mydb 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b ACTIVE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;listing databases in json&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db list -o json&#xA;[&#xA;  {&#xA;    &#34;id&#34;: &#34;2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b&#34;,&#xA;    &#34;orgId&#34;: &#34;changed&#34;,&#xA;    &#34;ownerId&#34;: &#34;changed&#34;,&#xA;    &#34;info&#34;: {&#xA;      &#34;name&#34;: &#34;mydb&#34;,&#xA;      &#34;keyspace&#34;: &#34;myks&#34;,&#xA;      &#34;cloudProvider&#34;: &#34;GCP&#34;,&#xA;      &#34;tier&#34;: &#34;developer&#34;,&#xA;      &#34;capacityUnits&#34;: 1,&#xA;      &#34;region&#34;: &#34;us-east1&#34;,&#xA;      &#34;user&#34;: &#34;dbuser&#34;,&#xA;      &#34;password&#34;: &#34;&#34;,&#xA;      &#34;additionalKeyspaces&#34;: null,&#xA;      &#34;cost&#34;: null&#xA;    },&#xA;    &#34;creationTime&#34;: &#34;2021-02-24T17:23:19Z&#34;,&#xA;    &#34;terminationTime&#34;: &#34;0001-01-01T00:00:00Z&#34;,&#xA;    &#34;status&#34;: &#34;ACTIVE&#34;,&#xA;    &#34;storage&#34;: {&#xA;      &#34;nodeCount&#34;: 1,&#xA;      &#34;replicationFactor&#34;: 1,&#xA;      &#34;totalStorage&#34;: 5,&#xA;      &#34;usedStorage&#34;: 0&#xA;    },&#xA;    &#34;availableActions&#34;: [&#xA;      &#34;park&#34;,&#xA;      &#34;getCreds&#34;,&#xA;      &#34;resetPassword&#34;,&#xA;      &#34;terminate&#34;,&#xA;      &#34;addKeyspace&#34;,&#xA;      &#34;removeKeyspace&#34;,&#xA;      &#34;addTable&#34;&#xA;    ],&#xA;    &#34;message&#34;: &#34;&#34;,&#xA;    &#34;studioUrl&#34;: &#34;https://2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b-us-east1.studio.astra.datastax.com&#34;,&#xA;    &#34;grafanaUrl&#34;: &#34;https://2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b-us-east1.dashboard.astra.datastax.com/d/cloud/dse-cluster-condensed?refresh=30s\u0026orgId=1\u0026kiosk=tv&#34;,&#xA;    &#34;cqlshUrl&#34;: &#34;https://2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b-us-east1.apps.astra.datastax.com/cqlsh&#34;,&#xA;    &#34;graphUrl&#34;: &#34;&#34;,&#xA;    &#34;dataEndpointUrl&#34;: &#34;https://2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b-us-east1.apps.astra.datastax.com/api/rest&#34;&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;getting database by id&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db get 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b&#xA;name id                                   status&#xA;mydb 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b ACTIVE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;getting database by id in json&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db get 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b -o json &#xA;{&#xA;  &#34;id&#34;: &#34;2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b&#34;,&#xA;  &#34;orgId&#34;: &#34;changed&#34;,&#xA;  &#34;ownerId&#34;: &#34;changed&#34;,&#xA;  &#34;info&#34;: {&#xA;    &#34;name&#34;: &#34;mydb&#34;,&#xA;    &#34;keyspace&#34;: &#34;myks&#34;,&#xA;    &#34;cloudProvider&#34;: &#34;GCP&#34;,&#xA;    &#34;tier&#34;: &#34;developer&#34;,&#xA;    &#34;capacityUnits&#34;: 1,&#xA;    &#34;region&#34;: &#34;us-east1&#34;,&#xA;    &#34;user&#34;: &#34;dbuser&#34;,&#xA;    &#34;password&#34;: &#34;&#34;,&#xA;    &#34;additionalKeyspaces&#34;: null,&#xA;    &#34;cost&#34;: null&#xA;  },&#xA;  &#34;creationTime&#34;: &#34;2021-02-24T17:23:19Z&#34;,&#xA;  &#34;terminationTime&#34;: &#34;0001-01-01T00:00:00Z&#34;,&#xA;  &#34;status&#34;: &#34;ACTIVE&#34;,&#xA;  &#34;storage&#34;: {&#xA;    &#34;nodeCount&#34;: 1,&#xA;    &#34;replicationFactor&#34;: 1,&#xA;    &#34;totalStorage&#34;: 5,&#xA;    &#34;usedStorage&#34;: 0&#xA;  },&#xA;  &#34;availableActions&#34;: [&#xA;    &#34;park&#34;,&#xA;    &#34;getCreds&#34;,&#xA;    &#34;resetPassword&#34;,&#xA;    &#34;terminate&#34;,&#xA;    &#34;addKeyspace&#34;,&#xA;    &#34;removeKeyspace&#34;,&#xA;    &#34;addTable&#34;&#xA;  ],&#xA;  &#34;message&#34;: &#34;&#34;,&#xA;  &#34;studioUrl&#34;: &#34;https://2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b-us-east1.studio.astra.datastax.com&#34;,&#xA;  &#34;grafanaUrl&#34;: &#34;https://2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b-us-east1.dashboard.astra.datastax.com/d/cloud/dse-cluster-condensed?refresh=30s\u0026orgId=1\u0026kiosk=tv&#34;,&#xA;  &#34;cqlshUrl&#34;: &#34;https://2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b-us-east1.apps.astra.datastax.com/cqlsh&#34;,&#xA;  &#34;graphUrl&#34;: &#34;&#34;,&#xA;  &#34;dataEndpointUrl&#34;: &#34;https://2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b-us-east1.apps.astra.datastax.com/api/rest&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;parking database&lt;/h3&gt; &#xA;&lt;p&gt;NOTE: Does not work on serverless&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db park -v 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b         &#xA;starting to park database 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b&#xA;...........&#xA;database 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b parked&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;unparking database&lt;/h3&gt; &#xA;&lt;p&gt;NOTE: Does not work on serverless&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db unpark -v 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b&#xA;starting to unpark database 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b&#xA;...........&#xA;database 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b unparked&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;deleting database&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db delete -v 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b&#xA;starting to delete database 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b&#xA;database 2c3bc0d6-5e3e-4d77-81c8-d95a35bdc58b deleted&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;resizing&lt;/h3&gt; &#xA;&lt;p&gt;I did not have a paid account to verify this works, but you can see it succesfully starts the process&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;astra db resize -v 72c4d35b-1875-495a-b5f1-97329d90b6c5 2                    &#xA;unable to unpark &#39;72c4d35b-1875-495a-b5f1-97329d90b6c5&#39; with error expected status code 2xx but had: 400 error was [map[ID:2.000009e+06 message:resizing is not supported for this database tier]]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>vercel/turborepo</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/vercel/turborepo</id>
    <link href="https://github.com/vercel/turborepo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The High-performance Build System for JavaScript &amp; TypeScript Codebases&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;340&#34; alt=&#34;Turborepo logo&#34; src=&#34;https://user-images.githubusercontent.com/4060187/106504110-82f58d00-6494-11eb-87b7-a16d4f68bc5a.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;npm version&#34; href=&#34;https://www.npmjs.com/package/turbo&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/npm/v/turbo&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Vercel logo&#34; href=&#34;https://vercel.com&#34;&gt; &lt;img src=&#34;https://badgen.net/badge/icon/Made%20By%20Vercel?icon=vercel&amp;amp;label&amp;amp;color=black&amp;amp;labelColor=black&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4060187/148454607-f65de1fb-2d46-4594-ad95-2234815338f3.png&#34; alt=&#34;turbo-screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started / Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://turborepo.org&#34;&gt;https://turborepo.org&lt;/a&gt; to view the full documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;The Turborepo community can be found on &lt;a href=&#34;https://github.com/vercel/turborepo/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; &#xA;&lt;p&gt;To chat with other community members, you can join the &lt;a href=&#34;https://turborepo.org/discord&#34;&gt;Turborepo Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://github.com/vercel/turborepo/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; applies to all Turborepo community channels.&lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://twitter.com/turborepo&#34;&gt;@turborepo&lt;/a&gt; on Twitter and for project updates&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jared Palmer (&lt;a href=&#34;https://twitter.com/jaredpalmer&#34;&gt;@jaredpalmer&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>datastax/cql-proxy</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/datastax/cql-proxy</id>
    <link href="https://github.com/datastax/cql-proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A client-side CQL proxy/sidecar.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cql-proxy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/datastax/cql-proxy/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Action&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/datastax/cql-proxy&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/datastax/cql-proxy&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#what-is-cqlproxy&#34;&gt;What is the cql-proxy?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#when-to-use-cql-proxy&#34;&gt;When to use cql-proxy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#locally-build-and-run&#34;&gt;Locally build and run&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#run-a-cql-proxy-docker-image&#34;&gt;Run a &lt;code&gt;cql-proxy&lt;/code&gt; docker image&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#use-kubernetes&#34;&gt;Use Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#known-issues&#34;&gt;Known issues&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/datastax/cql-proxy#token-aware-load-balancing&#34;&gt;Token-aware load balancing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is &lt;code&gt;cql-proxy&lt;/code&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/datastax/cql-proxy/main/cql-proxy.png&#34; alt=&#34;cql-proxy&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cql-proxy&lt;/code&gt; is designed to forward your application&#39;s CQL traffic to an appropriate database service. It listens on a local address and securely forwards that traffic.&lt;/p&gt; &#xA;&lt;h2&gt;When to use &lt;code&gt;cql-proxy&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;cql-proxy&lt;/code&gt; sidecar enables unsupported CQL drivers to work with &lt;a href=&#34;https://astra.datastax.com/&#34;&gt;DataStax Astra&lt;/a&gt;. These drivers include both legacy DataStax &lt;a href=&#34;https://docs.datastax.com/en/driver-matrix/doc/driver_matrix/common/driverMatrix.html&#34;&gt;drivers&lt;/a&gt; and community-maintained CQL drivers, such as the &lt;a href=&#34;https://github.com/gocql/gocql&#34;&gt;gocql&lt;/a&gt; driver and the &lt;a href=&#34;https://github.com/scylladb/scylla-rust-driver&#34;&gt;rust-driver&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cql-proxy&lt;/code&gt; also enables applications that are currently using &lt;a href=&#34;https://cassandra.apache.org/&#34;&gt;Apache Cassandra&lt;/a&gt; or &lt;a href=&#34;https://www.datastax.com/products/datastax-enterprise&#34;&gt;DataStax Enterprise (DSE)&lt;/a&gt; to use Astra without requiring any code changes. Your application just needs to be configured to use the proxy.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re building a new application using DataStax &lt;a href=&#34;https://docs.datastax.com/en/driver-matrix/doc/driver_matrix/common/driverMatrix.html&#34;&gt;drivers&lt;/a&gt;, &lt;code&gt;cql-proxy&lt;/code&gt; is not required, as the drivers can communicate directly with Astra. DataStax drivers have excellent support for Astra out-of-the-box, and are well-documented in the &lt;a href=&#34;https://docs.datastax.com/en/astra/docs/connecting-to-astra-databases-using-datastax-drivers.html&#34;&gt;driver-guide&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; flag to display a listing all flags and their corresponding descriptions and environment variables (shown below as items starting with &lt;code&gt;$&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ./cql-proxy -h&#xA;Usage: cql-proxy&#xA;&#xA;Flags:&#xA;  -h, --help                                              Show context-sensitive help.&#xA;  -b, --astra-bundle=STRING                               Path to secure connect bundle for an Astra database. Requires &#39;--username&#39; and &#39;--password&#39;. Ignored if using the&#xA;                                                          token or contact points option ($ASTRA_BUNDLE).&#xA;  -t, --astra-token=STRING                                Token used to authenticate to an Astra database. Requires &#39;--astra-database-id&#39;. Ignored if using the bundle path&#xA;                                                          or contact points option ($ASTRA_TOKEN).&#xA;  -i, --astra-database-id=STRING                          Database ID of the Astra database. Requires &#39;--astra-token&#39; ($ASTRA_DATABASE_ID)&#xA;      --astra-api-url=&#34;https://api.astra.datastax.com&#34;    URL for the Astra API ($ASTRA_API_URL)&#xA;  -c, --contact-points=CONTACT-POINTS,...                 Contact points for cluster. Ignored if using the bundle path or token option ($CONTACT_POINTS).&#xA;  -u, --username=STRING                                   Username to use for authentication ($USERNAME)&#xA;  -p, --password=STRING                                   Password to use for authentication ($PASSWORD)&#xA;  -r, --port=9042                                         Default port to use when connecting to cluster ($PORT)&#xA;  -n, --protocol-version=&#34;v4&#34;                             Initial protocol version to use when connecting to the backend cluster (default: v4, options: v3, v4, v5, DSEv1,&#xA;                                                          DSEv2) ($PROTOCOL_VERSION)&#xA;  -m, --max-protocol-version=&#34;v4&#34;                         Max protocol version supported by the backend cluster (default: v4, options: v3, v4, v5, DSEv1, DSEv2)&#xA;                                                          ($MAX_PROTOCOL_VERSION)&#xA;  -a, --bind=&#34;:9042&#34;                                      Address to use to bind server ($BIND)&#xA;  -f, --config=CONFIG                                     YAML configuration file ($CONFIG_FILE)&#xA;      --debug                                             Show debug logging ($DEBUG)&#xA;      --health-check                                      Enable liveness and readiness checks ($HEALTH_CHECK)&#xA;      --http-bind=&#34;:8000&#34;                                 Address to use to bind HTTP server used for health checks ($HTTP_BIND)&#xA;      --heartbeat-interval=30s                            Interval between performing heartbeats to the cluster ($HEARTBEAT_INTERVAL)&#xA;      --idle-timeout=60s                                  Duration between successful heartbeats before a connection to the cluster is considered unresponsive and closed&#xA;                                                          ($IDLE_TIMEOUT)&#xA;      --readiness-timeout=30s                             Duration the proxy is unable to connect to the backend cluster before it is considered not ready&#xA;                                                          ($READINESS_TIMEOUT)&#xA;      --idempotent-graph                                  If true it will treat all graph queries as idempotent by default and retry them automatically. It may be&#xA;                                                          dangerous to retry some graph queries -- use with caution ($IDEMPOTENT_GRAPH).&#xA;      --num-conns=1                                       Number of connection to create to each node of the backend cluster ($NUM_CONNS)&#xA;      --proxy-cert-file=STRING                            Path to a PEM encoded certificate file with its intermediate certificate chain. This is used to encrypt traffic&#xA;                                                          for proxy clients ($PROXY_CERT_FILE)&#xA;      --proxy-key-file=STRING                             Path to a PEM encoded private key file. This is used to encrypt traffic for proxy clients ($PROXY_KEY_FILE)&#xA;      --rpc-address=STRING                                Address to advertise in the &#39;system.local&#39; table for &#39;rpc_address&#39;. It must be set if configuring peer proxies&#xA;                                                          ($RPC_ADDRESS)&#xA;      --data-center=STRING                                Data center to use in system tables ($DATA_CENTER)&#xA;      --tokens=TOKENS,...                                 Tokens to use in the system tables. It&#39;s not recommended ($TOKENS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To pass configuration to &lt;code&gt;cql-proxy&lt;/code&gt;, either command-line flags, environment variables, or a configuration file can be used. Using the &lt;code&gt;docker&lt;/code&gt; method as an example, the following samples show how the token and database ID are defined with each method.&lt;/p&gt; &#xA;&lt;h3&gt;Using flags&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -p 9042:9042 \&#xA;  --rm datastax/cql-proxy:v0.1.3 \&#xA;  --astra-token &amp;lt;astra-token&amp;gt; --astra-database-id &amp;lt;astra-datbase-id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using environment variables&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -p 9042:9042  \&#xA;  --rm datastax/cql-proxy:v0.1.3 \&#xA;  -e ASTRA_TOKEN=&amp;lt;astra-token&amp;gt; -e ASTRA_DATABASE_ID=&amp;lt;astra-datbase-id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a configuration file&lt;/h3&gt; &#xA;&lt;p&gt;Proxy settings can also be passed using a configuration file with the &lt;code&gt;--config /path/to/proxy.yaml&lt;/code&gt; flag. This can be mixed and matched with command-line flags and environment variables. Here are some example configuration files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;contact-points:&#xA;  - 127.0.0.1&#xA;username: cassandra&#xA;password: cassandra&#xA;port: 9042&#xA;bind: 127.0.0.1:9042&#xA;# ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with a Astra token:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;astra-token: &amp;lt;astra-token&amp;gt;&#xA;astra-database-id: &amp;lt;astra-database-id&amp;gt;&#xA;bind: 127.0.0.1:9042&#xA;# ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All configuration keys match their command-line flag counterpart, e.g. &lt;code&gt;--astra-bundle&lt;/code&gt; is &lt;code&gt;astra-bundle:&lt;/code&gt;, &lt;code&gt;--contact-points&lt;/code&gt; is &lt;code&gt;contact-points:&lt;/code&gt; etc.&lt;/p&gt; &#xA;&lt;h4&gt;Setting up peer proxies&lt;/h4&gt; &#xA;&lt;p&gt;Multi-region failover with DC-aware load balancing policy is the most useful case for a multiple proxy setup.&lt;/p&gt; &#xA;&lt;p&gt;When configuring &lt;code&gt;peers:&lt;/code&gt; it is required to set &lt;code&gt;--rpc-address&lt;/code&gt; (or &lt;code&gt;rpc-address:&lt;/code&gt; in the yaml) for each proxy and it must match is corresponding &lt;code&gt;peers:&lt;/code&gt; entry. Also, &lt;code&gt;peers:&lt;/code&gt; is only available in the configuration file and cannot be set using a command-line flag.&lt;/p&gt; &#xA;&lt;h5&gt;Multi-region setup&lt;/h5&gt; &#xA;&lt;p&gt;Here&#39;s an example of configuring multi-region failover with two proxies. A proxy is started for each region of the cluster connecting to it using that region&#39;s bundle. They all share a common configuration file that contains the full list of proxies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Only bundles are supported for multi-region setups.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cql-proxy --astra-bundle astra-region1-bundle.zip --username token --password &amp;lt;astra-token&amp;gt; \&#xA;  --bind 127.0.0.1:9042 --rpc-address 127.0.0.1 --data-center dc-1 --config proxy.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cql-proxy ---astra-bundle astra-region2-bundle.zip --username token --password &amp;lt;astra-token&amp;gt; \&#xA;  --bind 127.0.0.2:9042 --rpc-address 127.0.0.2 --data-center dc-2 --config proxy.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The peers settings are configured using a yaml file. It&#39;s a good idea to explicitly provide the &lt;code&gt;--data-center&lt;/code&gt; flag, otherwise; these values are pulled from the backend cluster and would need to be pulled from the &lt;code&gt;system.local&lt;/code&gt; and &lt;code&gt;system.peers&lt;/code&gt; table to properly setup the peers &lt;code&gt;data-center:&lt;/code&gt; values. Here&#39;s an example &lt;code&gt;proxy.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;peers:&#xA;  - rpc-address: 127.0.0.1&#xA;    data-center: dc-1&#xA;  - rpc-address: 127.0.0.2&#xA;    data-center: dc-2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; It&#39;s okay for the &lt;code&gt;peers:&lt;/code&gt; to contain entries for the current proxy itself because they&#39;ll just be omitted.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;There are three methods for using &lt;code&gt;cql-proxy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Locally build and run &lt;code&gt;cql-proxy&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run a docker image that has &lt;code&gt;cql-proxy&lt;/code&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;Use a Kubernetes container to run &lt;code&gt;cql-proxy&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Locally build and run&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Build &lt;code&gt;cql-proxy&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run with your desired database.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://astra.datastax.com/&#34;&gt;DataStax Astra&lt;/a&gt; cluster:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./cql-proxy --astra-token &amp;lt;astra-token&amp;gt; --astra-database-id &amp;lt;astra-database-id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;astra-token&amp;gt;&lt;/code&gt; can be generated using these &lt;a href=&#34;https://docs.datastax.com/en/astra/docs/manage-application-tokens.html&#34;&gt;instructions&lt;/a&gt;. The proxy also supports using the &lt;a href=&#34;https://docs.datastax.com/en/astra/docs/obtaining-database-credentials.html#_getting_your_secure_connect_bundle&#34;&gt;Astra Secure Connect Bundle&lt;/a&gt; along with a client ID and secret generated using these &lt;a href=&#34;https://docs.datastax.com/en/astra/docs/manage-application-tokens.html&#34;&gt;instructions&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./cql-proxy --astra-bundle &amp;lt;your-secure-connect-zip&amp;gt; \&#xA;--username &amp;lt;astra-client-id&amp;gt; --password &amp;lt;astra-client-secret&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cassandra.apache.org/&#34;&gt;Apache Cassandra&lt;/a&gt; cluster:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./cql-proxy --contact-points &amp;lt;cluster node IPs or DNS names&amp;gt; [--username &amp;lt;username&amp;gt;] [--password &amp;lt;password&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Run a &lt;code&gt;cql-proxy&lt;/code&gt; docker image&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run with your desired database.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://astra.datastax.com/&#34;&gt;DataStax Astra&lt;/a&gt; cluster:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -p 9042:9042 \&#xA;  datastax/cql-proxy:v0.1.3 \&#xA;  --astra-token &amp;lt;astra-token&amp;gt; --astra-database-id &amp;lt;astra-database-id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;astra-token&amp;gt;&lt;/code&gt; can be generated using these &lt;a href=&#34;https://docs.datastax.com/en/astra/docs/manage-application-tokens.html&#34;&gt;instructions&lt;/a&gt;. The proxy also supports using the &lt;a href=&#34;https://docs.datastax.com/en/astra/docs/obtaining-database-credentials.html#_getting_your_secure_connect_bundle&#34;&gt;Astra Secure Connect Bundle&lt;/a&gt;, but it requires mounting the bundle to a volume in the container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -v &amp;lt;your-secure-connect-bundle.zip&amp;gt;:/tmp/scb.zip -p 9042:9042 \&#xA;--rm datastax/cql-proxy:v0.1.3 \&#xA;--astra-bundle /tmp/scb.zip --username &amp;lt;astra-client-id&amp;gt; --password &amp;lt;astra-client-secret&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cassandra.apache.org/&#34;&gt;Apache Cassandra&lt;/a&gt; cluster:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -p 9042:9042 \&#xA;  datastax/cql-proxy:v0.1.3 \&#xA;  --contact-points &amp;lt;cluster node IPs or DNS names&amp;gt; [--username &amp;lt;username&amp;gt;] [--password &amp;lt;password&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you wish to have the docker image removed after you are done with it, add &lt;code&gt;--rm&lt;/code&gt; before the image name &lt;code&gt;datastax/cql-proxy:v0.1.3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Use Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;Using Kubernetes with &lt;code&gt;cql-proxy&lt;/code&gt; requires a number of steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate a token following the Astra &lt;a href=&#34;https://docs.datastax.com/en/astra/docs/manage-application-tokens.html#_create_application_token&#34;&gt;instructions&lt;/a&gt;. This step will display your Client ID, Client Secret, and Token; make sure you download the information for the next steps. Store the secure bundle in &lt;code&gt;/tmp/scb.zip&lt;/code&gt; to match the example below.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;cql-proxy.yaml&lt;/code&gt;. You&#39;ll need to add three sets of information: arguments, volume mounts, and volumes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Argument: Modify the local bundle location, username and password, using the client ID and client secret obtained in the last step to the container argument.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;command: [&#34;./cql-proxy&#34;]&#xA;args: [&#34;--astra-bundle=/tmp/scb.zip&#34;,&#34;--username=Client ID&#34;,&#34;--password=Client Secret&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Volume mounts: Modify &lt;code&gt;/tmp/&lt;/code&gt; as a volume mount as required.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;volumeMounts:&#xA;  - name: my-cm-vol&#xA;  mountPath: /tmp/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Volume: Modify the &lt;code&gt;configMap&lt;/code&gt; filename as required. In this example, it is named &lt;code&gt;cql-proxy-configmap&lt;/code&gt;. Use the same name for the &lt;code&gt;volumes&lt;/code&gt; that you used for the &lt;code&gt;volumeMounts&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;volumes:&#xA;  - name: my-cm-vol&#xA;    configMap:&#xA;      name: cql-proxy-configmap        &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a configmap. Use the same secure bundle that was specified in the &lt;code&gt;cql-proxy.yaml&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl create configmap cql-proxy-configmap --from-file /tmp/scb.zip &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check the configmap that was created.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl describe configmap config&#xA;  &#xA;  Name:         config&#xA;  Namespace:    default&#xA;  Labels:       &amp;lt;none&amp;gt;&#xA;  Annotations:  &amp;lt;none&amp;gt;&#xA;&#xA;  Data&#xA;  ====&#xA;&#xA;  BinaryData&#xA;  ====&#xA;  scb.zip: 12311 bytes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a Kubernetes deployment with the YAML file you created:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl create -f cql-proxy.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check the logs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl logs &amp;lt;deployment-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;h3&gt;Token-aware load balancing&lt;/h3&gt; &#xA;&lt;p&gt;Drivers that use token-aware load balancing may print a warning or may not work when using cql-proxy. Because cql-proxy abstracts the backend cluster as a single endpoint this doesn&#39;t always work well with token-aware drivers that expect there to be at least &#34;replication factor&#34; number of nodes in the cluster. Many drivers print a warning (which can be ignored) and fallback to something like round-robin, but other drivers might fail with an error. For the drivers that fail with an error it is required that they disable token-aware or configure the round-robin load balancing policy.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spf13/viper</title>
    <updated>2022-05-29T02:11:03Z</updated>
    <id>tag:github.com,2022-05-29:/spf13/viper</id>
    <link href="https://github.com/spf13/viper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go configuration with fangs&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;h2&gt;Viper v2 feedback&lt;/h2&gt; &#xA; &lt;p&gt;Viper is heading towards v2 and we would love to hear what &lt;em&gt;&lt;strong&gt;you&lt;/strong&gt;&lt;/em&gt; would like to see in it. Share your thoughts here: &lt;a href=&#34;https://forms.gle/R6faU74qPRPAzchZ9&#34;&gt;https://forms.gle/R6faU74qPRPAzchZ9&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/spf13/viper/master/.github/logo.png?raw=true&#34; alt=&#34;Viper&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/avelino/awesome-go#configuration&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge-flat.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repl.it/@sagikazarmark/Viper-example#main.go&#34;&gt;&lt;img src=&#34;https://repl.it/badge/github/sagikazarmark/Viper-example&#34; alt=&#34;run on repl.it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/spf13/viper/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/spf13/viper/CI?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/spf13/viper?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/spf13/viper&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/spf13/viper&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/spf13/viper?style=flat-square&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/go%20version-%3E=1.15-61CFDD.svg?style=flat-square&#34; alt=&#34;Go Version&#34;&gt; &lt;a href=&#34;https://pkg.go.dev/mod/github.com/spf13/viper&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/mod/github.com/spf13/viper&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Go configuration with fangs!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Many Go projects are built using Viper including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rexray.readthedocs.org/en/stable/&#34;&gt;EMC RexRay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Imgur/incus&#34;&gt;Imgur’s Incus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nanobox-io/nanobox&#34;&gt;Nanobox&lt;/a&gt;/&lt;a href=&#34;https://github.com/nanopack&#34;&gt;Nanopack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/Notary&#34;&gt;Docker Notary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bloomapi.com/&#34;&gt;BloomApi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/digitalocean/doctl&#34;&gt;doctl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jgsqware/clairctl&#34;&gt;Clairctl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mercure.rocks&#34;&gt;Mercure&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get github.com/spf13/viper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Viper uses &lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34;&gt;Go Modules&lt;/a&gt; to manage dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;What is Viper?&lt;/h2&gt; &#xA;&lt;p&gt;Viper is a complete configuration solution for Go applications including 12-Factor apps. It is designed to work within an application, and can handle all types of configuration needs and formats. It supports:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;setting defaults&lt;/li&gt; &#xA; &lt;li&gt;reading from JSON, TOML, YAML, HCL, envfile and Java properties config files&lt;/li&gt; &#xA; &lt;li&gt;live watching and re-reading of config files (optional)&lt;/li&gt; &#xA; &lt;li&gt;reading from environment variables&lt;/li&gt; &#xA; &lt;li&gt;reading from remote config systems (etcd or Consul), and watching changes&lt;/li&gt; &#xA; &lt;li&gt;reading from command line flags&lt;/li&gt; &#xA; &lt;li&gt;reading from buffer&lt;/li&gt; &#xA; &lt;li&gt;setting explicit values&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Viper can be thought of as a registry for all of your applications configuration needs.&lt;/p&gt; &#xA;&lt;h2&gt;Why Viper?&lt;/h2&gt; &#xA;&lt;p&gt;When building a modern application, you don’t want to worry about configuration file formats; you want to focus on building awesome software. Viper is here to help with that.&lt;/p&gt; &#xA;&lt;p&gt;Viper does the following for you:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find, load, and unmarshal a configuration file in JSON, TOML, YAML, HCL, INI, envfile or Java properties formats.&lt;/li&gt; &#xA; &lt;li&gt;Provide a mechanism to set default values for your different configuration options.&lt;/li&gt; &#xA; &lt;li&gt;Provide a mechanism to set override values for options specified through command line flags.&lt;/li&gt; &#xA; &lt;li&gt;Provide an alias system to easily rename parameters without breaking existing code.&lt;/li&gt; &#xA; &lt;li&gt;Make it easy to tell the difference between when a user has provided a command line or config file which is the same as the default.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Viper uses the following precedence order. Each item takes precedence over the item below it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;explicit call to &lt;code&gt;Set&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;flag&lt;/li&gt; &#xA; &lt;li&gt;env&lt;/li&gt; &#xA; &lt;li&gt;config&lt;/li&gt; &#xA; &lt;li&gt;key/value store&lt;/li&gt; &#xA; &lt;li&gt;default&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Viper configuration keys are case insensitive. There are ongoing discussions about making that optional.&lt;/p&gt; &#xA;&lt;h2&gt;Putting Values into Viper&lt;/h2&gt; &#xA;&lt;h3&gt;Establishing Defaults&lt;/h3&gt; &#xA;&lt;p&gt;A good configuration system will support default values. A default value is not required for a key, but it’s useful in the event that a key hasn&#39;t been set via config file, environment variable, remote configuration or flag.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.SetDefault(&#34;ContentDir&#34;, &#34;content&#34;)&#xA;viper.SetDefault(&#34;LayoutDir&#34;, &#34;layouts&#34;)&#xA;viper.SetDefault(&#34;Taxonomies&#34;, map[string]string{&#34;tag&#34;: &#34;tags&#34;, &#34;category&#34;: &#34;categories&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reading Config Files&lt;/h3&gt; &#xA;&lt;p&gt;Viper requires minimal configuration so it knows where to look for config files. Viper supports JSON, TOML, YAML, HCL, INI, envfile and Java Properties files. Viper can search multiple paths, but currently a single Viper instance only supports a single configuration file. Viper does not default to any configuration search paths leaving defaults decision to an application.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of how to use Viper to search for and read a configuration file. None of the specific paths are required, but at least one path should be provided where a configuration file is expected.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.SetConfigName(&#34;config&#34;) // name of config file (without extension)&#xA;viper.SetConfigType(&#34;yaml&#34;) // REQUIRED if the config file does not have the extension in the name&#xA;viper.AddConfigPath(&#34;/etc/appname/&#34;)   // path to look for the config file in&#xA;viper.AddConfigPath(&#34;$HOME/.appname&#34;)  // call multiple times to add many search paths&#xA;viper.AddConfigPath(&#34;.&#34;)               // optionally look for config in the working directory&#xA;err := viper.ReadInConfig() // Find and read the config file&#xA;if err != nil { // Handle errors reading the config file&#xA;&#x9;panic(fmt.Errorf(&#34;Fatal error config file: %w \n&#34;, err))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can handle the specific case where no config file is found like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;if err := viper.ReadInConfig(); err != nil {&#xA;&#x9;if _, ok := err.(viper.ConfigFileNotFoundError); ok {&#xA;&#x9;&#x9;// Config file not found; ignore error if desired&#xA;&#x9;} else {&#xA;&#x9;&#x9;// Config file was found but another error was produced&#xA;&#x9;}&#xA;}&#xA;&#xA;// Config file found and successfully parsed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE [since 1.6]:&lt;/em&gt; You can also have a file without an extension and specify the format programmaticaly. For those configuration files that lie in the home of the user without any extension like &lt;code&gt;.bashrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Writing Config Files&lt;/h3&gt; &#xA;&lt;p&gt;Reading from config files is useful, but at times you want to store all modifications made at run time. For that, a bunch of commands are available, each with its own purpose:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WriteConfig - writes the current viper configuration to the predefined path, if exists. Errors if no predefined path. Will overwrite the current config file, if it exists.&lt;/li&gt; &#xA; &lt;li&gt;SafeWriteConfig - writes the current viper configuration to the predefined path. Errors if no predefined path. Will not overwrite the current config file, if it exists.&lt;/li&gt; &#xA; &lt;li&gt;WriteConfigAs - writes the current viper configuration to the given filepath. Will overwrite the given file, if it exists.&lt;/li&gt; &#xA; &lt;li&gt;SafeWriteConfigAs - writes the current viper configuration to the given filepath. Will not overwrite the given file, if it exists.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As a rule of the thumb, everything marked with safe won&#39;t overwrite any file, but just create if not existent, whilst the default behavior is to create or truncate.&lt;/p&gt; &#xA;&lt;p&gt;A small examples section:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.WriteConfig() // writes current config to predefined path set by &#39;viper.AddConfigPath()&#39; and &#39;viper.SetConfigName&#39;&#xA;viper.SafeWriteConfig()&#xA;viper.WriteConfigAs(&#34;/path/to/my/.config&#34;)&#xA;viper.SafeWriteConfigAs(&#34;/path/to/my/.config&#34;) // will error since it has already been written&#xA;viper.SafeWriteConfigAs(&#34;/path/to/my/.other_config&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Watching and re-reading config files&lt;/h3&gt; &#xA;&lt;p&gt;Viper supports the ability to have your application live read a config file while running.&lt;/p&gt; &#xA;&lt;p&gt;Gone are the days of needing to restart a server to have a config take effect, viper powered applications can read an update to a config file while running and not miss a beat.&lt;/p&gt; &#xA;&lt;p&gt;Simply tell the viper instance to watchConfig. Optionally you can provide a function for Viper to run each time a change occurs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure you add all of the configPaths prior to calling &lt;code&gt;WatchConfig()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.OnConfigChange(func(e fsnotify.Event) {&#xA;&#x9;fmt.Println(&#34;Config file changed:&#34;, e.Name)&#xA;})&#xA;viper.WatchConfig()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reading Config from io.Reader&lt;/h3&gt; &#xA;&lt;p&gt;Viper predefines many configuration sources such as files, environment variables, flags, and remote K/V store, but you are not bound to them. You can also implement your own required configuration source and feed it to viper.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.SetConfigType(&#34;yaml&#34;) // or viper.SetConfigType(&#34;YAML&#34;)&#xA;&#xA;// any approach to require this configuration into your program.&#xA;var yamlExample = []byte(`&#xA;Hacker: true&#xA;name: steve&#xA;hobbies:&#xA;- skateboarding&#xA;- snowboarding&#xA;- go&#xA;clothing:&#xA;  jacket: leather&#xA;  trousers: denim&#xA;age: 35&#xA;eyes : brown&#xA;beard: true&#xA;`)&#xA;&#xA;viper.ReadConfig(bytes.NewBuffer(yamlExample))&#xA;&#xA;viper.Get(&#34;name&#34;) // this would be &#34;steve&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Overrides&lt;/h3&gt; &#xA;&lt;p&gt;These could be from a command line flag, or from your own application logic.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.Set(&#34;Verbose&#34;, true)&#xA;viper.Set(&#34;LogFile&#34;, LogFile)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Registering and Using Aliases&lt;/h3&gt; &#xA;&lt;p&gt;Aliases permit a single value to be referenced by multiple keys&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.RegisterAlias(&#34;loud&#34;, &#34;Verbose&#34;)&#xA;&#xA;viper.Set(&#34;verbose&#34;, true) // same result as next line&#xA;viper.Set(&#34;loud&#34;, true)   // same result as prior line&#xA;&#xA;viper.GetBool(&#34;loud&#34;) // true&#xA;viper.GetBool(&#34;verbose&#34;) // true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Working with Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;Viper has full support for environment variables. This enables 12 factor applications out of the box. There are five methods that exist to aid working with ENV:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AutomaticEnv()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BindEnv(string...) : error&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SetEnvPrefix(string)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SetEnvKeyReplacer(string...) *strings.Replacer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AllowEmptyEnv(bool)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;When working with ENV variables, it’s important to recognize that Viper treats ENV variables as case sensitive.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Viper provides a mechanism to try to ensure that ENV variables are unique. By using &lt;code&gt;SetEnvPrefix&lt;/code&gt;, you can tell Viper to use a prefix while reading from the environment variables. Both &lt;code&gt;BindEnv&lt;/code&gt; and &lt;code&gt;AutomaticEnv&lt;/code&gt; will use this prefix.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;BindEnv&lt;/code&gt; takes one or more parameters. The first parameter is the key name, the rest are the name of the environment variables to bind to this key. If more than one are provided, they will take precedence in the specified order. The name of the environment variable is case sensitive. If the ENV variable name is not provided, then Viper will automatically assume that the ENV variable matches the following format: prefix + &#34;_&#34; + the key name in ALL CAPS. When you explicitly provide the ENV variable name (the second parameter), it &lt;strong&gt;does not&lt;/strong&gt; automatically add the prefix. For example if the second parameter is &#34;id&#34;, Viper will look for the ENV variable &#34;ID&#34;.&lt;/p&gt; &#xA;&lt;p&gt;One important thing to recognize when working with ENV variables is that the value will be read each time it is accessed. Viper does not fix the value when the &lt;code&gt;BindEnv&lt;/code&gt; is called.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;AutomaticEnv&lt;/code&gt; is a powerful helper especially when combined with &lt;code&gt;SetEnvPrefix&lt;/code&gt;. When called, Viper will check for an environment variable any time a &lt;code&gt;viper.Get&lt;/code&gt; request is made. It will apply the following rules. It will check for an environment variable with a name matching the key uppercased and prefixed with the &lt;code&gt;EnvPrefix&lt;/code&gt; if set.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SetEnvKeyReplacer&lt;/code&gt; allows you to use a &lt;code&gt;strings.Replacer&lt;/code&gt; object to rewrite Env keys to an extent. This is useful if you want to use &lt;code&gt;-&lt;/code&gt; or something in your &lt;code&gt;Get()&lt;/code&gt; calls, but want your environmental variables to use &lt;code&gt;_&lt;/code&gt; delimiters. An example of using it can be found in &lt;code&gt;viper_test.go&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can use &lt;code&gt;EnvKeyReplacer&lt;/code&gt; with &lt;code&gt;NewWithOptions&lt;/code&gt; factory function. Unlike &lt;code&gt;SetEnvKeyReplacer&lt;/code&gt;, it accepts a &lt;code&gt;StringReplacer&lt;/code&gt; interface allowing you to write custom string replacing logic.&lt;/p&gt; &#xA;&lt;p&gt;By default empty environment variables are considered unset and will fall back to the next configuration source. To treat empty environment variables as set, use the &lt;code&gt;AllowEmptyEnv&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;h4&gt;Env example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;SetEnvPrefix(&#34;spf&#34;) // will be uppercased automatically&#xA;BindEnv(&#34;id&#34;)&#xA;&#xA;os.Setenv(&#34;SPF_ID&#34;, &#34;13&#34;) // typically done outside of the app&#xA;&#xA;id := Get(&#34;id&#34;) // 13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Working with Flags&lt;/h3&gt; &#xA;&lt;p&gt;Viper has the ability to bind to flags. Specifically, Viper supports &lt;code&gt;Pflags&lt;/code&gt; as used in the &lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;Like &lt;code&gt;BindEnv&lt;/code&gt;, the value is not set when the binding method is called, but when it is accessed. This means you can bind as early as you want, even in an &lt;code&gt;init()&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;p&gt;For individual flags, the &lt;code&gt;BindPFlag()&lt;/code&gt; method provides this functionality.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;serverCmd.Flags().Int(&#34;port&#34;, 1138, &#34;Port to run Application server on&#34;)&#xA;viper.BindPFlag(&#34;port&#34;, serverCmd.Flags().Lookup(&#34;port&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also bind an existing set of pflags (pflag.FlagSet):&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;pflag.Int(&#34;flagname&#34;, 1234, &#34;help message for flagname&#34;)&#xA;&#xA;pflag.Parse()&#xA;viper.BindPFlags(pflag.CommandLine)&#xA;&#xA;i := viper.GetInt(&#34;flagname&#34;) // retrieve values from viper instead of pflag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The use of &lt;a href=&#34;https://github.com/spf13/pflag/&#34;&gt;pflag&lt;/a&gt; in Viper does not preclude the use of other packages that use the &lt;a href=&#34;https://golang.org/pkg/flag/&#34;&gt;flag&lt;/a&gt; package from the standard library. The pflag package can handle the flags defined for the flag package by importing these flags. This is accomplished by a calling a convenience function provided by the pflag package called AddGoFlagSet().&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;flag&#34;&#xA;&#x9;&#34;github.com/spf13/pflag&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#xA;&#x9;// using standard library &#34;flag&#34; package&#xA;&#x9;flag.Int(&#34;flagname&#34;, 1234, &#34;help message for flagname&#34;)&#xA;&#xA;&#x9;pflag.CommandLine.AddGoFlagSet(flag.CommandLine)&#xA;&#x9;pflag.Parse()&#xA;&#x9;viper.BindPFlags(pflag.CommandLine)&#xA;&#xA;&#x9;i := viper.GetInt(&#34;flagname&#34;) // retrieve value from viper&#xA;&#xA;&#x9;// ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Flag interfaces&lt;/h4&gt; &#xA;&lt;p&gt;Viper provides two Go interfaces to bind other flag systems if you don’t use &lt;code&gt;Pflags&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;FlagValue&lt;/code&gt; represents a single flag. This is a very simple example on how to implement this interface:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type myFlag struct {}&#xA;func (f myFlag) HasChanged() bool { return false }&#xA;func (f myFlag) Name() string { return &#34;my-flag-name&#34; }&#xA;func (f myFlag) ValueString() string { return &#34;my-flag-value&#34; }&#xA;func (f myFlag) ValueType() string { return &#34;string&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once your flag implements this interface, you can simply tell Viper to bind it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.BindFlagValue(&#34;my-flag-name&#34;, myFlag{})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;FlagValueSet&lt;/code&gt; represents a group of flags. This is a very simple example on how to implement this interface:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type myFlagSet struct {&#xA;&#x9;flags []myFlag&#xA;}&#xA;&#xA;func (f myFlagSet) VisitAll(fn func(FlagValue)) {&#xA;&#x9;for _, flag := range flags {&#xA;&#x9;&#x9;fn(flag)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once your flag set implements this interface, you can simply tell Viper to bind it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;fSet := myFlagSet{&#xA;&#x9;flags: []myFlag{myFlag{}, myFlag{}},&#xA;}&#xA;viper.BindFlagValues(&#34;my-flags&#34;, fSet)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Remote Key/Value Store Support&lt;/h3&gt; &#xA;&lt;p&gt;To enable remote support in Viper, do a blank import of the &lt;code&gt;viper/remote&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;import _ &#34;github.com/spf13/viper/remote&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Viper will read a config string (as JSON, TOML, YAML, HCL or envfile) retrieved from a path in a Key/Value store such as etcd or Consul. These values take precedence over default values, but are overridden by configuration values retrieved from disk, flags, or environment variables.&lt;/p&gt; &#xA;&lt;p&gt;Viper uses &lt;a href=&#34;https://github.com/bketelsen/crypt&#34;&gt;crypt&lt;/a&gt; to retrieve configuration from the K/V store, which means that you can store your configuration values encrypted and have them automatically decrypted if you have the correct gpg keyring. Encryption is optional.&lt;/p&gt; &#xA;&lt;p&gt;You can use remote configuration in conjunction with local configuration, or independently of it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;crypt&lt;/code&gt; has a command-line helper that you can use to put configurations in your K/V store. &lt;code&gt;crypt&lt;/code&gt; defaults to etcd on &lt;a href=&#34;http://127.0.0.1:4001&#34;&gt;http://127.0.0.1:4001&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go get github.com/bketelsen/crypt/bin/crypt&#xA;$ crypt set -plaintext /config/hugo.json /Users/hugo/settings/config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Confirm that your value was set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ crypt get -plaintext /config/hugo.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;code&gt;crypt&lt;/code&gt; documentation for examples of how to set encrypted values, or how to use Consul.&lt;/p&gt; &#xA;&lt;h3&gt;Remote Key/Value Store Example - Unencrypted&lt;/h3&gt; &#xA;&lt;h4&gt;etcd&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.AddRemoteProvider(&#34;etcd&#34;, &#34;http://127.0.0.1:4001&#34;,&#34;/config/hugo.json&#34;)&#xA;viper.SetConfigType(&#34;json&#34;) // because there is no file extension in a stream of bytes, supported extensions are &#34;json&#34;, &#34;toml&#34;, &#34;yaml&#34;, &#34;yml&#34;, &#34;properties&#34;, &#34;props&#34;, &#34;prop&#34;, &#34;env&#34;, &#34;dotenv&#34;&#xA;err := viper.ReadRemoteConfig()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Consul&lt;/h4&gt; &#xA;&lt;p&gt;You need to set a key to Consul key/value storage with JSON value containing your desired config. For example, create a Consul key/value store key &lt;code&gt;MY_CONSUL_KEY&lt;/code&gt; with value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;port&#34;: 8080,&#xA;    &#34;hostname&#34;: &#34;myhostname.com&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.AddRemoteProvider(&#34;consul&#34;, &#34;localhost:8500&#34;, &#34;MY_CONSUL_KEY&#34;)&#xA;viper.SetConfigType(&#34;json&#34;) // Need to explicitly set this to json&#xA;err := viper.ReadRemoteConfig()&#xA;&#xA;fmt.Println(viper.Get(&#34;port&#34;)) // 8080&#xA;fmt.Println(viper.Get(&#34;hostname&#34;)) // myhostname.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Firestore&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.AddRemoteProvider(&#34;firestore&#34;, &#34;google-cloud-project-id&#34;, &#34;collection/document&#34;)&#xA;viper.SetConfigType(&#34;json&#34;) // Config&#39;s format: &#34;json&#34;, &#34;toml&#34;, &#34;yaml&#34;, &#34;yml&#34;&#xA;err := viper.ReadRemoteConfig()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, you&#39;re allowed to use &lt;code&gt;SecureRemoteProvider&lt;/code&gt; also&lt;/p&gt; &#xA;&lt;h3&gt;Remote Key/Value Store Example - Encrypted&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.AddSecureRemoteProvider(&#34;etcd&#34;,&#34;http://127.0.0.1:4001&#34;,&#34;/config/hugo.json&#34;,&#34;/etc/secrets/mykeyring.gpg&#34;)&#xA;viper.SetConfigType(&#34;json&#34;) // because there is no file extension in a stream of bytes,  supported extensions are &#34;json&#34;, &#34;toml&#34;, &#34;yaml&#34;, &#34;yml&#34;, &#34;properties&#34;, &#34;props&#34;, &#34;prop&#34;, &#34;env&#34;, &#34;dotenv&#34;&#xA;err := viper.ReadRemoteConfig()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Watching Changes in etcd - Unencrypted&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// alternatively, you can create a new viper instance.&#xA;var runtime_viper = viper.New()&#xA;&#xA;runtime_viper.AddRemoteProvider(&#34;etcd&#34;, &#34;http://127.0.0.1:4001&#34;, &#34;/config/hugo.yml&#34;)&#xA;runtime_viper.SetConfigType(&#34;yaml&#34;) // because there is no file extension in a stream of bytes, supported extensions are &#34;json&#34;, &#34;toml&#34;, &#34;yaml&#34;, &#34;yml&#34;, &#34;properties&#34;, &#34;props&#34;, &#34;prop&#34;, &#34;env&#34;, &#34;dotenv&#34;&#xA;&#xA;// read from remote config the first time.&#xA;err := runtime_viper.ReadRemoteConfig()&#xA;&#xA;// unmarshal config&#xA;runtime_viper.Unmarshal(&amp;amp;runtime_conf)&#xA;&#xA;// open a goroutine to watch remote changes forever&#xA;go func(){&#xA;&#x9;for {&#xA;&#x9;&#x9;time.Sleep(time.Second * 5) // delay after each request&#xA;&#xA;&#x9;&#x9;// currently, only tested with etcd support&#xA;&#x9;&#x9;err := runtime_viper.WatchRemoteConfig()&#xA;&#x9;&#x9;if err != nil {&#xA;&#x9;&#x9;&#x9;log.Errorf(&#34;unable to read remote config: %v&#34;, err)&#xA;&#x9;&#x9;&#x9;continue&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;// unmarshal new config into our runtime config struct. you can also use channel&#xA;&#x9;&#x9;// to implement a signal to notify the system of the changes&#xA;&#x9;&#x9;runtime_viper.Unmarshal(&amp;amp;runtime_conf)&#xA;&#x9;}&#xA;}()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Values From Viper&lt;/h2&gt; &#xA;&lt;p&gt;In Viper, there are a few ways to get a value depending on the value’s type. The following functions and methods exist:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Get(key string) : interface{}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetBool(key string) : bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetFloat64(key string) : float64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetInt(key string) : int&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetIntSlice(key string) : []int&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetString(key string) : string&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetStringMap(key string) : map[string]interface{}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetStringMapString(key string) : map[string]string&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetStringSlice(key string) : []string&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetTime(key string) : time.Time&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetDuration(key string) : time.Duration&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IsSet(key string) : bool&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AllSettings() : map[string]interface{}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;One important thing to recognize is that each Get function will return a zero value if it’s not found. To check if a given key exists, the &lt;code&gt;IsSet()&lt;/code&gt; method has been provided.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;viper.GetString(&#34;logfile&#34;) // case-insensitive Setting &amp;amp; Getting&#xA;if viper.GetBool(&#34;verbose&#34;) {&#xA;&#x9;fmt.Println(&#34;verbose enabled&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Accessing nested keys&lt;/h3&gt; &#xA;&lt;p&gt;The accessor methods also accept formatted paths to deeply nested keys. For example, if the following JSON file is loaded:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;host&#34;: {&#xA;        &#34;address&#34;: &#34;localhost&#34;,&#xA;        &#34;port&#34;: 5799&#xA;    },&#xA;    &#34;datastore&#34;: {&#xA;        &#34;metric&#34;: {&#xA;            &#34;host&#34;: &#34;127.0.0.1&#34;,&#xA;            &#34;port&#34;: 3099&#xA;        },&#xA;        &#34;warehouse&#34;: {&#xA;            &#34;host&#34;: &#34;198.0.0.1&#34;,&#xA;            &#34;port&#34;: 2112&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Viper can access a nested field by passing a &lt;code&gt;.&lt;/code&gt; delimited path of keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;GetString(&#34;datastore.metric.host&#34;) // (returns &#34;127.0.0.1&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This obeys the precedence rules established above; the search for the path will cascade through the remaining configuration registries until found.&lt;/p&gt; &#xA;&lt;p&gt;For example, given this configuration file, both &lt;code&gt;datastore.metric.host&lt;/code&gt; and &lt;code&gt;datastore.metric.port&lt;/code&gt; are already defined (and may be overridden). If in addition &lt;code&gt;datastore.metric.protocol&lt;/code&gt; was defined in the defaults, Viper would also find it.&lt;/p&gt; &#xA;&lt;p&gt;However, if &lt;code&gt;datastore.metric&lt;/code&gt; was overridden (by a flag, an environment variable, the &lt;code&gt;Set()&lt;/code&gt; method, …) with an immediate value, then all sub-keys of &lt;code&gt;datastore.metric&lt;/code&gt; become undefined, they are “shadowed” by the higher-priority configuration level.&lt;/p&gt; &#xA;&lt;p&gt;Viper can access array indices by using numbers in the path. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;host&#34;: {&#xA;        &#34;address&#34;: &#34;localhost&#34;,&#xA;        &#34;ports&#34;: [&#xA;            5799,&#xA;            6029&#xA;        ]&#xA;    },&#xA;    &#34;datastore&#34;: {&#xA;        &#34;metric&#34;: {&#xA;            &#34;host&#34;: &#34;127.0.0.1&#34;,&#xA;            &#34;port&#34;: 3099&#xA;        },&#xA;        &#34;warehouse&#34;: {&#xA;            &#34;host&#34;: &#34;198.0.0.1&#34;,&#xA;            &#34;port&#34;: 2112&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;GetInt(&#34;host.ports.1&#34;) // returns 6029&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Lastly, if there exists a key that matches the delimited key path, its value will be returned instead. E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;datastore.metric.host&#34;: &#34;0.0.0.0&#34;,&#xA;    &#34;host&#34;: {&#xA;        &#34;address&#34;: &#34;localhost&#34;,&#xA;        &#34;port&#34;: 5799&#xA;    },&#xA;    &#34;datastore&#34;: {&#xA;        &#34;metric&#34;: {&#xA;            &#34;host&#34;: &#34;127.0.0.1&#34;,&#xA;            &#34;port&#34;: 3099&#xA;        },&#xA;        &#34;warehouse&#34;: {&#xA;            &#34;host&#34;: &#34;198.0.0.1&#34;,&#xA;            &#34;port&#34;: 2112&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;GetString(&#34;datastore.metric.host&#34;) // returns &#34;0.0.0.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Extracting a sub-tree&lt;/h3&gt; &#xA;&lt;p&gt;When developing reusable modules, it&#39;s often useful to extract a subset of the configuration and pass it to a module. This way the module can be instantiated more than once, with different configurations.&lt;/p&gt; &#xA;&lt;p&gt;For example, an application might use multiple different cache stores for different purposes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;cache:&#xA;  cache1:&#xA;    max-items: 100&#xA;    item-size: 64&#xA;  cache2:&#xA;    max-items: 200&#xA;    item-size: 80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We could pass the cache name to a module (eg. &lt;code&gt;NewCache(&#34;cache1&#34;)&lt;/code&gt;), but it would require weird concatenation for accessing config keys and would be less separated from the global config.&lt;/p&gt; &#xA;&lt;p&gt;So instead of doing that let&#39;s pass a Viper instance to the constructor that represents a subset of the configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;cache1Config := viper.Sub(&#34;cache.cache1&#34;)&#xA;if cache1Config == nil { // Sub returns nil if the key cannot be found&#xA;&#x9;panic(&#34;cache configuration not found&#34;)&#xA;}&#xA;&#xA;cache1 := NewCache(cache1Config)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Always check the return value of &lt;code&gt;Sub&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if a key cannot be found.&lt;/p&gt; &#xA;&lt;p&gt;Internally, the &lt;code&gt;NewCache&lt;/code&gt; function can address &lt;code&gt;max-items&lt;/code&gt; and &lt;code&gt;item-size&lt;/code&gt; keys directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func NewCache(v *Viper) *Cache {&#xA;&#x9;return &amp;amp;Cache{&#xA;&#x9;&#x9;MaxItems: v.GetInt(&#34;max-items&#34;),&#xA;&#x9;&#x9;ItemSize: v.GetInt(&#34;item-size&#34;),&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The resulting code is easy to test, since it&#39;s decoupled from the main config structure, and easier to reuse (for the same reason).&lt;/p&gt; &#xA;&lt;h3&gt;Unmarshaling&lt;/h3&gt; &#xA;&lt;p&gt;You also have the option of Unmarshaling all or a specific value to a struct, map, etc.&lt;/p&gt; &#xA;&lt;p&gt;There are two methods to do this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Unmarshal(rawVal interface{}) : error&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UnmarshalKey(key string, rawVal interface{}) : error&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type config struct {&#xA;&#x9;Port int&#xA;&#x9;Name string&#xA;&#x9;PathMap string `mapstructure:&#34;path_map&#34;`&#xA;}&#xA;&#xA;var C config&#xA;&#xA;err := viper.Unmarshal(&amp;amp;C)&#xA;if err != nil {&#xA;&#x9;t.Fatalf(&#34;unable to decode into struct, %v&#34;, err)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to unmarshal configuration where the keys themselves contain dot (the default key delimiter), you have to change the delimiter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;v := viper.NewWithOptions(viper.KeyDelimiter(&#34;::&#34;))&#xA;&#xA;v.SetDefault(&#34;chart::values&#34;, map[string]interface{}{&#xA;&#x9;&#34;ingress&#34;: map[string]interface{}{&#xA;&#x9;&#x9;&#34;annotations&#34;: map[string]interface{}{&#xA;&#x9;&#x9;&#x9;&#34;traefik.frontend.rule.type&#34;:                 &#34;PathPrefix&#34;,&#xA;&#x9;&#x9;&#x9;&#34;traefik.ingress.kubernetes.io/ssl-redirect&#34;: &#34;true&#34;,&#xA;&#x9;&#x9;},&#xA;&#x9;},&#xA;})&#xA;&#xA;type config struct {&#xA;&#x9;Chart struct{&#xA;&#x9;&#x9;Values map[string]interface{}&#xA;&#x9;}&#xA;}&#xA;&#xA;var C config&#xA;&#xA;v.Unmarshal(&amp;amp;C)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Viper also supports unmarshaling into embedded structs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;/*&#xA;Example config:&#xA;&#xA;module:&#xA;    enabled: true&#xA;    token: 89h3f98hbwf987h3f98wenf89ehf&#xA;*/&#xA;type config struct {&#xA;&#x9;Module struct {&#xA;&#x9;&#x9;Enabled bool&#xA;&#xA;&#x9;&#x9;moduleConfig `mapstructure:&#34;,squash&#34;`&#xA;&#x9;}&#xA;}&#xA;&#xA;// moduleConfig could be in a module specific package&#xA;type moduleConfig struct {&#xA;&#x9;Token string&#xA;}&#xA;&#xA;var C config&#xA;&#xA;err := viper.Unmarshal(&amp;amp;C)&#xA;if err != nil {&#xA;&#x9;t.Fatalf(&#34;unable to decode into struct, %v&#34;, err)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Viper uses &lt;a href=&#34;https://github.com/mitchellh/mapstructure&#34;&gt;github.com/mitchellh/mapstructure&lt;/a&gt; under the hood for unmarshaling values which uses &lt;code&gt;mapstructure&lt;/code&gt; tags by default.&lt;/p&gt; &#xA;&lt;h3&gt;Decoding custom formats&lt;/h3&gt; &#xA;&lt;p&gt;A frequently requested feature for Viper is adding more value formats and decoders. For example, parsing character (dot, comma, semicolon, etc) separated strings into slices.&lt;/p&gt; &#xA;&lt;p&gt;This is already available in Viper using mapstructure decode hooks.&lt;/p&gt; &#xA;&lt;p&gt;Read more about the details in &lt;a href=&#34;https://sagikazarmark.hu/blog/decoding-custom-formats-with-viper/&#34;&gt;this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Marshalling to string&lt;/h3&gt; &#xA;&lt;p&gt;You may need to marshal all the settings held in viper into a string rather than write them to a file. You can use your favorite format&#39;s marshaller with the config returned by &lt;code&gt;AllSettings()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;&#x9;yaml &#34;gopkg.in/yaml.v2&#34;&#xA;&#x9;// ...&#xA;)&#xA;&#xA;func yamlStringSettings() string {&#xA;&#x9;c := viper.AllSettings()&#xA;&#x9;bs, err := yaml.Marshal(c)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatalf(&#34;unable to marshal config to YAML: %v&#34;, err)&#xA;&#x9;}&#xA;&#x9;return string(bs)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Viper or Vipers?&lt;/h2&gt; &#xA;&lt;p&gt;Viper comes ready to use out of the box. There is no configuration or initialization needed to begin using Viper. Since most applications will want to use a single central repository for their configuration, the viper package provides this. It is similar to a singleton.&lt;/p&gt; &#xA;&lt;p&gt;In all of the examples above, they demonstrate using viper in its singleton style approach.&lt;/p&gt; &#xA;&lt;h3&gt;Working with multiple vipers&lt;/h3&gt; &#xA;&lt;p&gt;You can also create many different vipers for use in your application. Each will have its own unique set of configurations and values. Each can read from a different config file, key value store, etc. All of the functions that viper package supports are mirrored as methods on a viper.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;x := viper.New()&#xA;y := viper.New()&#xA;&#xA;x.SetDefault(&#34;ContentDir&#34;, &#34;content&#34;)&#xA;y.SetDefault(&#34;ContentDir&#34;, &#34;foobar&#34;)&#xA;&#xA;//...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When working with multiple vipers, it is up to the user to keep track of the different vipers.&lt;/p&gt; &#xA;&lt;h2&gt;Q &amp;amp; A&lt;/h2&gt; &#xA;&lt;h3&gt;Why is it called “Viper”?&lt;/h3&gt; &#xA;&lt;p&gt;A: Viper is designed to be a &lt;a href=&#34;http://en.wikipedia.org/wiki/Viper_(G.I._Joe)&#34;&gt;companion&lt;/a&gt; to &lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;. While both can operate completely independently, together they make a powerful pair to handle much of your application foundation needs.&lt;/p&gt; &#xA;&lt;h3&gt;Why is it called “Cobra”?&lt;/h3&gt; &#xA;&lt;p&gt;Is there a better name for a &lt;a href=&#34;http://en.wikipedia.org/wiki/Cobra_Commander&#34;&gt;commander&lt;/a&gt;?&lt;/p&gt; &#xA;&lt;h3&gt;Does Viper support case sensitive keys?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; No.&lt;/p&gt; &#xA;&lt;p&gt;Viper merges configuration from various sources, many of which are either case insensitive or uses different casing than the rest of the sources (eg. env vars). In order to provide the best experience when using multiple sources, the decision has been made to make all keys case insensitive.&lt;/p&gt; &#xA;&lt;p&gt;There has been several attempts to implement case sensitivity, but unfortunately it&#39;s not that trivial. We might take a stab at implementing it in &lt;a href=&#34;https://github.com/spf13/viper/issues/772&#34;&gt;Viper v2&lt;/a&gt;, but despite the initial noise, it does not seem to be requested that much.&lt;/p&gt; &#xA;&lt;p&gt;You can vote for case sensitivity by filling out this feedback form: &lt;a href=&#34;https://forms.gle/R6faU74qPRPAzchZ9&#34;&gt;https://forms.gle/R6faU74qPRPAzchZ9&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Is it safe to concurrently read and write to a viper?&lt;/h3&gt; &#xA;&lt;p&gt;No, you will need to synchronize access to the viper yourself (for example by using the &lt;code&gt;sync&lt;/code&gt; package). Concurrent reads and writes can cause a panic.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/spf13/viper/master/TROUBLESHOOTING.md&#34;&gt;TROUBLESHOOTING.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>