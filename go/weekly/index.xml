<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-30T01:41:20Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/go-cmp</title>
    <updated>2024-06-30T01:41:20Z</updated>
    <id>tag:github.com,2024-06-30:/google/go-cmp</id>
    <link href="https://github.com/google/go-cmp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Package for comparing Go values in tests&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Package for equality of Go values&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/google/go-cmp/cmp&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=godev&amp;amp;message=reference&amp;amp;color=00add8&#34; alt=&#34;GoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/google/go-cmp/actions&#34;&gt;&lt;img src=&#34;https://github.com/google/go-cmp/actions/workflows/test.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This package is intended to be a more powerful and safer alternative to &lt;code&gt;reflect.DeepEqual&lt;/code&gt; for comparing whether two values are semantically equal.&lt;/p&gt; &#xA;&lt;p&gt;The primary features of &lt;code&gt;cmp&lt;/code&gt; are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;When the default behavior of equality does not suit the needs of the test, custom equality functions can override the equality operation. For example, an equality function may report floats as equal so long as they are within some tolerance of each other.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Types that have an &lt;code&gt;Equal&lt;/code&gt; method may use that method to determine equality. This allows package authors to determine the equality operation for the types that they define.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If no custom equality functions are used and no &lt;code&gt;Equal&lt;/code&gt; method is defined, equality is determined by recursively comparing the primitive kinds on both values, much like &lt;code&gt;reflect.DeepEqual&lt;/code&gt;. Unlike &lt;code&gt;reflect.DeepEqual&lt;/code&gt;, unexported fields are not compared by default; they result in panics unless suppressed by using an &lt;code&gt;Ignore&lt;/code&gt; option (see &lt;code&gt;cmpopts.IgnoreUnexported&lt;/code&gt;) or explicitly compared using the &lt;code&gt;AllowUnexported&lt;/code&gt; option.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://pkg.go.dev/github.com/google/go-cmp/cmp&#34;&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;This is not an official Google product.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;go get -u github.com/google/go-cmp/cmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;BSD - See &lt;a href=&#34;https://github.com/google/go-cmp/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alibaba/higress</title>
    <updated>2024-06-30T01:41:20Z</updated>
    <id>tag:github.com,2024-06-30:/alibaba/higress</id>
    <link href="https://github.com/alibaba/higress" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud Native API Gateway | 云原生API网关&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.alicdn.com/imgextra/i2/O1CN01NwxLDd20nxfGBjxmZ_!!6000000006895-2-tps-960-290.png&#34; alt=&#34;Higress&#34; width=&#34;240&#34; height=&#34;72.5&#34;&gt; &lt;br&gt; Cloud Native API Gateway &lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alibaba/higress/actions&#34;&gt;&lt;img src=&#34;https://github.com/alibaba/higress/actions/workflows/build-and-test.yaml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/alibaba/higress.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://higress.io/&#34;&gt;&lt;strong&gt;官网&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://higress.io/zh-cn/docs/overview/what-is-higress&#34;&gt;&lt;strong&gt;文档&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://higress.io/zh-cn/blog&#34;&gt;&lt;strong&gt;博客&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://higress.io/zh-cn/docs/developers/developers_dev&#34;&gt;&lt;strong&gt;开发指引&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://www.aliyun.com/product/aliware/mse?spm=higress-website.topbar.0.0.0&#34;&gt;&lt;strong&gt;Higress 企业版&lt;/strong&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/higress/main/README_EN.md&#34;&gt; English &lt;/a&gt;&lt;a&gt;&lt;/a&gt; | 中文 &lt;/p&gt; &#xA;&lt;p&gt;Higress 是基于阿里内部两年多的 Envoy Gateway 实践沉淀，以开源 &lt;a href=&#34;https://github.com/istio/istio&#34;&gt;Istio&lt;/a&gt; 与 &lt;a href=&#34;https://github.com/envoyproxy/envoy&#34;&gt;Envoy&lt;/a&gt; 为核心构建的云原生 API 网关。Higress 实现了安全防护网关、流量网关、微服务网关三层网关合一，可以显著降低网关的部署和运维成本。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.alicdn.com/imgextra/i1/O1CN01iO9ph825juHbOIg75_!!6000000007563-2-tps-2483-2024.png&#34; alt=&#34;arch&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/higress/main/#%E5%8A%9F%E8%83%BD%E5%B1%95%E7%A4%BA&#34;&gt;&lt;strong&gt;功能展示&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/higress/main/#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF&#34;&gt;&lt;strong&gt;使用场景&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/higress/main/#%E6%A0%B8%E5%BF%83%E4%BC%98%E5%8A%BF&#34;&gt;&lt;strong&gt;核心优势&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://higress.io/zh-cn/docs/user/quickstart&#34;&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/higress/main/#%E7%A4%BE%E5%8C%BA&#34;&gt;&lt;strong&gt;社区&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用场景&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Kubernetes Ingress 网关&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress 可以作为 K8s 集群的 Ingress 入口网关, 并且兼容了大量 K8s Nginx Ingress 的注解，可以从 K8s Nginx Ingress 快速平滑迁移到 Higress。&lt;/p&gt; &lt;p&gt;支持 &lt;a href=&#34;https://gateway-api.sigs.k8s.io/&#34;&gt;Gateway API&lt;/a&gt; 标准，支持用户从 Ingress API 平滑迁移到 Gateway API。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;微服务网关&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress 可以作为微服务网关, 能够对接多种类型的注册中心发现服务配置路由，例如 Nacos, ZooKeeper, Consul, Eureka 等。&lt;/p&gt; &lt;p&gt;并且深度集成了 &lt;a href=&#34;https://github.com/apache/dubbo&#34;&gt;Dubbo&lt;/a&gt;, &lt;a href=&#34;https://github.com/alibaba/nacos&#34;&gt;Nacos&lt;/a&gt;, &lt;a href=&#34;https://github.com/alibaba/Sentinel&#34;&gt;Sentinel&lt;/a&gt; 等微服务技术栈，基于 Envoy C++ 网关内核的出色性能，相比传统 Java 类微服务网关，可以显著降低资源使用率，减少成本。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;安全防护网关&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress 可以作为安全防护网关， 提供 WAF 的能力，并且支持多种认证鉴权策略，例如 key-auth, hmac-auth, jwt-auth, basic-auth, oidc 等。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;核心优势&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;生产等级&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;脱胎于阿里巴巴2年多生产验证的内部产品，支持每秒请求量达数十万级的大规模场景。&lt;/p&gt; &lt;p&gt;彻底摆脱 reload 引起的流量抖动，配置变更毫秒级生效且业务无感。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;平滑演进&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;支持 Nacos/Zookeeper/Eureka 等多种注册中心，可以不依赖 K8s Service 进行服务发现，支持非容器架构平滑演进到云原生架构。&lt;/p&gt; &lt;p&gt;支持从 Nginx Ingress Controller 平滑迁移，支持平滑过渡到 Gateway API，支持业务架构平滑演进到 ServiceMesh。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;兼收并蓄&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;兼容 Nginx Ingress Annotation 80%+ 的使用场景，且提供功能更丰富的 Higress Annotation 注解。&lt;/p&gt; &lt;p&gt;兼容 Ingress API/Gateway API/Istio API，可以组合多种 CRD 实现流量精细化管理。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;便于扩展&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;提供 Wasm、Lua、进程外三种插件扩展机制，支持多语言编写插件，生效粒度支持全局级、域名级，路由级。&lt;/p&gt; &lt;p&gt;插件支持热更新，变更插件逻辑和配置都对流量无损。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能展示&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;丰富的可观测&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;提供开箱即用的可观测，Grafana&amp;amp;Prometheus 可以使用内置的也可对接自建的&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/higress/main/docs/images/monitor.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;插件扩展机制&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;官方提供了多种插件，用户也可以&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/higress/main/plugins/wasm-go&#34;&gt;开发&lt;/a&gt;自己的插件，构建成 docker/oci 镜像后在控制台配置，可以实时变更插件逻辑，对流量完全无损。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/higress/main/docs/images/plugin.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;多种服务发现&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;默认提供 K8s Service 服务发现，通过配置可以对接 Nacos/ZooKeeper 等注册中心实现服务发现，也可以基于静态 IP 或者 DNS 来发现&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/higress/main/docs/images/service-source.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;域名和证书&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;可以创建管理 TLS 证书，并配置域名的 HTTP/HTTPS 行为，域名策略里支持对特定域名生效插件&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/higress/main/docs/images/domain.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;丰富的路由能力&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;通过上面定义的服务发现机制，发现的服务会出现在服务列表中；创建路由时，选择域名，定义路由匹配机制，再选择目标服务进行路由；路由策略里支持对特定路由生效插件&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/higress/main/docs/images/route-service.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;社区&lt;/h2&gt; &#xA;&lt;h3&gt;感谢&lt;/h3&gt; &#xA;&lt;p&gt;如果没有 Envoy 和 Istio 的开源工作，Higress 就不可能实现，在这里向这两个项目献上最诚挚的敬意。&lt;/p&gt; &#xA;&lt;h3&gt;交流群&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.alicdn.com/imgextra/i2/O1CN01qPd7Ix1uZPVEsWjWp_!!6000000006051-0-tps-720-405.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;技术分享&lt;/h3&gt; &#xA;&lt;p&gt;微信公众号：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.alicdn.com/imgextra/i1/O1CN01WnQt0q1tcmqVDU73u_!!6000000005923-0-tps-258-258.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/pprof</title>
    <updated>2024-06-30T01:41:20Z</updated>
    <id>tag:github.com,2024-06-30:/google/pprof</id>
    <link href="https://github.com/google/pprof" rel="alternate"></link>
    <summary type="html">&lt;p&gt;pprof is a tool for visualization and analysis of profiling data&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/google/pprof/actions&#34;&gt;&lt;img src=&#34;https://github.com/google/pprof/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;Github Action CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/google/pprof&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/google/pprof/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/google/pprof/profile&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/google/pprof/profile.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;pprof is a tool for visualization and analysis of profiling data.&lt;/p&gt; &#xA;&lt;p&gt;pprof reads a collection of profiling samples in profile.proto format and generates reports to visualize and help analyze the data. It can generate both text and graphical reports (through the use of the dot visualization package).&lt;/p&gt; &#xA;&lt;p&gt;profile.proto is a protocol buffer that describes a set of callstacks and symbolization information. A common usage is to represent a set of sampled callstacks from statistical profiling. The format is described on the &lt;a href=&#34;https://raw.githubusercontent.com/google/pprof/main/proto/profile.proto&#34;&gt;proto/profile.proto&lt;/a&gt; file. For details on protocol buffers, see &lt;a href=&#34;https://developers.google.com/protocol-buffers&#34;&gt;https://developers.google.com/protocol-buffers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Profiles can be read from a local file, or over http. Multiple profiles of the same type can be aggregated or compared.&lt;/p&gt; &#xA;&lt;p&gt;If the profile samples contain machine addresses, pprof can symbolize them through the use of the native binutils tools (addr2line and nm).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is not an official Google product.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building pprof&lt;/h1&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Go development kit of a &lt;a href=&#34;https://golang.org/doc/devel/release.html#policy&#34;&gt;supported version&lt;/a&gt;. Follow &lt;a href=&#34;http://golang.org/doc/code.html&#34;&gt;these instructions&lt;/a&gt; to prepare the environment.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Graphviz: &lt;a href=&#34;http://www.graphviz.org/&#34;&gt;http://www.graphviz.org/&lt;/a&gt; Optional, used to generate graphic visualizations of profiles&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To build and install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go install github.com/google/pprof@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The binary will be installed &lt;code&gt;$GOPATH/bin&lt;/code&gt; (&lt;code&gt;$HOME/go/bin&lt;/code&gt; by default).&lt;/p&gt; &#xA;&lt;h1&gt;Basic usage&lt;/h1&gt; &#xA;&lt;p&gt;pprof can read a profile from a file or directly from a server via http. Specify the profile input(s) in the command line, and use options to indicate how to format the report.&lt;/p&gt; &#xA;&lt;h2&gt;Generate a text report of the profile, sorted by hotness:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;% pprof -top [main_binary] profile.pb.gz&#xA;Where&#xA;    main_binary:  Local path to the main program binary, to enable symbolization&#xA;    profile.pb.gz: Local path to the profile in a compressed protobuf, or&#xA;                   URL to the http service that serves a profile.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Generate a graph in an SVG file, and open it with a web browser:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pprof -web [main_binary] profile.pb.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run pprof on interactive mode:&lt;/h2&gt; &#xA;&lt;p&gt;If no output formatting option is specified, pprof runs on interactive mode, where reads the profile and accepts interactive commands for visualization and refinement of the profile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pprof [main_binary] profile.pb.gz&#xA;&#xA;This will open a simple shell that takes pprof commands to generate reports.&#xA;Type &#39;help&#39; for available commands/options.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run pprof via a web interface&lt;/h2&gt; &#xA;&lt;p&gt;If the &lt;code&gt;-http&lt;/code&gt; flag is specified, pprof starts a web server at the specified host:port that provides an interactive web-based interface to pprof. Host is optional, and is &#34;localhost&#34; by default. Port is optional, and is a random available port by default. &lt;code&gt;-http=&#34;:&#34;&lt;/code&gt; starts a server locally at a random port.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pprof -http=[host]:[port] [main_binary] profile.pb.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The preceding command should automatically open your web browser at the right page; if not, you can manually visit the specified port in your web browser.&lt;/p&gt; &#xA;&lt;h2&gt;Using pprof with Linux Perf&lt;/h2&gt; &#xA;&lt;p&gt;pprof can read &lt;code&gt;perf.data&lt;/code&gt; files generated by the &lt;a href=&#34;https://perf.wiki.kernel.org/index.php/Main_Page&#34;&gt;Linux perf&lt;/a&gt; tool by using the &lt;code&gt;perf_to_profile&lt;/code&gt; program from the &lt;a href=&#34;https://github.com/google/perf_data_converter&#34;&gt;perf_data_converter&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;h2&gt;Viewing disassembly on Windows&lt;/h2&gt; &#xA;&lt;p&gt;To view disassembly of profiles collected from Go programs compiled as Windows executables, the executable must be built with &lt;code&gt;go build -buildmode=exe&lt;/code&gt;. LLVM or GCC must be installed, so required tools like &lt;code&gt;addr2line&lt;/code&gt; and &lt;code&gt;nm&lt;/code&gt; are available to &lt;code&gt;pprof&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Further documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/pprof/main/doc/README.md&#34;&gt;doc/README.md&lt;/a&gt; for more detailed end-user documentation.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/pprof/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for contribution documentation.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/pprof/main/proto/README.md&#34;&gt;proto/README.md&lt;/a&gt; for a description of the profile.proto format.&lt;/p&gt;</summary>
  </entry>
</feed>