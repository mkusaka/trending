<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-22T01:52:23Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yonahd/kor</title>
    <updated>2023-10-22T01:52:23Z</updated>
    <id>tag:github.com,2023-10-22:/yonahd/kor</id>
    <link href="https://github.com/yonahd/kor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Golang Tool to discover unused Kubernetes Resources&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/go-mod/go-version/yonahd/kor&#34; alt=&#34;GitHub go.mod Go version (subdirectory of monorepo)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/yonahd/kor?color=green&amp;amp;link=https://github.com/yonahd/kor/releases&#34; alt=&#34;GitHub release (with filter)&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/yonahdissen/kor&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/yonahd/kor&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/yonahd/kor/branch/main/graph/badge.svg?token=tNKcOjlxLo&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kor - Kubernetes Orphaned Resources Finder&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonahd/kor/main/images/kor_logo.png&#34; alt=&#34;Kor Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Kor is a tool to discover unused Kubernetes resources. Currently, Kor can identify and list unused:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ConfigMaps&lt;/li&gt; &#xA; &lt;li&gt;Secrets&lt;/li&gt; &#xA; &lt;li&gt;Services&lt;/li&gt; &#xA; &lt;li&gt;ServiceAccounts&lt;/li&gt; &#xA; &lt;li&gt;Deployments&lt;/li&gt; &#xA; &lt;li&gt;StatefulSets&lt;/li&gt; &#xA; &lt;li&gt;Roles&lt;/li&gt; &#xA; &lt;li&gt;HPAs&lt;/li&gt; &#xA; &lt;li&gt;PVCs&lt;/li&gt; &#xA; &lt;li&gt;Ingresses&lt;/li&gt; &#xA; &lt;li&gt;PDBs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yonahd/kor/main/images/screenshot.png&#34; alt=&#34;Kor Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download the binary for your operating system from the &lt;a href=&#34;https://github.com/yonahd/kor/releases&#34;&gt;releases page&lt;/a&gt; and add it to your system&#39;s PATH.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;For macOS users, you can install Kor using Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install kor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;Install the binary to your &lt;code&gt;$GOBIN&lt;/code&gt; or &lt;code&gt;$GOPATH/bin&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/yonahd/kor@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Run a container with your kubeconfig mounted:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --rm -i yonahdissen/kor&#xA;&#xA;docker run --rm -i -v &#34;/path/to/.kube/config:/root/.kube/config&#34; yonahdissen/kor all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Helm&lt;/h3&gt; &#xA;&lt;p&gt;Run as a cronjob in your Cluster (with an option for sending slack updates)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;helm upgrade -i kor \&#xA;    --namespace kor \&#xA;    --create-namespace \&#xA;    --set cronJob.enabled=true&#xA;    ./charts/kor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run as a deployment in your Cluster exposing prometheus metrics&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;helm upgrade -i kor \&#xA;    --namespace kor \&#xA;    --create-namespace \&#xA;    ./charts/kor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information see &lt;a href=&#34;https://raw.githubusercontent.com/yonahd/kor/main/#in-cluster-usage&#34;&gt;in cluster usage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Kor provides various subcommands to identify and list unused resources. The available commands are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;all&lt;/code&gt; - Gets all unused resources for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;configmap&lt;/code&gt; - Gets unused ConfigMaps for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;secret&lt;/code&gt; - Gets unused Secrets for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;services&lt;/code&gt; - Gets unused Services for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;serviceaccount&lt;/code&gt; - Gets unused ServiceAccounts for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;deployments&lt;/code&gt; - Gets unused Deployments for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;statefulsets&lt;/code&gt; - Gets unused StatefulSets for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;role&lt;/code&gt; - Gets unused Roles for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hpa&lt;/code&gt; - Gets unused HPAs for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pvc&lt;/code&gt; - Gets unused PVCs for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ingress&lt;/code&gt; - Gets unused Ingresses for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pdb&lt;/code&gt; - Gets unused PDBs for the specified namespace or all namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;exporter&lt;/code&gt; - Export Prometheus metrics.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Flags&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;-e, --exclude-namespaces string   Namespaces to be excluded, split by comma. Example: --exclude-namespace ns1,ns2,ns3. If --include-namespace is set, --exclude-namespaces will be ignored.&#xA;-h, --help                        help for kor&#xA;-n, --include-namespaces string   Namespaces to run on, split by comma. Example: --include-namespace ns1,ns2,ns3.&#xA;-k, --kubeconfig string           Path to kubeconfig file (optional)&#xA;    --output string               Output format (table or json) (default &#34;table&#34;)&#xA;    --slack-auth-token string     Slack auth token to send notifications to. --slack-auth-token requires --slack-channel to be set.&#xA;    --slack-channel string        Slack channel to send notifications to. --slack-channel requires --slack-auth-token to be set.&#xA;    --slack-webhook-url string    Slack webhook URL to send notifications to&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a specific subcommand, run &lt;code&gt;kor [subcommand] [flags]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kor all --namespace my-namespace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about each subcommand and its available flags, you can use the &lt;code&gt;--help&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kor [subcommand] --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported resources and limitations&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Resource&lt;/th&gt; &#xA;   &lt;th&gt;What it looks for&lt;/th&gt; &#xA;   &lt;th&gt;Known False Positives ⚠️&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ConfigMaps&lt;/td&gt; &#xA;   &lt;td&gt;ConfigMaps not used in the following places:&lt;br&gt;- Pods&lt;br&gt;- Containers&lt;br&gt;- ConfigMaps used through Volumes&lt;br&gt;- ConfigMaps used through environment variables&lt;/td&gt; &#xA;   &lt;td&gt;ConfigMaps used by resources which don&#39;t explicitly state them in the config.&lt;br&gt; e.g Grafana dashboards loaded dynamically OPA policies fluentd configs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Secrets&lt;/td&gt; &#xA;   &lt;td&gt;Secrets not used in the following places:&lt;br&gt;- Pods&lt;br&gt;- Containers&lt;br&gt;- Secrets used through volumes&lt;br&gt;- Secrets used through environment variables&lt;br&gt;- Secrets used by Ingress TLS&lt;br&gt;- Secrets used by ServiceAccounts&lt;/td&gt; &#xA;   &lt;td&gt;Secrets used by resources which don&#39;t explicitly state them in the config&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Services&lt;/td&gt; &#xA;   &lt;td&gt;Services with no endpoints&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Deployments&lt;/td&gt; &#xA;   &lt;td&gt;Deployments with no Replicas&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ServiceAccounts&lt;/td&gt; &#xA;   &lt;td&gt;ServiceAccounts unused by Pods&lt;br&gt;ServiceAccounts unused by roleBinding or clusterRoleBinding&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StatefulSets&lt;/td&gt; &#xA;   &lt;td&gt;Statefulsets with no Replicas&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Roles&lt;/td&gt; &#xA;   &lt;td&gt;Roles not used in roleBinding&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PVCs&lt;/td&gt; &#xA;   &lt;td&gt;PVCs not used in Pods&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ingresses&lt;/td&gt; &#xA;   &lt;td&gt;Ingresses not pointing at any Service&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hpas&lt;/td&gt; &#xA;   &lt;td&gt;HPAs not used in Deployments&lt;br&gt; HPAs not used in StatefulSets&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pdbs&lt;/td&gt; &#xA;   &lt;td&gt;PDBs not used in Deployments&lt;br&gt; PDBs not used in StatefulSets&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Ignore Resources&lt;/h2&gt; &#xA;&lt;p&gt;The resources labeled with &#34;kor/used = true&#34; will be ignored by kor even if they are unused. You can add this label to resources you want to ignore.&lt;/p&gt; &#xA;&lt;h2&gt;Import Option&lt;/h2&gt; &#xA;&lt;p&gt;You can also use kor as a Go library to programmatically discover unused resources. By importing the github.com/yonahd/kor/pkg/kor package, you can call the relevant functions to retrieve unused resources. The library provides the option to get the results in JSON format by specifying the outputFormat parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;    &#34;github.com/yonahd/kor/pkg/kor&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    myNamespaces := kor.IncludeExcludeLists{&#xA;        IncludeListStr: &#34;my-namespace1, my-namespace2&#34;,&#xA;    }&#xA;    outputFormat := &#34;json&#34; // Set to &#34;json&#34; for JSON output&#xA;&#xA;    if outputFormat == &#34;json&#34; {&#xA;        jsonResponse, err := kor.GetUnusedDeploymentsStructured(myNamespaces, kubeconfig, &#34;json&#34;)&#xA;        if err != nil {&#xA;            // Handle error&#xA;        }&#xA;        // Process the JSON response&#xA;        // ...&#xA;    } else {&#xA;        kor.GetUnusedDeployments(namespace)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;In Cluster Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use this tool inside the cluster running as a CronJob and sending the results to a Slack Webhook as raw text(has characters limits of 4000) or to a Slack channel by uploading a file(recommended), you can use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Send to a Slack webhook as raw text&#xA;helm upgrade -i kor \&#xA;    --namespace kor \&#xA;    --create-namespace \&#xA;    --set cronJob.slackWebhookUrl=&amp;lt;slack-webhook-url&amp;gt; \&#xA;    ./charts/kor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Send to a Slack channel by uploading a file&#xA;helm upgrade -i kor \&#xA;    --namespace kor \&#xA;    --create-namespace \&#xA;    --set cronJob.slackChannel=&amp;lt;slack-channel&amp;gt; \&#xA;    --set cronJob.slackToken=&amp;lt;slack-token&amp;gt; \&#xA;    ./charts/kor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: To send it to Slack as a file it&#39;s required to set the &lt;code&gt;slackToken&lt;/code&gt; and &lt;code&gt;slackChannel&lt;/code&gt; values.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;It&#39;s set to run every Monday at 1 a.m. by default. You can change the schedule by setting the &lt;code&gt;cronJob.schedule&lt;/code&gt; value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;helm upgrade -i kor \&#xA;    --namespace kor \&#xA;    --create-namespace \&#xA;    --set cronJob.slackChannel=&amp;lt;slack-channel&amp;gt; \&#xA;    --set cronJob.slackToken=&amp;lt;slack-token&amp;gt; \&#xA;    --set cronJob.schedule=&#34;0 1 * * 1&#34; \&#xA;    ./charts/kor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! If you encounter any bugs or have suggestions for improvements, please open an issue in the &lt;a href=&#34;https://github.com/yonahd/kor/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This open-source project is available under the &lt;a href=&#34;https://raw.githubusercontent.com/yonahd/kor/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;. Feel free to use, modify, and distribute it as per the terms of the license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>projectcalico/calico</title>
    <updated>2023-10-22T01:52:23Z</updated>
    <id>tag:github.com,2023-10-22:/projectcalico/calico</id>
    <link href="https://github.com/projectcalico/calico" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud native networking and network security&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/projectcalico/calico&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/projectcalico/calico&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/helm/projectcalico/tigera-operator&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/tigera-operator&#34; alt=&#34;ArtifactHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/calico/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/projectcalico/api&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/k8s.io/kubernetes.svg?sanitize=true&#34; alt=&#34;GoPkg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/6064&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/6064/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://docs.tigera.io/img/calico/felix_icon.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &#xA; &lt;h1&gt;Calico&lt;/h1&gt; &#xA; &lt;h2&gt; &lt;a href=&#34;https://projectcalico.docs.tigera.io/getting-started/kubernetes/quickstart&#34;&gt;Quickstart&lt;/a&gt; | &lt;a href=&#34;https://projectcalico.docs.tigera.io&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; | &lt;a href=&#34;https://slack.projectcalico.org&#34;&gt;Slack&lt;/a&gt; | &lt;a href=&#34;https://github.com/projectcalico/calico/releases&#34;&gt;Releases&lt;/a&gt; &lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Calico is a widely adopted, battle-tested open source networking and network security solution for Kubernetes, virtual machines, and bare-metal workloads. Calico provides two major services for Cloud Native applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Network connectivity between workloads.&lt;/li&gt; &#xA; &lt;li&gt;Network security policy enforcement between workloads.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Calico’s flexible architecture supports a wide range of deployment options, using modular components and technologies, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Choice of data plane technology, whether it be &lt;a href=&#34;https://projectcalico.docs.tigera.io/maintenance/ebpf/use-cases-ebpf&#34;&gt;eBPF&lt;/a&gt;, standard Linux, &lt;a href=&#34;https://docs.microsoft.com/en-us/virtualization/windowscontainers/container-networking/architecture&#34;&gt;Windows HNS&lt;/a&gt; or &lt;a href=&#34;https://github.com/projectcalico/vpp-dataplane&#34;&gt;VPP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enforcement of the full set of Kubernetes network policy features, plus for those needing a richer set of policy features, Calico network policies.&lt;/li&gt; &#xA; &lt;li&gt;An optimized Kubernetes Service implementation using eBPF.&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/apiserver&#34;&gt;apiserver integration&lt;/a&gt;, for managing Calico configuration and Calico network policies.&lt;/li&gt; &#xA; &lt;li&gt;Both non-overlay and &lt;a href=&#34;https://projectcalico.docs.tigera.io/networking/vxlan-ipip&#34;&gt;overlay (via IPIP or VXLAN)&lt;/a&gt; networking options in either public cloud or on-prem deployments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/cni-plugin&#34;&gt;CNI plugins&lt;/a&gt; for Kubernetes to provide highly efficient pod networking and IP Address Management (IPAM).&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/networking-calico&#34;&gt;Neutron ML2&lt;/a&gt; plugin to provide VM networking for OpenStack.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://projectcalico.docs.tigera.io/networking/bgp&#34;&gt;BGP routing stack&lt;/a&gt; that can advertise routes for workload and service IP addresses to physical network infrastructure.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started Running Calico&lt;/h2&gt; &#xA;&lt;p&gt;There are many avenues to get started with Calico depending on your situation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Trying out Kubernetes on a single host or on your own hardware? The &lt;a href=&#34;https://projectcalico.docs.tigera.io/getting-started/kubernetes/quickstart&#34;&gt;quick start guide&lt;/a&gt; will have you up and running in about fifteen minutes.&lt;/li&gt; &#xA; &lt;li&gt;Running a managed public cloud? Use our &lt;a href=&#34;https://projectcalico.docs.tigera.io/getting-started/kubernetes/managed-public-cloud/&#34;&gt;guides for enabling Calico network policies&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Want to go deeper? Visit &lt;a href=&#34;https://projectcalico.docs.tigera.io&#34;&gt;https://projectcalico.docs.tigera.io&lt;/a&gt; for full documentation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started Developing Calico&lt;/h2&gt; &#xA;&lt;p&gt;Calico is an open source project, and welcomes your contribution, be it through code, a bug report, a feature request, or user feedback.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/CONTRIBUTING.md&#34;&gt;The Contribution Guidelines&lt;/a&gt; document will get you started on submitting changes to the project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/DEVELOPER_GUIDE.md&#34;&gt;The Developer Guide&lt;/a&gt; will walk you through how to set up a development environment, build the code, and run tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/CONTRIBUTING_DOCS.md&#34;&gt;The Calico Documentation Guide&lt;/a&gt; will get you started on making changes to &lt;a href=&#34;https://projectcalico.docs.tigera.io&#34;&gt;https://projectcalico.docs.tigera.io&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join the Calico Community!&lt;/h2&gt; &#xA;&lt;p&gt;The Calico community is committed to fostering an open and welcoming environment, with several ways to engage with other users and developers. You can find out more about our monthly meetings, Slack group, and Discourse by visiting our &lt;a href=&#34;https://github.com/projectcalico/community&#34;&gt;community repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Calico is open source, with most code and documentation available under the Apache 2.0 license (see the &lt;a href=&#34;https://raw.githubusercontent.com/projectcalico/calico/master/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt;), though some elements are necessarily licensed under different open source licenses for compatibility with upstream licensing or code linking. For example, some Calico BPF programs are licensed under GPL v2.0 for compatibility with Linux kernel helper functions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws/aws-lambda-go</title>
    <updated>2023-10-22T01:52:23Z</updated>
    <id>tag:github.com,2023-10-22:/aws/aws-lambda-go</id>
    <link href="https://github.com/aws/aws-lambda-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Libraries, samples and tools to help Go developers develop AWS Lambda functions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AWS Lambda for Go&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aws/aws-lambda-go/actions?query=workflow%3Atests&#34;&gt;&lt;img src=&#34;https://github.com/aws/aws-lambda-go/workflows/tests/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aws/aws-lambda-go/actions?query=workflow%3A%22go+get+build-lambda-zip%22&#34;&gt;&lt;img src=&#34;https://github.com/aws/aws-lambda-go/workflows/go%20get%20build-lambda-zip/badge.svg?sanitize=true&#34; alt=&#34;build-lambda-zip&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/aws/aws-lambda-go&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/aws/aws-lambda-go.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/aws/aws-lambda-go&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/aws/aws-lambda-go&#34; alt=&#34;GoCard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/aws/aws-lambda-go&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/aws/aws-lambda-go/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Libraries, samples, and tools to help Go developers develop AWS Lambda functions.&lt;/p&gt; &#xA;&lt;p&gt;To learn more about writing AWS Lambda functions in Go, go to &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/go-programming-model.html&#34;&gt;the official documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;// main.go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;github.com/aws/aws-lambda-go/lambda&#34;&#xA;)&#xA;&#xA;func hello() (string, error) {&#xA;&#x9;return &#34;Hello λ!&#34;, nil&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;// Make the handler available for Remote Procedure Call by AWS Lambda&#xA;&#x9;lambda.Start(hello)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Building your function&lt;/h1&gt; &#xA;&lt;p&gt;Preparing a binary to deploy to AWS Lambda requires that it is compiled for Linux and placed into a .zip file.&lt;/p&gt; &#xA;&lt;h2&gt;For developers on Linux and macOS&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Remember to build your handler executable for Linux!&#xA;# When using the `provided.al2` runtime, the handler executable should be named `bootstrap`&#xA;GOOS=linux GOARCH=amd64 go build -o bootstrap main.go&#xA;zip lambda-handler.zip bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For developers on Windows&lt;/h2&gt; &#xA;&lt;p&gt;Windows developers may have trouble producing a zip file that marks the binary as executable on Linux. To create a .zip that will work on AWS Lambda, the &lt;code&gt;build-lambda-zip&lt;/code&gt; tool may be helpful.&lt;/p&gt; &#xA;&lt;p&gt;Get the tool&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go.exe install github.com/aws/aws-lambda-go/cmd/build-lambda-zip@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the tool from your &lt;code&gt;GOPATH&lt;/code&gt;. If you have a default installation of Go, the tool will be in &lt;code&gt;%USERPROFILE%\Go\bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;in cmd.exe:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;set GOOS=linux&#xA;set GOARCH=amd64&#xA;set CGO_ENABLED=0&#xA;go build -o bootstrap main.go&#xA;%USERPROFILE%\Go\bin\build-lambda-zip.exe -o lambda-handler.zip bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in Powershell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-posh&#34;&gt;$env:GOOS = &#34;linux&#34;&#xA;$env:GOARCH = &#34;amd64&#34;&#xA;$env:CGO_ENABLED = &#34;0&#34;&#xA;go build -o bootstrap main.go&#xA;~\Go\Bin\build-lambda-zip.exe -o lambda-handler.zip bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Deploying your functions&lt;/h1&gt; &#xA;&lt;p&gt;To deploy your function, refer to the official documentation for &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/deploying-lambda-apps.html&#34;&gt;deploying using the AWS CLI, AWS Cloudformation, and AWS SAM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Event Integrations&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/aws/aws-lambda-go/tree/master/events&#34;&gt;event models&lt;/a&gt; can be used to model AWS event sources. The official documentation has &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/use-cases.html&#34;&gt;detailed walkthroughs&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>