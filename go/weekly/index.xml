<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-25T01:46:25Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>naiba/nezha</title>
    <updated>2024-02-25T01:46:25Z</updated>
    <id>tag:github.com,2024-02-25:/naiba/nezha</id>
    <link href="https://github.com/naiba/nezha" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Self-hosted, lightweight server and website monitoring and O&amp;M tool&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img width=&#34;360&#34; style=&#34;max-width:80%&#34; src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/static/brand.svg?sanitize=true&#34; title=&#34;哪吒监控 Nezha Monitoring&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;small&gt;&lt;i&gt;LOGO designed by &lt;a href=&#34;https://xio.ng&#34; target=&#34;_blank&#34;&gt;熊大&lt;/a&gt; .&lt;/i&gt;&lt;/small&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;img alt=&#34;GitHub release (with filter)&#34; src=&#34;https://img.shields.io/github/v/release/naiba/nezha?color=brightgreen&amp;amp;style=for-the-badge&amp;amp;logo=github&amp;amp;label=Dashboard&#34;&gt;&amp;nbsp;&#xA; &lt;img src=&#34;https://img.shields.io/github/v/release/nezhahq/agent?color=brightgreen&amp;amp;label=Agent&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;&amp;nbsp;&#xA; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/nezhahq/agent/agent.yml?label=Agent%20CI&amp;amp;logo=github&amp;amp;style=for-the-badge&#34;&gt;&amp;nbsp;&#xA; &lt;img src=&#34;https://img.shields.io/badge/Installer-v0.15.8-brightgreen?style=for-the-badge&amp;amp;logo=linux&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img alt=&#34;trollface&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/trollface.png?v8&#34;&gt;) &lt;b&gt;Nezha Monitoring: Self-hostable, lightweight, servers and websites monitoring and O&amp;amp;M tool.&lt;/b&gt;&lt;/p&gt; &#xA; &lt;p&gt;Supports &lt;b&gt;monitoring&lt;/b&gt; system status, HTTP (SSL certificate change, upcoming expiration, expired), TCP, Ping and supports &lt;b&gt;push alerts&lt;/b&gt;, run scheduled tasks and &lt;b&gt;web terminal&lt;/b&gt;.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&amp;gt;&amp;gt; Telegram Group: &lt;a href=&#34;https://t.me/nezhamonitoring_global&#34;&gt;Nezha Monitoring Global (English Only)&lt;/a&gt;, &lt;a href=&#34;https://t.me/nezhamonitoring&#34;&gt;哪吒监控（中文群组）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;gt;&amp;gt; &lt;a href=&#34;https://www.google.com/search?q=%22powered+by+Nezha+Monitoring%22+OR+%22powered+by+%E5%93%AA%E5%90%92%E7%9B%91%E6%8E%A7%22&#34;&gt;Use Cases | 我们的用户&lt;/a&gt; (Google)&lt;/p&gt; &#xA;&lt;h2&gt;User Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nezhahq.github.io/en_US/index.html&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nezhahq.github.io/index.html&#34;&gt;中文文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Default Theme&lt;/th&gt; &#xA;   &lt;th&gt;DayNight &lt;a href=&#34;https://github.com/JackieSung4ev&#34;&gt;@JackieSung&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;hotaru&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-default/screenshot.png&#34; alt=&#34;Default Theme&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-daynight/screenshot.png&#34; width=&#34;3000px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-hotaru/screenshot.png&#34; width=&#34;1500px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;div align=&#34;center&#34;&gt;&#xA;     &lt;b&gt;Neko Mdui &lt;a href=&#34;https://github.com/MikoyChinese&#34;&gt;@MikoyChinese&lt;/a&gt;&lt;/b&gt;&#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;div align=&#34;center&#34;&gt;&#xA;     &lt;b&gt;AngelKanade &lt;a href=&#34;https://github.com/adminsama&#34;&gt;@adminsama&lt;/a&gt;&lt;/b&gt;&#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;div align=&#34;center&#34;&gt;&#xA;     &lt;b&gt;ServerStatus &lt;a href=&#34;https://github.com/unclezs&#34;&gt;@unclezs&lt;/a&gt;&lt;/b&gt;&#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-mdui/screenshot.png&#34; alt=&#34;Neko Mdui&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-angel-kanade/screenshot.png&#34; alt=&#34;AngelKanade&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naiba/nezha/master/resource/template/theme-server-status/screenshot.png&#34; alt=&#34;默认主题魔改&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;English&lt;/li&gt; &#xA; &lt;li&gt;中文&lt;/li&gt; &#xA; &lt;li&gt;Español&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can change the dashboard language in the settings page (&lt;code&gt;/setting&lt;/code&gt;) after the dashboard is installed.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!--GAMFC_DELIMITER--&gt;&#xA;&lt;a href=&#34;https://github.com/naiba&#34; title=&#34;naiba&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/29243953?v=4&#34; width=&#34;50;&#34; alt=&#34;naiba&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/AkkiaS7&#34; title=&#34;Akkia&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/68485070?v=4&#34; width=&#34;50;&#34; alt=&#34;Akkia&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Erope&#34; title=&#34;卖女孩的小火柴&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/44471469?v=4&#34; width=&#34;50;&#34; alt=&#34;卖女孩的小火柴&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/dysf888&#34; title=&#34;黑歌&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/47450409?v=4&#34; width=&#34;50;&#34; alt=&#34;黑歌&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/MikoyChinese&#34; title=&#34;MikoyChinese&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/22676744?v=4&#34; width=&#34;50;&#34; alt=&#34;MikoyChinese&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/JackieSung4ev&#34; title=&#34;JackieSung4ev&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/24974735?v=4&#34; width=&#34;50;&#34; alt=&#34;JackieSung4ev&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/ilay1678&#34; title=&#34;我若为王&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/7021399?v=4&#34; width=&#34;50;&#34; alt=&#34;我若为王&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/lemoeo&#34; title=&#34;Lemoe&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/18618627?v=4&#34; width=&#34;50;&#34; alt=&#34;Lemoe&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/cantoblanco&#34; title=&#34;Kris&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/116849421?v=4&#34; width=&#34;50;&#34; alt=&#34;Kris&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/spiritLHLS&#34; title=&#34;spiritlhl&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/103393591?v=4&#34; width=&#34;50;&#34; alt=&#34;spiritlhl&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/liuyanxi975&#34; title=&#34;刘颜溪&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/24417037?v=4&#34; width=&#34;50;&#34; alt=&#34;刘颜溪&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/CosmosZ-code&#34; title=&#34;CosmosZ-code&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/81398224?v=4&#34; width=&#34;50;&#34; alt=&#34;CosmosZ-code&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/uubulb&#34; title=&#34;UUBulb&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/35923940?v=4&#34; width=&#34;50;&#34; alt=&#34;UUBulb&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/lvgj-stack&#34; title=&#34;Ko no dio&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/38449861?v=4&#34; width=&#34;50;&#34; alt=&#34;Ko no dio&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/hhhkkk520&#34; title=&#34;Kris&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/52115472?v=4&#34; width=&#34;50;&#34; alt=&#34;Kris&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/1ridic&#34; title=&#34;1ridic&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/88495501?v=4&#34; width=&#34;50;&#34; alt=&#34;1ridic&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Mmx233&#34; title=&#34;Mmx&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/36563672?v=4&#34; width=&#34;50;&#34; alt=&#34;Mmx&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/rootmelo92118&#34; title=&#34;rootmelo92118&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/32770959?v=4&#34; width=&#34;50;&#34; alt=&#34;rootmelo92118&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/iilemon&#34; title=&#34;Sean&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/33201711?v=4&#34; width=&#34;50;&#34; alt=&#34;Sean&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/fscarmen&#34; title=&#34;fscarmen&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/62703343?v=4&#34; width=&#34;50;&#34; alt=&#34;fscarmen&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/ch8o&#34; title=&#34;no-name-now&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/9103372?v=4&#34; width=&#34;50;&#34; alt=&#34;no-name-now&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Creling&#34; title=&#34;Creling&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/43109504?v=4&#34; width=&#34;50;&#34; alt=&#34;Creling&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/coreff&#34; title=&#34;Core F&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/38347122?v=4&#34; width=&#34;50;&#34; alt=&#34;Core F&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/colour93&#34; title=&#34;玖叁&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/64313711?v=4&#34; width=&#34;50;&#34; alt=&#34;玖叁&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/arkylin&#34; title=&#34;凌&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/35104502?v=4&#34; width=&#34;50;&#34; alt=&#34;凌&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/ysicing&#34; title=&#34;缘生&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/8605565?v=4&#34; width=&#34;50;&#34; alt=&#34;缘生&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/xykt&#34; title=&#34;xykt&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/152045469?v=4&#34; width=&#34;50;&#34; alt=&#34;xykt&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/unclezs&#34; title=&#34;unclezs&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/42318775?v=4&#34; width=&#34;50;&#34; alt=&#34;unclezs&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/nap0o&#34; title=&#34;nap0o&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/144927971?v=4&#34; width=&#34;50;&#34; alt=&#34;nap0o&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/yuanweize&#34; title=&#34;I&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/30067203?v=4&#34; width=&#34;50;&#34; alt=&#34;I&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/guoyongchang&#34; title=&#34;guoyongchang&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/10484506?v=4&#34; width=&#34;50;&#34; alt=&#34;guoyongchang&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/acgpiano&#34; title=&#34;Acgpiano&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/15900800?v=4&#34; width=&#34;50;&#34; alt=&#34;Acgpiano&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/adminsama&#34; title=&#34;adminsama&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/60880076?v=4&#34; width=&#34;50;&#34; alt=&#34;adminsama&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/hmsjy2017&#34; title=&#34;Tony&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/42692274?v=4&#34; width=&#34;50;&#34; alt=&#34;Tony&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/nickfox-taterli&#34; title=&#34;Tater Li&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/19658596?v=4&#34; width=&#34;50;&#34; alt=&#34;Tater Li&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/MartijnLindeman&#34; title=&#34;Martijn Lindeman&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/78365708?v=4&#34; width=&#34;50;&#34; alt=&#34;Martijn Lindeman&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/KorenKrita&#34; title=&#34;KorenKrita&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/22239339?v=4&#34; width=&#34;50;&#34; alt=&#34;KorenKrita&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/techotaku&#34; title=&#34;Ian Li&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1948179?v=4&#34; width=&#34;50;&#34; alt=&#34;Ian Li&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/HsukqiLee&#34; title=&#34;HsukqiLee&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/79034142?v=4&#34; width=&#34;50;&#34; alt=&#34;HsukqiLee&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/GreenTeodoro839&#34; title=&#34;GreenTeodoro839&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/77104800?v=4&#34; width=&#34;50;&#34; alt=&#34;GreenTeodoro839&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Es-dese&#34; title=&#34;Esdese&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/71542548?v=4&#34; width=&#34;50;&#34; alt=&#34;Esdese&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/DarcJC&#34; title=&#34;Darc Z.&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/53445798?v=4&#34; width=&#34;50;&#34; alt=&#34;Darc Z.&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/wwng2333&#34; title=&#34;Crazy&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/17147265?v=4&#34; width=&#34;50;&#34; alt=&#34;Crazy&#34;&gt; &lt;/a&gt;&#xA;&lt;!--GAMFC_DELIMITER_END--&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#naiba/nezha&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=naiba/nezha&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gptscript-ai/gptscript</title>
    <updated>2024-02-25T01:46:25Z</updated>
    <id>tag:github.com,2024-02-25:/gptscript-ai/gptscript</id>
    <link href="https://github.com/gptscript-ai/gptscript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Develop LLM Apps in Natural Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPTScript&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;GPTScript is a new scripting language to automate your interaction with a Large Language Model (LLM), namely OpenAI. The ultimate goal is to create a fully natural language based programming experience. The syntax of GPTScript is largely natural language, making it very easy to learn and use. Natural language prompts can be mixed with traditional scripts such as bash and python or even external HTTP service calls. With GPTScript you can do just about anything like &lt;a href=&#34;https://raw.githubusercontent.com/gptscript-ai/gptscript/main/examples/travel-agent.gpt&#34;&gt;plan a vacation&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/gptscript-ai/gptscript/main/examples/add-go-mod-dep.gpt&#34;&gt;edit a file&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/gptscript-ai/gptscript/main/examples/sqlite-download.gpt&#34;&gt;run some SQL&lt;/a&gt;, or &lt;a href=&#34;https://raw.githubusercontent.com/gptscript-ai/gptscript/main/examples/hacker-news-headlines.gpt&#34;&gt;build a mongodb/flask app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# example.gpt&#xA;&#xA;Tools: sys.download, sys.exec, sys.remove&#xA;&#xA;Download https://www.sqlitetutorial.net/wp-content/uploads/2018/03/chinook.zip to a&#xA;random file. Then expand the archive to a temporary location as there is a sqlite&#xA;database in it.&#xA;&#xA;First inspect the schema of the database to understand the table structure.&#xA;&#xA;Form and run a SQL query to find the artist with the most number of albums and output&#xA;the result of that.&#xA;&#xA;When done remove the database file and the downloaded content.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gptscript ./example.gpt&#xA;&#xA;OUTPUT:&#xA;&#xA;The artist with the most number of albums in the database is Iron Maiden, with a total&#xA;of 21 albums.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install the latest release&lt;/h3&gt; &#xA;&lt;h4&gt;Homebrew (macOS and Linux)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install gptscript-ai/tap/gptscript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install Script (macOS and Linux):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl https://get.gptscript.ai/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;WinGet (Windows)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;winget install gptscript-ai.gptscript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Manually&lt;/h4&gt; &#xA;&lt;p&gt;Download and install the archive for your platform and architecture from the &lt;a href=&#34;https://github.com/gptscript-ai/gptscript/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;2. Get an API key from &lt;a href=&#34;https://platform.openai.com/api-keys&#34;&gt;OpenAI&lt;/a&gt;.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export OPENAI_API_KEY=&#34;your-api-key&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Run Hello World&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gptscript https://get.gptscript.ai/echo.gpt --input &#39;Hello, World!&#39;&#xA;&#xA;OUTPUT:&#xA;&#xA;Hello, World!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The model used by default is &lt;code&gt;gpt-4-turbo-preview&lt;/code&gt; and you must have access to that model in your OpenAI account.&lt;/p&gt; &#xA;&lt;h3&gt;4. Extra Credit: Examples and Run Debugging UI&lt;/h3&gt; &#xA;&lt;p&gt;Clone examples and run debugging UI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/gptscript-ai/gptscript&#xA;cd gptscript/examples&#xA;&#xA;# Run the debugging UI&#xA;gptscript --server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;GPTScript is composed of tools.&lt;/strong&gt;&lt;/em&gt; Each tool performs a series of actions similar to a function. Tools have available to them other tools that can be invoked similar to a function call. While similar to a function, the tools are primarily implemented with a natural language prompt. &lt;em&gt;&lt;strong&gt;The interaction of the tools is determined by the AI model&lt;/strong&gt;&lt;/em&gt;, the model determines if the tool needs to be invoked and what arguments to pass. Tools are intended to be implemented with a natural language prompt but can also be implemented with a command or HTTP call.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;Below are two tool definitions, separated by &lt;code&gt;---&lt;/code&gt;. The first tool does not require a name or description, but every tool after name and description are required. The first tool, has the parameter &lt;code&gt;tools: bob&lt;/code&gt; meaning that the tool named &lt;code&gt;bob&lt;/code&gt; is available to be called if needed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;tools: bob&#xA;&#xA;Ask Bob how he is doing and let me know exactly what he said.&#xA;&#xA;---&#xA;name: bob&#xA;description: I&#39;m Bob, a friendly guy.&#xA;args: question: The question to ask Bob.&#xA;&#xA;When asked how I am doing, respond with &#34;Thanks for asking &#34;${question}&#34;, I&#39;m doing great fellow friendly AI tool!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Put the above content in a file named &lt;code&gt;bob.gpt&lt;/code&gt; and run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ gptscript bob.gpt&#xA;&#xA;OUTPUT:&#xA;&#xA;Bob said, &#34;Thanks for asking &#39;How are you doing?&#39;, I&#39;m doing great fellow friendly AI tool!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tools can be implemented by invoking a program instead of a natural language prompt. The below example is the same as the previous example but implements Bob using python.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Tools: bob&#xA;&#xA;Ask Bob how he is doing and let me know exactly what he said.&#xA;&#xA;---&#xA;Name: bob&#xA;Description: I&#39;m Bob, a friendly guy.&#xA;Args: question: The question to ask Bob.&#xA;&#xA;#!python3&#xA;&#xA;import os&#xA;&#xA;print(f&#34;Thanks for asking {os.environ[&#39;question&#39;]}, I&#39;m doing great fellow friendly AI tool!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With these basic building blocks you can create complex scripts with AI interacting with AI, your local system, data, or external services.&lt;/p&gt; &#xA;&lt;h2&gt;GPT File Reference&lt;/h2&gt; &#xA;&lt;h3&gt;Extension&lt;/h3&gt; &#xA;&lt;p&gt;GPTScript files use the &lt;code&gt;.gpt&lt;/code&gt; extension by convention.&lt;/p&gt; &#xA;&lt;h3&gt;File Structure&lt;/h3&gt; &#xA;&lt;p&gt;A GPTScript file has one or more tools in the file. Each tool is separated by three dashes &lt;code&gt;---&lt;/code&gt; alone on a line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Name: tool1&#xA;Description: This is tool1&#xA;&#xA;Do sample tool stuff.&#xA;&#xA;---&#xA;Name: tool2&#xA;Description: This is tool2&#xA;&#xA;Do more sample tool stuff.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tool Definition&lt;/h3&gt; &#xA;&lt;p&gt;A tool starts with a preamble that defines the tool&#39;s name, description, args, available tools and additional parameters. The preamble is followed by the tool&#39;s body, which contains the instructions for the tool. Comments in the preamble are lines starting with &lt;code&gt;#&lt;/code&gt; and are ignored by the parser. Comments are not really encouraged as the text is typically more useful in the description, argument descriptions or instructions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Name: tool-name&#xA;# This is a comment in the preamble.&#xA;Description: Tool description&#xA;# This tool can invoke tool1 or tool2 if needed&#xA;Tools: tool1, tool2&#xA;Args: arg1: The description of arg1&#xA;      &#xA;Tool instructions go here.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Tool Parameters&lt;/h4&gt; &#xA;&lt;p&gt;Tool parameters are key-value pairs defined at the beginning of a tool block, before any instructional text. They are specified in the format &lt;code&gt;key: value&lt;/code&gt;. The parser recognizes the following keys (case-insensitive and spaces are ignored):&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Name&lt;/code&gt;: The name of the tool.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Model Name&lt;/code&gt;: The OpenAI model to use, by default it uses &#34;gpt-4-turbo-preview&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Description&lt;/code&gt;: The description of the tool. It is important that the properly describes the tool&#39;s purpose as the description is used by the LLM to determine if the tool is to be invoked.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Internal Prompt&lt;/code&gt;: Setting this to &lt;code&gt;false&lt;/code&gt; will disable the built in system prompt for this tool. GPTScript includes a default system prompt to instruct the AI to behave more like a script engine and not a &#34;helpful assistant.&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Tools&lt;/code&gt;: A comma-separated list of tools that are available to be called by this tool. A tool can only call the tools that are defined here. A tool name can reference a name in the current file, or a file relative to the current directory of the tool file, a http(s) URL, or a file in GitHub using github.com/username/repo/file.gpt format. When referencing a file or URL the tool loaded is the first tool in the file. To reference a specific tool in a file or URL use the syntax &lt;code&gt;tool-name from file-or-url&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Args&lt;/code&gt;: Arguments for the tool. Each argument is defined in the format &lt;code&gt;arg-name: description&lt;/code&gt;. All arguments are essentially strings. No other type really exists as all input and output to tools is text based.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Max Tokens&lt;/code&gt;: Set to a number if you wish to limit the maximum number of tokens that can be generated by the LLM.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;JSON Response&lt;/code&gt;: Setting to &lt;code&gt;true&lt;/code&gt; will cause the LLM to respond in a JSON format. If you set true you must also include instructions in the tool to inform the LLM to respond in some JSON structure.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Temperature&lt;/code&gt;: A floating-point number representing the temperature parameter. By default the temperature is 0. Set to a higher number to make the LLM more creative.&lt;/p&gt; &#xA;&lt;h4&gt;Tool Body&lt;/h4&gt; &#xA;&lt;p&gt;The tool body contains the instructions for the tool which can be a natural language prompt or a command to execute. Commands must start with &lt;code&gt;#!&lt;/code&gt; followed by the interpreter (e.g. &lt;code&gt;#!/bin/bash&lt;/code&gt;, &lt;code&gt;#!python3&lt;/code&gt;) a text that will be placed in a file and passed to the interpreter. Arguments can be references in the instructions using the format &lt;code&gt;${arg1}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: echo-ai&#xA;description: A tool that echos the input&#xA;args: input: The input&#xA;&#xA;Just return only &#34;${input}&#34;&#xA;&#xA;---&#xA;name: echo-command&#xA;description: A tool that echos the input&#xA;args: input: The input&#xA;&#xA;#!/bin/bash&#xA;        &#xA;echo &#34;${input}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Built in Tools&lt;/h2&gt; &#xA;&lt;p&gt;There are several built in tools to do basic things like read/write files, download http content and execute commands. Run &lt;code&gt;gptscript --list-tools&lt;/code&gt; to list all the built-in tools.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;For more examples check out the &lt;a href=&#34;https://raw.githubusercontent.com/gptscript-ai/gptscript/main/examples&#34;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join us on Discord: &lt;a href=&#34;https://discord.gg/9sSf4UyAMC&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1204558420984864829?label=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2023 &lt;a href=&#34;http://acorn.io&#34;&gt;Acorn Labs, Inc.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gdy666/lucky</title>
    <updated>2024-02-25T01:46:25Z</updated>
    <id>tag:github.com,2024-02-25:/gdy666/lucky</id>
    <link href="https://github.com/gdy666/lucky" rel="alternate"></link>
    <summary type="html">&lt;p&gt;软硬路由公网神器,ipv6/ipv4 端口转发,反向代理,DDNS,WOL,ipv4 stun内网穿透,cron,acme,阿里云盘,ftp,webdav,filebrowser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lucky(大吉)&lt;/h1&gt; &#xA;&lt;h2&gt;注意：源码公布到1.4.10版本，后续暂无继续开源计划。&lt;/h2&gt; &#xA;&lt;h2&gt;麻烦各位大佬发表lucky相关教程的时候不要加上“开源”神器，开源二字我不配，lucky后续也没开源打算。&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;    1.开源并不等于安全，闭源并不等于不安全。闭源软件开发也会受到安全人员的审查。无论是开源还是闭源软件，都有可能会受到各种安全人员的审查和研究。安全人员可以使用各种技术手段来检测软件的安全性和漏洞。&#xA;    2. 个人观点lucky这种应用类软件更多只是体力活，毫无技术含量，开源的优势在于透明度和社区参与，更多劳动力参与，但也可能导致功能过多、复杂度增加的问题。闭源软件的优势在于我想怎么写就怎么写,即使还未能从lucky中获利，lucky对我也有更深的特殊含义。&#xA;    3. 我对lucky的规划还有一大部分未实现，不想被人当免费劳动力使唤，不解释太多，就这样。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;如果您是第一次使用Lucky，请务必先访问 &lt;a href=&#34;https://lucky666.cn&#34;&gt;https://lucky666.cn&lt;/a&gt; ，并仔细阅读相关的文档，以获得必要的信息和答案。在这些文档中，您可以了解到Lucky的基本功能和特性，掌握Lucky的使用方法，以及解决常见的问题和疑惑。&lt;/h2&gt; &#xA;&lt;!-- TOC --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#&#34;&gt;Lucky(大吉)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#%E7%89%B9%E6%80%A7&#34;&gt;特性&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85&#34;&gt;一键安装&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#OpenwrtIPK%E5%8C%85%E5%AE%89%E8%A3%85&#34;&gt;OpenwrtIPK包安装&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#%E4%BD%BF%E7%94%A8&#34;&gt;使用&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#docker%E4%B8%AD%E4%BD%BF%E7%94%A8&#34;&gt;Docker中使用&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#%E5%90%8E%E5%8F%B0%E7%95%8C%E9%9D%A2&#34;&gt;后台界面&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#%E5%BC%80%E5%8F%91%E7%BC%96%E8%AF%91&#34;&gt;开发编译&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97&#34;&gt;更新日志&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/#%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;使用注意与常见问题&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /TOC --&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;p&gt;Lucky最初是作为一个小工具，由开发者为自己的个人使用而开发，用于替代socat，在小米路由AX6000官方系统上实现公网IPv6转内网IPv4的功能。Lucky的设计始终致力于让更多的Linux嵌入式设备运行，以实现或集成个人用户常用功能，降低用户的硬件和软件操作学习成本，同时引导使用者注意网络安全。随着版本更新和网友反馈，Lucky不断迭代改进，拥有更多功能和更好的性能，成为用户值得信赖的工具。&lt;/p&gt; &#xA;&lt;p&gt;Lucky 的核心程序完全采用 Golang 实现，具有高效、稳定、跨平台等优点。其后台前端则采用 Vue3.2 技术进行开发，具有良好的用户体验和响应速度。此外，Lucky 的管理后台采用前后端分离的架构，第三方开发者也可以自由使用OpenToken轻松调用Lucky的各种功能接口。&lt;/p&gt; &#xA;&lt;h2&gt;功能模块&lt;/h2&gt; &#xA;&lt;p&gt;目前已经实现/集成的主要功能模块有&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;端口转发&lt;/li&gt; &#xA; &lt;li&gt;动态域名(DDNS)&lt;/li&gt; &#xA; &lt;li&gt;Web服务&lt;/li&gt; &#xA; &lt;li&gt;Stun内网穿透&lt;/li&gt; &#xA; &lt;li&gt;网络唤醒&lt;/li&gt; &#xA; &lt;li&gt;计划任务&lt;/li&gt; &#xA; &lt;li&gt;ACME自动证书&lt;/li&gt; &#xA; &lt;li&gt;网络存储&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;端口转发&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;主要用于实现公网 IPv6 转内网 IPv4 的 TCP/UDP 端口转发。&lt;/li&gt; &#xA; &lt;li&gt;支持界面化的管理转发规则，用户可以通过 web 后台轻松地进行规则的添加、删除、修改等操作。&lt;/li&gt; &#xA; &lt;li&gt;单条转发规则支持设置多个转发端口，这样可以实现多个内网服务端口的转发。&lt;/li&gt; &#xA; &lt;li&gt;提供了一键开关和定时开关功能，用户可以根据自己的需求设置转发规则的开启和关闭时间，还可以使用计划任务模块进行定时开关。&lt;/li&gt; &#xA; &lt;li&gt;单条规则支持黑白名单安全模式切换，用户可以根据需要选择使用白名单模式或黑名单模式。&lt;/li&gt; &#xA; &lt;li&gt;白名单模式可以让没有安全验证的内网服务端口稍微安全一点暴露到公网，提高服务可用性。&lt;/li&gt; &#xA; &lt;li&gt;实时记录最新的访问日志，方便用户了解转发情况。&lt;/li&gt; &#xA; &lt;li&gt;规则列表日志一目了然，用户可以方便地追踪转发异常，及时进行排查和处理。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;动态域名(DDNS)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;支持接入多个不同的 DNS 服务商。&lt;/li&gt; &#xA; &lt;li&gt;支持全功能自定义回调（Callback），包括设置 BasicAuth，方便接入任意 DNS 服务商。&lt;/li&gt; &#xA; &lt;li&gt;Webhook 支持自定义 headers。&lt;/li&gt; &#xA; &lt;li&gt;内置常用免费 DNS 服务商设置模板（每步、No-IP、Dynv6、Dynu），通过自定义回调进行快速接入，仅需修改相应用户密码或 token 即可一键填充。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Web服务&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;支持反向代理、重定向和 URL 跳转。&lt;/li&gt; &#xA; &lt;li&gt;支持 HTTP 基本认证。&lt;/li&gt; &#xA; &lt;li&gt;支持 IP 黑白名单模式。&lt;/li&gt; &#xA; &lt;li&gt;支持 UserAgent 黑白名单。&lt;/li&gt; &#xA; &lt;li&gt;规则日志清晰易懂，便于追踪异常。&lt;/li&gt; &#xA; &lt;li&gt;支持一键开关规则和定时开关规则。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Stun内网穿透&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;实现内网穿透，无需公网IPv4地址。&lt;/li&gt; &#xA; &lt;li&gt;适合于国内运营商级NAT1宽带网络.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;网络唤醒&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;支持远程控制唤醒和关机操作&lt;/li&gt; &#xA; &lt;li&gt;支持接入第三方物联网平台(点灯科技 巴法云),可通过各大平台的语音助手控制设备唤醒和关机.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;计划任务&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;不依赖 Linux 系统的 Cron，支持 Windows 系统。&lt;/li&gt; &#xA; &lt;li&gt;操作简便，可视化编辑。&lt;/li&gt; &#xA; &lt;li&gt;可操作控制 Lucky 框架内的其他模块开关。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;ACME自动证书&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;支持 ACME 自动证书的申请和续签。&lt;/li&gt; &#xA; &lt;li&gt;支持 Cloudflare、阿里云和腾讯云三大 DNS 服务商。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;网络存储&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;网络存储模块是一个应用范围广泛的模块，它提供了将本地存储、WebDAV和阿里云盘挂载到Lucky内部的各个文件类服务功能。&lt;/li&gt; &#xA; &lt;li&gt;通过网络存储模块，你可以将添加的存储挂载到Web服务的文件服务、WebDAV、FTP和FileBrowser模块，实现更加便捷的文件管理和访问。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;一键安装&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gdy666/lucky-files&#34;&gt;一键安装详看这里&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;OpenwrtIPK包安装&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gdy666/luci-app-lucky&#34;&gt;Openwrt IPK包&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;默认后台管理地址 http://&amp;lt;运行设备IP&amp;gt;:16601 默认登录账号: 666 默认登录密码: 666&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;常规使用请用 -cd &amp;lt;配置文件夹路径&amp;gt; 指定配置文件夹的方式运行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#仅指定配置文件夹路径(如果配置文件夹不存在会自动创建),建议使用绝对路径&#xA;lucky -cd luckyconf&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker中使用&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;不挂载主机目录, 删除容器同时会删除配置&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# host模式, 同时支持IPv4/IPv6, Liunx系统推荐&#xA;docker run -d --name lucky --restart=always --net=host gdy666/lucky&#xA;# 桥接模式, 只支持IPv4, Mac/Windows推荐,windows 不推荐使用docker版本&#xA;docker run -d --name lucky --restart=always -p 16601:16601 gdy666/lucky&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在浏览器中打开&lt;code&gt;http://主机IP:16601&lt;/code&gt;，修改你的配置，成功&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[可选] 挂载主机目录, 删除容器后配置不会丢失。可替换 &lt;code&gt;/root/luckyconf&lt;/code&gt; 为主机目录, 配置文件夹为lucky&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name lucky --restart=always --net=host -v /root/luckyconf:/goodluck gdy666/lucky&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;后台界面&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/relayruleset.png&#34; alt=&#34;规则设置&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/relayrules.png&#34; alt=&#34;规则列表&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/whitelistset.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/whitelist.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;动态域名服务&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/ddnslist.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/iphistroy.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/webhookhistroy.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/domainsync.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Http反向代理&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/reverseproxy.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;网络唤醒&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/wol001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gdy666/lucky/master/previews/wol002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;#开发编译&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;```bash&#xA;go build -v -tags &#34;adminweb nomsgpack&#34; -ldflags=&#34;-s -w&#34;&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;更新日志&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;2023-12-13 v2.5.3&#xA;    STUN穿透：&#xA;        1.1 强制使用 TCP4 协议进行 stun 保活。&#xA;        1.2 新增了对 UPnP 的支持，&#xA;        1.3支持在禁用内置转发时 自定义 UPnP/NAT-PMP 内部端口&#xA;    存储：&#xA;        2.1 修复已知的 bug。&#xA;        2.2 优化阿里云盘文件批量重命名速度。&#xA;    全局DNS设置：&#xA;        1. 新增备用DNS2&#xA;        2. 保存配置时不再检测dns可用性&#xA;&#xA;2023-12-2 v2.5.2&#xA;    1. 修复了winfsp复制大文件后，文件目录列表显示文件大小为0的 bug。&#xA;    2. 修复了当可用安全证书为空时，导致启用 HTTPS 的 Lucky 启动后自动退出的 bug。&#xA;    3. 修复了存储管理中本地存储路径启动时因路径无效而无显示的问题。&#xA;    4. 修复了 文件服务的 readme.md 文件内容没有显示在页面上。&#xA;    5. 对文件服务前端页面进行了优化，以适配暗黑主题。&#xA;&#xA;2023-11-30 v2.5.1&#xA;    1.Winfsp &#xA;        a. 修复了导致由于文件名前后有空格而无法正确修改文件/文件夹名的bug。&#xA;        b. 修复了多层文件夹无法一次性删除的bug.&#xA;        c. 改进了文件夹文件列表信息的缓存策略。&#xA;        d. 挂载的阿里云盘显示真实容量。&#xA;    2.Web服务模块&#xA;        a. 新增了一个选项，允许在 Web 服务中限制最低的 TLS（传输层安全）版本，且新建规则默认的最低版本是 TLS 1.2。&#xA;        b. 在 Web 服务规则编辑中，新增了批量修改前端域名的功能，方便批量操作。&#xA;    3.STUN内网穿透 &#xA;        增加公网地址变化时的脚本触发设置。&#xA;    4.网络唤醒模块&#xA;        修复优化已经问题。&#xA;    5.解决了设置 IPv6类型 DNS 失败的 bug。&#xA;&#xA;&#xA;&#xA;2023-11-21 v2.5.0&#xA;    1. filebrowser:&#xA;            修复了存储模块已知的 bug，现在可以愉快地使用 filebrowser 管理阿里云盘。&#xA;            新增登录令牌有效期参数设置&#xA;    2. Web 文件服务:&#xA;            修复了跨域和短连接设置无效的问题。&#xA;    3. Lucky新增登录令牌有效期设置参数和最大连续登录错误次数限制，提高账户安全性。&#xA;    4. 增加定时 DNS 可用性检测，新增 自定义DNS 和备用 DNS 设置，提供更稳定的网络连接。&#xA;    5. 其他已知 bug 修复。&#xA;&#xA;2023-11-13 v2.4.8&#xA;    1. 修复存储模块中的一个问题，该问题导致在多目录设置下无法访问目录下的文件。&#xA;    2. 修复了 RaiDrive 挂载 Lucky WebDAV 后无法写入阿里云盘的 bug。&#xA;    3. 优化了 FileBrowser，在批量上传文件到阿里云盘驱动时的速度。&#xA;    4. 对存储模块进行了底层优化和修复已知的 bug。&#xA;&#xA;2023-11-08 v2.4.7&#xA;    1. 修复反向代理lucky WebDAV无法修改文件名问题。&#xA;    2. windows挂载分区:优化阿里云盘视频打开缓慢问题。&#xA;    3. 修复无网络状态下启动lucky时阿里云盘代码引发的奔溃问题。&#xA;    4. 升级 filebrowser 至 2.26.0版本。&#xA;    5. 修复存储管理中 webdav 忽略证书验证开关无效问题,确保自签证书的 webdav 正常连接。&#xA;&#xA;2023-11-01 v2.4.6&#xA;    新增功能：&#xA;        1. WebDAV 模块现在支持用户级前端显示设置。默认情况下，文件服务将显示在前端界面中。&#xA;    Bug 修复：&#xA;        1. 修复了阿里云盘授权过程中未获取写权限的 bug。如果您之前遇到写入失败的情况，请重新登录并进行授权。&#xA;        2. 修复了WebDAV模块 已知的 bug。&#xA;&#xA;2023-10-30 v2.4.5&#xA;    修复阿里云盘某些情况下写文件失败的bug&#xA;&#xA;2023-10-29 v2.4.4&#xA;    1. 修复了已知的存储读写 bug，提升了系统的稳定性和性能。&#xA;    2. 在 acme 证书功能中，新增了保存中间证书的选项，提供更全面的证书信息。&#xA;    3. 在 acme 证书申请功能中，增加了使用 IPv4 通道开关，以便用户根据需要进行灵活配置。&#xA;    4. 优化了 Filebrowser 的适配，现在可以进行 WebDAV 存储的写操作，并对阿里云盘存储进行了写文件适配。这意味着用户可以方便地在 Filebrowser 中对阿里云盘存储进行文件的上传和管理操作。无论是上传文件还是对已有文件进行修改、删除等操作，用户都可以通过 Filebrowser 进行灵活的操作，并享受到更便捷的文件管理体验。&#xA;    5. 在反代 WebDAV 后端时，解决了个别 WebDAV 客户端无法修改文件名的问题&#xA;    6. 修复了 SSL 证书禁用后仍会自动续签的 bug，确保在禁用 SSL ACME 证书后不会进行自动续签。&#xA;&#xA;2023-10-19 v2.4.1&#xA;    1. 修复了存储写文件错误的BUG。&#xA;    2. 优化了DDNS、Web服务和ACME证书处理和显示中文域名。&#xA;&#xA;2023-10-18 v2.4.0&#xA;    1.修复已知BUG&#xA;    2.存储管理新增阿里云盘支持。&#xA;&#xA;2023-09-22 v2.3.5&#xA;    1. windows版 : WinFSP对接模块优化了缓存策略，解决了无法播放TS视频文件的问题。&#xA;    2. SSL证书:新增了更多可选参数，以便更灵活地进行证书申请。&#xA;    3. Web反代:增加了&#34;万事大吉&#34;开关，能够自动添加常用反代header。&#xA;    4. 大吉内置FileBrowser:更新至版本2.25.0。&#xA;&#xA;&#xA;2023-08-27 v2.3.1&#xA;    1. 优化 WebDav 存储读取性能，提升双重 WebDav 存储挂载的读取速度。&#xA;    2. 在 Windows 版本中新增了系统托盘图标，方便用户一键设置或取消开机启动 Lucky。&#xA;    3. 修复了在某些环境或软件下存储别名显示不正确的问题。&#xA;&#xA;2023-08-25 v2.3.0&#xA;    新增功能：&#xA;        网络存储分类下新增存储管理模块，支持：&#xA;        将WebDAV存储挂载到&#xA;        Lucky的Web服务-文件服务模块、&#xA;        FTP模块、WebDAV模块和FileBrowser模块。&#xA;        改进和优化：&#xA;        2. 在Windows版中，现在可以将WebDAV存储挂载为网络位置或本地磁盘。&#xA;        请注意，此功能需要先安装WinFsp。&#xA;    Bug修复：&#xA;        修复了一些已知问题，提升了软件的稳定性和性能。&#xA;&#xA;&#xA;2023-08-06 &#xA;v2.2.4&#xA;1. 修复lucky 外网访问限制开关无效&#xA;2. 修复 ftp , webdav，filebrowser模块 路径|read只读模式 识别错误&#xA;&#xA;v2.2.3&#xA;    1. 修复 FileBrowser 在挂载多个目录时修改文件名出错的问题。&#xA;    2. 修复 FileBrowser 在挂载多个目录时复制文件出错的问题。&#xA;    3. 修复在旧版 RaiDrive 下，WebDAV 挂载多个分区根目录时文件夹名显示异常的 bug。&#xA;    4. 修复 FileBrowser 在挂载多个目录时分享文件异常的问题。&#xA;    5. FileBrowser 的后台现在支持设置用户目录范围为多个目录，多个目录之间使用英文逗号（,）分割。&#xA;&#xA;&#xA;2023-08-05 v2.2.2&#xA;    1. 修正了文件服务在显示软连接目录时的识别问题。&#xA;    2. FileBrowser 现在支持将多个目录/文件设置为根目录。&#xA;&#xA;2023-08-03 v2.2.1&#xA;    1. acme优化，消除泛域名CNAME记录对证书申请的影响。&#xA;        注意：AdGuardHome 由于DNS缓存会对证书申请造成影响。&#xA;    2. FTP模块支持软连接识别。&#xA;    3. FTP/WebDAV模块：&#xA;        增加了同时挂载目录/文件的支持。&#xA;        文件会显示在根目录下。&#xA;    4. 修复了FTP和WebDAV模块已知的bug。&#xA;    5. Web服务新增静态文件服务支持。&#xA;        可用作静态网页服务器。&#xA;        前端支持视频/音频在线播放。&#xA;        支持自动展示readme.md文件内容。&#xA;    6. 修复了恢复配置时没有恢复基础模块配置的bug。&#xA;&#xA;2023-07-23 v2.1.3&#xA;    1. 安全模块新增了证书映射功能，可以将证书同步复制到指定路径。支持证书内容变化后触发自定义脚本。&#xA;    2. ACME 增加了代理服务器设置。&#xA;    3. 支持编辑和修改证书。&#xA;    4. Web 服务反向代理已移除覆盖有返回内容的错误页面的机制&#xA;&#xA;2023-07-17 v2.1.2&#xA;    1. 优化acme模块，模块占用体积减少超过1M,不再发布小桔版本。&#xA;    2. ddns模块和acme模块对接dynv6&#xA;&#xA;2023-07-11 v2.1.1&#xA;    1.修复已知BUG&#xA;    2.新增FTP服务模块&#xA;&#xA;2023-07-08 v2.0.4&#xA;    1.修复v2.0.1 在windows环境以及docker环境下各模块服务端口显示占用的bug.&#xA;    2.Web服务的反向代理,当403状态码返回的内容是html格式的时候不再替换页面内容 （解决反代openwrt后台无法显示页面的bug）&#xA;        &#xA;&#xA;2023-07-05 v2.0.1&#xA;    1. 进行了前后端架构的重构和优化。&#xA;    2. 解决了在Linux systemd环境下无法通过lucky后台升级版本的问题。&#xA;    3. 修改了acme预设的dns服务器，提高了申请证书的成功概率。&#xA;    4. 将各功能模块的配置文件进行了分离，现在支持恢复配置文件，配置恢复同时支持1.X版本配置、lkcf单模块配置以及全局配置zip。请注意不要修改单模块lkcf配置的文件名。&#xA;    5. 初始配置现在默认开启了外网访问。&#xA;    6. Web服务反向代理现在新增了404和403页面提示，以应对不匹配规则的情况。&#xA;    7. 修复了因为ssl证书下载后因为文件名带有*号而在Windows管理器中无法显示的bug。&#xA;    8. 反向代理新增了追加客户端协议头到指定Header的功能&#xA;    9. STUN穿透模块增加全局Stun服务器设置&#xA;    10. WebDAV单用户支持挂载多目录&#xA;    11. 反向代理后端地址支持指定路径&#xA;    12. 反向代理 unraid不再需要填写/login&#xA;    13. 反向代理增加使用请求Host开关&#xA;    14. 反向代理支持自定义允许跨域的源和方法&#xA;&#xA;2023-04-23 v1.10.8&#xA;    1. 动态域名支持接入腾讯云API3.0&#xA;&#xA;2023-04-22 v1.10.7&#xA;    1.Webhook 新增支持PATCH&#xA;    2.动态域名模块底层重构&#xA;    3.Web服务模块修复已知BUG.新增端口冲突提醒&#xA;    4.stun模块优化修复已知BUG.&#xA;&#xA;2023-04-19 v1.10.6&#xA;    1.新增 后台登陆新增 2FA（TOTP）验证支持&#xA;    2.修复后台关于页面显示信息错误&#xA;    3.修复端口转发模块已知BUG.&#xA;    4.新增端口转发 端口被占用时提示。&#xA;&#xA;2023-04-15 v1.10.3&#xA;    1. 新增WebDAV模块&#xA;    2. 新增内置FileBrowser(大吉版本独有)&#xA;    3. 以后会同时发布三个版本&#xA;        1.1 大吉包含全功能模块&#xA;        1.2 lucky没有内置FileBrowser&#xA;        1.3 小桔没有内置FileBrowser和ACME功能模块&#xA;    4. 修复WebHook 请求主体不支持非JSON请求内容的BUG。&#xA;    5. 优化前端发送请求错误时即刻跳转到登陆首页的流程。&#xA;    &#xA;2023-03-29 v1.9.3&#xA;    1.修复添加SSL路径方式判断证书错误的BUG.&#xA;    2.添加ACME证书时默认填充随机邮箱地址&#xA;    3.ACME 新增 ZeroSLL、Let&#39;s Encrypt(测试)、自定义接口支持。&#xA;    4.修改httprequest超时参数，避免DDNS查询IP阻塞&#xA;&#xA;&#xA;2023-03-25 v1.9.0&#xA;    1.Web反向代理默认支持WebDAV。&#xA;    2.设置新增OpenToken选项开关&#xA;      无须模拟登陆即可调用后端API。&#xA;    3.修复断网情况下启动lucky，网络唤醒物联网平台无法重连BUG。&#xA;    4.网络唤醒修复广播地址为空时处理异常的情况&#xA;    5.各大模块规则设置加入默认简易模式，优化新手设置体验。&#xA;    6.优化前端体验&#xA;    7.Web服务 前端域名/路径支持&#xA;    8.反向代理规则增加跨域支持开关&#xA;    9.Web规则列表点击前端域名自动复制完整链接&#xA;    10.Web服务类型 重定向和跳转的目标地址支持变量&#xA;    {host},{port},{hostAndPort}&#xA;    11.Web服务规则 http/https支持使用同一端口&#xA;    12.Web服务模块日志分离，模块添加按钮旁边可以查看&#xA;    13.默认不显示lucky后台设置里面的登陆密码&#xA;    14.修复前端菜单模块列表偶尔不显示的bug&#xA;    15.SSL证书管理加入自动证书功能，支持自动申请续签cloudflare,阿里云，腾讯云域名证书。&#xA;&#xA;2023-03-13 v1.8.5&#xA;    1.修复Web服务中反向代理host没有携带显式端口&#xA;    2.捕获计划任务执行异常，防止程序奔溃。&#xA;    3.web反代增加 内置502提示页面。&#xA;&#xA;2023-03-11 v1.8.3&#xA;    1.网络唤醒 -客户端-第三方物联网平台设置新增跳过证书验证开关&#xA;    2.Lucky设置新增GCSetPercent开关，对内存占用敏感的用户可以尝试打开开关调整SetPercent参数，提高GC触发频率。&#xA;    3.动态域名服务指令获取IP方式新增支持管道指令&#xA;    4.新增计划任务模块&#xA;    5.设置页面增加windows服务管理&#xA;    6.分离网络唤醒模块日志&#xA;    7.新增ntp自动同步时间&#xA;    8.优化后台菜单显示形式&#xA;    9.stun 新增natpmp支持&#xA;&#xA;2023-02-13 v1.7.21&#xA;    1.各模块增加自动控制防火墙端口开关(仅针对linux iptables/ip6tables 有效)&#xA;    2.修复使用linux systemd 服务管理的lucky无法在后台重启或者升级的bug&#xA;    3.优化后台升级机制，docker也可以在后台上传tar.gz升级了。上传完成后需要手动关闭再开启一次容器。&#xA;    4.DDNS 新增全局Webhook&#xA;    5.STUN穿透新增全局Webhook&#xA;    6.端口转发模块增加禁用开关&#xA;    7.Stun穿透模块增加禁用模块开关&#xA;    8.修复二级路由下设备无法唤醒的BUG&#xA;&#xA;2023-1-15 v1.7.12&#xA;    1.优化UDP转发性能&#xA;    2.Web服务中的反向代理新增支持 忽略后端tls证书验证&#xA;    3.修复STUN穿透转发socks失败&#xA;    4.优化stun通道检测&amp;amp;维持机制&#xA;    5.stun穿透支持关闭lucky内置转发使用路由器转发&#xA;      在路由器设置端口转发规则（STUN通道端口指向需要代理的IP服务端口）&#xA;&#xA;2022-12-24 v1.7.5&#xA;    1.全局协程增加异常日志捕获机制。&#xA;    2.优化网络唤醒客户端登录流程。&#xA;      修复由于电脑时间不准确导致无法连接服务端的问题&#xA;      (建议被控制端的lucky也需要更新到此版本)&#xA;    3.网络唤醒模块新增快捷控制页面。&#xA;      (需要在网络唤醒服务端设置里面打开)&#xA;    4.网络唤醒模块新增自定义设备上下线webhook功能。&#xA;&#xA;2022-12-13 v1.7.4&#xA;    DDNS模块新增自定义指令方式获取IP&#xA;&#xA;2022-12-11 v1.7.3&#xA;    修复使用STUN穿透TCP时占用CPU过高的BUG&#xA;&#xA;2022-12-09 v1.7.2&#xA;    1.新增STUN IPv4 内网穿透模块&#xA;    2.反向代理模块改名为Web服务&#xA;    3.Web服务增加跳转和重定向支持&#xA;&#xA;2022-11-24 v1.6.2&#xA;    1.加入后台登录日志&#xA;    2.适配新版本luci-app-lucky&#xA;    3.此版本开始以后会同时发布多平台openwrt ipk安装包&#xA;&#xA;2022-11-15 v1.6.1&#xA;    主要修复启动参数-p指定后台端口没有优先于配置文件相应参数&#xA;    导致luci-app-lucky版本用户在后台修改到被占用端口lucky无法启动的问题.&#xA;&#xA;2022-11-12 v1.6.0&#xA;    1.后台管理端口 http/https支持监听同一端口&#xA;    2.新增后台支持直接上传tar.gz 文件一键升级/替换lucky版本.&#xA;    3.新增自定义安全入口设置,安全隐藏后台地址.&#xA;    4.修复网络唤醒客户端由于时间和服务端相差大于30秒时连接中止而没有不断重连的问题.&#xA;    5.修复端口转发规则无法开关bug.&#xA;    6.默认内嵌 http://curl.haxx.se/ca/cacert.pem CA证书,解决docker或个别嵌入式设备环境下需要关闭TLS验证才可以调用https接口的情况,默认不再跳过TLS证书验证.&#xA;&#xA;2022-10-26 v1.5.1&#xA;    1.新增网络唤醒模块&#xA;    2.优化ddns服务&#xA;    3.其它细节优化&#xA;&#xA;2022-10-14 v1.4.10&#xA;    1.修复特定情况下反向代理规则添加后无法编辑删除的bug.&#xA;&#xA;2022-10-08 版本1.4.9&#xA;    1.反向代理新增https支持。&#xA;    2.加入SSL证书管理模块&#xA;    3.后台接口支持HTTPS&#xA;    4.端口转发模块重构优化，移除命令行配置功能,注意使用此版本后原来的端口转发配置会全部消失。&#xA;    5.修复已知BUG.&#xA;    6.源码不再和二进制版本同时发布.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;使用注意与常见问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;不同于防火墙端口转发规则,不要设置没有用上的端口,会增加内存的使用.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;小米路由 ipv4 类型的80和443端口被占用,但只设置监听tcp6(ipv6)的80/443端口转发规则完全没问题.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果需要使用白名单模式,请根据自身需求打开外网访问后台管理页面开关.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;转发规则启用异常,端口转发没有生效时请登录后台查看日志.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>