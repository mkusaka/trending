<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-11T01:39:11Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>heroiclabs/nakama</title>
    <updated>2025-05-11T01:39:11Z</updated>
    <id>tag:github.com,2025-05-11:/heroiclabs/nakama</id>
    <link href="https://github.com/heroiclabs/nakama" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Distributed server for social and realtime games and apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/logo.png?raw=true&#34; alt=&#34;Nakama&#34; title=&#34;Nakama logo&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroiclabs.com/docs/nakama/getting-started/install/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/heroiclabs/nakama.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://forum.heroiclabs.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/forum-online-success.svg?sanitize=true&#34; alt=&#34;Forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/heroiclabs/nakama/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/heroiclabs/nakama.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Distributed server for social and realtime games and apps.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Users&lt;/strong&gt; - Register/login new users via social networks, email, or device ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt; - Store user records, settings, and other objects in collections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Social&lt;/strong&gt; - Users can connect with friends, and join groups. Builtin social graph to see how users can be connected.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt; - 1-on-1, group, and global chat between users. Persist messages for chat history.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiplayer&lt;/strong&gt; - Realtime, or turn-based active and passive multiplayer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Leaderboards&lt;/strong&gt; - Dynamic, seasonal, get top members, or members around a user. Have as many as you need.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tournaments&lt;/strong&gt; - Invite players to compete together over prizes. Link many together to create leagues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Parties&lt;/strong&gt; - Add team play to a game. Users can form a party and communicate with party members.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purchase Validation&lt;/strong&gt; - Validate in-app purchases and subscriptions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;In-App Notifications&lt;/strong&gt; - Send messages and notifications to connected client sockets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Runtime code&lt;/strong&gt; - Extend the server with custom logic written in Lua, TypeScript/JavaScript, or native Go code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Matchmaker&lt;/strong&gt;, &lt;strong&gt;dashboard&lt;/strong&gt;, &lt;strong&gt;metrics&lt;/strong&gt;, and &lt;a href=&#34;https://heroiclabs.com/docs&#34;&gt;more&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Build scalable games and apps with a production ready server used by ambitious game studios and app developers &lt;a href=&#34;https://heroiclabs.com/customers/&#34;&gt;all around the world&lt;/a&gt;. Have a look at the &lt;a href=&#34;https://heroiclabs.com/docs&#34;&gt;documentation&lt;/a&gt; and join the &lt;a href=&#34;https://forum.heroiclabs.com&#34;&gt;developer community&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The server is simple to setup and run for local development and can be deployed to any cloud provider. See the &lt;a href=&#34;https://raw.githubusercontent.com/heroiclabs/nakama/master/#deployment&#34;&gt;deployment notes&lt;/a&gt; for recommendations on how to deploy the project for production. Nakama server requires CockroachDB or another Postgres wire-compatible server as it&#39;s database.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroiclabs.com/docs/install-docker-quickstart/&#34;&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/7/79/Docker_%28container_engine%29_logo.png&#34; width=&#34;170&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The fastest way to run the server and the database is with Docker. Setup Docker and start the daemon.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up a &lt;a href=&#34;https://heroiclabs.com/docs/nakama/getting-started/install/docker/#running-nakama&#34;&gt;docker-compose file&lt;/a&gt; and place it in a folder for your project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;docker-compose -f ./docker-compose.yml up&lt;/code&gt; to download container images and run the servers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more detailed instructions have a look at our &lt;a href=&#34;https://heroiclabs.com/docs/nakama/getting-started/install/docker&#34;&gt;Docker quickstart&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;Nakama Docker images are maintained on &lt;a href=&#34;https://hub.docker.com/r/heroiclabs/nakama/tags&#34;&gt;Docker Hub&lt;/a&gt; and &lt;a href=&#34;https://hub.docker.com/r/heroiclabs/nakama-prerelease/tags&#34;&gt;prerelease&lt;/a&gt; images are occasionally published for cutting edge features of the server.&lt;/p&gt; &#xA;&lt;h3&gt;Binaries&lt;/h3&gt; &#xA;&lt;p&gt;You can run the servers with native binaries for your platform.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the server from our &lt;a href=&#34;https://github.com/heroiclabs/nakama/releases&#34;&gt;releases&lt;/a&gt; page and the &lt;a href=&#34;https://www.cockroachlabs.com/docs/stable/install-cockroachdb.html&#34;&gt;database&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the database &lt;a href=&#34;https://www.cockroachlabs.com/docs/stable/start-a-local-cluster.html#before-you-begin&#34;&gt;instructions&lt;/a&gt; to start it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run a migration which will setup or upgrade the database schema:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nakama migrate up --database.address &#34;root@127.0.0.1:26257&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Nakama and connect to the database:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nakama --database.address &#34;root@127.0.0.1:26257&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When connected you&#39;ll see server output which describes all settings the server uses for &lt;a href=&#34;https://heroiclabs.com/docs/nakama/getting-started/configuration&#34;&gt;configuration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2018-04-29T10:14:41.249+0100&#34;,&#34;msg&#34;:&#34;Node&#34;,&#34;name&#34;:&#34;nakama&#34;,&#34;version&#34;:&#34;2.0.0+7e18b09&#34;,&#34;runtime&#34;:&#34;go1.10.1&#34;,&#34;cpu&#34;:4} &lt;br&gt; {&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2018-04-29T10:14:41.249+0100&#34;,&#34;msg&#34;:&#34;Database connections&#34;,&#34;dsns&#34;:[&#34;root@127.0.0.1:26257&#34;]} &lt;br&gt; ...&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Nakama supports a variety of protocols optimized for various gameplay or app use cases. For request/response it can use GRPC or the HTTP1.1+JSON fallback (REST). For realtime communication you can use WebSockets or rUDP.&lt;/p&gt; &#xA;&lt;p&gt;For example with the REST API to authenticate a user account with a device identifier.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl &#34;127.0.0.1:7350/v2/account/authenticate/device?create=true&#34; \&#xA;  --user &#34;defaultkey:&#34; \&#xA;  --data &#39;{&#34;id&#34;: &#34;someuniqueidentifier&#34;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Response:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;{ &lt;br&gt; &#34;token&#34;:&#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjQ5OTU2NDksInVpZCI6Ijk5Y2Q1YzUyLWE5ODgtNGI2NC04YThhLTVmMTM5YTg4MTgxMiIsInVzbiI6InhBb1RxTUVSdFgifQ.-3_rXNYx3Q4jKuS7RkxeMWBzMNAm0vl93QxzRI8p_IY&#34; &lt;br&gt; }&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;There&#39;s a number of official &lt;a href=&#34;https://github.com/heroiclabs&#34;&gt;client libraries&lt;/a&gt; available on GitHub with &lt;a href=&#34;https://heroiclabs.com/docs&#34;&gt;documentation&lt;/a&gt;. The current platform/language support includes: .NET (in C#), Unity engine, JavaScript, Java (with Android), Unreal engine, Godot, Defold, and Swift (with iOS). If you&#39;d like to contribute a client or request one let us know.&lt;/p&gt; &#xA;&lt;h2&gt;Nakama Console&lt;/h2&gt; &#xA;&lt;p&gt;The server provides a web UI which teams can use to inspect various data stored through the server APIs, view lightweight service metrics, manage player data, update storage objects, restrict access to production with permission profiles, and gain visibility into realtime features like active multiplayer matches. There is no separate installation required as it is embedded as part of the single server binary.&lt;/p&gt; &#xA;&lt;p&gt;You can navigate to it on your browser on &lt;a href=&#34;http://127.0.0.1:7351&#34;&gt;http://127.0.0.1:7351&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/accounts.jpg?raw=true&#34; title=&#34;Account listing&#34; width=&#34;1024&#34; align=&#34;center&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/status.jpg?raw=true&#34; title=&#34;Status view&#34; width=&#34;125&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/storage.jpg?raw=true&#34; title=&#34;Storage record view&#34; width=&#34;125&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/match.jpg?raw=true&#34; title=&#34;Running matches view&#34; width=&#34;125&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/users.jpg?raw=true&#34; title=&#34;Console users view&#34; width=&#34;125&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/modules.jpg?raw=true&#34; title=&#34;Loaded modules view&#34; width=&#34;125&#34;&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Nakama can be deployed to any cloud provider such as Google Cloud, Azure, AWS, Digital Ocean, Heroku, or your own private cloud. You should setup and provision separate nodes for Nakama and CockroachDB.&lt;/p&gt; &#xA;&lt;p&gt;The recommended minimum production infrastructure for CockroachDB is outlined in &lt;a href=&#34;https://www.cockroachlabs.com/docs/stable/recommended-production-settings.html#basic-hardware-recommendations&#34;&gt;these docs&lt;/a&gt; and Nakama can be run on instance types as small as &#34;g1-small&#34; on Google Cloud although we recommend a minimum of &#34;n1-standard-1&#34; in production. The specific hardware requirements will depend on what features of the server are used. Reach out to us for help and advice on what servers to run.&lt;/p&gt; &#xA;&lt;h3&gt;Heroic Cloud&lt;/h3&gt; &#xA;&lt;p&gt;You can support development, new features, and maintainance of the server by using the Heroic Labs&#39; &lt;a href=&#34;https://heroiclabs.com/heroic-cloud/&#34;&gt;Heroic Cloud&lt;/a&gt; for deployment. This service handles the uptime, replication, backups, logs, data upgrades, and all other tasks involved with production server environments.&lt;/p&gt; &#xA;&lt;p&gt;Have a look at our &lt;a href=&#34;https://heroiclabs.com/heroic-cloud/&#34;&gt;Heroic Cloud&lt;/a&gt; service for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;The development roadmap is managed as GitHub issues and pull requests are welcome. If you&#39;re interested to add a feature which is not mentioned on the issue tracker please open one to create a discussion or drop in and discuss it in the &lt;a href=&#34;https://forum.heroiclabs.com&#34;&gt;community forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Simple Builds&lt;/h3&gt; &#xA;&lt;p&gt;All dependencies required for a build are vendored as part of the Go project. We recommend a modern release of the Go toolchain and do not store the codebase in the old GOPATH.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the source tree.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone &#34;https://github.com/heroiclabs/nakama&#34; nakama&#xA;cd nakama&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the project from source.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go build -trimpath -mod=vendor&#xA;./nakama --version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Full Source Builds&lt;/h3&gt; &#xA;&lt;p&gt;The codebase uses Protocol Buffers, GRPC, GRPC-Gateway, and the OpenAPI spec as part of the project. These dependencies are generated as sources and committed to the repository to simplify builds for contributors.&lt;/p&gt; &#xA;&lt;p&gt;To build the codebase and generate all sources follow these steps.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the toolchain.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go install \&#xA;    &#34;google.golang.org/protobuf/cmd/protoc-gen-go&#34; \&#xA;    &#34;google.golang.org/grpc/cmd/protoc-gen-go-grpc&#34; \&#xA;    &#34;github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway&#34; \&#xA;    &#34;github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;ve made changes to the embedded Console.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd console/ui&#xA;ng serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Re-generate the protocol buffers, gateway code and console UI.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;env PATH=&#34;$HOME/go/bin:$PATH&#34; go generate -x ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the codebase.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go build -trimpath -mod=vendor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;In order to run all the unit and integration tests run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose -f ./docker-compose-tests.yml up --build --abort-on-container-exit; docker-compose -f ./docker-compose-tests.yml down -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create an isolated environment with Nakama and database instances, run all the tests, and drop the environment afterwards.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/heroiclabs/nakama/raw/master/LICENSE&#34;&gt;Apache-2 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>charmbracelet/gum</title>
    <updated>2025-05-11T01:39:11Z</updated>
    <id>tag:github.com,2025-05-11:/charmbracelet/gum</id>
    <link href="https://github.com/charmbracelet/gum" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for glamorous shell scripts 🎀&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gum&lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://stuff.charm.sh/gum/nutritional-information.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://stuff.charm.sh/gum/gum.png&#34; alt=&#34;Gum Image&#34; width=&#34;450&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/charmbracelet/gum/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/charmbracelet/gum.svg?sanitize=true&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/charmbracelet/gum?tab=doc&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/golang/gddo?status.svg?sanitize=true&#34; alt=&#34;Go Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/charmbracelet/gum/actions&#34;&gt;&lt;img src=&#34;https://github.com/charmbracelet/gum/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;A tool for glamorous shell scripts. Leverage the power of &lt;a href=&#34;https://github.com/charmbracelet/bubbles&#34;&gt;Bubbles&lt;/a&gt; and &lt;a href=&#34;https://github.com/charmbracelet/lipgloss&#34;&gt;Lip Gloss&lt;/a&gt; in your scripts and aliases without writing any Go code!&lt;/p&gt; &#xA;&lt;img alt=&#34;Shell running the ./demo.sh script&#34; width=&#34;600&#34; src=&#34;https://vhs.charm.sh/vhs-1qY57RrQlXCuydsEgDp68G.gif&#34;&gt; &#xA;&lt;p&gt;The above example is running from a single shell script (&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/examples/demo.sh&#34;&gt;source&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;Gum provides highly configurable, ready-to-use utilities to help you write useful shell scripts and dotfiles aliases with just a few lines of code. Let&#39;s build a simple script to help you write &lt;a href=&#34;https://www.conventionalcommits.org/en/v1.0.0/#summary&#34;&gt;Conventional Commits&lt;/a&gt; for your dotfiles.&lt;/p&gt; &#xA;&lt;p&gt;Ask for the commit type with gum choose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum choose &#34;fix&#34; &#34;feat&#34; &#34;docs&#34; &#34;style&#34; &#34;refactor&#34; &#34;test&#34; &#34;chore&#34; &#34;revert&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] This command itself will print to stdout which is not all that useful. To make use of the command later on you can save the stdout to a &lt;code&gt;$VARIABLE&lt;/code&gt; or &lt;code&gt;file.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Prompt for the scope of these changes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum input --placeholder &#34;scope&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prompt for the summary and description of changes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum input --value &#34;$TYPE$SCOPE: &#34; --placeholder &#34;Summary of this change&#34;&#xA;gum write --placeholder &#34;Details of this change&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Confirm before committing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum confirm &#34;Commit changes?&#34; &amp;amp;&amp;amp; git commit -m &#34;$SUMMARY&#34; -m &#34;$DESCRIPTION&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/charmbracelet/gum/raw/main/examples/commit.sh&#34;&gt;complete example&lt;/a&gt; for combining these commands in a single script.&lt;/p&gt; &#xA;&lt;img alt=&#34;Running the ./examples/commit.sh script to commit to git&#34; width=&#34;600&#34; src=&#34;https://vhs.charm.sh/vhs-7rRq3LsEuJVwhwr0xf6Er7.gif&#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use a package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# macOS or Linux&#xA;brew install gum&#xA;&#xA;# Arch Linux (btw)&#xA;pacman -S gum&#xA;&#xA;# Nix&#xA;nix-env -iA nixpkgs.gum&#xA;&#xA;# Flox&#xA;flox install gum&#xA;&#xA;# Windows (via WinGet or Scoop)&#xA;winget install charmbracelet.gum&#xA;scoop install charm-gum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Debian/Ubuntu&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /etc/apt/keyrings&#xA;curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg&#xA;echo &#34;deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *&#34; | sudo tee /etc/apt/sources.list.d/charm.list&#xA;sudo apt update &amp;amp;&amp;amp; sudo apt install gum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Fedora/RHEL/OpenSuse&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;[charm]&#xA;name=Charm&#xA;baseurl=https://repo.charm.sh/yum/&#xA;enabled=1&#xA;gpgcheck=1&#xA;gpgkey=https://repo.charm.sh/yum/gpg.key&#39; | sudo tee /etc/yum.repos.d/charm.repo&#xA;sudo rpm --import https://repo.charm.sh/yum/gpg.key&#xA;&#xA;# yum&#xA;sudo yum install gum&#xA;&#xA;# zypper&#xA;sudo zypper refresh&#xA;sudo zypper install gum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;FreeBSD&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# packages&#xA;sudo pkg install gum&#xA;&#xA;# ports&#xA;cd /usr/ports/devel/gum &amp;amp;&amp;amp; sudo make install clean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Or download it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/charmbracelet/gum/releases&#34;&gt;Packages&lt;/a&gt; are available in Debian, RPM, and Alpine formats&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/charmbracelet/gum/releases&#34;&gt;Binaries&lt;/a&gt; are available for Linux, macOS, Windows, FreeBSD, OpenBSD, and NetBSD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Or just install it with &lt;code&gt;go&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/charmbracelet/gum@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#choose&#34;&gt;&lt;code&gt;choose&lt;/code&gt;&lt;/a&gt;: Choose an option from a list of choices&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#confirm&#34;&gt;&lt;code&gt;confirm&lt;/code&gt;&lt;/a&gt;: Ask a user to confirm an action&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#file&#34;&gt;&lt;code&gt;file&lt;/code&gt;&lt;/a&gt;: Pick a file from a folder&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#filter&#34;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;: Filter items from a list&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#format&#34;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;: Format a string using a template&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#input&#34;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt;: Prompt for some input&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#join&#34;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;: Join text vertically or horizontally&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#pager&#34;&gt;&lt;code&gt;pager&lt;/code&gt;&lt;/a&gt;: Scroll through a file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#spin&#34;&gt;&lt;code&gt;spin&lt;/code&gt;&lt;/a&gt;: Display spinner while running a command&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#style&#34;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt;: Apply coloring, borders, spacing to text&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#table&#34;&gt;&lt;code&gt;table&lt;/code&gt;&lt;/a&gt;: Render a table of data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#write&#34;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt;: Prompt for long-form text&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/#log&#34;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt;: Log messages to output&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;You can customize &lt;code&gt;gum&lt;/code&gt; options and styles with &lt;code&gt;--flags&lt;/code&gt; and &lt;code&gt;$ENVIRONMENT_VARIABLES&lt;/code&gt;. See &lt;code&gt;gum &amp;lt;command&amp;gt; --help&lt;/code&gt; for a full view of each command&#39;s customization and configuration options.&lt;/p&gt; &#xA;&lt;p&gt;Customize with &lt;code&gt;--flags&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;gum input --cursor.foreground &#34;#FF0&#34; \&#xA;          --prompt.foreground &#34;#0FF&#34; \&#xA;          --placeholder &#34;What&#39;s up?&#34; \&#xA;          --prompt &#34;* &#34; \&#xA;          --width 80 \&#xA;          --value &#34;Not much, hby?&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Customize with &lt;code&gt;ENVIRONMENT_VARIABLES&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GUM_INPUT_CURSOR_FOREGROUND=&#34;#FF0&#34;&#xA;export GUM_INPUT_PROMPT_FOREGROUND=&#34;#0FF&#34;&#xA;export GUM_INPUT_PLACEHOLDER=&#34;What&#39;s up?&#34;&#xA;export GUM_INPUT_PROMPT=&#34;* &#34;&#xA;export GUM_INPUT_WIDTH=80&#xA;&#xA;# --flags can override values set with environment&#xA;gum input&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img alt=&#34;Gum input displaying most customization options&#34; width=&#34;600&#34; src=&#34;https://vhs.charm.sh/vhs-5zb9DlQYA70aL9ZpYLTwKv.gif&#34;&gt; &#xA;&lt;h2&gt;Input&lt;/h2&gt; &#xA;&lt;p&gt;Prompt for input with a simple command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum input &amp;gt; answer.txt&#xA;gum input --password &amp;gt; password.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-1nScrStFI3BMlCp5yrLtyg.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum input typing Not much, you?&#34;&gt; &#xA;&lt;h2&gt;Write&lt;/h2&gt; &#xA;&lt;p&gt;Prompt for some multi-line text (&lt;code&gt;ctrl+d&lt;/code&gt; to complete text entry).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum write &amp;gt; story.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-7abdKKrUEukgx9aJj8O5GX.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum write typing a story&#34;&gt; &#xA;&lt;h2&gt;Filter&lt;/h2&gt; &#xA;&lt;p&gt;Filter a list of values with fuzzy matching:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo Strawberry &amp;gt;&amp;gt; flavors.txt&#xA;echo Banana &amp;gt;&amp;gt; flavors.txt&#xA;echo Cherry &amp;gt;&amp;gt; flavors.txt&#xA;gum filter &amp;lt; flavors.txt &amp;gt; selection.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-61euOQtKPtQVD7nDpHQhzr.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum filter on different bubble gum flavors&#34;&gt; &#xA;&lt;p&gt;Select multiple options with the &lt;code&gt;--limit&lt;/code&gt; flag or &lt;code&gt;--no-limit&lt;/code&gt; flag. Use &lt;code&gt;tab&lt;/code&gt; or &lt;code&gt;ctrl+space&lt;/code&gt; to select, &lt;code&gt;enter&lt;/code&gt; to confirm.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat flavors.txt | gum filter --limit 2&#xA;cat flavors.txt | gum filter --no-limit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Choose&lt;/h2&gt; &#xA;&lt;p&gt;Choose an option from a list of choices.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;Pick a card, any card...&#34;&#xA;CARD=$(gum choose --height 15 {{A,K,Q,J},{10..2}}&#34; &#34;{♠,♥,♣,♦})&#xA;echo &#34;Was your card the $CARD?&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also select multiple items with the &lt;code&gt;--limit&lt;/code&gt; or &lt;code&gt;--no-limit&lt;/code&gt; flag, which determines the maximum of items that can be chosen.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat songs.txt | gum choose --limit 5&#xA;cat foods.txt | gum choose --no-limit --header &#34;Grocery Shopping&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-3zV1LvofA6Cbn5vBu1NHHl.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum choose with numbers and gum flavors&#34;&gt; &#xA;&lt;h2&gt;Confirm&lt;/h2&gt; &#xA;&lt;p&gt;Confirm whether to perform an action. Exits with code &lt;code&gt;0&lt;/code&gt; (affirmative) or &lt;code&gt;1&lt;/code&gt; (negative) depending on selection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum confirm &amp;amp;&amp;amp; rm file.txt || echo &#34;File not removed&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-3xRFvbeQ4lqGerbHY7y3q2.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum confirm&#34;&gt; &#xA;&lt;h2&gt;File&lt;/h2&gt; &#xA;&lt;p&gt;Prompt the user to select a file from the file tree.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$EDITOR $(gum file $HOME)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-2RMRqmnOPneneIgVJJ3mI1.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum file&#34;&gt; &#xA;&lt;h2&gt;Pager&lt;/h2&gt; &#xA;&lt;p&gt;Scroll through a long document with line numbers and a fully customizable viewport.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum pager &amp;lt; README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-3iMDpgOLmbYr0jrYEGbk7p.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum pager&#34;&gt; &#xA;&lt;h2&gt;Spin&lt;/h2&gt; &#xA;&lt;p&gt;Display a spinner while running a script or command. The spinner will automatically stop after the given command exits.&lt;/p&gt; &#xA;&lt;p&gt;To view or pipe the command&#39;s output, use the &lt;code&gt;--show-output&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum spin --spinner dot --title &#34;Buying Bubble Gum...&#34; -- sleep 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-3YFswCmoY4o3Q7MyzWl6sS.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum spin while sleeping for 5 seconds&#34;&gt; &#xA;&lt;p&gt;Available spinner types include: &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;dot&lt;/code&gt;, &lt;code&gt;minidot&lt;/code&gt;, &lt;code&gt;jump&lt;/code&gt;, &lt;code&gt;pulse&lt;/code&gt;, &lt;code&gt;points&lt;/code&gt;, &lt;code&gt;globe&lt;/code&gt;, &lt;code&gt;moon&lt;/code&gt;, &lt;code&gt;monkey&lt;/code&gt;, &lt;code&gt;meter&lt;/code&gt;, &lt;code&gt;hamburger&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table&lt;/h2&gt; &#xA;&lt;p&gt;Select a row from some tabular data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum table &amp;lt; flavors.csv | cut -d &#39;,&#39; -f 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- &lt;img src=&#34;https://stuff.charm.sh/gum/table.gif&#34; width=&#34;600&#34; alt=&#34;Shell running gum table&#34; /&gt; --&gt; &#xA;&lt;h2&gt;Style&lt;/h2&gt; &#xA;&lt;p&gt;Pretty print any string with any layout with one command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum style \&#xA;&#x9;--foreground 212 --border-foreground 212 --border double \&#xA;&#x9;--align center --width 50 --margin &#34;1 2&#34; --padding &#34;2 4&#34; \&#xA;&#x9;&#39;Bubble Gum (1¢)&#39; &#39;So sweet and so fresh!&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/charmbracelet/gum/assets/42545625/67468acf-b3e0-4e78-bd89-360739eb44fa&#34; width=&#34;600&#34; alt=&#34;Bubble Gum, So sweet and so fresh!&#34;&gt; &#xA;&lt;h2&gt;Join&lt;/h2&gt; &#xA;&lt;p&gt;Combine text vertically or horizontally. Use this command with &lt;code&gt;gum style&lt;/code&gt; to build layouts and pretty output.&lt;/p&gt; &#xA;&lt;p&gt;Tip: Always wrap the output of &lt;code&gt;gum style&lt;/code&gt; in quotes to preserve newlines (&lt;code&gt;\n&lt;/code&gt;) when using it as an argument in the &lt;code&gt;join&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;I=$(gum style --padding &#34;1 5&#34; --border double --border-foreground 212 &#34;I&#34;)&#xA;LOVE=$(gum style --padding &#34;1 4&#34; --border double --border-foreground 57 &#34;LOVE&#34;)&#xA;BUBBLE=$(gum style --padding &#34;1 8&#34; --border double --border-foreground 255 &#34;Bubble&#34;)&#xA;GUM=$(gum style --padding &#34;1 5&#34; --border double --border-foreground 240 &#34;Gum&#34;)&#xA;&#xA;I_LOVE=$(gum join &#34;$I&#34; &#34;$LOVE&#34;)&#xA;BUBBLE_GUM=$(gum join &#34;$BUBBLE&#34; &#34;$GUM&#34;)&#xA;gum join --align center --vertical &#34;$I_LOVE&#34; &#34;$BUBBLE_GUM&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/charmbracelet/gum/assets/42545625/68f7a25d-b495-48dd-982a-cee0c8ea5786&#34; width=&#34;600&#34; alt=&#34;I LOVE Bubble Gum written out in four boxes with double borders around them.&#34;&gt; &#xA;&lt;h2&gt;Format&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;format&lt;/code&gt; processes and formats bodies of text. &lt;code&gt;gum format&lt;/code&gt; can parse markdown, template strings, and named emojis.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Format some markdown&#xA;gum format -- &#34;# Gum Formats&#34; &#34;- Markdown&#34; &#34;- Code&#34; &#34;- Template&#34; &#34;- Emoji&#34;&#xA;echo &#34;# Gum Formats\n- Markdown\n- Code\n- Template\n- Emoji&#34; | gum format&#xA;&#xA;# Syntax highlight some code&#xA;cat main.go | gum format -t code&#xA;&#xA;# Render text any way you want with templates&#xA;echo &#39;{{ Bold &#34;Tasty&#34; }} {{ Italic &#34;Bubble&#34; }} {{ Color &#34;99&#34; &#34;0&#34; &#34; Gum &#34; }}&#39; \&#xA;    | gum format -t template&#xA;&#xA;# Display your favorite emojis!&#xA;echo &#39;I &lt;span&gt;❤️&lt;/span&gt; Bubble Gum &lt;span&gt;🍬&lt;/span&gt;&#39; | gum format -t emoji&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on template helpers, see the &lt;a href=&#34;https://github.com/muesli/termenv#template-helpers&#34;&gt;Termenv docs&lt;/a&gt;. For a full list of named emojis see the &lt;a href=&#34;https://api.github.com/emojis&#34;&gt;GitHub API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/charmbracelet/gum/assets/42545625/5cfbb0c8-0022-460d-841b-fec37527ca66&#34; width=&#34;300&#34; alt=&#34;Running gum format for different types of formats&#34;&gt; &#xA;&lt;h2&gt;Log&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;log&lt;/code&gt; logs messages to the terminal at using different levels and styling using the &lt;a href=&#34;https://github.com/charmbracelet/log&#34;&gt;&lt;code&gt;charmbracelet/log&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Log some debug information.&#xA;gum log --structured --level debug &#34;Creating file...&#34; name file.txt&#xA;# DEBUG Unable to create file. name=temp.txt&#xA;&#xA;# Log some error.&#xA;gum log --structured --level error &#34;Unable to create file.&#34; name file.txt&#xA;# ERROR Unable to create file. name=temp.txt&#xA;&#xA;# Include a timestamp.&#xA;gum log --time rfc822 --level error &#34;Unable to create file.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the Go &lt;a href=&#34;https://pkg.go.dev/time#pkg-constants&#34;&gt;&lt;code&gt;time&lt;/code&gt; package&lt;/a&gt; for acceptable &lt;code&gt;--time&lt;/code&gt; formats.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/charmbracelet/log&#34;&gt;&lt;code&gt;charmbracelet/log&lt;/code&gt;&lt;/a&gt; for more usage.&lt;/p&gt; &#xA;&lt;img src=&#34;https://vhs.charm.sh/vhs-6jupuFM0s2fXiUrBE0I1vU.gif&#34; width=&#34;600&#34; alt=&#34;Running gum log with debug and error levels&#34;&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;How to use &lt;code&gt;gum&lt;/code&gt; in your daily workflows:&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/charmbracelet/gum/main/examples/&#34;&gt;examples&lt;/a&gt; directory for more real world use cases.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Write a commit message:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -m &#34;$(gum input --width 50 --placeholder &#34;Summary of changes&#34;)&#34; \&#xA;           -m &#34;$(gum write --width 80 --placeholder &#34;Details of changes&#34;)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open files in your &lt;code&gt;$EDITOR&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$EDITOR $(gum filter)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect to a &lt;code&gt;tmux&lt;/code&gt; session&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SESSION=$(tmux list-sessions -F \#S | gum filter --placeholder &#34;Pick session...&#34;)&#xA;tmux switch-client -t &#34;$SESSION&#34; || tmux attach -t &#34;$SESSION&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pick a commit hash from &lt;code&gt;git&lt;/code&gt; history&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log --oneline | gum filter | cut -d&#39; &#39; -f1 # | copy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple &lt;a href=&#34;https://github.com/charmbracelet/skate&#34;&gt;&lt;code&gt;skate&lt;/code&gt;&lt;/a&gt; password selector.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;skate list -k | gum filter | xargs skate get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uninstall packages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew list | gum choose --no-limit | xargs brew uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clean up &lt;code&gt;git&lt;/code&gt; branches&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git branch | cut -c 3- | gum choose --no-limit | xargs git branch -D&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Checkout GitHub pull requests with &lt;a href=&#34;https://cli.github.com/&#34;&gt;&lt;code&gt;gh&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gh pr list | cut -f1,2 | gum choose | cut -f1 | xargs gh pr checkout&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy command from shell history&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gum filter &amp;lt; $HISTFILE --height 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo&lt;/code&gt; replacement&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias please=&#34;gum input --password | sudo -nS&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;We’d love to hear your thoughts on this project. Feel free to drop us a note!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/charmcli&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mastodon.social/@charmcli&#34;&gt;The Fediverse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://charm.sh/chat&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/charmbracelet/gum/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Part of &lt;a href=&#34;https://charm.sh&#34;&gt;Charm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://charm.sh/&#34;&gt;&lt;img alt=&#34;The Charm logo&#34; src=&#34;https://stuff.charm.sh/charm-badge.jpg&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Charm热爱开源 • Charm loves open source&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>owncast/owncast</title>
    <updated>2025-05-11T01:39:11Z</updated>
    <id>tag:github.com,2025-05-11:/owncast/owncast</id>
    <link href="https://github.com/owncast/owncast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Take control over your live stream video by running it yourself. Streaming + chat out of the box.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/owncast/owncast&#34; alt=&#34;Owncast&#34;&gt; &lt;img src=&#34;https://owncast.online/images/logo.png&#34; alt=&#34;Owncast Logo&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Take control over your content and stream it yourself.&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/owncast/owncast/raw/develop/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://owncast.online&#34;&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://watch.owncast.online/&#34;&gt;View Demo&lt;/a&gt; · &lt;a href=&#34;https://owncast.online/faq/&#34;&gt;FAQ&lt;/a&gt; · &lt;a href=&#34;https://github.com/owncast/owncast/issues&#34;&gt;Report Bug&lt;/a&gt; &lt;/p&gt; &#xA;&lt;!-- TABLE OF CONTENTS --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📒 &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#about-the-project&#34;&gt;About the Project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;👨‍💻 &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#use-with-your-existing-broadcasting-software&#34;&gt;Use with your broadcasting software&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🛠 &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#building-from-source&#34;&gt;Building from source&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🚨 &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#important-note-about-source-code-and-the-develop-branch&#34;&gt;Important note about source code and the develop branch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;🗄️ &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#backend&#34;&gt;Backend&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;⚛️ &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#frontend&#34;&gt;Frontend&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;👏 &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;💵 &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#donors&#34;&gt;Donors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;📝 &lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/owncast/owncast/develop/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ABOUT THE PROJECT --&gt; &#xA;&lt;h2&gt;About The Project&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://owncast.online/images/owncast-splash.png&#34;&gt; &lt;img src=&#34;https://owncast.online/images/owncast-splash.png&#34; width=&#34;70%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Owncast is an open source, self-hosted, decentralized, single user live video streaming and chat server for running your own live streams similar in style to the large mainstream options. It offers complete ownership over your content, interface, moderation and audience. &lt;a href=&#34;https://watch.owncast.online&#34;&gt;Visit the demo&lt;/a&gt; for an example.&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img alt=&#34;GitHub all releases&#34; src=&#34;https://img.shields.io/github/downloads/owncast/owncast/total?style=for-the-badge&#34;&gt; &#xA; &lt;a href=&#34;https://hub.docker.com/r/owncast/owncast&#34;&gt; &lt;img alt=&#34;Docker Pulls&#34; src=&#34;https://img.shields.io/docker/pulls/owncast/owncast?style=for-the-badge&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/owncast/owncast/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt; &lt;img alt=&#34;GitHub issues by-label&#34; src=&#34;https://img.shields.io/github/issues-raw/owncast/owncast/good%20first%20issue?style=for-the-badge&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://opencollective.com/owncast&#34;&gt; &lt;img alt=&#34;Open Collective backers and sponsors&#34; src=&#34;https://img.shields.io/opencollective/all/owncast?style=for-the-badge&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- GETTING STARTED --&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The goal is to have a single service that you can run and it works out of the box. &lt;strong&gt;Visit the &lt;a href=&#34;https://owncast.online/docs/quickstart/&#34;&gt;Quickstart&lt;/a&gt; to get up and running.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Use with your existing broadcasting software&lt;/h2&gt; &#xA;&lt;p&gt;In general, Owncast is compatible with any software that uses &lt;code&gt;RTMP&lt;/code&gt; to broadcast to a remote server. &lt;code&gt;RTMP&lt;/code&gt; is what all the major live streaming services use, so if you’re currently using one of those it’s likely that you can point your existing software at your Owncast instance instead.&lt;/p&gt; &#xA;&lt;p&gt;OBS, Streamlabs, Restream and many others have been used with Owncast. &lt;a href=&#34;https://owncast.online/docs/broadcasting/&#34;&gt;Read more about compatibility with existing software&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building from Source&lt;/h2&gt; &#xA;&lt;p&gt;Owncast consists of two projects.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The Owncast backend is written in Go.&lt;/li&gt; &#xA; &lt;li&gt;The frontend is written in React.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://owncast.online/development/&#34;&gt;Read more about running from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Important note about source code and the develop branch&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch is always the most up-to-date state of development and this may not be what you always want. If you want to run the latest released stable version, check out the tag related to that release. For example, if you&#39;d only like the source prior to the v0.1.0 development cycle you can check out the &lt;code&gt;v0.0.13&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Currently Owncast does not natively support Windows servers. However, Windows Users can use Windows Subsystem for Linux (WSL2) to install Owncast. For details visit &lt;a href=&#34;https://github.com/owncast/owncast/raw/develop/contrib/owncast_for_windows.md&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Backend&lt;/h3&gt; &#xA;&lt;p&gt;The Owncast backend is a service written in Go.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ensure you have prerequisites installed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;C compiler, such as &lt;a href=&#34;https://gcc.gnu.org/install/download.html&#34;&gt;GCC compiler&lt;/a&gt; or a &lt;a href=&#34;https://musl.libc.org/&#34;&gt;Musl-compatible compiler&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;ffmpeg&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://golang.org/dl/&#34;&gt;Go toolchain&lt;/a&gt; (1.24 or above).&lt;/li&gt; &#xA; &lt;li&gt;Clone the repo. &lt;code&gt;git clone https://github.com/owncast/owncast&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;go run main.go&lt;/code&gt; will run from the source.&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;code&gt;http://yourserver:8080&lt;/code&gt; to access the web interface or &lt;code&gt;http://yourserver:8080/admin&lt;/code&gt; to access the admin.&lt;/li&gt; &#xA; &lt;li&gt;Point your &lt;a href=&#34;https://owncast.online/docs/broadcasting/&#34;&gt;broadcasting software&lt;/a&gt; at your new server and start streaming.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Frontend&lt;/h3&gt; &#xA;&lt;p&gt;The frontend is the web interface that includes the player, chat, embed components, and other UI.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;This project lives in the &lt;code&gt;web&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install the Javascript dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Owncast is a growing open source project that is giving freedom, flexibility and fun to live streamers. And while we have a small team of kind, talented and thoughtful volunteers, we have gaps in our skillset that we’d love to fill so we can get even better at building tools that make a difference for people.&lt;/p&gt; &#xA;&lt;p&gt;We abide by our &lt;a href=&#34;https://owncast.online/contribute/&#34;&gt;Code of Conduct&lt;/a&gt; and feel strongly about open, appreciative, and empathetic people joining us. We’ve been very lucky to have this so far, so maybe you can help us with your skills and passion, too!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re new to the project, maybe you&#39;d be interested in looking at &lt;a href=&#34;https://github.com/owncast/owncast/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/owncast/owncast/good%20first%20issue.svg?sanitize=true&#34; alt=&#34;Good First Issue&#34;&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There is a larger, more detailed, and more up-to-date &lt;a href=&#34;https://owncast.online/help/&#34;&gt;guide for helping contribute to Owncast on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Donors&lt;/h3&gt; &#xA;&lt;p&gt;The Owncast project is possible thanks to the people who make a donation to support us and our work. Thank you to all our donors who help keep Owncast running by donating on OpenCollective. You can support this project by &lt;a href=&#34;https://opencollective.com/owncast#suppor&#34;&gt;becoming a backer/sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://opencollective.com/owncast#support&#34;&gt; &lt;img alt=&#34;Backer button&#34; src=&#34;https://opencollective.com/owncast/tiers/backers.svg?avatarHeight=36&amp;amp;width=600&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- LICENSE --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the MIT License. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul style=&#34;font-size:21px; color:black; &#34;&gt; &#xA; &lt;li&gt;Browser testing via &lt;a href=&#34;https://www.lambdatest.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.lambdatest.com/support/img/logo.svg?sanitize=true&#34; style=&#34;vertical-align: middle;margin-left:5px&#34; width=&#34;147&#34; height=&#34;26&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Project chat provided by &lt;a href=&#34;https://rocket.chat&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://owncast.online/images/sponsors/rocketchat.png&#34; width=&#34;147&#34; height=&#34;26&#34; style=&#34;vertical-align: middle;margin-left:5px&#34;&gt; &lt;/a&gt; &lt;/li&gt; &#xA; &lt;li&gt;CDN services by &lt;a href=&#34;https://fastly.com&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://owncast.online/images/sponsors/fastly.png&#34; height=&#34;26&#34; style=&#34;vertical-align: middle;margin-left:5px&#34;&gt; &lt;/a&gt; &lt;/li&gt; &#xA; &lt;li&gt;UI testing with Chromatic &lt;a href=&#34;https://chromatic.com&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://owncast.online/images/sponsors/chromatic.png&#34; height=&#34;26&#34; style=&#34;vertical-align: middle;margin-left:5px&#34;&gt; &lt;/a&gt; &lt;/li&gt; &#xA; &lt;li&gt;Infrastructure and hosting by &lt;a href=&#34;https://digitalocean.com?utm_medium=opensource&amp;amp;utm_source=owncast&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://owncast.online/images/sponsors/digitalocean.svg?sanitize=true&#34; height=&#34;26&#34; style=&#34;vertical-align: middle;margin-left:5px&#34;&gt; &lt;/a&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- CONTACT --&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Project chat: &lt;a href=&#34;https://owncast.rocket.chat/home&#34;&gt;Join us on Rocket.Chat&lt;/a&gt; if you want to contribute, follow along, or if you have questions.&lt;/p&gt; &#xA;&lt;p&gt;Gabe Kangas - &lt;a href=&#34;https://social.gabekangas.com/gabek&#34;&gt;@gabek@social.gabekangas.com&lt;/a&gt; - email &lt;a href=&#34;mailto:gabek@real-ity.com&#34;&gt;gabek@real-ity.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project Link: &lt;a href=&#34;https://github.com/owncast/owncast&#34;&gt;https://github.com/owncast/owncast&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>