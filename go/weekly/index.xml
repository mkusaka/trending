<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-09T01:55:19Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OpenIMSDK/Open-IM-Server</title>
    <updated>2023-07-09T01:55:19Z</updated>
    <id>tag:github.com,2023-07-09:/OpenIMSDK/Open-IM-Server</id>
    <link href="https://github.com/OpenIMSDK/Open-IM-Server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;IMÂç≥Êó∂ÈÄöËÆØ&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34; style=&#34;border-bottom: none&#34;&gt; &lt;b&gt; &lt;a href=&#34;https://doc.rentsoft.cn/&#34;&gt;Open IM Server&lt;/a&gt;&lt;br&gt; &lt;/b&gt; ‚≠êÔ∏è Open source Instant Messaging Server ‚≠êÔ∏è &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/OpenIMSDK/Open-IM-Server&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/OpenIMSDK/Open-IM-Server&#34; alt=&#34;A+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/OpenIMSDK/Open-IM-Server/good%20first%20issue?logo=%22github%22&#34; alt=&#34;good first&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/OpenIMSDK/Open-IM-Server.svg?style=flat&amp;amp;logo=github&amp;amp;colorB=deeppink&amp;amp;label=stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/openimsdk/shared_invite/zt-1tmoj26uf-_FDy3dowVHBiGvLk9e5Xkg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-100%2B-blueviolet?logo=slack&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache--2.0-green&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/OpenIMSDK/Open-IM-Server/main/README.md&#34;&gt;&lt;b&gt; English &lt;/b&gt;&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/OpenIMSDK/Open-IM-Server/main/README-zh_CN.md&#34;&gt;&lt;b&gt; ‰∏≠Êñá &lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Open-IM-Server&lt;/h2&gt; &#xA;&lt;p&gt;Instant messaging server. Backend in pure Golang, wire transport protocol is JSON over websocket. Everything is a message in Open-IM-Server, so you can extend custom messages easily, there is no need to modify the server code. Using microservice architectures, Open-IM-Server can be deployed using clusters. By deployment of the Open-IM-Server on the customer&#39;s server, developers can integrate instant messaging and real-time network capabilities into their own applications free of charge and quickly, and ensure the security and privacy of business data.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Everything in Free&lt;/li&gt; &#xA; &lt;li&gt;Scalable architecture&lt;/li&gt; &#xA; &lt;li&gt;Easy integration&lt;/li&gt; &#xA; &lt;li&gt;Good scalability&lt;/li&gt; &#xA; &lt;li&gt;High performance&lt;/li&gt; &#xA; &lt;li&gt;Lightweight&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple protocols&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit the Chinese official website here: &lt;a href=&#34;https://www.openim.online/zh&#34;&gt;üìö Open-IM docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;Installing Open-IM-Server&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM relies on five open source high-performance components: ETCD, MySQL, MongoDB, Redis, and Kafka. Privatization deployment Before Open-IM-Server, please make sure that the above five components have been installed. If your server does not have the above components, you must first install Missing components. If you have the above components, it is recommended to use them directly. If not, it is recommended to use Docker-compose, no To install dependencies, one-click deployment, faster and more convenient.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Deploy using Docker&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go environment&lt;/a&gt;. Make sure Go version is at least 1.17&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Open-IM project to your server&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/OpenIMSDK/Open-IM-Server.git --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploy&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Modify env&lt;/p&gt; &lt;pre&gt;&lt;code&gt;#cd Open-IM-server&#xA;USER=root  &#xA;PASSWORD=openIM123    #Password with more than 8 digits, excluding special characters&#xA;ENDPOINT=http://127.0.0.1:10005 #Replace 127.0.0.1 with Internet IP&#xA;DATA_DIR=./ &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Deploy &amp;amp;&amp;amp; Start&lt;/p&gt; &lt;pre&gt;&lt;code&gt;chmod +x install_im_server.sh;&#xA;./install_im_server.sh;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Check service&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd scripts;&#xA;./docker_check_service.sh./check_all.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/Open-IM-Servers-on-System.png&#34; alt=&#34;OpenIMServersonSystempng&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Deploy using source code&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go 1.17 or above.&lt;/li&gt; &#xA; &lt;li&gt;Clone&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/OpenIMSDK/Open-IM-Server.git --recursive &#xA;cd cmd/openim-sdk-core&#xA;git checkout main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set executable permissions&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd ../../scripts/&#xA;chmod +x *.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;build&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./batch_build_all_service.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;all services build success&lt;/p&gt; &#xA;&lt;h3&gt;CONFIGURATION INSTRUCTIONS&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM configuration is divided into basic component configuration and business internal service configuration. Developers need to fill in the address of each component as the address of their server component when using the product, and ensure that the internal service port of the business is not occupied&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Basic Component Configuration Instructions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ETCD &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Etcd is used for the discovery and registration of rpc services, etcd Schema is the prefix of the registered name, it is recommended to modify it to your company name, etcd address (ip+port) supports clustered deployment, you can fill in multiple ETCD addresses separated by commas, and also only one etcd address.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MySQL &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;mysql is used for full storage of messages and user relationships. Cluster deployment is not supported for the time being. Modify addresses and users, passwords, and database names.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mongo &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Mongo is used for offline storage of messages. The default storage is 7 days. Cluster deployment is temporarily not supported. Just modify the address and database name.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Redis &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Redis is currently mainly used for message serial number storage and user token information storage. Cluster deployment is temporarily not supported. Just modify the corresponding redis address and password.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Kafka &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Kafka is used as a message transfer storage queue to support cluster deployment, just modify the corresponding address&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Internal Service Configuration Instructions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;credential&amp;amp;&amp;amp;push &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The Open-IM needs to use the three-party offline push function. Currently, Tencent&#39;s three-party push is used. It supports IOS, Android and OSX push. This information is some registration information pushed by Tencent. Developers need to go to Tencent Cloud Mobile Push to register the corresponding information. If you do not fill in the corresponding information, you cannot use the offline message push function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;api&amp;amp;&amp;amp;rpcport&amp;amp;&amp;amp;longconnsvr&amp;amp;&amp;amp;rpcregistername &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The api port is the http interface, longconnsvr is the websocket listening port, and rpcport is the internal service startup port. Both support cluster deployment. Make sure that these ports are not used. If you want to open multiple services for a single service, fill in multiple ports separated by commas. rpcregistername is the service name registered by each service to the registry etcd, no need to modify&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;log&amp;amp;&amp;amp;modulename &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The log configuration includes the storage path of the log file, and the log is sent to elasticsearch for log viewing. Currently, the log is not supported to be sent to elasticsearch. The configuration does not need to be modified for the time being. The modulename is used to split the log according to the name of the service module. The default configuration is fine.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;multiloginpolicy&amp;amp;&amp;amp;tokenpolicy &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open-IM supports multi-terminal login. Currently, there are three multi-terminal login policies. The PC terminal and the mobile terminal are online at the same time by default. When multiple policies are configured to be true, the first policy with true is used by default, and the token policy is the generated token policy. , The developer can customize the expiration time of the token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;scripts DESCRIPTION&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM scripts provides service compilation, start, and stop scripts. There are four Open-IM scripts start modules, one is the http+rpc service start module, the second is the websocket service start module, then the msg_transfer module, and the last is the push module&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;path_info.cfg&amp;amp;&amp;amp;style_info.cfg&amp;amp;&amp;amp;functions.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Contains the path information of each module, including the path where the source code is located, the name of the service startup, the shell print font style, and some functions for processing shell strings&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;build_all_service.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compile the module, compile all the source code of Open-IM into a binary file and put it into the bin directory&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;start_rpc_api_service.sh&amp;amp;&amp;amp;msg_gateway_start.sh&amp;amp;&amp;amp;msg_transfer_start.sh&amp;amp;&amp;amp;push_start.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Independent scripts startup module, followed by api and rpc modules, message gateway module, message transfer module, and push module&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;start_all.sh&amp;amp;&amp;amp;stop_all.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Total scripts, start all services and close all services&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authentication Clow Chart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/open-im-server.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/Architecture.jpg&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;To start developing OpenIM&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/OpenIMSDK/community&#34;&gt;community repository&lt;/a&gt; hosts all information about building Kubernetes from source, how to contribute code and documentation, who to contact about what, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to this project are welcome! Please see &lt;a href=&#34;https://raw.githubusercontent.com/OpenIMSDK/Open-IM-Server/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Community Meetings&lt;/h2&gt; &#xA;&lt;p&gt;We want anyone to get involved in our community, we offer gifts and rewards, and we welcome you to join us every Thursday night.&lt;/p&gt; &#xA;&lt;p&gt;We take notes of each &lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/issues/381&#34;&gt;biweekly meeting&lt;/a&gt; in &lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/discussions/categories/meeting&#34;&gt;GitHub discussions&lt;/a&gt;, and our minutes are written in &lt;a href=&#34;https://docs.google.com/document/d/1nx8MDpuG74NASx081JcCpxPgDITNTpIIos0DS6Vr9GU/edit?usp=sharing&#34;&gt;Google Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who are using Open-IM-Server&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/OpenIMSDK/community/raw/main/ADOPTERS.md&#34;&gt;user case studies&lt;/a&gt; page includes the user list of the project. You can leave a &lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/issues/379&#34;&gt;üìùcomment&lt;/a&gt; to let us know your use case.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/OpenIM-Docs/raw/main/docs/images/WechatIMG20.jpeg&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Open-IM-Server is under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/OpenIMSDK/Open-IM-Server/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wagoodman/dive</title>
    <updated>2023-07-09T01:55:19Z</updated>
    <id>tag:github.com,2023-07-09:/wagoodman/dive</id>
    <link href="https://github.com/wagoodman/dive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for exploring each layer in a docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dive&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/wagoodman/dive.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wagoodman/dive/actions/workflows/validations.yaml&#34;&gt;&lt;img src=&#34;https://github.com/wagoodman/dive/actions/workflows/validations.yaml/badge.svg?sanitize=true&#34; alt=&#34;Validations&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/wagoodman/dive&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/wagoodman/dive&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wagoodman/dive/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT%202.0-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/wagoodman&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?style=flat&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A tool for exploring a docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagoodman/dive/main/.data/demo.gif&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To analyze a Docker image simply run dive with an image tag/id/digest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;your-image-tag&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or you can dive with docker command directly&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;alias dive=&#34;docker run -ti --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive&#34;&#xA;dive &amp;lt;your-image-tag&amp;gt;&#xA;&#xA;# for example&#xA;dive nginx:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you want to build your image then jump straight into analyzing it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive build -t &amp;lt;some-tag&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building on Macbook (supporting only the Docker container engine)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;      -v /var/run/docker.sock:/var/run/docker.sock \&#xA;      -v  &#34;$(pwd)&#34;:&#34;$(pwd)&#34; \&#xA;      -w &#34;$(pwd)&#34; \&#xA;      -v &#34;$HOME/.dive.yaml&#34;:&#34;$HOME/.dive.yaml&#34; \&#xA;      wagoodman/dive:latest build -t &amp;lt;some-tag&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally you can run this in your CI pipeline to ensure you&#39;re keeping wasted space to a minimum (this skips the UI):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CI=true dive &amp;lt;your-image&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagoodman/dive/main/.data/demo-ci.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is beta quality!&lt;/strong&gt; &lt;em&gt;Feel free to submit an issue if you want a new feature or find a bug :)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Show Docker image contents broken down by layer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Indicate what&#39;s changed in each layer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Files that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Estimate &#34;image efficiency&#34;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage &#34;score&#34; and total wasted file space is provided.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quick build/analysis cycles&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can build a Docker image and do an immediate analysis with one command: &lt;code&gt;dive build -t some-tag .&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You only need to replace your &lt;code&gt;docker build&lt;/code&gt; command with the same &lt;code&gt;dive build&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CI Integration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Analyze an image and get a pass/fail result based on the image efficiency and wasted space. Simply set &lt;code&gt;CI=true&lt;/code&gt; in the environment when invoking any valid dive command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multiple Image Sources and Container Engines Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;With the &lt;code&gt;--source&lt;/code&gt; option, you can select where to fetch the container image from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;your-image&amp;gt; --source &amp;lt;source&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dive &amp;lt;source&amp;gt;://&amp;lt;your-image&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With valid &lt;code&gt;source&lt;/code&gt; options as such:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt;: Docker engine (the default option)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-archive&lt;/code&gt;: A Docker Tar Archive from disk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;podman&lt;/code&gt;: Podman engine (linux only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu/Debian&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export DIVE_VERSION=$(curl -sL &#34;https://api.github.com/repos/wagoodman/dive/releases/latest&#34; | grep &#39;&#34;tag_name&#34;:&#39; | sed -E &#39;s/.*&#34;v([^&#34;]+)&#34;.*/\1/&#39;)&#xA;curl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.deb&#xA;sudo apt install ./dive_${DIVE_VERSION}_linux_amd64.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;RHEL/Centos&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export DIVE_VERSION=$(curl -sL &#34;https://api.github.com/repos/wagoodman/dive/releases/latest&#34; | grep &#39;&#34;tag_name&#34;:&#39; | sed -E &#39;s/.*&#34;v([^&#34;]+)&#34;.*/\1/&#39;)&#xA;curl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.rpm&#xA;rpm -i dive_${DIVE_VERSION}_linux_amd64.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Available in the &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/dive/&#34;&gt;extra repository&lt;/a&gt; and can be installed via &lt;a href=&#34;https://wiki.archlinux.org/title/Pacman&#34;&gt;pacman&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -S dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo port install dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or download the latest Darwin build from the &lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Download the &lt;a href=&#34;https://github.com/wagoodman/dive/releases/latest&#34;&gt;latest release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Go tools&lt;/strong&gt; Requires Go version 1.10 or higher.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get github.com/wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: installing in this way you will not see a proper version when running &lt;code&gt;dive -v&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Nix/NixOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;On NixOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -iA nixos.dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On non-NixOS (Linux, Mac)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -iA nixpkgs.dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull quay.io/wagoodman/dive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When running you&#39;ll need to include the docker socket file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker for Windows (showing PowerShell compatible line breaks; collapse to a single line for Command Prompt compatibility)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; depending on the version of docker you are running locally you may need to specify the docker API version as an environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;   DOCKER_API_VERSION=1.37 dive ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you are running with a docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    -e DOCKER_API_VERSION=1.37 \&#xA;    wagoodman/dive:latest &amp;lt;dive arguments...&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CI Integration&lt;/h2&gt; &#xA;&lt;p&gt;When running dive with the environment variable &lt;code&gt;CI=true&lt;/code&gt; then the dive UI will be bypassed and will instead analyze your docker image, giving it a pass/fail indication via return code. Currently there are three metrics supported via a &lt;code&gt;.dive-ci&lt;/code&gt; file that you can put at the root of your repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rules:&#xA;  # If the efficiency is measured below X%, mark as failed.&#xA;  # Expressed as a ratio between 0-1.&#xA;  lowestEfficiency: 0.95&#xA;&#xA;  # If the amount of wasted space is at least X or larger than X, mark as failed.&#xA;  # Expressed in B, KB, MB, and GB.&#xA;  highestWastedBytes: 20MB&#xA;&#xA;  # If the amount of wasted space makes up for X% or more of the image, mark as failed.&#xA;  # Note: the base image layer is NOT included in the total image size.&#xA;  # Expressed as a ratio between 0-1; fails if the threshold is met or crossed.&#xA;  highestUserWastedPercent: 0.20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can override the CI config path with the &lt;code&gt;--ci-config&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h2&gt;KeyBindings&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key Binding&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + C&lt;/kbd&gt; or &lt;kbd&gt;Q&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switch between the layer and filetree views&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + F&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filter files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll up a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll down a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Layer view: see aggregated image modifications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + L&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Layer view: see current layer modifications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Space&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: collapse/uncollapse a directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + Space&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: collapse/uncollapse all directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide added files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + R&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide removed files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + M&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide modified files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + U&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide unmodified files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl + B&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: show/hide file attributes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: scroll up a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filetree view: scroll down a page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;UI Configuration&lt;/h2&gt; &#xA;&lt;p&gt;No configuration is necessary, however, you can create a config file and override values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# supported options are &#34;docker&#34; and &#34;podman&#34;&#xA;container-engine: docker&#xA;# continue with analysis even if there are errors parsing the image archive&#xA;ignore-errors: false&#xA;log:&#xA;  enabled: true&#xA;  path: ./dive.log&#xA;  level: info&#xA;&#xA;# Note: you can specify multiple bindings by separating values with a comma.&#xA;# Note: UI hinting is derived from the first binding&#xA;keybinding:&#xA;  # Global bindings&#xA;  quit: ctrl+c&#xA;  toggle-view: tab&#xA;  filter-files: ctrl+f, ctrl+slash&#xA;&#xA;  # Layer view specific bindings&#xA;  compare-all: ctrl+a&#xA;  compare-layer: ctrl+l&#xA;&#xA;  # File view specific bindings&#xA;  toggle-collapse-dir: space&#xA;  toggle-collapse-all-dir: ctrl+space&#xA;  toggle-added-files: ctrl+a&#xA;  toggle-removed-files: ctrl+r&#xA;  toggle-modified-files: ctrl+m&#xA;  toggle-unmodified-files: ctrl+u&#xA;  toggle-filetree-attributes: ctrl+b&#xA;  page-up: pgup&#xA;  page-down: pgdn&#xA;&#xA;diff:&#xA;  # You can change the default files shown in the filetree (right pane). All diff types are shown by default.&#xA;  hide:&#xA;    - added&#xA;    - removed&#xA;    - modified&#xA;    - unmodified&#xA;&#xA;filetree:&#xA;  # The default directory-collapse state&#xA;  collapse-dir: false&#xA;&#xA;  # The percentage of screen width the filetree should take on the screen (must be &amp;gt;0 and &amp;lt;1)&#xA;  pane-width: 0.5&#xA;&#xA;  # Show the file attributes next to the filetree&#xA;  show-attributes: true&#xA;&#xA;layer:&#xA;  # Enable showing all changes from this layer and every previous layer&#xA;  show-aggregated-changes: false&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;dive will search for configs in the following locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_DIRS/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.config/dive/*.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.dive.yaml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;.yml&lt;/code&gt; can be used instead of &lt;code&gt;.yaml&lt;/code&gt; if desired.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>go-sql-driver/mysql</title>
    <updated>2023-07-09T01:55:19Z</updated>
    <id>tag:github.com,2023-07-09:/go-sql-driver/mysql</id>
    <link href="https://github.com/go-sql-driver/mysql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go MySQL Driver is a MySQL driver for Go&#39;s (golang) database/sql package&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Go-MySQL-Driver&lt;/h1&gt; &#xA;&lt;p&gt;A MySQL-Driver for Go&#39;s &lt;a href=&#34;https://golang.org/pkg/database/sql/&#34;&gt;database/sql&lt;/a&gt; package&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/wiki/go-sql-driver/mysql/gomysql_m.png&#34; alt=&#34;Go-MySQL-Driver logo&#34; title=&#34;Golang Gopher holding the MySQL Dolphin&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#dsn-data-source-name&#34;&gt;DSN (Data Source Name)&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#password&#34;&gt;Password&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#protocol&#34;&gt;Protocol&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#address&#34;&gt;Address&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#connection-pool-and-timeouts&#34;&gt;Connection pool and timeouts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#contextcontext-support&#34;&gt;context.Context Support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#columntype-support&#34;&gt;ColumnType Support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#load-data-local-infile-support&#34;&gt;LOAD DATA LOCAL INFILE support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#timetime-support&#34;&gt;time.Time support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#unicode-support&#34;&gt;Unicode support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#testing--development&#34;&gt;Testing / Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lightweight and &lt;a href=&#34;https://github.com/go-sql-driver/sql-benchmark&#34; title=&#34;golang MySQL-Driver performance&#34;&gt;fast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Native Go implementation. No C-bindings, just pure Go&lt;/li&gt; &#xA; &lt;li&gt;Connections over TCP/IPv4, TCP/IPv6, Unix domain sockets or &lt;a href=&#34;https://godoc.org/github.com/go-sql-driver/mysql#DialFunc&#34;&gt;custom protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatic handling of broken connections&lt;/li&gt; &#xA; &lt;li&gt;Automatic Connection Pooling &lt;em&gt;(by database/sql package)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports queries larger than 16MB&lt;/li&gt; &#xA; &lt;li&gt;Full &lt;a href=&#34;https://golang.org/pkg/database/sql/#RawBytes&#34;&gt;&lt;code&gt;sql.RawBytes&lt;/code&gt;&lt;/a&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;Intelligent &lt;code&gt;LONG DATA&lt;/code&gt; handling in prepared statements&lt;/li&gt; &#xA; &lt;li&gt;Secure &lt;code&gt;LOAD DATA LOCAL INFILE&lt;/code&gt; support with file allowlisting and &lt;code&gt;io.Reader&lt;/code&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Optional &lt;code&gt;time.Time&lt;/code&gt; parsing&lt;/li&gt; &#xA; &lt;li&gt;Optional placeholder interpolation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go 1.18 or higher. We aim to support the 3 latest versions of Go.&lt;/li&gt; &#xA; &lt;li&gt;MySQL (5.6+), MariaDB, Percona Server, Google CloudSQL or Sphinx (2.2.3+)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Simple install the package to your &lt;a href=&#34;https://github.com/golang/go/wiki/GOPATH&#34; title=&#34;GOPATH&#34;&gt;$GOPATH&lt;/a&gt; with the &lt;a href=&#34;https://golang.org/cmd/go/&#34; title=&#34;go command&#34;&gt;go tool&lt;/a&gt; from shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go get -u github.com/go-sql-driver/mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git is installed&lt;/a&gt; on your machine and in your system&#39;s &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Go MySQL Driver&lt;/em&gt; is an implementation of Go&#39;s &lt;code&gt;database/sql/driver&lt;/code&gt; interface. You only need to import the driver and can use the full &lt;a href=&#34;https://golang.org/pkg/database/sql/&#34;&gt;&lt;code&gt;database/sql&lt;/code&gt;&lt;/a&gt; API then.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;mysql&lt;/code&gt; as &lt;code&gt;driverName&lt;/code&gt; and a valid &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#dsn-data-source-name&#34;&gt;DSN&lt;/a&gt; as &lt;code&gt;dataSourceName&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;&#x9;&#34;database/sql&#34;&#xA;&#x9;&#34;time&#34;&#xA;&#xA;&#x9;_ &#34;github.com/go-sql-driver/mysql&#34;&#xA;)&#xA;&#xA;// ...&#xA;&#xA;db, err := sql.Open(&#34;mysql&#34;, &#34;user:password@/dbname&#34;)&#xA;if err != nil {&#xA;&#x9;panic(err)&#xA;}&#xA;// See &#34;Important settings&#34; section.&#xA;db.SetConnMaxLifetime(time.Minute * 3)&#xA;db.SetMaxOpenConns(10)&#xA;db.SetMaxIdleConns(10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/go-sql-driver/mysql/wiki/Examples&#34; title=&#34;Go-MySQL-Driver Examples&#34;&gt;Examples are available in our Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Important settings&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;db.SetConnMaxLifetime()&lt;/code&gt; is required to ensure connections are closed by the driver safely before connection is closed by MySQL server, OS, or other middlewares. Since some middlewares close idle connections by 5 minutes, we recommend timeout shorter than 5 minutes. This setting helps load balancing and changing system variables too.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;db.SetMaxOpenConns()&lt;/code&gt; is highly recommended to limit the number of connection used by the application. There is no recommended limit number because it depends on application and MySQL server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;db.SetMaxIdleConns()&lt;/code&gt; is recommended to be set same to &lt;code&gt;db.SetMaxOpenConns()&lt;/code&gt;. When it is smaller than &lt;code&gt;SetMaxOpenConns()&lt;/code&gt;, connections can be opened and closed much more frequently than you expect. Idle connections can be closed by the &lt;code&gt;db.SetConnMaxLifetime()&lt;/code&gt;. If you want to close idle connections more rapidly, you can use &lt;code&gt;db.SetConnMaxIdleTime()&lt;/code&gt; since Go 1.15.&lt;/p&gt; &#xA;&lt;h3&gt;DSN (Data Source Name)&lt;/h3&gt; &#xA;&lt;p&gt;The Data Source Name has a common format, like e.g. &lt;a href=&#34;http://pear.php.net/manual/en/package.database.db.intro-dsn.php&#34;&gt;PEAR DB&lt;/a&gt; uses it, but without type-prefix (optional parts marked by squared brackets):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[username[:password]@][protocol[(address)]]/dbname[?param1=value1&amp;amp;...&amp;amp;paramN=valueN]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A DSN in its fullest form:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;username:password@protocol(address)/dbname?param=value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Except for the databasename, all values are optional. So the minimal DSN is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/dbname&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not want to preselect a database, leave &lt;code&gt;dbname&lt;/code&gt; empty:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This has the same effect as an empty DSN string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;dbname&lt;/code&gt; is escaped by &lt;a href=&#34;&#34;&gt;PathEscape()&lt;/a&gt;&lt;a href=&#34;https://pkg.go.dev/net/url#PathEscape&#34;&gt;https://pkg.go.dev/net/url#PathEscape&lt;/a&gt;) since v1.8.0. If your database name is &lt;code&gt;dbname/withslash&lt;/code&gt;, it becomes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/dbname%2Fwithslash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, &lt;a href=&#34;https://godoc.org/github.com/go-sql-driver/mysql#Config.FormatDSN&#34;&gt;Config.FormatDSN&lt;/a&gt; can be used to create a DSN string by filling a struct.&lt;/p&gt; &#xA;&lt;h4&gt;Password&lt;/h4&gt; &#xA;&lt;p&gt;Passwords can consist of any character. Escaping is &lt;strong&gt;not&lt;/strong&gt; necessary.&lt;/p&gt; &#xA;&lt;h4&gt;Protocol&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://golang.org/pkg/net/#Dial&#34;&gt;net.Dial&lt;/a&gt; for more information which networks are available. In general you should use an Unix domain socket if available and TCP otherwise for best performance.&lt;/p&gt; &#xA;&lt;h4&gt;Address&lt;/h4&gt; &#xA;&lt;p&gt;For TCP and UDP networks, addresses have the form &lt;code&gt;host[:port]&lt;/code&gt;. If &lt;code&gt;port&lt;/code&gt; is omitted, the default port will be used. If &lt;code&gt;host&lt;/code&gt; is a literal IPv6 address, it must be enclosed in square brackets. The functions &lt;a href=&#34;https://golang.org/pkg/net/#JoinHostPort&#34;&gt;net.JoinHostPort&lt;/a&gt; and &lt;a href=&#34;https://golang.org/pkg/net/#SplitHostPort&#34;&gt;net.SplitHostPort&lt;/a&gt; manipulate addresses in this form.&lt;/p&gt; &#xA;&lt;p&gt;For Unix domain sockets the address is the absolute path to the MySQL-Server-socket, e.g. &lt;code&gt;/var/run/mysqld/mysqld.sock&lt;/code&gt; or &lt;code&gt;/tmp/mysql.sock&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Parameters&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Parameters are case-sensitive!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Notice that any of &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;TRUE&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; is accepted to stand for a true boolean value. Not surprisingly, false can be specified as any of: &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;allowAllFiles&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;allowAllFiles=true&lt;/code&gt; disables the file allowlist for &lt;code&gt;LOAD DATA LOCAL INFILE&lt;/code&gt; and allows &lt;em&gt;all&lt;/em&gt; files. &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/load-data-local.html&#34;&gt;&lt;em&gt;Might be insecure!&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;allowCleartextPasswords&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;allowCleartextPasswords=true&lt;/code&gt; allows using the &lt;a href=&#34;https://dev.mysql.com/doc/en/cleartext-pluggable-authentication.html&#34;&gt;cleartext client side plugin&lt;/a&gt; if required by an account, such as one defined with the &lt;a href=&#34;http://dev.mysql.com/doc/en/pam-authentication-plugin.html&#34;&gt;PAM authentication plugin&lt;/a&gt;. Sending passwords in clear text may be a security problem in some configurations. To avoid problems if there is any possibility that the password would be intercepted, clients should connect to MySQL Server using a method that protects the password. Possibilities include &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#tls&#34;&gt;TLS / SSL&lt;/a&gt;, IPsec, or a private network.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;allowFallbackToPlaintext&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;allowFallbackToPlaintext=true&lt;/code&gt; acts like a &lt;code&gt;--ssl-mode=PREFERRED&lt;/code&gt; MySQL client as described in &lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/connection-options.html#option_general_ssl-mode&#34;&gt;Command Options for Connecting to the Server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;allowNativePasswords&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;allowNativePasswords=false&lt;/code&gt; disallows the usage of MySQL native password method.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;allowOldPasswords&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;allowOldPasswords=true&lt;/code&gt; allows the usage of the insecure old password method. This should be avoided, but is necessary in some cases. See also &lt;a href=&#34;https://github.com/go-sql-driver/mysql/wiki/old_passwords&#34;&gt;the old_passwords wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           string&#xA;Valid Values:   &amp;lt;name&amp;gt;&#xA;Default:        none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sets the charset used for client-server interaction (&lt;code&gt;&#34;SET NAMES &amp;lt;value&amp;gt;&#34;&lt;/code&gt;). If multiple charsets are set (separated by a comma), the following charset is used if setting the charset failes. This enables for example support for &lt;code&gt;utf8mb4&lt;/code&gt; (&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.5/en/charset-unicode-utf8mb4.html&#34;&gt;introduced in MySQL 5.5.3&lt;/a&gt;) with fallback to &lt;code&gt;utf8&lt;/code&gt; for older servers (&lt;code&gt;charset=utf8mb4,utf8&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#unicode-support&#34;&gt;Unicode Support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;checkConnLiveness&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On supported platforms connections retrieved from the connection pool are checked for liveness before using them. If the check fails, the respective connection is marked as bad and the query retried with another connection. &lt;code&gt;checkConnLiveness=false&lt;/code&gt; disables this liveness check of connections.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;collation&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           string&#xA;Valid Values:   &amp;lt;name&amp;gt;&#xA;Default:        utf8mb4_general_ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sets the collation used for client-server interaction on connection. In contrast to &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;collation&lt;/code&gt; does not issue additional queries. If the specified collation is unavailable on the target server, the connection will fail.&lt;/p&gt; &#xA;&lt;p&gt;A list of valid charsets for a server is retrievable with &lt;code&gt;SHOW COLLATION&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default collation (&lt;code&gt;utf8mb4_general_ci&lt;/code&gt;) is supported from MySQL 5.5. You should use an older collation (e.g. &lt;code&gt;utf8_general_ci&lt;/code&gt;) for older MySQL.&lt;/p&gt; &#xA;&lt;p&gt;Collations for charset &#34;ucs2&#34;, &#34;utf16&#34;, &#34;utf16le&#34;, and &#34;utf32&#34; can not be used (&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/charset-connection.html#charset-connection-impermissible-client-charset&#34;&gt;ref&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#unicode-support&#34;&gt;Unicode Support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;clientFoundRows&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;clientFoundRows=true&lt;/code&gt; causes an UPDATE to return the number of matching rows instead of the number of rows changed.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;columnsWithAlias&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When &lt;code&gt;columnsWithAlias&lt;/code&gt; is true, calls to &lt;code&gt;sql.Rows.Columns()&lt;/code&gt; will return the table alias and the column name separated by a dot. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SELECT u.id FROM users as u&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will return &lt;code&gt;u.id&lt;/code&gt; instead of just &lt;code&gt;id&lt;/code&gt; if &lt;code&gt;columnsWithAlias=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;interpolateParams&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;interpolateParams&lt;/code&gt; is true, placeholders (&lt;code&gt;?&lt;/code&gt;) in calls to &lt;code&gt;db.Query()&lt;/code&gt; and &lt;code&gt;db.Exec()&lt;/code&gt; are interpolated into a single query string with given parameters. This reduces the number of roundtrips, since the driver has to prepare a statement, execute it with given parameters and close the statement again with &lt;code&gt;interpolateParams=false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;This can not be used together with the multibyte encodings BIG5, CP932, GB2312, GBK or SJIS. These are rejected as they may &lt;a href=&#34;http://stackoverflow.com/a/12118602/3430118&#34;&gt;introduce a SQL injection vulnerability&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;loc&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           string&#xA;Valid Values:   &amp;lt;escaped name&amp;gt;&#xA;Default:        UTC&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sets the location for time.Time values (when using &lt;code&gt;parseTime=true&lt;/code&gt;). &lt;em&gt;&#34;Local&#34;&lt;/em&gt; sets the system&#39;s location. See &lt;a href=&#34;https://golang.org/pkg/time/#LoadLocation&#34;&gt;time.LoadLocation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Note that this sets the location for time.Time values but does not change MySQL&#39;s &lt;a href=&#34;https://dev.mysql.com/doc/refman/5.5/en/time-zone-support.html&#34;&gt;time_zone setting&lt;/a&gt;. For that see the &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#system-variables&#34;&gt;time_zone system variable&lt;/a&gt;, which can also be set as a DSN parameter.&lt;/p&gt; &#xA;&lt;p&gt;Please keep in mind, that param values must be &lt;a href=&#34;https://golang.org/pkg/net/url/#QueryEscape&#34;&gt;url.QueryEscape&lt;/a&gt;&#39;ed. Alternatively you can manually replace the &lt;code&gt;/&lt;/code&gt; with &lt;code&gt;%2F&lt;/code&gt;. For example &lt;code&gt;US/Pacific&lt;/code&gt; would be &lt;code&gt;loc=US%2FPacific&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;maxAllowedPacket&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:          decimal number&#xA;Default:       64*1024*1024&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Max packet size allowed in bytes. The default value is 64 MiB and should be adjusted to match the server settings. &lt;code&gt;maxAllowedPacket=0&lt;/code&gt; can be used to automatically fetch the &lt;code&gt;max_allowed_packet&lt;/code&gt; variable from server &lt;em&gt;on every connection&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;multiStatements&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Allow multiple statements in one query. This can be used to bach multiple queries. Use &lt;a href=&#34;https://pkg.go.dev/database/sql#Rows.NextResultSet&#34;&gt;Rows.NextResultSet()&lt;/a&gt; to get result of the second and subsequent queries.&lt;/p&gt; &#xA;&lt;p&gt;When &lt;code&gt;multiStatements&lt;/code&gt; is used, &lt;code&gt;?&lt;/code&gt; parameters must only be used in the first statement. &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#interpolateparams&#34;&gt;interpolateParams&lt;/a&gt; can be used to avoid this limitation unless prepared statement is used explicitly.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s possible to access the last inserted ID and number of affected rows for multiple statements by using &lt;code&gt;sql.Conn.Raw()&lt;/code&gt; and the &lt;code&gt;mysql.Result&lt;/code&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;conn, _ := db.Conn(ctx)&#xA;conn.Raw(func(conn interface{}) error {&#xA;  ex := conn.(driver.Execer)&#xA;  res, err := ex.Exec(`&#xA;  UPDATE point SET x = 1 WHERE y = 2;&#xA;  UPDATE point SET x = 2 WHERE y = 3;&#xA;  `, nil)&#xA;  // Both slices have 2 elements.&#xA;  log.Print(res.(mysql.Result).AllRowsAffected())&#xA;  log.Print(res.(mysql.Result).AllLastInsertIds())&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;parseTime&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;parseTime=true&lt;/code&gt; changes the output type of &lt;code&gt;DATE&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; values to &lt;code&gt;time.Time&lt;/code&gt; instead of &lt;code&gt;[]byte&lt;/code&gt; / &lt;code&gt;string&lt;/code&gt; The date or datetime like &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; is converted into zero value of &lt;code&gt;time.Time&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;readTimeout&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           duration&#xA;Default:        0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I/O read timeout. The value must be a decimal number with a unit suffix (&lt;em&gt;&#34;ms&#34;&lt;/em&gt;, &lt;em&gt;&#34;s&#34;&lt;/em&gt;, &lt;em&gt;&#34;m&#34;&lt;/em&gt;, &lt;em&gt;&#34;h&#34;&lt;/em&gt;), such as &lt;em&gt;&#34;30s&#34;&lt;/em&gt;, &lt;em&gt;&#34;0.5m&#34;&lt;/em&gt; or &lt;em&gt;&#34;1m30s&#34;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;rejectReadOnly&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool&#xA;Valid Values:   true, false&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;rejectReadOnly=true&lt;/code&gt; causes the driver to reject read-only connections. This is for a possible race condition during an automatic failover, where the mysql client gets connected to a read-only replica after the failover.&lt;/p&gt; &#xA;&lt;p&gt;Note that this should be a fairly rare case, as an automatic failover normally happens when the primary is down, and the race condition shouldn&#39;t happen unless it comes back up online as soon as the failover is kicked off. On the other hand, when this happens, a MySQL application can get stuck on a read-only connection until restarted. It is however fairly easy to reproduce, for example, using a manual failover on AWS Aurora&#39;s MySQL-compatible cluster.&lt;/p&gt; &#xA;&lt;p&gt;If you are not relying on read-only transactions to reject writes that aren&#39;t supposed to happen, setting this on some MySQL providers (such as AWS Aurora) is safer for failovers.&lt;/p&gt; &#xA;&lt;p&gt;Note that ERROR 1290 can be returned for a &lt;code&gt;read-only&lt;/code&gt; server and this option will cause a retry for that error. However the same error number is used for some other cases. You should ensure your application will never cause an ERROR 1290 except for &lt;code&gt;read-only&lt;/code&gt; mode when enabling this option.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;serverPubKey&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           string&#xA;Valid Values:   &amp;lt;name&amp;gt;&#xA;Default:        none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Server public keys can be registered with &lt;a href=&#34;https://godoc.org/github.com/go-sql-driver/mysql#RegisterServerPubKey&#34;&gt;&lt;code&gt;mysql.RegisterServerPubKey&lt;/code&gt;&lt;/a&gt;, which can then be used by the assigned name in the DSN. Public keys are used to transmit encrypted data, e.g. for authentication. If the server&#39;s public key is known, it should be set manually to avoid expensive and potentially insecure transmissions of the public key from the server to the client each time it is required.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           duration&#xA;Default:        OS default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Timeout for establishing connections, aka dial timeout. The value must be a decimal number with a unit suffix (&lt;em&gt;&#34;ms&#34;&lt;/em&gt;, &lt;em&gt;&#34;s&#34;&lt;/em&gt;, &lt;em&gt;&#34;m&#34;&lt;/em&gt;, &lt;em&gt;&#34;h&#34;&lt;/em&gt;), such as &lt;em&gt;&#34;30s&#34;&lt;/em&gt;, &lt;em&gt;&#34;0.5m&#34;&lt;/em&gt; or &lt;em&gt;&#34;1m30s&#34;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;tls&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           bool / string&#xA;Valid Values:   true, false, skip-verify, preferred, &amp;lt;name&amp;gt;&#xA;Default:        false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;tls=true&lt;/code&gt; enables TLS / SSL encrypted connection to the server. Use &lt;code&gt;skip-verify&lt;/code&gt; if you want to use a self-signed or invalid certificate (server side) or use &lt;code&gt;preferred&lt;/code&gt; to use TLS only when advertised by the server. This is similar to &lt;code&gt;skip-verify&lt;/code&gt;, but additionally allows a fallback to a connection which is not encrypted. Neither &lt;code&gt;skip-verify&lt;/code&gt; nor &lt;code&gt;preferred&lt;/code&gt; add any reliable security. You can use a custom TLS config after registering it with &lt;a href=&#34;https://godoc.org/github.com/go-sql-driver/mysql#RegisterTLSConfig&#34;&gt;&lt;code&gt;mysql.RegisterTLSConfig&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;writeTimeout&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           duration&#xA;Default:        0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I/O write timeout. The value must be a decimal number with a unit suffix (&lt;em&gt;&#34;ms&#34;&lt;/em&gt;, &lt;em&gt;&#34;s&#34;&lt;/em&gt;, &lt;em&gt;&#34;m&#34;&lt;/em&gt;, &lt;em&gt;&#34;h&#34;&lt;/em&gt;), such as &lt;em&gt;&#34;30s&#34;&lt;/em&gt;, &lt;em&gt;&#34;0.5m&#34;&lt;/em&gt; or &lt;em&gt;&#34;1m30s&#34;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;connectionAttributes&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Type:           comma-delimited string of user-defined &#34;key:value&#34; pairs&#xA;Valid Values:   (&amp;lt;name1&amp;gt;:&amp;lt;value1&amp;gt;,&amp;lt;name2&amp;gt;:&amp;lt;value2&amp;gt;,...)&#xA;Default:        none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/performance-schema-connection-attribute-tables.html&#34;&gt;Connection attributes&lt;/a&gt; are key-value pairs that application programs can pass to the server at connect time.&lt;/p&gt; &#xA;&lt;h5&gt;System Variables&lt;/h5&gt; &#xA;&lt;p&gt;Any other parameters are interpreted as system variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;boolean_var&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;: &lt;code&gt;SET &amp;lt;boolean_var&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;enum_var&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;: &lt;code&gt;SET &amp;lt;enum_var&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;string_var&amp;gt;=%27&amp;lt;value&amp;gt;%27&lt;/code&gt;: &lt;code&gt;SET &amp;lt;string_var&amp;gt;=&#39;&amp;lt;value&amp;gt;&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The values for string variables must be quoted with &lt;code&gt;&#39;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The values must also be &lt;a href=&#34;http://golang.org/pkg/net/url/#QueryEscape&#34;&gt;url.QueryEscape&lt;/a&gt;&#39;ed! (which implies values of string variables must be wrapped with &lt;code&gt;%27&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;autocommit=1&lt;/code&gt;: &lt;code&gt;SET autocommit=1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.5/en/time-zone-support.html&#34;&gt;&lt;code&gt;time_zone=%27Europe%2FParis%27&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;SET time_zone=&#39;Europe/Paris&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_transaction_isolation&#34;&gt;&lt;code&gt;transaction_isolation=%27REPEATABLE-READ%27&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;SET transaction_isolation=&#39;REPEATABLE-READ&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;user@unix(/path/to/socket)/dbname&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;root:pw@unix(/tmp/mysql.sock)/myDatabase?loc=Local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;user:password@tcp(localhost:5555)/dbname?tls=skip-verify&amp;amp;autocommit=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Treat warnings as errors by setting the system variable &lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html&#34;&gt;&lt;code&gt;sql_mode&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;user:password@/dbname?sql_mode=TRADITIONAL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;TCP via IPv6:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;user:password@tcp([de:ad:be:ef::ca:fe]:80)/dbname?timeout=90s&amp;amp;collation=utf8mb4_unicode_ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;TCP on a remote host, e.g. Amazon RDS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;id:password@tcp(your-amazonaws-uri.com:3306)/dbname&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Google Cloud SQL on App Engine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;user:password@unix(/cloudsql/project-id:region-name:instance-name)/dbname&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;TCP using default port (3306) on localhost:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;user:password@tcp/dbname?charset=utf8mb4,utf8&amp;amp;sys_var=esc%40ped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the default protocol (tcp) and host (localhost:3306):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;user:password@/dbname&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;No Database preselected:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;user:password@/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connection pool and timeouts&lt;/h3&gt; &#xA;&lt;p&gt;The connection pool is managed by Go&#39;s database/sql package. For details on how to configure the size of the pool and how long connections stay in the pool see &lt;code&gt;*DB.SetMaxOpenConns&lt;/code&gt;, &lt;code&gt;*DB.SetMaxIdleConns&lt;/code&gt;, and &lt;code&gt;*DB.SetConnMaxLifetime&lt;/code&gt; in the &lt;a href=&#34;https://golang.org/pkg/database/sql/&#34;&gt;database/sql documentation&lt;/a&gt;. The read, write, and dial timeouts for each individual connection are configured with the DSN parameters &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#readtimeout&#34;&gt;&lt;code&gt;readTimeout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#writetimeout&#34;&gt;&lt;code&gt;writeTimeout&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#timeout&#34;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt;, respectively.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;ColumnType&lt;/code&gt; Support&lt;/h2&gt; &#xA;&lt;p&gt;This driver supports the &lt;a href=&#34;https://golang.org/pkg/database/sql/#ColumnType&#34;&gt;&lt;code&gt;ColumnType&lt;/code&gt; interface&lt;/a&gt; introduced in Go 1.8, with the exception of &lt;a href=&#34;https://golang.org/pkg/database/sql/#ColumnType.Length&#34;&gt;&lt;code&gt;ColumnType.Length()&lt;/code&gt;&lt;/a&gt;, which is currently not supported. All Unsigned database type names will be returned &lt;code&gt;UNSIGNED &lt;/code&gt; with &lt;code&gt;INT&lt;/code&gt;, &lt;code&gt;TINYINT&lt;/code&gt;, &lt;code&gt;SMALLINT&lt;/code&gt;, &lt;code&gt;MEDIUMINT&lt;/code&gt;, &lt;code&gt;BIGINT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;context.Context&lt;/code&gt; Support&lt;/h2&gt; &#xA;&lt;p&gt;Go 1.8 added &lt;code&gt;database/sql&lt;/code&gt; support for &lt;code&gt;context.Context&lt;/code&gt;. This driver supports query timeouts and cancellation via contexts. See &lt;a href=&#34;https://golang.org/doc/go1.8#database_sql&#34;&gt;context support in the database/sql package&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;LOAD DATA LOCAL INFILE&lt;/code&gt; support&lt;/h3&gt; &#xA;&lt;p&gt;For this feature you need direct access to the package. Therefore you must change the import path (no &lt;code&gt;_&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &#34;github.com/go-sql-driver/mysql&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Files must be explicitly allowed by registering them with &lt;code&gt;mysql.RegisterLocalFile(filepath)&lt;/code&gt; (recommended) or the allowlist check must be deactivated by using the DSN parameter &lt;code&gt;allowAllFiles=true&lt;/code&gt; (&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/load-data-local.html&#34;&gt;&lt;em&gt;Might be insecure!&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To use a &lt;code&gt;io.Reader&lt;/code&gt; a handler function must be registered with &lt;code&gt;mysql.RegisterReaderHandler(name, handler)&lt;/code&gt; which returns a &lt;code&gt;io.Reader&lt;/code&gt; or &lt;code&gt;io.ReadCloser&lt;/code&gt;. The Reader is available with the filepath &lt;code&gt;Reader::&amp;lt;name&amp;gt;&lt;/code&gt; then. Choose different names for different handlers and &lt;code&gt;DeregisterReaderHandler&lt;/code&gt; when you don&#39;t need it anymore.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://godoc.org/github.com/go-sql-driver/mysql&#34; title=&#34;golang mysql driver documentation&#34;&gt;godoc of Go-MySQL-Driver&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;time.Time&lt;/code&gt; support&lt;/h3&gt; &#xA;&lt;p&gt;The default internal output type of MySQL &lt;code&gt;DATE&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; values is &lt;code&gt;[]byte&lt;/code&gt; which allows you to scan the value into a &lt;code&gt;[]byte&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;sql.RawBytes&lt;/code&gt; variable in your program.&lt;/p&gt; &#xA;&lt;p&gt;However, many want to scan MySQL &lt;code&gt;DATE&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; values into &lt;code&gt;time.Time&lt;/code&gt; variables, which is the logical equivalent in Go to &lt;code&gt;DATE&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; in MySQL. You can do that by changing the internal output type from &lt;code&gt;[]byte&lt;/code&gt; to &lt;code&gt;time.Time&lt;/code&gt; with the DSN parameter &lt;code&gt;parseTime=true&lt;/code&gt;. You can set the default &lt;a href=&#34;https://golang.org/pkg/time/#Location&#34;&gt;&lt;code&gt;time.Time&lt;/code&gt; location&lt;/a&gt; with the &lt;code&gt;loc&lt;/code&gt; DSN parameter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caution:&lt;/strong&gt; As of Go 1.1, this makes &lt;code&gt;time.Time&lt;/code&gt; the only variable type you can scan &lt;code&gt;DATE&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; values into. This breaks for example &lt;a href=&#34;https://github.com/go-sql-driver/mysql/wiki/Examples#rawbytes&#34;&gt;&lt;code&gt;sql.RawBytes&lt;/code&gt; support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unicode support&lt;/h3&gt; &#xA;&lt;p&gt;Since version 1.5 Go-MySQL-Driver automatically uses the collation &lt;code&gt; utf8mb4_general_ci&lt;/code&gt; by default.&lt;/p&gt; &#xA;&lt;p&gt;Other charsets / collations can be set using the &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#charset&#34;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/go-sql-driver/mysql/master/#collation&#34;&gt;&lt;code&gt;collation&lt;/code&gt;&lt;/a&gt; DSN parameter.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When only the &lt;code&gt;charset&lt;/code&gt; is specified, the &lt;code&gt;SET NAMES &amp;lt;charset&amp;gt;&lt;/code&gt; query is sent and the server&#39;s default collation is used.&lt;/li&gt; &#xA; &lt;li&gt;When both the &lt;code&gt;charset&lt;/code&gt; and &lt;code&gt;collation&lt;/code&gt; are specified, the &lt;code&gt;SET NAMES &amp;lt;charset&amp;gt; COLLATE &amp;lt;collation&amp;gt;&lt;/code&gt; query is sent.&lt;/li&gt; &#xA; &lt;li&gt;When only the &lt;code&gt;collation&lt;/code&gt; is specified, the collation is specified in the protocol handshake and the &lt;code&gt;SET NAMES&lt;/code&gt; query is not sent. This can save one roundtrip, but note that the server may ignore the specified collation silently and use the server&#39;s default charset/collation instead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://dev.mysql.com/doc/refman/8.0/en/charset-unicode.html&#34;&gt;http://dev.mysql.com/doc/refman/8.0/en/charset-unicode.html&lt;/a&gt; for more details on MySQL&#39;s Unicode support.&lt;/p&gt; &#xA;&lt;h2&gt;Testing / Development&lt;/h2&gt; &#xA;&lt;p&gt;To run the driver tests you may need to adjust the configuration. See the &lt;a href=&#34;https://github.com/go-sql-driver/mysql/wiki/Testing&#34; title=&#34;Testing&#34;&gt;Testing Wiki-Page&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Go-MySQL-Driver is not feature-complete yet. Your help is very appreciated. If you want to contribute, you can work on an &lt;a href=&#34;https://github.com/go-sql-driver/mysql/issues?state=open&#34;&gt;open issue&lt;/a&gt; or review a &lt;a href=&#34;https://github.com/go-sql-driver/mysql/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/go-sql-driver/mysql/raw/master/.github/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Go-MySQL-Driver is licensed under the &lt;a href=&#34;https://raw.github.com/go-sql-driver/mysql/master/LICENSE&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mozilla summarizes the license scope as follows:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;MPL: The copyleft applies to any files containing MPLed code.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;That means:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can &lt;strong&gt;use&lt;/strong&gt; the &lt;strong&gt;unchanged&lt;/strong&gt; source code both in private and commercially.&lt;/li&gt; &#xA; &lt;li&gt;When distributing, you &lt;strong&gt;must publish&lt;/strong&gt; the source code of any &lt;strong&gt;changed files&lt;/strong&gt; licensed under the MPL 2.0 under a) the MPL 2.0 itself or b) a compatible license (e.g. GPL 3.0 or Apache License 2.0).&lt;/li&gt; &#xA; &lt;li&gt;You &lt;strong&gt;needn&#39;t publish&lt;/strong&gt; the source code of your library as long as the files licensed under the MPL 2.0 are &lt;strong&gt;unchanged&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://www.mozilla.org/en-US/MPL/2.0/FAQ/&#34;&gt;MPL 2.0 FAQ&lt;/a&gt; if you have further questions regarding the license.&lt;/p&gt; &#xA;&lt;p&gt;You can read the full terms here: &lt;a href=&#34;https://raw.github.com/go-sql-driver/mysql/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/wiki/go-sql-driver/mysql/go-mysql-driver_m.jpg&#34; alt=&#34;Go Gopher and MySQL Dolphin&#34; title=&#34;Golang Gopher transporting the MySQL Dolphin in a wheelbarrow&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>