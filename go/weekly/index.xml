<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-17T01:45:44Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>daytonaio/daytona</title>
    <updated>2024-03-17T01:45:44Z</updated>
    <id>tag:github.com,2024-03-17:/daytonaio/daytona</id>
    <link href="https://github.com/daytonaio/daytona" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Open Source Dev Environment Manager.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-white.png&#34;&gt; &#xA;  &lt;img alt=&#34;Daytona logo&#34; src=&#34;https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png&#34; width=&#34;40%&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/#license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache--2.0-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/daytonaio/daytona&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/daytonaio/daytona&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/daytonaio/daytona/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/daytonaio/daytona&#34; alt=&#34;Issues - daytona&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/daytonaio/daytona&#34; alt=&#34;GitHub Release&#34;&gt; &lt;a href=&#34;https://console.algora.io/org/daytonaio/bounties?status=open&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fdaytonaio%2Fbounties%3Fstatus%3Dopen&#34; alt=&#34;Open Bounties&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://console.algora.io/org/daytonaio/bounties?status=completed&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fdaytonaio%2Fbounties%3Fstatus%3Dcompleted&#34; alt=&#34;Rewarded Bounties&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;The Open Source Development Environment Manager&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  Set up a development environment on any infrastructure, with a single command. &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+&#34;&gt;Report Bug&lt;/a&gt; · &lt;a href=&#34;https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%F0%9F%9A%80+Feature%3A+&#34;&gt;Request Feature&lt;/a&gt; · &lt;a href=&#34;https://join.slack.com/t/daytonacommunity/shared_invite/zt-273yohksh-Q5YSB5V7tnQzX2RoTARr7Q&#34;&gt;Join Our Slack&lt;/a&gt; · &lt;a href=&#34;https://twitter.com/Daytonaio&#34;&gt;Twitter&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://github.com/daytonaio/daytona/raw/main/assets/images/daytona_demo.gif&#34; width=&#34;40%&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Single Command&lt;/strong&gt;: Activate a fully configured development environment with a single command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Runs everywhere&lt;/strong&gt;: spin up your development environment on any machine — whether it&#39;s local, remote, cloud-based, physical server, or a VM &amp;amp; any architecture x86 or ARM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configuration File Support&lt;/strong&gt;: Initially support for &lt;a href=&#34;https://containers.dev/&#34;&gt;dev container&lt;/a&gt;, ability to expand to DevFile, Nix &amp;amp; Flox (Contributions welcome here!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prebuilds System&lt;/strong&gt;: Drastically improve environment setup times (Contributions welcome here!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IDE Support&lt;/strong&gt; : Seamlessly supports &lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;VS Code&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://www.jetbrains.com/remote-development/gateway/&#34;&gt;JetBrains&lt;/a&gt; locally, ready to use without configuration. Includes a built-in Web IDE for added convenience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Git Provider Integration&lt;/strong&gt;: GitHub, GitLab, Bitbucket &amp;amp; Gitea can be connected, allowing easy repo branch or PR pull and commit back from the workspaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple Project Workspace&lt;/strong&gt;: Support for multiple project repositories in the same workspace, making it easy to develop using a micro-service architecture.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reverse Proxy Integration&lt;/strong&gt;: Enable collaboration and streamline feedback loops by leveraging reverse proxy functionality. Access preview ports and the Web IDE seamlessly, even behind firewalls.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensibility&lt;/strong&gt;: Enable extensibility with plugin or provider development. Moreover, in any dynamic language, not just Go(Contributions welcome here!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Automatically creates a VPN connection between the client machine and the development environment, ensuring a fully secure connection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;All Ports&lt;/strong&gt;: The VPN connection enables access to all ports on the development environments, removing the need to setup port forwards over SSH connection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Works on my Machine&lt;/strong&gt;: Never experience it again.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Mac / Linux&lt;/h3&gt; &#xA;&lt;p&gt;Install Daytona into /usr/local/bin&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sf -L https://download.daytona.io/daytona/get-server.sh | sudo bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or if you want to install Daytona to some other path where you don&#39;t need sudo&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sf -L https://download.daytona.io/daytona/get-server.sh | DAYTONA_PATH=/home/user/bin bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;AMD&lt;/summary&gt; Run the following command in Windows PowerShell: &#xA; &lt;pre&gt;&lt;code class=&#34;language-pwsh&#34;&gt;md -Force &#34;$Env:APPDATA\daytona&#34;; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]&#39;Tls,Tls11,Tls12&#39;;&#xA;    Invoke-WebRequest -URI &#34;https://download.daytona.io/daytona/latest/daytona-windows-amd64.exe&#34; -o $Env:APPDATA\daytona\daytona.exe;&#xA;    $env:Path += &#34;;&#34; + $Env:APPDATA + &#34;\daytona&#34;;&#xA;    [Environment]::SetEnvironmentVariable(&#34;Path&#34;, $env:Path, [System.EnvironmentVariableTarget]::User);&#xA;    daytona;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ARM&lt;/summary&gt; Run the following command in Windows PowerShell: &#xA; &lt;pre&gt;&lt;code class=&#34;language-pwsh&#34;&gt;md -Force &#34;$Env:APPDATA\daytona&#34;; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]&#39;Tls,Tls11,Tls12&#39;;&#xA;    Invoke-WebRequest -URI &#34;https://download.daytona.io/daytona/latest/daytona-windows-arm64.exe&#34; -o $Env:APPDATA\daytona\daytona.exe;&#xA;    $env:Path += &#34;;&#34; + $Env:APPDATA + &#34;\daytona&#34;;&#xA;    [Environment]::SetEnvironmentVariable(&#34;Path&#34;, $env:Path, [System.EnvironmentVariableTarget]::User);&#xA;    daytona;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Start the Daytona server:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;daytona server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create your first dev environment by opening a new terminal, and executing just this command:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;daytona create&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start coding.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Why Daytona?&lt;/h2&gt; &#xA;&lt;p&gt;Daytona is a radically simple open source development environment manager.&lt;/p&gt; &#xA;&lt;p&gt;Setting up development environments has become increasingly challenging over time, especially when aiming to set up remotely, where the complexity increases by a order of magnitude. The process is so complex that we&#39;ve compiled a &lt;a href=&#34;https://www.daytona.io/dotfiles/diy-guide-to-transform-any-machine-into-a-codespace&#34;&gt;comprehensive guide&lt;/a&gt; detailing all the necessary steps to set one up—spanning &lt;strong&gt;5,000 words&lt;/strong&gt;, &lt;strong&gt;7 steps&lt;/strong&gt;, and requiring anywhere from 15 to &lt;strong&gt;45 minutes&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This complexity is unnecessary.&lt;/p&gt; &#xA;&lt;p&gt;With Daytona, you need only to execute a single command: &lt;code&gt;daytona create&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Daytona automates the entire process; provisioning the instance, interpreting and applying the configuration, setting up prebuilds, establishing a secure VPN connection, securely connecting your local or a Web IDE, and assigning a fully qualified domain name to the development environment for easy sharing and collaboration.&lt;/p&gt; &#xA;&lt;p&gt;As a developer, you can immediately start focusing on what matters most—your code.&lt;/p&gt; &#xA;&lt;h2&gt;Backstory&lt;/h2&gt; &#xA;&lt;p&gt;We spent most of our careers building cloud development environments. In 2009, we launched what was likely the first commercial &lt;a href=&#34;https://codeanywhere.com&#34;&gt;Cloud IDE&lt;/a&gt; project. At that time, technology was lacking, forcing us to develop everything from scratch—the IDE, the environment orchestrator, and almost everything else. A lot of people were interested, and over 2.5 million developers signed up! But we were too early, and we asked too much from our users to change how they worked.&lt;/p&gt; &#xA;&lt;p&gt;Now, 15 years since its inception, we have noticed quite a few things. First, the technology we wished for back then exists now. Second, approximately 50% of developers work in remote dev environments, and third, and most importantly, setting up development environments has become more complex than ever, both locally and to a greater magnitude for remote.&lt;/p&gt; &#xA;&lt;p&gt;So, we took everything we learned and decided to solve these issues once and for all as a fully open-source project. Our goal was to create a single binary that allows you to set up a development environment anywhere you wish, completely free, and finally fulfill the promise that many have attempted to make.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Before starting the installation script, please go over all the necessary requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hardware Resources&lt;/strong&gt;: Depending on the project requirements, ensure your machine has sufficient resources. Minimum hardware specification is 1cpu, 2GB of RAM and 10GB of disk space.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Ensure &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker&lt;/a&gt; is installed and running.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Daytona&lt;/h3&gt; &#xA;&lt;p&gt;Daytona allows you to manage your Development Environments using the Daytona CLI. To install it, please execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Daytona into /usr/local/bin&#xA;curl -sf -L https://download.daytona.io/daytona/get-server.sh | sudo bash&#xA;&#xA;# OR if you want to install Daytona to some other path where you don`t need sudo&#xA;# curl -sf -L https://download.daytona.io/daytona/get-server.sh | DAYTONA_PATH=/home/user/bin bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;For manual install...&lt;/summary&gt; If you don&#39;t wanna use script provided, for manual binary download you can choose direct URL of the binaries according to your OS: &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sf -L https://download.daytona.io/daytona/latest/daytona-darwin-amd64 -o daytona&#xA;curl -sf -L https://download.daytona.io/daytona/latest/daytona-darwin-arm64 -o daytona&#xA;curl -sf -L https://download.daytona.io/daytona/latest/daytona-linux-amd64 -o daytona&#xA;curl -sf -L https://download.daytona.io/daytona/latest/daytona-linux-arm64 -o daytona&#xA;curl -sf -L https://download.daytona.io/daytona/latest/daytona-windows-amd64.exe -o daytona&#xA;curl -sf -L https://download.daytona.io/daytona/latest/daytona-windows-arm64.exe -o daytona&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Make sure that path where &lt;code&gt;daytona&lt;/code&gt; binary is downloaded is in your system PATH.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Initializing Daytona&lt;/h3&gt; &#xA;&lt;p&gt;To initialize Daytona, follow these steps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Start the Daytona Service:&lt;/strong&gt; This initiates the Daytona service, which must always be running for Daytona to function. Use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Add Your Git Provider of Choice:&lt;/strong&gt; Daytona supports GitHub, GitLab, Bitbucket and Gitea. To add them to your profile, use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona git-providers add&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the steps provided.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Add Your Provider Target:&lt;/strong&gt; This step is for choosing where to deploy Development Environments. By default, Daytona includes a Docker provider to spin up environments on your local machine. For remote development environments, use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona target set&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Following the steps this command adds SSH machines to your targets.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Choose Your Default IDE:&lt;/strong&gt; The default setting for Daytona is VS Code locally. If you prefer, you can switch to VS Code - Browser or any IDE from the JetBrains portfolio using the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona ide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now that you have installed and initialized Daytona, you can proceed to setting up your development environments and start coding instantly.&lt;/p&gt; &#xA;&lt;h3&gt;Creating Dev Environments&lt;/h3&gt; &#xA;&lt;p&gt;Creating development environments with Daytona is a straightforward process, accomplished with just one command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona create&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upon executing this command, you will be prompted with two questions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Choose the provider to decide where to create a dev environment.&lt;/li&gt; &#xA; &lt;li&gt;Select or type the Git repository you wish to use to create a dev environment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After making your selections, press enter, and Daytona will handle the rest. All that remains for you to do is to execute the following command to open your default IDE:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;daytona code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command opens your development environment in your preferred IDE, allowing you to start coding instantly.&lt;/p&gt; &#xA;&lt;h2&gt;How to Extend Daytona&lt;/h2&gt; &#xA;&lt;p&gt;Daytona offers flexibility for extension through the creation of plugins and providers.&lt;/p&gt; &#xA;&lt;h3&gt;Providers&lt;/h3&gt; &#xA;&lt;p&gt;Daytona is designed to be infrastructure-agnostic, capable of creating and managing development environments across various platforms. Providers are the components that encapsulate the logic for provisioning compute resources on a specific target platform. They allow for the configuration of different targets within a single provider, enabling, for instance, multiple AWS profiles within an AWS provider.&lt;/p&gt; &#xA;&lt;p&gt;How does it work? When executing the &lt;code&gt;daytona create&lt;/code&gt; command, Daytona communicates the environment details to the selected provider, which then provisions the necessary compute resources. Once provisioned, Daytona sets up the environment on these resources, allowing the user to interact with the environment seamlessly.&lt;/p&gt; &#xA;&lt;p&gt;Providers are independent projects that adhere to the Daytona Provider interface. They can be developed in nearly any major programming language. More details coming soon.&lt;/p&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Plugins enhance Daytona&#39;s core functionalities by adding new CLI commands, API methods, or services within the development environments. They offer configurable settings to tailor the plugin&#39;s behavior to the user&#39;s needs.&lt;/p&gt; &#xA;&lt;p&gt;Similar to providers, plugins are independent projects that conform to the Daytona Plugin interface and can be developed in a wide range of programming languages. More details coming soon.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Daytona is Open Source under the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;, and is the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/NOTICE&#34;&gt;copyright of its contributors&lt;/a&gt;. If you would like to contribute to the software, you must:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Read the Developer Certificate of Origin Version 1.1 (&lt;a href=&#34;https://developercertificate.org/&#34;&gt;https://developercertificate.org/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Signing all commits to the Daytona project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This ensures that users, distributors, and other contributors can rely on all the software related to Daytona being contributed under the terms of the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE&#34;&gt;License&lt;/a&gt;. No contributions will be accepted without following this process.&lt;/p&gt; &#xA;&lt;p&gt;Afterwards, navigate to the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains Daytona, covered under the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;, except where noted (any Daytona logos or trademarks are not covered under the Apache License, and should be explicitly noted by a LICENSE file.)&lt;/p&gt; &#xA;&lt;p&gt;Daytona is a product produced from this open source software, exclusively by Daytona Platforms, Inc. It is distributed under our commercial terms.&lt;/p&gt; &#xA;&lt;p&gt;Others are allowed to make their own distribution of the software, but they cannot use any of the Daytona trademarks, cloud services, etc.&lt;/p&gt; &#xA;&lt;p&gt;We explicitly grant permission for you to make a build that includes our trademarks while developing Daytona itself. You may not publish or share the build, and you may not use that build to run Daytona for any other purpose.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adapted the Code of Conduct from the &lt;a href=&#34;https://www.contributor-covenant.org/&#34;&gt;Contributor Covenant&lt;/a&gt;. For more information see the &lt;a href=&#34;https://raw.githubusercontent.com/daytonaio/daytona/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; or contact &lt;a href=&#34;mailto:codeofconduct@daytona.io&#34;&gt;codeofconduct@daytona.io.&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;p&gt;For more information on how to use and develop Daytona, talk to us on &lt;a href=&#34;https://join.slack.com/t/daytonacommunity/shared_invite/zt-273yohksh-Q5YSB5V7tnQzX2RoTARr7Q&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Calcium-Ion/new-api</title>
    <updated>2024-03-17T01:45:44Z</updated>
    <id>tag:github.com,2024-03-17:/Calcium-Ion/new-api</id>
    <link href="https://github.com/Calcium-Ion/new-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于One API的二次开发版本，仅供个人管理渠道使用，请勿用于商业API分发！&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;New API&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 本项目为开源项目，在&lt;a href=&#34;https://github.com/songquanpeng/one-api&#34;&gt;One API&lt;/a&gt;的基础上进行二次开发，感谢原作者的无私奉献。 使用者必须在遵循 OpenAI 的&lt;a href=&#34;https://openai.com/policies/terms-of-use&#34;&gt;使用条款&lt;/a&gt;以及&lt;strong&gt;法律法规&lt;/strong&gt;的情况下使用，不得用于非法用途。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 本项目为个人学习使用，不保证稳定性，且不提供任何技术支持，使用者必须在遵循 OpenAI 的使用条款以及法律法规的情况下使用，不得用于非法用途。&lt;br&gt; 根据&lt;a href=&#34;http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm&#34;&gt;《生成式人工智能服务管理暂行办法》&lt;/a&gt;的要求，请勿对中国地区公众提供一切未经备案的生成式人工智能服务。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 最新版Docker镜像 calciumion/new-api:latest&lt;br&gt; 更新指令 docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;主要变更&lt;/h2&gt; &#xA;&lt;p&gt;此分叉版本的主要变更如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;全新的UI界面（部分界面还待更新）&lt;/li&gt; &#xA; &lt;li&gt;添加&lt;a href=&#34;https://github.com/novicezk/midjourney-proxy&#34;&gt;Midjourney-Proxy(Plus)&lt;/a&gt;接口的支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/submit/imagine&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/submit/change&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/submit/blend&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/submit/describe&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/image/{id} （通过此接口获取图片，&lt;strong&gt;请必须在系统设置中填写服务器地址！！&lt;/strong&gt;）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/task/{id}/fetch （此接口返回的图片地址为经过One API转发的地址）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /task/list-by-condition&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/submit/action （仅midjourney-proxy-plus支持，下同）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/submit/modal&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/submit/shorten&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/task/{id}/image-seed&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; /mj/insight-face/swap （InsightFace）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;支持在线充值功能，可在系统设置中设置，当前支持的支付接口： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 易支付&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;支持用key查询使用额度: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;配合项目&lt;a href=&#34;https://github.com/Calcium-Ion/neko-api-key-tool&#34;&gt;neko-api-key-tool&lt;/a&gt;可实现用key查询使用&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;渠道显示已使用额度，支持指定组织访问&lt;/li&gt; &#xA; &lt;li&gt;分页支持选择每页显示数量&lt;/li&gt; &#xA; &lt;li&gt;兼容原版One API的数据库，可直接使用原版数据库（one-api.db）&lt;/li&gt; &#xA; &lt;li&gt;支持模型按次数收费，可在 系统设置-运营设置 中设置&lt;/li&gt; &#xA; &lt;li&gt;支持渠道&lt;strong&gt;加权随机&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;数据看板&lt;/li&gt; &#xA; &lt;li&gt;可设置令牌能调用的模型&lt;/li&gt; &#xA; &lt;li&gt;支持Telegram授权登录。 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;系统设置-配置登录注册-允许通过Telegram登录&lt;/li&gt; &#xA;   &lt;li&gt;对&lt;a href=&#34;https://t.me/botfather&#34;&gt;@Botfather&lt;/a&gt;输入指令/setdomain&lt;/li&gt; &#xA;   &lt;li&gt;选择你的bot，然后输入http(s)://你的网站地址/login&lt;/li&gt; &#xA;   &lt;li&gt;Telegram Bot 名称是bot username 去掉@后的字符串&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;模型支持&lt;/h2&gt; &#xA;&lt;p&gt;此版本额外支持以下模型：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;第三方模型 &lt;strong&gt;gps&lt;/strong&gt; （gpt-4-gizmo-*）&lt;/li&gt; &#xA; &lt;li&gt;智谱glm-4v，glm-4v识图&lt;/li&gt; &#xA; &lt;li&gt;Anthropic Claude 3 (claude-3-opus-20240229, claude-3-sonnet-20240229)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ollama/ollama?tab=readme-ov-file&#34;&gt;Ollama&lt;/a&gt;，添加渠道时，密钥可以随便填写，默认的请求地址是&lt;a href=&#34;http://localhost:11434&#34;&gt;http://localhost:11434&lt;/a&gt;，如果需要修改请在渠道中修改&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/novicezk/midjourney-proxy&#34;&gt;Midjourney-Proxy(Plus)&lt;/a&gt;接口&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;您可以在渠道中添加自定义模型gpt-4-gizmo-*，此模型并非OpenAI官方模型，而是第三方模型，使用官方key无法调用。&lt;/p&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;h3&gt;基于 Docker 进行部署&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 使用 SQLite 的部署命令：&#xA;docker run --name new-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/new-api:/data calciumion/new-api:latest&#xA;# 使用 MySQL 的部署命令，在上面的基础上添加 `-e SQL_DSN=&#34;root:123456@tcp(localhost:3306)/oneapi&#34;`，请自行修改数据库连接参数。&#xA;# 例如：&#xA;docker run --name new-api -d --restart always -p 3000:3000 -e SQL_DSN=&#34;root:123456@tcp(localhost:3306)/oneapi&#34; -e TZ=Asia/Shanghai -v /home/ubuntu/data/new-api:/data calciumion/new-api:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;使用宝塔面板Docker功能部署&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 使用 SQLite 的部署命令：&#xA;docker run --name new-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /www/wwwroot/new-api:/data calciumion/new-api:latest&#xA;# 使用 MySQL 的部署命令，在上面的基础上添加 `-e SQL_DSN=&#34;root:123456@tcp(localhost:3306)/oneapi&#34;`，请自行修改数据库连接参数。&#xA;# 例如：&#xA;# 注意：数据库要开启远程访问，并且只允许服务器IP访问&#xA;docker run --name new-api -d --restart always -p 3000:3000 -e SQL_DSN=&#34;root:123456@tcp(宝塔的服务器地址:宝塔数据库端口)/宝塔数据库名称&#34; -e TZ=Asia/Shanghai -v /www/wwwroot/new-api:/data calciumion/new-api:latest&#xA;# 注意：数据库要开启远程访问，并且只允许服务器IP访问&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Midjourney接口设置文档&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Calcium-Ion/new-api/main/Midjourney.md&#34;&gt;对接文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;交流群&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/de536a8a-0161-47a7-a0a2-66ef6de81266&#34; width=&#34;300&#34;&gt; &#xA;&lt;h2&gt;界面截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/ad0e7aae-0203-471c-9716-2d83768927d4&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/d1ac216e-0804-4105-9fdc-66b35022d861&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/3ca0b282-00ff-4c96-bf9d-e29ef615c605&#34; alt=&#34;image&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/f4f40ed4-8ccb-43d7-a580-90677827646d&#34; alt=&#34;image&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/90d7d763-6a77-4b36-9f76-2bb30f18583d&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/e414228a-3c35-429a-b298-6451d76d9032&#34; alt=&#34;image&#34;&gt; 夜间模式&lt;br&gt; &lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/1c66b593-bb9e-4757-9720-ff2759539242&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/5b3228e8-2556-44f7-97d6-4f8d8ee6effa&#34; alt=&#34;image&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/Calcium-Ion/new-api/assets/61247483/af9a07ee-5101-4b3d-8bd9-ae21a4fd7e9e&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Calcium-Ion/new-api&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Calcium-Ion/new-api&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apernet/OpenGFW</title>
    <updated>2024-03-17T01:45:44Z</updated>
    <id>tag:github.com,2024-03-17:/apernet/OpenGFW</id>
    <link href="https://github.com/apernet/OpenGFW" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenGFW is a flexible, easy-to-use, open source implementation of GFW (Great Firewall of China) on Linux&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apernet/OpenGFW/master/docs/logo.png&#34; alt=&#34;OpenGFW&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apernet/OpenGFW/actions/workflows/check.yaml&#34;&gt;&lt;img src=&#34;https://github.com/apernet/OpenGFW/actions/workflows/check.yaml/badge.svg?sanitize=true&#34; alt=&#34;Quality check status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/apernet/OpenGFW/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MPL_2.0-brightgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apernet/OpenGFW/master/README.zh.md&#34;&gt;中文文档&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apernet/OpenGFW/master/README.ja.md&#34;&gt;日本語ドキュメント&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenGFW is your very own DIY Great Firewall of China (&lt;a href=&#34;https://en.wikipedia.org/wiki/Great_Firewall&#34;&gt;https://en.wikipedia.org/wiki/Great_Firewall&lt;/a&gt;), available as a flexible, easy-to-use open source program on Linux. Why let the powers that be have all the fun? It&#39;s time to give power to the people and democratize censorship. Bring the thrill of cyber-sovereignty right into your home router and start filtering like a pro - you too can play Big Brother.&lt;/p&gt; &#xA;&lt;p&gt;Telegram group: &lt;a href=&#34;https://t.me/OpGFW&#34;&gt;https://t.me/OpGFW&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] This project is still in very early stages of development. Use at your own risk.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] We are looking for contributors to help us with this project, especially implementing analyzers for more protocols!!!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full IP/TCP reassembly, various protocol analyzers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;HTTP, TLS, QUIC, DNS, SSH, SOCKS4/5, WireGuard, and many more to come&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Fully encrypted traffic&#34; detection for Shadowsocks, etc. (&lt;a href=&#34;https://gfw.report/publications/usenixsecurity23/en/&#34;&gt;https://gfw.report/publications/usenixsecurity23/en/&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Trojan (proxy protocol) detection based on Trojan-killer (&lt;a href=&#34;https://github.com/XTLS/Trojan-killer&#34;&gt;https://github.com/XTLS/Trojan-killer&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;[WIP] Machine learning based traffic classification&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Full IPv4 and IPv6 support&lt;/li&gt; &#xA; &lt;li&gt;Flow-based multicore load balancing&lt;/li&gt; &#xA; &lt;li&gt;Connection offloading&lt;/li&gt; &#xA; &lt;li&gt;Powerful rule engine based on &lt;a href=&#34;https://github.com/expr-lang/expr&#34;&gt;expr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hot-reloadable rules (send &lt;code&gt;SIGHUP&lt;/code&gt; to reload)&lt;/li&gt; &#xA; &lt;li&gt;Flexible analyzer &amp;amp; modifier framework&lt;/li&gt; &#xA; &lt;li&gt;Extensible IO implementation (only NFQueue for now)&lt;/li&gt; &#xA; &lt;li&gt;[WIP] Web UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ad blocking&lt;/li&gt; &#xA; &lt;li&gt;Parental control&lt;/li&gt; &#xA; &lt;li&gt;Malware protection&lt;/li&gt; &#xA; &lt;li&gt;Abuse prevention for VPN/proxy services&lt;/li&gt; &#xA; &lt;li&gt;Traffic analysis (log only mode)&lt;/li&gt; &#xA; &lt;li&gt;Help you fulfill your dictatorial ambitions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export OPENGFW_LOG_LEVEL=debug&#xA;./OpenGFW -c config.yaml rules.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;OpenWrt&lt;/h4&gt; &#xA;&lt;p&gt;OpenGFW has been tested to work on OpenWrt 23.05 (other versions should also work, just not verified).&lt;/p&gt; &#xA;&lt;p&gt;Install the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# For OpenWrt version 22.03 and later (nftables based firewall)&#xA;opkg install kmod-nft-queue kmod-nf-conntrack-netlink&#xA;&#xA;# For OpenWrt versions prior to 22.03 (excluding 22.03, iptables based firewall)&#xA;opkg install kmod-ipt-nfqueue iptables-mod-nfqueue kmod-nf-conntrack-netlink&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example config&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;io:&#xA;  queueSize: 1024&#xA;  rcvBuf: 4194304&#xA;  sndBuf: 4194304&#xA;  local: true # set to false if you want to run OpenGFW on FORWARD chain&#xA;&#xA;workers:&#xA;  count: 4&#xA;  queueSize: 16&#xA;  tcpMaxBufferedPagesTotal: 4096&#xA;  tcpMaxBufferedPagesPerConn: 64&#xA;  udpMaxStreams: 4096&#xA;&#xA;# The path to load specific local geoip/geosite db files.&#xA;# If not set, they will be automatically downloaded from https://github.com/Loyalsoldier/v2ray-rules-dat&#xA;# geo:&#xA;#   geoip: geoip.dat&#xA;#   geosite: geosite.dat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example rules&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apernet/OpenGFW/master/docs/Analyzers.md&#34;&gt;Analyzer properties&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For syntax of the expression language, please refer to &lt;a href=&#34;https://expr-lang.org/docs/language-definition&#34;&gt;Expr Language Definition&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# A rule must have at least one of &#34;action&#34; or &#34;log&#34; field set.&#xA;- name: log horny people&#xA;  log: true&#xA;  expr: let sni = string(tls?.req?.sni); sni contains &#34;porn&#34; || sni contains &#34;hentai&#34;&#xA;&#xA;- name: block v2ex http&#xA;  action: block&#xA;  expr: string(http?.req?.headers?.host) endsWith &#34;v2ex.com&#34;&#xA;&#xA;- name: block v2ex https&#xA;  action: block&#xA;  expr: string(tls?.req?.sni) endsWith &#34;v2ex.com&#34;&#xA;&#xA;- name: block v2ex quic&#xA;  action: block&#xA;  expr: string(quic?.req?.sni) endsWith &#34;v2ex.com&#34;&#xA;&#xA;- name: block and log shadowsocks&#xA;  action: block&#xA;  log: true&#xA;  expr: fet != nil &amp;amp;&amp;amp; fet.yes&#xA;&#xA;- name: block trojan&#xA;  action: block&#xA;  expr: trojan != nil &amp;amp;&amp;amp; trojan.yes&#xA;&#xA;- name: v2ex dns poisoning&#xA;  action: modify&#xA;  modifier:&#xA;    name: dns&#xA;    args:&#xA;      a: &#34;0.0.0.0&#34;&#xA;      aaaa: &#34;::&#34;&#xA;  expr: dns != nil &amp;amp;&amp;amp; dns.qr &amp;amp;&amp;amp; any(dns.questions, {.name endsWith &#34;v2ex.com&#34;})&#xA;&#xA;- name: block google socks&#xA;  action: block&#xA;  expr: string(socks?.req?.addr) endsWith &#34;google.com&#34; &amp;amp;&amp;amp; socks?.req?.port == 80&#xA;&#xA;- name: block wireguard by handshake response&#xA;  action: drop&#xA;  expr: wireguard?.handshake_response?.receiver_index_matched == true&#xA;&#xA;- name: block bilibili geosite&#xA;  action: block&#xA;  expr: geosite(string(tls?.req?.sni), &#34;bilibili&#34;)&#xA;&#xA;- name: block CN geoip&#xA;  action: block&#xA;  expr: geoip(string(ip.dst), &#34;cn&#34;)&#xA;&#xA;- name: block cidr&#xA;  action: block&#xA;  expr: cidr(string(ip.dst), &#34;192.168.0.0/16&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Supported actions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;allow&lt;/code&gt;: Allow the connection, no further processing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;block&lt;/code&gt;: Block the connection, no further processing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;drop&lt;/code&gt;: For UDP, drop the packet that triggered the rule, continue processing future packets in the same flow. For TCP, same as &lt;code&gt;block&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;modify&lt;/code&gt;: For UDP, modify the packet that triggered the rule using the given modifier, continue processing future packets in the same flow. For TCP, same as &lt;code&gt;allow&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>