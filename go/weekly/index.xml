<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-19T02:09:36Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wailsapp/wails</title>
    <updated>2022-06-19T02:09:36Z</updated>
    <id>tag:github.com,2022-06-19:/wailsapp/wails</id>
    <link href="https://github.com/wailsapp/wails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create beautiful applications using Go&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34; style=&#34;text-align: center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/logo-universal.png&#34; width=&#34;55%&#34;&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Build desktop applications using Go &amp;amp; Web Technologies.&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/wailsapp/wails/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/wailsapp/wails&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/wailsapp/wails&#34;&gt; &lt;/a&gt; &lt;a href=&#34;http://godoc.org/github.com/wailsapp/wails&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/godoc-reference-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/wailsapp/wails&#34;&gt; &lt;img src=&#34;https://www.codefactor.io/repository/github/wailsapp/wails/badge&#34; alt=&#34;CodeFactor&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/wailsapp/wails/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;CodeFactor&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_shield&#34; alt=&#34;FOSSA Status&#34;&gt; &lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=shield&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://houndci.com&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go&#34; rel=&#34;nofollow&#34;&gt; &lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/wailsapp/wails/workflows/release/badge.svg?branch=master&#34; rel=&#34;nofollow&#34;&gt; &lt;img src=&#34;https://github.com/wailsapp/wails/workflows/release/badge.svg?branch=master&#34; alt=&#34;Release Pipelines&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-1&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Internationalization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/README.zh-Hans.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-2&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click me to Open/Close the directory listing&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-1&#34;&gt;1. Internationalization&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-2&#34;&gt;2. Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-3&#34;&gt;3. Introduction&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-3-1&#34;&gt;3.1 Official Website&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-4&#34;&gt;4. Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-5&#34;&gt;5. Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-6&#34;&gt;6. Installation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-8&#34;&gt;7. FAQ&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-9&#34;&gt;8. Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-10&#34;&gt;9. Special Mentions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/#nav-11&#34;&gt;10. Special Thanks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-3&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;The traditional method of providing web interfaces to Go programs is via a built-in web server. Wails offers a different approach: it provides the ability to wrap both Go code and a web frontend into a single binary. Tools are provided to make this easy for you by handling project creation, compilation and bundling. All you have to do is get creative!&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-3-1&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;strong&gt;PLEASE NOTE: As we are approaching the v2 release, we are not accepting any new feature requests or bug reports for v1. If you have a critical issue, please open a ticket and state why it is critical.&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Version 2&lt;/h3&gt; &#xA;&lt;p&gt;Wails v2 has been released in Beta for all 3 platforms. Check out the &lt;a href=&#34;https://wails.io&#34;&gt;new website&lt;/a&gt; if you are interested in trying it out.&lt;/p&gt; &#xA;&lt;h3&gt;Legacy v1 Website&lt;/h3&gt; &#xA;&lt;p&gt;The legacy v1 docs can be found at &lt;a href=&#34;https://wails.app&#34;&gt;https://wails.app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-4&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use standard Go for the backend&lt;/li&gt; &#xA; &lt;li&gt;Use any frontend technology you are already familiar with to build your UI&lt;/li&gt; &#xA; &lt;li&gt;Quickly create rich frontends for your Go programs using pre-built templates&lt;/li&gt; &#xA; &lt;li&gt;Easily call Go methods from Javascript&lt;/li&gt; &#xA; &lt;li&gt;Auto-generated Typescript definitions for your Go structs and methods&lt;/li&gt; &#xA; &lt;li&gt;Native Dialogs &amp;amp; Menus&lt;/li&gt; &#xA; &lt;li&gt;Supports modern translucency and &#34;frosted window&#34; effects&lt;/li&gt; &#xA; &lt;li&gt;Unified eventing system between Go and Javascript&lt;/li&gt; &#xA; &lt;li&gt;Powerful cli tool to quickly generate and build your projects&lt;/li&gt; &#xA; &lt;li&gt;Multiplatform&lt;/li&gt; &#xA; &lt;li&gt;Uses native rendering engines - &lt;em&gt;no embedded browser&lt;/em&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-5&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;This project is supported by these kind people / companies:&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/sponsors/leaanthony&#34; style=&#34;width:100px;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/img/silver%20sponsor.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/selvindev&#34; style=&#34;width:100px;&#34;&gt; &lt;img src=&#34;https://github.com/selvindev.png?size=100&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://github.com/sponsors/leaanthony&#34; style=&#34;width:100px;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/img/bronze%20sponsor.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/snider&#34; style=&#34;width:100px;&#34;&gt; &lt;img src=&#34;https://github.com/snider.png?size=100&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/codydbentley&#34; style=&#34;width:100px&#34;&gt; &lt;img src=&#34;https://github.com/codydbentley.png?size=100&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://www.easywebadv.it/&#34; style=&#34;width:100px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/website/static/img/easyweb.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://github.com/matryer&#34; style=&#34;width:100px&#34;&gt; &lt;img src=&#34;https://github.com/matryer.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://www.jetbrains.com?from=Wails&#34; style=&#34;width:100px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/jetbrains-grayscale.png&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/tc-hib&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/tc-hib.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/picatz&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/picatz.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/tylertravisty&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/tylertravisty.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/akhudek&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/akhudek.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/trea&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/trea.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/LanguageAgnostic&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/LanguageAgnostic.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/fcjr&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/fcjr.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/nickarellano&#34; style=&#34;width:60px&#34;&gt; &lt;img src=&#34;https://github.com/nickarellano.png?size=60&#34; width=&#34;60&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/bglw&#34; style=&#34;width:65px&#34;&gt; &lt;img src=&#34;https://github.com/bglw.png?size=65&#34; width=&#34;65&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/marcus-crane&#34; style=&#34;width:65px&#34;&gt; &lt;img src=&#34;https://github.com/marcus-crane.png?size=65&#34; width=&#34;65&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/bbergshaven&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/bbergshaven.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Gilgames000&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/Gilgames000.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/ilgityildirim&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/ilgityildirim.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/questrail&#34; style=&#34;width:50px&#34;&gt; &lt;img src=&#34;https://github.com/questrail.png?size=50&#34; width=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/DonTomato&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/DonTomato.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/taigrr&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/taigrr.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/charlie-dee&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/charlie-dee.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/EdenNetworkItalia&#34; style=&#34;width:65px&#34;&gt; &lt;img src=&#34;https://github.com/EdenNetworkItalia.png?size=65&#34; width=&#34;65&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/michaelolson1996&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/michaelolson1996.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/GargantuaX&#34; style=&#34;width:45px&#34;&gt; &lt;img src=&#34;https://github.com/GargantuaX.png?size=45&#34; width=&#34;45&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/CharlieGo88&#34; style=&#34;width:55px&#34;&gt; &lt;img src=&#34;https://github.com/CharlieGo88.png?size=55&#34; width=&#34;55&#34;&gt; &lt;/a&gt; &#xA;&lt;span id=&#34;nav-6&#34;&gt;&lt;/span&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The installation instructions are on the &lt;a href=&#34;https://wails.io/docs/gettingstarted/installation&#34;&gt;official website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-8&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Is this an alternative to Electron?&lt;/p&gt; &lt;p&gt;Depends on your requirements. It&#39;s designed to make it easy for Go programmers to make lightweight desktop applications or add a frontend to their existing applications. Wails v2 does offer native elements such as menus and dialogs so it is becoming a lightweight electron alternative.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Who is this project aimed at?&lt;/p&gt; &lt;p&gt;Go programmers who want to bundle an HTML/JS/CSS frontend with their applications, without resorting to creating a server and opening a browser to view it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;What&#39;s with the name?&lt;/p&gt; &lt;p&gt;When I saw WebView, I thought &#34;What I really want is tooling around building a WebView app, a bit like Rails is to Ruby&#34;. So initially it was a play on words (Webview on Rails). It just so happened to also be a homophone of the English name for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Wales&#34;&gt;Country&lt;/a&gt; I am from. So it stuck.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-9&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qaisjp&#34;&gt;&lt;img src=&#34;https://github.com/qaisjp.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alee792&#34;&gt;&lt;img src=&#34;https://github.com/alee792.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lanzafame&#34;&gt;&lt;img src=&#34;https://github.com/lanzafame.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mattn&#34;&gt;&lt;img src=&#34;https://github.com/mattn.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/0xflotus&#34;&gt;&lt;img src=&#34;https://github.com/0xflotus.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mdhender&#34;&gt;&lt;img src=&#34;https://github.com/mdhender.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fishfishfish2104&#34;&gt;&lt;img src=&#34;https://github.com/fishfishfish2104.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intelwalk&#34;&gt;&lt;img src=&#34;https://github.com/intelwalk.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ocelotsloth&#34;&gt;&lt;img src=&#34;https://github.com/ocelotsloth.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bh90210&#34;&gt;&lt;img src=&#34;https://github.com/bh90210.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iceleo-com&#34;&gt;&lt;img src=&#34;https://github.com/iceleo-com.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fallendusk&#34;&gt;&lt;img src=&#34;https://github.com/fallendusk.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Chronophylos&#34;&gt;&lt;img src=&#34;https://github.com/Chronophylos.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Vaelatern&#34;&gt;&lt;img src=&#34;https://github.com/Vaelatern.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mewmew&#34;&gt;&lt;img src=&#34;https://github.com/mewmew.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kraney&#34;&gt;&lt;img src=&#34;https://github.com/kraney.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JackMordaunt&#34;&gt;&lt;img src=&#34;https://github.com/JackMordaunt.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MichaelHipp&#34;&gt;&lt;img src=&#34;https://github.com/MichaelHipp.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tmclane&#34;&gt;&lt;img src=&#34;https://github.com/tmclane.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Rested&#34;&gt;&lt;img src=&#34;https://github.com/Rested.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jarek-SRT&#34;&gt;&lt;img src=&#34;https://github.com/Jarek-SRT.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/konez2k&#34;&gt;&lt;img src=&#34;https://github.com/konez2k.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sayuthisobri&#34;&gt;&lt;img src=&#34;https://github.com/sayuthisobri.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dedo1911&#34;&gt;&lt;img src=&#34;https://github.com/dedo1911.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fdidron&#34;&gt;&lt;img src=&#34;https://github.com/fdidron.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Splode&#34;&gt;&lt;img src=&#34;https://github.com/Splode.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Lyimmi&#34;&gt;&lt;img src=&#34;https://github.com/Lyimmi.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Unix4ever&#34;&gt;&lt;img src=&#34;https://github.com/Unix4ever.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/timkippdev&#34;&gt;&lt;img src=&#34;https://github.com/timkippdev.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kyoto44&#34;&gt;&lt;img src=&#34;https://github.com/kyoto44.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/artooro&#34;&gt;&lt;img src=&#34;https://github.com/artooro.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ilgityildirim&#34;&gt;&lt;img src=&#34;https://github.com/ilgityildirim.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gelleson&#34;&gt;&lt;img src=&#34;https://github.com/gelleson.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kmuchmore&#34;&gt;&lt;img src=&#34;https://github.com/kmuchmore.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aayush420&#34;&gt;&lt;img src=&#34;https://github.com/aayush420.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Rezrazi&#34;&gt;&lt;img src=&#34;https://github.com/Rezrazi.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/misitebao&#34;&gt;&lt;img src=&#34;https://github.com/misitebao.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/DrunkenPoney&#34;&gt;&lt;img src=&#34;https://github.com/DrunkenPoney.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SophieAu&#34;&gt;&lt;img src=&#34;https://github.com/SophieAu.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alexmat&#34;&gt;&lt;img src=&#34;https://github.com/alexmat.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RH12503&#34;&gt;&lt;img src=&#34;https://github.com/RH12503.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hi019&#34;&gt;&lt;img src=&#34;https://github.com/hi019.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Igogrek&#34;&gt;&lt;img src=&#34;https://github.com/Igogrek.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aschey&#34;&gt;&lt;img src=&#34;https://github.com/aschey.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/akhudek&#34;&gt;&lt;img src=&#34;https://github.com/akhudek.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/s12chung&#34;&gt;&lt;img src=&#34;https://github.com/s12chung.png?size=40&#34; width=&#34;40&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-10&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special Mentions&lt;/h2&gt; &#xA;&lt;p&gt;Without the following people, this project would never have existed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.ubuntu.com/bashfulrobot&#34;&gt;Dustin Krysak&lt;/a&gt; - His support and feedback has been immense. More patience than you can throw a stick at (Not long now Dustin!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zserge&#34;&gt;Serge Zaitsev&lt;/a&gt; - Creator of &lt;a href=&#34;https://github.com/zserge/webview&#34;&gt;Webview&lt;/a&gt; which Wails uses for the windowing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bh90210&#34;&gt;Byron&lt;/a&gt; - At times, Byron has single handedly kept this project alive. Without his incredible input, we never would have got to v1.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project was mainly coded to the following albums:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/1R2rsEUqXjIvAbzM0yHrxA&#34;&gt;Manic Street Preachers - Resistance Is Futile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/4VzCL9kjhgGQeKCiojK1YN&#34;&gt;Manic Street Preachers - This Is My Truth, Tell Me Yours&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/4Krg8zvprquh7TVn9OxZn8&#34;&gt;The Midnight - Endless Summer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/3kMfsD07Q32HRWKRrpcexr&#34;&gt;Gary Newman - Savage (Songs from a Broken World)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/0oL0OhrE2rYVns4IGj8h2m&#34;&gt;Steve Vai - Passion &amp;amp; Warfare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/1nJsbWm3Yy2DW1KIc1OKle&#34;&gt;Ben Howard - Every Kingdom&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/6astw05cTiXEc2OvyByaPs&#34;&gt;Ben Howard - Noonday Dream&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/2vBE40Rp60tl7rNqIZjaXM&#34;&gt;Adwaith - Melyn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/3v2hrfNGINPLuDP0YDTOjm&#34;&gt;Gwidaith Hen Fran - Cedors Hen Wrach&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/2Kh43m04B1UkVcpcRa1Zug&#34;&gt;Metallica - Metallica&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/6SsIdN05HQg2GwYLfXuzLB&#34;&gt;Bloc Party - Silent Alarm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/3tklE2Fgw1hCIUstIwPBJF&#34;&gt;Maxthor - Another World&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/album/0c32OywcLpdJCWWMC6vB8v&#34;&gt;Alun Tan Lan - Y Distawrwydd&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span id=&#34;nav-11&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://pace.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/pace.jpeg&#34;&gt;&lt;/a&gt;&lt;br&gt; A &lt;i&gt;huge&lt;/i&gt; thanks to &lt;a href=&#34;https://pace.dev&#34;&gt;Pace&lt;/a&gt; for sponsoring the project and helping the efforts to get Wails ported to Apple Silicon!&lt;br&gt;&lt;br&gt; If you are looking for a Project Management tool that&#39;s powerful but quick and easy to use, check them out!&lt;br&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;text-align: center&#34;&gt; A special thank you to JetBrains for donating licenses to us!&lt;br&gt;&lt;br&gt; Please click the logo to let them know your appreciation!&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://www.jetbrains.com?from=Wails&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/jetbrains-grayscale.png&#34; width=&#34;30%&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>knadh/dns.toys</title>
    <updated>2022-06-19T02:09:36Z</updated>
    <id>tag:github.com,2022-06-19:/knadh/dns.toys</id>
    <link href="https://github.com/knadh/dns.toys" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A DNS server that offers useful utilities and services over the DNS protocol. Weather, world time, unit conversion etc.&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;150&#34; src=&#34;https://user-images.githubusercontent.com/547147/171995179-b9d2faae-d659-4260-99df-04c62c171f6f.png&#34;&gt; &#xA;&lt;p&gt;dns.toys is a DNS server that takes creative liberties with the DNS protocol to offer handy utilities and services that are easily accessible via the command line.&lt;/p&gt; &#xA;&lt;p&gt;For docs, visit &lt;a href=&#34;https://www.dns.toys&#34;&gt;&lt;strong&gt;www.dns.toys&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sample commands&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dig help @dns.toys&#xA;&#xA;dig mumbai.time @dns.toys&#xA;&#xA;dig newyork.weather @dns.toys&#xA;&#xA;dig 42km-mi.unit @dns.toys&#xA;&#xA;dig 100USD-INR.fx @dns.toys&#xA;&#xA;dig ip @dns.toys&#xA;&#xA;dig 987654321.words @dns.toys&#xA;&#xA;dig pi @dns.toys&#xA;&#xA;dig 100dec-hex.base @dns.toys&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running locally&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;config.sample.toml&lt;/code&gt; to &lt;code&gt;config.toml&lt;/code&gt; and edit the config&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have a copy of the &lt;code&gt;cities15000.txt&lt;/code&gt; file at the root of this directory (instructions are in the &lt;code&gt;config.sample.toml&lt;/code&gt; file)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make build&lt;/code&gt; to build the binary and then run &lt;code&gt;./dnstoys.bin&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Others&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fatihdgn/DnsToys.NET&#34;&gt;DnsToys.NET&lt;/a&gt; - A .net client library for the service.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>fatedier/frp</title>
    <updated>2022-06-19T02:09:36Z</updated>
    <id>tag:github.com,2022-06-19:/fatedier/frp</id>
    <link href="https://github.com/fatedier/frp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;frp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/fatedier/frp&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/fatedier/frp.svg?style=shield&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/fatedier/frp.svg?label=release&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/README.md&#34;&gt;README&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/README_zh.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Platinum Sponsors&lt;/h3&gt; &#xA;&lt;!--platinum sponsors start--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=frp&amp;amp;utm_source=github&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;400px&#34; src=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_doppler.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--platinum sponsors end--&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Gold Sponsors&lt;/h3&gt; &#xA;&lt;!--gold sponsors start--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://workos.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=frp&amp;amp;utm_source=github&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;300px&#34; src=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_workos.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--gold sponsors end--&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Silver Sponsors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sakura Frp - 欢迎点击 &#34;加入我们&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is frp?&lt;/h2&gt; &#xA;&lt;p&gt;frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet. As of now, it supports &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;, as well as &lt;strong&gt;HTTP&lt;/strong&gt; and &lt;strong&gt;HTTPS&lt;/strong&gt; protocols, where requests can be forwarded to internal services by domain name.&lt;/p&gt; &#xA;&lt;p&gt;frp also has a P2P connect mode.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- vim-markdown-toc GFM --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#development-status&#34;&gt;Development Status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage&#34;&gt;Example Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#access-your-computer-in-lan-by-ssh&#34;&gt;Access your computer in LAN by SSH&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#visit-your-web-service-in-lan-by-custom-domains&#34;&gt;Visit your web service in LAN by custom domains&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#forward-dns-query-request&#34;&gt;Forward DNS query request&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#forward-unix-domain-socket&#34;&gt;Forward Unix domain socket&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#expose-a-simple-http-file-server&#34;&gt;Expose a simple HTTP file server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#enable-https-for-local-https-service&#34;&gt;Enable HTTPS for local HTTP(S) service&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#expose-your-service-privately&#34;&gt;Expose your service privately&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#p2p-mode&#34;&gt;P2P Mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#features&#34;&gt;Features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#configuration-files&#34;&gt;Configuration Files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#using-environment-variables&#34;&gt;Using Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#split-configures-into-different-files&#34;&gt;Split Configures Into Different Files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#dashboard&#34;&gt;Dashboard&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#admin-ui&#34;&gt;Admin UI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#monitor&#34;&gt;Monitor&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#prometheus&#34;&gt;Prometheus&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#authenticating-the-client&#34;&gt;Authenticating the Client&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#token-authentication&#34;&gt;Token Authentication&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#oidc-authentication&#34;&gt;OIDC Authentication&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#encryption-and-compression&#34;&gt;Encryption and Compression&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#tls&#34;&gt;TLS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#hot-reloading-frpc-configuration&#34;&gt;Hot-Reloading frpc configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#get-proxy-status-from-client&#34;&gt;Get proxy status from client&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#only-allowing-certain-ports-on-the-server&#34;&gt;Only allowing certain ports on the server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#port-reuse&#34;&gt;Port Reuse&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#bandwidth-limit&#34;&gt;Bandwidth Limit&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#for-each-proxy&#34;&gt;For Each Proxy&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-stream-multiplexing&#34;&gt;TCP Stream Multiplexing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#support-kcp-protocol&#34;&gt;Support KCP Protocol&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#connection-pooling&#34;&gt;Connection Pooling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#load-balancing&#34;&gt;Load balancing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#service-health-check&#34;&gt;Service Health Check&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#rewriting-the-http-host-header&#34;&gt;Rewriting the HTTP Host Header&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#setting-other-http-headers&#34;&gt;Setting other HTTP Headers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#get-real-ip&#34;&gt;Get Real IP&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#http-x-forwarded-for&#34;&gt;HTTP X-Forwarded-For&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#proxy-protocol&#34;&gt;Proxy Protocol&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#require-http-basic-auth-password-for-web-services&#34;&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#custom-subdomain-names&#34;&gt;Custom Subdomain Names&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#url-routing&#34;&gt;URL Routing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-port-multiplexing&#34;&gt;TCP Port Multiplexing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#connecting-to-frps-via-http-proxy&#34;&gt;Connecting to frps via HTTP PROXY&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#range-ports-mapping&#34;&gt;Range ports mapping&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#client-plugins&#34;&gt;Client Plugins&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#server-manage-plugins&#34;&gt;Server Manage Plugins&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#development-plan&#34;&gt;Development Plan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#donation&#34;&gt;Donation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#github-sponsors&#34;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#paypal&#34;&gt;PayPal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- vim-markdown-toc --&gt; &#xA;&lt;h2&gt;Development Status&lt;/h2&gt; &#xA;&lt;p&gt;frp is under development. Try the latest release version in the &lt;code&gt;master&lt;/code&gt; branch, or use the &lt;code&gt;dev&lt;/code&gt; branch for the version in development.&lt;/p&gt; &#xA;&lt;p&gt;We are working on v2 version and trying to do some code refactor and improvements. It won&#39;t be compatible with v1.&lt;/p&gt; &#xA;&lt;p&gt;We will switch v0 to v1 at the right time and only accept bug fixes and improvements instead of big feature requirements.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/architecture.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;Firstly, download the latest programs from &lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;Release&lt;/a&gt; page according to your operating system and architecture.&lt;/p&gt; &#xA;&lt;p&gt;Put &lt;code&gt;frps&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt; onto your server A with public IP.&lt;/p&gt; &#xA;&lt;p&gt;Put &lt;code&gt;frpc&lt;/code&gt; and &lt;code&gt;frpc.ini&lt;/code&gt; onto your server B in LAN (that can&#39;t be connected from public Internet).&lt;/p&gt; &#xA;&lt;h3&gt;Access your computer in LAN by SSH&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frps.ini&lt;/code&gt; on server A and set the &lt;code&gt;bind_port&lt;/code&gt; to be connected to frp clients:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt; on server A:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frps -c ./frps.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;On server B, modify &lt;code&gt;frpc.ini&lt;/code&gt; to put in your &lt;code&gt;frps&lt;/code&gt; server public IP as &lt;code&gt;server_addr&lt;/code&gt; field:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[ssh]&#xA;type = tcp&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;remote_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;local_port&lt;/code&gt; (listened on client) and &lt;code&gt;remote_port&lt;/code&gt; (exposed on server) are for traffic goes in/out the frp system, whereas &lt;code&gt;server_port&lt;/code&gt; is used between frps.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on server B:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;From another machine, SSH to server B like this (assuming that username is &lt;code&gt;test&lt;/code&gt;):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;ssh -oPort=6000 test@x.x.x.x&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Visit your web service in LAN by custom domains&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes we want to expose a local web service behind a NAT network to others for testing with your own domain name and unfortunately we can&#39;t resolve a domain name to a local IP.&lt;/p&gt; &#xA;&lt;p&gt;However, we can expose an HTTP(S) service using frp.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frps.ini&lt;/code&gt;, set the vhost HTTP port to 8080:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;vhost_http_port = 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frps -c ./frps.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frpc.ini&lt;/code&gt; and set &lt;code&gt;server_addr&lt;/code&gt; to the IP address of the remote frps server. The &lt;code&gt;local_port&lt;/code&gt; is the port of your web service:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = www.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Resolve A record of &lt;code&gt;www.example.com&lt;/code&gt; to the public IP of the remote frps server or CNAME record to your origin domain.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now visit your local web service using url &lt;code&gt;http://www.example.com:8080&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Forward DNS query request&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frps.ini&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frps -c ./frps.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;frpc.ini&lt;/code&gt; and set &lt;code&gt;server_addr&lt;/code&gt; to the IP address of the remote frps server, forward DNS query request to Google Public DNS server &lt;code&gt;8.8.8.8:53&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[dns]&#xA;type = udp&#xA;local_ip = 8.8.8.8&#xA;local_port = 53&#xA;remote_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start frpc:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Test DNS resolution using &lt;code&gt;dig&lt;/code&gt; command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;dig @x.x.x.x -p 6000 www.google.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Forward Unix domain socket&lt;/h3&gt; &#xA;&lt;p&gt;Expose a Unix domain socket (e.g. the Docker daemon socket) as TCP.&lt;/p&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[unix_domain_socket]&#xA;type = tcp&#xA;remote_port = 6000&#xA;plugin = unix_domain_socket&#xA;plugin_unix_path = /var/run/docker.sock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Test: Get Docker version using &lt;code&gt;curl&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;curl http://x.x.x.x:6000/version&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Expose a simple HTTP file server&lt;/h3&gt; &#xA;&lt;p&gt;Browser your files stored in the LAN, from public Internet.&lt;/p&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[test_static_file]&#xA;type = tcp&#xA;remote_port = 6000&#xA;plugin = static_file&#xA;plugin_local_path = /tmp/files&#xA;plugin_strip_prefix = static&#xA;plugin_http_user = abc&#xA;plugin_http_passwd = abc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Visit &lt;code&gt;http://x.x.x.x:6000/static/&lt;/code&gt; from your browser and specify correct user and password to view files in &lt;code&gt;/tmp/files&lt;/code&gt; on the &lt;code&gt;frpc&lt;/code&gt; machine.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Enable HTTPS for local HTTP(S) service&lt;/h3&gt; &#xA;&lt;p&gt;You may substitute &lt;code&gt;https2https&lt;/code&gt; for the plugin, and point the &lt;code&gt;plugin_local_addr&lt;/code&gt; to a HTTPS endpoint.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[test_https2http]&#xA;type = https&#xA;custom_domains = test.example.com&#xA;&#xA;plugin = https2http&#xA;plugin_local_addr = 127.0.0.1:80&#xA;plugin_crt_path = ./server.crt&#xA;plugin_key_path = ./server.key&#xA;plugin_host_header_rewrite = 127.0.0.1&#xA;plugin_header_X-From-Where = frp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Visit &lt;code&gt;https://test.example.com&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Expose your service privately&lt;/h3&gt; &#xA;&lt;p&gt;Some services will be at risk if exposed directly to the public network. With &lt;strong&gt;STCP&lt;/strong&gt; (secret TCP) mode, a preshared key is needed to access the service from another client.&lt;/p&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B with the following config. This example is for exposing the SSH service (port 22), and note the &lt;code&gt;sk&lt;/code&gt; field for the preshared key, and that the &lt;code&gt;remote_port&lt;/code&gt; field is removed here:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[secret_ssh]&#xA;type = stcp&#xA;sk = abcdefg&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the following config to access the SSH service with a security key (&lt;code&gt;sk&lt;/code&gt; field):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[secret_ssh_visitor]&#xA;type = stcp&#xA;role = visitor&#xA;server_name = secret_ssh&#xA;sk = abcdefg&#xA;bind_addr = 127.0.0.1&#xA;bind_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;P2P Mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;xtcp&lt;/strong&gt; is designed for transmitting large amounts of data directly between clients. A frps server is still needed, as P2P here only refers the actual data transmission.&lt;/p&gt; &#xA;&lt;p&gt;Note it can&#39;t penetrate all types of NAT devices. You might want to fallback to &lt;strong&gt;stcp&lt;/strong&gt; if &lt;strong&gt;xtcp&lt;/strong&gt; doesn&#39;t work.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In &lt;code&gt;frps.ini&lt;/code&gt; configure a UDP port for xtcp:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;bind_udp_port = 7001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B, expose the SSH port. Note that &lt;code&gt;remote_port&lt;/code&gt; field is removed:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[p2p_ssh]&#xA;type = xtcp&#xA;sk = abcdefg&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the config to connect to SSH using P2P mode:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[p2p_ssh_visitor]&#xA;type = xtcp&#xA;role = visitor&#xA;server_name = p2p_ssh&#xA;sk = abcdefg&#xA;bind_addr = 127.0.0.1&#xA;bind_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Configuration Files&lt;/h3&gt; &#xA;&lt;p&gt;Read the full example configuration files to find out even more features not described here.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/conf/frps_full.ini&#34;&gt;Full configuration file for frps (Server)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/conf/frpc_full.ini&#34;&gt;Full configuration file for frpc (Client)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;Environment variables can be referenced in the configuration file, using Go&#39;s standard format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = {{ .Envs.FRP_SERVER_ADDR }}&#xA;server_port = 7000&#xA;&#xA;[ssh]&#xA;type = tcp&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;remote_port = {{ .Envs.FRP_SSH_REMOTE_PORT }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the config above, variables can be passed into &lt;code&gt;frpc&lt;/code&gt; program like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export FRP_SERVER_ADDR=&#34;x.x.x.x&#34;&#xA;export FRP_SSH_REMOTE_PORT=&#34;6000&#34;&#xA;./frpc -c ./frpc.ini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;frpc&lt;/code&gt; will render configuration file template using OS environment variables. Remember to prefix your reference with &lt;code&gt;.Envs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Split Configures Into Different Files&lt;/h3&gt; &#xA;&lt;p&gt;You can split multiple proxy configs into different files and include them in the main file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;includes=./confd/*.ini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# ./confd/test.ini&#xA;[ssh]&#xA;type = tcp&#xA;local_ip = 127.0.0.1&#xA;local_port = 22&#xA;remote_port = 6000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;Check frp&#39;s status and proxies&#39; statistics information by Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;Configure a port for dashboard to enable this feature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[common]&#xA;dashboard_port = 7500&#xA;# dashboard&#39;s username and password are both optional&#xA;dashboard_user = admin&#xA;dashboard_pwd = admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then visit &lt;code&gt;http://[server_addr]:7500&lt;/code&gt; to see the dashboard, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/dashboard.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Admin UI&lt;/h3&gt; &#xA;&lt;p&gt;The Admin UI helps you check and manage frpc&#39;s configuration.&lt;/p&gt; &#xA;&lt;p&gt;Configure an address for admin UI to enable this feature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[common]&#xA;admin_addr = 127.0.0.1&#xA;admin_port = 7400&#xA;admin_user = admin&#xA;admin_pwd = admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then visit &lt;code&gt;http://127.0.0.1:7400&lt;/code&gt; to see admin UI, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Monitor&lt;/h3&gt; &#xA;&lt;p&gt;When dashboard is enabled, frps will save monitor data in cache. It will be cleared after process restart.&lt;/p&gt; &#xA;&lt;p&gt;Prometheus is also supported.&lt;/p&gt; &#xA;&lt;h4&gt;Prometheus&lt;/h4&gt; &#xA;&lt;p&gt;Enable dashboard first, then configure &lt;code&gt;enable_prometheus = true&lt;/code&gt; in &lt;code&gt;frps.ini&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http://{dashboard_addr}/metrics&lt;/code&gt; will provide prometheus monitor data.&lt;/p&gt; &#xA;&lt;h3&gt;Authenticating the Client&lt;/h3&gt; &#xA;&lt;p&gt;There are 2 authentication methods to authenticate frpc with frps.&lt;/p&gt; &#xA;&lt;p&gt;You can decide which one to use by configuring &lt;code&gt;authentication_method&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; in &lt;code&gt;frpc.ini&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Configuring &lt;code&gt;authenticate_heartbeats = true&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; will use the configured authentication method to add and validate authentication on every heartbeat between frpc and frps.&lt;/p&gt; &#xA;&lt;p&gt;Configuring &lt;code&gt;authenticate_new_work_conns = true&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; will do the same for every new work connection between frpc and frps.&lt;/p&gt; &#xA;&lt;h4&gt;Token Authentication&lt;/h4&gt; &#xA;&lt;p&gt;When specifying &lt;code&gt;authentication_method = token&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; in &lt;code&gt;frpc.ini&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt; - token based authentication will be used.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to specify the same &lt;code&gt;token&lt;/code&gt; in the &lt;code&gt;[common]&lt;/code&gt; section in &lt;code&gt;frps.ini&lt;/code&gt; and &lt;code&gt;frpc.ini&lt;/code&gt; for frpc to pass frps validation&lt;/p&gt; &#xA;&lt;h4&gt;OIDC Authentication&lt;/h4&gt; &#xA;&lt;p&gt;When specifying &lt;code&gt;authentication_method = oidc&lt;/code&gt; under &lt;code&gt;[common]&lt;/code&gt; in &lt;code&gt;frpc.ini&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt; - OIDC based authentication will be used.&lt;/p&gt; &#xA;&lt;p&gt;OIDC stands for OpenID Connect, and the flow used is called &lt;a href=&#34;https://tools.ietf.org/html/rfc6749#section-4.4&#34;&gt;Client Credentials Grant&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use this authentication type - configure &lt;code&gt;frpc.ini&lt;/code&gt; and &lt;code&gt;frps.ini&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;authentication_method = oidc&#xA;oidc_issuer = https://example-oidc-issuer.com/&#xA;oidc_audience = https://oidc-audience.com/.default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;authentication_method = oidc&#xA;oidc_client_id = 98692467-37de-409a-9fac-bb2585826f18 # Replace with OIDC client ID&#xA;oidc_client_secret = oidc_secret&#xA;oidc_audience = https://oidc-audience.com/.default&#xA;oidc_token_endpoint_url = https://example-oidc-endpoint.com/oauth2/v2.0/token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Encryption and Compression&lt;/h3&gt; &#xA;&lt;p&gt;The features are off by default. You can turn on encryption and/or compression:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[ssh]&#xA;type = tcp&#xA;local_port = 22&#xA;remote_port = 6000&#xA;use_encryption = true&#xA;use_compression = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;TLS&lt;/h4&gt; &#xA;&lt;p&gt;frp supports the TLS protocol between &lt;code&gt;frpc&lt;/code&gt; and &lt;code&gt;frps&lt;/code&gt; since v0.25.0.&lt;/p&gt; &#xA;&lt;p&gt;For port multiplexing, frp sends a first byte &lt;code&gt;0x17&lt;/code&gt; to dial a TLS connection.&lt;/p&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;tls_enable = true&lt;/code&gt; in the &lt;code&gt;[common]&lt;/code&gt; section to &lt;code&gt;frpc.ini&lt;/code&gt; to enable this feature.&lt;/p&gt; &#xA;&lt;p&gt;To &lt;strong&gt;enforce&lt;/strong&gt; &lt;code&gt;frps&lt;/code&gt; to only accept TLS connections - configure &lt;code&gt;tls_only = true&lt;/code&gt; in the &lt;code&gt;[common]&lt;/code&gt; section in &lt;code&gt;frps.ini&lt;/code&gt;. &lt;strong&gt;This is optional.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;frpc&lt;/code&gt; TLS settings (under the &lt;code&gt;[common]&lt;/code&gt; section):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;tls_enable = true&#xA;tls_cert_file = certificate.crt&#xA;tls_key_file = certificate.key&#xA;tls_trusted_ca_file = ca.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;frps&lt;/code&gt; TLS settings (under the &lt;code&gt;[common]&lt;/code&gt; section):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;tls_only = true&#xA;tls_enable = true&#xA;tls_cert_file = certificate.crt&#xA;tls_key_file = certificate.key&#xA;tls_trusted_ca_file = ca.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need &lt;strong&gt;a root CA cert&lt;/strong&gt; and &lt;strong&gt;at least one SSL/TLS certificate&lt;/strong&gt;. It &lt;strong&gt;can&lt;/strong&gt; be self-signed or regular (such as Let&#39;s Encrypt or another SSL/TLS certificate provider).&lt;/p&gt; &#xA;&lt;p&gt;If you using &lt;code&gt;frp&lt;/code&gt; via IP address and not hostname, make sure to set the appropriate IP address in the Subject Alternative Name (SAN) area when generating SSL/TLS Certificates.&lt;/p&gt; &#xA;&lt;p&gt;Given an example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prepare openssl config file. It exists at &lt;code&gt;/etc/pki/tls/openssl.cnf&lt;/code&gt; in Linux System and &lt;code&gt;/System/Library/OpenSSL/openssl.cnf&lt;/code&gt; in MacOS, and you can copy it to current path, like &lt;code&gt;cp /etc/pki/tls/openssl.cnf ./my-openssl.cnf&lt;/code&gt;. If not, you can build it by yourself, like:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cat &amp;gt; my-openssl.cnf &amp;lt;&amp;lt; EOF&#xA;[ ca ]&#xA;default_ca = CA_default&#xA;[ CA_default ]&#xA;x509_extensions = usr_cert&#xA;[ req ]&#xA;default_bits        = 2048&#xA;default_md          = sha256&#xA;default_keyfile     = privkey.pem&#xA;distinguished_name  = req_distinguished_name&#xA;attributes          = req_attributes&#xA;x509_extensions     = v3_ca&#xA;string_mask         = utf8only&#xA;[ req_distinguished_name ]&#xA;[ req_attributes ]&#xA;[ usr_cert ]&#xA;basicConstraints       = CA:FALSE&#xA;nsComment              = &#34;OpenSSL Generated Certificate&#34;&#xA;subjectKeyIdentifier   = hash&#xA;authorityKeyIdentifier = keyid,issuer&#xA;[ v3_ca ]&#xA;subjectKeyIdentifier   = hash&#xA;authorityKeyIdentifier = keyid:always,issuer&#xA;basicConstraints       = CA:true&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build ca certificates:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;openssl genrsa -out ca.key 2048&#xA;openssl req -x509 -new -nodes -key ca.key -subj &#34;/CN=example.ca.com&#34; -days 5000 -out ca.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build frps certificates:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;openssl genrsa -out server.key 2048&#xA;&#xA;openssl req -new -sha256 -key server.key \&#xA;    -subj &#34;/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=server.com&#34; \&#xA;    -reqexts SAN \&#xA;    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf &#34;\n[SAN]\nsubjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com&#34;)) \&#xA;    -out server.csr&#xA;&#xA;openssl x509 -req -days 365 \&#xA;&#x9;-in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \&#xA;&#x9;-extfile &amp;lt;(printf &#34;subjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com&#34;) \&#xA;&#x9;-out server.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build frpc certificates：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;openssl genrsa -out client.key 2048&#xA;openssl req -new -sha256 -key client.key \&#xA;    -subj &#34;/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=client.com&#34; \&#xA;    -reqexts SAN \&#xA;    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf &#34;\n[SAN]\nsubjectAltName=DNS:client.com,DNS:example.client.com&#34;)) \&#xA;    -out client.csr&#xA;&#xA;openssl x509 -req -days 365 \&#xA;    -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial \&#xA;&#x9;-extfile &amp;lt;(printf &#34;subjectAltName=DNS:client.com,DNS:example.client.com&#34;) \&#xA;&#x9;-out client.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hot-Reloading frpc configuration&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;admin_addr&lt;/code&gt; and &lt;code&gt;admin_port&lt;/code&gt; fields are required for enabling HTTP API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;admin_addr = 127.0.0.1&#xA;admin_port = 7400&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run command &lt;code&gt;frpc reload -c ./frpc.ini&lt;/code&gt; and wait for about 10 seconds to let &lt;code&gt;frpc&lt;/code&gt; create or update or remove proxies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that parameters in [common] section won&#39;t be modified except &#39;start&#39;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can run command &lt;code&gt;frpc verify -c ./frpc.ini&lt;/code&gt; before reloading to check if there are config errors.&lt;/p&gt; &#xA;&lt;h3&gt;Get proxy status from client&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;frpc status -c ./frpc.ini&lt;/code&gt; to get status of all proxies. The &lt;code&gt;admin_addr&lt;/code&gt; and &lt;code&gt;admin_port&lt;/code&gt; fields are required for enabling HTTP API.&lt;/p&gt; &#xA;&lt;h3&gt;Only allowing certain ports on the server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;allow_ports&lt;/code&gt; in &lt;code&gt;frps.ini&lt;/code&gt; is used to avoid abuse of ports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;allow_ports = 2000-3000,3001,3003,4000-50000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;allow_ports&lt;/code&gt; consists of specific ports or port ranges (lowest port number, dash &lt;code&gt;-&lt;/code&gt;, highest port number), separated by comma &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Port Reuse&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;vhost_http_port&lt;/code&gt; and &lt;code&gt;vhost_https_port&lt;/code&gt; in frps can use same port with &lt;code&gt;bind_port&lt;/code&gt;. frps will detect the connection&#39;s protocol and handle it correspondingly.&lt;/p&gt; &#xA;&lt;p&gt;We would like to try to allow multiple proxies bind a same remote port with different protocols in the future.&lt;/p&gt; &#xA;&lt;h3&gt;Bandwidth Limit&lt;/h3&gt; &#xA;&lt;h4&gt;For Each Proxy&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[ssh]&#xA;type = tcp&#xA;local_port = 22&#xA;remote_port = 6000&#xA;bandwidth_limit = 1MB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set &lt;code&gt;bandwidth_limit&lt;/code&gt; in each proxy&#39;s configure to enable this feature. Supported units are &lt;code&gt;MB&lt;/code&gt; and &lt;code&gt;KB&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;TCP Stream Multiplexing&lt;/h3&gt; &#xA;&lt;p&gt;frp supports tcp stream multiplexing since v0.10.0 like HTTP2 Multiplexing, in which case all logic connections to the same frpc are multiplexed into the same TCP connection.&lt;/p&gt; &#xA;&lt;p&gt;You can disable this feature by modify &lt;code&gt;frps.ini&lt;/code&gt; and &lt;code&gt;frpc.ini&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini and frpc.ini, must be same&#xA;[common]&#xA;tcp_mux = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Support KCP Protocol&lt;/h3&gt; &#xA;&lt;p&gt;KCP is a fast and reliable protocol that can achieve the transmission effect of a reduction of the average latency by 30% to 40% and reduction of the maximum delay by a factor of three, at the cost of 10% to 20% more bandwidth wasted than TCP.&lt;/p&gt; &#xA;&lt;p&gt;KCP mode uses UDP as the underlying transport. Using KCP in frp:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enable KCP in frps:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;# Specify a UDP port for KCP.&#xA;kcp_bind_port = 7000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;kcp_bind_port&lt;/code&gt; number can be the same number as &lt;code&gt;bind_port&lt;/code&gt;, since &lt;code&gt;bind_port&lt;/code&gt; field specifies a TCP port.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Configure &lt;code&gt;frpc.ini&lt;/code&gt; to use KCP to connect to frps:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;# Same as the &#39;kcp_bind_port&#39; in frps.ini&#xA;server_port = 7000&#xA;protocol = kcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connection Pooling&lt;/h3&gt; &#xA;&lt;p&gt;By default, frps creates a new frpc connection to the backend service upon a user request. With connection pooling, frps keeps a certain number of pre-established connections, reducing the time needed to establish a connection.&lt;/p&gt; &#xA;&lt;p&gt;This feature is suitable for a large number of short connections.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Configure the limit of pool count each proxy can use in &lt;code&gt;frps.ini&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;max_pool_count = 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Enable and specify the number of connection pool:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;pool_count = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Load balancing&lt;/h3&gt; &#xA;&lt;p&gt;Load balancing is supported by &lt;code&gt;group&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This feature is only available for types &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;tcpmux&lt;/code&gt; now.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[test1]&#xA;type = tcp&#xA;local_port = 8080&#xA;remote_port = 80&#xA;group = web&#xA;group_key = 123&#xA;&#xA;[test2]&#xA;type = tcp&#xA;local_port = 8081&#xA;remote_port = 80&#xA;group = web&#xA;group_key = 123&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;group_key&lt;/code&gt; is used for authentication.&lt;/p&gt; &#xA;&lt;p&gt;Connections to port 80 will be dispatched to proxies in the same group randomly.&lt;/p&gt; &#xA;&lt;p&gt;For type &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;remote_port&lt;/code&gt; in the same group should be the same.&lt;/p&gt; &#xA;&lt;p&gt;For type &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;custom_domains&lt;/code&gt;, &lt;code&gt;subdomain&lt;/code&gt;, &lt;code&gt;locations&lt;/code&gt; should be the same.&lt;/p&gt; &#xA;&lt;h3&gt;Service Health Check&lt;/h3&gt; &#xA;&lt;p&gt;Health check feature can help you achieve high availability with load balancing.&lt;/p&gt; &#xA;&lt;p&gt;Add &lt;code&gt;health_check_type = tcp&lt;/code&gt; or &lt;code&gt;health_check_type = http&lt;/code&gt; to enable health check.&lt;/p&gt; &#xA;&lt;p&gt;With health check type &lt;strong&gt;tcp&lt;/strong&gt;, the service port will be pinged (TCPing):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[test1]&#xA;type = tcp&#xA;local_port = 22&#xA;remote_port = 6000&#xA;# Enable TCP health check&#xA;health_check_type = tcp&#xA;# TCPing timeout seconds&#xA;health_check_timeout_s = 3&#xA;# If health check failed 3 times in a row, the proxy will be removed from frps&#xA;health_check_max_failed = 3&#xA;# A health check every 10 seconds&#xA;health_check_interval_s = 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With health check type &lt;strong&gt;http&lt;/strong&gt;, an HTTP request will be sent to the service and an HTTP 2xx OK response is expected:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_ip = 127.0.0.1&#xA;local_port = 80&#xA;custom_domains = test.example.com&#xA;# Enable HTTP health check&#xA;health_check_type = http&#xA;# frpc will send a GET request to &#39;/status&#39;&#xA;# and expect an HTTP 2xx OK response&#xA;health_check_url = /status&#xA;health_check_timeout_s = 3&#xA;health_check_max_failed = 3&#xA;health_check_interval_s = 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rewriting the HTTP Host Header&lt;/h3&gt; &#xA;&lt;p&gt;By default frp does not modify the tunneled HTTP requests at all as it&#39;s a byte-for-byte copy.&lt;/p&gt; &#xA;&lt;p&gt;However, speaking of web servers and HTTP requests, your web server might rely on the &lt;code&gt;Host&lt;/code&gt; HTTP header to determine the website to be accessed. frp can rewrite the &lt;code&gt;Host&lt;/code&gt; header when forwarding the HTTP requests, with the &lt;code&gt;host_header_rewrite&lt;/code&gt; field:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = test.example.com&#xA;host_header_rewrite = dev.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The HTTP request will have the the &lt;code&gt;Host&lt;/code&gt; header rewritten to &lt;code&gt;Host: dev.example.com&lt;/code&gt; when it reaches the actual web server, although the request from the browser probably has &lt;code&gt;Host: test.example.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Setting other HTTP Headers&lt;/h3&gt; &#xA;&lt;p&gt;Similar to &lt;code&gt;Host&lt;/code&gt;, You can override other HTTP request headers with proxy type &lt;code&gt;http&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = test.example.com&#xA;host_header_rewrite = dev.example.com&#xA;header_X-From-Where = frp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that parameter(s) prefixed with &lt;code&gt;header_&lt;/code&gt; will be added to HTTP request headers.&lt;/p&gt; &#xA;&lt;p&gt;In this example, it will set header &lt;code&gt;X-From-Where: frp&lt;/code&gt; in the HTTP request.&lt;/p&gt; &#xA;&lt;h3&gt;Get Real IP&lt;/h3&gt; &#xA;&lt;h4&gt;HTTP X-Forwarded-For&lt;/h4&gt; &#xA;&lt;p&gt;This feature is for http proxy only.&lt;/p&gt; &#xA;&lt;p&gt;You can get user&#39;s real IP from HTTP request headers &lt;code&gt;X-Forwarded-For&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Proxy Protocol&lt;/h4&gt; &#xA;&lt;p&gt;frp supports Proxy Protocol to send user&#39;s real IP to local services. It support all types except UDP.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example for https service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = https&#xA;local_port = 443&#xA;custom_domains = test.example.com&#xA;&#xA;# now v1 and v2 are supported&#xA;proxy_protocol_version = v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can enable Proxy Protocol support in nginx to expose user&#39;s real IP in HTTP header &lt;code&gt;X-Real-IP&lt;/code&gt;, and then read &lt;code&gt;X-Real-IP&lt;/code&gt; header in your web service for the real IP.&lt;/p&gt; &#xA;&lt;h3&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/h3&gt; &#xA;&lt;p&gt;Anyone who can guess your tunnel URL can access your local web server unless you protect it with a password.&lt;/p&gt; &#xA;&lt;p&gt;This enforces HTTP Basic Auth on all requests with the username and password specified in frpc&#39;s configure file.&lt;/p&gt; &#xA;&lt;p&gt;It can only be enabled when proxy type is http.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = test.example.com&#xA;http_user = abc&#xA;http_pwd = abc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit &lt;code&gt;http://test.example.com&lt;/code&gt; in the browser and now you are prompted to enter the username and password.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Subdomain Names&lt;/h3&gt; &#xA;&lt;p&gt;It is convenient to use &lt;code&gt;subdomain&lt;/code&gt; configure for http and https types when many people share one frps server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;subdomain_host = frps.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Resolve &lt;code&gt;*.frps.com&lt;/code&gt; to the frps server&#39;s IP. This is usually called a Wildcard DNS record.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web]&#xA;type = http&#xA;local_port = 80&#xA;subdomain = test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can visit your web service on &lt;code&gt;test.frps.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that if &lt;code&gt;subdomain_host&lt;/code&gt; is not empty, &lt;code&gt;custom_domains&lt;/code&gt; should not be the subdomain of &lt;code&gt;subdomain_host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;URL Routing&lt;/h3&gt; &#xA;&lt;p&gt;frp supports forwarding HTTP requests to different backend web services by url routing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;locations&lt;/code&gt; specifies the prefix of URL used for routing. frps first searches for the most specific prefix location given by literal strings regardless of the listed order.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[web01]&#xA;type = http&#xA;local_port = 80&#xA;custom_domains = web.example.com&#xA;locations = /&#xA;&#xA;[web02]&#xA;type = http&#xA;local_port = 81&#xA;custom_domains = web.example.com&#xA;locations = /news,/about&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HTTP requests with URL prefix &lt;code&gt;/news&lt;/code&gt; or &lt;code&gt;/about&lt;/code&gt; will be forwarded to &lt;strong&gt;web02&lt;/strong&gt; and other requests to &lt;strong&gt;web01&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;TCP Port Multiplexing&lt;/h3&gt; &#xA;&lt;p&gt;frp supports receiving TCP sockets directed to different proxies on a single port on frps, similar to &lt;code&gt;vhost_http_port&lt;/code&gt; and &lt;code&gt;vhost_https_port&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The only supported TCP port multiplexing method available at the moment is &lt;code&gt;httpconnect&lt;/code&gt; - HTTP CONNECT tunnel.&lt;/p&gt; &#xA;&lt;p&gt;When setting &lt;code&gt;tcpmux_httpconnect_port&lt;/code&gt; to anything other than 0 in frps under &lt;code&gt;[common]&lt;/code&gt;, frps will listen on this port for HTTP CONNECT requests.&lt;/p&gt; &#xA;&lt;p&gt;The host of the HTTP CONNECT request will be used to match the proxy in frps. Proxy hosts can be configured in frpc by configuring &lt;code&gt;custom_domain&lt;/code&gt; and / or &lt;code&gt;subdomain&lt;/code&gt; under &lt;code&gt;type = tcpmux&lt;/code&gt; proxies, when &lt;code&gt;multiplexer = httpconnect&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frps.ini&#xA;[common]&#xA;bind_port = 7000&#xA;tcpmux_httpconnect_port = 1337&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;&#xA;[proxy1]&#xA;type = tcpmux&#xA;multiplexer = httpconnect&#xA;custom_domains = test1&#xA;local_port = 80&#xA;&#xA;[proxy2]&#xA;type = tcpmux&#xA;multiplexer = httpconnect&#xA;custom_domains = test2&#xA;local_port = 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the above configuration - frps can be contacted on port 1337 with a HTTP CONNECT header such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CONNECT test1 HTTP/1.1\r\n\r\n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and the connection will be routed to &lt;code&gt;proxy1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Connecting to frps via HTTP PROXY&lt;/h3&gt; &#xA;&lt;p&gt;frpc can connect to frps using HTTP proxy if you set OS environment variable &lt;code&gt;HTTP_PROXY&lt;/code&gt;, or if &lt;code&gt;http_proxy&lt;/code&gt; is set in frpc.ini file.&lt;/p&gt; &#xA;&lt;p&gt;It only works when protocol is tcp.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[common]&#xA;server_addr = x.x.x.x&#xA;server_port = 7000&#xA;http_proxy = http://user:pwd@192.168.1.128:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Range ports mapping&lt;/h3&gt; &#xA;&lt;p&gt;Proxy with names that start with &lt;code&gt;range:&lt;/code&gt; will support mapping range ports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[range:test_tcp]&#xA;type = tcp&#xA;local_ip = 127.0.0.1&#xA;local_port = 6000-6006,6007&#xA;remote_port = 6000-6006,6007&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;frpc will generate 8 proxies like &lt;code&gt;test_tcp_0&lt;/code&gt;, &lt;code&gt;test_tcp_1&lt;/code&gt;, ..., &lt;code&gt;test_tcp_7&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Client Plugins&lt;/h3&gt; &#xA;&lt;p&gt;frpc only forwards requests to local TCP or UDP ports by default.&lt;/p&gt; &#xA;&lt;p&gt;Plugins are used for providing rich features. There are built-in plugins such as &lt;code&gt;unix_domain_socket&lt;/code&gt;, &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;socks5&lt;/code&gt;, &lt;code&gt;static_file&lt;/code&gt;, &lt;code&gt;http2https&lt;/code&gt;, &lt;code&gt;https2http&lt;/code&gt;, &lt;code&gt;https2https&lt;/code&gt; and you can see &lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage&#34;&gt;example usage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Specify which plugin to use with the &lt;code&gt;plugin&lt;/code&gt; parameter. Configuration parameters of plugin should be started with &lt;code&gt;plugin_&lt;/code&gt;. &lt;code&gt;local_ip&lt;/code&gt; and &lt;code&gt;local_port&lt;/code&gt; are not used for plugin.&lt;/p&gt; &#xA;&lt;p&gt;Using plugin &lt;strong&gt;http_proxy&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# frpc.ini&#xA;[http_proxy]&#xA;type = tcp&#xA;remote_port = 6000&#xA;plugin = http_proxy&#xA;plugin_http_user = abc&#xA;plugin_http_passwd = abc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;plugin_http_user&lt;/code&gt; and &lt;code&gt;plugin_http_passwd&lt;/code&gt; are configuration parameters used in &lt;code&gt;http_proxy&lt;/code&gt; plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Server Manage Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/fatedier/frp/dev/doc/server_plugin.md&#34;&gt;document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find more plugins in &lt;a href=&#34;https://github.com/gofrp/plugin&#34;&gt;gofrp/plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Plan&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Log HTTP request information in frps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Interested in getting involved? We would like to help you!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Take a look at our &lt;a href=&#34;https://github.com/fatedier/frp/issues&#34;&gt;issues list&lt;/a&gt; and consider sending a Pull Request to &lt;strong&gt;dev branch&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you want to add a new feature, please create an issue first to describe the new feature, as well as the implementation approach. Once a proposal is accepted, create an implementation of the new features and submit it as a pull request.&lt;/li&gt; &#xA; &lt;li&gt;Sorry for my poor English. Improvements for this document are welcome, even some typo fixes.&lt;/li&gt; &#xA; &lt;li&gt;If you have great ideas, send an email to &lt;a href=&#34;mailto:fatedier@gmail.com&#34;&gt;fatedier@gmail.com&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: We prefer you to give your advise in &lt;a href=&#34;https://github.com/fatedier/frp/issues&#34;&gt;issues&lt;/a&gt;, so others with a same question can search it quickly and we don&#39;t need to answer them repeatedly.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;If frp helps you a lot, you can support us by:&lt;/p&gt; &#xA;&lt;h3&gt;GitHub Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support us by &lt;a href=&#34;https://github.com/sponsors/fatedier&#34;&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can have your company&#39;s logo placed on README file of this project.&lt;/p&gt; &#xA;&lt;h3&gt;PayPal&lt;/h3&gt; &#xA;&lt;p&gt;Donate money by &lt;a href=&#34;https://www.paypal.me/fatedier&#34;&gt;PayPal&lt;/a&gt; to my account &lt;strong&gt;&lt;a href=&#34;mailto:fatedier@gmail.com&#34;&gt;fatedier@gmail.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>