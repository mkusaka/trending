<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-23T01:54:15Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FerretDB/FerretDB</title>
    <updated>2023-04-23T01:54:15Z</updated>
    <id>tag:github.com,2023-04-23:/FerretDB/FerretDB</id>
    <link href="https://github.com/FerretDB/FerretDB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A truly Open Source MongoDB alternative&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FerretDB&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/FerretDB/FerretDB/ferretdb&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/FerretDB/FerretDB/ferretdb.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/go.yml&#34;&gt;&lt;img src=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/go.yml/badge.svg?branch=main&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/integration.yml&#34;&gt;&lt;img src=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/integration.yml/badge.svg?branch=main&#34; alt=&#34;Integration&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/FerretDB/FerretDB&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/FerretDB/FerretDB/branch/main/graph/badge.svg?token=JZ56XFT3DM&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/security.yml&#34;&gt;&lt;img src=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/security.yml/badge.svg?branch=main&#34; alt=&#34;Security&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/packages.yml&#34;&gt;&lt;img src=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/packages.yml/badge.svg?branch=main&#34; alt=&#34;Packages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/docs.yml&#34;&gt;&lt;img src=&#34;https://github.com/FerretDB/FerretDB/actions/workflows/docs.yml/badge.svg?branch=main&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;FerretDB was founded to become the de-facto open-source substitute to MongoDB. FerretDB is an open-source proxy, converting the MongoDB 6.0+ wire protocol queries to SQL - using PostgreSQL as a database engine.&lt;/p&gt; &#xA;&lt;h2&gt;Why do we need FerretDB?&lt;/h2&gt; &#xA;&lt;p&gt;MongoDB was originally an eye-opening technology for many of us developers, empowering us to build applications faster than using relational databases. In its early days, its ease-to-use and well-documented drivers made MongoDB one of the simplest database solutions available. However, as time passed, MongoDB abandoned its open-source roots; changing the license to &lt;a href=&#34;https://www.mongodb.com/licensing/server-side-public-license&#34;&gt;SSPL&lt;/a&gt; - making it unusable for many open source and early-stage commercial projects.&lt;/p&gt; &#xA;&lt;p&gt;Most MongoDB users do not require any advanced features offered by MongoDB; however, they need an easy-to-use open-source document database solution. Recognizing this, FerretDB is here to fill that gap.&lt;/p&gt; &#xA;&lt;h2&gt;Scope and current state&lt;/h2&gt; &#xA;&lt;p&gt;FerretDB is compatible with MongoDB drivers and popular MongoDB tools. It functions as a drop-in replacement for MongoDB 6.0+ in many cases. Features are constantly being added to further increase compatibility and performance.&lt;/p&gt; &#xA;&lt;p&gt;We welcome all contributors. See our &lt;a href=&#34;https://github.com/orgs/FerretDB/projects/2/views/1&#34;&gt;public roadmap&lt;/a&gt;, a list of &lt;a href=&#34;https://docs.ferretdb.io/diff/&#34;&gt;known differences with MongoDB&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/FerretDB/FerretDB/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --rm --name ferretdb -p 27017:27017 ghcr.io/ferretdb/all-in-one&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will start a container with FerretDB, PostgreSQL, and MongoDB Shell for quick testing and experiments. However, it is unsuitable for production use cases because it keeps all data inside and loses it on shutdown. See our &lt;a href=&#34;https://docs.ferretdb.io/quickstart-guide/docker/&#34;&gt;Docker quickstart guide&lt;/a&gt; for instructions that don&#39;t have those problems.&lt;/p&gt; &#xA;&lt;p&gt;With that container running, you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect to it with any MongoDB client application using MongoDB URI &lt;code&gt;mongodb://127.0.0.1:27017/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Connect to it using MongoDB Shell by just running &lt;code&gt;mongosh&lt;/code&gt;. If you don&#39;t have it installed locally, you can run &lt;code&gt;docker exec -it ferretdb mongosh&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Connect to PostgreSQL running inside the container by running &lt;code&gt;docker exec -it ferretdb psql -U username ferretdb&lt;/code&gt;. FerretDB uses PostgreSQL schemas for MongoDB databases. So, if you created some collections in the &lt;code&gt;test&lt;/code&gt; database using any MongoDB client, you can switch to it by running &lt;code&gt;SET search_path = &#39;test&#39;;&lt;/code&gt; query and see a list of PostgreSQL tables by running &lt;code&gt;\d&lt;/code&gt; &lt;code&gt;psql&lt;/code&gt; command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can stop the container with &lt;code&gt;docker stop ferretdb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also provide binaries and packages for various Linux distributions. See &lt;a href=&#34;https://docs.ferretdb.io/quickstart-guide/&#34;&gt;our documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Building and packaging&lt;/h2&gt; &#xA;&lt;p&gt;We strongly advise users not to build FerretDB themselves. Instead, use binaries, Docker images, or &lt;code&gt;.deb&lt;/code&gt;/&lt;code&gt;.rpm&lt;/code&gt; packages provided by us.&lt;/p&gt; &#xA;&lt;p&gt;If you want to package FerretDB for your operating system or distribution, the recommended way to build the binary is to use the &lt;code&gt;build-release&lt;/code&gt; task; see our &lt;a href=&#34;https://raw.githubusercontent.com/FerretDB/FerretDB/main/CONTRIBUTING.md&#34;&gt;instructions for contributors&lt;/a&gt; for more details. FerretDB could also be built as any other Go program, but a few generated files and build tags could affect it. See &lt;a href=&#34;https://pkg.go.dev/github.com/FerretDB/FerretDB/build/version&#34;&gt;there&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Managed FerretDB at cloud providers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.civo.com&#34;&gt;Civo&lt;/a&gt; (see &lt;a href=&#34;https://www.civo.com/marketplace/FerretDB&#34;&gt;here&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.scaleway.com/&#34;&gt;Scaleway&lt;/a&gt; (request access &lt;a href=&#34;https://www.scaleway.com/en/betas/#managed-document-database&#34;&gt;here&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ferretdb.io/&#34;&gt;Documentation for users&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/FerretDB/FerretDB/ferretdb&#34;&gt;Documentation for Go developers about embeddable FerretDB&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website and blog: &lt;a href=&#34;https://ferretdb.io/&#34;&gt;https://ferretdb.io&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/ferret_db&#34;&gt;@ferret_db&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Mastodon: &lt;a href=&#34;https://techhub.social/@ferretdb&#34;&gt;@ferretdb@techhub.social&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/ferretdb/shared_invite/zt-zqe9hj8g-ZcMG3~5Cs5u9uuOPnZB8~A&#34;&gt;Slack chat&lt;/a&gt; for quick questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FerretDB/FerretDB/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; for longer topics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FerretDB/FerretDB/issues&#34;&gt;GitHub Issues&lt;/a&gt; for bugs and missing features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendar.google.com/event?action=TEMPLATE&amp;amp;tmeid=NjNkdTkyN3VoNW5zdHRiaHZybXFtb2l1OWtfMjAyMTEyMTNUMTgwMDAwWiBjX24zN3RxdW9yZWlsOWIwMm0wNzQwMDA3MjQ0QGc&amp;amp;tmsrc=c_n37tquoreil9b02m0740007244%40group.calendar.google.com&amp;amp;scp=ALL&#34;&gt;Open Office Hours meeting&lt;/a&gt; every Monday at 18:00 UTC at &lt;a href=&#34;https://meet.google.com/mcb-arhw-qbq&#34;&gt;Google Meet&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to contact FerretDB Inc., please use &lt;a href=&#34;https://www.ferretdb.io/contact/&#34;&gt;this form&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cosmtrek/air</title>
    <updated>2023-04-23T01:54:15Z</updated>
    <id>tag:github.com,2023-04-23:/cosmtrek/air</id>
    <link href="https://github.com/cosmtrek/air" rel="alternate"></link>
    <summary type="html">&lt;p&gt;☁️ Live reload for Go apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;☁&lt;/span&gt; Air - Live reload for Go apps&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cosmtrek/air/actions?query=workflow%3AGo+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/cosmtrek/air/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/cosmtrek/air/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=cosmtrek/air&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/dcb95264cc504cad9c2a3d8b0795a7f8&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/cosmtrek/air&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/cosmtrek/air&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/cosmtrek/air&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/cosmtrek/air/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cosmtrek/air/master/docs/air.png&#34; alt=&#34;air&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/cosmtrek/air/master/README-zh_cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;When I started developing websites in Go and using &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;gin&lt;/a&gt; framework, it was a pity that gin lacked a live-reloading function. So I searched around and tried &lt;a href=&#34;https://github.com/pilu/fresh&#34;&gt;fresh&lt;/a&gt;, it seems not much flexible, so I intended to rewrite it better. Finally, Air&#39;s born. In addition, great thanks to &lt;a href=&#34;https://github.com/pilu&#34;&gt;pilu&lt;/a&gt;, no fresh, no air :)&lt;/p&gt; &#xA;&lt;p&gt;Air is yet another live-reloading command line utility for developing Go applications. Run &lt;code&gt;air&lt;/code&gt; in your project root directory, leave it alone, and focus on your code.&lt;/p&gt; &#xA;&lt;p&gt;Note: This tool has nothing to do with hot-deploy for production.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Colorful log output&lt;/li&gt; &#xA; &lt;li&gt;Customize build or any command&lt;/li&gt; &#xA; &lt;li&gt;Support excluding subdirectories&lt;/li&gt; &#xA; &lt;li&gt;Allow watching new directories after Air started&lt;/li&gt; &#xA; &lt;li&gt;Better building process&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;✨ beta feature&lt;/h3&gt; &#xA;&lt;p&gt;Support air config fields as arguments:&lt;/p&gt; &#xA;&lt;p&gt;If you want to config build command and run command, you can use like the following command without the config file:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;air --build.cmd &#34;go build -o bin/api cmd/run.go&#34; --build.bin &#34;./bin/api&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use a comma to separate items for arguments that take a list as input:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;air --build.cmd &#34;go build -o bin/api cmd/run.go&#34; --build.bin &#34;./bin/api&#34; --build.exclude_dir &#34;templates,build&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Prefer install.sh&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# binary will be $(go env GOPATH)/bin/air&#xA;curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s -- -b $(go env GOPATH)/bin&#xA;&#xA;# or install it into ./bin/&#xA;curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s&#xA;&#xA;air -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Via &lt;code&gt;go install&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;With go 1.18 or higher:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/cosmtrek/air@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Please pull this docker image &lt;a href=&#34;https://hub.docker.com/r/cosmtrek/air&#34;&gt;cosmtrek/air&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;    -w &#34;&amp;lt;PROJECT&amp;gt;&#34; \&#xA;    -e &#34;air_wd=&amp;lt;PROJECT&amp;gt;&#34; \&#xA;    -v $(pwd):&amp;lt;PROJECT&amp;gt; \&#xA;    -p &amp;lt;PORT&amp;gt;:&amp;lt;APP SERVER PORT&amp;gt; \&#xA;    cosmtrek/air&#xA;    -c &amp;lt;CONF&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;For example&lt;/summary&gt; &#xA; &lt;p&gt;One of my project runs in docker:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;    -w &#34;/go/src/github.com/cosmtrek/hub&#34; \&#xA;    -v $(pwd):/go/src/github.com/cosmtrek/hub \&#xA;    -p 9090:9090 \&#xA;    cosmtrek/air&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For less typing, you could add &lt;code&gt;alias air=&#39;~/.air&#39;&lt;/code&gt; to your &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First enter into your project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/your_project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The simplest usage is run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# firstly find `.air.toml` in current directory, if not found, use defaults&#xA;air -c .air.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can initialize the &lt;code&gt;.air.toml&lt;/code&gt; configuration file to the current directory with the default settings running the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;air init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After this, you can just run the &lt;code&gt;air&lt;/code&gt; command without additional arguments and it will use the &lt;code&gt;.air.toml&lt;/code&gt; file for configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;air&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For modifying the configuration refer to the &lt;a href=&#34;https://raw.githubusercontent.com/cosmtrek/air/master/air_example.toml&#34;&gt;air_example.toml&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Runtime arguments&lt;/h3&gt; &#xA;&lt;p&gt;You can pass arguments for running the built binary by adding them after the air command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Will run ./tmp/main bench&#xA;air bench&#xA;&#xA;# Will run ./tmp/main server --port 8080&#xA;air server --port 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can separate the arguments passed for the air command and the built binary with &lt;code&gt;--&lt;/code&gt; argument.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Will run ./tmp/main -h&#xA;air -- -h&#xA;&#xA;# Will run air with custom config and pass -h argument to the built binary&#xA;air -c .air.toml -- -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker-compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;services:&#xA;  my-project-with-air:&#xA;    image: cosmtrek/air&#xA;    # working_dir value has to be the same of mapped volume&#xA;    working_dir: /project-package&#xA;    ports:&#xA;      - &amp;lt;any&amp;gt;:&amp;lt;any&amp;gt;&#xA;    environment:&#xA;      - ENV_A=${ENV_A}&#xA;      - ENV_B=${ENV_B}&#xA;      - ENV_C=${ENV_C}&#xA;    volumes:&#xA;      - ./project-relative-path/:/project-package/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;air -d&lt;/code&gt; prints all logs.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Usage for Docker users who don&#39;t want to use air image&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;# Choose whatever you want, version &amp;gt;= 1.16&#xA;FROM golang:1.20-alpine&#xA;&#xA;WORKDIR /app&#xA;&#xA;RUN go install github.com/cosmtrek/air@latest&#xA;&#xA;COPY go.mod go.sum ./&#xA;RUN go mod download&#xA;&#xA;CMD [&#34;air&#34;, &#34;-c&#34;, &#34;.air.toml&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;docker-compose.yaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3.8&#34;&#xA;services:&#xA;  web:&#xA;    build:&#xA;      context: .&#xA;      # Correct the path to your Dockerfile&#xA;      dockerfile: Dockerfile&#xA;    ports:&#xA;      - 8080:3000&#xA;    # Important to bind/mount your codebase dir to /app dir for live reload&#xA;    volumes:&#xA;      - ./:/app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; &#xA;&lt;h3&gt;&#34;command not found: air&#34; or &#34;No such file or directory&#34;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;export GOPATH=$HOME/xxxxx&#xA;export PATH=$PATH:$GOROOT/bin:$GOPATH/bin&#xA;export PATH=$PATH:$(go env GOPATH)/bin &amp;lt;---- Confirm this line in you profile!!!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Error under wsl when &#39; is included in the bin&lt;/h3&gt; &#xA;&lt;p&gt;Should use &lt;code&gt;\&lt;/code&gt; to escape the `&#39; in the bin. related issue: &lt;a href=&#34;https://github.com/cosmtrek/air/issues/305&#34;&gt;#305&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Please note that it requires Go 1.16+ since I use &lt;code&gt;go mod&lt;/code&gt; to manage dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Fork this project&#xA;&#xA;# Clone it&#xA;mkdir -p $GOPATH/src/github.com/cosmtrek&#xA;cd $GOPATH/src/github.com/cosmtrek&#xA;git clone git@github.com:&amp;lt;YOUR USERNAME&amp;gt;/air.git&#xA;&#xA;# Install dependencies&#xA;cd air&#xA;make ci&#xA;&#xA;# Explore it and happy hacking!&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pull requests are welcome.&lt;/p&gt; &#xA;&lt;h3&gt;Release&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Checkout to master&#xA;git checkout master&#xA;&#xA;# Add the version that needs to be released&#xA;git tag v1.xx.x&#xA;&#xA;# Push to remote&#xA;git push origin v1.xx.x&#xA;&#xA;# The CI will process and release a new version. Wait about 5 min, and you can fetch the latest version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#cosmtrek/air&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=cosmtrek/air&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/cosmtrek&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 51px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Give huge thanks to lots of supporters. I&#39;ve always been remembering your kindness.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cosmtrek/air/master/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>m1k1o/neko</title>
    <updated>2023-04-23T01:54:15Z</updated>
    <id>tag:github.com,2023-04-23:/m1k1o/neko</id>
    <link href="https://github.com/m1k1o/neko" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A self hosted virtual browser that runs in docker and uses WebRTC.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/m1k1o/neko&#34; title=&#34;Neko&#39;s Github repository.&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/logo.png&#34; width=&#34;400&#34; height=&#34;auto&#34;&gt; &lt;/a&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/m1k1o/neko/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/m1k1o/neko&#34; alt=&#34;release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/m1k1o/neko/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/m1k1o/neko&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/u/m1k1o/neko&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/m1k1o/neko&#34; alt=&#34;pulls&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/m1k1o/neko/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/m1k1o/neko&#34; alt=&#34;issues&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/m1k1o&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-sponsor-red&#34; alt=&#34;issues&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/3U6hWpC&#34;&gt; &lt;img src=&#34;https://discordapp.com/api/guilds/665851821906067466/widget.png&#34; alt=&#34;Chat on discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/m1k1o/neko/actions&#34;&gt; &lt;img src=&#34;https://github.com/m1k1o/neko/actions/workflows/ghcr-amd.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/intro.gif&#34; width=&#34;650&#34; height=&#34;auto&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;n.eko&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to Neko, a self-hosted virtual browser that runs in Docker and uses WebRTC technology. Neko is a powerful tool that allows you to &lt;strong&gt;run a fully-functional browser in a virtual environment&lt;/strong&gt;, giving you the ability to &lt;strong&gt;access the internet securely and privately from anywhere&lt;/strong&gt;. With Neko, you can browse the web, &lt;strong&gt;run applications&lt;/strong&gt;, and perform other tasks just as you would on a regular browser, all within a &lt;strong&gt;secure and isolated environment&lt;/strong&gt;. Whether you are a developer looking to test web applications, a &lt;strong&gt;privacy-conscious user seeking a secure browsing experience&lt;/strong&gt;, or simply someone who wants to take advantage of the &lt;strong&gt;convenience and flexibility of a virtual browser&lt;/strong&gt;, Neko is the perfect solution.&lt;/p&gt; &#xA;&lt;p&gt;In addition to its security and privacy features, Neko offers the &lt;strong&gt;ability for multiple users to access it simultaneously&lt;/strong&gt;. This makes it an ideal solution for teams or organizations that need to share access to a browser, as well as for individuals who want to use &lt;strong&gt;multiple devices to access the same virtual environment&lt;/strong&gt;. With Neko, you can &lt;strong&gt;easily and securely share access to a browser with others&lt;/strong&gt;, without having to worry about maintaining separate configurations or settings. Whether you need to &lt;strong&gt;collaborate on a project&lt;/strong&gt;, access shared resources, or simply want to &lt;strong&gt;share access to a browser with friends or family&lt;/strong&gt;, Neko makes it easy to do so.&lt;/p&gt; &#xA;&lt;p&gt;Neko is also a great tool for &lt;strong&gt;hosting watch parties&lt;/strong&gt; and interactive presentations. With its virtual browser capabilities, Neko allows you to host watch parties and presentations that are &lt;strong&gt;accessible from anywhere&lt;/strong&gt;, without the need for in-person gatherings. This makes it easy to &lt;strong&gt;stay connected with friends and colleagues&lt;/strong&gt;, even when you are unable to meet in person. With Neko, you can easily host a watch party or give an &lt;strong&gt;interactive presentation&lt;/strong&gt;, whether it&#39;s for leisure or work. Simply invite your guests to join the virtual environment, and you can share the screen and &lt;strong&gt;interact with them in real-time&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This app uses WebRTC to stream a desktop inside of a docker container, original author made this because &lt;a href=&#34;https://en.wikipedia.org/wiki/Rabb.it&#34;&gt;rabb.it&lt;/a&gt; went under and his internet could not handle streaming and discord kept crashing when his friend attempted to. He just wanted to watch anime with his friends ლ(ಠ益ಠლ) so he started digging throughout the internet and found a few &lt;em&gt;kinda&lt;/em&gt; clones, but none of them had the virtual browser, then he found &lt;a href=&#34;https://github.com/Khauri/Turtus&#34;&gt;Turtus&lt;/a&gt; and he was able to figure out the rest.&lt;/p&gt; &#xA;&lt;p&gt;Then I found &lt;a href=&#34;https://github.com/nurdism/neko&#34;&gt;this&lt;/a&gt; project and started to dig into it. I really liked the idea of having collaborative browser browsing together with multiple people, so I created a fork. Initially, I wanted to merge my changes to the upstream repository, but the original author did not have time for this project anymore and it got eventually archived.&lt;/p&gt; &#xA;&lt;h2&gt;Use-cases and comparison&lt;/h2&gt; &#xA;&lt;p&gt;Neko started as a virtual browser that is streamed using WebRTC to multiple users.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It is &lt;strong&gt;not only limited to a browser&lt;/strong&gt;; it can run anything that runs on linux (e.g. VLC). Browser only happens to be the most popular and widely used use-case.&lt;/li&gt; &#xA; &lt;li&gt;In fact, it is not limited to a single program either; you can install a full desktop environment (e.g. XFCE, KDE).&lt;/li&gt; &#xA; &lt;li&gt;Speaking of limits, it does not need to run in a container; you could install neko on your host, connect to your X server and control your whole VM.&lt;/li&gt; &#xA; &lt;li&gt;Theoretically it is not limited to only X server, anything that can be controlled and scraped periodically for images could be used instead. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Like implementing RDP or VNC protocol, where neko would only act as WebRTC relay server. This is currently only future.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Primary use case is connecting with multiple people, leveraging real time synchronization and interactivity:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Watch party&lt;/strong&gt; - watching video content together with multiple people and reacting to it (chat, emotes) - open source alternative to &lt;a href=&#34;https://giggl.app/&#34;&gt;giggl.app&lt;/a&gt; or &lt;a href=&#34;https://watch.hyperbeam.com&#34;&gt;hyperbeam&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interactive presentation&lt;/strong&gt; - not only screen sharing, but others can control the screen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Collaborative tool&lt;/strong&gt; - brainstorming ideas, cobrowsing, code debugging together.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Support/Teaching&lt;/strong&gt; - interactively guiding people in controlled environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Embed anything&lt;/strong&gt; - embed virtual browser in your web app - open source alternative to &lt;a href=&#34;https://hyperbeam.com/&#34;&gt;hyperbeam API&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;open any third-party website or application, synchronize audio and video flawlessly among multiple participants.&lt;/li&gt; &#xA;   &lt;li&gt;request rooms using API with &lt;a href=&#34;https://github.com/m1k1o/neko-rooms&#34;&gt;neko-rooms&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other use cases that benefit from single-user:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Personal workspace&lt;/strong&gt; - streaming containerized apps and desktops to end-users - similar to &lt;a href=&#34;https://www.kasmweb.com/&#34;&gt;kasm&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Persistent browser&lt;/strong&gt; - own browser with persistent cookies available anywhere - similar to &lt;a href=&#34;https://www.mightyapp.com/&#34;&gt;mightyapp&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;no state is left on the host browser after terminating the connection.&lt;/li&gt; &#xA;   &lt;li&gt;sensitive data like cookies are not transferred - only video is shared.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Throwaway browser&lt;/strong&gt; - a better solution for planning secret parties and buying birthday gifts off the internet. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;use Tor Browser and &lt;a href=&#34;https://github.com/m1k1o/neko-vpn&#34;&gt;VPN&lt;/a&gt; for additional anonymity.&lt;/li&gt; &#xA;   &lt;li&gt;mitigates risk of OS fingerprinting and browser vulnerabilities by running in container.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Session broadcasting&lt;/strong&gt; - broadcast room content using RTMP (to e.g. twitch or youtube...).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Session recording&lt;/strong&gt; - broadcast RTMP can be saved to a file using e.g. &lt;a href=&#34;https://www.nginx.com/products/nginx/modules/rtmp-media-streaming/&#34;&gt;nginx-rtmp&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;have clean environment when recording tutorials.&lt;/li&gt; &#xA;   &lt;li&gt;no need to hide bookmarks or use incognito mode.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jump host&lt;/strong&gt; - access your internal applications securely without the need for VPN.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automated browser&lt;/strong&gt; - you can install &lt;a href=&#34;https://playwright.dev/&#34;&gt;playwright&lt;/a&gt; or &lt;a href=&#34;https://pptr.dev/&#34;&gt;puppeteer&lt;/a&gt; and automate tasks while being able to actively intercept them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Compared to clientless remote desktop gateway (e.g. &lt;a href=&#34;https://guacamole.apache.org/&#34;&gt;Apache Guacamole&lt;/a&gt; or &lt;a href=&#34;https://github.com/novnc/websockify&#34;&gt;websockify&lt;/a&gt; with &lt;a href=&#34;https://novnc.com/&#34;&gt;noVNC&lt;/a&gt;), installed with remote desktop server along with desired program (e.g. &lt;a href=&#34;https://docs.linuxserver.io/images/docker-firefox&#34;&gt;linuxserver/firefox&lt;/a&gt;) provides neko additionally:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smooth video&lt;/strong&gt; because it uses WebRTC and not images sent over WebSockets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built in audio&lt;/strong&gt; support, what is not part of Apache Guacamole or noVNC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-participant control&lt;/strong&gt;, what is not natively supported by Apache Guacamole or noVNC.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported browsers&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/firefox.svg?sanitize=true&#34; title=&#34;m1k1o/neko:firefox&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/google-chrome.svg?sanitize=true&#34; title=&#34;m1k1o/neko:google-chrome&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/chromium.svg?sanitize=true&#34; title=&#34;m1k1o/neko:chromium&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/microsoft-edge.svg?sanitize=true&#34; title=&#34;m1k1o/neko:microsoft-edge&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/brave.svg?sanitize=true&#34; title=&#34;m1k1o/neko:brave&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/vivaldi.svg?sanitize=true&#34; title=&#34;m1k1o/neko:vivaldi&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/opera.svg?sanitize=true&#34; title=&#34;m1k1o/neko:opera&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/tor-browser.svg?sanitize=true&#34; title=&#34;m1k1o/neko:tor-browser&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Other programs&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/remmina.png&#34; title=&#34;m1k1o/neko:remmina&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/vlc.svg?sanitize=true&#34; title=&#34;m1k1o/neko:vlc&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/xfce.svg?sanitize=true&#34; title=&#34;m1k1o/neko:xfce&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/icons/kde.svg?sanitize=true&#34; title=&#34;m1k1o/neko:kde&#34; width=&#34;60&#34; height=&#34;auto&#34;&gt; &#xA; &lt;p&gt;... others in &lt;a href=&#34;https://github.com/m1k1o/neko-apps&#34;&gt;m1k1o/neko-apps&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Text Chat (With basic markdown support, discord flavor)&lt;/li&gt; &#xA; &lt;li&gt;Admin users (Kick, Ban &amp;amp; Force Give/Release Controls, Lock room)&lt;/li&gt; &#xA; &lt;li&gt;Clipboard synchronization (on &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText&#34;&gt;supported browsers&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Emote overlay&lt;/li&gt; &#xA; &lt;li&gt;Ignore user (chat and emotes)&lt;/li&gt; &#xA; &lt;li&gt;Persistent settings&lt;/li&gt; &#xA; &lt;li&gt;Automatic Login with custom url args. (add &lt;code&gt;?usr=&amp;lt;your-user-name&amp;gt;&amp;amp;pwd=&amp;lt;room-pass&amp;gt;&lt;/code&gt; to the url.)&lt;/li&gt; &#xA; &lt;li&gt;Broadcasting room content using RTMP (to e.g. twitch or youtube...)&lt;/li&gt; &#xA; &lt;li&gt;Bidirectional file transfer (if enabled)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;With &lt;code&gt;NEKO_FILE_TRANSFER_ENABLED=true&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/file-transfer.gif&#34; width=&#34;650&#34; height=&#34;auto&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Why n.eko?&lt;/h3&gt; &#xA;&lt;p&gt;I like cats 🐱 (&lt;code&gt;Neko&lt;/code&gt; is the Japanese word for cat), I&#39;m a weeb/nerd.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;But why the cat butt?&lt;/strong&gt;&lt;/em&gt; Because cats are &lt;em&gt;assholes&lt;/em&gt;, but you love them anyways.&lt;/p&gt; &#xA;&lt;h2&gt;Multiple rooms&lt;/h2&gt; &#xA;&lt;p&gt;For n.eko room management software, visit &lt;a href=&#34;https://github.com/m1k1o/neko-rooms&#34;&gt;neko-rooms&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It also offers zero-knowledge &lt;a href=&#34;https://github.com/m1k1o/neko-rooms/#zero-knowledge-installation-with-https-and-traefik&#34;&gt;installation script (with HTTPS and Traefik)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/getting-started/&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/getting-started/quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/getting-started/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/getting-started/reverse-proxy&#34;&gt;Reverse Proxy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/getting-started/configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/getting-started/troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/mobile-support&#34;&gt;Mobile Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/non-goals&#34;&gt;Non Goals&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/technologies&#34;&gt;Technologies&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neko.m1k1o.net/#/changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute? How to build?&lt;/h2&gt; &#xA;&lt;p&gt;Navigate to &lt;a href=&#34;https://raw.githubusercontent.com/m1k1o/neko/master/.docker&#34;&gt;.docker&lt;/a&gt; folder for further information.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you want to support this project, you can do it &lt;a href=&#34;https://github.com/sponsors/m1k1o&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>