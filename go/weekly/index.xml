<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-23T01:42:11Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>derailed/k9s</title>
    <updated>2025-02-23T01:42:11Z</updated>
    <id>tag:github.com,2025-02-23:/derailed/k9s</id>
    <link href="https://github.com/derailed/k9s" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üê∂ Kubernetes CLI To Manage Your Clusters In Style!&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/derailed/k9s/master/assets/k9s.png&#34; alt=&#34;k9s&#34;&gt; &#xA;&lt;h2&gt;K9s - Kubernetes CLI To Manage Your Clusters In Style!&lt;/h2&gt; &#xA;&lt;p&gt;K9s provides a terminal UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your applications in the wild. K9s continually watches Kubernetes for changes and offers subsequent commands to interact with your observed resources.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Note...&lt;/h2&gt; &#xA;&lt;p&gt;K9s is not pimped out by a big corporation with deep pockets. It is a complex OSS project that demands a lot of my time to maintain and support. K9s will always remain OSS and therefore free! That said, if you feel k9s makes your day to day Kubernetes journey a tad brighter, saves you time and makes you more productive, please consider &lt;a href=&#34;https://github.com/sponsors/derailed&#34;&gt;sponsoring us!&lt;/a&gt; Your donations will go a long way in keeping our servers lights on and beers in our fridge!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/derailed/k9s&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/derailed/k9s?&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golangci.com/r/github.com/derailed/k9s&#34;&gt;&lt;img src=&#34;https://github.com/golangci/golangci-web/raw/master/src/assets/images/badge_a_plus_flat.svg?sanitize=true&#34; alt=&#34;golangci badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codebeat.co/projects/github-com-derailed-k9s-master&#34;&gt;&lt;img src=&#34;https://codebeat.co/badges/89e5a80e-dfe8-4426-acf6-6be781e0a12e&#34; alt=&#34;codebeat badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/derailed/k9s&#34;&gt;&lt;img src=&#34;https://api.travis-ci.com/derailed/k9s.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/derailed/k9s&#34;&gt;&lt;img src=&#34;https://quay.io/repository/derailed/k9s/status&#34; alt=&#34;Docker Repository on Quay&#34; title=&#34;Docker Repository on Quay&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/derailed/k9s/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-pre/derailed/k9s.svg?sanitize=true&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mum4k/termdash/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/derailed/k9s/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/derailed/k9s/total.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Pods &lt;img src=&#34;https://raw.githubusercontent.com/derailed/k9s/master/assets/screen_po.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Logs &lt;img src=&#34;https://raw.githubusercontent.com/derailed/k9s/master/assets/screen_logs.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deployments &lt;img src=&#34;https://raw.githubusercontent.com/derailed/k9s/master/assets/screen_dp.png&#34;&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Demo Videos/Recordings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/iy6RDozAM4A&#34;&gt;K9s v0.40.0 -Column Blow- Sneak peek&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/X3444KfjguE&#34;&gt;K9s v0.31.0 Configs+Sneak peek&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/mVBc1XneRJ4&#34;&gt;K9s v0.30.0 Sneak peek&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ULkl0MsaidU&#34;&gt;Vulnerability Scans&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/oiU3wmoAkBo&#34;&gt;K9s v0.29.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/wG8KCwDAhnw&#34;&gt;K9s v0.21.3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/kj-WverKZ24&#34;&gt;K9s v0.19.X&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=zMnD5e53yRw&#34;&gt;K9s v0.18.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7S33CNLAofk&amp;amp;feature=youtu.be&#34;&gt;K9s v0.17.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/UbXKPal6IWpTaVAjBBFmizcGN&#34;&gt;K9s Pulses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/7Fx4XQ2ftpM&#34;&gt;K9s v0.15.1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qaeR2iK7U0o&amp;amp;t=15s&#34;&gt;K9s v0.13.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bxKfqumjW4I&#34;&gt;K9s v0.9.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/83jYehwlql8&#34;&gt;K9s v0.7.0 Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/k7zseUhaXeU&#34;&gt;K9s v0 Demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://k9scli.io&#34;&gt;K9s documentation&lt;/a&gt; site for installation, usage, customization and tips.&lt;/p&gt; &#xA;&lt;h2&gt;Slack Channel&lt;/h2&gt; &#xA;&lt;p&gt;Wanna discuss K9s features with your fellow &lt;code&gt;K9sers&lt;/code&gt; or simply show your support for this tool?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Channel: &lt;a href=&#34;https://k9sers.slack.com/&#34;&gt;K9sersSlack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Invite: &lt;a href=&#34;https://join.slack.com/t/k9sers/shared_invite/enQtOTA5MDEyNzI5MTU0LWQ1ZGI3MzliYzZhZWEyNzYxYzA3NjE0YTk1YmFmNzViZjIyNzhkZGI0MmJjYzhlNjdlMGJhYzE2ZGU1NjkyNTM&#34;&gt;K9slackers Invite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;K9s is available on Linux, macOS and Windows platforms. Binaries for Linux, Windows and Mac are available as tarballs in the &lt;a href=&#34;https://github.com/derailed/k9s/releases&#34;&gt;release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; for macOS or Linux&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install derailed/k9s/k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo port install k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://snapcraft.io/k9s&#34;&gt;snap&lt;/a&gt; for Linux&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;snap install k9s --devmode&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On Arch Linux&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pacman -S k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On OpenSUSE Linux distribution&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;zypper install k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On FreeBSD&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pkg install k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On Ubuntu&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget https://github.com/derailed/k9s/releases/download/v0.32.7/k9s_linux_amd64.deb &amp;amp;&amp;amp; apt install ./k9s_linux_amd64.deb &amp;amp;&amp;amp; rm k9s_linux_amd64.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://github.com/microsoft/winget-cli&#34;&gt;Winget&lt;/a&gt; for Windows&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;winget install k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://scoop.sh&#34;&gt;Scoop&lt;/a&gt; for Windows&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;scoop install k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://chocolatey.org/packages/k9s&#34;&gt;Chocolatey&lt;/a&gt; for Windows&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;choco install k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via a GO install&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# NOTE: The dev version will be in effect!&#xA;go install github.com/derailed/k9s@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://webinstall.dev&#34;&gt;Webi&lt;/a&gt; for Linux and macOS&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -sS https://webinstall.dev/k9s | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://pkgx.dev/pkgs/k9scli.io/&#34;&gt;pkgx&lt;/a&gt; for Linux and macOS&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pkgx k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via &lt;a href=&#34;https://webinstall.dev&#34;&gt;Webi&lt;/a&gt; for Windows&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl.exe -A MS https://webinstall.dev/k9s | powershell&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As a &lt;a href=&#34;https://docs.docker.com/desktop/extensions/&#34;&gt;Docker Desktop Extension&lt;/a&gt; (for the Docker Desktop built in Kubernetes Server)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker extension install spurin/k9s-dd-extension:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Building From Source&lt;/h2&gt; &#xA;&lt;p&gt;K9s is currently using GO v1.23.X or above. In order to build K9s from source you must:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and run the executable&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make build &amp;amp;&amp;amp; ./execs/k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Running with Docker&lt;/h2&gt; &#xA;&lt;h3&gt;Running the official Docker image&lt;/h3&gt; &#xA;&lt;p&gt;You can run k9s as a Docker container by mounting your &lt;code&gt;KUBECONFIG&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -it -v $KUBECONFIG:/root/.kube/config quay.io/derailed/k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For default path it would be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -it -v ~/.kube/config:/root/.kube/config quay.io/derailed/k9s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building your own Docker image&lt;/h3&gt; &#xA;&lt;p&gt;You can build your own Docker image of k9s from the &lt;a href=&#34;https://raw.githubusercontent.com/derailed/k9s/master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; with the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t k9s-docker:v0.0.1 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can get the latest stable &lt;code&gt;kubectl&lt;/code&gt; version and pass it to the &lt;code&gt;docker build&lt;/code&gt; command with the &lt;code&gt;--build-arg&lt;/code&gt; option. You can use the &lt;code&gt;--build-arg&lt;/code&gt; option to pass any valid &lt;code&gt;kubectl&lt;/code&gt; version (like &lt;code&gt;v1.18.0&lt;/code&gt; or &lt;code&gt;v1.19.1&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;KUBECTL_VERSION=$(make kubectl-stable-version 2&amp;gt;/dev/null)&#xA;docker build --build-arg KUBECTL_VERSION=${KUBECTL_VERSION} -t k9s-docker:0.1 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run your container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -it -v ~/.kube/config:/root/.kube/config k9s-docker:0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;PreFlight Checks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;K9s uses 256 colors terminal mode. On `Nix system make sure TERM is set accordingly.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export TERM=xterm-256color&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In order to issue resource edit commands make sure your EDITOR and KUBE_EDITOR env vars are set.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Kubectl edit command will use this env var.&#xA;export KUBE_EDITOR=my_fav_editor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;K9s prefers recent kubernetes versions ie 1.28+&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;K8S Compatibility Matrix&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;k9s&lt;/th&gt; &#xA;   &lt;th&gt;k8s client&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;= v0.27.0&lt;/td&gt; &#xA;   &lt;td&gt;1.26.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.26.7 - v0.26.6&lt;/td&gt; &#xA;   &lt;td&gt;1.25.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.26.5 - v0.26.4&lt;/td&gt; &#xA;   &lt;td&gt;1.25.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.26.3 - v0.26.1&lt;/td&gt; &#xA;   &lt;td&gt;1.24.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.26.0 - v0.25.19&lt;/td&gt; &#xA;   &lt;td&gt;1.24.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.25.18 - v0.25.3&lt;/td&gt; &#xA;   &lt;td&gt;1.22.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.25.2 - v0.25.0&lt;/td&gt; &#xA;   &lt;td&gt;1.22.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;lt;= v0.24&lt;/td&gt; &#xA;   &lt;td&gt;1.21.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;The Command Line&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# List current version&#xA;k9s version&#xA;&#xA;# To get info about K9s runtime (logs, configs, etc..)&#xA;k9s info&#xA;&#xA;# List all available CLI options&#xA;k9s help&#xA;&#xA;# To run K9s in a given namespace&#xA;k9s -n mycoolns&#xA;&#xA;# Start K9s in an existing KubeConfig context&#xA;k9s --context coolCtx&#xA;&#xA;# Start K9s in readonly mode - with all cluster modification commands disabled&#xA;k9s --readonly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Logs And Debug Logs&lt;/h2&gt; &#xA;&lt;p&gt;Given the nature of the ui k9s does produce logs to a specific location. To view the logs and turn on debug mode, use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Find out where the logs are stored&#xA;k9s info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt; ____  __.________&#xA;|    |/ _/   __   \______&#xA;|      &amp;lt; \____    /  ___/&#xA;|    |  \   /    /\___ \&#xA;|____|__ \ /____//____  &amp;gt;&#xA;        \/            \/&#xA;&#xA;Version:           vX.Y.Z&#xA;Config:            /Users/fernand/.config/k9s/config.yaml&#xA;Logs:              /Users/fernand/.local/state/k9s/k9s.log&#xA;Dumps dir:         /Users/fernand/.local/state/k9s/screen-dumps&#xA;Benchmarks dir:    /Users/fernand/.local/state/k9s/benchmarks&#xA;Skins dir:         /Users/fernand/.local/share/k9s/skins&#xA;Contexts dir:      /Users/fernand/.local/share/k9s/clusters&#xA;Custom views file: /Users/fernand/.local/share/k9s/views.yaml&#xA;Plugins file:      /Users/fernand/.local/share/k9s/plugins.yaml&#xA;Hotkeys file:      /Users/fernand/.local/share/k9s/hotkeys.yaml&#xA;Alias file:        /Users/fernand/.local/share/k9s/aliases.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;View K9s logs&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tail -f /Users/fernand/.local/data/k9s/k9s.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start K9s in debug mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;k9s -l debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customize logs destination&lt;/h3&gt; &#xA;&lt;p&gt;You can override the default log file destination either with the &lt;code&gt;--logFile&lt;/code&gt; argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;k9s --logFile /tmp/k9s.log&#xA;less /tmp/k9s.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or through the &lt;code&gt;K9S_LOGS_DIR&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;K9S_LOGS_DIR=/var/log k9s&#xA;less /var/log/k9s.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Key Bindings&lt;/h2&gt; &#xA;&lt;p&gt;K9s uses aliases to navigate most K8s resources.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Show active keyboard mnemonics and help&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Show all available resource alias&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ctrl-a&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To bail out of K9s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:quit&lt;/code&gt;, &lt;code&gt;:q&lt;/code&gt;, &lt;code&gt;ctrl-c&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To go up/back to the previous view&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;esc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If you have crumbs on, this will go to the previous one&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;View a Kubernetes resource using singular/plural or short-name&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;pod‚èé&lt;/td&gt; &#xA;   &lt;td&gt;accepts singular, plural, short-name or alias ie pod or pods&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;View a Kubernetes resource in a given namespace&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;pod ns-x‚èé&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;View filtered pods (New v0.30.0!)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;pod /fred‚èé&lt;/td&gt; &#xA;   &lt;td&gt;View all pods filtered by fred&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;View labeled pods (New v0.30.0!)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;pod app=fred,env=dev‚èé&lt;/td&gt; &#xA;   &lt;td&gt;View all pods with labels matching app=fred and env=dev&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;View pods in a given context (New v0.30.0!)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;pod @ctx1‚èé&lt;/td&gt; &#xA;   &lt;td&gt;View all pods in context ctx1. Switches out your current k9s context!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Filter out a resource view given a filter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/&lt;/code&gt;filter‚èé&lt;/td&gt; &#xA;   &lt;td&gt;Regex2 supported ie `fred&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Inverse regex filter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/&lt;/code&gt;! filter‚èé&lt;/td&gt; &#xA;   &lt;td&gt;Keep everything that &lt;em&gt;doesn&#39;t&lt;/em&gt; match.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Filter resource view by labels&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/&lt;/code&gt;-l label-selector‚èé&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fuzzy find a resource given a filter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/&lt;/code&gt;-f filter‚èé&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bails out of view/command/filter mode&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Key mapping to describe, view, edit, view logs,...&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;d&lt;/code&gt;,&lt;code&gt;v&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;,...&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To view and switch to another Kubernetes context (Pod view)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;ctx‚èé&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To view and switch directly to another Kubernetes context (Last used view)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;ctx context-name‚èé&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To view and switch to another Kubernetes namespace&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;ns‚èé&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To switch back to the last active command (like how &#34;cd -&#34; works)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Navigation that adds breadcrumbs to the bottom are not commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To go back and forward through the command history&lt;/td&gt; &#xA;   &lt;td&gt;back: &lt;code&gt;[&lt;/code&gt;, forward: &lt;code&gt;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Same as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To view all saved resources&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;screendump or sd‚èé&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To delete a resource (TAB and ENTER to confirm)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ctrl-d&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;To kill a resource (no confirmation dialog, equivalent to kubectl delete --now)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ctrl-k&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Launch pulses view&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;pulses or pu‚èé&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Launch XRay view&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;xray RESOURCE [NAMESPACE]‚èé&lt;/td&gt; &#xA;   &lt;td&gt;RESOURCE can be one of po, svc, dp, rs, sts, ds, NAMESPACE is optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Launch Popeye view&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;popeye or pop‚èé&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/derailed/k9s/master/#popeye&#34;&gt;popeye&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;K9s Configuration&lt;/h2&gt; &#xA;&lt;p&gt;K9s keeps its configurations as YAML files inside of a &lt;code&gt;k9s&lt;/code&gt; directory and the location depends on your operating system. K9s leverages &lt;a href=&#34;https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html&#34;&gt;XDG&lt;/a&gt; to load its various configurations files. For information on the default locations for your OS please see &lt;a href=&#34;https://github.com/adrg/xdg/raw/master/README.md&#34;&gt;this link&lt;/a&gt;. If you are still confused a quick &lt;code&gt;k9s info&lt;/code&gt; will reveal where k9s is loading its configurations from. Alternatively, you can set &lt;code&gt;K9S_CONFIG_DIR&lt;/code&gt; to tell K9s the directory location to pull its configurations from.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Unix&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;~/.config/k9s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;~/Library/Application Support/k9s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;%LOCALAPPDATA%\k9s&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: This is still in flux and will change while in pre-release stage!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can now override the context portForward default address configuration by setting an env variable that can override all clusters portForward local address using &lt;code&gt;K9S_DEFAULT_PF_ADDRESS=a.b.c.d&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# $XDG_CONFIG_HOME/k9s/config.yaml&#xA;k9s:&#xA;  # Enable periodic refresh of resource browser windows. Default false&#xA;  liveViewAutoRefresh: false&#xA;  # The path to screen dump. Default: &#39;%temp_dir%/k9s-screens-%username%&#39; (k9s info)&#xA;  screenDumpDir: /tmp/dumps&#xA;  # Represents ui poll intervals. Default 2secs&#xA;  refreshRate: 2&#xA;  # Number of retries once the connection to the api-server is lost. Default 15.&#xA;  maxConnRetry: 5&#xA;  # Indicates whether modification commands like delete/kill/edit are disabled. Default is false&#xA;  readOnly: false&#xA;  # Toggles whether k9s should exit when CTRL-C is pressed. When set to true, you will need to exit k9s via the :quit command. Default is false.&#xA;  noExitOnCtrlC: false&#xA;  #UI settings&#xA;  ui:&#xA;    # Enable mouse support. Default false&#xA;    enableMouse: false&#xA;    # Set to true to hide K9s header. Default false&#xA;    headless: false&#xA;    # Set to true to hide the K9S logo Default false&#xA;    logoless: false&#xA;    # Set to true to hide K9s crumbs. Default false&#xA;    crumbsless: false&#xA;    noIcons: false&#xA;    # Toggles reactive UI. This option provide for watching on disk artifacts changes and update the UI live Defaults to false.&#xA;    reactive: false&#xA;    # By default all contexts will use the dracula skin unless explicitly overridden in the context config file.&#xA;    skin: dracula # =&amp;gt; assumes the file skins/dracula.yaml is present in the  $XDG_DATA_HOME/k9s/skins directory&#xA;    # Allows to set certain views default fullscreen mode. (yaml, helm history, describe, value_extender, details, logs) Default false&#xA;    defaultsToFullScreen: false&#xA;  # Toggles icons display as not all terminal support these chars.&#xA;  noIcons: false&#xA;  # Toggles whether k9s should check for the latest revision from the GitHub repository releases. Default is false.&#xA;  skipLatestRevCheck: false&#xA;  # When altering kubeconfig or using multiple kube configs, k9s will clean up clusters configurations that are no longer in use. Setting this flag to true will keep k9s from cleaning up inactive cluster configs. Defaults to false.&#xA;  keepMissingClusters: false&#xA;  # Logs configuration&#xA;  logger:&#xA;    # Defines the number of lines to return. Default 100&#xA;    tail: 200&#xA;    # Defines the total number of log lines to allow in the view. Default 1000&#xA;    buffer: 500&#xA;    # Represents how far to go back in the log timeline in seconds. Setting to -1 will tail logs. Default is -1.&#xA;    sinceSeconds: 300 # =&amp;gt; tail the last 5 mins.&#xA;    # Toggles log line wrap. Default false&#xA;    textWrap: false&#xA;    # Autoscroll in logs will be disabled. Default is false.&#xA;    disableAutoscroll: false&#xA;    # Toggles log line timestamp info. Default false&#xA;    showTime: false&#xA;  # Provide shell pod customization when nodeShell feature gate is enabled!&#xA;  shellPod:&#xA;    # The shell pod image to use.&#xA;    image: killerAdmin&#xA;    # The namespace to launch to shell pod into.&#xA;    namespace: default&#xA;    # The resource limit to set on the shell pod.&#xA;    limits:&#xA;      cpu: 100m&#xA;      memory: 100Mi&#xA;    # Enable TTY&#xA;    tty: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;popeye&#34;&gt;&lt;/a&gt;Popeye Configuration&lt;/h2&gt; &#xA;&lt;p&gt;K9s has integration with &lt;a href=&#34;https://popeyecli.io/&#34;&gt;Popeye&lt;/a&gt;, which is a Kubernetes cluster sanitizer. Popeye itself uses a configuration called &lt;code&gt;spinach.yml&lt;/code&gt;, but when integrating with K9s the cluster-specific file should be name &lt;code&gt;$XDG_CONFIG_HOME/share/k9s/clusters/clusterX/contextY/spinach.yml&lt;/code&gt;. This allows you to have a different spinach config per cluster.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Node Shell&lt;/h2&gt; &#xA;&lt;p&gt;By enabling the nodeShell feature gate on a given cluster, K9s allows you to shell into your cluster nodes. Once enabled, you will have a new &lt;code&gt;s&lt;/code&gt; for &lt;code&gt;shell&lt;/code&gt; menu option while in node view. K9s will launch a pod on the selected node using a special k9s_shell pod. Furthermore, you can refine your shell pod by using a custom docker image preloaded with the shell tools you love. By default k9s uses a BusyBox image, but you can configure it as follows:&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can now override the context configuration by setting an env variable that can override all clusters node shell gate using &lt;code&gt;K9S_FEATURE_GATE_NODE_SHELL=true|false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# $XDG_CONFIG_HOME/k9s/config.yaml&#xA;k9s:&#xA;  # You can also further tune the shell pod specification&#xA;  shellPod:&#xA;    image: cool_kid_admin:42&#xA;    namespace: blee&#xA;    limits:&#xA;      cpu: 100m&#xA;      memory: 100Mi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then in your cluster configuration file...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# $XDG_DATA_HOME/k9s/clusters/cluster-1/context-1&#xA;k9s:&#xA;  cluster: cluster-1&#xA;  readOnly: false&#xA;  namespace:&#xA;    active: default&#xA;    lockFavorites: false&#xA;    favorites:&#xA;    - kube-system&#xA;    - default&#xA;  view:&#xA;    active: po&#xA;  featureGates:&#xA;    nodeShell: true # =&amp;gt; Enable this feature gate to make nodeShell available on this cluster&#xA;  portForwardAddress: localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Command Aliases&lt;/h2&gt; &#xA;&lt;p&gt;In K9s, you can define your very own command aliases (shortnames) to access your resources. In your &lt;code&gt;$HOME/.config/k9s&lt;/code&gt; define a file called &lt;code&gt;aliases.yaml&lt;/code&gt;. A K9s alias defines pairs of alias:gvr. A gvr (Group/Version/Resource) represents a fully qualified Kubernetes resource identifier. Here is an example of an alias file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#  $XDG_DATA_HOME/k9s/aliases.yaml&#xA;aliases:&#xA;  pp: v1/pods&#xA;  crb: rbac.authorization.k8s.io/v1/clusterrolebindings&#xA;  # As of v0.30.0 you can also refer to another command alias...&#xA;  fred: pod fred app=blee # =&amp;gt; view pods in namespace fred with labels matching app=blee&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using this aliases file, you can now type &lt;code&gt;:pp&lt;/code&gt; or &lt;code&gt;:crb&lt;/code&gt; or &lt;code&gt;:fred&lt;/code&gt; to activate their respective commands.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;HotKey Support&lt;/h2&gt; &#xA;&lt;p&gt;Entering the command mode and typing a resource name or alias, could be cumbersome for navigating thru often used resources. We&#39;re introducing hotkeys that allow users to define their own key combination to activate their favorite resource views.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can define context specific hotkeys by add a context level configuration file in &lt;code&gt;$XDG_DATA_HOME/k9s/clusters/clusterX/contextY/hotkeys.yaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to surface hotkeys globally please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a file named &lt;code&gt;$XDG_CONFIG_HOME/k9s/hotkeys.yaml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the following to your &lt;code&gt;hotkeys.yaml&lt;/code&gt;. You can use resource name/short name to specify a command ie same as typing it while in command mode.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#  $XDG_CONFIG_HOME/k9s/hotkeys.yaml&#xA;hotKeys:&#xA;  # Hitting Shift-0 navigates to your pod view&#xA;  shift-0:&#xA;    shortCut:    Shift-0&#xA;    description: Viewing pods&#xA;    command:     pods&#xA;  # Hitting Shift-1 navigates to your deployments&#xA;  shift-1:&#xA;    shortCut:    Shift-1&#xA;    description: View deployments&#xA;    command:     dp&#xA;  # Hitting Shift-2 navigates to your xray deployments&#xA;  shift-2:&#xA;    shortCut:    Shift-2&#xA;    description: Xray Deployments&#xA;    command:     xray deploy&#xA;  # Hitting Shift-S view the resources in the namespace of your current selection&#xA;  shift-s:&#xA;    shortCut:    Shift-S&#xA;    override:    true # =&amp;gt; will override the default shortcut related action if set to true (default to false)&#xA;    description: Namespaced resources&#xA;    command:     &#34;$RESOURCE_NAME $NAMESPACE&#34;&#xA;    keepHistory: true # whether you can return to the previous view&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Not feeling so hot? Your custom hotkeys will be listed in the help view &lt;code&gt;?&lt;/code&gt;. Also your hotkeys file will be automatically reloaded so you can readily use your hotkeys as you define them.&lt;/p&gt; &#xA;&lt;p&gt;You can choose any keyboard shortcuts that make sense to you, provided they are not part of the standard K9s shortcuts list.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, referencing environment variables in hotkeys is also supported. The available environment variables can refer to the description in the &lt;a href=&#34;https://raw.githubusercontent.com/derailed/k9s/master/#plugins&#34;&gt;Plugins&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: This feature/configuration might change in future releases!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Port Forwarding over websockets&lt;/h2&gt; &#xA;&lt;p&gt;K9s follows &lt;code&gt;kubectl&lt;/code&gt; feature flag environment variables to enable/disable port-forwarding over websockets. (default enabled in &amp;gt;1.30) To disable Websocket support, set &lt;code&gt;KUBECTL_PORT_FORWARD_WEBSOCKETS=false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FastForwards&lt;/h2&gt; &#xA;&lt;p&gt;As of v0.25.0, you can leverage the &lt;code&gt;FastForwards&lt;/code&gt; feature to tell K9s how to default port-forwards. In situations where you are dealing with multiple containers or containers exposing multiple ports, it can be cumbersome to specify the desired port-forward from the dialog as in most cases, you already know which container/port tuple you desire. For these use cases, you can now annotate your manifests with the following annotations:&lt;/p&gt; &#xA;&lt;p&gt;@ &lt;code&gt;k9scli.io/auto-port-forwards&lt;/code&gt; activates one or more port-forwards directly bypassing the port-forward dialog all together. @ &lt;code&gt;k9scli.io/port-forwards&lt;/code&gt; pre-selects one or more port-forwards when launching the port-forward dialog.&lt;/p&gt; &#xA;&lt;p&gt;The annotation value takes on the shape &lt;code&gt;container-name::[local-port:]container-port&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: for either cases above you can specify the container port by name or number in your annotation!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Pod fred&#xA;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: fred&#xA;  annotations:&#xA;    k9scli.io/auto-port-forwards: zorg::5556        # =&amp;gt; will default to container zorg port 5556 and local port 5566. No port-forward dialog will be shown.&#xA;    # Or...&#xA;    k9scli.io/port-forwards: bozo::9090:p1          # =&amp;gt; launches the port-forward dialog selecting default port-forward on container bozo port named p1(8081)&#xA;                                                    # mapping to local port 9090.&#xA;    ...&#xA;spec:&#xA;  containers:&#xA;  - name: zorg&#xA;    ports:&#xA;    - name: p1&#xA;      containerPort: 5556&#xA;    ...&#xA;  - name: bozo&#xA;    ports:&#xA;    - name: p1&#xA;      containerPort: 8081&#xA;    - name: p2&#xA;      containerPort: 5555&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The annotation value must specify a container to forward to as well as a local port and container port. The container port may be specified as either a port number or port name. If the local port is omitted then the local port will default to the container port number. Here are a few examples:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;bozo::http - creates a pf on container &lt;code&gt;bozo&lt;/code&gt; with port name http. If http specifies port number 8080 then the local port will be 8080 as well.&lt;/li&gt; &#xA; &lt;li&gt;bozo::9090:http - creates a pf on container &lt;code&gt;bozo&lt;/code&gt; mapping local port 9090-&amp;gt;http(8080)&lt;/li&gt; &#xA; &lt;li&gt;bozo::9090:8080 - creates a pf on container &lt;code&gt;bozo&lt;/code&gt; mapping local port 9090-&amp;gt;8080&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Resource Custom Columns&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/7S33CNLAofk&#34;&gt;SneakCast v0.17.0 on The Beach! - Yup! sound is sucking but what a setting!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can change which columns shows up for a given resource via custom views. To surface this feature, you will need to create a new configuration file, namely &lt;code&gt;$XDG_CONFIG_HOME/k9s/views.yaml&lt;/code&gt;. This file leverages GVR (Group/Version/Resource) to configure the associated table view columns. If no GVR is found for a view the default rendering will take over (ie what we have now). Going wide will add all the remaining columns that are available on the given resource after your custom columns. To boot, you can edit your views config file and tune your resources views live!&lt;/p&gt; &#xA;&lt;p&gt;üì¢ üéâ As of &lt;code&gt;release v0.40.0&lt;/code&gt; you can specify json parse expressions to further customize your resources rendering.&lt;/p&gt; &#xA;&lt;p&gt;The new column syntax is as follows:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;COLUMN_NAME&amp;lt;:json_parse_expression&amp;gt;&amp;lt;|column_attributes&amp;gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Where &lt;code&gt;:json_parse_expression&lt;/code&gt; represents an expression to pull a specific snippet out of the resource manifest. Similar to &lt;code&gt;kubectl -o custom-columns&lt;/code&gt; command. This expression is optional.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;IMPORTANT! Columns must be valid YAML strings. Thus if your column definition contains non-alpha chars they must figure with either single/double quotes or escaped via &lt;code&gt;\&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE! Be sure to watch k9s logs as any issues with the custom views specification are only surfaced in the logs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Additionally, you can specify column attributes to further tailor the column rendering. To use this you will need to add a &lt;code&gt;|&lt;/code&gt; indicator followed by your rendering bits. You can have one or more of the following attributes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;T&lt;/code&gt; -&amp;gt; time column indicator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;N&lt;/code&gt; -&amp;gt; number column indicator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;W&lt;/code&gt; -&amp;gt; turns on wide column aka only shows while in wide mode. Defaults to the standard resource definition when present.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;H&lt;/code&gt; -&amp;gt; Hides the column&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;L&lt;/code&gt; -&amp;gt; Left align (default)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;R&lt;/code&gt; -&amp;gt; Right align&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is a sample views configuration that customize a pods and services views.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# $XDG_CONFIG_HOME/k9s/views.yaml&#xA;views:&#xA;  v1/pods:&#xA;    columns:&#xA;      - AGE&#xA;      - NAMESPACE|WR                                     # =&amp;gt; üåö Specifies the NAMESPACE column to be right aligned and only visible while in wide mode&#xA;      - ZORG:.metadata.labels.fred\.io\.kubernetes\.blee # =&amp;gt; üåö extract fred.io.kubernetes.blee label into it&#39;s own column&#xA;      - BLEE:.metadata.annotations.blee|R                # =&amp;gt; üåö extract annotation blee into it&#39;s own column and right align it&#xA;      - NAME&#xA;      - IP&#xA;      - NODE&#xA;      - STATUS&#xA;      - READY&#xA;  v1/services:&#xA;    columns:&#xA;      - AGE&#xA;      - NAMESPACE&#xA;      - NAME&#xA;      - TYPE&#xA;      - CLUSTER-IP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ü©ª NOTE: This is experimental and will most likely change as we iron this out!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;K9s allows you to extend your command line and tooling by defining your very own cluster commands via plugins. K9s will look at &lt;code&gt;$XDG_CONFIG_HOME/k9s/plugins.yaml&lt;/code&gt; to locate all available plugins.&lt;/p&gt; &#xA;&lt;p&gt;A plugin is defined as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shortcut option represents the key combination a user would type to activate the plugin. Valid values are [a-z], Shift-[A-Z], Ctrl-[A-Z].&lt;/li&gt; &#xA; &lt;li&gt;Override option make that the default action related to the shortcut will be overridden by the plugin&lt;/li&gt; &#xA; &lt;li&gt;Confirm option (when enabled) lets you see the command that is going to be executed and gives you an option to confirm or prevent execution&lt;/li&gt; &#xA; &lt;li&gt;Description will be printed next to the shortcut in the k9s menu&lt;/li&gt; &#xA; &lt;li&gt;Scopes defines a collection of resources names/short-names for the views associated with the plugin. You can specify &lt;code&gt;all&lt;/code&gt; to provide this shortcut for all views.&lt;/li&gt; &#xA; &lt;li&gt;Command represents ad-hoc commands the plugin runs upon activation&lt;/li&gt; &#xA; &lt;li&gt;Background specifies whether or not the command runs in the background&lt;/li&gt; &#xA; &lt;li&gt;Args specifies the various arguments that should apply to the command above&lt;/li&gt; &#xA; &lt;li&gt;OverwriteOutput boolean option allows plugin developers to provide custom messages on plugin stdout execution. See example in &lt;a href=&#34;https://github.com/derailed/k9s/pull/2644&#34;&gt;#2644&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dangerous boolean option enables disabling the plugin when read-only mode is set. See &lt;a href=&#34;https://github.com/derailed/k9s/issues/2604&#34;&gt;#2604&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;K9s does provide additional environment variables for you to customize your plugins arguments. Currently, the available environment variables are as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$RESOURCE_GROUP&lt;/code&gt; -- the selected resource group&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$RESOURCE_VERSION&lt;/code&gt; -- the selected resource api version&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$RESOURCE_NAME&lt;/code&gt; -- the selected resource name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$NAMESPACE&lt;/code&gt; -- the selected resource namespace&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$NAME&lt;/code&gt; -- the selected resource name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$CONTAINER&lt;/code&gt; -- the current container if applicable&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$FILTER&lt;/code&gt; -- the current filter if any&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$KUBECONFIG&lt;/code&gt; -- the KubeConfig location.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$CLUSTER&lt;/code&gt; the active cluster name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$CONTEXT&lt;/code&gt; the active context name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$USER&lt;/code&gt; the active user&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$GROUPS&lt;/code&gt; the active groups&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$POD&lt;/code&gt; while in a container view&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$COL-&amp;lt;RESOURCE_COLUMN_NAME&amp;gt;&lt;/code&gt; use a given column name for a viewed resource. Must be prefixed by &lt;code&gt;COL-&lt;/code&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Curly braces can be used to embed an environment variable inside another string, or if the column name contains special characters. (e.g. &lt;code&gt;${NAME}-example&lt;/code&gt; or &lt;code&gt;${COL-%CPU/L}&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Plugin Example&lt;/h3&gt; &#xA;&lt;p&gt;This defines a plugin for viewing logs on a selected pod using &lt;code&gt;ctrl-l&lt;/code&gt; as shortcut.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#  $XDG_DATA_HOME/k9s/plugins.yaml&#xA;plugins:&#xA;  # Defines a plugin to provide a `ctrl-l` shortcut to tail the logs while in pod view.&#xA;  fred:&#xA;    shortCut: Ctrl-L&#xA;    override: false&#xA;    overwriteOutput: false&#xA;    confirm: false&#xA;    dangerous: false&#xA;    description: Pod logs&#xA;    scopes:&#xA;    - pods&#xA;    command: kubectl&#xA;    background: false&#xA;    args:&#xA;    - logs&#xA;    - -f&#xA;    - $NAME&#xA;    - -n&#xA;    - $NAMESPACE&#xA;    - --context&#xA;    - $CONTEXT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: This is an experimental feature! Options and layout may change in future K9s releases as this feature solidifies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Benchmark Your Applications&lt;/h2&gt; &#xA;&lt;p&gt;K9s integrates &lt;a href=&#34;https://github.com/rakyll/hey&#34;&gt;Hey&lt;/a&gt; from the brilliant and super talented &lt;a href=&#34;https://github.com/rakyll&#34;&gt;Jaana Dogan&lt;/a&gt;. &lt;code&gt;Hey&lt;/code&gt; is a CLI tool to benchmark HTTP endpoints similar to AB bench. This preliminary feature currently supports benchmarking port-forwards and services (Read the paint on this is way fresh!).&lt;/p&gt; &#xA;&lt;p&gt;To setup a port-forward, you will need to navigate to the PodView, select a pod and a container that exposes a given port. Using &lt;code&gt;SHIFT-F&lt;/code&gt; a dialog comes up to allow you to specify a local port to forward. Once acknowledged, you can navigate to the PortForward view (alias &lt;code&gt;pf&lt;/code&gt;) listing out your active port-forwards. Selecting a port-forward and using &lt;code&gt;CTRL-B&lt;/code&gt; will run a benchmark on that HTTP endpoint. To view the results of your benchmark runs, go to the Benchmarks view (alias &lt;code&gt;be&lt;/code&gt;). You should now be able to select a benchmark and view the run stats details by pressing &lt;code&gt;&amp;lt;ENTER&amp;gt;&lt;/code&gt;. NOTE: Port-forwards only last for the duration of the K9s session and will be terminated upon exit.&lt;/p&gt; &#xA;&lt;p&gt;Initially, the benchmarks will run with the following defaults:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Concurrency Level: 1&lt;/li&gt; &#xA; &lt;li&gt;Number of Requests: 200&lt;/li&gt; &#xA; &lt;li&gt;HTTP Verb: GET&lt;/li&gt; &#xA; &lt;li&gt;Path: /&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The PortForward view is backed by a new K9s config file namely: &lt;code&gt;$XDG_DATA_HOME/k9s/clusters/clusterX/contextY/benchmarks.yaml&lt;/code&gt;. Each cluster you connect to will have its own bench config file, containing the name of the K8s context for the cluster. Changes to this file should automatically update the PortForward view to indicate how you want to run your benchmarks.&lt;/p&gt; &#xA;&lt;p&gt;Benchmarks result reports are stored in &lt;code&gt;$XDG_STATE_HOME/k9s/clusters/clusterX/contextY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is a sample benchmarks.yaml configuration. Please keep in mind this file will likely change in subsequent releases!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# This file resides in  $XDG_DATA_HOME/k9s/clusters/clusterX/contextY/benchmarks.yaml&#xA;benchmarks:&#xA;  # Indicates the default concurrency and number of requests setting if a container or service rule does not match.&#xA;  defaults:&#xA;    # One concurrent connection&#xA;    concurrency: 1&#xA;    # Number of requests that will be sent to an endpoint&#xA;    requests: 500&#xA;  containers:&#xA;    # Containers section allows you to configure your http container&#39;s endpoints and benchmarking settings.&#xA;    # NOTE: the container ID syntax uses namespace/pod-name:container-name&#xA;    default/nginx:nginx:&#xA;      # Benchmark a container named nginx using POST HTTP verb using http://localhost:port/bozo URL and headers.&#xA;      concurrency: 1&#xA;      requests: 10000&#xA;      http:&#xA;        path: /bozo&#xA;        method: POST&#xA;        body:&#xA;          {&#34;fred&#34;:&#34;blee&#34;}&#xA;        header:&#xA;          Accept:&#xA;            - text/html&#xA;          Content-Type:&#xA;            - application/json&#xA;  services:&#xA;    # Similarly you can Benchmark an HTTP service exposed either via NodePort, LoadBalancer types.&#xA;    # Service ID is ns/svc-name&#xA;    default/nginx:&#xA;      # Set the concurrency level&#xA;      concurrency: 5&#xA;      # Number of requests to be sent&#xA;      requests: 500&#xA;      http:&#xA;        method: GET&#xA;        # This setting will depend on whether service is NodePort or LoadBalancer. NodePort may require vendor port tunneling setting.&#xA;        # Set this to a node if NodePort or LB if applicable. IP or dns name.&#xA;        host: A.B.C.D&#xA;        path: /bumblebeetuna&#xA;      auth:&#xA;        user: jean-baptiste-emmanuel&#xA;        password: Zorg!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;K9s RBAC FU&lt;/h2&gt; &#xA;&lt;p&gt;On RBAC enabled clusters, you would need to give your users/groups capabilities so that they can use K9s to explore their Kubernetes cluster. K9s needs minimally read privileges at both the cluster and namespace level to display resources and metrics.&lt;/p&gt; &#xA;&lt;p&gt;These rules below are just suggestions. You will need to customize them based on your environment policies. If you need to edit/delete resources extra Fu will be necessary.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE! Cluster/Namespace access may change in the future as K9s evolves. NOTE! We expect K9s to keep running even in atrophied clusters/namespaces. Please file issues if this is not the case!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Cluster RBAC scope&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;# K9s Reader ClusterRole&#xA;kind: ClusterRole&#xA;apiVersion: rbac.authorization.k8s.io/v1&#xA;metadata:&#xA;  name: k9s&#xA;rules:&#xA;  # Grants RO access to cluster resources node and namespace&#xA;  - apiGroups: [&#34;&#34;]&#xA;    resources: [&#34;nodes&#34;, &#34;namespaces&#34;]&#xA;    verbs: [&#34;get&#34;, &#34;list&#34;, &#34;watch&#34;]&#xA;  # Grants RO access to RBAC resources&#xA;  - apiGroups: [&#34;rbac.authorization.k8s.io&#34;]&#xA;    resources: [&#34;clusterroles&#34;, &#34;roles&#34;, &#34;clusterrolebindings&#34;, &#34;rolebindings&#34;]&#xA;    verbs: [&#34;get&#34;, &#34;list&#34;, &#34;watch&#34;]&#xA;  # Grants RO access to CRD resources&#xA;  - apiGroups: [&#34;apiextensions.k8s.io&#34;]&#xA;    resources: [&#34;customresourcedefinitions&#34;]&#xA;    verbs: [&#34;get&#34;, &#34;list&#34;, &#34;watch&#34;]&#xA;  # Grants RO access to metric server (if present)&#xA;  - apiGroups: [&#34;metrics.k8s.io&#34;]&#xA;    resources: [&#34;nodes&#34;, &#34;pods&#34;]&#xA;    verbs: [&#34;get&#34;, &#34;list&#34;, &#34;watch&#34;]&#xA;&#xA;---&#xA;# Sample K9s user ClusterRoleBinding&#xA;apiVersion: rbac.authorization.k8s.io/v1&#xA;kind: ClusterRoleBinding&#xA;metadata:&#xA;  name: k9s&#xA;subjects:&#xA;  - kind: User&#xA;    name: fernand&#xA;    apiGroup: rbac.authorization.k8s.io&#xA;roleRef:&#xA;  kind: ClusterRole&#xA;  name: k9s&#xA;  apiGroup: rbac.authorization.k8s.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Namespace RBAC scope&lt;/h3&gt; &#xA;&lt;p&gt;If your users are constrained to certain namespaces, K9s will need to following role to enable read access to namespaced resources.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;# K9s Reader Role (default namespace)&#xA;kind: Role&#xA;apiVersion: rbac.authorization.k8s.io/v1&#xA;metadata:&#xA;  name: k9s&#xA;  namespace: default&#xA;rules:&#xA;  # Grants RO access to most namespaced resources&#xA;  - apiGroups: [&#34;&#34;, &#34;apps&#34;, &#34;autoscaling&#34;, &#34;batch&#34;, &#34;extensions&#34;]&#xA;    resources: [&#34;*&#34;]&#xA;    verbs: [&#34;get&#34;, &#34;list&#34;, &#34;watch&#34;]&#xA;  # Grants RO access to metric server&#xA;  - apiGroups: [&#34;metrics.k8s.io&#34;]&#xA;    resources: [&#34;pods&#34;, &#34;nodes&#34;]&#xA;    verbs:&#xA;      - get&#xA;      - list&#xA;      - watch&#xA;&#xA;---&#xA;# Sample K9s user RoleBinding&#xA;apiVersion: rbac.authorization.k8s.io/v1&#xA;kind: RoleBinding&#xA;metadata:&#xA;  name: k9s&#xA;  namespace: default&#xA;subjects:&#xA;  - kind: User&#xA;    name: fernand&#xA;    apiGroup: rbac.authorization.k8s.io&#xA;roleRef:&#xA;  kind: Role&#xA;  name: k9s&#xA;  apiGroup: rbac.authorization.k8s.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Skins&lt;/h2&gt; &#xA;&lt;p&gt;Example: Dracula Skin ;)&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/derailed/k9s/master/assets/skins/dracula.png&#34; alt=&#34;Dracula Skin&#34;&gt; &#xA;&lt;p&gt;You can style K9s based on your own sense of look and style. Skins are YAML files, that enable a user to change the K9s presentation layer. See this repo &lt;code&gt;skins&lt;/code&gt; directory for examples. You can skin k9s by default by specifying a UI.skin attribute. You can also change K9s skins based on the context you are connecting too. In this case, you can specify a skin field on your cluster config aka &lt;code&gt;skin: dracula&lt;/code&gt; (just the name of the skin file without the extension!) and copy this repo &lt;code&gt;skins/dracula.yaml&lt;/code&gt; to &lt;code&gt;$XDG_CONFIG_HOME/k9s/skins/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;In the case where your cluster spans several contexts, you can add a skin context configuration to your context configuration. This is a collection of {context_name, skin} tuples (please see example below!)&lt;/p&gt; &#xA;&lt;p&gt;Colors can be defined by name or using a hex representation. Of recent, we&#39;ve added a color named &lt;code&gt;default&lt;/code&gt; to indicate a transparent background color to preserve your terminal background color settings if so desired.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: This is very much an experimental feature at this time, more will be added/modified if this feature has legs so thread accordingly! NOTE: Please see &lt;a href=&#34;https://k9scli.io/topics/skins/&#34;&gt;K9s Skins&lt;/a&gt; for a list of available colors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To skin a specific context and provided the file &lt;code&gt;in_the_navy.yaml&lt;/code&gt; is present in your skins directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#  $XDG_DATA_HOME/k9s/clusters/clusterX/contextY/config.yaml&#xA;k9s:&#xA;  cluster: clusterX&#xA;  skin: in_the_navy&#xA;  readOnly: false&#xA;  namespace:&#xA;    active: default&#xA;    lockFavorites: false&#xA;    favorites:&#xA;    - kube-system&#xA;    - default&#xA;  view:&#xA;    active: po&#xA;  featureGates:&#xA;    nodeShell: false&#xA;  portForwardAddress: localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify a default skin for all contexts in the root k9s config file as so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#  $XDG_CONFIG_HOME/k9s/config.yaml&#xA;k9s:&#xA;  liveViewAutoRefresh: false&#xA;  screenDumpDir: /tmp/dumps&#xA;  refreshRate: 2&#xA;  maxConnRetry: 5&#xA;  readOnly: false&#xA;  noExitOnCtrlC: false&#xA;  ui:&#xA;    enableMouse: false&#xA;    headless: false&#xA;    logoless: false&#xA;    crumbsless: false&#xA;    noIcons: false&#xA;    # Toggles reactive UI. This option provide for watching on disk artifacts changes and update the UI live  Defaults to false.&#xA;    reactive: false&#xA;    # By default all contexts will use the dracula skin unless explicitly overridden in the context config file.&#xA;    skin: dracula # =&amp;gt; assumes the file skins/dracula.yaml is present in the  $XDG_DATA_HOME/k9s/skins directory&#xA;    defaultsToFullScreen: false&#xA;  skipLatestRevCheck: false&#xA;  disablePodCounting: false&#xA;  shellPod:&#xA;    image: busybox&#xA;    namespace: default&#xA;    limits:&#xA;      cpu: 100m&#xA;      memory: 100Mi&#xA;  imageScans:&#xA;    enable: false&#xA;    exclusions:&#xA;      namespaces: []&#xA;      labels: {}&#xA;  logger:&#xA;    tail: 100&#xA;    buffer: 5000&#xA;    sinceSeconds: -1&#xA;    textWrap: false&#xA;    disableAutoscroll: false&#xA;    showTime: false&#xA;  thresholds:&#xA;    cpu:&#xA;      critical: 90&#xA;      warn: 70&#xA;    memory:&#xA;      critical: 90&#xA;      warn: 70&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# $XDG_DATA_HOME/k9s/skins/in_the_navy.yaml&#xA;# Skin InTheNavy!&#xA;k9s:&#xA;  # General K9s styles&#xA;  body:&#xA;    fgColor: dodgerblue&#xA;    bgColor: &#39;#ffffff&#39;&#xA;    logoColor: &#39;#0000ff&#39;&#xA;  # ClusterInfoView styles.&#xA;  info:&#xA;    fgColor: lightskyblue&#xA;    sectionColor: steelblue&#xA;  # Help panel styles&#xA;  help:&#xA;    fgColor: white&#xA;    bgColor: black&#xA;    keyColor: cyan&#xA;    numKeyColor: blue&#xA;    sectionColor: gray&#xA;  frame:&#xA;    # Borders styles.&#xA;    border:&#xA;      fgColor: dodgerblue&#xA;      focusColor: aliceblue&#xA;    # MenuView attributes and styles.&#xA;    menu:&#xA;      fgColor: darkblue&#xA;      # Style of menu text. Supported options are &#34;dim&#34; (default), &#34;normal&#34;, and &#34;bold&#34;&#xA;      fgStyle: dim&#xA;      keyColor: cornflowerblue&#xA;      # Used for favorite namespaces&#xA;      numKeyColor: cadetblue&#xA;    # CrumbView attributes for history navigation.&#xA;    crumbs:&#xA;      fgColor: white&#xA;      bgColor: steelblue&#xA;      activeColor: skyblue&#xA;    # Resource status and update styles&#xA;    status:&#xA;      newColor: &#39;#00ff00&#39;&#xA;      modifyColor: powderblue&#xA;      addColor: lightskyblue&#xA;      errorColor: indianred&#xA;      highlightcolor: royalblue&#xA;      killColor: slategray&#xA;      completedColor: gray&#xA;    # Border title styles.&#xA;    title:&#xA;      fgColor: aqua&#xA;      bgColor: white&#xA;      highlightColor: skyblue&#xA;      counterColor: slateblue&#xA;      filterColor: slategray&#xA;  views:&#xA;    # TableView attributes.&#xA;    table:&#xA;      fgColor: blue&#xA;      bgColor: darkblue&#xA;      cursorColor: aqua&#xA;      # Header row styles.&#xA;      header:&#xA;        fgColor: white&#xA;        bgColor: darkblue&#xA;        sorterColor: orange&#xA;    # YAML info styles.&#xA;    yaml:&#xA;      keyColor: steelblue&#xA;      colonColor: blue&#xA;      valueColor: royalblue&#xA;    # Logs styles.&#xA;    logs:&#xA;      fgColor: lightskyblue&#xA;      bgColor: black&#xA;      indicator:&#xA;        fgColor: dodgerblue&#xA;        bgColor: black&#xA;        toggleOnColor: limegreen&#xA;        toggleOffColor: gray&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Without the contributions from these fine folks, this project would be a total dud!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/derailed/k9s/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=derailed/k9s&#34;&gt; &lt;/a&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;This is still work in progress! If something is broken or there&#39;s a feature that you want, please file an issue and if so inclined submit a PR!&lt;/p&gt; &#xA;&lt;p&gt;K9s will most likely blow up if...&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You&#39;re running older versions of Kubernetes. K9s works best on later Kubernetes versions.&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t have enough RBAC fu to manage your cluster.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;ATTA Girls/Boys!&lt;/h2&gt; &#xA;&lt;p&gt;K9s sits on top of many open source projects and libraries. Our &lt;em&gt;sincere&lt;/em&gt; appreciations to all the OSS contributors that work nights and weekends to make this project a reality!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Meet The Core Team!&lt;/h2&gt; &#xA;&lt;p&gt;If you have chops in GO and K8s and would like to offer your time to help maintain and enhance this project, please reach out to me.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/derailed&#34;&gt;Fernand Galiana&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/derailed/k9s/master/assets/mail.png&#34; width=&#34;16&#34; height=&#34;auto&#34; alt=&#34;email&#34;&gt; &lt;a href=&#34;mailto:fernand@imhotep.io&#34;&gt;fernand@imhotep.io&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/derailed/k9s/master/assets/twitter.png&#34; width=&#34;16&#34; height=&#34;auto&#34; alt=&#34;twitter&#34;&gt; &lt;a href=&#34;https://twitter.com/kitesurfer?lang=en&#34;&gt;@kitesurfer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We always enjoy hearing from folks who benefit from our work!&lt;/p&gt; &#xA;&lt;h2&gt;Contributions Guideline&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File an issue first prior to submitting a PR!&lt;/li&gt; &#xA; &lt;li&gt;Ensure all exported items are properly commented&lt;/li&gt; &#xA; &lt;li&gt;If applicable, submit a test suite against your PR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/derailed/k9s/master/assets/imhotep_logo.png&#34; width=&#34;32&#34; height=&#34;auto&#34; alt=&#34;Imhotep&#34;&gt; &amp;nbsp;¬© 2023 Imhotep Software LLC. All materials licensed under &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache v2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>docker/cli</title>
    <updated>2025-02-23T01:42:11Z</updated>
    <id>tag:github.com,2025-02-23:/docker/cli</id>
    <link href="https://github.com/docker/cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Docker CLI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker CLI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/docker/cli&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/docker/cli&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/docker/cli/actions?query=workflow%3Abuild&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/docker/cli/build.yml?branch=master&amp;amp;label=build&amp;amp;logo=github&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/docker/cli/actions?query=workflow%3Atest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/docker/cli/test.yml?branch=master&amp;amp;label=test&amp;amp;logo=github&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/docker/cli&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/docker/cli&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scorecard.dev/viewer/?uri=github.com/docker/cli&#34;&gt;&lt;img src=&#34;https://api.scorecard.dev/projects/github.com/docker/cli/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/docker/cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/docker/cli?logo=codecov&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This repository is the home of the Docker CLI.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;docker/cli&lt;/code&gt; is developed using Docker.&lt;/p&gt; &#xA;&lt;p&gt;Build CLI from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker buildx bake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build binaries for all supported platforms:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker buildx bake cross&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build for a specific platform:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker buildx bake --set binary.platform=linux/arm64 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build dynamic binary for glibc or musl:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;USE_GLIBC=1 docker buildx bake dynbinary &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all linting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker buildx bake lint shellcheck&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker buildx bake test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;List all the available targets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;In-container development environment&lt;/h3&gt; &#xA;&lt;p&gt;Start an interactive development environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make -f docker.Makefile shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Legal&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Brought to you courtesy of our legal counsel. For more context, see the &lt;a href=&#34;https://github.com/docker/cli/raw/master/NOTICE&#34;&gt;NOTICE&lt;/a&gt; document in this repo.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use and transfer of Docker may be subject to certain restrictions by the United States and other governments.&lt;/p&gt; &#xA;&lt;p&gt;It is your responsibility to ensure that your use and/or transfer does not violate applicable laws.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://www.bis.doc.gov&#34;&gt;https://www.bis.doc.gov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;docker/cli is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://github.com/docker/docker/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubernetes-sigs/kind</title>
    <updated>2025-02-23T01:42:11Z</updated>
    <id>tag:github.com,2025-02-23:/kubernetes-sigs/kind</id>
    <link href="https://github.com/kubernetes-sigs/kind" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kubernetes IN Docker - local clusters for testing Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img alt=&#34;kind&#34; src=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/logo/logo.png&#34; width=&#34;300px&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Please see &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/&#34;&gt;Our Documentation&lt;/a&gt; for more in-depth installation etc.&lt;/h1&gt; &#xA;&lt;p&gt;kind is a tool for running local Kubernetes clusters using Docker container &#34;nodes&#34;. kind was primarily designed for testing Kubernetes itself, but may be used for local development or CI.&lt;/p&gt; &#xA;&lt;p&gt;If you have &lt;a href=&#34;https://golang.org/&#34;&gt;go&lt;/a&gt; 1.16+ and &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt;, &lt;a href=&#34;https://podman.io/&#34;&gt;podman&lt;/a&gt; or &lt;a href=&#34;https://github.com/containerd/nerdctl&#34;&gt;nerdctl&lt;/a&gt; installed &lt;code&gt;go install sigs.k8s.io/kind@v0.27.0 &amp;amp;&amp;amp; kind create cluster&lt;/code&gt; is all you need!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/site/static/images/kind-create-cluster.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;kind consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/pkg&#34;&gt;packages&lt;/a&gt; implementing &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/pkg/cluster&#34;&gt;cluster creation&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/pkg/build&#34;&gt;image build&lt;/a&gt;, etc.&lt;/li&gt; &#xA; &lt;li&gt;A command line interface (&lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/main.go&#34;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;) built on these packages.&lt;/li&gt; &#xA; &lt;li&gt;Docker &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/images&#34;&gt;image(s)&lt;/a&gt; written to run systemd, Kubernetes, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/kubetest&#34;&gt;&lt;code&gt;kubetest&lt;/code&gt;&lt;/a&gt; integration also built on these packages (WIP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;kind bootstraps each &#34;node&#34; with &lt;a href=&#34;https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm/&#34;&gt;kubeadm&lt;/a&gt;. For more details see &lt;a href=&#34;https://kind.sigs.k8s.io/docs/design/initial&#34;&gt;the design documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: kind is still a work in progress, see the &lt;a href=&#34;https://kind.sigs.k8s.io/docs/contributing/1.0-roadmap&#34;&gt;1.0 roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and usage&lt;/h2&gt; &#xA;&lt;p&gt;For a complete &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/#installation&#34;&gt;install guide&lt;/a&gt; see &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/#installation&#34;&gt;the documentation here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can install kind with &lt;code&gt;go install sigs.k8s.io/kind@v0.27.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: please use the latest go to do this. KIND is developed with the latest stable go, see &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/.go-version&#34;&gt;&lt;code&gt;.go-version&lt;/code&gt;&lt;/a&gt; for the exact version we&#39;re using.&lt;/p&gt; &#xA;&lt;p&gt;This will put &lt;code&gt;kind&lt;/code&gt; in &lt;code&gt;$(go env GOPATH)/bin&lt;/code&gt;. If you encounter the error &lt;code&gt;kind: command not found&lt;/code&gt; after installation then you may need to either add that directory to your &lt;code&gt;$PATH&lt;/code&gt; as shown &lt;a href=&#34;https://golang.org/doc/code.html#GOPATH&#34;&gt;here&lt;/a&gt; or do a manual installation by cloning the repo and run &lt;code&gt;make build&lt;/code&gt; from the repository.&lt;/p&gt; &#xA;&lt;p&gt;Without installing go, kind can be built reproducibly with docker using &lt;code&gt;make build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Stable binaries are also available on the &lt;a href=&#34;https://github.com/kubernetes-sigs/kind/releases&#34;&gt;releases&lt;/a&gt; page. Stable releases are generally recommended for CI usage in particular. To install, download the binary for your platform from &#34;Assets&#34; and place this into your &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;On Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# For AMD64 / x86_64&#xA;[ $(uname -m) = x86_64 ] &amp;amp;&amp;amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.27.0/kind-$(uname)-amd64&#xA;# For ARM64&#xA;[ $(uname -m) = aarch64 ] &amp;amp;&amp;amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.27.0/kind-$(uname)-arm64&#xA;chmod +x ./kind&#xA;sudo mv ./kind /usr/local/bin/kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS via Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS via MacPorts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo port selfupdate &amp;amp;&amp;amp; sudo port install kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS via Bash:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# For Intel Macs&#xA;[ $(uname -m) = x86_64 ] &amp;amp;&amp;amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.27.0/kind-darwin-amd64&#xA;# For M1 / ARM Macs&#xA;[ $(uname -m) = arm64 ] &amp;amp;&amp;amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.27.0/kind-darwin-arm64&#xA;chmod +x ./kind&#xA;mv ./kind /some-dir-in-your-PATH/kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;curl.exe -Lo kind-windows-amd64.exe https://kind.sigs.k8s.io/dl/v0.27.0/kind-windows-amd64&#xA;Move-Item .\kind-windows-amd64.exe c:\some-dir-in-your-PATH\kind.exe&#xA;&#xA;# OR via Chocolatey (https://chocolatey.org/packages/kind)&#xA;choco install kind&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use kind, you will need to &lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;install docker&lt;/a&gt;. Once you have docker running you can create a cluster with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kind create cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To delete your cluster use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kind delete cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--TODO(bentheelder): improve this part of the guide--&gt; &#xA;&lt;p&gt;To create a cluster from Kubernetes source:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ensure that Kubernetes is cloned in &lt;code&gt;$(go env GOPATH)/src/k8s.io/kubernetes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;build a node image and create a cluster with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kind build node-image&#xA;kind create cluster --image kindest/node:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multi-node clusters and other advanced features may be configured with a config file, for more usage see &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start&#34;&gt;the docs&lt;/a&gt; or run &lt;code&gt;kind [command] --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Please reach out for bugs, feature requests, and other issues! The maintainers of this project are reachable via:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.k8s.io/&#34;&gt;Kubernetes Slack&lt;/a&gt; in the &lt;a href=&#34;https://kubernetes.slack.com/messages/CEKK1KTN2/&#34;&gt;#kind&lt;/a&gt; channel&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/kind/issues/new&#34;&gt;filing an issue&lt;/a&gt; against this repo&lt;/li&gt; &#xA; &lt;li&gt;The Kubernetes &lt;a href=&#34;https://groups.google.com/forum/#!forum/kubernetes-sig-testing&#34;&gt;SIG-Testing Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Current maintainers are &lt;a href=&#34;https://github.com/aojea&#34;&gt;@aojea&lt;/a&gt; and &lt;a href=&#34;https://github.com/BenTheElder&#34;&gt;@BenTheElder&lt;/a&gt; - feel free to reach out if you have any questions!&lt;/p&gt; &#xA;&lt;p&gt;Pull Requests are very welcome! If you&#39;re planning a new feature, please file an issue to discuss first.&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/kubernetes-sigs/kind/issues&#34;&gt;issue tracker&lt;/a&gt; for &lt;code&gt;help wanted&lt;/code&gt; issues if you&#39;re unsure where to start, or feel free to reach out to discuss. üôÇ&lt;/p&gt; &#xA;&lt;p&gt;See also: our own &lt;a href=&#34;https://kind.sigs.k8s.io/docs/contributing/getting-started&#34;&gt;contributor guide&lt;/a&gt; and the Kubernetes &lt;a href=&#34;https://kubernetes.io/community/&#34;&gt;community page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why kind?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;kind supports multi-node (including HA) clusters&lt;/li&gt; &#xA; &lt;li&gt;kind supports building Kubernetes release builds from source &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;support for make / bash or docker, in addition to pre-published builds&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;kind supports Linux, macOS and Windows&lt;/li&gt; &#xA; &lt;li&gt;kind is a &lt;a href=&#34;https://landscape.cncf.io/?selected=kind&#34;&gt;CNCF certified conformant Kubernetes installer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code of conduct&lt;/h3&gt; &#xA;&lt;p&gt;Participation in the Kubernetes community is governed by the &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/kind/main/code-of-conduct.md&#34;&gt;Kubernetes Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--links--&gt;</summary>
  </entry>
</feed>