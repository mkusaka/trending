<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-12T01:52:06Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ServiceWeaver/weaver</title>
    <updated>2023-03-12T01:52:06Z</updated>
    <id>tag:github.com,2023-03-12:/ServiceWeaver/weaver</id>
    <link href="https://github.com/ServiceWeaver/weaver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Programming framework for writing and deploying cloud applications.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/ServiceWeaver/weaver&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/ServiceWeaver/weaver.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Service Weaver&lt;/h1&gt; &#xA;&lt;p&gt;Service Weaver is a programming framework for writing, deploying, and managing distributed applications. You can run, test, and debug a Service Weaver application locally on your machine, and then deploy it to the cloud with a single command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run .                      # Run locally.&#xA;$ weaver gke deploy weaver.toml # Run in the cloud.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://serviceweaver.dev&#34;&gt;https://serviceweaver.dev&lt;/a&gt; to learn more about Service Weaver.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://serviceweaver.dev/docs.html&#34;&gt;https://serviceweaver.dev/docs.html&lt;/a&gt; for installation instructions and information on getting started.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/ServiceWeaver/weaver/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; for details on how to contribute.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SpenserCai/GoWxDump</title>
    <updated>2023-03-12T01:52:06Z</updated>
    <id>tag:github.com,2023-03-12:/SpenserCai/GoWxDump</id>
    <link href="https://github.com/SpenserCai/GoWxDump" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SharpWxDump的Go语言版。微信客户端取证，获取信息(微信号、手机号、昵称)，微信聊天记录分析(Top N聊天的人、统计聊天最频繁的好友排行、关键词列表搜索等)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoWxDump&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FSpenserCai%2FGoWxDump?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FSpenserCai%2FGoWxDump.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/KCftHHM2xk&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1082909442481344572/widget.png?style=shield&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特别说明&lt;/h2&gt; &#xA;&lt;p&gt;GoWxDump是&lt;a href=&#34;https://github.com/AdminTest0/SharpWxDump&#34;&gt;SharpWxDump&lt;/a&gt;的Go语言版本。 同时添加了一些新的功能。&lt;/p&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;h3&gt;1.下载&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/SpenserCai/GoWxDump.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.编译&lt;/h3&gt; &#xA;&lt;p&gt;需要安装mingw-w32&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;build.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.使用&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;GoWxDump.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GoWxDump原创功能&lt;/h2&gt; &#xA;&lt;h3&gt;1.支持获取数据目录&lt;/h3&gt; &#xA;&lt;h3&gt;2.支持自动解密&lt;/h3&gt; &#xA;&lt;p&gt;由AdminTest0发布的&lt;a href=&#34;https://mp.weixin.qq.com/s/4DbXOS5jDjJzM2PN0Mp2JA&#34;&gt;解密脚本&lt;/a&gt;翻译成Go语言而来，支持自动解密。&lt;/p&gt; &#xA;&lt;h3&gt;3.支持交互式命令&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;show_info 获取微信基础信息&#xA;decrypt 解密数据&#xA;friends_list 获取好友列表 （目前支持：获取最近十个聊天的好友信息，需要解密后才能获取）&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4.非交互式命令&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GoWxDump.exe -spy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;本项目仅允许在授权情况下对数据库进行备份，严禁用于非法目的，否则自行承担所有相关责任。使用该工具则代表默认同意该条款;&lt;/p&gt; &#xA;&lt;p&gt;请勿利用本项目的相关技术从事非法测试，如因此产生的一切不良后果与项目作者无关。&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FSpenserCai%2FGoWxDump?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FSpenserCai%2FGoWxDump.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xinliangnote/go-gin-api</title>
    <updated>2023-03-12T01:52:06Z</updated>
    <id>tag:github.com,2023-03-12:/xinliangnote/go-gin-api</id>
    <link href="https://github.com/xinliangnote/go-gin-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于 Gin 进行模块化设计的 API 框架，封装了常用功能，使用简单，致力于进行快速的业务研发。比如，支持 cors 跨域、jwt 签名验证、zap 日志收集、panic 异常捕获、trace 链路追踪、prometheus 监控指标、swagger 文档生成、viper 配置文件解析、gorm 数据库组件、gormgen 代码生成工具、graphql 查询语言、errno 统一定义错误码、gRPC 的使用、cron 定时任务 等等。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;关于&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;go-gin-api&lt;/code&gt;&amp;nbsp;是基于&amp;nbsp;&lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;Gin&lt;/a&gt; 进行模块化设计的 API 框架，封装了常用的功能，使用简单，致力于进行快速的业务研发，同时增加了更多限制，约束项目组开发成员，规避混乱无序及自由随意的编码。&lt;/p&gt; &#xA;&lt;p&gt;供参考学习，线上使用请谨慎！&lt;/p&gt; &#xA;&lt;p&gt;集成组件：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://golang.org/x/time/rate&#34;&gt;rate&lt;/a&gt; 接口限流&lt;/li&gt; &#xA; &lt;li&gt;支持 panic 异常时邮件通知&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/rs/cors&#34;&gt;cors&lt;/a&gt; 接口跨域&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/prometheus/client_golang&#34;&gt;Prometheus&lt;/a&gt; 指标记录&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/swaggo/gin-swagger&#34;&gt;Swagger&lt;/a&gt; 接口文档生成&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/99designs/gqlgen&#34;&gt;GraphQL&lt;/a&gt; 查询语言&lt;/li&gt; &#xA; &lt;li&gt;支持 trace 项目内部链路追踪&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/gin-contrib/pprof&#34;&gt;pprof&lt;/a&gt; 性能剖析&lt;/li&gt; &#xA; &lt;li&gt;支持 errno 统一定义错误码&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://go.uber.org/zap&#34;&gt;zap&lt;/a&gt; 日志收集&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;viper&lt;/a&gt; 配置文件解析&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://gorm.io/gorm&#34;&gt;gorm&lt;/a&gt; 数据库组件&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/go-redis/redis/v7&#34;&gt;go-redis&lt;/a&gt; 组件&lt;/li&gt; &#xA; &lt;li&gt;支持 RESTful API 返回值规范&lt;/li&gt; &#xA; &lt;li&gt;支持 生成数据表 CURD、控制器方法 等代码生成器&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/jakecoffman/cron&#34;&gt;cron&lt;/a&gt; 定时任务，在后台可界面配置&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/gorilla/websocket&#34;&gt;websocket&lt;/a&gt; 实时通讯，在后台有界面演示&lt;/li&gt; &#xA; &lt;li&gt;支持 web 界面，使用的 &lt;a href=&#34;https://gitee.com/yinqi/Light-Year-Admin-Using-Iframe&#34;&gt;Light Year Admin 模板&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;文档索引&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;中文文档：&lt;a href=&#34;https://www.yuque.com/xinliangnote/go-gin-api/ngc3x5&#34;&gt;go-gin-api - 语雀&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;English Document：&lt;a href=&#34;https://github.com/xinliangnote/go-gin-api/raw/master/en.md&#34;&gt;en.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他&lt;/h2&gt; &#xA;&lt;p&gt;查看 Jaeger 链路追踪 Demo 代码，请查看 &lt;a href=&#34;https://github.com/xinliangnote/go-gin-api/releases/tag/v1.0&#34;&gt;v1.0 版&lt;/a&gt; ，链接地址：&lt;a href=&#34;http://127.0.0.1:9999/jaeger_test&#34;&gt;http://127.0.0.1:9999/jaeger_test&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;调用的其他服务端 Demo 代码为 &lt;a href=&#34;https://github.com/xinliangnote/go-jaeger-demo&#34;&gt;https://github.com/xinliangnote/go-jaeger-demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;联系作者&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/07/02/cwiLQ13CRgJIS86.jpg&#34; alt=&#34;联系作者&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>