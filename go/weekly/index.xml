<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-02T01:56:02Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BishopFox/sliver</title>
    <updated>2023-07-02T01:56:02Z</updated>
    <id>tag:github.com,2023-07-02:/BishopFox/sliver</id>
    <link href="https://github.com/BishopFox/sliver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Adversary Emulation Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sliver&lt;/h1&gt; &#xA;&lt;p&gt;Sliver is an open source cross-platform adversary emulation/red team framework, it can be used by organizations of all sizes to perform security testing. Sliver&#39;s implants support C2 over Mutual TLS (mTLS), WireGuard, HTTP(S), and DNS and are dynamically compiled with per-binary asymmetric encryption keys.&lt;/p&gt; &#xA;&lt;p&gt;The server and client support MacOS, Windows, and Linux. Implants are supported on MacOS, Windows, and Linux (and possibly every Golang compiler target but we&#39;ve not tested them all).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/BishopFox/sliver/actions/workflows/autorelease.yml&#34;&gt;&lt;img src=&#34;https://github.com/BishopFox/sliver/actions/workflows/autorelease.yml/badge.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/BishopFox/sliver&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/BishopFox/sliver&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;v1.6.0 / &lt;code&gt;master&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You are looking the latest master branch of Sliver v1.6.0; PRs should target this branch starting on 6/1/2023 (&#39;MURICA format). However, this branch is NOT RECOMMENDED for production use yet. Please use release tagged versions for the best experience.&lt;/p&gt; &#xA;&lt;p&gt;For PRs containing bug fixes specific to Sliver v1.5, please target the &lt;a href=&#34;https://github.com/BishopFox/sliver/tree/v1.5.x/master&#34;&gt;&lt;code&gt;v1.5.x/master&lt;/code&gt; branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic code generation&lt;/li&gt; &#xA; &lt;li&gt;Compile-time obfuscation&lt;/li&gt; &#xA; &lt;li&gt;Multiplayer-mode&lt;/li&gt; &#xA; &lt;li&gt;Staged and Stageless payloads&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/HTTP(S)-C2#under-the-hood&#34;&gt;Procedurally generated C2&lt;/a&gt; over HTTP(S)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/DNS-C2#dns-canaries&#34;&gt;DNS canary&lt;/a&gt; blue team detection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/Transport-Encryption&#34;&gt;Secure C2&lt;/a&gt; over mTLS, WireGuard, HTTP(S), and DNS&lt;/li&gt; &#xA; &lt;li&gt;Fully scriptable using &lt;a href=&#34;https://github.com/moloch--/sliver-script&#34;&gt;JavaScript/TypeScript&lt;/a&gt; or &lt;a href=&#34;https://github.com/moloch--/sliver-py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows process migration, process injection, user token manipulation, etc.&lt;/li&gt; &#xA; &lt;li&gt;Let&#39;s Encrypt integration&lt;/li&gt; &#xA; &lt;li&gt;In-memory .NET assembly execution&lt;/li&gt; &#xA; &lt;li&gt;COFF/BOF in-memory loader&lt;/li&gt; &#xA; &lt;li&gt;TCP and named pipe pivots&lt;/li&gt; &#xA; &lt;li&gt;Much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest &lt;a href=&#34;https://github.com/BishopFox/sliver/releases&#34;&gt;release&lt;/a&gt; and see the Sliver &lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/Getting-Started&#34;&gt;wiki&lt;/a&gt; for a quick tutorial on basic setup and usage. To get the very latest and greatest compile from source.&lt;/p&gt; &#xA;&lt;h4&gt;Linux One Liner&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;curl https://sliver.sh/install|sudo bash&lt;/code&gt; and then run &lt;code&gt;sliver&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Help!&lt;/h3&gt; &#xA;&lt;p&gt;Please checkout the &lt;a href=&#34;https://github.com/BishopFox/sliver/wiki&#34;&gt;wiki&lt;/a&gt;, or start a &lt;a href=&#34;https://github.com/BishopFox/sliver/discussions&#34;&gt;GitHub discussion&lt;/a&gt;. We also tend to hang out in the #golang Slack channel on the &lt;a href=&#34;https://bloodhoundgang.herokuapp.com/&#34;&gt;Bloodhound Gang&lt;/a&gt; server.&lt;/p&gt; &#xA;&lt;h3&gt;Compile From Source&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/BishopFox/sliver/wiki/Compile-From-Source&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Feedback&lt;/h3&gt; &#xA;&lt;p&gt;Please take a moment and fill out &lt;a href=&#34;https://forms.gle/SwVsHFNh24ChG58C6&#34;&gt;our survey&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License - GPLv3&lt;/h3&gt; &#xA;&lt;p&gt;Sliver is licensed under &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;GPLv3&lt;/a&gt;, some sub-components may have separate licenses. See their respective subdirectories in this project for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/google-ctf</title>
    <updated>2023-07-02T01:56:02Z</updated>
    <id>tag:github.com,2023-07-02:/google/google-ctf</id>
    <link href="https://github.com/google/google-ctf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Google CTF&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google CTF&lt;/h1&gt; &#xA;&lt;p&gt;This repository lists most of the challenges used in the Google CTF since 2017, as well as most of the infrastructure that can be used to run them. &lt;strong&gt;IMPORTANT&lt;/strong&gt; - The code in the 201x and 202x folders have unfixed security vulnerabilities. These are there on purpose, and running these on real production infrastructure is not safe.&lt;/p&gt; &#xA;&lt;p&gt;Read more about the Google CTF here: &lt;a href=&#34;https://security.googleblog.com/2017/06/announcing-google-capture-flag-2017.html&#34;&gt;https://security.googleblog.com/2017/06/announcing-google-capture-flag-2017.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note this is not an official Google product.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>axllent/mailpit</title>
    <updated>2023-07-02T01:56:02Z</updated>
    <id>tag:github.com,2023-07-02:/axllent/mailpit</id>
    <link href="https://github.com/axllent/mailpit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An email and SMTP testing tool with API for developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mailpit - email testing for developers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/axllent/mailpit/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt; &lt;img src=&#34;https://github.com/axllent/mailpit/actions/workflows/release-build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt; &lt;img src=&#34;https://github.com/axllent/mailpit/actions/workflows/build-docker.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker builds&#34;&gt; &lt;img src=&#34;https://github.com/axllent/mailpit/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/axllent/mailpit&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/axllent/mailpit&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mailpit is a multi-platform email testing tool &amp;amp; API for developers.&lt;/p&gt; &#xA;&lt;p&gt;It acts as both an SMTP server, and provides a web interface to view all captured emails. It also contains an API for automated integration testing.&lt;/p&gt; &#xA;&lt;p&gt;Mailpit is inspired by &lt;a href=&#34;https://raw.githubusercontent.com/axllent/mailpit/develop/#why-rewrite-mailhog&#34;&gt;MailHog&lt;/a&gt;, but modern and much, much faster.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/axllent/mailpit/develop/docs/screenshot.png&#34; alt=&#34;Mailpit&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Runs entirely from a single binary, no installation required&lt;/li&gt; &#xA; &lt;li&gt;SMTP server (default &lt;code&gt;0.0.0.0:1025&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web UI to view emails (formatted HTML, highlighted HTML source, text, headers, raw source and MIME attachments including image thumbnails)&lt;/li&gt; &#xA; &lt;li&gt;Light &amp;amp; dark web UI theme with auto-detect&lt;/li&gt; &#xA; &lt;li&gt;Mobile and tablet HTML preview toggle in desktop mode&lt;/li&gt; &#xA; &lt;li&gt;Advanced mail search (&lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Mail-search&#34;&gt;see wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Message tagging (&lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Tagging&#34;&gt;see wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Real-time web UI updates using web sockets for new mail&lt;/li&gt; &#xA; &lt;li&gt;Optional browser notifications for new mail (HTTPS and &lt;code&gt;localhost&lt;/code&gt; only)&lt;/li&gt; &#xA; &lt;li&gt;Configurable automatic email pruning (default keeps the most recent 500 emails)&lt;/li&gt; &#xA; &lt;li&gt;Email storage either in a temporary or persistent database (&lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Email-storage&#34;&gt;see wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Fast SMTP processing &amp;amp; storing - approximately 70-100 emails per second depending on CPU, network speed &amp;amp; email size, easily handling tens of thousands of emails&lt;/li&gt; &#xA; &lt;li&gt;SMTP relaying / message release - relay messages via a different SMTP server including an optional allowlist of accepted recipients (&lt;a href=&#34;https://github.com/axllent/mailpit/wiki/SMTP-relay&#34;&gt;see wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Optional SMTP with STARTTLS &amp;amp; SMTP authentication, including an &#34;accept anything&#34; mode (&lt;a href=&#34;https://github.com/axllent/mailpit/wiki/SMTP-with-STARTTLS-and-authentication&#34;&gt;see wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Optional HTTPS for web UI (&lt;a href=&#34;https://github.com/axllent/mailpit/wiki/HTTPS&#34;&gt;see wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Optional basic authentication for web UI (&lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Basic-authentication&#34;&gt;see wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;A simple REST API (&lt;a href=&#34;https://raw.githubusercontent.com/axllent/mailpit/develop/docs/apiv1/README.md&#34;&gt;see docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Multi-architecture &lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Docker-images&#34;&gt;Docker images&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The Mailpit web UI listens by default on &lt;code&gt;http://0.0.0.0:8025&lt;/code&gt;, and the SMTP port on &lt;code&gt;0.0.0.0:1025&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mailpit runs as a single binary and can be installed in different ways:&lt;/p&gt; &#xA;&lt;h3&gt;Install via Brew (Mac)&lt;/h3&gt; &#xA;&lt;p&gt;Add the repository to your taps with &lt;code&gt;brew tap axllent/apps&lt;/code&gt;, and then install Mailpit with &lt;code&gt;brew install mailpit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install via bash script (Linux &amp;amp; Mac)&lt;/h3&gt; &#xA;&lt;p&gt;Linux &amp;amp; Mac users can install it directly to &lt;code&gt;/usr/local/bin/mailpit&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bash &amp;lt; &amp;lt;(curl -sL https://raw.githubusercontent.com/axllent/mailpit/develop/install.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download static binary (Windows, Linux and Mac)&lt;/h3&gt; &#xA;&lt;p&gt;Static binaries can always be found on the &lt;a href=&#34;https://github.com/axllent/mailpit/releases/latest&#34;&gt;releases&lt;/a&gt;. The &lt;code&gt;mailpit&lt;/code&gt; binary can extracted and copied to your &lt;code&gt;$PATH&lt;/code&gt;, or simply run as &lt;code&gt;./mailpit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Docker-images&#34;&gt;Docker instructions&lt;/a&gt; for 386, amd64 &amp;amp; arm64 images.&lt;/p&gt; &#xA;&lt;h3&gt;Compile from source&lt;/h3&gt; &#xA;&lt;p&gt;To build Mailpit from source see &lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Building-from-source&#34;&gt;building from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Testing Mailpit&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Testing-Mailpit&#34;&gt;the documentation&lt;/a&gt; of how to easily test email delivery to Mailpit.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring sendmail&lt;/h3&gt; &#xA;&lt;p&gt;Mailpit&#39;s SMTP server (by default on port 1025), so you will likely need to configure your sending application to deliver mail via that port. A common MTA (Mail Transfer Agent) that delivers system emails to a SMTP server is &lt;code&gt;sendmail&lt;/code&gt;, used by many applications including PHP. Mailpit can also act as substitute for sendmail. For instructions of how to set this up, please refer to the &lt;a href=&#34;https://github.com/axllent/mailpit/wiki/Configuring-sendmail&#34;&gt;sendmail documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why rewrite MailHog?&lt;/h2&gt; &#xA;&lt;p&gt;I had been using MailHog for a few years to intercept and test emails, but experienced a number of severe performance issues. Many of the frontend and Go libraries are very out of date, and the project &lt;a href=&#34;https://github.com/mailhog/MailHog/issues/442#issuecomment-1493415258&#34;&gt;is no longer maintained&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Initially I tried to upgrade a fork of MailHog (the UI, the HTTP server and the API), but discovered that it is (with all due respect to its authors) far too complex. I found it over-engineered (split over 9 separate projects), and performs very poorly when dealing with large amounts of emails or emails with attachments (a single email with a 3MB attachment can take over a minute to ingest). Finally the API transmits a lot of duplicate &amp;amp; irrelevant data on every browser request, all without any HTTP compression.&lt;/p&gt; &#xA;&lt;p&gt;In order to improve it I felt it needed to be completely rewritten, and so Mailpit was born.&lt;/p&gt;</summary>
  </entry>
</feed>