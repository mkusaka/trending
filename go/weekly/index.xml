<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T02:11:14Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>restic/restic</title>
    <updated>2022-08-14T02:11:14Z</updated>
    <id>tag:github.com,2022-08-14:/restic/restic</id>
    <link href="https://github.com/restic/restic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, secure, efficient backup program&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/restic/badge/?version=latest&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/restic/restic/actions?query=workflow%3Atest&#34;&gt;&lt;img src=&#34;https://github.com/restic/restic/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/restic/restic&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/restic/restic&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;restic is a backup program that is fast, efficient and secure. It supports the three major operating systems (Linux, macOS, Windows) and a few smaller ones (FreeBSD, OpenBSD).&lt;/p&gt; &#xA;&lt;p&gt;For detailed usage and installation instructions check out the &lt;a href=&#34;https://restic.readthedocs.io/en/latest&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can ask questions in our &lt;a href=&#34;https://forum.restic.net&#34;&gt;Discourse forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve &lt;a href=&#34;https://restic.readthedocs.io/en/latest/020_installation.html&#34;&gt;installed&lt;/a&gt; restic, start off with creating a repository for your backups:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ restic init --repo /tmp/backup&#xA;enter password for new backend:&#xA;enter password again:&#xA;created restic backend 085b3c76b9 at /tmp/backup&#xA;Please note that knowledge of your password is required to access the repository.&#xA;Losing your password means that your data is irrecoverably lost.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and add some data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ restic --repo /tmp/backup backup ~/work&#xA;enter password for repository:&#xA;scan [/home/user/work]&#xA;scanned 764 directories, 1816 files in 0:00&#xA;[0:29] 100.00%  54.732 MiB/s  1.582 GiB / 1.582 GiB  2580 / 2580 items  0 errors  ETA 0:00&#xA;duration: 0:29, 54.47MiB/s&#xA;snapshot 40dc1520 saved&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next you can either use &lt;code&gt;restic restore&lt;/code&gt; to restore files or use &lt;code&gt;restic mount&lt;/code&gt; to mount the repository via fuse and browse the files from previous snapshots.&lt;/p&gt; &#xA;&lt;p&gt;For more options check out the &lt;a href=&#34;https://restic.readthedocs.io/en/latest/&#34;&gt;online documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Backends&lt;/h1&gt; &#xA;&lt;p&gt;Saving a backup on the same machine is nice but not a real backup strategy. Therefore, restic supports the following backends for storing backups natively:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#local&#34;&gt;Local directory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#sftp&#34;&gt;sftp server (via SSH)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#rest-server&#34;&gt;HTTP REST server&lt;/a&gt; (&lt;a href=&#34;https://restic.readthedocs.io/en/latest/100_references.html#rest-backend&#34;&gt;protocol&lt;/a&gt;, &lt;a href=&#34;https://github.com/restic/rest-server&#34;&gt;rest-server&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#amazon-s3&#34;&gt;Amazon S3&lt;/a&gt; (either from Amazon or using the &lt;a href=&#34;https://minio.io&#34;&gt;Minio&lt;/a&gt; server)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#openstack-swift&#34;&gt;OpenStack Swift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#backblaze-b2&#34;&gt;BackBlaze B2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#microsoft-azure-blob-storage&#34;&gt;Microsoft Azure Blob Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#google-cloud-storage&#34;&gt;Google Cloud Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;And many other services via the &lt;a href=&#34;https://rclone.org&#34;&gt;rclone&lt;/a&gt; &lt;a href=&#34;https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#other-services-via-rclone&#34;&gt;Backend&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Design Principles&lt;/h1&gt; &#xA;&lt;p&gt;Restic is a program that does backups right and was designed with the following principles in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy:&lt;/strong&gt; Doing backups should be a frictionless process, otherwise you might be tempted to skip it. Restic should be easy to configure and use, so that, in the event of a data loss, you can just restore it. Likewise, restoring data should not be complicated.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Backing up your data with restic should only be limited by your network or hard disk bandwidth so that you can backup your files every day. Nobody does backups if it takes too much time. Restoring backups should only transfer data that is needed for the files that are to be restored, so that this process is also fast.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verifiable&lt;/strong&gt;: Much more important than backup is restore, so restic enables you to easily verify that all data can be restored.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure&lt;/strong&gt;: Restic uses cryptography to guarantee confidentiality and integrity of your data. The location the backup data is stored is assumed not to be a trusted environment (e.g. a shared space where others like system administrators are able to access your backups). Restic is built to secure your data against such attackers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Efficient&lt;/strong&gt;: With the growth of data, additional snapshots should only take the storage of the actual increment. Even more, duplicate data should be de-duplicated before it is actually written to the storage back end to save precious backup space.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Reproducible Builds&lt;/h1&gt; &#xA;&lt;p&gt;The binaries released with each restic version starting at 0.6.1 are &lt;a href=&#34;https://reproducible-builds.org/&#34;&gt;reproducible&lt;/a&gt;, which means that you can reproduce a byte identical version from the source code for that release. Instructions on how to do that are contained in the &lt;a href=&#34;https://github.com/restic/builder&#34;&gt;builder repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;You can follow the restic project on Twitter &lt;a href=&#34;https://twitter.com/resticbackup&#34;&gt;@resticbackup&lt;/a&gt; or by subscribing to the &lt;a href=&#34;https://restic.net/blog/&#34;&gt;project blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Restic is licensed under &lt;a href=&#34;https://opensource.org/licenses/BSD-2-Clause&#34;&gt;BSD 2-Clause License&lt;/a&gt;. You can find the complete text in &lt;a href=&#34;https://raw.githubusercontent.com/restic/restic/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt;Backend integration tests for Google Cloud Storage and Microsoft Azure Blob Storage are sponsored by &lt;a href=&#34;https://appscode.com&#34;&gt;AppsCode&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://appscode.com&#34;&gt;&lt;img src=&#34;https://cdn.appscode.com/images/logo/appscode/ac-logo-color.png&#34; alt=&#34;Sponsored by AppsCode&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>quii/learn-go-with-tests</title>
    <updated>2022-08-14T02:11:14Z</updated>
    <id>tag:github.com,2022-08-14:/quii/learn-go-with-tests</id>
    <link href="https://github.com/quii/learn-go-with-tests" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn Go with test-driven development&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Learn Go with Tests&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/red-green-blue-gophers-smaller.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/deniseyu21&#34;&gt;Art by Denise&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/quii/learn-go-with-tests&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/quii/learn-go-with-tests&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quii.gitbook.io/learn-go-with-tests&#34;&gt;Gitbook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quii/learn-go-with-tests/releases&#34;&gt;EPUB or PDF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://studygolang.gitbook.io/learn-go-with-tests&#34;&gt;中文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://larien.gitbook.io/aprenda-go-com-testes/&#34;&gt;Português&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://andmorefine.gitbook.io/learn-go-with-tests/&#34;&gt;日本語&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://miryang.gitbook.io/learn-go-with-tests/&#34;&gt;한국어&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://halilkocaoz.gitbook.io/go-programlama-dilini-ogren/&#34;&gt;Türkçe&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support me&lt;/h2&gt; &#xA;&lt;p&gt;I am proud to offer this resource for free, but if you wish to give some appreciation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/quii&#34;&gt;Tweet me @quii&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.buymeacoffee.com/quii&#34;&gt;Buy me a coffee &lt;span&gt;☕&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/quii&#34;&gt;Sponsor me on GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Explore the Go language by writing tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Get a grounding with TDD&lt;/strong&gt;. Go is a good language for learning TDD because it is a simple language to learn and testing is built-in&lt;/li&gt; &#xA; &lt;li&gt;Be confident that you&#39;ll be able to start writing robust, well-tested systems in Go&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/why.md&#34;&gt;Watch a video, or read about why unit testing and TDD is important&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;h3&gt;Go fundamentals&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/install-go.md&#34;&gt;Install Go&lt;/a&gt; - Set up environment for productivity.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/hello-world.md&#34;&gt;Hello, world&lt;/a&gt; - Declaring variables, constants, if/else statements, switch, write your first go program and write your first test. Sub-test syntax and closures.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/integers.md&#34;&gt;Integers&lt;/a&gt; - Further Explore function declaration syntax and learn new ways to improve the documentation of your code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/iteration.md&#34;&gt;Iteration&lt;/a&gt; - Learn about &lt;code&gt;for&lt;/code&gt; and benchmarking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/arrays-and-slices.md&#34;&gt;Arrays and slices&lt;/a&gt; - Learn about arrays, slices, &lt;code&gt;len&lt;/code&gt;, varargs, &lt;code&gt;range&lt;/code&gt; and test coverage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/structs-methods-and-interfaces.md&#34;&gt;Structs, methods &amp;amp; interfaces&lt;/a&gt; - Learn about &lt;code&gt;struct&lt;/code&gt;, methods, &lt;code&gt;interface&lt;/code&gt; and table driven tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/pointers-and-errors.md&#34;&gt;Pointers &amp;amp; errors&lt;/a&gt; - Learn about pointers and errors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/maps.md&#34;&gt;Maps&lt;/a&gt; - Learn about storing values in the map data structure.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/dependency-injection.md&#34;&gt;Dependency Injection&lt;/a&gt; - Learn about dependency injection, how it relates to using interfaces and a primer on io.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/mocking.md&#34;&gt;Mocking&lt;/a&gt; - Take some existing untested code and use DI with mocking to test it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/concurrency.md&#34;&gt;Concurrency&lt;/a&gt; - Learn how to write concurrent code to make your software faster.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/select.md&#34;&gt;Select&lt;/a&gt; - Learn how to synchronise asynchronous processes elegantly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/reflection.md&#34;&gt;Reflection&lt;/a&gt; - Learn about reflection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/sync.md&#34;&gt;Sync&lt;/a&gt; - Learn some functionality from the sync package including &lt;code&gt;WaitGroup&lt;/code&gt; and &lt;code&gt;Mutex&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/context.md&#34;&gt;Context&lt;/a&gt; - Use the context package to manage and cancel long-running processes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/roman-numerals.md&#34;&gt;Intro to property based tests&lt;/a&gt; - Practice some TDD with the Roman Numerals kata and get a brief intro to property based tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/math.md&#34;&gt;Maths&lt;/a&gt; - Use the &lt;code&gt;math&lt;/code&gt; package to draw an SVG clock&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/reading-files.md&#34;&gt;Reading files&lt;/a&gt; - Read files and process them&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/html-templates.md&#34;&gt;Templating&lt;/a&gt; - Use Go&#39;s html/template package to render html from data, and also learn about approval testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/generics.md&#34;&gt;Generics&lt;/a&gt; - Learn how to write functions that take generic arguments and make your own generic data-structure&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/revisiting-arrays-and-slices-with-generics.md&#34;&gt;Revisiting arrays and slices with generics&lt;/a&gt; - Generics are very useful when working with collections. Learn how to write your own &lt;code&gt;Reduce&lt;/code&gt; function and tidy up some common patterns.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Build an application&lt;/h3&gt; &#xA;&lt;p&gt;Now that you have hopefully digested the &lt;em&gt;Go Fundamentals&lt;/em&gt; section you have a solid grounding of a majority of Go&#39;s language features and how to do TDD.&lt;/p&gt; &#xA;&lt;p&gt;This next section will involve building an application.&lt;/p&gt; &#xA;&lt;p&gt;Each chapter will iterate on the previous one, expanding the application&#39;s functionality as our product owner dictates.&lt;/p&gt; &#xA;&lt;p&gt;New concepts will be introduced to help facilitate writing great code but most of the new material will be learning what can be accomplished from Go&#39;s standard library.&lt;/p&gt; &#xA;&lt;p&gt;By the end of this, you should have a strong grasp as to how to iteratively write an application in Go, backed by tests.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/http-server.md&#34;&gt;HTTP server&lt;/a&gt; - We will create an application which listens to HTTP requests and responds to them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/json.md&#34;&gt;JSON, routing and embedding&lt;/a&gt; - We will make our endpoints return JSON and explore how to do routing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/io.md&#34;&gt;IO and sorting&lt;/a&gt; - We will persist and read our data from disk and we&#39;ll cover sorting data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/command-line.md&#34;&gt;Command line &amp;amp; project structure&lt;/a&gt; - Support multiple applications from one code base and read input from command line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/time.md&#34;&gt;Time&lt;/a&gt; - using the &lt;code&gt;time&lt;/code&gt; package to schedule activities.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/websockets.md&#34;&gt;WebSockets&lt;/a&gt; - learn how to write and test a server that uses WebSockets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Testing fundamentals&lt;/h3&gt; &#xA;&lt;p&gt;Covering other subjects around testing.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Introduction to acceptance tests] - Learn how to write acceptance tests for your code, with a real-world example for gracefully shutting down a HTTP server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Questions and answers&lt;/h3&gt; &#xA;&lt;p&gt;I often run in to questions on the internets like&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;How do I test my amazing function that does x, y and z&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you have such a question raise it as an issue on github and I&#39;ll try and find time to write a short chapter to tackle the issue. I feel like content like this is valuable as it is tackling people&#39;s &lt;em&gt;real&lt;/em&gt; questions around testing.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/os-exec.md&#34;&gt;OS exec&lt;/a&gt; - An example of how we can reach out to the OS to execute commands to fetch data and keep our business logic testable/&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/error-types.md&#34;&gt;Error types&lt;/a&gt; - Example of creating your own error types to improve your tests and make your code easier to work with.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/context-aware-reader.md&#34;&gt;Context-aware Reader&lt;/a&gt; - Learn how to TDD augmenting &lt;code&gt;io.Reader&lt;/code&gt; with cancellation. Based on &lt;a href=&#34;https://pace.dev/blog/2020/02/03/context-aware-ioreader-for-golang-by-mat-ryer&#34;&gt;Context-aware io.Reader for Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/http-handlers-revisited.md&#34;&gt;Revisiting HTTP Handlers&lt;/a&gt; - Testing HTTP handlers seems to be the bane of many a developer&#39;s existence. This chapter explores the issues around designing handlers correctly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Meta / Discussion&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/why.md&#34;&gt;Why&lt;/a&gt; - Watch a video, or read about why unit testing and TDD is important&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/anti-patterns.md&#34;&gt;Anti-patterns&lt;/a&gt; - A short chapter on TDD and unit testing anti-patterns&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;This project is work in progress&lt;/em&gt; If you would like to contribute, please do get in touch.&lt;/li&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://github.com/quii/learn-go-with-tests/tree/842f4f24d1f1c20ba3bb23cbc376c7ca6f7ca79a/contributing.md&#34;&gt;contributing.md&lt;/a&gt; for guidelines&lt;/li&gt; &#xA; &lt;li&gt;Any ideas? Create an issue&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;I have some experience introducing Go to development teams and have tried different approaches as to how to grow a team from some people curious about Go into highly effective writers of Go systems.&lt;/p&gt; &#xA;&lt;h3&gt;What didn&#39;t work&lt;/h3&gt; &#xA;&lt;h4&gt;Read &lt;em&gt;the&lt;/em&gt; book&lt;/h4&gt; &#xA;&lt;p&gt;An approach we tried was to take &lt;a href=&#34;https://www.amazon.co.uk/Programming-Language-Addison-Wesley-Professional-Computing/dp/0134190440&#34;&gt;the blue book&lt;/a&gt; and every week discuss the next chapter along with the exercises.&lt;/p&gt; &#xA;&lt;p&gt;I love this book but it requires a high level of commitment. The book is very detailed in explaining concepts, which is obviously great but it means that the progress is slow and steady - this is not for everyone.&lt;/p&gt; &#xA;&lt;p&gt;I found that whilst a small number of people would read chapter X and do the exercises, many people didn&#39;t.&lt;/p&gt; &#xA;&lt;h4&gt;Solve some problems&lt;/h4&gt; &#xA;&lt;p&gt;Katas are fun but they are usually limited in their scope for learning a language; you&#39;re unlikely to use goroutines to solve a kata.&lt;/p&gt; &#xA;&lt;p&gt;Another problem is when you have varying levels of enthusiasm. Some people just learn way more of the language than others and when demonstrating what they have done end up confusing people with features the others are not familiar with.&lt;/p&gt; &#xA;&lt;p&gt;This ends up making the learning feel quite &lt;em&gt;unstructured&lt;/em&gt; and &lt;em&gt;ad hoc&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What did work&lt;/h3&gt; &#xA;&lt;p&gt;By far the most effective way was by slowly introducing the fundamentals of the language by reading through &lt;a href=&#34;https://gobyexample.com/&#34;&gt;go by example&lt;/a&gt;, exploring them with examples and discussing them as a group. This was a more interactive approach than &#34;read chapter x for homework&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Over time the team gained a solid foundation of the &lt;em&gt;grammar&lt;/em&gt; of the language so we could then start to build systems.&lt;/p&gt; &#xA;&lt;p&gt;This to me seems analogous to practicing scales when trying to learn guitar.&lt;/p&gt; &#xA;&lt;p&gt;It doesn&#39;t matter how artistic you think you are, you are unlikely to write good music without understanding the fundamentals and practicing the mechanics.&lt;/p&gt; &#xA;&lt;h3&gt;What works for me&lt;/h3&gt; &#xA;&lt;p&gt;When &lt;em&gt;I&lt;/em&gt; learn a new programming language I usually start by messing around in a REPL but eventually, I need more structure.&lt;/p&gt; &#xA;&lt;p&gt;What I like to do is explore concepts and then solidify the ideas with tests. Tests verify the code I write is correct and documents the feature I have learned.&lt;/p&gt; &#xA;&lt;p&gt;Taking my experience of learning with a group and my own personal way I am going to try and create something that hopefully proves useful to other teams. Learning the fundamentals by writing small tests so that you can then take your existing software design skills and ship some great systems.&lt;/p&gt; &#xA;&lt;h2&gt;Who this is for&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;People who are interested in picking up Go.&lt;/li&gt; &#xA; &lt;li&gt;People who already know some Go, but want to explore testing with TDD.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What you&#39;ll need&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A computer!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Installed Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A text editor&lt;/li&gt; &#xA; &lt;li&gt;Some experience with programming. Understanding of concepts like &lt;code&gt;if&lt;/code&gt;, variables, functions etc.&lt;/li&gt; &#xA; &lt;li&gt;Comfortable with using the terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add issues/submit PRs &lt;a href=&#34;https://github.com/quii/learn-go-with-tests&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;https://twitter.com/quii&#34;&gt;tweet me @quii&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quii/learn-go-with-tests/main/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/egonelbre&#34;&gt;Logo is by egonelbre&lt;/a&gt; What a star!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coder/coder</title>
    <updated>2022-08-14T02:11:14Z</updated>
    <id>tag:github.com,2022-08-14:/coder/coder</id>
    <link href="https://github.com/coder/coder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remote development environments on your infrastructure provisioned with Terraform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coder&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/coder&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-us%20on%20Discord-gray.svg?longCache=true&amp;amp;logo=discord&amp;amp;colorB=green&#34; alt=&#34;&amp;quot;Join us on Discord&amp;quot;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/coder/coder&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/coder/coder/branch/main/graph/badge.svg?token=TNLW3OAP6G&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/coder/coder&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/coder/coder.svg?sanitize=true&#34; alt=&#34;Go Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/coderhq&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/coderhq?label=%40coderhq&amp;amp;style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Coder creates remote development machines so your team can develop from anywhere.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coder/coder/main/docs/images/hero-image.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Manage less&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure your entire team is using the same tools and resources &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rollout critical updates to your developers with one command&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Automatically shut down expensive cloud resources&lt;/li&gt; &#xA; &lt;li&gt;Keep your source code and data behind your firewall&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Code more&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build and test faster &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Leveraging cloud CPUs, RAM, network speeds, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Access your environment from any place on any client (even an iPad)&lt;/li&gt; &#xA; &lt;li&gt;Onboard instantly then stay up to date continuously&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Coder is in a beta state. &lt;a href=&#34;https://github.com/coder/coder/issues/new&#34;&gt;Report issues here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The easiest way to install Coder is to use our &lt;a href=&#34;https://github.com/coder/coder/raw/main/install.sh&#34;&gt;install script&lt;/a&gt; for Linux and macOS.&lt;/p&gt; &#xA;&lt;p&gt;To install, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -L https://coder.com/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can preview what occurs during the install process:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -L https://coder.com/install.sh | sh -s -- --dry-run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can modify the installation process by including flags. Run the help command for reference:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -L https://coder.com/install.sh | sh -s -- --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/coder/coder/main/docs/install.md&#34;&gt;install&lt;/a&gt; for additional methods.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Once installed, you can start a production deployment with a single command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Automatically sets up an external access URL on *.try.coder.app&#xA;coder server --tunnel&#xA;&#xA;# Requires a PostgreSQL instance and external access URL&#xA;coder server --postgres-url &amp;lt;url&amp;gt; --access-url &amp;lt;url&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;coder --help&lt;/code&gt; to get a complete list of flags and environment variables. Use our &lt;a href=&#34;https://coder.com/docs/coder-oss/latest/quickstart&#34;&gt;quickstart guide&lt;/a&gt; for a full walkthrough.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit our docs &lt;a href=&#34;https://coder.com/docs/coder-oss&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Comparison&lt;/h2&gt; &#xA;&lt;p&gt;Please file &lt;a href=&#34;https://github.com/coder/coder/issues/new&#34;&gt;an issue&lt;/a&gt; if any information is out of date. Also refer to: &lt;a href=&#34;https://coder.com/docs/coder-oss/latest/index#what-coder-is-not&#34;&gt;What Coder is not&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Tool&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Delivery Model&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Cost&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Environments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/coder/coder&#34;&gt;Coder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Platform&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OSS + Self-Managed&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pay your cloud&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;All &lt;a href=&#34;https://www.terraform.io/registry/providers&#34;&gt;Terraform&lt;/a&gt; resources, all clouds, multi-architecture: Linux, Mac, Windows, containers, VMs, amd64, arm64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/cdr/code-server&#34;&gt;code-server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Web IDE&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OSS + Self-Managed&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pay your cloud&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Linux, Mac, Windows, containers, VMs, amd64, arm64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://coder.com/docs&#34;&gt;Coder (Classic)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Platform&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Self-Managed&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pay your cloud + license fees&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Kubernetes Linux Containers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Platform&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SaaS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2x Azure Compute&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Linux containers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;Last updated: 5/27/22&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community and Support&lt;/h2&gt; &#xA;&lt;p&gt;Join our community on &lt;a href=&#34;https://discord.gg/coder&#34;&gt;Discord&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/coderhq&#34;&gt;Twitter&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coder/coder/issues/new/choose&#34;&gt;Suggest improvements and report problems&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://coder.com/docs/coder-oss/latest/CONTRIBUTING&#34;&gt;contributing docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find our list of contributors &lt;a href=&#34;https://github.com/coder/coder/graphs/contributors&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>