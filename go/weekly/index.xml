<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-28T01:45:31Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zinclabs/zinc</title>
    <updated>2022-08-28T01:45:31Z</updated>
    <id>tag:github.com,2022-08-28:/zinclabs/zinc</id>
    <link href="https://github.com/zinclabs/zinc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ZincSearch. A lightweight alternative to elasticsearch that requires minimal resources, written in Go.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/zinclabs/zinc&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/zinclabs/zinc&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ![](https://codebuild.us-west-2.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoid3creXFaUHdOZmJvWWFXM0RZckJqV0xhZG4vT1ZWUkREK05oZExmT3JMMitGNGJwOHVIdCtKdjNEQzVqWXpLQlY1QjF2QXRIa0dIRjUvTzBsTE9LR0c0PSIsIml2UGFyYW1ldGVyU3BlYyI6IjRzdjc5bWZxU2hJYXNYNzciLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&amp;branch=main) --&gt; &#xA;&lt;h1&gt;Zinc Search Engine&lt;/h1&gt; &#xA;&lt;p&gt;Zinc is a search engine that does full text indexing. It is a lightweight alternative to Elasticsearch and runs using a fraction of the resources. It uses &lt;a href=&#34;https://github.com/blugelabs/bluge&#34;&gt;bluge&lt;/a&gt; as the underlying indexing library.&lt;/p&gt; &#xA;&lt;p&gt;It is very simple and easy to operate as opposed to Elasticsearch which requires a couple dozen knobs to understand and tune which you can get up and running in 2 minutes&lt;/p&gt; &#xA;&lt;p&gt;It is a drop-in replacement for Elasticsearch if you are just ingesting data using APIs and searching using kibana (Kibana is not supported with zinc. Zinc provides its own UI).&lt;/p&gt; &#xA;&lt;p&gt;Check the below video for a quick demo of Zinc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aZXtuVjt1ow&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/zinc-youtube.jpg&#34; alt=&#34;Zinc Youtube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Playground Server&lt;/h1&gt; &#xA;&lt;p&gt;You could try ZincSearch without installing using below details:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://playground.dev.zincsearch.com&#34;&gt;https://playground.dev.zincsearch.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User ID&lt;/td&gt; &#xA;   &lt;td&gt;admin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Password&lt;/td&gt; &#xA;   &lt;td&gt;Complexpass#123&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: Do not store sensitive data on this server as its available to everyone on internet. Data will also be cleaned on this server regularly.&lt;/p&gt; &#xA;&lt;h1&gt;Join slack channel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/zinc-nvh4832/shared_invite/zt-11r96hv2b-UwxUILuSJ1duzl_6mhJwVg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/slack.png&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Why zinc&lt;/h1&gt; &#xA;&lt;p&gt;While Elasticsearch is a very good product, it is complex and requires lots of resources and is more than a decade old. I built Zinc so it becomes easier for folks to use full text search indexing without doing a lot of work.&lt;/p&gt; &#xA;&lt;h1&gt;Features:&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Provides full text indexing capability&lt;/li&gt; &#xA; &lt;li&gt;Single binary for installation and running. Binaries available under releases for multiple platforms.&lt;/li&gt; &#xA; &lt;li&gt;Web UI for querying data written in Vue&lt;/li&gt; &#xA; &lt;li&gt;Compatibility with Elasticsearch APIs for ingestion of data (single record and bulk API)&lt;/li&gt; &#xA; &lt;li&gt;Out of the box authentication&lt;/li&gt; &#xA; &lt;li&gt;Schema less - No need to define schema upfront and different documents in the same index can have different fields.&lt;/li&gt; &#xA; &lt;li&gt;Index storage in disk (default), s3 or minio (experimental)&lt;/li&gt; &#xA; &lt;li&gt;aggregation support&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Roadmap items:&lt;/h1&gt; &#xA;&lt;p&gt;Public roadmap is available at &lt;a href=&#34;https://github.com/orgs/zinclabs/projects/3/views/1&#34;&gt;https://github.com/orgs/zinclabs/projects/3/views/1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please create an issue if you would like something to be added to the roadmap.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;h2&gt;Search screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/search_screen.jpg&#34; alt=&#34;Search screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;User management screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/users_screen.jpg&#34; alt=&#34;Users screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;h2&gt;Download / Installation / Run&lt;/h2&gt; &#xA;&lt;p&gt;Check installation &lt;a href=&#34;https://docs.zincsearch.com/04_installation/&#34;&gt;installation docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data ingestion&lt;/h2&gt; &#xA;&lt;h3&gt;Single record&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/single-record/&#34;&gt;single record ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bulk ingestion&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/bulk-ingestion/#bulk-ingestion&#34;&gt;bulk ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fluent bit&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/fluent-bit/&#34;&gt;fluent-bit ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fluentd&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/fluentd/&#34;&gt;fluentd ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Syslog-ng&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/syslog-ng/&#34;&gt;syslog-ng ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API Reference&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/API%20Reference/&#34;&gt;Zinc API docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Releases&lt;/h1&gt; &#xA;&lt;p&gt;ZincSearch currently has most of its API contracts frozen. It&#39;s data format may still experience changes as we improve things. Currently ZincSearch is in beta. Data format should become highly stable when we move to GA (version 1).&lt;/p&gt; &#xA;&lt;h1&gt;How to develop and contribute to Zinc&lt;/h1&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; . Also check the &lt;a href=&#34;https://github.com/orgs/zinclabs/projects/3&#34;&gt;roadmap items&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Who uses Zinc (Known users)?&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quadrantsec.com/&#34;&gt;Quadrantsec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rocboss/paopao-ce&#34;&gt;Paopao&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please do raise a PR adding your details if you are using Zinc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pocketbase/pocketbase</title>
    <updated>2022-08-28T01:45:31Z</updated>
    <id>tag:github.com,2022-08-28:/pocketbase/pocketbase</id>
    <link href="https://github.com/pocketbase/pocketbase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source realtime backend in 1 file&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pocketbase.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;img src=&#34;https://i.imgur.com/ZfD4BHO.png&#34; alt=&#34;PocketBase - open source backend in 1 file&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/pocketbase/pocketbase/actions/workflows/release.yaml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://github.com/pocketbase/pocketbase/actions/workflows/release.yaml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pocketbase/pocketbase/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/pocketbase/pocketbase.svg?sanitize=true&#34; alt=&#34;Latest releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/pocketbase/pocketbase&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/ganigeorgiev/fexpr?status.svg?sanitize=true&#34; alt=&#34;Go package documentation&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pocketbase.io&#34;&gt;PocketBase&lt;/a&gt; is an open source Go backend, consisting of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;embedded database (&lt;em&gt;SQLite&lt;/em&gt;) with &lt;strong&gt;realtime subscriptions&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;built-in &lt;strong&gt;files and users management&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;convenient &lt;strong&gt;Admin dashboard UI&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;and simple &lt;strong&gt;REST-ish API&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;For documentation and examples, please visit &lt;a href=&#34;https://pocketbase.io/docs&#34;&gt;https://pocketbase.io/docs&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ Although the web API definitions are considered stable, please keep in mind that PocketBase is still under active development and therefore full backward compatibility is not guaranteed before reaching v1.0.0.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;API SDK clients&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to interact with the API is to use one of the official SDK clients:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;JavaScript - &lt;a href=&#34;https://github.com/pocketbase/js-sdk&#34;&gt;pocketbase/js-sdk&lt;/a&gt;&lt;/strong&gt; (&lt;em&gt;browser and node&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dart - &lt;a href=&#34;https://github.com/pocketbase/dart-sdk&#34;&gt;pocketbase/dart-sdk&lt;/a&gt;&lt;/strong&gt; (&lt;em&gt;web, mobile, desktop&lt;/em&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;PocketBase could be used as a standalone app or as a Go framework/toolkit that enables you to build your own custom app specific business logic and still have a single portable executable at the end.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# go 1.18+&#xA;go get github.com/pocketbase/pocketbase&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For Windows, you may have to use go 1.19+ due to an incorrect js mime type in the Windows Registry (see &lt;a href=&#34;https://github.com/pocketbase/pocketbase/issues/6&#34;&gt;issue#6&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;    &#34;log&#34;&#xA;    &#34;net/http&#34;&#xA;&#xA;    &#34;github.com/labstack/echo/v5&#34;&#xA;    &#34;github.com/pocketbase/pocketbase&#34;&#xA;    &#34;github.com/pocketbase/pocketbase/apis&#34;&#xA;    &#34;github.com/pocketbase/pocketbase/core&#34;&#xA;)&#xA;&#xA;func main() {&#xA;    app := pocketbase.New()&#xA;&#xA;    app.OnBeforeServe().Add(func(e *core.ServeEvent) error {&#xA;        // add new &#34;GET /api/hello&#34; route to the app router (echo)&#xA;        e.Router.AddRoute(echo.Route{&#xA;            Method: http.MethodGet,&#xA;            Path:   &#34;/api/hello&#34;,&#xA;            Handler: func(c echo.Context) error {&#xA;                return c.String(200, &#34;Hello world!&#34;)&#xA;            },&#xA;            Middlewares: []echo.MiddlewareFunc{&#xA;                apis.RequireAdminOrUserAuth(),&#xA;            },&#xA;        })&#xA;&#xA;        return nil&#xA;    })&#xA;&#xA;    if err := app.Start(); err != nil {&#xA;        log.Fatal(err)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running and building&lt;/h3&gt; &#xA;&lt;p&gt;Running/building the application is the same as for any other Go program, aka. just &lt;code&gt;go run&lt;/code&gt; and &lt;code&gt;go build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;PocketBase embeds SQLite, but doesn&#39;t require CGO.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If CGO is enabled, it will use &lt;a href=&#34;https://pkg.go.dev/github.com/mattn/go-sqlite3&#34;&gt;mattn/go-sqlite3&lt;/a&gt; driver, otherwise - &lt;a href=&#34;https://pkg.go.dev/modernc.org/sqlite&#34;&gt;modernc.org/sqlite&lt;/a&gt;. You can enable and disable CGO by setting the &lt;code&gt;CGO_ENABLED&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;p&gt;Enable CGO only if you really need to squeeze the read/write query performance at the expense of complicating cross compilation.&lt;/p&gt; &#xA;&lt;p&gt;To build the minimal standalone executable, like the prebuilt ones in the releases page, you can simply run &lt;code&gt;go build&lt;/code&gt; inside the &lt;code&gt;examples/base&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;PocketBase comes with mixed bag of unit and integration tests. To run them, use the default &lt;code&gt;go test&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go test ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check also the &lt;a href=&#34;http://pocketbase.io/docs/testing&#34;&gt;Testing guide&lt;/a&gt; to learn how to write your own custom application tests.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover a security vulnerability within PocketBase, please send an e-mail to &lt;strong&gt;support at pocketbase.io&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All reports will be promptly addressed and you&#39;ll be credited accordingly.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;PocketBase is free and open source project licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/pocketbase/pocketbase/master/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You could help continuing its development by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pocketbase/pocketbase/master/CONTRIBUTING.md&#34;&gt;Contribute to the source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pocketbase/pocketbase/issues&#34;&gt;Suggest new features and report issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pocketbase.io/support-us&#34;&gt;Donate a small amount&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please note that PocketBase was initially created to serve as a new backend for my other open source project - &lt;a href=&#34;https://presentator.io&#34;&gt;Presentator&lt;/a&gt; (see &lt;a href=&#34;https://github.com/presentator/presentator/issues/183&#34;&gt;#183&lt;/a&gt;), so all feature requests will be first aligned with what we need for Presentator v3.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>kubescape/kubescape</title>
    <updated>2022-08-28T01:45:31Z</updated>
    <id>tag:github.com,2022-08-28:/kubescape/kubescape</id>
    <link href="https://github.com/kubescape/kubescape" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kubescape is a K8s open-source tool providing a multi-cloud K8s single pane of glass, including risk analysis, security compliance, RBAC visualizer and image vulnerabilities scanning.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/kubescape.png&#34; width=&#34;300&#34; alt=&#34;logo&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubescape/kubescape/actions/workflows/build.yaml&#34;&gt;&lt;img src=&#34;https://github.com/kubescape/kubescape/actions/workflows/build.yaml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/kubescape/kubescape&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/kubescape/kubescape&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;😎&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#being-a-part-of-the-team&#34;&gt;Want to contribute?&lt;/a&gt; &lt;span&gt;😇&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Kubescape is a K8s open-source tool providing a Kubernetes single pane of glass, including risk analysis, security compliance, RBAC visualizer, and image vulnerabilities scanning. Kubescape scans K8s clusters, YAML files, and HELM charts, detecting misconfigurations according to multiple frameworks (such as the &lt;a href=&#34;https://www.armosec.io/blog/kubernetes-hardening-guidance-summary-by-armo/?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;NSA-CISA&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/security/blog/2021/03/23/secure-containerized-environments-with-updated-threat-matrix-for-kubernetes/&#34;&gt;MITRE ATT&amp;amp;CK®&lt;/a&gt;), software vulnerabilities, and RBAC (role-based-access-control) violations at early stages of the CI/CD pipeline, calculates risk score instantly and shows risk trends over time.&lt;/p&gt; &#xA;&lt;p&gt;It has become one of the fastest-growing Kubernetes tools among developers due to its easy-to-use CLI interface, flexible output formats, and automated scanning capabilities, saving Kubernetes users and admins precious time, effort, and resources. Kubescape integrates natively with other DevOps tools, including Jenkins, CircleCI, Github workflows, Prometheus, and Slack, and supports multi-cloud K8s deployments like EKS, GKE, and AKS.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Kubescape CLI:&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/demo.gif&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;TL;DR&lt;/h1&gt; &#xA;&lt;h2&gt;Install:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#install-on-windows&#34;&gt;Install on windows&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#install-on-macos&#34;&gt;Install on macOS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#install-on-nixos-or-with-nix-community&#34;&gt;Install on NixOS or Linux/macOS via nix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/#install-using-go&#34;&gt;Install using Go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubescape scan --submit --enable-host-scan --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/summary.png&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kubescape is an open source project. We welcome your feedback and ideas for improvement. We’re also aiming to collaborate with the Kubernetes community to help make the tests more robust and complete as Kubernetes develops.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Click &lt;a href=&#34;https://github.com/kubescape/kubescape/stargazers&#34;&gt;👍&lt;/a&gt; if you want us to continue to develop and improve Kubescape 😀&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Being a part of the team&lt;/h1&gt; &#xA;&lt;p&gt;We invite you to our team! We are excited about this project and want to return the love we get.&lt;/p&gt; &#xA;&lt;p&gt;Want to contribute? Want to discuss something? Have an issue?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Feel free to pick a task from the &lt;a href=&#34;https://github.com/kubescape/kubescape/issues?q=is%3Aissue+is%3Aopen+label%3A%22open+for+contribution%22&#34;&gt;issues&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/roadmap.md&#34;&gt;roadmap&lt;/a&gt; or suggest a feature of your own. &lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/MAINTAINERS.md&#34;&gt;Contact us&lt;/a&gt; directly for more information :)&lt;/li&gt; &#xA; &lt;li&gt;Open an issue, we are trying to respond within 48 hours&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/invite/WKZRaCtBxN&#34;&gt;Join us&lt;/a&gt; in the discussion on our discord server!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/WKZRaCtBxN&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/docs/discord-banner.png&#34; width=&#34;100&#34; alt=&#34;logo&#34; align=&#34;center&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/discord/893048809884643379&#34; alt=&#34;discord&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Options and examples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.armosec.io/docs?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Kubescape docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Playground&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://killercoda.com/saiyampathak/scenario/kubescape&#34;&gt;Kubescape playground&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/wdBkt_0Qhbg&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ZATGiDIDBQk&#34;&gt;How To Secure Kubernetes Clusters With Kubescape And Armo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/Ox6DaR7_4ZI&#34;&gt;Scan Kubernetes YAML files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/IGXL9s37smM&#34;&gt;Scan Kubescape on an air-gapped environment (offline support)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/OzpvxGmCR80&#34;&gt;Managing exceptions in the Kubescape SaaS version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/12Sanq_rEhs&#34;&gt;Configure and run customized frameworks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Customize control configurations. &lt;a href=&#34;https://youtu.be/955psg6TVu4&#34;&gt;Kubescape CLI&lt;/a&gt;, &lt;a href=&#34;https://youtu.be/lIMVSVhH33o&#34;&gt;Kubescape SaaS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install on Windows&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Windows&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Requires powershell v5.0+&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;iwr -useb https://raw.githubusercontent.com/kubescape/kubescape/master/install.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Note: if you get an error you might need to change the execution policy (i.e. enable Powershell) with&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy RemoteSigned -scope CurrentUser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Install on macOS&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;MacOS&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt; brew tap kubescape/tap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt; brew install kubescape-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Install on NixOS or with nix (Community)&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Nix/NixOS&lt;/summary&gt; &#xA; &lt;p&gt;Direct issues installing &lt;code&gt;kubescape&lt;/code&gt; via &lt;code&gt;nix&lt;/code&gt; through the channels mentioned &lt;a href=&#34;https://nixos.wiki/wiki/Support&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;You can use &lt;code&gt;nix&lt;/code&gt; on Linux or macOS and on other platforms unofficially.&lt;/p&gt; &#xA; &lt;p&gt;Try it out in an ephemeral shell: &lt;code&gt;nix-shell -p kubescape&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Install declarative as usual&lt;/p&gt; &#xA; &lt;p&gt;NixOS:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;  # your other config ...&#xA;  environment.systemPackages = with pkgs; [&#xA;    # your other packages ...&#xA;    kubescape&#xA;  ];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;home-manager:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;  # your other config ...&#xA;  home.packages = with pkgs; [&#xA;    # your other packages ...&#xA;    kubescape&#xA;  ];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or to your profile (not preferred): &lt;code&gt;nix-env --install -A nixpkgs.kubescape&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage &amp;amp; Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Scan a running Kubernetes cluster and submit results to the &lt;a href=&#34;https://cloud.armosec.io?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Kubescape SaaS version&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --submit --enable-host-scan  --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Read &lt;a href=&#34;https://hub.armosec.io/docs/host-sensor?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;here&lt;/a&gt; more about the &lt;code&gt;enable-host-scan&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Scan a running Kubernetes cluster with &lt;a href=&#34;https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/2716980/nsa-cisa-release-kubernetes-hardening-guidance/&#34;&gt;&lt;code&gt;nsa&lt;/code&gt;&lt;/a&gt; framework and submit results to the &lt;a href=&#34;https://cloud.armosec.io?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Kubescape SaaS version&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan framework nsa --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan a running Kubernetes cluster with &lt;a href=&#34;https://www.microsoft.com/security/blog/2021/03/23/secure-containerized-environments-with-updated-threat-matrix-for-kubernetes/&#34;&gt;&lt;code&gt;MITRE ATT&amp;amp;CK®&lt;/code&gt;&lt;/a&gt; framework and submit results to the &lt;a href=&#34;https://cloud.armosec.io?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Kubescape SaaS version&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan framework mitre --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan a running Kubernetes cluster with a specific control using the control name or control ID. &lt;a href=&#34;https://hub.armosec.io/docs/controls?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;List of controls&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan control &#34;Privileged container&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan specific namespaces&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --include-namespaces development,staging,production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan cluster and exclude some namespaces&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --exclude-namespaces kube-system,kube-public&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan local &lt;code&gt;yaml&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt; files before deploying. &lt;a href=&#34;https://youtu.be/Ox6DaR7_4ZI&#34;&gt;Take a look at the demonstration&lt;/a&gt; Submit the results in case the directory is a git repo. &lt;a href=&#34;https://hub.armosec.io/docs/repository-scanning?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;docs&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan *.yaml --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan kubernetes manifest files from a git repository &lt;a href=&#34;https://hub.armosec.io/docs/repository-scanning?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;and submit the results&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan https://github.com/kubescape/kubescape --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Display all scanned resources (including the resources which passed)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output in &lt;code&gt;json&lt;/code&gt; format&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Add the &lt;code&gt;--format-version v2&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --format json --format-version v2 --output results.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output in &lt;code&gt;junit xml&lt;/code&gt; format&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --format junit --output results.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output in &lt;code&gt;pdf&lt;/code&gt; format - Contributed by &lt;a href=&#34;https://github.com/alegrey91&#34;&gt;@alegrey91&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --format pdf --output results.pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output in &lt;code&gt;prometheus&lt;/code&gt; metrics format - Contributed by &lt;a href=&#34;https://github.com/Joibel&#34;&gt;@Joibel&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --format prometheus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan with exceptions, objects with exceptions will be presented as &lt;code&gt;exclude&lt;/code&gt; and not &lt;code&gt;fail&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubescape/kubescape/master/examples/exceptions/README.md&#34;&gt;Full documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --exceptions examples/exceptions/exclude-kube-namespaces.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan Helm charts&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan &amp;lt;/path/to/directory&amp;gt; --submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kubescape will load the default value file&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Offline/Air-gaped Environment Support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/IGXL9s37smM&#34;&gt;Video tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is possible to run Kubescape offline!&lt;/p&gt; &#xA;&lt;h4&gt;Download all artifacts&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and save in local directory, if path not specified, will save all in &lt;code&gt;~/.kubescape&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape download artifacts --output path/to/local/dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the downloaded artifacts to the air-gaped/offline environment&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scan using the downloaded artifacts&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan --use-artifacts-from path/to/local/dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download a single artifact&lt;/h4&gt; &#xA;&lt;p&gt;You can also download a single artifact and scan with the &lt;code&gt;--use-from&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and save in file, if file name is not specified, will save in &lt;code&gt;~/.kubescape/&amp;lt;framework name&amp;gt;.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape download framework nsa --output /path/nsa.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the downloaded artifacts to the air-gaped/offline environment&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scan using the downloaded framework&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubescape scan framework nsa --use-from /path/nsa.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scan Periodically using Helm&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.armosec.io/docs/installation-of-armo-in-cluster?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;Please follow the instructions here&lt;/a&gt; &lt;a href=&#34;https://github.com/armosec/armo-helm&#34;&gt;helm chart repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Integrations&lt;/h1&gt; &#xA;&lt;h2&gt;VS Code Extension&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/d/kubescape.kubescape?label=VScode&#34; alt=&#34;Visual Studio Marketplace Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/open-vsx/dt/kubescape/kubescape?label=openVSX&amp;amp;color=yellowgreen&#34; alt=&#34;Open VSX&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scan the YAML files while writing them using the &lt;a href=&#34;https://github.com/armosec/vscode-kubescape/raw/master/README.md&#34;&gt;vs code extension&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lens Extension&lt;/h2&gt; &#xA;&lt;p&gt;View Kubescape scan results directly in &lt;a href=&#34;https://k8slens.dev/&#34;&gt;Lens IDE&lt;/a&gt; using kubescape &lt;a href=&#34;https://github.com/armosec/lens-kubescape/raw/master/README.md&#34;&gt;Lens extension&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building Kubescape&lt;/h1&gt; &#xA;&lt;h2&gt;Build on Windows&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Windows&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Install MSYS2 &amp;amp; build libgit &lt;em&gt;(needed only for the first time)&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;build.bat all&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;You can install MSYS2 separately by running &lt;code&gt;build.bat install&lt;/code&gt; and build libgit2 separately by running &lt;code&gt;build.bat build&lt;/code&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build kubescape&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;OR&lt;/p&gt; &lt;pre&gt;&lt;code&gt;go build -tags=static .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Build on Linux/MacOS&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Linux / MacOS&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Install libgit2 dependency &lt;em&gt;(needed only for the first time)&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make libgit2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;code&gt;cmake&lt;/code&gt; is required to build libgit2. You can install it by running &lt;code&gt;sudo apt-get install cmake&lt;/code&gt; (Linux) or &lt;code&gt;brew install cmake&lt;/code&gt; (macOS)&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build kubescape&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;OR&lt;/p&gt; &lt;pre&gt;&lt;code&gt;go build -tags=static .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Test&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;VS code configuration samples&lt;/h2&gt; &#xA;&lt;p&gt;You can use the sample files below to setup your VS code environment for building and debugging purposes.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;.vscode/settings.json&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;// .vscode/settings.json&#xA;{&#xA;    &#34;go.testTags&#34;: &#34;static&#34;,&#xA;    &#34;go.buildTags&#34;: &#34;static&#34;,&#xA;    &#34;go.toolsEnvVars&#34;: {&#xA;        &#34;CGO_ENABLED&#34;: &#34;1&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;.vscode/launch.json&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;// .vscode/launch.json&#xA;{&#xA;    &#34;version&#34;: &#34;0.2.0&#34;,&#xA;    &#34;configurations&#34;: [&#xA;        {&#xA;            &#34;name&#34;: &#34;Launch Package&#34;,&#xA;            &#34;type&#34;: &#34;go&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;mode&#34;: &#34;auto&#34;,&#xA;            &#34;program&#34;: &#34;${workspaceFolder}/main.go&#34;,&#xA;            &#34;args&#34;: [&#xA;                &#34;scan&#34;,&#xA;                &#34;--logger&#34;,&#xA;                &#34;debug&#34;&#xA;            ],&#xA;            &#34;buildFlags&#34;: &#34;-tags=static&#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Under the hood&lt;/h1&gt; &#xA;&lt;h2&gt;Technology&lt;/h2&gt; &#xA;&lt;p&gt;Kubescape is based on the &lt;a href=&#34;https://github.com/open-policy-agent/opa&#34;&gt;OPA engine&lt;/a&gt; and ARMO&#39;s posture controls.&lt;/p&gt; &#xA;&lt;p&gt;The tools retrieve Kubernetes objects from the API server and run a set of &lt;a href=&#34;https://www.openpolicyagent.org/docs/latest/policy-language/&#34;&gt;rego&#39;s snippets&lt;/a&gt; developed by &lt;a href=&#34;https://www.armosec.io?utm_source=github&amp;amp;utm_medium=repository&#34;&gt;ARMO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The results by default are printed in a pretty &#34;console friendly&#34; manner, but they can be retrieved in JSON format for further processing.&lt;/p&gt; &#xA;&lt;p&gt;Kubescape is an open source project, we welcome your feedback and ideas for improvement. We’re also aiming to collaborate with the Kubernetes community to help make the tests more robust and complete as Kubernetes develops.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks to all the contributors ❤️&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/kubescape/kubescape/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=kubescape/kubescape&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>