<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-02T01:48:22Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FiloSottile/mkcert</title>
    <updated>2024-06-02T01:48:22Z</updated>
    <id>tag:github.com,2024-06-02:/FiloSottile/mkcert</id>
    <link href="https://github.com/FiloSottile/mkcert" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple zero-config tool to make locally trusted development certificates with any names you&#39;d like.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mkcert&lt;/h1&gt; &#xA;&lt;p&gt;mkcert is a simple tool for making locally-trusted development certificates. It requires no configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkcert -install&#xA;Created a new local CA üí•&#xA;The local CA is now installed in the system trust store! ‚ö°Ô∏è&#xA;The local CA is now installed in the Firefox trust store (requires browser restart)! ü¶ä&#xA;&#xA;$ mkcert example.com &#34;*.example.com&#34; example.test localhost 127.0.0.1 ::1&#xA;&#xA;Created a new certificate valid for the following names üìú&#xA; - &#34;example.com&#34;&#xA; - &#34;*.example.com&#34;&#xA; - &#34;example.test&#34;&#xA; - &#34;localhost&#34;&#xA; - &#34;127.0.0.1&#34;&#xA; - &#34;::1&#34;&#xA;&#xA;The certificate is at &#34;./example.com+5.pem&#34; and the key at &#34;./example.com+5-key.pem&#34; ‚úÖ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;498&#34; alt=&#34;Chrome and Firefox screenshot&#34; src=&#34;https://user-images.githubusercontent.com/1225294/51066373-96d4aa80-15be-11e9-91e2-f4e44a3a4458.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using certificates from real certificate authorities (CAs) for development can be dangerous or impossible (for hosts like &lt;code&gt;example.test&lt;/code&gt;, &lt;code&gt;localhost&lt;/code&gt; or &lt;code&gt;127.0.0.1&lt;/code&gt;), but self-signed certificates cause trust errors. Managing your own CA is the best solution, but usually involves arcane commands, specialized knowledge and manual steps.&lt;/p&gt; &#xA;&lt;p&gt;mkcert automatically creates and installs a local CA in the system root store, and generates locally-trusted certificates. mkcert does not automatically configure servers to use the certificates, though, that&#39;s up to you.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: the &lt;code&gt;rootCA-key.pem&lt;/code&gt; file that mkcert automatically generates gives complete power to intercept secure requests from your machine. Do not share it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;On macOS, use &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install mkcert&#xA;brew install nss # if you use Firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or &lt;a href=&#34;https://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo port selfupdate&#xA;sudo port install mkcert&#xA;sudo port install nss # if you use Firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;On Linux, first install &lt;code&gt;certutil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install libnss3-tools&#xA;    -or-&#xA;sudo yum install nss-tools&#xA;    -or-&#xA;sudo pacman -S nss&#xA;    -or-&#xA;sudo zypper install mozilla-nss-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can install using &lt;a href=&#34;https://docs.brew.sh/Homebrew-on-Linux&#34;&gt;Homebrew on Linux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install mkcert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or build from source (requires Go 1.13+)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/FiloSottile/mkcert &amp;amp;&amp;amp; cd mkcert&#xA;go build -ldflags &#34;-X main.Version=$(git describe --tags)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use &lt;a href=&#34;https://github.com/FiloSottile/mkcert/releases&#34;&gt;the pre-built binaries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -JLO &#34;https://dl.filippo.io/mkcert/latest?for=linux/amd64&#34;&#xA;chmod +x mkcert-v*-linux-amd64&#xA;sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Arch Linux users, &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/mkcert/&#34;&gt;&lt;code&gt;mkcert&lt;/code&gt;&lt;/a&gt; is available on the official Arch Linux repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -Syu mkcert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;On Windows, use &lt;a href=&#34;https://chocolatey.org&#34;&gt;Chocolatey&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;choco install mkcert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use Scoop&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scoop bucket add extras&#xA;scoop install mkcert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or build from source (requires Go 1.10+), or use &lt;a href=&#34;https://github.com/FiloSottile/mkcert/releases&#34;&gt;the pre-built binaries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re running into permission problems try running &lt;code&gt;mkcert&lt;/code&gt; as an Administrator.&lt;/p&gt; &#xA;&lt;h2&gt;Supported root stores&lt;/h2&gt; &#xA;&lt;p&gt;mkcert supports the following root stores:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS system store&lt;/li&gt; &#xA; &lt;li&gt;Windows system store&lt;/li&gt; &#xA; &lt;li&gt;Linux variants that provide either &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;update-ca-trust&lt;/code&gt; (Fedora, RHEL, CentOS) or&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;update-ca-certificates&lt;/code&gt; (Ubuntu, Debian, OpenSUSE, SLES) or&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;trust&lt;/code&gt; (Arch)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Firefox (macOS and Linux only)&lt;/li&gt; &#xA; &lt;li&gt;Chrome and Chromium&lt;/li&gt; &#xA; &lt;li&gt;Java (when &lt;code&gt;JAVA_HOME&lt;/code&gt; is set)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To only install the local root CA into a subset of them, you can set the &lt;code&gt;TRUST_STORES&lt;/code&gt; environment variable to a comma-separated list. Options are: &#34;system&#34;, &#34;java&#34; and &#34;nss&#34; (includes Firefox).&lt;/p&gt; &#xA;&lt;h2&gt;Advanced topics&lt;/h2&gt; &#xA;&lt;h3&gt;Advanced options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;-cert-file FILE, -key-file FILE, -p12-file FILE&#xA;&#x9;    Customize the output paths.&#xA;&#xA;&#x9;-client&#xA;&#x9;    Generate a certificate for client authentication.&#xA;&#xA;&#x9;-ecdsa&#xA;&#x9;    Generate a certificate with an ECDSA key.&#xA;&#xA;&#x9;-pkcs12&#xA;&#x9;    Generate a &#34;.p12&#34; PKCS #12 file, also know as a &#34;.pfx&#34; file,&#xA;&#x9;    containing certificate and key for legacy applications.&#xA;&#xA;&#x9;-csr CSR&#xA;&#x9;    Generate a certificate based on the supplied CSR. Conflicts with&#xA;&#x9;    all other flags and arguments except -install and -cert-file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You &lt;em&gt;must&lt;/em&gt; place these options before the domain names list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkcert -key-file key.pem -cert-file cert.pem example.com *.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;S/MIME&lt;/h3&gt; &#xA;&lt;p&gt;mkcert automatically generates an S/MIME certificate if one of the supplied names is an email address.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkcert filippo@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mobile devices&lt;/h3&gt; &#xA;&lt;p&gt;For the certificates to be trusted on mobile devices, you will have to install the root CA. It&#39;s the &lt;code&gt;rootCA.pem&lt;/code&gt; file in the folder printed by &lt;code&gt;mkcert -CAROOT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On iOS, you can either use AirDrop, email the CA to yourself, or serve it from an HTTP server. After opening it, you need to &lt;a href=&#34;https://github.com/FiloSottile/mkcert/issues/233#issuecomment-690110809&#34;&gt;install the profile in Settings &amp;gt; Profile Downloaded&lt;/a&gt; and then &lt;a href=&#34;https://support.apple.com/en-nz/HT204477&#34;&gt;enable full trust in it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Android, you will have to install the CA and then enable user roots in the development build of your app. See &lt;a href=&#34;https://stackoverflow.com/a/22040887/749014&#34;&gt;this StackOverflow answer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using the root with Node.js&lt;/h3&gt; &#xA;&lt;p&gt;Node does not use the system root store, so it won&#39;t accept mkcert certificates automatically. Instead, you will have to set the &lt;a href=&#34;https://nodejs.org/api/cli.html#cli_node_extra_ca_certs_file&#34;&gt;&lt;code&gt;NODE_EXTRA_CA_CERTS&lt;/code&gt;&lt;/a&gt; environment variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export NODE_EXTRA_CA_CERTS=&#34;$(mkcert -CAROOT)/rootCA.pem&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changing the location of the CA files&lt;/h3&gt; &#xA;&lt;p&gt;The CA certificate and its key are stored in an application data folder in the user home. You usually don&#39;t have to worry about it, as installation is automated, but the location is printed by &lt;code&gt;mkcert -CAROOT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to manage separate CAs, you can use the environment variable &lt;code&gt;$CAROOT&lt;/code&gt; to set the folder where mkcert will place and look for the local CA files.&lt;/p&gt; &#xA;&lt;h3&gt;Installing the CA on other systems&lt;/h3&gt; &#xA;&lt;p&gt;Installing in the trust store does not require the CA key, so you can export the CA certificate and use mkcert to install it in other machines.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Look for the &lt;code&gt;rootCA.pem&lt;/code&gt; file in &lt;code&gt;mkcert -CAROOT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;copy it to a different machine&lt;/li&gt; &#xA; &lt;li&gt;set &lt;code&gt;$CAROOT&lt;/code&gt; to its directory&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;mkcert -install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Remember that mkcert is meant for development purposes, not production, so it should not be used on end users&#39; machines, and that you should &lt;em&gt;not&lt;/em&gt; export or share &lt;code&gt;rootCA-key.pem&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>redpanda-data/connect</title>
    <updated>2024-06-02T01:48:22Z</updated>
    <id>tag:github.com,2024-06-02:/redpanda-data/connect</id>
    <link href="https://github.com/redpanda-data/connect" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fancy stream processing made operationally mundane&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Redpanda Connect&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/redpanda-data/benthos/v4/public&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/redpanda-data/benthos/v4/public&#34; alt=&#34;godoc for redpanda-data/connect&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/redpanda-data/connect/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/redpanda-data/connect/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Redpanda Connect is a high performance and resilient stream processor, able to connect various &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/inputs/about&#34;&gt;sources&lt;/a&gt; and &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/outputs/about&#34;&gt;sinks&lt;/a&gt; in a range of brokering patterns and perform &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/processors/about&#34;&gt;hydration, enrichments, transformations and filters&lt;/a&gt; on payloads.&lt;/p&gt; &#xA;&lt;p&gt;It comes with a &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/guides/bloblang/about&#34;&gt;powerful mapping language&lt;/a&gt;, is easy to deploy and monitor, and ready to drop into your pipeline either as a static binary or docker image, making it cloud native as heck.&lt;/p&gt; &#xA;&lt;p&gt;Redpanda Connect is declarative, with stream pipelines defined in as few as a single config file, allowing you to specify connectors and a list of processing stages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;input:&#xA;  gcp_pubsub:&#xA;    project: foo&#xA;    subscription: bar&#xA;&#xA;pipeline:&#xA;  processors:&#xA;    - mapping: |&#xA;        root.message = this&#xA;        root.meta.link_count = this.links.length()&#xA;        root.user.age = this.user.age.number()&#xA;&#xA;output:&#xA;  redis_streams:&#xA;    url: tcp://TODO:6379&#xA;    stream: baz&#xA;    max_in_flight: 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delivery Guarantees&lt;/h3&gt; &#xA;&lt;p&gt;Delivery guarantees &lt;a href=&#34;https://youtu.be/QmpBOCvY8mY&#34;&gt;can be a dodgy subject&lt;/a&gt;. Redpanda Connect processes and acknowledges messages using an in-process transaction model with no need for any disk persisted state, so when connecting to at-least-once sources and sinks it&#39;s able to guarantee at-least-once delivery even in the event of crashes, disk corruption, or other unexpected server faults.&lt;/p&gt; &#xA;&lt;p&gt;This behaviour is the default and free of caveats, which also makes deploying and scaling Redpanda Connect much simpler.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Sources &amp;amp; Sinks&lt;/h2&gt; &#xA;&lt;p&gt;AWS (DynamoDB, Kinesis, S3, SQS, SNS), Azure (Blob storage, Queue storage, Table storage), GCP (Pub/Sub, Cloud storage, Big query), Kafka, NATS (JetStream, Streaming), NSQ, MQTT, AMQP 0.91 (RabbitMQ), AMQP 1, Redis (streams, list, pubsub, hashes), Cassandra, Elasticsearch, HDFS, HTTP (server and client, including websockets), MongoDB, SQL (MySQL, PostgreSQL, Clickhouse, MSSQL), and &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/about#components&#34;&gt;you know what just click here to see them all, they don&#39;t fit in a README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;If you want to dive fully into Redpanda Connect then don&#39;t waste your time in this dump, check out the &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/about&#34;&gt;documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For guidance on building your own custom plugins in Go check out &lt;a href=&#34;https://pkg.go.dev/github.com/redpanda-data/benthos/v4/public&#34;&gt;the public APIs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Install on Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -LO https://github.com/redpanda-data/redpanda/releases/latest/download/rpk-linux-amd64.zip&#xA;unzip rpk-linux-amd64.zip -d ~/.local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install redpanda-data/tap/redpanda&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or pull the docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull docker.redpanda.com/redpandadata/redpanda&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information check out the &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/guides/getting_started&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;rpk connect run ./config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, with docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Using a config file&#xA;docker run --rm -v /path/to/your/config.yaml:/connect.yaml docker.redpanda.com/redpandadata/redpanda connect run&#xA;&#xA;# Using a series of -s flags&#xA;docker run --rm -p 4195:4195 docker.redpanda.com/redpandadata/redpanda connect run \&#xA;  -s &#34;input.type=http_server&#34; \&#xA;  -s &#34;output.type=kafka&#34; \&#xA;  -s &#34;output.kafka.addresses=kafka-server:9092&#34; \&#xA;  -s &#34;output.kafka.topic=redpanda_topic&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;h3&gt;Health Checks&lt;/h3&gt; &#xA;&lt;p&gt;Redpanda Connect serves two HTTP endpoints for health checks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/ping&lt;/code&gt; can be used as a liveness probe as it always returns a 200.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/ready&lt;/code&gt; can be used as a readiness probe as it serves a 200 only when both the input and output are connected, otherwise a 503 is returned.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Metrics&lt;/h3&gt; &#xA;&lt;p&gt;Redpanda Connect &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/metrics/about&#34;&gt;exposes lots of metrics&lt;/a&gt; either to Statsd, Prometheus, a JSON HTTP endpoint, &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/metrics/about&#34;&gt;and more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tracing&lt;/h3&gt; &#xA;&lt;p&gt;Redpanda Connect also &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/components/tracers/about&#34;&gt;emits open telemetry tracing events&lt;/a&gt;, which can be used to visualise the processors within a pipeline.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Redpanda Connect provides lots of tools for making configuration discovery, debugging and organisation easy. You can &lt;a href=&#34;https://docs.redpanda.com/redpanda-connect/configuration/about&#34;&gt;read about them here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;Build with Go (any &lt;a href=&#34;https://go.dev/dl/&#34;&gt;currently supported version&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone git@github.com:redpanda-data/connect&#xA;cd connect&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Lint&lt;/h2&gt; &#xA;&lt;p&gt;Redpanda Connect uses &lt;a href=&#34;https://golangci-lint.run/&#34;&gt;golangci-lint&lt;/a&gt; for linting, which you can install with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then run it with &lt;code&gt;make lint&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s pretty easy to write your own custom plugins for Redpanda Connect in Go, for information check out &lt;a href=&#34;https://pkg.go.dev/github.com/redpanda-data/benthos/v4/public&#34;&gt;the API docs&lt;/a&gt;, and for inspiration there&#39;s an &lt;a href=&#34;https://github.com/benthosdev/benthos-plugin-example&#34;&gt;example repo&lt;/a&gt; demonstrating a variety of plugin implementations.&lt;/p&gt; &#xA;&lt;h2&gt;Extra Plugins&lt;/h2&gt; &#xA;&lt;p&gt;By default Redpanda Connect does not build with components that require linking to external libraries, such as the &lt;code&gt;zmq4&lt;/code&gt; input and outputs. If you wish to build Redpanda Connect locally with these dependencies then set the build tag &lt;code&gt;x_benthos_extra&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# With go&#xA;go install -tags &#34;x_benthos_extra&#34; github.com/redpanda-data/connect/v4/cmd/redpanda-connect@latest&#xA;&#xA;# Using make&#xA;make TAGS=x_benthos_extra&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this tag may change or be broken out into granular tags for individual components outside of major version releases. If you attempt a build and these dependencies are not present you&#39;ll see error messages such as &lt;code&gt;ld: library not found for -lzmq&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Builds&lt;/h2&gt; &#xA;&lt;p&gt;There&#39;s a multi-stage &lt;code&gt;Dockerfile&lt;/code&gt; for creating a Redpanda Connect docker image which results in a minimal image from scratch. You can build it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm \&#xA;&#x9;-v /path/to/your/benthos.yaml:/config.yaml \&#xA;&#x9;-v /tmp/data:/data \&#xA;&#x9;-p 4195:4195 \&#xA;&#x9;redpanda-connect -c /config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome, please &lt;a href=&#34;https://raw.githubusercontent.com/redpanda-data/connect/main/CONTRIBUTING.md&#34;&gt;read the guidelines&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shadow1ng/fscan</title>
    <updated>2024-06-02T01:48:22Z</updated>
    <id>tag:github.com,2024-06-02:/shadow1ng/fscan</id>
    <link href="https://github.com/shadow1ng/fscan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‰∏ÄÊ¨æÂÜÖÁΩëÁªºÂêàÊâ´ÊèèÂ∑•ÂÖ∑ÔºåÊñπ‰æø‰∏ÄÈîÆËá™Âä®Âåñ„ÄÅÂÖ®Êñπ‰ΩçÊºèÊâ´Êâ´Êèè„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fscan&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;1. ÁÆÄ‰ªã&lt;/h1&gt; &#xA;&lt;p&gt;‰∏ÄÊ¨æÂÜÖÁΩëÁªºÂêàÊâ´ÊèèÂ∑•ÂÖ∑ÔºåÊñπ‰æø‰∏ÄÈîÆËá™Âä®Âåñ„ÄÅÂÖ®Êñπ‰ΩçÊºèÊâ´Êâ´Êèè„ÄÇ&lt;br&gt; ÊîØÊåÅ‰∏ªÊú∫Â≠òÊ¥ªÊé¢Êµã„ÄÅÁ´ØÂè£Êâ´Êèè„ÄÅÂ∏∏ËßÅÊúçÂä°ÁöÑÁàÜÁ†¥„ÄÅms17010„ÄÅredisÊâπÈáèÂÜôÂÖ¨Èí•„ÄÅËÆ°Âàí‰ªªÂä°ÂèçÂºπshell„ÄÅËØªÂèñwinÁΩëÂç°‰ø°ÊÅØ„ÄÅwebÊåáÁ∫πËØÜÂà´„ÄÅwebÊºèÊ¥ûÊâ´Êèè„ÄÅnetbiosÊé¢Êµã„ÄÅÂüüÊéßËØÜÂà´Á≠âÂäüËÉΩ„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;2. ‰∏ªË¶ÅÂäüËÉΩ&lt;/h1&gt; &#xA;&lt;p&gt;1.‰ø°ÊÅØÊêúÈõÜ:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Â≠òÊ¥ªÊé¢Êµã(icmp)&lt;/li&gt; &#xA; &lt;li&gt;Á´ØÂè£Êâ´Êèè&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2.ÁàÜÁ†¥ÂäüËÉΩ:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂêÑÁ±ªÊúçÂä°ÁàÜÁ†¥(ssh„ÄÅsmb„ÄÅrdpÁ≠â)&lt;/li&gt; &#xA; &lt;li&gt;Êï∞ÊçÆÂ∫ìÂØÜÁ†ÅÁàÜÁ†¥(mysql„ÄÅmssql„ÄÅredis„ÄÅpsql„ÄÅoracleÁ≠â)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;3.Á≥ªÁªü‰ø°ÊÅØ„ÄÅÊºèÊ¥ûÊâ´Êèè:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;netbiosÊé¢Êµã„ÄÅÂüüÊéßËØÜÂà´&lt;/li&gt; &#xA; &lt;li&gt;Ëé∑ÂèñÁõÆÊ†áÁΩëÂç°‰ø°ÊÅØ&lt;/li&gt; &#xA; &lt;li&gt;È´òÂç±ÊºèÊ¥ûÊâ´Êèè(ms17010Á≠â)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;4.WebÊé¢ÊµãÂäüËÉΩ:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;webtitleÊé¢Êµã&lt;/li&gt; &#xA; &lt;li&gt;webÊåáÁ∫πËØÜÂà´(Â∏∏ËßÅcms„ÄÅoaÊ°ÜÊû∂Á≠â)&lt;/li&gt; &#xA; &lt;li&gt;webÊºèÊ¥ûÊâ´Êèè(weblogic„ÄÅst2Á≠â,ÊîØÊåÅxrayÁöÑpoc)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;5.ÊºèÊ¥ûÂà©Áî®:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;redisÂÜôÂÖ¨Èí•ÊàñÂÜôËÆ°Âàí‰ªªÂä°&lt;/li&gt; &#xA; &lt;li&gt;sshÂëΩ‰ª§ÊâßË°å&lt;/li&gt; &#xA; &lt;li&gt;ms17017Âà©Áî®(Ê§çÂÖ•shellcode),Â¶ÇÊ∑ªÂä†Áî®Êà∑Á≠â&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;6.ÂÖ∂‰ªñÂäüËÉΩ:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êñá‰ª∂‰øùÂ≠ò&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;3. ‰ΩøÁî®ËØ¥Êòé&lt;/h1&gt; &#xA;&lt;p&gt;ÁÆÄÂçïÁî®Ê≥ï&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fscan.exe -h 192.168.1.1/24  (ÈªòËÆ§‰ΩøÁî®ÂÖ®ÈÉ®Ê®°Âùó)&#xA;fscan.exe -h 192.168.1.1/16  (BÊÆµÊâ´Êèè)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂÖ∂‰ªñÁî®Ê≥ï&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fscan.exe -h 192.168.1.1/24 -np -no -nopoc(Ë∑≥ËøáÂ≠òÊ¥ªÊ£ÄÊµã „ÄÅ‰∏ç‰øùÂ≠òÊñá‰ª∂„ÄÅË∑≥Ëøáweb pocÊâ´Êèè)&#xA;fscan.exe -h 192.168.1.1/24 -rf id_rsa.pub (redis ÂÜôÂÖ¨Èí•)&#xA;fscan.exe -h 192.168.1.1/24 -rs 192.168.1.1:6666 (redis ËÆ°Âàí‰ªªÂä°ÂèçÂºπshell)&#xA;fscan.exe -h 192.168.1.1/24 -c whoami (ssh ÁàÜÁ†¥ÊàêÂäüÂêéÔºåÂëΩ‰ª§ÊâßË°å)&#xA;fscan.exe -h 192.168.1.1/24 -m ssh -p 2222 (ÊåáÂÆöÊ®°ÂùósshÂíåÁ´ØÂè£)&#xA;fscan.exe -h 192.168.1.1/24 -pwdf pwd.txt -userf users.txt (Âä†ËΩΩÊåáÂÆöÊñá‰ª∂ÁöÑÁî®Êà∑Âêç„ÄÅÂØÜÁ†ÅÊù•ËøõË°åÁàÜÁ†¥)&#xA;fscan.exe -h 192.168.1.1/24 -o /tmp/1.txt (ÊåáÂÆöÊâ´ÊèèÁªìÊûú‰øùÂ≠òË∑ØÂæÑ,ÈªòËÆ§‰øùÂ≠òÂú®ÂΩìÂâçË∑ØÂæÑ) &#xA;fscan.exe -h 192.168.1.1/8  (AÊÆµÁöÑ192.x.x.1Âíå192.x.x.254,Êñπ‰æøÂø´ÈÄüÊü•ÁúãÁΩëÊÆµ‰ø°ÊÅØ )&#xA;fscan.exe -h 192.168.1.1/24 -m smb -pwd password (smbÂØÜÁ†ÅÁ¢∞Êíû)&#xA;fscan.exe -h 192.168.1.1/24 -m ms17010 (ÊåáÂÆöÊ®°Âùó)&#xA;fscan.exe -hf ip.txt  (‰ª•Êñá‰ª∂ÂØºÂÖ•)&#xA;fscan.exe -u http://baidu.com -proxy 8080 (Êâ´ÊèèÂçï‰∏™url,Âπ∂ËÆæÁΩÆhttp‰ª£ÁêÜ http://127.0.0.1:8080)&#xA;fscan.exe -h 192.168.1.1/24 -nobr -nopoc (‰∏çËøõË°åÁàÜÁ†¥,‰∏çÊâ´Web poc,‰ª•ÂáèÂ∞ëÊµÅÈáè)&#xA;fscan.exe -h 192.168.1.1/24 -pa 3389 (Âú®ÂéüÂü∫Á°Ä‰∏ä,Âä†ÂÖ•3389-&amp;gt;rdpÊâ´Êèè)&#xA;fscan.exe -h 192.168.1.1/24 -socks5 127.0.0.1:1080 (Âè™ÊîØÊåÅÁÆÄÂçïtcpÂäüËÉΩÁöÑ‰ª£ÁêÜ,ÈÉ®ÂàÜÂäüËÉΩÁöÑÂ∫ì‰∏çÊîØÊåÅËÆæÁΩÆ‰ª£ÁêÜ)&#xA;fscan.exe -h 192.168.1.1/24 -m ms17010 -sc add (ÂÜÖÁΩÆÊ∑ªÂä†Áî®Êà∑Á≠âÂäüËÉΩ,Âè™ÈÄÇÁî®‰∫éÂ§áÈÄâÂ∑•ÂÖ∑,Êõ¥Êé®ËçêÂÖ∂‰ªñms17010ÁöÑ‰∏ìÈ°πÂà©Áî®Â∑•ÂÖ∑)&#xA;fscan.exe -h 192.168.1.1/24 -m smb2 -user admin -hash xxxxx (pth hashÁ¢∞Êíû,xxxx:ntlmhash,Â¶Ç32ed87bdb5fdc5e9cba88547376818d4)&#xA;fscan.exe -h 192.168.1.1/24 -m wmiexec -user admin -pwd password -c xxxxx (wmiexecÊó†ÂõûÊòæÂëΩ‰ª§ÊâßË°å)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÁºñËØëÂëΩ‰ª§&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go build -ldflags=&#34;-s -w &#34; -trimpath main.go&#xA;upx -9 fscan.exe (ÂèØÈÄâ,ÂéãÁº©‰ΩìÁßØ)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;archÁî®Êà∑ÂÆâË£Ö&lt;br&gt; &lt;code&gt;yay -S fscan-git ÊàñËÄÖ paru -S fscan-git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÂÆåÊï¥ÂèÇÊï∞&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -c string&#xA;        sshÂëΩ‰ª§ÊâßË°å&#xA;  -cookie string&#xA;        ËÆæÁΩÆcookie&#xA;  -debug int&#xA;        Â§ö‰πÖÊ≤°ÂìçÂ∫î,Â∞±ÊâìÂç∞ÂΩìÂâçËøõÂ∫¶(default 60)&#xA;  -domain string&#xA;        smbÁàÜÁ†¥Ê®°ÂùóÊó∂,ËÆæÁΩÆÂüüÂêç&#xA;  -h string&#xA;        ÁõÆÊ†áip: 192.168.11.11 | 192.168.11.11-255 | 192.168.11.11,192.168.11.12&#xA;  -hf string&#xA;        ËØªÂèñÊñá‰ª∂‰∏≠ÁöÑÁõÆÊ†á&#xA;  -hn string&#xA;        Êâ´ÊèèÊó∂,Ë¶ÅË∑≥ËøáÁöÑip: -hn 192.168.1.1/24&#xA;  -m string&#xA;        ËÆæÁΩÆÊâ´ÊèèÊ®°Âºè: -m ssh (default &#34;all&#34;)&#xA;  -no&#xA;        Êâ´ÊèèÁªìÊûú‰∏ç‰øùÂ≠òÂà∞Êñá‰ª∂‰∏≠&#xA;  -nobr&#xA;        Ë∑≥Ëøásql„ÄÅftp„ÄÅsshÁ≠âÁöÑÂØÜÁ†ÅÁàÜÁ†¥&#xA;  -nopoc&#xA;        Ë∑≥Ëøáweb pocÊâ´Êèè&#xA;  -np&#xA;        Ë∑≥ËøáÂ≠òÊ¥ªÊé¢Êµã&#xA;  -num int&#xA;        web poc ÂèëÂåÖÈÄüÁéá  (default 20)&#xA;  -o string&#xA;        Êâ´ÊèèÁªìÊûú‰øùÂ≠òÂà∞Âì™ (default &#34;result.txt&#34;)&#xA;  -p string&#xA;        ËÆæÁΩÆÊâ´ÊèèÁöÑÁ´ØÂè£: 22 | 1-65535 | 22,80,3306 (default &#34;21,22,80,81,135,139,443,445,1433,3306,5432,6379,7001,8000,8080,8089,9000,9200,11211,27017&#34;)&#xA;  -pa string&#xA;        Êñ∞Â¢ûÈúÄË¶ÅÊâ´ÊèèÁöÑÁ´ØÂè£,-pa 3389 (‰ºöÂú®ÂéüÊúâÁ´ØÂè£ÂàóË°®Âü∫Á°Ä‰∏ä,Êñ∞Â¢ûËØ•Á´ØÂè£)&#xA;  -path string&#xA;        fcgi„ÄÅsmb romote file path&#xA;  -ping&#xA;        ‰ΩøÁî®ping‰ª£ÊõøicmpËøõË°åÂ≠òÊ¥ªÊé¢Êµã&#xA;  -pn string&#xA;        Êâ´ÊèèÊó∂Ë¶ÅË∑≥ËøáÁöÑÁ´ØÂè£,as: -pn 445&#xA;  -pocname string&#xA;        ÊåáÂÆöweb pocÁöÑÊ®°Á≥äÂêçÂ≠ó, -pocname weblogic&#xA;  -proxy string&#xA;        ËÆæÁΩÆ‰ª£ÁêÜ, -proxy http://127.0.0.1:8080&#xA;  -user string&#xA;        ÊåáÂÆöÁàÜÁ†¥Êó∂ÁöÑÁî®Êà∑Âêç&#xA;  -userf string&#xA;        ÊåáÂÆöÁàÜÁ†¥Êó∂ÁöÑÁî®Êà∑ÂêçÊñá‰ª∂&#xA;  -pwd string&#xA;        ÊåáÂÆöÁàÜÁ†¥Êó∂ÁöÑÂØÜÁ†Å&#xA;  -pwdf string&#xA;        ÊåáÂÆöÁàÜÁ†¥Êó∂ÁöÑÂØÜÁ†ÅÊñá‰ª∂&#xA;  -rf string&#xA;        ÊåáÂÆöredisÂÜôÂÖ¨Èí•Áî®Ê®°ÂùóÁöÑÊñá‰ª∂ (as: -rf id_rsa.pub)&#xA;  -rs string&#xA;        redisËÆ°Âàí‰ªªÂä°ÂèçÂºπshellÁöÑipÁ´ØÂè£ (as: -rs 192.168.1.1:6666)&#xA;  -silent&#xA;        ÈùôÈªòÊâ´Êèè,ÈÄÇÂêàcsÊâ´ÊèèÊó∂‰∏çÂõûÊòæ&#xA;  -sshkey string&#xA;        sshËøûÊé•Êó∂,ÊåáÂÆösshÁßÅÈí•&#xA;  -t int&#xA;        Êâ´ÊèèÁ∫øÁ®ã (default 600)&#xA;  -time int&#xA;        Á´ØÂè£Êâ´ÊèèË∂ÖÊó∂Êó∂Èó¥ (default 3)&#xA;  -u string&#xA;        ÊåáÂÆöUrlÊâ´Êèè&#xA;  -uf string&#xA;        ÊåáÂÆöUrlÊñá‰ª∂Êâ´Êèè&#xA;  -wt int&#xA;        webËÆøÈóÆË∂ÖÊó∂Êó∂Èó¥ (default 5)&#xA;  -pocpath string&#xA;        ÊåáÂÆöpocË∑ØÂæÑ&#xA;  -usera string&#xA;        Âú®ÂéüÊúâÁî®Êà∑Â≠óÂÖ∏Âü∫Á°Ä‰∏ä,Êñ∞Â¢ûÊñ∞Áî®Êà∑&#xA;  -pwda string&#xA;        Âú®ÂéüÊúâÂØÜÁ†ÅÂ≠óÂÖ∏Âü∫Á°Ä‰∏ä,Â¢ûÂä†Êñ∞ÂØÜÁ†Å&#xA;  -socks5&#xA;        ÊåáÂÆösocks5‰ª£ÁêÜ (as: -socks5  socks5://127.0.0.1:1080)&#xA;  -sc &#xA;        ÊåáÂÆöms17010Âà©Áî®Ê®°Âùóshellcode,ÂÜÖÁΩÆÊ∑ªÂä†Áî®Êà∑Á≠âÂäüËÉΩ (as: -sc add)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;4. ËøêË°åÊà™Âõæ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x (ÂÖ®ÂäüËÉΩ„ÄÅms17010„ÄÅËØªÂèñÁΩëÂç°‰ø°ÊÅØ)&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x -rf id_rsa.pub (redis ÂÜôÂÖ¨Èí•)&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x -c &#34;whoami;id&#34; (ssh ÂëΩ‰ª§)&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x -p80 -proxy http://127.0.0.1:8080 ‰∏ÄÈîÆÊîØÊåÅxrayÁöÑpoc&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/2020-12-12-13-34-44.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x -p 139 (netbiosÊé¢Êµã„ÄÅÂüüÊéßËØÜÂà´,‰∏ãÂõæÁöÑ[+]DC‰ª£Ë°®ÂüüÊéß)&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/netbios.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;go run .\main.go -h 192.168.x.x/24 -m netbios(-m netbiosÊó∂,Êâç‰ºöÊòæÁ§∫ÂÆåÊï¥ÁöÑnetbios‰ø°ÊÅØ)&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/netbios1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;go run .\main.go -h 192.0.0.0/8 -m icmp(Êé¢ÊµãÊØè‰∏™CÊÆµÁöÑÁΩëÂÖ≥ÂíåÊï∞‰∏™ÈöèÊú∫IP,Âπ∂ÁªüËÆ°top 10 B„ÄÅCÊÆµÂ≠òÊ¥ªÊï∞Èáè)&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/live.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;5. ÂÖçË¥£Â£∞Êòé&lt;/h1&gt; &#xA;&lt;p&gt;Êú¨Â∑•ÂÖ∑‰ªÖÈù¢Âêë&lt;strong&gt;ÂêàÊ≥ïÊéàÊùÉ&lt;/strong&gt;ÁöÑ‰ºÅ‰∏öÂÆâÂÖ®Âª∫ËÆæË°å‰∏∫ÔºåÂ¶ÇÊÇ®ÈúÄË¶ÅÊµãËØïÊú¨Â∑•ÂÖ∑ÁöÑÂèØÁî®ÊÄßÔºåËØ∑Ëá™Ë°åÊê≠Âª∫Èù∂Êú∫ÁéØÂ¢É„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰∏∫ÈÅøÂÖçË¢´ÊÅ∂ÊÑè‰ΩøÁî®ÔºåÊú¨È°πÁõÆÊâÄÊúâÊî∂ÂΩïÁöÑpocÂùá‰∏∫ÊºèÊ¥ûÁöÑÁêÜËÆ∫Âà§Êñ≠Ôºå‰∏çÂ≠òÂú®ÊºèÊ¥ûÂà©Áî®ËøáÁ®ãÔºå‰∏ç‰ºöÂØπÁõÆÊ†áÂèëËµ∑ÁúüÂÆûÊîªÂáªÂíåÊºèÊ¥ûÂà©Áî®„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Âú®‰ΩøÁî®Êú¨Â∑•ÂÖ∑ËøõË°åÊ£ÄÊµãÊó∂ÔºåÊÇ®Â∫îÁ°Æ‰øùËØ•Ë°å‰∏∫Á¨¶ÂêàÂΩìÂú∞ÁöÑÊ≥ïÂæãÊ≥ïËßÑÔºåÂπ∂‰∏îÂ∑≤ÁªèÂèñÂæó‰∫ÜË∂≥Â§üÁöÑÊéàÊùÉ„ÄÇ&lt;strong&gt;ËØ∑ÂãøÂØπÈùûÊéàÊùÉÁõÆÊ†áËøõË°åÊâ´Êèè„ÄÇ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Â¶ÇÊÇ®Âú®‰ΩøÁî®Êú¨Â∑•ÂÖ∑ÁöÑËøáÁ®ã‰∏≠Â≠òÂú®‰ªª‰ΩïÈùûÊ≥ïË°å‰∏∫ÔºåÊÇ®ÈúÄËá™Ë°åÊâøÊãÖÁõ∏Â∫îÂêéÊûúÔºåÊàë‰ª¨Â∞Ü‰∏çÊâøÊãÖ‰ªª‰ΩïÊ≥ïÂæãÂèäËøûÂ∏¶Ë¥£‰ªª„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Âú®ÂÆâË£ÖÂπ∂‰ΩøÁî®Êú¨Â∑•ÂÖ∑ÂâçÔºåËØ∑ÊÇ®&lt;strong&gt;Âä°ÂøÖÂÆ°ÊÖéÈòÖËØª„ÄÅÂÖÖÂàÜÁêÜËß£ÂêÑÊù°Ê¨æÂÜÖÂÆπ&lt;/strong&gt;ÔºåÈôêÂà∂„ÄÅÂÖçË¥£Êù°Ê¨æÊàñËÄÖÂÖ∂‰ªñÊ∂âÂèäÊÇ®ÈáçÂ§ßÊùÉÁõäÁöÑÊù°Ê¨æÂèØËÉΩ‰ºö‰ª•Âä†Á≤ó„ÄÅÂä†‰∏ãÂàíÁ∫øÁ≠âÂΩ¢ÂºèÊèêÁ§∫ÊÇ®ÈáçÁÇπÊ≥®ÊÑè„ÄÇ Èô§ÈùûÊÇ®Â∑≤ÂÖÖÂàÜÈòÖËØª„ÄÅÂÆåÂÖ®ÁêÜËß£Âπ∂Êé•ÂèóÊú¨ÂçèËÆÆÊâÄÊúâÊù°Ê¨æÔºåÂê¶ÂàôÔºåËØ∑ÊÇ®‰∏çË¶ÅÂÆâË£ÖÂπ∂‰ΩøÁî®Êú¨Â∑•ÂÖ∑„ÄÇÊÇ®ÁöÑ‰ΩøÁî®Ë°å‰∏∫ÊàñËÄÖÊÇ®‰ª•ÂÖ∂‰ªñ‰ªª‰ΩïÊòéÁ§∫ÊàñËÄÖÈªòÁ§∫ÊñπÂºèË°®Á§∫Êé•ÂèóÊú¨ÂçèËÆÆÁöÑÔºåÂç≥ËßÜ‰∏∫ÊÇ®Â∑≤ÈòÖËØªÂπ∂ÂêåÊÑèÊú¨ÂçèËÆÆÁöÑÁ∫¶Êùü„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;6. 404StarLink 2.0 - Galaxy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/knownsec/404StarLink-Project/raw/master/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;fscan ÊòØ 404Team &lt;a href=&#34;https://github.com/knownsec/404StarLink2.0-Galaxy&#34;&gt;ÊòüÈìæËÆ°Âàí2.0&lt;/a&gt; ‰∏≠ÁöÑ‰∏ÄÁéØÔºåÂ¶ÇÊûúÂØπfscan Êúâ‰ªª‰ΩïÁñëÈóÆÂèàÊàñÊòØÊÉ≥Ë¶ÅÊâæÂ∞è‰ºô‰º¥‰∫§ÊµÅÔºåÂèØ‰ª•ÂèÇËÄÉÊòüÈìæËÆ°ÂàíÁöÑÂä†Áæ§ÊñπÂºè„ÄÇ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/knownsec/404StarLink2.0-Galaxy#community&#34;&gt;https://github.com/knownsec/404StarLink2.0-Galaxy#community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ÊºîÁ§∫ËßÜÈ¢ë&lt;a href=&#34;https://www.bilibili.com/video/BV1Cv4y1R72M&#34;&gt;„ÄêÂÆâÂÖ®Â∑•ÂÖ∑„Äë5Â§ßÂäüËÉΩÔºå‰∏ÄÈîÆÂåñÂÜÖÁΩëÊâ´ÊèèÁ•ûÂô®‚Äî‚Äî404ÊòüÈìæËÆ°Âàífscan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;7. Star Chart&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/shadow1ng/fscan&#34;&gt;&lt;img src=&#34;https://starchart.cc/shadow1ng/fscan.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;8. ÊçêËµ†&lt;/h1&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ËßâÂæóËøô‰∏™È°πÁõÆÂØπ‰Ω†ÊúâÂ∏ÆÂä©Ôºå‰Ω†ÂèØ‰ª•ËØ∑‰ΩúËÄÖÂñùÈ•ÆÊñôüçπ &lt;a href=&#34;https://raw.githubusercontent.com/shadow1ng/fscan/main/image/sponsor.png&#34;&gt;ÁÇπÊàë&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;9. ÂèÇËÄÉÈìæÊé•&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Adminisme/ServerScan&#34;&gt;https://github.com/Adminisme/ServerScan&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/netxfly/x-crack&#34;&gt;https://github.com/netxfly/x-crack&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/hack2fun/Gscan&#34;&gt;https://github.com/hack2fun/Gscan&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/k8gege/LadonGo&#34;&gt;https://github.com/k8gege/LadonGo&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/jjf012/gopoc&#34;&gt;https://github.com/jjf012/gopoc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;10. ÊúÄËøëÊõ¥Êñ∞&lt;/h1&gt; &#xA;&lt;p&gt;[+] 2023/11/13 Âä†ÂÖ•ÊéßÂà∂Âè∞È¢úËâ≤ËæìÂá∫(ÂèØ-nocolor)„ÄÅ‰øùÂ≠òÊñá‰ª∂jsonÁªìÊûÑ(-json)„ÄÅ‰øÆÊîπtlsÊúÄ‰ΩéÁâàÊú¨‰∏∫1.0„ÄÅÁ´ØÂè£ÂàÜÁªÑ(-p db,web,service)„ÄÇ&lt;br&gt; [+] 2022/11/19 Âä†ÂÖ•hashÁ¢∞Êíû„ÄÅwmiexecÊó†ÂõûÊòæÂëΩ‰ª§ÊâßË°å„ÄÇ&lt;br&gt; [+] 2022/7/14 -hf ÊîØÊåÅhost:portÂíåhost/xx:portÊ†ºÂºè,rule.Search Ê≠£ÂàôÂåπÈÖçËåÉÂõ¥‰ªébodyÊîπÊàêheader+body,-nobr‰∏çÂÜçÂåÖÂê´-nopoc.‰ºòÂåñwebtitle ËæìÂá∫Ê†ºÂºè„ÄÇ&lt;br&gt; [+] 2022/7/6 Âä†ÂÖ•ÊâãÂ∑•gcÂõûÊî∂,Â∞ùËØïËäÇÁúÅÊó†Áî®ÂÜÖÂ≠ò„ÄÇ -url ÊîØÊåÅÈÄóÂè∑ÈöîÂºÄ„ÄÇ ‰øÆÂ§ç‰∏Ä‰∏™pocÊ®°Âùóbug„ÄÇ-nobr‰∏çÂÜçÂåÖÂê´-nopoc„ÄÇ&lt;br&gt; [+] 2022/7/2 Âä†Âº∫poc fuzzÊ®°Âùó,ÊîØÊåÅË∑ëÂ§á‰ªΩÊñá‰ª∂„ÄÅÁõÆÂΩï„ÄÅshiro-key(ÈªòËÆ§Ë∑ë10key,ÂèØÁî®-fullÂèÇÊï∞Ë∑ë100key)Á≠â„ÄÇÊñ∞Â¢ûms17017Âà©Áî®(‰ΩøÁî®ÂèÇÊï∞: -sc add),ÂèØÂú®ms17010-exp.goËá™ÂÆö‰πâshellcode,ÂÜÖÁΩÆÊ∑ªÂä†Áî®Êà∑Á≠âÂäüËÉΩ„ÄÇ&lt;br&gt; Êñ∞Â¢ûpoc„ÄÅÊåáÁ∫π„ÄÇÊîØÊåÅsocks5‰ª£ÁêÜ„ÄÇÂõ†bodyÊåáÁ∫πÊõ¥ÂÖ®,ÈªòËÆ§‰∏çÂÜçË∑ëicoÂõæÊ†á„ÄÇ&lt;br&gt; [+] 2022/4/20 pocÊ®°ÂùóÂä†ÂÖ•ÊåáÂÆöÁõÆÂΩïÊàñÊñá‰ª∂ -pocpath pocË∑ØÂæÑ,Á´ØÂè£ÂèØ‰ª•ÊåáÂÆöÊñá‰ª∂-portf port.txt,rdpÊ®°ÂùóÂä†ÂÖ•Â§öÁ∫øÁ®ãÁàÜÁ†¥demo, -br xxÊåáÂÆöÁ∫øÁ®ã„ÄÇ&lt;br&gt; [+] 2022/2/25 Êñ∞Â¢û-m webonly,Ë∑≥ËøáÁ´ØÂè£Êâ´Êèè,Áõ¥Êé•ËÆøÈóÆhttp„ÄÇËá¥Ë∞¢@AgeloVito&lt;br&gt; [+] 2022/1/11 Êñ∞Â¢ûoracleÂØÜÁ†ÅÁàÜÁ†¥„ÄÇ&lt;br&gt; [+] 2022/1/7 Êâ´ip/8Êó∂,ÈªòËÆ§‰ºöÊâ´ÊØè‰∏™CÊÆµÁöÑÁΩëÂÖ≥ÂíåÊï∞‰∏™ÈöèÊú∫IP,Êé®ËçêÂèÇÊï∞:-h ip/8 -m icmp.Êñ∞Â¢ûLiveTopÂäüËÉΩ,Ê£ÄÊµãÂ≠òÊ¥ªÊó∂,ÈªòËÆ§‰ºöËæìÂá∫top10ÁöÑB„ÄÅCÊÆµipÂ≠òÊ¥ªÊï∞Èáè„ÄÇ&lt;br&gt; [+] 2021/12/7 Êñ∞Â¢ûrdpÊâ´Êèè,Êñ∞Â¢ûÊ∑ªÂä†Á´ØÂè£ÂèÇÊï∞-pa 3389(‰ºöÂú®ÂéüÊúâÁ´ØÂè£ÂàóË°®Âü∫Á°Ä‰∏ä,Êñ∞Â¢ûËØ•Á´ØÂè£)„ÄÇ&lt;br&gt; [+] 2021/12/1 ‰ºòÂåñxrayËß£ÊûêÊ®°Âùó,ÊîØÊåÅgroups„ÄÅÊñ∞Â¢ûpoc,Âä†ÂÖ•httpsÂà§Êñ≠(tlsÊè°ÊâãÂåÖ),‰ºòÂåñipËß£ÊûêÊ®°Âùó(ÊîØÊåÅÊâÄÊúâip/xx),Â¢ûÂä†ÁàÜÁ†¥ÂÖ≥Èó≠ÂèÇÊï∞ -nobr,Ê∑ªÂä†Ë∑≥ËøáÊüê‰∫õipÊâ´ÊèèÂäüËÉΩ -hn 192.168.1.1,Ê∑ªÂä†Ë∑≥ËøáÊüê‰∫õÁ´ØÂè£Êâ´ÊèèÂäüËÉΩ-pn 21,445,Â¢ûÂä†Êâ´ÊèèdockerÊú™ÊéàÊùÉÊºèÊ¥û„ÄÇ&lt;br&gt; [+] 2021/6/18 ÊîπÂñÑ‰∏Ä‰∏ãpocÁöÑÊú∫Âà∂ÔºåÂ¶ÇÊûúËØÜÂà´Âá∫ÊåáÁ∫π‰ºöÊ†πÊçÆÊåáÁ∫π‰ø°ÊÅØÂèëÈÄÅpocÔºåÂ¶ÇÊûúÊ≤°ÊúâËØÜÂà´Âà∞ÊåáÁ∫πÊâç‰ºöÊääÊâÄÊúâpocÊâì‰∏ÄÈÅç„ÄÇ&lt;br&gt; [+] 2021/5/29 Âä†ÂÖ•fcgiÂçèËÆÆÊú™ÊéàÊùÉÂëΩ‰ª§ÊâßË°åÊâ´Êèè,‰ºòÂåñpocÊ®°Âùó,‰ºòÂåñicmpÊ®°Âùó,sshÊ®°ÂùóÂä†ÂÖ•ÁßÅÈí•ËøûÊé•„ÄÇ&lt;br&gt; [+] 2021/5/15 Êñ∞Â¢ûwin03ÁâàÊú¨(Âà†Âáè‰∫Üxray_pocÊ®°Âùó),Â¢ûÂä†-silent ÈùôÈªòÊâ´ÊèèÊ®°Âºè,Ê∑ªÂä†webÊåáÁ∫π,‰øÆÂ§çnetbiosÊ®°ÂùóÊï∞ÁªÑË∂äÁïå,Ê∑ªÂä†‰∏Ä‰∏™CheckErrsÂ≠óÂÖ∏,webtitle Â¢ûÂä†gzipËß£Á†Å„ÄÇ&lt;br&gt; [+] 2021/5/6 Êõ¥Êñ∞modÂ∫ì„ÄÅpoc„ÄÅÊåáÁ∫π„ÄÇ‰øÆÊîπÁ∫øÁ®ãÂ§ÑÁêÜÊú∫Âà∂„ÄÅnetbiosÊé¢Êµã„ÄÅÂüüÊéßËØÜÂà´Ê®°Âùó„ÄÅwebtitleÁºñÁ†ÅÊ®°ÂùóÁ≠â„ÄÇ&lt;br&gt; [+] 2021/4/22 ‰øÆÊîπwebtitleÊ®°Âùó,Âä†ÂÖ•gbkËß£Á†Å„ÄÇ&lt;br&gt; [+] 2021/4/21 Âä†ÂÖ•netbiosÊé¢Êµã„ÄÅÂüüÊéßËØÜÂà´„ÄÇ&lt;br&gt; [+] 2021/3/4 ÊîØÊåÅ-u urlÊàñËÄÖ-uf url.txt,ÂØπurlËøõË°åÊâπÈáèÊâ´Êèè„ÄÇ&lt;br&gt; [+] 2021/2/25 ‰øÆÊîπyamlËß£ÊûêÊ®°Âùó,ÊîØÊåÅÂØÜÁ†ÅÁàÜÁ†¥,Â¶ÇtomcatÂº±Âè£‰ª§„ÄÇyaml‰∏≠Êñ∞Â¢ûsetsÂèÇÊï∞,Á±ªÂûã‰∏∫Êï∞ÁªÑ,Áî®‰∫éÂ≠òÊîæÂØÜÁ†Å,ÂÖ∑‰ΩìÁúãtomcat-manager-week.yaml„ÄÇ&lt;br&gt; [+] 2021/2/8 Â¢ûÂä†ÊåáÁ∫πËØÜÂà´ÂäüËÉΩ,ÂèØËØÜÂà´Â∏∏ËßÅCMS„ÄÅÊ°ÜÊû∂,Â¶ÇËá¥ËøúOA„ÄÅÈÄöËææOAÁ≠â„ÄÇ&lt;br&gt; [+] 2021/2/5 ‰øÆÊîπicmpÂèëÂåÖÊ®°Âºè,Êõ¥ÈÄÇÂêàÂ§ßËßÑÊ®°Êé¢Êµã„ÄÇ&lt;br&gt; ‰øÆÊîπÊä•ÈîôÊèêÁ§∫,-debugÊó∂,Â¶ÇÊûú10ÁßíÂÜÖÊ≤°ÊúâÊñ∞ÁöÑËøõÂ±ï,ÊØèÈöî10ÁßíÂ∞±‰ºöÊâìÂç∞‰∏Ä‰∏ãÂΩìÂâçËøõÂ∫¶„ÄÇ&lt;br&gt; [+] 2020/12/12 Â∑≤Âä†ÂÖ•yamlËß£ÊûêÂºïÊìé,ÊîØÊåÅxrayÁöÑPoc,ÈªòËÆ§‰ΩøÁî®ÊâÄÊúâPoc(Â∑≤ÂØπxrayÁöÑpocËøõË°å‰∫ÜÁ≠õÈÄâ),ÂèØ‰ª•‰ΩøÁî®-pocname weblogic,Âè™‰ΩøÁî®ÊüêÁßçÊàñÊüê‰∏™poc„ÄÇÈúÄË¶ÅgoÁâàÊú¨1.16‰ª•‰∏ä,Âè™ËÉΩËá™Ë°åÁºñËØëÊúÄÊñ∞ÁâàgoÊù•ËøõË°åÊµãËØï„ÄÇ&lt;br&gt; [+] 2020/12/6 ‰ºòÂåñicmpÊ®°Âùó,Êñ∞Â¢û-domain ÂèÇÊï∞(Áî®‰∫ésmbÁàÜÁ†¥Ê®°Âùó,ÈÄÇÁî®‰∫éÂüüÁî®Êà∑) „ÄÇ&lt;br&gt; [+] 2020/12/03 ‰ºòÂåñipÊÆµÂ§ÑÁêÜÊ®°Âùó„ÄÅicmp„ÄÅÁ´ØÂè£Êâ´ÊèèÊ®°Âùó„ÄÇÊñ∞Â¢ûÊîØÊåÅ192.168.1.1-192.168.255.255„ÄÇ&lt;br&gt; [+] 2020/11/17 Â¢ûÂä†-ping ÂèÇÊï∞,‰ΩúÁî®ÊòØÂ≠òÊ¥ªÊé¢ÊµãÊ®°ÂùóÁî®ping‰ª£ÊõøicmpÂèëÂåÖ„ÄÇ&lt;br&gt; [+] 2020/11/17 Â¢ûÂä†WebScanÊ®°Âùó,Êñ∞Â¢ûshiroÁÆÄÂçïËØÜÂà´„ÄÇhttpsËÆøÈóÆÊó∂,Ë∑≥ËøáËØÅ‰π¶ËÆ§ËØÅ„ÄÇÂ∞ÜÊúçÂä°Ê®°ÂùóÂíåwebÊ®°ÂùóÁöÑË∂ÖÊó∂ÂàÜÂºÄ,Â¢ûÂä†-wt ÂèÇÊï∞(WebTimeout)„ÄÇ&lt;br&gt; [+] 2020/11/16 ÂØπicmpÊ®°ÂùóËøõË°å‰ºòÂåñ,Â¢ûÂä†-it ÂèÇÊï∞(IcmpThreads),ÈªòËÆ§11000,ÈÄÇÂêàÊâ´BÊÆµ „ÄÇ&lt;br&gt; [+] 2020/11/15 ÊîØÊåÅip‰ª•Êñá‰ª∂ÂØºÂÖ•,-hf ip.txt,Âπ∂ÂØπÂéªÈáçÂÅö‰∫ÜÂ§ÑÁêÜ„ÄÇ&lt;/p&gt;</summary>
  </entry>
</feed>