<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-25T01:40:20Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>danielmiessler/fabric</title>
    <updated>2024-08-25T01:40:20Z</updated>
    <id>tag:github.com,2024-08-25:/danielmiessler/fabric</id>
    <link href="https://github.com/danielmiessler/fabric" rel="alternate"></link>
    <summary type="html">&lt;p&gt;fabric is an open-source framework for augmenting humans using AI. It provides a modular framework for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/images/fabric-logo-gif.gif&#34; alt=&#34;fabriclogo&#34; width=&#34;400&#34; height=&#34;400&#34;&gt; &#xA; &lt;h1&gt;&lt;code&gt;fabric&lt;/code&gt;&lt;/h1&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/mission-human_flourishing_via_AI_augmentation-purple&#34; alt=&#34;Static Badge&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/danielmiessler/fabric&#34; alt=&#34;GitHub top language&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/danielmiessler/fabric&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p class=&#34;align center&#34;&gt; &lt;/p&gt;&#xA; &lt;h4&gt;&lt;code&gt;fabric&lt;/code&gt; is an open-source framework for augmenting humans using AI.&lt;/h4&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#whatandwhy&#34;&gt;What and Why&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#philosophy&#34;&gt;Philosophy&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#Installation&#34;&gt;Installation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#Usage&#34;&gt;Usage&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#examples&#34;&gt;Examples&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#just-use-the-patterns&#34;&gt;Just Use the Patterns&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#custom-patterns&#34;&gt;Custom Patterns&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#helper-apps&#34;&gt;Helper Apps&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#meta&#34;&gt;Meta&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Navigation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#what-and-why&#34;&gt;What and Why&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#philosophy&#34;&gt;Philosophy&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#breaking-problems-into-components&#34;&gt;Breaking problems into components&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#too-many-prompts&#34;&gt;Too many prompts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#our-approach-to-prompting&#34;&gt;The Fabric approach to prompting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#Installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#Migrating&#34;&gt;Migrating&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#Upgrading&#34;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#Usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#examples&#34;&gt;Examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#just-use-the-patterns&#34;&gt;Just use the Patterns&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#custom-patterns&#34;&gt;Custom Patterns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#helper-apps&#34;&gt;Helper Apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#meta&#34;&gt;Meta&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#primary-contributors&#34;&gt;Primary contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] August 20, 2024 — We have migrated to Go, and the transition has been pretty smooth! The biggest thing to know is that &lt;strong&gt;the previous installation instructions in the various Fabric videos out there will no longer work&lt;/strong&gt; because they were for the legacy (Python) version. Check the new &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#Installation&#34;&gt;install instructions&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Intro videos&lt;/h2&gt; &#xA;&lt;p&gt;Keep in mind that many of these were recorded when Fabric was Python-based, so remember to use the current &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#Installation&#34;&gt;install instructions&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UbDyjIIGaxQ&#34;&gt;Network Chuck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vF-MQmVxnCs&#34;&gt;David Bombal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wPEyyigh10g&#34;&gt;My Own Intro to the Tool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/results?search_query=fabric+ai&#34;&gt;More Fabric YouTube Videos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What and why&lt;/h2&gt; &#xA;&lt;p&gt;Since the start of 2023 and GenAI we&#39;ve seen a massive number of AI applications for accomplishing tasks. It&#39;s powerful, but &lt;em&gt;it&#39;s not easy to integrate this functionality into our lives.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h4&gt;In other words, AI doesn&#39;t have a capabilities problem—it has an &lt;em&gt;integration&lt;/em&gt; problem.&lt;/h4&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Fabric was created to address this by enabling everyone to granularly apply AI to everyday challenges.&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;AI isn&#39;t a thing; it&#39;s a &lt;em&gt;magnifier&lt;/em&gt; of a thing. And that thing is &lt;strong&gt;human creativity&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;We believe the purpose of technology is to help humans flourish, so when we talk about AI we start with the &lt;strong&gt;human&lt;/strong&gt; problems we want to solve.&lt;/p&gt; &#xA;&lt;h3&gt;Breaking problems into components&lt;/h3&gt; &#xA;&lt;p&gt;Our approach is to break problems into individual pieces (see below) and then apply AI to them one at a time. See below for some examples.&lt;/p&gt; &#xA;&lt;img width=&#34;2078&#34; alt=&#34;augmented_challenges&#34; src=&#34;https://github.com/danielmiessler/fabric/assets/50654/31997394-85a9-40c2-879b-b347e4701f06&#34;&gt; &#xA;&lt;h3&gt;Too many prompts&lt;/h3&gt; &#xA;&lt;p&gt;Prompts are good for this, but the biggest challenge I faced in 2023——which still exists today—is &lt;strong&gt;the sheer number of AI prompts out there&lt;/strong&gt;. We all have prompts that are useful, but it&#39;s hard to discover new ones, know if they are good or not, &lt;em&gt;and manage different versions of the ones we like&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;One of &lt;code&gt;fabric&lt;/code&gt;&#39;s primary features is helping people collect and integrate prompts, which we call &lt;em&gt;Patterns&lt;/em&gt;, into various parts of their lives.&lt;/p&gt; &#xA;&lt;p&gt;Fabric has Patterns for all sorts of life and work activities, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extracting the most interesting parts of YouTube videos and podcasts&lt;/li&gt; &#xA; &lt;li&gt;Writing an essay in your own voice with just an idea as an input&lt;/li&gt; &#xA; &lt;li&gt;Summarizing opaque academic papers&lt;/li&gt; &#xA; &lt;li&gt;Creating perfectly matched AI art prompts for a piece of writing&lt;/li&gt; &#xA; &lt;li&gt;Rating the quality of content to see if you want to read/watch the whole thing&lt;/li&gt; &#xA; &lt;li&gt;Getting summaries of long, boring content&lt;/li&gt; &#xA; &lt;li&gt;Explaining code to you&lt;/li&gt; &#xA; &lt;li&gt;Turning bad documentation into usable documentation&lt;/li&gt; &#xA; &lt;li&gt;Creating social media posts from any content input&lt;/li&gt; &#xA; &lt;li&gt;And a million more…&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install Fabric, &lt;a href=&#34;https://go.dev/doc/install&#34;&gt;make sure Go is installed&lt;/a&gt;, and then run the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Fabric directly from the repo&#xA;go install github.com/danielmiessler/fabric@latest&#xA;&#xA;# Run the setup to set up your directories and keys&#xA;fabric --setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;If everything works you are good to go, but you may need to set some environment variables in your &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt; file. Here is an example of what you can add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Golang environment variables&#xA;export GOROOT=/usr/local/go&#xA;export GOPATH=$HOME/go&#xA;export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Migration&lt;/h3&gt; &#xA;&lt;p&gt;If you have the Legacy (Python) version installed and want to migrate to the Go version, here&#39;s how you do it. It&#39;s basically two steps: 1) uninstall the Python version, and 2) install the Go version.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Uninstall Legacy Fabric&#xA;pipx uninstall fabric&#xA;&#xA;# Clear any old Fabric aliases&#xA;(check your .bashrc, .zshrc, etc.)&#xA;# Install the Go version&#xA;go install github.com/danielmiessler/fabric@latest&#xA;# Run setup for the new version. Important because things have changed&#xA;fabric --setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;a href=&#34;https://raw.githubusercontent.com/danielmiessler/fabric/main/#environmental-variables&#34;&gt;set your environmental variables&lt;/a&gt; as shown above.&lt;/p&gt; &#xA;&lt;h3&gt;Upgrading&lt;/h3&gt; &#xA;&lt;p&gt;The great thing about Go is that it&#39;s super easy to upgrade. Just run the same command you used to install it in the first place and you&#39;ll always get the latest version.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/danielmiessler/fabric@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Once you have it all set up, here&#39;s how to use it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fabric -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;usage: fabric -h&#xA;Usage:&#xA;  fabric [OPTIONS]&#xA;&#xA;Application Options:&#xA;  -p, --pattern=          Choose a pattern&#xA;  -C, --context=          Choose a context&#xA;      --session=          Choose a session&#xA;  -S, --setup             Run setup&#xA;  -t, --temperature=      Set temperature (default: 0.7)&#xA;  -T, --topp=             Set top P (default: 0.9)&#xA;  -s, --stream            Stream&#xA;  -P, --presencepenalty=  Set presence penalty (default: 0.0)&#xA;  -F, --frequencypenalty= Set frequency penalty (default: 0.0)&#xA;  -l, --listpatterns      List all patterns&#xA;  -L, --listmodels        List all available models&#xA;  -x, --listcontexts      List all contexts&#xA;  -X, --listsessions      List all sessions&#xA;  -U, --updatepatterns    Update patterns&#xA;  -c, --copy              Copy to clipboard&#xA;  -m, --model=            Choose model&#xA;  -u, --url=              Choose ollama url (default: http://127.0.0.1:11434)&#xA;  -o, --output=           Output to file&#xA;  -n, --latest=           Number of latest patterns to list (default: 0)&#xA;&#xA;Help Options:&#xA;  -h, --help              Show this help message&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Our approach to prompting&lt;/h2&gt; &#xA;&lt;p&gt;Fabric &lt;em&gt;Patterns&lt;/em&gt; are different than most prompts you&#39;ll see.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;First, we use &lt;code&gt;Markdown&lt;/code&gt; to help ensure maximum readability and editability&lt;/strong&gt;. This not only helps the creator make a good one, but also anyone who wants to deeply understand what it does. &lt;em&gt;Importantly, this also includes the AI you&#39;re sending it to!&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s an example of a Fabric Pattern.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;https://github.com/danielmiessler/fabric/blob/main/patterns/extract_wisdom/system.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;1461&#34; alt=&#34;pattern-example&#34; src=&#34;https://github.com/danielmiessler/fabric/assets/50654/b910c551-9263-405f-9735-71ca69bbab6d&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Next, we are extremely clear in our instructions&lt;/strong&gt;, and we use the Markdown structure to emphasize what we want the AI to do, and in what order.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;And finally, we tend to use the System section of the prompt almost exclusively&lt;/strong&gt;. In over a year of being heads-down with this stuff, we&#39;ve just seen more efficacy from doing that. If that changes, or we&#39;re shown data that says otherwise, we will adjust.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Now let&#39;s look at some things you can do with Fabric.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;summarize&lt;/code&gt; Pattern based on input from &lt;code&gt;stdin&lt;/code&gt;. In this case, the body of an article.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pbpaste | fabric --pattern summarize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;analyze_claims&lt;/code&gt; Pattern with the &lt;code&gt;--stream&lt;/code&gt; option to get immediate and streaming results.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pbpaste | fabric --stream --pattern analyze_claims&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;extract_wisdom&lt;/code&gt; Pattern with the &lt;code&gt;--stream&lt;/code&gt; option to get immediate and streaming results from any Youtube video (much like in the original introduction video).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yt --transcript https://youtube.com/watch?v=uXs-zPc63kM | fabric --stream --pattern extract_wisdom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Create patterns- you must create a .md file with the pattern and save it to ~/.config/fabric/patterns/[yourpatternname].&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Just use the Patterns&lt;/h2&gt; &#xA;&lt;img width=&#34;1173&#34; alt=&#34;fabric-patterns-screenshot&#34; src=&#34;https://github.com/danielmiessler/fabric/assets/50654/9186a044-652b-4673-89f7-71cf066f32d8&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;If you&#39;re not looking to do anything fancy, and you just want a lot of great prompts, you can navigate to the &lt;a href=&#34;https://github.com/danielmiessler/fabric/tree/main/patterns&#34;&gt;&lt;code&gt;/patterns&lt;/code&gt;&lt;/a&gt; directory and start exploring!&lt;/p&gt; &#xA;&lt;p&gt;We hope that if you used nothing else from Fabric, the Patterns by themselves will make the project useful.&lt;/p&gt; &#xA;&lt;p&gt;You can use any of the Patterns you see there in any AI application that you have, whether that&#39;s ChatGPT or some other app or website. Our plan and prediction is that people will soon be sharing many more than those we&#39;ve published, and they will be way better than ours.&lt;/p&gt; &#xA;&lt;p&gt;The wisdom of crowds for the win.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Patterns&lt;/h2&gt; &#xA;&lt;p&gt;You may want to use Fabric to create your own custom Patterns—but not share them with others. No problem!&lt;/p&gt; &#xA;&lt;p&gt;Just make a directory in &lt;code&gt;~/.config/custompatterns/&lt;/code&gt; (or wherever) and put your &lt;code&gt;.md&lt;/code&gt; files in there.&lt;/p&gt; &#xA;&lt;p&gt;When you&#39;re ready to use them, copy them into:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;~/.config/fabric/patterns/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then use them like any other Patterns, but they won&#39;t be public unless you explicitly submit them as Pull Requests to the Fabric project. So don&#39;t worry—they&#39;re private to you.&lt;/p&gt; &#xA;&lt;p&gt;This feature works with all openai and ollama models but does NOT work with claude. You can specify your model with the -m flag&lt;/p&gt; &#xA;&lt;h2&gt;Helper Apps&lt;/h2&gt; &#xA;&lt;p&gt;Fabric also makes use of some core helper apps (tools) to make it easier to integrate with your various workflows. Here are some examples:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;yt&lt;/code&gt; is a helper command that extracts the transcript from a YouTube video. You can use it like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yt https://www.youtube.com/watch?v=lQVcbY52_gY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will return the transcript from the video, which you can then pipe into Fabric like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yt https://www.youtube.com/watch?v=lQVcbY52_gY | fabric --pattern extract_wisdom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;yt&lt;/code&gt; Installation&lt;/h3&gt; &#xA;&lt;p&gt;To install &lt;code&gt;yt&lt;/code&gt;, install it the same way as you install Fabric, just with a different repo name.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/danielmiessler/yt@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to add your &lt;code&gt;YOUTUBE_API_KEY&lt;/code&gt; to &lt;code&gt;~/.config/fabric/.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Meta&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Special thanks to the following people for their inspiration and contributions!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Jonathan Dunn&lt;/em&gt; for being the absolute MVP dev on the project, including spearheading the new Go version, as well as the GUI! All this while also being a full-time medical doctor!&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Caleb Sima&lt;/em&gt; for pushing me over the edge of whether to make this a public project or not.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Eugen Eisler&lt;/em&gt; and &lt;em&gt;Frederick Ros&lt;/em&gt; for their invaluable contributions to the Go version&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Joel Parish&lt;/em&gt; for super useful input on the project&#39;s Github directory structure..&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Joseph Thacker&lt;/em&gt; for the idea of a &lt;code&gt;-c&lt;/code&gt; context flag that adds pre-created context in the &lt;code&gt;./config/fabric/&lt;/code&gt; directory to all Pattern queries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Jason Haddix&lt;/em&gt; for the idea of a stitch (chained Pattern) to filter content using a local model before sending on to a cloud model, i.e., cleaning customer data using &lt;code&gt;llama2&lt;/code&gt; before sending on to &lt;code&gt;gpt-4&lt;/code&gt; for analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Andre Guerra&lt;/em&gt; for assisting with numerous components to make things simpler and more maintainable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Primary contributors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/danielmiessler&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/50654?v=4&#34; title=&#34;Daniel Miessler&#34; width=&#34;50&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xssdoctor&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9218431?v=4&#34; title=&#34;Jonathan Dunn&#34; width=&#34;50&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sbehrens&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/688589?v=4&#34; title=&#34;Scott Behrens&#34; width=&#34;50&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/agu3rra&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10410523?v=4&#34; title=&#34;Andre Guerra&#34; width=&#34;50&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;fabric&lt;/code&gt; was created by &lt;a href=&#34;https://danielmiessler.com/subscribe&#34; target=&#34;_blank&#34;&gt;Daniel Miessler&lt;/a&gt; in January of 2024. &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/intent/user?screen_name=danielmiessler&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/danielmiessler&#34; alt=&#34;X (formerly Twitter) Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uber/cadence</title>
    <updated>2024-08-25T01:40:20Z</updated>
    <id>tag:github.com,2024-08-25:/uber/cadence</id>
    <link href="https://github.com/uber/cadence" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cadence is a distributed, scalable, durable, and highly available orchestration engine to execute asynchronous long-running business logic in a scalable and resilient way.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cadence&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://buildkite.com/uberopensource/cadence-server&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/159887afd42000f11126f85237317d4090de97b26c287ebc40.svg?theme=github&amp;amp;branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/uber/cadence&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/uber/cadence/graph/badge.svg?token=7SD244ImNF&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/uber/cadence/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/uber/cadence.svg?sanitize=true&#34; alt=&#34;Github release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/uber/cadence.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/uber/cadence/stargazers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/uber/cadence.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/uber/cadence/network/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/uber/cadence.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo contains the source code of the Cadence server and other tooling including CLI, schema tools, bench and canary.&lt;/p&gt; &#xA;&lt;p&gt;You can implement your workflows with one of our client libraries. The &lt;a href=&#34;https://github.com/uber-go/cadence-client&#34;&gt;Go&lt;/a&gt; and &lt;a href=&#34;https://github.com/uber-java/cadence-client&#34;&gt;Java&lt;/a&gt; libraries are officially maintained by the Cadence team, while the &lt;a href=&#34;https://github.com/firdaus/cadence-python&#34;&gt;Python&lt;/a&gt; and &lt;a href=&#34;https://github.com/coinbase/cadence-ruby&#34;&gt;Ruby&lt;/a&gt; client libraries are developed by the community.&lt;/p&gt; &#xA;&lt;p&gt;You can also use &lt;a href=&#34;https://github.com/indeedeng/iwf&#34;&gt;iWF&lt;/a&gt; as a DSL framework on top of Cadence.&lt;/p&gt; &#xA;&lt;p&gt;See Maxim&#39;s talk at &lt;a href=&#34;https://atscaleconference.com/videos/cadence-microservice-architecture-beyond-requestreply&#34;&gt;Data@Scale Conference&lt;/a&gt; for an architectural overview of Cadence.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://cadenceworkflow.io&#34;&gt;cadenceworkflow.io&lt;/a&gt; to learn more about Cadence. Join us in &lt;a href=&#34;https://github.com/uber/cadence-docs&#34;&gt;Cadence Documentation&lt;/a&gt; project. Feel free to raise an Issue or Pull Request there.&lt;/p&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/cadence/discussions&#34;&gt;Github Discussion&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for Q&amp;amp;A, support/help, general discusion, and annoucement&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/cadence-workflow&#34;&gt;StackOverflow&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for Q&amp;amp;A and general discusion&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/cadence/issues&#34;&gt;Github Issues&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for reporting bugs and feature requests&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;Slack&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Best for contributing/development discussion&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Start the cadence-server&lt;/h3&gt; &#xA;&lt;p&gt;To run Cadence services locally, we highly recommend that you use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docker/README.md&#34;&gt;Cadence service docker&lt;/a&gt; to run the service. You can also follow the &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;instructions&lt;/a&gt; to build and run it.&lt;/p&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://cadenceworkflow.io/docs/operation-guide/&#34;&gt;documentation&lt;/a&gt; site for production/cluster setup.&lt;/p&gt; &#xA;&lt;h3&gt;Run the Samples&lt;/h3&gt; &#xA;&lt;p&gt;Try out the sample recipes for &lt;a href=&#34;https://github.com/uber-common/cadence-samples&#34;&gt;Go&lt;/a&gt; or &lt;a href=&#34;https://github.com/uber/cadence-java-samples&#34;&gt;Java&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Use &lt;a href=&#34;https://cadenceworkflow.io/docs/cli/&#34;&gt;Cadence CLI&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Cadence CLI can be used to operate workflows, tasklist, domain and even the clusters.&lt;/p&gt; &#xA;&lt;p&gt;You can use the following ways to install Cadence CLI:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use brew to install CLI: &lt;code&gt;brew install cadence-workflow&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow the &lt;a href=&#34;https://github.com/uber/cadence/discussions/4457&#34;&gt;instructions&lt;/a&gt; if you need to install older versions of CLI via homebrew. Usually this is only needed when you are running a server of a too old version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use docker image for CLI: &lt;code&gt;docker run --rm ubercadence/cli:&amp;lt;releaseVersion&amp;gt;&lt;/code&gt; or &lt;code&gt;docker run --rm ubercadence/cli:master &lt;/code&gt; . Be sure to update your image when you want to try new features: &lt;code&gt;docker pull ubercadence/cli:master &lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build the CLI binary yourself, check out the repo and run &lt;code&gt;make cadence&lt;/code&gt; to build all tools. See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for prerequisite of make command.&lt;/li&gt; &#xA; &lt;li&gt;Build the CLI image yourself, see &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docker/README.md#diy-building-an-image-for-any-tag-or-branch&#34;&gt;instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cadence CLI is a powerful tool. The commands are organized by &lt;strong&gt;tabs&lt;/strong&gt;. E.g. &lt;code&gt;workflow&lt;/code&gt;-&amp;gt;&lt;code&gt;batch&lt;/code&gt;-&amp;gt;&lt;code&gt;start&lt;/code&gt;, or &lt;code&gt;admin&lt;/code&gt;-&amp;gt;&lt;code&gt;workflow&lt;/code&gt;-&amp;gt;&lt;code&gt;describe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://cadenceworkflow.io/docs/cli/#documentation&#34;&gt;documentation&lt;/a&gt; and always try out &lt;code&gt;--help&lt;/code&gt; on any tab to learn &amp;amp; explore.&lt;/p&gt; &#xA;&lt;h3&gt;Use Cadence Web&lt;/h3&gt; &#xA;&lt;p&gt;Try out &lt;a href=&#34;https://github.com/uber/cadence-web&#34;&gt;Cadence Web UI&lt;/a&gt; to view your workflows on Cadence. (This is already available at localhost:8088 if you run Cadence with docker compose)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love your help in making Cadence great. Please review our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to propose a new feature, first join the &lt;a href=&#34;http://t.uber.com/cadence-slack&#34;&gt;Slack channel&lt;/a&gt; to start a discussion and check if there are existing design discussions. Also peruse our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docs/design/index.md&#34;&gt;design docs&lt;/a&gt; in case a feature has been designed but not yet implemented. Once you&#39;re sure the proposal is not covered elsewhere, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/PROPOSALS.md&#34;&gt;proposal instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other binaries in this repo&lt;/h2&gt; &#xA;&lt;h4&gt;Bench/stress test workflow tools&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/bench/README.md&#34;&gt;bench documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Periodical feature health check workflow tools(aka Canary)&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/canary/README.md&#34;&gt;canary documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Schema tools for SQL and Cassandra&lt;/h4&gt; &#xA;&lt;p&gt;The tools are for &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/docs/persistence.md&#34;&gt;manual setup or upgrading database schema&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If server runs with Cassandra, Use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/tools/cassandra/README.md&#34;&gt;Cadence Cassandra tool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If server runs with SQL database, Use &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/tools/sql/README.md&#34;&gt;Cadence SQL tool&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The easiest way to get the schema tool is via homebrew.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install cadence-workflow&lt;/code&gt; also includes &lt;code&gt;cadence-sql-tool&lt;/code&gt; and &lt;code&gt;cadence-cassandra-tool&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The schema files are located at &lt;code&gt;/usr/local/etc/cadence/schema/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To upgrade, make sure you remove the old ElasticSearch schema first: &lt;code&gt;mv /usr/local/etc/cadence/schema/elasticsearch /usr/local/etc/cadence/schema/elasticsearch.old &amp;amp;&amp;amp; brew upgrade cadence-workflow&lt;/code&gt;. Otherwise ElasticSearch schemas may not be able to get updated.&lt;/li&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://github.com/uber/cadence/discussions/4457&#34;&gt;instructions&lt;/a&gt; if you need to install older versions of schema tools via homebrew. However, easier way is to use new versions of schema tools with old versions of schemas. All you need is to check out the older version of schemas from this repo. Run &lt;code&gt;git checkout v0.21.3&lt;/code&gt; to get the v0.21.3 schemas in &lt;a href=&#34;https://raw.githubusercontent.com/uber/cadence/master/schema&#34;&gt;the schema folder&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/uber/cadence&#34;&gt;&lt;img src=&#34;https://starchart.cc/uber/cadence.svg?variant=adaptive&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License, please see &lt;a href=&#34;https://github.com/uber/cadence/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>loft-sh/vcluster</title>
    <updated>2024-08-25T01:40:20Z</updated>
    <id>tag:github.com,2024-08-25:/loft-sh/vcluster</id>
    <link href="https://github.com/loft-sh/vcluster" rel="alternate"></link>
    <summary type="html">&lt;p&gt;vCluster - Create fully functional virtual Kubernetes clusters - Each vcluster runs inside a namespace of the underlying k8s cluster. It&#39;s cheaper than creating separate full-blown clusters and it offers better multi-tenancy and isolation than regular namespaces.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.vcluster.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loft-sh/vcluster/main/docs/static/media/vcluster_horizontal_black.svg?sanitize=true&#34; width=&#34;500&#34;&gt;&lt;/a&gt; &#xA;&lt;h3&gt;&lt;strong&gt;&lt;a href=&#34;https://www.vcluster.com&#34;&gt;Website&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href=&#34;https://www.vcluster.com/docs/get-started/&#34;&gt;Quickstart&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href=&#34;https://www.vcluster.com/docs/what-are-virtual-clusters&#34;&gt;Documentation&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href=&#34;https://loft.sh/blog&#34;&gt;Blog&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href=&#34;https://twitter.com/loft_sh&#34;&gt;Twitter&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href=&#34;https://slack.loft.sh/&#34;&gt;Slack&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/loft-sh/vcluster?style=for-the-badge&amp;amp;label=Latest%20Release&amp;amp;color=%23007ec6&#34; alt=&#34;Latest Release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/loft-sh/vcluster?style=for-the-badge&amp;amp;color=%23007ec6&#34; alt=&#34;License: Apache-2.0&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.loft.sh/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loft-sh/vcluster/main/docs/static/media/slack.svg?sanitize=true&#34; alt=&#34;Join us on Slack!&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://devpod.sh/open#https://github.com/loft-sh/vcluster&#34;&gt;&lt;img src=&#34;https://devpod.sh/assets/open-in-devpod.svg?sanitize=true&#34; alt=&#34;Open in DevPod!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Virtual clusters are fully functional Kubernetes clusters nested inside a physical host cluster providing better isolation and flexibility to support multi-tenancy. Multiple teams can operate independently within the same physical infrastructure while minimizing conflicts, maximizing autonomy, and reducing costs.&lt;/p&gt; &#xA;&lt;p&gt;Virtual clusters run inside host cluster namespaces but function as separate Kubernetes clusters, with their own API server, control plane, syncer, and set of resources. While virtual clusters share the physical resources of the host cluster (such as CPU, memory, and storage), they manage their resources independently, allowing for efficient utilization and scaling.&lt;/p&gt; &#xA;&lt;p&gt;Virtual clusters interact with the host cluster for resource scheduling and networking but maintain a level of abstraction to ensure operations within a virtual cluster don&#39;t directly affect the host cluster&#39;s global state.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; ⭐️ &lt;strong&gt;Do you like vcluster? Support the project with a star&lt;/strong&gt; ⭐️ &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Benefits&lt;/h2&gt; &#xA;&lt;p&gt;Virtual clusters provide immense benefits for large-scale Kubernetes deployments and multi-tenancy.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/loft-sh/vcluster/main/docs/static/media//diagrams/vcluster-comparison.png&#34; width=&#34;500&#34;&gt; &#xA;&lt;h3&gt;Robust security and isolation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Granular Permissions:&lt;/strong&gt; vCluster users operate with minimized permissions in the host cluster, significantly reducing the risk of privileged access misuse. Within their vCluster, users have admin-level control, enabling them to manage CRDs, RBAC, and other security policies independently.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Isolated Control Plane:&lt;/strong&gt; Each vCluster comes with its own dedicated API server and control plane, creating a strong isolation boundary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable Security Policies:&lt;/strong&gt; Tenants can implement additional vCluster-specific governance, including OPA policies, network policies, resource quotas, limit ranges, and admission control, in addition to the existing policies and security measures in the underlying physical host cluster.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enhanced Data Protection:&lt;/strong&gt; With options for separate backing stores, including embedded SQLite, etcd, or external databases, virtual clusters allow for isolated data management, reducing the risk of data leakage between tenants.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Access for tenants&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full Admin Access per Tenant:&lt;/strong&gt; Tenants can freely deploy CRDs, create namespaces, taint, and label nodes, and manage cluster-scoped resources typically restricted in standard Kubernetes namespaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Isolated yet Integrated Networking:&lt;/strong&gt; While ensuring automatic isolation (for example, pods in different virtual clusters cannot communicate by default), vCluster allows for configurable network policies and service sharing, supporting both separation and sharing as needed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node Management:&lt;/strong&gt; Assign static nodes to specific virtual clusters or share node pools among multiple virtual clusters, providing flexibility in resource allocation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cost-effectiveness and reduced overhead&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight Infrastructure:&lt;/strong&gt; Virtual clusters are significantly more lightweight than physical clusters, able to spin up in seconds, which contrasts sharply with the lengthy provisioning times often seen in environments like EKS (~45 minutes).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Resource Efficiency:&lt;/strong&gt; By sharing the underlying host cluster&#39;s resources, virtual clusters minimize the need for additional physical infrastructure, reducing costs and environmental impact.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simplified Management:&lt;/strong&gt; The vCluster control plane, running inside a single pod, along with optional integrated CoreDNS, minimizes the operational overhead, making virtual clusters especially suitable for large-scale deployments and multi-tenancy scenarios.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Enhanced flexibility and compatibility&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Diverse Kubernetes Environments:&lt;/strong&gt; vCluster supports different Kubernetes versions and distributions (including K8s, K3s, and K0s), allowing version skews. This makes it possible to tailor each virtual cluster to specific requirements without impacting others.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Adaptable Backing Stores:&lt;/strong&gt; Choose from a range of data stores, from lightweight (SQLite) to enterprise-grade options (embedded etcd, external data stores like Global RDS), catering to various scalability and durability needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Runs Anywhere:&lt;/strong&gt; Virtual clusters can run on EKS, GKE, AKS, OpenShift, RKE, K3s, cloud, edge, and on-prem. As long as it&#39;s a K8s cluster, you can run a virtual cluster on top of it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Improved scalability&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reduced API Server Load:&lt;/strong&gt; Virtual clusters, each with their own dedicated API server, significantly reduce the operational load on the host cluster&#39;s Kubernetes API server by isolating and handling requests internally.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conflict-Free CRD Management:&lt;/strong&gt; Independent management of CRDs within each virtual cluster eliminates the potential for CRD conflicts and version discrepancies, ensuring smoother operations and easier scaling as the user base expands.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common use cases&lt;/h2&gt; &#xA;&lt;h3&gt;Pre-production&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Empower developers with self-service Kubernetes:&lt;/strong&gt; Simplify Kubernetes access for developers through self-service virtual clusters, reducing human error and enhancing developer autonomy without compromising security and compliance requirements.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Accelerate CI/CD with ephemeral Kubernetes clusters:&lt;/strong&gt; Instantly create clean, new virtual Kubernetes clusters for each pull request, enabling fast, isolated testing and PR previews without wait times and the struggles of a shared test environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Production&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Elevate your ISV offering with a dedicated cluster per customer:&lt;/strong&gt; Host each customer in a virtual cluster with strict tenant isolation and seamless scalability, while consolidating essential tools into a unified platform stack serving multiple tenants.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Build a managed Kubernetes service with best-in-class COGS and high margins:&lt;/strong&gt; Enable direct customer access to dedicated virtual Kubernetes clusters, streamlining node and resource allocation for industry-leading efficiency and unparalleled scalability.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://www.vcluster.com/docs/vcluster/&#34;&gt;quick start guide&lt;/a&gt; to deploy your first vCluster!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest in contributing! Please refer to &lt;a href=&#34;https://github.com/loft-sh/vcluster/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for guidance.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>