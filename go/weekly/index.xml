<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-16T01:40:58Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>EndlessCheng/codeforces-go</title>
    <updated>2024-06-16T01:40:58Z</updated>
    <id>tag:github.com,2024-06-16:/EndlessCheng/codeforces-go</id>
    <link href="https://github.com/EndlessCheng/codeforces-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;算法竞赛模板库 by 灵茶山艾府 💭💡🎈&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;算法竞赛模板库 by 灵茶山艾府 💭💡🎈&lt;/h1&gt; &#xA;&lt;h2&gt;算法 Algorithm&lt;/h2&gt; &#xA;&lt;p&gt;由于算法知识点繁杂，将自己学习到的算法、做过的题目分类整理好是有必要的。&lt;/p&gt; &#xA;&lt;p&gt;一个算法模板应当涵盖以下几点：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对该算法的基本介绍（核心思想、复杂度等）&lt;/li&gt; &#xA; &lt;li&gt;参考链接或书籍章节（讲得比较好的资料）&lt;/li&gt; &#xA; &lt;li&gt;模板代码（代码注释、使用说明）&lt;/li&gt; &#xA; &lt;li&gt;模板补充（常见题型中的额外代码、建模技巧等）&lt;/li&gt; &#xA; &lt;li&gt;相关题目（模板题、经典题、思维转换题等）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;算法目录&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gobyexample-cn.github.io/&#34;&gt;不了解 Go？快速入门教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/CaOJ45/&#34;&gt;集合论与位运算&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;数据结构 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/monotone_stack.go&#34;&gt;单调栈 monotone_stack.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/monotone_queue.go&#34;&gt;单调队列 monotone_queue.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;二维单调队列&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/deque.go&#34;&gt;双端队列 deque.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/heap.go&#34;&gt;堆（优先队列）heap.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;支持修改、删除指定元素的堆&lt;/li&gt; &#xA;     &lt;li&gt;懒删除堆&lt;/li&gt; &#xA;     &lt;li&gt;对顶维&lt;/li&gt; &#xA;     &lt;li&gt;前缀中位数&lt;/li&gt; &#xA;     &lt;li&gt;滑动窗口前 k 小元素和&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/union_find.go&#34;&gt;并查集 union_find.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;点权并查集&lt;/li&gt; &#xA;     &lt;li&gt;边权并查集（种类并查集）&lt;/li&gt; &#xA;     &lt;li&gt;可持久化并查集&lt;/li&gt; &#xA;     &lt;li&gt;回滚并查集 &amp;amp; 动态图连通性&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/sparse_table.go&#34;&gt;稀疏表（ST 表）sparse_table.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/fenwick_tree.go&#34;&gt;树状数组 fenwick_tree.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;差分树状数组（支持区间加、区间求和）&lt;/li&gt; &#xA;     &lt;li&gt;二维差分树状数组&lt;/li&gt; &#xA;     &lt;li&gt;树套树 &amp;amp; 三维偏序&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/segment_tree.go&#34;&gt;线段树 segment_tree.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;线段树二分&lt;/li&gt; &#xA;     &lt;li&gt;延迟标记（懒标记）&lt;/li&gt; &#xA;     &lt;li&gt;动态开点&lt;/li&gt; &#xA;     &lt;li&gt;线段树合并&lt;/li&gt; &#xA;     &lt;li&gt;线段树分裂&lt;/li&gt; &#xA;     &lt;li&gt;持久化（主席树）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/segment_tree01.go&#34;&gt;0-1 线段树 segment_tree01.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/leftist_tree.go&#34;&gt;左偏树（可并堆）leftist_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/cartesian_tree.go&#34;&gt;笛卡尔树 cartesian_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/bst.go&#34;&gt;二叉搜索树公共方法 bst.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/treap.go&#34;&gt;Treap treap.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/treap_kthsum.go&#34;&gt;前 k 小元素和&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/splay.go&#34;&gt;伸展树 splay.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/link_cut_tree.go&#34;&gt;动态树 LCT link_cut_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/red_black_tree.go&#34;&gt;红黑树 red_black_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/scapegoat_tree.go&#34;&gt;替罪羊树 scapegoat_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/kd_tree.go&#34;&gt;k-d 树 kd_tree.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;珂朵莉树（ODT） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/odt.go&#34;&gt;数组版 odt.go&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/odt_bst.go&#34;&gt;平衡树版 odt_bst.go&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/sqrt_decomposition.go&#34;&gt;根号分治、分块 sqrt_decomposition.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/mo.go&#34;&gt;莫队算法 mo.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;普通莫队&lt;/li&gt; &#xA;     &lt;li&gt;带修莫队&lt;/li&gt; &#xA;     &lt;li&gt;回滚莫队&lt;/li&gt; &#xA;     &lt;li&gt;树上莫队&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/strings.go&#34;&gt;字符串 strings.go&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;字符串哈希&lt;/li&gt; &#xA;   &lt;li&gt;KMP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;pi 函数&lt;/li&gt; &#xA;     &lt;li&gt;border&lt;/li&gt; &#xA;     &lt;li&gt;最小循环节&lt;/li&gt; &#xA;     &lt;li&gt;fail 树（失配树 / border 树）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;扩展 KMP（Z algorithm）&lt;/li&gt; &#xA;   &lt;li&gt;最小表示法&lt;/li&gt; &#xA;   &lt;li&gt;最长回文子串 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Manacher 算法&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/pam.go&#34;&gt;回文自动机（回文树，PAM）pam.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;后缀数组（SA）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/sam.go&#34;&gt;后缀自动机（SAM）sam.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/trie.go&#34;&gt;字典树 trie.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;可持久化字典树&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/trie01.go&#34;&gt;0-1 字典树 trie01.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;最大异或和&lt;/li&gt; &#xA;     &lt;li&gt;第 k 大异或和&lt;/li&gt; &#xA;     &lt;li&gt;删除元素&lt;/li&gt; &#xA;     &lt;li&gt;可持久化 0-1 字典树&lt;/li&gt; &#xA;     &lt;li&gt;【研究】0-1 字典树上最多有多少个节点&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/acam.go&#34;&gt;AC 自动机 acam.go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;数学 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math.go&#34;&gt;数论 math.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;辗转相除法（最大公因数 GCD）&lt;/li&gt; &#xA;     &lt;li&gt;类欧几里得算法 ∑⌊(ai+b)/m⌋&lt;/li&gt; &#xA;     &lt;li&gt;Pollard-Rho 质因数分解算法&lt;/li&gt; &#xA;     &lt;li&gt;埃氏筛（埃拉托斯特尼筛法）&lt;/li&gt; &#xA;     &lt;li&gt;欧拉筛（线性筛）&lt;/li&gt; &#xA;     &lt;li&gt;欧拉函数&lt;/li&gt; &#xA;     &lt;li&gt;原根&lt;/li&gt; &#xA;     &lt;li&gt;扩展 GCD &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;二元一次不定方程&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;逆元 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;线性求逆元&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;中国剩余定理（CRT） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;扩展中国剩余定理&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;离散对数&lt;/li&gt; &#xA;     &lt;li&gt;大步小步算法（BSGS） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;扩展大步小步算法&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;二次剩余&lt;/li&gt; &#xA;     &lt;li&gt;Jacobi 符号&lt;/li&gt; &#xA;     &lt;li&gt;N 次剩余&lt;/li&gt; &#xA;     &lt;li&gt;卢卡斯定理 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;扩展卢卡斯定理&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;卡特兰数&lt;/li&gt; &#xA;     &lt;li&gt;默慈金数&lt;/li&gt; &#xA;     &lt;li&gt;那罗延数&lt;/li&gt; &#xA;     &lt;li&gt;斯特林数 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;第一类斯特林数（轮换）&lt;/li&gt; &#xA;       &lt;li&gt;第二类斯特林数（子集）&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;贝尔数&lt;/li&gt; &#xA;     &lt;li&gt;欧拉数&lt;/li&gt; &#xA;     &lt;li&gt;数论分块（整除分块）&lt;/li&gt; &#xA;     &lt;li&gt;莫比乌斯函数&lt;/li&gt; &#xA;     &lt;li&gt;莫比乌斯反演 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;互质计数问题&lt;/li&gt; &#xA;       &lt;li&gt;GCD 求和问题&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;杜教筛&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_comb.go&#34;&gt;组合数学 math_comb.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;常见模型&lt;/li&gt; &#xA;     &lt;li&gt;常用恒等式&lt;/li&gt; &#xA;     &lt;li&gt;容斥原理&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_fft.go&#34;&gt;快速傅里叶变换 FFT math_fft.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_ntt.go&#34;&gt;快速数论变换 NTT math_ntt.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;包含多项式全家桶（求逆、开方等等）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_fwt.go&#34;&gt;快速沃尔什变换 FWT math_fwt.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_continued_fraction.go&#34;&gt;连分数、佩尔方程 math_continued_fraction.go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_matrix.go&#34;&gt;线性代数 math_matrix.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;矩阵相关运算&lt;/li&gt; &#xA;     &lt;li&gt;高斯消元&lt;/li&gt; &#xA;     &lt;li&gt;行列式&lt;/li&gt; &#xA;     &lt;li&gt;线性基&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/math_numerical_analysis.go&#34;&gt;数值分析 math_numerical_analysis.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;自适应辛普森积分&lt;/li&gt; &#xA;     &lt;li&gt;拉格朗日插值&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/geometry.go&#34;&gt;计算几何 geometry.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;线与点&lt;/li&gt; &#xA;     &lt;li&gt;线与线&lt;/li&gt; &#xA;     &lt;li&gt;圆与点 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;最小圆覆盖 &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;Welzl 随机增量法&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;固定半径覆盖最多点&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;圆与线&lt;/li&gt; &#xA;     &lt;li&gt;圆与圆&lt;/li&gt; &#xA;     &lt;li&gt;圆与矩形&lt;/li&gt; &#xA;     &lt;li&gt;最近点对&lt;/li&gt; &#xA;     &lt;li&gt;多边形与点 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;判断点在凸多边形内 O(log n)&lt;/li&gt; &#xA;       &lt;li&gt;判断点在任意多边形内 &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;转角法（统计绕数）&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;凸包&lt;/li&gt; &#xA;     &lt;li&gt;最远点对 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;旋转卡壳&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;半平面交&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/games.go&#34;&gt;博弈论 games.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;SG 函数&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/dp.go&#34;&gt;动态规划 dp.go&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;背包 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;0-1 背包&lt;/li&gt; &#xA;     &lt;li&gt;完全背包&lt;/li&gt; &#xA;     &lt;li&gt;多重背包 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;二进制优化&lt;/li&gt; &#xA;       &lt;li&gt;单调队列优化&lt;/li&gt; &#xA;       &lt;li&gt;同余前缀和优化（求方案数）&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;分组背包&lt;/li&gt; &#xA;     &lt;li&gt;树上背包（依赖背包）&lt;/li&gt; &#xA;     &lt;li&gt;字典序最小方案&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;线性 DP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;最大子段和&lt;/li&gt; &#xA;     &lt;li&gt;LCS&lt;/li&gt; &#xA;     &lt;li&gt;LPS&lt;/li&gt; &#xA;     &lt;li&gt;LIS &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;狄尔沃斯定理&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;LCIS&lt;/li&gt; &#xA;     &lt;li&gt;长度为 m 的 LIS 个数&lt;/li&gt; &#xA;     &lt;li&gt;本质不同子序列个数&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;区间 DP&lt;/li&gt; &#xA;   &lt;li&gt;环形 DP&lt;/li&gt; &#xA;   &lt;li&gt;博弈 DP&lt;/li&gt; &#xA;   &lt;li&gt;概率 DP&lt;/li&gt; &#xA;   &lt;li&gt;期望 DP&lt;/li&gt; &#xA;   &lt;li&gt;状压 DP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;全排列 DP&lt;/li&gt; &#xA;     &lt;li&gt;旅行商问题（TSP）&lt;/li&gt; &#xA;     &lt;li&gt;子集 DP&lt;/li&gt; &#xA;     &lt;li&gt;高维前缀和（SOS DP）&lt;/li&gt; &#xA;     &lt;li&gt;插头 DP&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;数位 DP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;记忆化搜索（同时跑上下界）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;倍增优化 DP&lt;/li&gt; &#xA;   &lt;li&gt;斜率优化 DP（CHT）&lt;/li&gt; &#xA;   &lt;li&gt;WQS 二分优化 DP（凸优化 DP / 带权二分）&lt;/li&gt; &#xA;   &lt;li&gt;树形 DP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;树的直径个数&lt;/li&gt; &#xA;     &lt;li&gt;在任一直径上的节点个数&lt;/li&gt; &#xA;     &lt;li&gt;树上最大独立集&lt;/li&gt; &#xA;     &lt;li&gt;树上最小顶点覆盖&lt;/li&gt; &#xA;     &lt;li&gt;树上最小支配集&lt;/li&gt; &#xA;     &lt;li&gt;树上最大匹配&lt;/li&gt; &#xA;     &lt;li&gt;换根 DP（二次扫描法） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;简单写法&lt;/li&gt; &#xA;       &lt;li&gt;维护最大次大写法&lt;/li&gt; &#xA;       &lt;li&gt;前后缀分解写法（适用性最广）&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/graph.go&#34;&gt;图论 graph.go&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;链式前向星&lt;/li&gt; &#xA;   &lt;li&gt;DFS 常用技巧&lt;/li&gt; &#xA;   &lt;li&gt;BFS 常用技巧&lt;/li&gt; &#xA;   &lt;li&gt;欧拉回路和欧拉路径 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;无向图&lt;/li&gt; &#xA;     &lt;li&gt;有向图&lt;/li&gt; &#xA;     &lt;li&gt;完全图&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;割点&lt;/li&gt; &#xA;   &lt;li&gt;割边（桥）&lt;/li&gt; &#xA;   &lt;li&gt;双连通分量（BCC） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;v-BCC&lt;/li&gt; &#xA;     &lt;li&gt;e-BCC&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;仙人掌 &amp;amp; 圆方树&lt;/li&gt; &#xA;   &lt;li&gt;最短路 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Dijkstra&lt;/li&gt; &#xA;     &lt;li&gt;SPFA（队列优化的 Bellman-Ford） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;差分约束系统&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Floyd-Warshall&lt;/li&gt; &#xA;     &lt;li&gt;Johnson&lt;/li&gt; &#xA;     &lt;li&gt;0-1 BFS（双端队列 BFS）&lt;/li&gt; &#xA;     &lt;li&gt;字典序最小最短路&lt;/li&gt; &#xA;     &lt;li&gt;同余最短路&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;最小环&lt;/li&gt; &#xA;   &lt;li&gt;最小斯坦纳树&lt;/li&gt; &#xA;   &lt;li&gt;最小生成树（MST） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Kruskal&lt;/li&gt; &#xA;     &lt;li&gt;Prim&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;单度限制最小生成树&lt;/li&gt; &#xA;   &lt;li&gt;次小生成树&lt;/li&gt; &#xA;   &lt;li&gt;曼哈顿距离最小生成树&lt;/li&gt; &#xA;   &lt;li&gt;最小差值生成树&lt;/li&gt; &#xA;   &lt;li&gt;最小树形图 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;朱刘算法&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;二分图判定（染色）&lt;/li&gt; &#xA;   &lt;li&gt;二分图找奇环&lt;/li&gt; &#xA;   &lt;li&gt;二分图最大匹配 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;匈牙利算法&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;带权二分图最大完美匹配 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Kuhn–Munkres 算法&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;拓扑排序&lt;/li&gt; &#xA;   &lt;li&gt;强连通分量（SCC） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Kosaraju&lt;/li&gt; &#xA;     &lt;li&gt;Tarjan&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;2-SAT&lt;/li&gt; &#xA;   &lt;li&gt;基环树&lt;/li&gt; &#xA;   &lt;li&gt;最大流 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Dinic&lt;/li&gt; &#xA;     &lt;li&gt;ISAP&lt;/li&gt; &#xA;     &lt;li&gt;HLPP&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;最小费用最大流 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;SPFA&lt;/li&gt; &#xA;     &lt;li&gt;Dijkstra&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;三元环计数&lt;/li&gt; &#xA;   &lt;li&gt;四元环计数&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/graph_tree.go&#34;&gt;树上问题 graph_tree.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;直径&lt;/li&gt; &#xA;     &lt;li&gt;重心&lt;/li&gt; &#xA;     &lt;li&gt;点分治&lt;/li&gt; &#xA;     &lt;li&gt;点分树&lt;/li&gt; &#xA;     &lt;li&gt;最近公共祖先（LCA） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;倍增&lt;/li&gt; &#xA;       &lt;li&gt;ST 表&lt;/li&gt; &#xA;       &lt;li&gt;Tarjan&lt;/li&gt; &#xA;       &lt;li&gt;树上差分&lt;/li&gt; &#xA;       &lt;li&gt;虚树&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;重链剖分（HLD）&lt;/li&gt; &#xA;     &lt;li&gt;长链剖分&lt;/li&gt; &#xA;     &lt;li&gt;树上启发式合并（small to large） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;按大小合并&lt;/li&gt; &#xA;       &lt;li&gt;轻重儿子合并&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;树分块&lt;/li&gt; &#xA;     &lt;li&gt;Prufer 序列&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;其他 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/bits.go&#34;&gt;位运算笔记 bits.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;bitset&lt;/li&gt; &#xA;     &lt;li&gt;区间位运算 trick（含 GCD）&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/sort.go&#34;&gt;二分 三分 sort.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;二分答案&lt;/li&gt; &#xA;     &lt;li&gt;0-1 分数规划&lt;/li&gt; &#xA;     &lt;li&gt;整体二分&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/search.go&#34;&gt;搜索 search.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;枚举排列&lt;/li&gt; &#xA;     &lt;li&gt;枚举组合&lt;/li&gt; &#xA;     &lt;li&gt;生成下一个排列&lt;/li&gt; &#xA;     &lt;li&gt;康托展开&lt;/li&gt; &#xA;     &lt;li&gt;逆康托展开&lt;/li&gt; &#xA;     &lt;li&gt;枚举子集 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Gosper&#39;s Hack&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;折半枚举（Meet in the middle） &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;超大背包问题&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/rand.go&#34;&gt;随机算法 rand.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;模拟退火&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/common.go&#34;&gt;基础算法 common.go&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;算法思路整理&lt;/li&gt; &#xA;     &lt;li&gt;分组循环&lt;/li&gt; &#xA;     &lt;li&gt;滑动窗口&lt;/li&gt; &#xA;     &lt;li&gt;前缀和&lt;/li&gt; &#xA;     &lt;li&gt;同余前缀和&lt;/li&gt; &#xA;     &lt;li&gt;二维前缀和&lt;/li&gt; &#xA;     &lt;li&gt;菱形区域和&lt;/li&gt; &#xA;     &lt;li&gt;斜向前缀和 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;菱形边界和&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;等腰直角三角形区域和 &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;金字塔区域和&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;二阶差分&lt;/li&gt; &#xA;     &lt;li&gt;二维差分&lt;/li&gt; &#xA;     &lt;li&gt;菱形二维差分&lt;/li&gt; &#xA;     &lt;li&gt;离散化&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/misc.go&#34;&gt;杂项 misc.go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/io.go&#34;&gt;快速输入输出模板 io.go&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;分类题单&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/0viNMK/&#34;&gt;滑动窗口（定长/不定长/多指针）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/SqopEo/&#34;&gt;二分算法（二分答案/最小化最大值/最大化最小值/第K小）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/9oZFK9/&#34;&gt;单调栈（矩形系列/字典序最小/贡献法）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/YiXPXW/&#34;&gt;网格图（DFS/BFS/综合应用）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/dHn9Vk/&#34;&gt;位运算（基础/性质/拆位/试填/恒等式/贪心/脑筋急转弯）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/01LUak/&#34;&gt;图论算法（DFS/BFS/拓扑排序/最短路/最小生成树/二分图/基环树/欧拉路径）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔥&lt;a href=&#34;https://leetcode.cn/circle/discuss/tXLS3i/&#34;&gt;动态规划（入门/背包/状态机/划分/区间/状压/数位/数据结构优化/树形/博弈/概率期望）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/mOr1u6/&#34;&gt;常用数据结构（前缀和/差分/栈/队列/堆/字典树/并查集/树状数组/线段树）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.cn/circle/discuss/IYT3ss/&#34;&gt;数学算法（数论/组合/概率期望/博弈/计算几何/随机算法）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;欢迎关注 &lt;a href=&#34;https://space.bilibili.com/206214&#34;&gt;B站@灵茶山艾府&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如何选择题目 How to Choose Problems&lt;/h2&gt; &#xA;&lt;h3&gt;Rating &amp;lt; 2100&lt;/h3&gt; &#xA;&lt;p&gt;这一阶段主要目标是提高对问题的观察能力。做构造题可以针对性地训练这一点。&lt;/p&gt; &#xA;&lt;p&gt;选择难度在自己 rating 到 rating+200 范围内的构造题 (tag: constructive algorithms)，按照过题人数降序做题，比如 [1700,1900] 区间的就是下面这个链接：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=constructive+algorithms%2C1700-1900&#34;&gt;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=constructive+algorithms%2C1700-1900&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;通过大量的构造题训练，提高观察能力，快速找到切题入口。具体见我在知乎上的这篇 &lt;a href=&#34;https://www.zhihu.com/question/353734418/answer/2353160035&#34;&gt;回答&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;Rating &amp;gt;= 2100（个人训练用，仅供参考）&lt;/h3&gt; &#xA;&lt;p&gt;见识更高的山、更广的海。&lt;/p&gt; &#xA;&lt;p&gt;按人数从高到低，做 2200+ 的题目。&lt;strong&gt;建议不设置难度上限&lt;/strong&gt;！由于按人数排序，难度分不会太高，&lt;strong&gt;不设上限可以避免错过高分好题&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/training/465300&#34;&gt;按照洛谷通过人数排序的 CF 题单&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=constructive+algorithms%2C2200-&#34;&gt;构造题 2200+&lt;/a&gt;：锻炼手玩能力。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=dp%2C2200-&#34;&gt;DP 2200+&lt;/a&gt;：几乎每场都有 DP。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=combine-tags-by-or%2Ccombinatorics%2Cfft%2Cmatrices%2Cnumber+theory%2Cprobabilities%2Cchinese+remainder+theorem%2C2200-&#34;&gt;数学综合：数论、组合数学、概率期望等 2200+&lt;/a&gt;：包含 6 个 tag。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=combine-tags-by-or%2C2-sat%2Cdsu%2Cflows%2Cgraph+matchings%2Cgraphs%2Cshortest+paths%2Ctrees%2C2200-&#34;&gt;图论综合：图论+树上问题 2200+&lt;/a&gt;：包含 7 个 tag。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=combine-tags-by-or%2Cstring+suffix+structures%2Cstrings%2C2200-&#34;&gt;字符串 2200+&lt;/a&gt;：数据结构题不好筛选，可以找树状数组/线段树的题单，这里只单独筛选字符串的题。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=interactive%2C2200-&#34;&gt;交互 2200+&lt;/a&gt;：偶尔做做，了解一些解题套路。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeforces.com/problemset?order=BY_SOLVED_DESC&amp;amp;tags=games%2C2000-&#34;&gt;博弈 2000+&lt;/a&gt;：也适合锻炼手玩。由于题目比较少，从 2000 开始筛选。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;我的 Codeforces 账号&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/profile/0x3F&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/0x3F-MASTER%202208-orange?style=for-the-badge&#34; alt=&#34;0x3F&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;测试及对拍 Testing&lt;/h2&gt; &#xA;&lt;p&gt;编写一个 &lt;code&gt;run(io.Reader, io.Writer)&lt;/code&gt; 函数来处理输入输出。这样写的理由是：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在 &lt;code&gt;main&lt;/code&gt; 中调用 &lt;code&gt;run(os.Stdin, os.Stdout)&lt;/code&gt; 来执行代码；&lt;/li&gt; &#xA; &lt;li&gt;测试时，将测试数据转换成 &lt;code&gt;strings.Reader&lt;/code&gt; 当作输入，并用一个 &lt;code&gt;strings.Builder&lt;/code&gt; 来接收输出，将这二者传入 &lt;code&gt;run&lt;/code&gt; 中，然后就能比较输出与答案了；&lt;/li&gt; &#xA; &lt;li&gt;对拍时需要实现一个暴力算法 &lt;code&gt;runAC&lt;/code&gt;，参数和 &lt;code&gt;run&lt;/code&gt; 一样。通过 &lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/main/testutil/rand.go&#34;&gt;随机数据生成器&lt;/a&gt; 来生成数据，分别传入 &lt;code&gt;runAC&lt;/code&gt; 和 &lt;code&gt;run&lt;/code&gt;，通过比对各自的输出，来检查 &lt;code&gt;run&lt;/code&gt; 中的问题。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;具体可以见 Codeforces 代码仓库 &lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/main&#34;&gt;main&lt;/a&gt;，所有非交互题的代码及其对应测试全部按照上述框架实现。&lt;/p&gt; &#xA;&lt;p&gt;例如：&lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/main/1400-1499/1439C_test.go&#34;&gt;1439C_test.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;交互题的写法要复杂一些，需要把涉及输入输出的地方抽象成接口，详见 &lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/copypasta/template/interactive_problem&#34;&gt;interactive_problem&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;学习资料及题目 Resources&lt;/h2&gt; &#xA;&lt;p&gt;注：由于入门经典上选了很多区域赛的题，一部分题目可以在 GYM 上找到，这样可以就可以用 Go 编程提交了。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aoapc-book/aoapc-bac2nd&#34;&gt;算法竞赛入门经典（第二版）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/klb3713/aoapc-book/tree/master/TrainingGuide/bookcodes&#34;&gt;算法竞赛入门经典训练指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/sukhoeing/aoapc-training-guide2&#34;&gt;算法竞赛入门经典训练指南（升级版）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lydrainbowcat/tedukuri&#34;&gt;算法竞赛进阶指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/luoyongjun999/code&#34;&gt;算法竞赛入门到进阶&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/training/441063&#34;&gt;《算法竞赛》配套题单&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/enkerewpo/OI-Public-Library&#34;&gt;OI Public Library（含国家队论文）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LzyRapx/Competitive-Programming-Docs&#34;&gt;算法竞赛 (ICPC, OI, etc) 论文，课件，文档，笔记等&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hzwer/shareOI&#34;&gt;算法竞赛课件分享 by hzwer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://algs4.cs.princeton.edu/code/&#34;&gt;算法第四版 Java 源码&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://visualgo.net/zh&#34;&gt;数据结构和算法动态可视化&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oi-wiki.org/&#34;&gt;OI Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cp-algorithms.com/&#34;&gt;CP-Algorithms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/95106&#34;&gt;The Ultimate Topic List (with Resources, Problems and Templates)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.craft.do/s/N0l80k2gv46Psq&#34;&gt;洛谷日报&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/57282&#34;&gt;All the good tutorials found for Competitive Programming&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/55274&#34;&gt;Codeforces Problem Topics&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.shahjalalshohag.com/topic-list/&#34;&gt;The Ultimate Topic List(with Tutorials, Problems, and Templates)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/how-to-prepare-for-acm-icpc/&#34;&gt;GeeksforGeeks 上的算法合集&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://pepcy.cf/icpc-templates/&#34;&gt;Pepcy 模板&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/F0RE1GNERS/template&#34;&gt;F0RE1GNERS 模板&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hh2048/XCPC&#34;&gt;https://github.com/hh2048/XCPC&lt;/a&gt; 含 jiangly 模板&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/alex-wei/p/contents.html&#34;&gt;https://www.cnblogs.com/alex-wei/p/contents.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/Xing-Ling/p/10930556.html&#34;&gt;【模板整合计划】目录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/105467597&#34;&gt;算法学习笔记（目录）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/list?keyword=%E6%A8%A1%E6%9D%BF&amp;amp;page=1&#34;&gt;洛谷模板题（建议按难度筛选）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/training/9391&#34;&gt;能力全面提升综合题单&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SFOI-Team/luogu-problem-list/raw/master/list.md&#34;&gt;Luogu Problem List&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/paste/0id3h6on&#34;&gt;洛谷原试炼场&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/84429&#34;&gt;Links of ICPC/CCPC Contests from China&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://atcoder-tags.herokuapp.com/explain&#34;&gt;AtCoder 题目分类&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AtCoder 版《挑战程序设计竞赛》&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/drken/items/e77685614f3c6bf86f44&#34;&gt;AtCoder 版！蟻本 (初級編)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/drken/items/2f56925972c1d34e05d8&#34;&gt;AtCoder 版！蟻本 (中級編)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/drken/items/9b311d553aa434bb26e4&#34;&gt;AtCoder 版！蟻本 (上級編)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qiita.com/drken/items/0de3d205690d92307b7c&#34;&gt;AtCoder 版！蟻本 (発展的トピック編)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;待整理&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/Xing-Ling/p/10897760.html&#34;&gt;【杂文】记一些有用的神奇网站&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dhs347/Dream/raw/master/%E8%AE%A1%E5%88%92/%E8%AE%A1%E5%88%92%E4%B9%A6/A%E8%AE%A1%E5%88%92_%E9%98%B6%E6%AE%B51.md&#34;&gt;偶然在 GitHub 上发现的超长列表&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/skywalkert/article/details/48924861&#34;&gt;算法竞赛训练中较难的部分&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/skywalkert/article/details/48878925&#34;&gt;算法竞赛中可能不太会遇到的论文题&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/21924647&#34;&gt;[杂谈]OI/ACM中冷门算法&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/92248&#34;&gt;Things I don&#39;t know&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[meme] If you know at least 3 of these things and you are not red — you are doing it wrong. Stop learning useless algorithms, go and solve some problems, learn how to use binary search.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/calabash_boy/article/details/79973483&#34;&gt;https://blog.csdn.net/calabash_boy/article/details/79973483&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zimpha/algorithmic-library&#34;&gt;https://github.com/zimpha/algorithmic-library&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/command-block/blog-suo-yin-zhi-ding-post&#34;&gt;https://www.luogu.com.cn/blog/command-block/blog-suo-yin-zhi-ding-post&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wcysai.github.io/&#34;&gt;https://wcysai.github.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/Troverld/index&#34;&gt;https://www.luogu.com.cn/blog/Troverld/index&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/124683&#34;&gt;C++ @cache&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;其他 Others&lt;/h2&gt; &#xA;&lt;p&gt;My GoLand &lt;code&gt;Live Templates&lt;/code&gt; and &lt;code&gt;Postfix Completion&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/EndlessCheng/codeforces-go/master/misc/my_goland_template&#34;&gt;settings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Useful Tools&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.geogebra.org/classic&#34;&gt;GeoGebra&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://csacademy.com/app/geometry_widget/&#34;&gt;Draw Geometry&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://csacademy.com/app/graph_editor/&#34;&gt;Draw Graph&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oeis.org/&#34;&gt;OEIS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wolframalpha.com/&#34;&gt;Wolfram|Alpha&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.acodedaily.com/&#34;&gt;ACD Ladders&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforceshelper.herokuapp.com/contests&#34;&gt;Contests Filter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://codeforced.github.io/handle/&#34;&gt;Codeforced&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cfviz.netlify.app/&#34;&gt;Codeforces Visualizer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tom0727.github.io/cf-problems/&#34;&gt;Codeforces Solve Tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cftracker.netlify.app/contests&#34;&gt;Another Codeforces Solve Tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kenkoooo.com/atcoder/#/table/&#34;&gt;AtCoder Problems&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://atcoder-companions.kakira.dev/&#34;&gt;AtCoder Companions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://silverfoxxxy.github.io/rating-converter&#34;&gt;AtCoder-Codeforces Rating converter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rating and Difficulties&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/20762&#34;&gt;Open Codeforces Rating System&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/68288&#34;&gt;How to Interpret Contest Ratings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/62865&#34;&gt;Codeforces: Problem Difficulties&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Elo_rating_system#Theory&#34;&gt;Elo rating system&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Stay Healthy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://musclewiki.org/&#34;&gt;Exercises!&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kopia/kopia</title>
    <updated>2024-06-16T01:40:58Z</updated>
    <id>tag:github.com,2024-06-16:/kopia/kopia</id>
    <link href="https://github.com/kopia/kopia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform backup tool for Windows, macOS &amp; Linux with fast, incremental backups, client-side end-to-end encryption, compression and data deduplication. CLI and GUI included.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kopia&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kopia/kopia/master/icons/kopia.svg?sanitize=true&#34; alt=&#34;Kopia&#34;&gt; &lt;a href=&#34;https://github.com/kopia/kopia/actions?query=workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/kopia/kopia/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slack.kopia.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discuss-slack-blue.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/kopia/kopia/repo&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/kopia/kopia/repo?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/kopia/kopia&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/kopia/kopia/branch/master/graph/badge.svg?token=CRK4RMRFSH&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/kopia/kopia&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/kopia/kopia&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kopia/kopia/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kopia/kopia/tags?page=1&amp;amp;ordering=name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kopia/kopia&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kopia/kopia/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/kopia/kopia/total.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;n.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Replica&#34;&gt;copy, replica&lt;/a&gt; (Polish)&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Kopia&#34;&gt;lance, spear&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://kopia.io&#34;&gt;fast and secure backup tool&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Kopia is a fast and secure open-source backup/restore tool that allows you to create &lt;a href=&#34;https://kopia.io/docs/features/#end-to-end-zero-knowledge-encryption&#34;&gt;encrypted&lt;/a&gt; snapshots of your data and save the snapshots to &lt;a href=&#34;https://kopia.io/docs/features/#save-snapshots-to-cloud-network-or-local-storage&#34;&gt;remote or cloud storage&lt;/a&gt; of your choice, &lt;a href=&#34;https://kopia.io/docs/features/#save-snapshots-to-cloud-network-or-local-storage&#34;&gt;to network-attached storage or server&lt;/a&gt;, or &lt;a href=&#34;https://kopia.io/docs/features/#save-snapshots-to-cloud-network-or-local-storage&#34;&gt;locally on your machine&lt;/a&gt;. Kopia does not &#39;image&#39; your whole machine. Rather, Kopia allows you to backup/restore any and all files/directories that you deem are important or critical.&lt;/p&gt; &#xA;&lt;p&gt;Kopia has both &lt;a href=&#34;https://kopia.io/docs/features/#both-command-line-and-graphical-user-interfaces&#34;&gt;CLI (command-line interface)&lt;/a&gt; and &lt;a href=&#34;https://kopia.io/docs/features/#both-command-line-and-graphical-user-interfaces&#34;&gt;GUI (graphical user interface)&lt;/a&gt; versions, making it the perfect tool for both advanced and regular users. You can read more about Kopia&#39;s unique &lt;a href=&#34;https://kopia.io/docs/features/&#34;&gt;features&lt;/a&gt; -- which include &lt;a href=&#34;https://kopia.io/docs/features/#compression&#34;&gt;compression&lt;/a&gt;, &lt;a href=&#34;https://kopia.io/docs/features/#backup-files-and-directories-using-snapshots&#34;&gt;deduplication&lt;/a&gt;, &lt;a href=&#34;https://kopia.io/docs/features/#end-to-end-zero-knowledge-encryption&#34;&gt;end-to-end &#39;zero knowledge&#39; encryption&lt;/a&gt;, and &lt;a href=&#34;https://kopia.io/docs/features/#error-correction&#34;&gt;error correction&lt;/a&gt; -- to get a better understanding of how Kopia works.&lt;/p&gt; &#xA;&lt;p&gt;When ready, head to the &lt;a href=&#34;https://kopia.io/docs/installation/&#34;&gt;installation&lt;/a&gt; page to download and install Kopia, and make sure to read the &lt;a href=&#34;https://kopia.io/docs/getting-started/&#34;&gt;Getting Started Guide&lt;/a&gt; for a step-by-step walkthrough of how to use Kopia.&lt;/p&gt; &#xA;&lt;h2&gt;Pick the Cloud Storage Provider You Want&lt;/h2&gt; &#xA;&lt;p&gt;Kopia supports saving your &lt;a href=&#34;https://kopia.io/docs/features/#end-to-end-zero-knowledge-encryption&#34;&gt;encrypted&lt;/a&gt; and &lt;a href=&#34;https://kopia.io/docs/features/#compression&#34;&gt;compressed&lt;/a&gt; snapshots to all of the following &lt;a href=&#34;https://kopia.io/docs/features/#save-snapshots-to-cloud-network-or-local-storage&#34;&gt;storage locations&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Amazon S3&lt;/strong&gt; and any &lt;strong&gt;cloud storage that is compatible with S3&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Azure Blob Storage&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backblaze B2&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Google Cloud Storage&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any remote server or cloud storage that supports &lt;strong&gt;WebDAV&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any remote server or cloud storage that supports &lt;strong&gt;SFTP&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Some of the cloud storage options supported by &lt;strong&gt;Rclone&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Requires you to download and setup Rclone in addition to Kopia, but after that Kopia manages/runs Rclone for you&lt;/li&gt; &#xA;   &lt;li&gt;Rclone support is experimental: not all the cloud storage products supported by Rclone have been tested to work with Kopia, and some may not work with Kopia; Kopia has been tested to work with &lt;strong&gt;Dropbox&lt;/strong&gt;, &lt;strong&gt;OneDrive&lt;/strong&gt;, and &lt;strong&gt;Google Drive&lt;/strong&gt; through Rclone&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Your local machine and any network-attached storage or server&lt;/li&gt; &#xA; &lt;li&gt;Your own server by setting up a &lt;a href=&#34;https://kopia.io/docs/repository-server/&#34;&gt;Kopia Repository Server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And Kopia uses &lt;a href=&#34;https://kopia.io/docs/features/#backup-files-and-directories-using-snapshots&#34;&gt;data deduplication&lt;/a&gt; to save you money! Read the &lt;a href=&#34;https://kopia.io/docs/repositories/&#34;&gt;repositories help page&lt;/a&gt; for more information on supported storage locations.&lt;/p&gt; &#xA;&lt;p&gt;With Kopia you are in full control of where to store your snapshots, that is, you pick the storage provider you want to use. You must provision and pay for the storage provider for whatever storage locations you want to use, and then tell Kopia what those storage locations are. You can even use multiple storage locations for different backup repositories if you want. Kopia also supports backing up multiple machines to the same storage location.&lt;/p&gt; &#xA;&lt;h2&gt;Kopia in Action&lt;/h2&gt; &#xA;&lt;p&gt;Using Kopia via command-line interface:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/ykx6uzEhKY3451fWEnX9nm9uo&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/ykx6uzEhKY3451fWEnX9nm9uo.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using Kopia via graphical user interface (note: the video is of an older version of Kopia and the interface is different in the current version of Kopia, but the main principles of the interface are the same):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=sHJjSpasWIo&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/sHJjSpasWIo/0.jpg&#34; alt=&#34;Kopia UI Tutorial&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://kopia.io/docs/&#34;&gt;Kopia Documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Building Kopia&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/kopia/kopia/master/BUILD.md&#34;&gt;Build Infrastructure&lt;/a&gt; for more information on building Kopia and working with the source code.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Kopia is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/kopia/kopia/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; &#xA;&lt;p&gt;Kopia is open source and contributions are welcome. For more information on how to contribute see the &lt;a href=&#34;https://kopia.io/docs/contribution-guidelines/&#34;&gt;Contribution Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Security Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you find a security issue you&#39;d like to disclose privately, please contact &lt;code&gt;security@kopia.io&lt;/code&gt; or via direct message to maintainers on &lt;a href=&#34;https://slack.kopia.io&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/sites/kopia/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/6b5c1fe4-a0da-4e7e-939b-ff1105251985/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coroot/coroot</title>
    <updated>2024-06-16T01:40:58Z</updated>
    <id>tag:github.com,2024-06-16:/coroot/coroot</id>
    <link href="https://github.com/coroot/coroot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Coroot is an open-source APM &amp; Observability tool, a DataDog and NewRelic alternative 📊, 🖥️, 👉. Powered by eBPF for rapid insights into system performance. Monitor, analyze, and optimize your infrastructure effortlessly for peak reliability at any scale.&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;200&#34; src=&#34;https://coroot.com/static/logo_u.png&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/coroot/coroot/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/coroot/coroot&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/coroot/coroot&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/coroot-community/shared_invite/zt-1gsnfo0wj-I~Zvtx5CAAb8vr~r~vecyw&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-coroot-brightgreen.svg?logo=slack&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coroot/coroot/main/#features&#34;&gt;Features&lt;/a&gt; | &lt;a href=&#34;https://coroot.com/docs/coroot-community-edition/getting-started/installation&#34;&gt;Installation&lt;/a&gt; | &lt;a href=&#34;https://coroot.com/docs/coroot-community-edition/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/coroot/coroot/main/#community--support&#34;&gt;Community &amp;amp; Support&lt;/a&gt; | &lt;a href=&#34;https://community-demo.coroot.com/&#34;&gt;Live demo&lt;/a&gt; | &lt;a href=&#34;https://coroot.com/cloud&#34;&gt;Cloud&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Open-source observability augmented with actionable insights&lt;/h2&gt; &#xA;&lt;p&gt;Collecting metrics, logs, and traces alone doesn&#39;t make your applications observable. Coroot turns that data into actionable insights for you!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Zero-instrumentation observability&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Metrics, logs, traces, and profiles are gathered automatically by using eBPF&lt;/li&gt; &#xA; &lt;li&gt;Coroot provides you with a Service Map that covers 100% of your system with no blind spots&lt;/li&gt; &#xA; &lt;li&gt;Predefined inspections audit each application without any configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;775&#34; src=&#34;https://user-images.githubusercontent.com/194465/235189673-833066d1-b18f-4c7a-8b81-81b37f966daf.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Application Health Summary&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easily understand the status of your services, even when dealing with hundreds of them&lt;/li&gt; &#xA; &lt;li&gt;Gain insight into application logs without the need to manually inspect each one&lt;/li&gt; &#xA; &lt;li&gt;SLOs (Service Level Objectives) tracking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;773&#34; src=&#34;https://github.com/coroot/coroot/assets/194465/6cef06d4-0dcc-4908-85a3-7ec140bd444f&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Explore any outlier requests with distributed tracing&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Investigate any anomaly with just one click&lt;/li&gt; &#xA; &lt;li&gt;Vendor-neutral instrumentation with OpenTelemetry&lt;/li&gt; &#xA; &lt;li&gt;Are you unable to instrument legacy or third-party services? Coroot&#39;s eBPF-based instrumentation can capture requests without requiring any code changes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1352&#34; src=&#34;https://github.com/coroot/coroot/assets/194465/f5a4342f-776d-48b1-a3b8-03ccbdf43b5e&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Grasp insights from logs with just a quick glance&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Log patterns: out-of-the-box event clustering&lt;/li&gt; &#xA; &lt;li&gt;Seamless logs-to-traces correlation&lt;/li&gt; &#xA; &lt;li&gt;Lightning-fast search based on ClickHouse&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;777&#34; src=&#34;https://github.com/coroot/coroot/assets/194465/14abefdb-4737-4991-9d48-c7efec42fefd&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Profile any application in 1 click&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Analyze any unexpected spike in CPU or memory usage down to the precise line of code&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t make assumptions, know exactly what the resources were spent on&lt;/li&gt; &#xA; &lt;li&gt;Easily investigate any anomaly by comparing it to the system&#39;s baseline behavior&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;773&#34; src=&#34;https://user-images.githubusercontent.com/194465/235190071-21256cbe-6201-4d16-97f3-6565f7256f98.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Built-in expertise&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Coroot can automatically identify over 80% of issues&lt;/li&gt; &#xA; &lt;li&gt;If an app is not meeting its Service Level Objectives (SLOs), Coroot will send a single alert that includes the results of all relevant inspections&lt;/li&gt; &#xA; &lt;li&gt;You can easily adjust any inspection for a particular application or an entire project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;778&#34; src=&#34;https://github.com/coroot/coroot/assets/194465/3590a492-8895-4cc6-94df-a880656a330a&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Deployment Tracking&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Coroot discovers and monitors every application rollout in your Kubernetes cluster&lt;/li&gt; &#xA; &lt;li&gt;Requires no integration with your CI/CD pipeline&lt;/li&gt; &#xA; &lt;li&gt;Each release is automatically compared with the previous one, so you&#39;ll never miss even the slightest performance degradation&lt;/li&gt; &#xA; &lt;li&gt;With integrated Cost Monitoring, developers can track how each change affects their cloud bill&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;772&#34; src=&#34;https://user-images.githubusercontent.com/194465/235190275-a6541063-1b26-4ae3-8c20-87787d2e928d.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Cost Monitoring&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Understand your cloud costs down to the specific application&lt;/li&gt; &#xA; &lt;li&gt;Doesn&#39;t require access to you cloud account or any other configurations&lt;/li&gt; &#xA; &lt;li&gt;AWS, GCP, Azure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;771&#34; src=&#34;https://user-images.githubusercontent.com/194465/235190425-a7f33c7f-33ef-4ef5-9dc1-525ff7524e93.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can run Coroot as a Docker container or deploy it into any Kubernetes cluster. Check out the &lt;a href=&#34;https://coroot.com/docs/coroot-community-edition/getting-started/installation&#34;&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The Coroot documentation is available at &lt;a href=&#34;https://coroot.com/docs/coroot-community-edition&#34;&gt;coroot.com/docs/coroot-community-edition&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Live demo&lt;/h2&gt; &#xA;&lt;p&gt;A live demo of Coroot is available at &lt;a href=&#34;https://community-demo.coroot.com/&#34;&gt;community-demo.coroot.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/coroot-community/shared_invite/zt-1gsnfo0wj-I~Zvtx5CAAb8vr~r~vecyw&#34;&gt;Community Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coroot/coroot/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coroot/coroot/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/coroot_com&#34;&gt;@coroot_com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To start contributing, check out our &lt;a href=&#34;https://github.com/coroot/coroot/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Coroot is licensed under the &lt;a href=&#34;https://github.com/coroot/coroot/raw/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>