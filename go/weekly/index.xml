<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-16T01:42:41Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cosmos/iavl</title>
    <updated>2022-10-16T01:42:41Z</updated>
    <id>tag:github.com,2022-10-16:/cosmos/iavl</id>
    <link href="https://github.com/cosmos/iavl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Merkleized IAVL+ Tree implementation in Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IAVL+ Tree&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cosmos/iavl/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/cosmos/iavl.svg?sanitize=true&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cosmos/iavl/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/cosmos/iavl.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/cosmos/iavl&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/915b7be44ada53c290eb157634330494ebe3e30a/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f676f6c616e672f6764646f3f7374617475732e737667&#34; alt=&#34;API Reference&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/cosmos/iavl/workflows/Lint/badge.svg?branch=master&#34; alt=&#34;Lint&#34;&gt; &lt;img src=&#34;https://github.com/cosmos/iavl/workflows/Test/badge.svg?branch=master&#34; alt=&#34;Test&#34;&gt; &lt;a href=&#34;https://discord.gg/AzefAFd&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/669268347736686612.svg?sanitize=true&#34; alt=&#34;Discord chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: Requires Go 1.18+&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A versioned, snapshottable (immutable) AVL+ tree for persistent data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dashboard.bencher.orijtech.com/graphs?repo=https%3A%2F%2Fgithub.com%2Fcosmos%2Fiavl.git&#34;&gt;Benchmarks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this data structure is to provide persistent storage for key-value pairs (say to store account balances) such that a deterministic merkle root hash can be computed. The tree is balanced using a variant of the &lt;a href=&#34;http://en.wikipedia.org/wiki/AVL_tree&#34;&gt;AVL algorithm&lt;/a&gt; so all operations are O(log(n)).&lt;/p&gt; &#xA;&lt;p&gt;Nodes of this tree are immutable and indexed by their hash. Thus any node serves as an immutable snapshot which lets us stage uncommitted transactions from the mempool cheaply, and we can instantly roll back to the last committed state to process transactions of a newly committed block (which may not be the same set of transactions as those from the mempool).&lt;/p&gt; &#xA;&lt;p&gt;In an AVL tree, the heights of the two child subtrees of any node differ by at most one. Whenever this condition is violated upon an update, the tree is rebalanced by creating O(log(n)) new nodes that point to unmodified nodes of the old tree. In the original AVL algorithm, inner nodes can also hold key-value pairs. The AVL+ algorithm (note the plus) modifies the AVL algorithm to keep all values on leaf nodes, while only using branch-nodes to store keys. This simplifies the algorithm while keeping the merkle hash trail short.&lt;/p&gt; &#xA;&lt;p&gt;In Ethereum, the analog is &lt;a href=&#34;http://en.wikipedia.org/wiki/Radix_tree&#34;&gt;Patricia tries&lt;/a&gt;. There are tradeoffs. Keys do not need to be hashed prior to insertion in IAVL+ trees, so this provides faster iteration in the key space which may benefit some applications. The logic is simpler to implement, requiring only two types of nodes -- inner nodes and leaf nodes. On the other hand, while IAVL+ trees provide a deterministic merkle root hash, it depends on the order of transactions. In practice this shouldn&#39;t be a problem, since you can efficiently encode the tree structure when serializing the tree contents.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>XTLS/Xray-core</title>
    <updated>2022-10-16T01:42:41Z</updated>
    <id>tag:github.com,2022-10-16:/XTLS/Xray-core</id>
    <link href="https://github.com/XTLS/Xray-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xray, Penetrates Everything. Also the best v2ray-core, with XTLS support. Fully compatible configuration.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project X&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XTLS&#34;&gt;Project X&lt;/a&gt; originates from XTLS protocol, provides a set of network tools such as &lt;a href=&#34;https://github.com/XTLS/Xray-core&#34;&gt;Xray-core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XTLS/Xray-core/raw/main/LICENSE&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux Script &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/XTLS/Xray-install&#34;&gt;Xray-install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kirin10000/Xray-script&#34;&gt;Xray-script&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Docker &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/teddysun/xray&#34;&gt;teddysun/xray&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;One Click &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/proxysu/ProxySU&#34;&gt;ProxySU&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mack-a/v2ray-agent&#34;&gt;v2ray-agent&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jiuqi9997/Xray-yes&#34;&gt;Xray-yes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/wulabing/Xray_onekey&#34;&gt;Xray_onekey&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Magisk &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/CerteKim/Xray4Magisk&#34;&gt;Xray4Magisk&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/E7KMbb/Xray_For_Magisk&#34;&gt;Xray_For_Magisk&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Homebrew &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;brew install xray&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/N4FA/homebrew-xray&#34;&gt;(Tap) Repository 0&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/xiruizhao/homebrew-xray&#34;&gt;(Tap) Repository 1&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XTLS/Xray-core/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code Of Conduct&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XTLS/Xray-examples&#34;&gt;Xray-examples&lt;/a&gt; / &lt;a href=&#34;https://github.com/XTLS/Xray-examples/tree/main/VLESS-TCP-XTLS-WHATEVER&#34;&gt;VLESS-TCP-XTLS-WHATEVER&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GUI Clients&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenWrt &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/xiaorouji/openwrt-passwall&#34;&gt;PassWall&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jerrykuku/luci-app-vssr&#34;&gt;Hello World&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/fw876/helloworld&#34;&gt;ShadowSocksR Plus+&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/yichya/luci-app-xray&#34;&gt;luci-app-xray&lt;/a&gt; (&lt;a href=&#34;https://github.com/yichya/openwrt-xray&#34;&gt;openwrt-xray&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/2dust/v2rayN&#34;&gt;v2rayN&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Qv2ray/Qv2ray&#34;&gt;Qv2ray&lt;/a&gt; (This project had been archived and currently inactive)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/NetchX/Netch&#34;&gt;Netch (NetFilter &amp;amp; TUN/TAP)&lt;/a&gt; (This project had been archived and currently inactive)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/2dust/v2rayNG&#34;&gt;v2rayNG&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rurirei/Kitsunebi/tree/release_xtls&#34;&gt;Kitsunebi&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;iOS &amp;amp; macOS (with M1 chip) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/shadowrocket/id932747118&#34;&gt;Shadowrocket&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/stash/id1596063349&#34;&gt;Stash&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;macOS (Intel chip &amp;amp; M1 chip) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Qv2ray/Qv2ray&#34;&gt;Qv2ray&lt;/a&gt; (This project had been archived and currently inactive)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tzmax/V2RayXS&#34;&gt;V2RayXS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This repo relies on the following third-party projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Special thanks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/v2fly/v2ray-core&#34;&gt;v2fly/v2ray-core&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;In production: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ghodss/yaml&#34;&gt;ghodss/yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gorilla/websocket&#34;&gt;gorilla/websocket&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lucas-clemente/quic-go&#34;&gt;lucas-clemente/quic-go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pelletier/go-toml&#34;&gt;pelletier/go-toml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pires/go-proxyproto&#34;&gt;pires/go-proxyproto&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/refraction-networking/utls&#34;&gt;refraction-networking/utls&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/seiflotfy/cuckoofilter&#34;&gt;seiflotfy/cuckoofilter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/google/starlark-go&#34;&gt;google/starlark-go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For testing only: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/miekg/dns&#34;&gt;miekg/dns&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/stretchr/testify&#34;&gt;stretchr/testify&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/h12w/socks&#34;&gt;h12w/socks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build -o xray.exe -trimpath -ldflags &#34;-s -w -buildid=&#34; ./main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux / macOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build -o xray -trimpath -ldflags &#34;-s -w -buildid=&#34; ./main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Telegram&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/projectXray&#34;&gt;Project X&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/projectXtls&#34;&gt;Project X Channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/XTLS/Xray-core&#34;&gt;&lt;img src=&#34;https://starchart.cc/XTLS/Xray-core.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>btcsuite/btcd</title>
    <updated>2022-10-16T01:42:41Z</updated>
    <id>tag:github.com,2022-10-16:/btcsuite/btcd</id>
    <link href="https://github.com/btcsuite/btcd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An alternative full node bitcoin implementation written in Go (golang)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;btcd&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/btcsuite/btcd/actions&#34;&gt;&lt;img src=&#34;https://github.com/btcsuite/btcd/workflows/Build%20and%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/btcsuite/btcd?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/btcsuite/btcd/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://copyfree.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-ISC-blue.svg?sanitize=true&#34; alt=&#34;ISC License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/github.com/btcsuite/btcd&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/godoc-reference-blue.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;btcd is an alternative full node bitcoin implementation written in Go (golang).&lt;/p&gt; &#xA;&lt;p&gt;This project is currently under active development and is in a Beta state. It is extremely stable and has been in production use since October 2013.&lt;/p&gt; &#xA;&lt;p&gt;It properly downloads, validates, and serves the block chain using the exact rules (including consensus bugs) for block acceptance as Bitcoin Core. We have taken great care to avoid btcd causing a fork to the block chain. It includes a full block validation testing framework which contains all of the &#39;official&#39; block acceptance tests (and some additional ones) that is run on every pull request to help ensure it properly follows consensus. Also, it passes all of the JSON test data in the Bitcoin Core code.&lt;/p&gt; &#xA;&lt;p&gt;It also properly relays newly mined blocks, maintains a transaction pool, and relays individual transactions that have not yet made it into a block. It ensures all individual transactions admitted to the pool follow the rules required by the block chain and also includes more strict checks which filter transactions based on miner requirements (&#34;standard&#34; transactions).&lt;/p&gt; &#xA;&lt;p&gt;One key difference between btcd and Bitcoin Core is that btcd does &lt;em&gt;NOT&lt;/em&gt; include wallet functionality and this was a very intentional design decision. See the blog entry &lt;a href=&#34;https://web.archive.org/web/20171125143919/https://blog.conformal.com/btcd-not-your-moms-bitcoin-daemon&#34;&gt;here&lt;/a&gt; for more details. This means you can&#39;t actually make or receive payments directly with btcd. That functionality is provided by the &lt;a href=&#34;https://github.com/btcsuite/btcwallet&#34;&gt;btcwallet&lt;/a&gt; and &lt;a href=&#34;https://github.com/btcsuite/Paymetheus&#34;&gt;Paymetheus&lt;/a&gt; (Windows-only) projects which are both under active development.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://golang.org&#34;&gt;Go&lt;/a&gt; 1.16 or newer.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/btcsuite/btcd/releases&#34;&gt;https://github.com/btcsuite/btcd/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux/BSD/MacOSX/POSIX - Build from Source&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Go according to the installation instructions here: &lt;a href=&#34;http://golang.org/doc/install&#34;&gt;http://golang.org/doc/install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure Go was installed properly and is a supported version:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go version&#xA;$ go env GOROOT GOPATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: The &lt;code&gt;GOROOT&lt;/code&gt; and &lt;code&gt;GOPATH&lt;/code&gt; above must not be the same path. It is recommended that &lt;code&gt;GOPATH&lt;/code&gt; is set to a directory in your home directory such as &lt;code&gt;~/goprojects&lt;/code&gt; to avoid write permission issues. It is also recommended to add &lt;code&gt;$GOPATH/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; at this point.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following commands to obtain btcd, all dependencies, and install it:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd $GOPATH/src/github.com/btcsuite/btcd&#xA;$ GO111MODULE=on go install -v . ./cmd/...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;btcd (and utilities) will now be installed in &lt;code&gt;$GOPATH/bin&lt;/code&gt;. If you did not already add the bin directory to your system path during Go installation, we recommend you do so now.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;h4&gt;Linux/BSD/MacOSX/POSIX - Build from Source&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following commands to update btcd, all dependencies, and install it:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd $GOPATH/src/github.com/btcsuite/btcd&#xA;$ git pull&#xA;$ GO111MODULE=on go install -v . ./cmd/...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;btcd has several configuration options available to tweak how it runs, but all of the basic operations described in the intro section work with zero configuration.&lt;/p&gt; &#xA;&lt;h4&gt;Linux/BSD/POSIX/Source&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./btcd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;IRC&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;irc.libera.chat&lt;/li&gt; &#xA; &lt;li&gt;channel #btcd&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.libera.chat/gamja/?channels=btcd&#34;&gt;webchat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issue Tracker&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/btcsuite/btcd/issues&#34;&gt;integrated github issue tracker&lt;/a&gt; is used for this project.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation is a work-in-progress. It is located in the &lt;a href=&#34;https://github.com/btcsuite/btcd/tree/master/docs&#34;&gt;docs&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Release Verification&lt;/h2&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://github.com/btcsuite/btcd/tree/master/release&#34;&gt;documentation on the current build/verification process&lt;/a&gt; for all our releases for information on how to verify the integrity of published releases using our reproducible build system.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;btcd is licensed under the &lt;a href=&#34;http://copyfree.org&#34;&gt;copyfree&lt;/a&gt; ISC License.&lt;/p&gt;</summary>
  </entry>
</feed>