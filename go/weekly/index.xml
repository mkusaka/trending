<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-17T01:54:43Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kubernetes-sigs/aws-load-balancer-controller</title>
    <updated>2023-12-17T01:54:43Z</updated>
    <id>tag:github.com,2023-12-17:/kubernetes-sigs/aws-load-balancer-controller</id>
    <link href="https://github.com/kubernetes-sigs/aws-load-balancer-controller" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Kubernetes controller for Elastic Load Balancers&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/assets/images/kubernetes_icon.svg?sanitize=true&#34; alt=&#34;Kubernetes logo&#34; width=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/assets/images/aws_load_balancer_icon.svg?sanitize=true&#34; alt=&#34;AWS Load Balancer logo&#34; width=&#34;200&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt; A &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes &lt;/a&gt; controller for &lt;a href=&#34;https://aws.amazon.com/elasticloadbalancing/&#34;&gt;Elastic Load Balancers&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;contributions welcome&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-raw/kubernetes-sigs/aws-load-balancer-controller?style=flat&#34; alt=&#34;github issues&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/status-ga-brightgreen?style=flat&#34; alt=&#34;status is ga&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/kubernetes-sigs/aws-load-balancer-controller?style=flat&#34; alt=&#34;apache license&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/kubernetes-sigs/aws-load-balancer-controller&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/kubernetes-sigs/aws-load-balancer-controller&#34; alt=&#34;go report card&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/watchers/kubernetes-sigs/aws-load-balancer-controller?style=social&#34; alt=&#34;github watchers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/kubernetes-sigs/aws-load-balancer-controller?style=social&#34; alt=&#34;github stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/kubernetes-sigs/aws-load-balancer-controller?style=social&#34; alt=&#34;github forks&#34;&gt; &lt;a href=&#34;https://hub.docker.com/r/amazon/aws-alb-ingress-controller/&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/amazon/aws-alb-ingress-controller&#34; alt=&#34;docker pulls&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;AWS Load Balancer Controller&lt;/h2&gt; &#xA;&lt;p&gt;AWS Load Balancer Controller is a controller to help manage Elastic Load Balancers for a Kubernetes cluster.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It satisfies Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress/&#34;&gt;Ingress resources&lt;/a&gt; by provisioning &lt;a href=&#34;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html&#34;&gt;Application Load Balancers&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It satisfies Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/&#34;&gt;Service resources&lt;/a&gt; by provisioning &lt;a href=&#34;https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html&#34;&gt;Network Load Balancers&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project was formerly known as &#34;AWS ALB Ingress Controller&#34;, we rebranded it to be &#34;AWS Load Balancer Controller&#34;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;AWS ALB Ingress Controller was originated by &lt;a href=&#34;https://github.com/ticketmaster&#34;&gt;Ticketmaster&lt;/a&gt; and &lt;a href=&#34;https://github.com/coreos&#34;&gt;CoreOS&lt;/a&gt; as part of Ticketmaster&#39;s move to AWS and CoreOS Tectonic. Learn more about Ticketmaster&#39;s Kubernetes initiative from Justin Dean&#39;s video at &lt;a href=&#34;https://www.youtube.com/watch?v=wqXVKneP0Hg&#34;&gt;Tectonic Summit&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AWS ALB Ingress Controller was donated to Kubernetes SIG-AWS to allow AWS, CoreOS, Ticketmaster and other SIG-AWS contributors to officially maintain the project. SIG-AWS reached this consensus on June 1, 2018.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Checkout our &lt;a href=&#34;https://kubernetes-sigs.github.io/aws-load-balancer-controller/&#34;&gt;Live Docs&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lxc/incus</title>
    <updated>2023-12-17T01:54:43Z</updated>
    <id>tag:github.com,2023-12-17:/lxc/incus</id>
    <link href="https://github.com/lxc/incus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Powerful system container and virtual machine manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Incus&lt;/h1&gt; &#xA;&lt;p&gt;Incus is a modern, secure and powerful system container and virtual machine manager.&lt;/p&gt; &#xA;&lt;!-- Include start Incus intro --&gt; &#xA;&lt;p&gt;It provides a unified experience for running and managing full Linux systems inside containers or virtual machines. Incus supports images for a large number of Linux distributions (official Ubuntu images and images provided by the community) and is built around a very powerful, yet pretty simple, REST API. Incus scales from one instance on a single machine to a cluster in a full data center rack, making it suitable for running workloads both for development and in production.&lt;/p&gt; &#xA;&lt;p&gt;Incus allows you to easily set up a system that feels like a small private cloud. You can run any type of workload in an efficient way while keeping your resources optimized.&lt;/p&gt; &#xA;&lt;p&gt;You should consider using Incus if you want to containerize different environments or run virtual machines, or in general run and manage your infrastructure in a cost-effective way.&lt;/p&gt; &#xA;&lt;p&gt;You can try Incus online at: &lt;a href=&#34;https://linuxcontainers.org/incus/try-it/&#34;&gt;&lt;code&gt;https://linuxcontainers.org/incus/try-it/&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- Include end Incus intro --&gt; &#xA;&lt;h2&gt;Fork of Canonical LXD&lt;/h2&gt; &#xA;&lt;p&gt;Incus, which is named after the &lt;a href=&#34;https://en.wikipedia.org/wiki/Cumulonimbus_incus&#34;&gt;Cumulonimbus incus&lt;/a&gt; or anvil cloud is a community fork of Canonical&#39;s LXD.&lt;/p&gt; &#xA;&lt;p&gt;This fork was made in response to &lt;a href=&#34;https://linuxcontainers.org/lxd/&#34;&gt;Canonical&#39;s takeover&lt;/a&gt; of the LXD project from the Linux Containers community.&lt;/p&gt; &#xA;&lt;p&gt;The main aim of this fork is to provide once again a real community project where everyone&#39;s contributions are welcome and no one single commercial entity is in charge of the project.&lt;/p&gt; &#xA;&lt;p&gt;A migration tool called &lt;code&gt;lxd-to-incus&lt;/code&gt; is provided to aid with migrating an existing LXD environment over to Incus.&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://linuxcontainers.org/incus/docs/main/tutorial/first_steps/&#34;&gt;Getting started&lt;/a&gt; in the Incus documentation for installation instructions and first steps.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Release announcements: &lt;a href=&#34;https://discuss.linuxcontainers.org/c/news/&#34;&gt;&lt;code&gt;https://discuss.linuxcontainers.org/c/news/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Release tarballs: &lt;a href=&#34;https://github.com/lxc/incus/releases/&#34;&gt;&lt;code&gt;https://github.com/lxc/incus/releases/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://linuxcontainers.org/incus/docs/main/&#34;&gt;&lt;code&gt;https://linuxcontainers.org/incus/docs/main/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tests&lt;/td&gt; &#xA;   &lt;td&gt;GitHub&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lxc/incus/actions?query=event%3Apush+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/lxc/incus/actions/workflows/tests.yml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go documentation&lt;/td&gt; &#xA;   &lt;td&gt;Godoc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://godoc.org/github.com/lxc/incus/client&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/lxc/incus/client?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Static analysis&lt;/td&gt; &#xA;   &lt;td&gt;GoReport&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://goreportcard.com/report/github.com/lxc/incus&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/lxc/incus&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;!-- Include start security --&gt; &#xA;&lt;p&gt;Consider the following aspects to ensure that your Incus installation is secure:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keep your operating system up-to-date and install all available security patches.&lt;/li&gt; &#xA; &lt;li&gt;Use only supported Incus versions.&lt;/li&gt; &#xA; &lt;li&gt;Restrict access to the Incus daemon and the remote API.&lt;/li&gt; &#xA; &lt;li&gt;Do not use privileged containers unless required. If you use privileged containers, put appropriate security measures in place. See the &lt;a href=&#34;https://linuxcontainers.org/lxc/security/&#34;&gt;LXC security page&lt;/a&gt; for more information.&lt;/li&gt; &#xA; &lt;li&gt;Configure your network interfaces to be secure.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Include end security --&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/lxc/incus/raw/main/doc/explanation/security.md&#34;&gt;Security&lt;/a&gt; for detailed information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;!-- Include start security note --&gt; &#xA;&lt;p&gt;Local access to Incus through the Unix socket always grants full access to Incus. This includes the ability to attach file system paths or devices to any instance as well as tweak the security features on any instance.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, you should only give such access to users who you&#39;d trust with root access to your system.&lt;/p&gt; &#xA;&lt;!-- Include end security note --&gt; &#xA;&lt;!-- Include start support --&gt; &#xA;&lt;h2&gt;Support and community&lt;/h2&gt; &#xA;&lt;p&gt;The following channels are available for you to interact with the Incus community.&lt;/p&gt; &#xA;&lt;h3&gt;Bug reports&lt;/h3&gt; &#xA;&lt;p&gt;You can file bug reports and feature requests at: &lt;a href=&#34;https://github.com/lxc/incus/issues/new&#34;&gt;&lt;code&gt;https://github.com/lxc/incus/issues/new&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Community support&lt;/h3&gt; &#xA;&lt;p&gt;Community support is handling at: &lt;a href=&#34;https://discuss.linuxcontainers.org&#34;&gt;&lt;code&gt;https://discuss.linuxcontainers.org&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Commercial support&lt;/h3&gt; &#xA;&lt;p&gt;Commercial support is currently available from &lt;a href=&#34;https://zabbly.com&#34;&gt;Zabbly&lt;/a&gt; for users of their &lt;a href=&#34;https://github.com/zabbly/incus&#34;&gt;Debian or Ubuntu packages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The official documentation is available at: &lt;a href=&#34;https://github.com/lxc/incus/tree/main/doc&#34;&gt;&lt;code&gt;https://github.com/lxc/incus/tree/main/doc&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- Include end support --&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Fixes and new features are greatly appreciated. Make sure to read our &lt;a href=&#34;https://raw.githubusercontent.com/lxc/incus/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; first!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>karmada-io/karmada</title>
    <updated>2023-12-17T01:54:43Z</updated>
    <id>tag:github.com,2023-12-17:/karmada-io/karmada</id>
    <link href="https://github.com/karmada-io/karmada" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open, Multi-Cloud, Multi-Cluster Kubernetes Orchestration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Karmada&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/Karmada-logo-horizontal-color.png&#34; alt=&#34;Karmada-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/karmada-io/karmada.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/karmada-io/karmada/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/karmada-io/karmada/all.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slack.cncf.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-brightgreen&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5301&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5301/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/karmada-io/karmada/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/karmada-io/karmada&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/karmada-io/karmada&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/karmada-io/karmada&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/karmada-io/karmada/branch/master/graph/badge.svg?token=ROM8CMPXZ6&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Karmada: Open, Multi-Cloud, Multi-Cluster Kubernetes Orchestration&lt;/h2&gt; &#xA;&lt;p&gt;Karmada (Kubernetes Armada) is a Kubernetes management system that enables you to run your cloud-native applications across multiple Kubernetes clusters and clouds, with no changes to your applications. By speaking Kubernetes-native APIs and providing advanced scheduling capabilities, Karmada enables truly open, multi-cloud Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;Karmada aims to provide turnkey automation for multi-cluster application management in multi-cloud and hybrid cloud scenarios, with key features such as centralized multi-cloud management, high availability, failure recovery, and traffic scheduling.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/cncf-logo.png&#34; alt=&#34;cncf_logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Karmada is a incubation project of the &lt;a href=&#34;https://cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF).&lt;/p&gt; &#xA;&lt;h2&gt;Why Karmada:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;K8s Native API Compatible&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Zero change upgrade, from single-cluster to multi-cluster&lt;/li&gt; &#xA;   &lt;li&gt;Seamless integration of existing K8s tool chain&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Out of the Box&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Built-in policy sets for scenarios, including: Active-active, Remote DR, Geo Redundant, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Cross-cluster applications auto-scaling, failover and load-balancing on multi-cluster.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Avoid Vendor Lock-in&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Integration with mainstream cloud providers&lt;/li&gt; &#xA;   &lt;li&gt;Automatic allocation, migration across clusters&lt;/li&gt; &#xA;   &lt;li&gt;Not tied to proprietary vendor orchestration&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Centralized Management&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Location agnostic cluster management&lt;/li&gt; &#xA;   &lt;li&gt;Support clusters in Public cloud, on-prem or edge&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fruitful Multi-Cluster Scheduling Policies&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cluster Affinity, Multi Cluster Splitting/Rebalancing&lt;/li&gt; &#xA;   &lt;li&gt;Multi-Dimension HA: Region/AZ/Cluster/Provider&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open and Neutral&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Jointly initiated by Internet, finance, manufacturing, teleco, cloud providers, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Target for open governance with CNCF&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notice: this project is developed in continuation of Kubernetes &lt;a href=&#34;https://github.com/kubernetes-retired/federation&#34;&gt;Federation v1&lt;/a&gt; and &lt;a href=&#34;https://github.com/kubernetes-sigs/kubefed&#34;&gt;v2&lt;/a&gt;. Some basic concepts are inherited from these two versions.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/architecture.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Karmada Control Plane consists of the following components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Karmada API Server&lt;/li&gt; &#xA; &lt;li&gt;Karmada Controller Manager&lt;/li&gt; &#xA; &lt;li&gt;Karmada Scheduler&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ETCD stores the Karmada API objects, the API Server is the REST endpoint all other components talk to, and the Karmada Controller Manager performs operations based on the API objects you create through the API server.&lt;/p&gt; &#xA;&lt;p&gt;The Karmada Controller Manager runs the various controllers, the controllers watch Karmada objects and then talk to the underlying clusters&#39; API servers to create regular Kubernetes resources.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Cluster Controller: attach Kubernetes clusters to Karmada for managing the lifecycle of the clusters by creating cluster objects.&lt;/li&gt; &#xA; &lt;li&gt;Policy Controller: the controller watches PropagationPolicy objects. When the PropagationPolicy object is added, it selects a group of resources matching the resourceSelector and creates ResourceBinding with each single resource object.&lt;/li&gt; &#xA; &lt;li&gt;Binding Controller: the controller watches ResourceBinding object and create Work object corresponding to each cluster with a single resource manifest.&lt;/li&gt; &#xA; &lt;li&gt;Execution Controller: the controller watches Work objects. When Work objects are created, it will distribute the resources to member clusters.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Concepts&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Resource template&lt;/strong&gt;: Karmada uses Kubernetes Native API definition for federated resource template, to make it easy to integrate with existing tools that already adopt on Kubernetes&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Propagation Policy&lt;/strong&gt;: Karmada offers a standalone Propagation(placement) Policy API to define multi-cluster scheduling and spreading requirements.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support 1:n mapping of Policy: workload, users don&#39;t need to indicate scheduling constraints every time creating federated applications.&lt;/li&gt; &#xA; &lt;li&gt;With default policies, users can just interact with K8s API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Override Policy&lt;/strong&gt;: Karmada provides standalone Override Policy API for specializing cluster relevant configuration automation. E.g.:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Override image prefix according to member cluster region&lt;/li&gt; &#xA; &lt;li&gt;Override StorageClass according to cloud provider&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following diagram shows how Karmada resources are involved when propagating resources to member clusters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/karmada-resource-relation.png&#34; alt=&#34;karmada-resource-relation&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;This guide will cover:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;code&gt;karmada&lt;/code&gt; control plane components in a Kubernetes cluster which is known as &lt;code&gt;host cluster&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join a member cluster to &lt;code&gt;karmada&lt;/code&gt; control plane.&lt;/li&gt; &#xA; &lt;li&gt;Propagate an application by using &lt;code&gt;karmada&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; version v1.20+&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34;&gt;kubectl&lt;/a&gt; version v1.19+&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;kind&lt;/a&gt; version v0.14.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install the Karmada control plane&lt;/h3&gt; &#xA;&lt;h4&gt;1. Clone this repo to your machine:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/karmada-io/karmada&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Change to the karmada directory:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd karmada&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Deploy and run Karmada control plane:&lt;/h4&gt; &#xA;&lt;p&gt;run the following script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hack/local-up-karmada.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will do the following tasks for you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start a Kubernetes cluster to run the Karmada control plane, aka. the &lt;code&gt;host cluster&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Build Karmada control plane components based on a current codebase.&lt;/li&gt; &#xA; &lt;li&gt;Deploy Karmada control plane components on the &lt;code&gt;host cluster&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create member clusters and join Karmada.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If everything goes well, at the end of the script output, you will see similar messages as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Local Karmada is running.&#xA;&#xA;To start using your Karmada environment, run:&#xA;  export KUBECONFIG=&#34;$HOME/.kube/karmada.config&#34;&#xA;Please use &#39;kubectl config use-context karmada-host/karmada-apiserver&#39; to switch the host and control plane cluster.&#xA;&#xA;To manage your member clusters, run:&#xA;  export KUBECONFIG=&#34;$HOME/.kube/members.config&#34;&#xA;Please use &#39;kubectl config use-context member1/member2/member3&#39; to switch to the different member cluster.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are two contexts in Karmada:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;karmada-apiserver &lt;code&gt;kubectl config use-context karmada-apiserver&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;karmada-host &lt;code&gt;kubectl config use-context karmada-host&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;karmada-apiserver&lt;/code&gt; is the &lt;strong&gt;main kubeconfig&lt;/strong&gt; to be used when interacting with the Karmada control plane, while &lt;code&gt;karmada-host&lt;/code&gt; is only used for debugging Karmada installation with the host cluster. You can check all clusters at any time by running: &lt;code&gt;kubectl config view&lt;/code&gt;. To switch cluster contexts, run &lt;code&gt;kubectl config use-context [CONTEXT_NAME]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/docs/images/sample-nginx.svg?sanitize=true&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Propagate application&lt;/h3&gt; &#xA;&lt;p&gt;In the following steps, we are going to propagate a deployment by Karmada.&lt;/p&gt; &#xA;&lt;h4&gt;1. Create nginx deployment in Karmada.&lt;/h4&gt; &#xA;&lt;p&gt;First, create a &lt;a href=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/samples/nginx/deployment.yaml&#34;&gt;deployment&lt;/a&gt; named &lt;code&gt;nginx&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl create -f samples/nginx/deployment.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Create PropagationPolicy that will propagate nginx to member cluster&lt;/h4&gt; &#xA;&lt;p&gt;Then, we need to create a policy to propagate the deployment to our member cluster.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl create -f samples/nginx/propagationpolicy.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Check the deployment status from Karmada&lt;/h4&gt; &#xA;&lt;p&gt;You can check deployment status from Karmada, don&#39;t need to access member cluster:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ kubectl get deployment&#xA;NAME    READY   UP-TO-DATE   AVAILABLE   AGE&#xA;nginx   2/2     2            2           20s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Kubernetes compatibility&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.16&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.17&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.18&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.19&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.20&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.21&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.22&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.23&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.24&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.25&lt;/th&gt; &#xA;   &lt;th&gt;Kubernetes 1.26&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v0.9&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v0.10&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v1.0&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v1.1&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v1.2&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v1.3&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v1.4&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v1.5&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada v1.6&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Karmada HEAD (master)&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Key:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;✓&lt;/code&gt; Karmada and the Kubernetes version are exactly compatible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;+&lt;/code&gt; Karmada has features or API objects that may not be present in the Kubernetes version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-&lt;/code&gt; The Kubernetes version has features or API objects that Karmada can&#39;t use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Meeting&lt;/h2&gt; &#xA;&lt;p&gt;Regular Community Meeting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tuesday at 14:30 UTC+8 (Chinese)(biweekly). &lt;a href=&#34;https://www.thetimezoneconverter.com/?t=14%3A30&amp;amp;tz=GMT%2B8&amp;amp;&#34;&gt;Convert to your timezone&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Tuesday at 08:00 Pacific Time (English)(biweekly). &lt;a href=&#34;https://www.thetimezoneconverter.com/?t=8:00&amp;amp;tz=PT%20%28Pacific%20Time%29&#34;&gt;Convert to your timezone&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1y6YLVC-v7cmVAdbjedoyR5WL0-q45DBRXTvz5_I7bkA/edit&#34;&gt;Meeting Notes and Agenda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendar.google.com/calendar/embed?src=karmadaoss%40gmail.com&amp;amp;ctz=Asia%2FShanghai&#34;&gt;Meeting Calendar&lt;/a&gt; | &lt;a href=&#34;https://calendar.google.com/calendar/u/1?cid=a2FybWFkYW9zc0BnbWFpbC5jb20&#34;&gt;Subscribe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zoom.com/my/karmada&#34;&gt;Meeting Link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions, feel free to reach out to us in the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/karmada&#34;&gt;mailing list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud-native.slack.com/archives/C02MUF8QXUN&#34;&gt;slack&lt;/a&gt; | &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;Join&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/karmada_io&#34;&gt;twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Talks and References&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeCon(EU 2021)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LJJoaGszBVk&#34;&gt;Beyond federation: automating multi-cloud workloads with K8s native APIs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeCon(EU 2022)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://youtu.be/rzFbxeZQHWI&#34;&gt;Sailing Multi Cloud Traffic Management With Karmada&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeDay(Israel 2023)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WCrIhRNBZ9I&#34;&gt;Simplifying Multi-cluster Kubernetes Management with Karmada&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeCon(China 2023)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uninSyVBKO4&#34;&gt;Multi-Cloud Multi-Cluster HPA Helps Trip.com Group Deal with Business Downturn and Rapid Recovery&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeCon(China 2023)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=22W1yrEJjtQ&#34;&gt;Break Through Cluster Boundaries to Autoscale Workloads Across Them on a Large Scale&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeCon(China 2023)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=e4GA5e-C7n0&#34;&gt;Cross-Cluster Traffic Orchestration with eBPF&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KubeCon(China 2023)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gcllTXRkz-E&#34;&gt;Non-Intrusively Enable OpenKruise and Argo Workflow in a Multi-Cluster Federation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For blogs, please refer to &lt;a href=&#34;https://karmada.io/blog/&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re interested in being a contributor and want to get involved in developing the Karmada code, please see &lt;a href=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Karmada is under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/karmada-io/karmada/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>