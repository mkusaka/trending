<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-21T03:28:10Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>abiosoft/colima</title>
    <updated>2024-04-21T03:28:10Z</updated>
    <id>tag:github.com,2024-04-21:/abiosoft/colima</id>
    <link href="https://github.com/abiosoft/colima" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Container runtimes on macOS (and Linux) with minimal setup&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abiosoft/colima/main/colima.png&#34; alt=&#34;colima-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Colima - container runtimes on macOS (and Linux) with minimal setup.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/abiosoft/colima/actions/workflows/go.yml&#34;&gt;&lt;img src=&#34;https://github.com/abiosoft/colima/actions/workflows/go.yml/badge.svg?sanitize=true&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/abiosoft/colima/actions/workflows/integration.yml&#34;&gt;&lt;img src=&#34;https://github.com/abiosoft/colima/actions/workflows/integration.yml/badge.svg?sanitize=true&#34; alt=&#34;Integration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abiosoft/colima/main/colima.gif&#34; alt=&#34;Demonstration&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel and M1 Macs support&lt;/li&gt; &#xA; &lt;li&gt;Simple CLI interface&lt;/li&gt; &#xA; &lt;li&gt;Docker and Containerd support&lt;/li&gt; &#xA; &lt;li&gt;Port Forwarding&lt;/li&gt; &#xA; &lt;li&gt;Volume mounts&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Multiple instances&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Colima is available on Homebrew, MacPorts, and Nix. Check &lt;a href=&#34;https://raw.githubusercontent.com/abiosoft/colima/main/docs/INSTALL.md&#34;&gt;here&lt;/a&gt; for other installation options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Homebrew&#xA;brew install colima&#xA;&#xA;# MacPorts&#xA;sudo port install colima&#xA;&#xA;# Nix&#xA;nix-env -iA nixpkgs.colima&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or stay on the bleeding edge (only Homebrew)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install --HEAD colima&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upgrading&lt;/h3&gt; &#xA;&lt;p&gt;If upgrading from v0.5.6 or lower, it is required to start afresh by deleting existing instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;colima delete # delete existing instance&#xA;colima start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Start Colima with defaults&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colima start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more usage options&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colima --help&#xA;colima start --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use a config file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colima start --edit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Runtimes&lt;/h2&gt; &#xA;&lt;p&gt;On initial startup, Colima initiates with a user specified runtime that defaults to Docker.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Docker client is required for Docker runtime. Installable with brew &lt;code&gt;brew install docker&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;docker&lt;/code&gt; client on macOS after &lt;code&gt;colima start&lt;/code&gt; with no additional setup.&lt;/p&gt; &#xA;&lt;h3&gt;Containerd&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;colima start --runtime containerd&lt;/code&gt; starts and setup Containerd. You can use &lt;code&gt;colima nerdctl&lt;/code&gt; to interact with Containerd using &lt;a href=&#34;https://github.com/containerd/nerdctl&#34;&gt;nerdctl&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended to run &lt;code&gt;colima nerdctl install&lt;/code&gt; to install &lt;code&gt;nerdctl&lt;/code&gt; alias script in $PATH.&lt;/p&gt; &#xA;&lt;h3&gt;Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;kubectl is required for Kubernetes. Installable with &lt;code&gt;brew install kubectl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To enable Kubernetes, start Colima with &lt;code&gt;--kubernetes&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colima start --kubernetes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Interacting with Image Registry&lt;/h4&gt; &#xA;&lt;p&gt;For Docker runtime, images built or pulled with Docker are accessible to Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;For Containerd runtime, images built or pulled in the &lt;code&gt;k8s.io&lt;/code&gt; namespace are accessible to Kubernetes.&lt;/p&gt; &#xA;&lt;h3&gt;Customizing the VM&lt;/h3&gt; &#xA;&lt;p&gt;The default VM created by Colima has 2 CPUs, 2GiB memory and 60GiB storage.&lt;/p&gt; &#xA;&lt;p&gt;The VM can be customized either by passing additional flags to &lt;code&gt;colima start&lt;/code&gt;. e.g. &lt;code&gt;--cpu&lt;/code&gt;, &lt;code&gt;--memory&lt;/code&gt;, &lt;code&gt;--disk&lt;/code&gt;, &lt;code&gt;--runtime&lt;/code&gt;. Or by editing the config file with &lt;code&gt;colima start --edit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;del&gt;disk size cannot be changed after the VM is created.&lt;/del&gt; From v0.5.3, disk size can be increased&lt;/p&gt; &#xA;&lt;h4&gt;Customization Examples&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;create VM with 1CPU, 2GiB memory and 10GiB storage.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;colima start --cpu 1 --memory 2 --disk 10&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;modify an existing VM to 4CPUs and 8GiB memory.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;colima stop&#xA;colima start --cpu 4 --memory 8&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;create VM with Rosetta 2 emulation. Requires v0.5.3 and MacOS &amp;gt;= 13 (Ventura)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;colima start --arch aarch64 --vm-type=vz --vz-rosetta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Goal&lt;/h2&gt; &#xA;&lt;p&gt;To provide container runtimes on macOS with minimal setup.&lt;/p&gt; &#xA;&lt;h2&gt;What is with the name?&lt;/h2&gt; &#xA;&lt;p&gt;Colima means Containers in &lt;a href=&#34;https://github.com/lima-vm/lima&#34;&gt;Lima&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since Lima is aka Linux on Mac. By transitivity, Colima can also mean Containers on Linux on Mac.&lt;/p&gt; &#xA;&lt;h2&gt;And the Logo?&lt;/h2&gt; &#xA;&lt;p&gt;The logo was contributed by &lt;a href=&#34;https://github.com/dhodvogner&#34;&gt;Daniel Hodvogner&lt;/a&gt;. Check &lt;a href=&#34;https://github.com/abiosoft/colima/issues/781&#34;&gt;this issue&lt;/a&gt; for more.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting and FAQs&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/abiosoft/colima/main/docs/FAQ.md&#34;&gt;here&lt;/a&gt; for Frequently Asked Questions.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abiosoft/colima/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abiosoft/colima/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;#colima&lt;/code&gt; channel in the CNCF Slack &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;New account: &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;https://slack.cncf.io/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Login: &lt;a href=&#34;https://cloud-native.slack.com/&#34;&gt;https://cloud-native.slack.com/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help Wanted&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation (wiki pages)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h2&gt;Sponsoring the Project&lt;/h2&gt; &#xA;&lt;p&gt;If you (or your company) are benefiting from the project and would like to support the contributors, kindly support the project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/abiosoft&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 40px !important;width: 160px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://macstadium.com&#34;&gt;&lt;img src=&#34;https://uploads-ssl.webflow.com/5ac3c046c82724970fc60918/5c019d917bba312af7553b49_MacStadium-developerlogo.png&#34; style=&#34;max-height: 150px&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bnb-chain/bsc</title>
    <updated>2024-04-21T03:28:10Z</updated>
    <id>tag:github.com,2024-04-21:/bnb-chain/bsc</id>
    <link href="https://github.com/bnb-chain/bsc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A BNB Smart Chain client based on the go-ethereum fork&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;BNB Smart Chain&lt;/h2&gt; &#xA;&lt;p&gt;The goal of BNB Smart Chain is to bring programmability and interoperability to BNB Beacon Chain. In order to embrace the existing popular community and advanced technology, it will bring huge benefits by staying compatible with all the existing smart contracts on Ethereum and Ethereum tooling. And to achieve that, the easiest solution is to develop based on go-ethereum fork, as we respect the great work of Ethereum very much.&lt;/p&gt; &#xA;&lt;p&gt;BNB Smart Chain starts its development based on go-ethereum fork. So you may see many toolings, binaries and also docs are based on Ethereum ones, such as the name “geth”.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/ethereum/go-ethereum?tab=doc&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/ethereum/go-ethereum&#34; alt=&#34;API Reference&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/z2VpC455eU&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join%20chat-blue.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;But from that baseline of EVM compatible, BNB Smart Chain introduces a system of 21 validators with Proof of Staked Authority (PoSA) consensus that can support short block time and lower fees. The most bonded validator candidates of staking will become validators and produce blocks. The double-sign detection and other slashing logic guarantee security, stability, and chain finality.&lt;/p&gt; &#xA;&lt;p&gt;Cross-chain transfer and other communication are possible due to native support of interoperability. Relayers and on-chain contracts are developed to support that. BNB Beacon Chain DEX remains a liquid venue of the exchange of assets on both chains. This dual-chain architecture will be ideal for users to take advantage of the fast trading on one side and build their decentralized apps on the other side. &lt;strong&gt;The BNB Smart Chain&lt;/strong&gt; will be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;A self-sovereign blockchain&lt;/strong&gt;: Provides security and safety with elected validators.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;EVM-compatible&lt;/strong&gt;: Supports all the existing Ethereum tooling along with faster finality and cheaper transaction fees.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interoperable&lt;/strong&gt;: Comes with efficient native dual chain communication; Optimized for scaling high-performance dApps that require fast and smooth user experience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Distributed with on-chain governance&lt;/strong&gt;: Proof of Staked Authority brings in decentralization and community participants. As the native token, BNB will serve as both the gas of smart contract execution and tokens for staking.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More details in &lt;a href=&#34;https://www.bnbchain.org/en#smartChain&#34;&gt;White Paper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Key features&lt;/h2&gt; &#xA;&lt;h3&gt;Proof of Staked Authority&lt;/h3&gt; &#xA;&lt;p&gt;Although Proof-of-Work (PoW) has been approved as a practical mechanism to implement a decentralized network, it is not friendly to the environment and also requires a large size of participants to maintain the security.&lt;/p&gt; &#xA;&lt;p&gt;Proof-of-Authority(PoA) provides some defense to 51% attack, with improved efficiency and tolerance to certain levels of Byzantine players (malicious or hacked). Meanwhile, the PoA protocol is most criticized for being not as decentralized as PoW, as the validators, i.e. the nodes that take turns to produce blocks, have all the authorities and are prone to corruption and security attacks.&lt;/p&gt; &#xA;&lt;p&gt;Other blockchains, such as EOS and Cosmos both, introduce different types of Deputy Proof of Stake (DPoS) to allow the token holders to vote and elect the validator set. It increases the decentralization and favors community governance.&lt;/p&gt; &#xA;&lt;p&gt;To combine DPoS and PoA for consensus, BNB Smart Chain implement a novel consensus engine called Parlia that:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Blocks are produced by a limited set of validators.&lt;/li&gt; &#xA; &lt;li&gt;Validators take turns to produce blocks in a PoA manner, similar to Ethereum&#39;s Clique consensus engine.&lt;/li&gt; &#xA; &lt;li&gt;Validator set are elected in and out based on a staking based governance on BNB Beacon Chain.&lt;/li&gt; &#xA; &lt;li&gt;The validator set change is relayed via a cross-chain communication mechanism.&lt;/li&gt; &#xA; &lt;li&gt;Parlia consensus engine will interact with a set of &lt;a href=&#34;https://docs.bnbchain.org/docs/learn/system-contract&#34;&gt;system contracts&lt;/a&gt; to achieve liveness slash, revenue distributing and validator set renewing func.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Light Client of BNB Beacon Chain&lt;/h3&gt; &#xA;&lt;p&gt;To achieve the cross-chain communication from BNB Beacon Chain to BNB Smart Chain, need introduce a on-chain light client verification algorithm. It contains two parts:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnb-chain/bsc/raw/master/core/vm/contracts_lightclient.go&#34;&gt;Stateless Precompiled contracts&lt;/a&gt; to do tendermint header verification and Merkle Proof verification.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnb-chain/bsc-genesis-contract/raw/master/contracts/TendermintLightClient.sol&#34;&gt;Stateful solidity contracts&lt;/a&gt; to store validator set and trusted appHash.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Native Token&lt;/h2&gt; &#xA;&lt;p&gt;BNB will run on BNB Smart Chain in the same way as ETH runs on Ethereum so that it remains as &lt;code&gt;native token&lt;/code&gt; for BSC. This means, BNB will be used to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;pay &lt;code&gt;gas&lt;/code&gt; to deploy or invoke Smart Contract on BSC&lt;/li&gt; &#xA; &lt;li&gt;perform cross-chain operations, such as transfer token assets across BNB Smart Chain and BNB Beacon Chain.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building the source&lt;/h2&gt; &#xA;&lt;p&gt;Many of the below are the same as or similar to go-ethereum.&lt;/p&gt; &#xA;&lt;p&gt;For prerequisites and detailed build instructions please read the &lt;a href=&#34;https://geth.ethereum.org/docs/getting-started/installing-geth&#34;&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Building &lt;code&gt;geth&lt;/code&gt; requires both a Go (version 1.21 or later) and a C compiler (GCC 5 or higher). You can install them using your favourite package manager. Once the dependencies are installed, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make geth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, to build the full suite of utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you get such error when running the node with self built binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Caught SIGILL in blst_cgo_init, consult &amp;lt;blst&amp;gt;/bindinds/go/README.md.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;please try to add the following environment variables and build again:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export CGO_CFLAGS=&#34;-O -D__BLST_PORTABLE__&#34; &#xA;export CGO_CFLAGS_ALLOW=&#34;-O -D__BLST_PORTABLE__&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Executables&lt;/h2&gt; &#xA;&lt;p&gt;The bsc project comes with several wrappers/executables found in the &lt;code&gt;cmd&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;code&gt;geth&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Main BNB Smart Chain client binary. It is the entry point into the BSC network (main-, test- or private net), capable of running as a full node (default), archive node (retaining all historical state) or a light node (retrieving data live). It has the same and more RPC and other interface as go-ethereum and can be used by other processes as a gateway into the BSC network via JSON RPC endpoints exposed on top of HTTP, WebSocket and/or IPC transports. &lt;code&gt;geth --help&lt;/code&gt; and the &lt;a href=&#34;https://geth.ethereum.org/docs/interface/command-line-options&#34;&gt;CLI page&lt;/a&gt; for command line options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;clef&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stand-alone signing tool, which can be used as a backend signer for &lt;code&gt;geth&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;devp2p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utilities to interact with nodes on the networking layer, without running a full blockchain.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;abigen&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Source code generator to convert Ethereum contract definitions into easy to use, compile-time type-safe Go packages. It operates on plain &lt;a href=&#34;https://docs.soliditylang.org/en/develop/abi-spec.html&#34;&gt;Ethereum contract ABIs&lt;/a&gt; with expanded functionality if the contract bytecode is also available. However, it also accepts Solidity source files, making development much more streamlined. Please see our &lt;a href=&#34;https://geth.ethereum.org/docs/dapp/native-bindings&#34;&gt;Native DApps&lt;/a&gt; page for details.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;bootnode&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stripped down version of our Ethereum client implementation that only takes part in the network node discovery protocol, but does not run any of the higher level application protocols. It can be used as a lightweight bootstrap node to aid in finding peers in private networks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;evm&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Developer utility version of the EVM (Ethereum Virtual Machine) that is capable of running bytecode snippets within a configurable environment and execution mode. Its purpose is to allow isolated, fine-grained debugging of EVM opcodes (e.g. &lt;code&gt;evm --code 60ff60ff --debug run&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;rlpdump&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Developer utility tool to convert binary RLP (&lt;a href=&#34;https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp&#34;&gt;Recursive Length Prefix&lt;/a&gt;) dumps (data encoding used by the Ethereum protocol both network as well as consensus wise) to user-friendlier hierarchical representation (e.g. &lt;code&gt;rlpdump --hex CE0183FFFFFFC4C304050583616263&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Running &lt;code&gt;geth&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Going through all the possible command line flags is out of scope here (please consult our &lt;a href=&#34;https://geth.ethereum.org/docs/fundamentals/command-line-options&#34;&gt;CLI Wiki page&lt;/a&gt;), but we&#39;ve enumerated a few common parameter combos to get you up to speed quickly on how you can run your own &lt;code&gt;geth&lt;/code&gt; instance.&lt;/p&gt; &#xA;&lt;h3&gt;Hardware Requirements&lt;/h3&gt; &#xA;&lt;p&gt;The hardware must meet certain requirements to run a full node on mainnet:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VPS running recent versions of Mac OS X, Linux, or Windows.&lt;/li&gt; &#xA; &lt;li&gt;IMPORTANT 3 TB(Dec 2023) of free disk space, solid-state drive(SSD), gp3, 8k IOPS, 500 MB/S throughput, read latency &amp;lt;1ms. (if node is started with snap sync, it will need NVMe SSD)&lt;/li&gt; &#xA; &lt;li&gt;16 cores of CPU and 64 GB of memory (RAM)&lt;/li&gt; &#xA; &lt;li&gt;Suggest m5zn.6xlarge or r7iz.4xlarge instance type on AWS, c2-standard-16 on Google cloud.&lt;/li&gt; &#xA; &lt;li&gt;A broadband Internet connection with upload/download speeds of 5 MB/S&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The requirement for testnet:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VPS running recent versions of Mac OS X, Linux, or Windows.&lt;/li&gt; &#xA; &lt;li&gt;500G of storage for testnet.&lt;/li&gt; &#xA; &lt;li&gt;4 cores of CPU and 16 gigabytes of memory (RAM).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Steps to Run a Fullnode&lt;/h3&gt; &#xA;&lt;h4&gt;1. Download the pre-build binaries&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Linux&#xA;wget $(curl -s https://api.github.com/repos/bnb-chain/bsc/releases/latest |grep browser_ |grep geth_linux |cut -d\&#34; -f4)&#xA;mv geth_linux geth&#xA;chmod -v u+x geth&#xA;&#xA;# MacOS&#xA;wget $(curl -s https://api.github.com/repos/bnb-chain/bsc/releases/latest |grep browser_ |grep geth_mac |cut -d\&#34; -f4)&#xA;mv geth_macos geth&#xA;chmod -v u+x geth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Download the config files&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;//== mainnet&#xA;wget $(curl -s https://api.github.com/repos/bnb-chain/bsc/releases/latest |grep browser_ |grep mainnet |cut -d\&#34; -f4)&#xA;unzip mainnet.zip&#xA;&#xA;//== testnet&#xA;wget $(curl -s https://api.github.com/repos/bnb-chain/bsc/releases/latest |grep browser_ |grep testnet |cut -d\&#34; -f4)&#xA;unzip testnet.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Download snapshot&lt;/h4&gt; &#xA;&lt;p&gt;Download latest chaindata snapshot from &lt;a href=&#34;https://github.com/bnb-chain/bsc-snapshots&#34;&gt;here&lt;/a&gt;. Follow the guide to structure your files.&lt;/p&gt; &#xA;&lt;p&gt;Note: If you encounter difficulties downloading the chaindata snapshot and prefer to synchronize from the genesis block on the Chapel testnet, remember to include the additional flag &lt;code&gt;--chapel&lt;/code&gt; when initially launching Geth.&lt;/p&gt; &#xA;&lt;h4&gt;4. Start a full node&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./geth --config ./config.toml --datadir ./node  --cache 8000 --rpc.allow-unprotected-txs --history.transactions 0&#xA;&#xA;## It is recommand to run fullnode with `--tries-verify-mode none` if you want high performance and care little about state consistency&#xA;## It will run with Hash-Base Storage Scheme by default&#xA;./geth --config ./config.toml --datadir ./node  --cache 8000 --rpc.allow-unprotected-txs --history.transactions 0 --tries-verify-mode none&#xA;&#xA;## It runs fullnode with Path-Base Storage Scheme. &#xA;## It will enable inline state prune, keeping the latest 90000 blocks&#39; history state by default.&#xA;./geth --config ./config.toml --datadir ./node  --cache 8000 --rpc.allow-unprotected-txs --history.transactions 0 --tries-verify-mode none --state.scheme path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Monitor node status&lt;/h4&gt; &#xA;&lt;p&gt;Monitor the log from &lt;strong&gt;./node/bsc.log&lt;/strong&gt; by default. When the node has started syncing, should be able to see the following output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;t=2022-09-08T13:00:27+0000 lvl=info msg=&#34;Imported new chain segment&#34;             blocks=1    txs=177   mgas=17.317   elapsed=31.131ms    mgasps=556.259  number=21,153,429 hash=0x42e6b54ba7106387f0650defc62c9ace3160b427702dab7bd1c5abb83a32d8db dirty=&#34;0.00 B&#34;&#xA;t=2022-09-08T13:00:29+0000 lvl=info msg=&#34;Imported new chain segment&#34;             blocks=1    txs=251   mgas=39.638   elapsed=68.827ms    mgasps=575.900  number=21,153,430 hash=0xa3397b273b31b013e43487689782f20c03f47525b4cd4107c1715af45a88796e dirty=&#34;0.00 B&#34;&#xA;t=2022-09-08T13:00:33+0000 lvl=info msg=&#34;Imported new chain segment&#34;             blocks=1    txs=197   mgas=19.364   elapsed=34.663ms    mgasps=558.632  number=21,153,431 hash=0x0c7872b698f28cb5c36a8a3e1e315b1d31bda6109b15467a9735a12380e2ad14 dirty=&#34;0.00 B&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;6. Interact with fullnode&lt;/h4&gt; &#xA;&lt;p&gt;Start up &lt;code&gt;geth&lt;/code&gt;&#39;s built-in interactive &lt;a href=&#34;https://geth.ethereum.org/docs/interface/javascript-console&#34;&gt;JavaScript console&lt;/a&gt;, (via the trailing &lt;code&gt;console&lt;/code&gt; subcommand) through which you can interact using &lt;a href=&#34;https://web3js.readthedocs.io/en/&#34;&gt;&lt;code&gt;web3&lt;/code&gt; methods&lt;/a&gt; (note: the &lt;code&gt;web3&lt;/code&gt; version bundled within &lt;code&gt;geth&lt;/code&gt; is very old, and not up to date with official docs), as well as &lt;code&gt;geth&lt;/code&gt;&#39;s own &lt;a href=&#34;https://geth.ethereum.org/docs/rpc/server&#34;&gt;management APIs&lt;/a&gt;. This tool is optional and if you leave it out you can always attach to an already running &lt;code&gt;geth&lt;/code&gt; instance with &lt;code&gt;geth attach&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;7. More&lt;/h4&gt; &#xA;&lt;p&gt;More details about &lt;a href=&#34;https://docs.bnbchain.org/docs/validator/fullnode&#34;&gt;running a node&lt;/a&gt; and &lt;a href=&#34;https://docs.bnbchain.org/docs/validator/create-val&#34;&gt;becoming a validator&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Although some internal protective measures prevent transactions from crossing over between the main network and test network, you should always use separate accounts for play and real money. Unless you manually move accounts, &lt;code&gt;geth&lt;/code&gt; will by default correctly separate the two networks and will not make any accounts available between them.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;As an alternative to passing the numerous flags to the &lt;code&gt;geth&lt;/code&gt; binary, you can also pass a configuration file via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth --config /path/to/your_config.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get an idea of how the file should look like you can use the &lt;code&gt;dumpconfig&lt;/code&gt; subcommand to export your existing configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ geth --your-favourite-flags dumpconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Programmatically interfacing &lt;code&gt;geth&lt;/code&gt; nodes&lt;/h3&gt; &#xA;&lt;p&gt;As a developer, sooner rather than later you&#39;ll want to start interacting with &lt;code&gt;geth&lt;/code&gt; and the BSC network via your own programs and not manually through the console. To aid this, &lt;code&gt;geth&lt;/code&gt; has built-in support for a JSON-RPC based APIs (&lt;a href=&#34;https://ethereum.github.io/execution-apis/api-documentation/&#34;&gt;standard APIs&lt;/a&gt; and &lt;a href=&#34;https://geth.ethereum.org/docs/interacting-with-geth/rpc&#34;&gt;&lt;code&gt;geth&lt;/code&gt; specific APIs&lt;/a&gt;). These can be exposed via HTTP, WebSockets and IPC (UNIX sockets on UNIX based platforms, and named pipes on Windows).&lt;/p&gt; &#xA;&lt;p&gt;The IPC interface is enabled by default and exposes all the APIs supported by &lt;code&gt;geth&lt;/code&gt;, whereas the HTTP and WS interfaces need to manually be enabled and only expose a subset of APIs due to security reasons. These can be turned on/off and configured as you&#39;d expect.&lt;/p&gt; &#xA;&lt;p&gt;HTTP based JSON-RPC API options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--http&lt;/code&gt; Enable the HTTP-RPC server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--http.addr&lt;/code&gt; HTTP-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--http.port&lt;/code&gt; HTTP-RPC server listening port (default: &lt;code&gt;8545&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--http.api&lt;/code&gt; API&#39;s offered over the HTTP-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--http.corsdomain&lt;/code&gt; Comma separated list of domains from which to accept cross origin requests (browser enforced)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws&lt;/code&gt; Enable the WS-RPC server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws.addr&lt;/code&gt; WS-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws.port&lt;/code&gt; WS-RPC server listening port (default: &lt;code&gt;8546&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws.api&lt;/code&gt; API&#39;s offered over the WS-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ws.origins&lt;/code&gt; Origins from which to accept WebSocket requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ipcdisable&lt;/code&gt; Disable the IPC-RPC server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ipcapi&lt;/code&gt; API&#39;s offered over the IPC-RPC interface (default: &lt;code&gt;admin,debug,eth,miner,net,personal,txpool,web3&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ipcpath&lt;/code&gt; Filename for IPC socket/pipe within the datadir (explicit paths escape it)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll need to use your own programming environments&#39; capabilities (libraries, tools, etc) to connect via HTTP, WS or IPC to a &lt;code&gt;geth&lt;/code&gt; node configured with the above flags and you&#39;ll need to speak &lt;a href=&#34;https://www.jsonrpc.org/specification&#34;&gt;JSON-RPC&lt;/a&gt; on all transports. You can reuse the same connection for multiple requests!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: Please understand the security implications of opening up an HTTP/WS based transport before doing so! Hackers on the internet are actively trying to subvert BSC nodes with exposed APIs! Further, all browser tabs can access locally running web servers, so malicious web pages could try to subvert locally available APIs!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Operating a private network&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnb-chain/node-deploy/&#34;&gt;BSC-Deploy&lt;/a&gt;: deploy tool for setting up both BNB Beacon Chain, BNB Smart Chain and the cross chain infrastructure between them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnb-chain/bsc-docker&#34;&gt;BSC-Docker&lt;/a&gt;: deploy tool for setting up local BSC cluster in container.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running a bootnode&lt;/h2&gt; &#xA;&lt;p&gt;Bootnodes are super-lightweight nodes that are not behind a NAT and are running just discovery protocol. When you start up a node it should log your enode, which is a public identifier that others can use to connect to your node.&lt;/p&gt; &#xA;&lt;p&gt;First the bootnode requires a key, which can be created with the following command, which will save a key to boot.key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bootnode -genkey boot.key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This key can then be used to generate a bootnode as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bootnode -nodekey boot.key -addr :30311 -network bsc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The choice of port passed to -addr is arbitrary. The bootnode command returns the following logs to the terminal, confirming that it is running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;enode://3063d1c9e1b824cfbb7c7b6abafa34faec6bb4e7e06941d218d760acdd7963b274278c5c3e63914bd6d1b58504c59ec5522c56f883baceb8538674b92da48a96@127.0.0.1:0?discport=30311&#xA;Note: you&#39;re using cmd/bootnode, a developer tool.&#xA;We recommend using a regular node as bootstrap node for production deployments.&#xA;INFO [08-21|11:11:30.687] New local node record                    seq=1,692,616,290,684 id=2c9af1742f8f85ce ip=&amp;lt;nil&amp;gt; udp=0 tcp=0&#xA;INFO [08-21|12:11:30.753] New local node record                    seq=1,692,616,290,685 id=2c9af1742f8f85ce ip=54.217.128.118 udp=30311 tcp=0&#xA;INFO [09-01|02:46:26.234] New local node record                    seq=1,692,616,290,686 id=2c9af1742f8f85ce ip=34.250.32.100  udp=30311 tcp=0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering helping out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to bsc, please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base. If you wish to submit more complex changes though, please check up with the core devs first on &lt;a href=&#34;https://discord.gg/bnbchain&#34;&gt;our discord channel&lt;/a&gt; to ensure those changes are in line with the general philosophy of the project and/or get some early feedback which can make both your efforts much lighter as well as our review and merge procedures quick and simple.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure your contributions adhere to our coding guidelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code must adhere to the official Go &lt;a href=&#34;https://golang.org/doc/effective_go.html#formatting&#34;&gt;formatting&lt;/a&gt; guidelines (i.e. uses &lt;a href=&#34;https://golang.org/cmd/gofmt/&#34;&gt;gofmt&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Code must be documented adhering to the official Go &lt;a href=&#34;https://golang.org/doc/effective_go.html#commentary&#34;&gt;commentary&lt;/a&gt; guidelines.&lt;/li&gt; &#xA; &lt;li&gt;Pull requests need to be based on and opened against the &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt; &#xA; &lt;li&gt;Commit messages should be prefixed with the package(s) they modify. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;E.g. &#34;eth, rpc: make trace configs optional&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://geth.ethereum.org/docs/developers/geth-developer/dev-guide&#34;&gt;Developers&#39; Guide&lt;/a&gt; for more details on configuring your environment, managing project dependencies, and testing procedures.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The bsc library (i.e. all code outside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/lgpl-3.0.en.html&#34;&gt;GNU Lesser General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING.LESSER&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;The bsc binaries (i.e. all code inside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;GNU General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/beats</title>
    <updated>2024-04-21T03:28:10Z</updated>
    <id>tag:github.com,2024-04-21:/elastic/beats</id>
    <link href="https://github.com/elastic/beats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐠 Beats - Lightweight shippers for Elasticsearch &amp; Logstash&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/job/main/&#34;&gt;&lt;img src=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/job/main/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/elastic/beats&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/elastic/beats&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://houndci.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg?sanitize=true&#34; alt=&#34;Reviewed by Hound&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Beats - The Lightweight Shippers of the Elastic Stack&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.elastic.co/beats&#34;&gt;Beats&lt;/a&gt; are lightweight data shippers, written in Go, that you install on your servers to capture all sorts of operational data (think of logs, metrics, or network packet data). The Beats send the operational data to Elasticsearch, either directly or via Logstash, so it can be visualized with Kibana.&lt;/p&gt; &#xA;&lt;p&gt;By &#34;lightweight&#34;, we mean that Beats have a small installation footprint, use limited system resources, and have no runtime dependencies.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains &lt;a href=&#34;https://github.com/elastic/beats/tree/main/libbeat&#34;&gt;libbeat&lt;/a&gt;, our Go framework for creating Beats, and all the officially supported Beats:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Beat&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/auditbeat&#34;&gt;Auditbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Collect your Linux audit framework data and monitor the integrity of your files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/filebeat&#34;&gt;Filebeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tails and ships log files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/x-pack/functionbeat&#34;&gt;Functionbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Read and ships events from serverless infrastructure.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/heartbeat&#34;&gt;Heartbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ping remote services for availability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/metricbeat&#34;&gt;Metricbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fetches sets of metrics from the operating system and services&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/packetbeat&#34;&gt;Packetbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Monitors the network and applications by sniffing packets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/winlogbeat&#34;&gt;Winlogbeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fetches and ships Windows Event logs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elastic/beats/tree/main/x-pack/osquerybeat&#34;&gt;Osquerybeat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs Osquery and manages interraction with it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;In addition to the above Beats, which are officially supported by &lt;a href=&#34;https://elastic.co&#34;&gt;Elastic&lt;/a&gt;, the community has created a set of other Beats that make use of libbeat but live outside of this Github repository. We maintain a list of community Beats &lt;a href=&#34;https://www.elastic.co/guide/en/beats/libbeat/master/community-beats.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for each of the Beats on the &lt;a href=&#34;https://www.elastic.co/guide/&#34;&gt;elastic.co site&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/libbeat/current/index.html&#34;&gt;Beats platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/auditbeat/current/index.html&#34;&gt;Auditbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/filebeat/current/index.html&#34;&gt;Filebeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/functionbeat/current/index.html&#34;&gt;Functionbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/heartbeat/current/index.html&#34;&gt;Heartbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/metricbeat/current/index.html&#34;&gt;Metricbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/packetbeat/current/index.html&#34;&gt;Packetbeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/beats/winlogbeat/current/index.html&#34;&gt;Winlogbeat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation and Getting Started information for the Elastic Agent&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for the Elastic Agent on the &lt;a href=&#34;https://www.elastic.co/downloads/elastic-agent&#34;&gt;elastic.co site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;If you need help or hit an issue, please start by opening a topic on our &lt;a href=&#34;https://discuss.elastic.co/c/beats&#34;&gt;discuss forums&lt;/a&gt;. Please note that we reserve GitHub tickets for confirmed bugs and enhancement requests.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;You can download pre-compiled Beats binaries, as well as packages for the supported platforms, from &lt;a href=&#34;https://www.elastic.co/downloads/beats&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love working with you! You can help make the Beats better in many ways: report issues, help us reproduce issues, fix bugs, add functionality, or even create your own Beat.&lt;/p&gt; &#xA;&lt;p&gt;Please start by reading our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/beats/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Building Beats from the Source&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/beats/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for information about setting up your dev environment to build Beats from the source.&lt;/p&gt; &#xA;&lt;h2&gt;Snapshots&lt;/h2&gt; &#xA;&lt;p&gt;For testing purposes, we generate snapshot builds that you can find &lt;a href=&#34;https://artifacts-api.elastic.co/v1/search/8.0-SNAPSHOT/&#34;&gt;here&lt;/a&gt;. Please be aware that these are built on top of main and are not meant for production.&lt;/p&gt; &#xA;&lt;h2&gt;CI&lt;/h2&gt; &#xA;&lt;h3&gt;PR Comments&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to trigger some jobs by putting a comment on a GitHub PR. (This service is only available for users affiliated with Elastic and not for open-source contributors.)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats/&#34;&gt;beats&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;jenkins run the tests please&lt;/code&gt; or &lt;code&gt;jenkins run tests&lt;/code&gt; or &lt;code&gt;/test&lt;/code&gt; will kick off a default build.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test macos&lt;/code&gt; will kick off a default build with also the &lt;code&gt;macos&lt;/code&gt; stages.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test &amp;lt;beat-name&amp;gt;&lt;/code&gt; will kick off the default build for the given PR in addition to the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt; build itself.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/test &amp;lt;beat-name&amp;gt; for macos&lt;/code&gt; will kick off a default build with also the &lt;code&gt;macos&lt;/code&gt; stage for the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/apm-beats-update/&#34;&gt;apm-beats-update&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/run apm-beats-update&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/packaging/&#34;&gt;apm-beats-packaging&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/package&lt;/code&gt; or &lt;code&gt;/packaging&lt;/code&gt; will kick of a build to generate the packages for beats.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beats-ci.elastic.co/job/Beats/job/beats-tester/&#34;&gt;apm-beats-tester&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/beats-tester&lt;/code&gt; will kick of a build to validate the generated packages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PR Labels&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s possible to configure the build on a GitHub PR by labelling the PR with the below labels&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt; to force the following builds to run the stages for the &lt;code&gt;&amp;lt;beat-name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;macOS&lt;/code&gt; to force the following builds to run the &lt;code&gt;macos&lt;/code&gt; stages.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>