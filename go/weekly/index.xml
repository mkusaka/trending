<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-11T01:42:52Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>istio/istio</title>
    <updated>2022-09-11T01:42:52Z</updated>
    <id>tag:github.com,2022-09-11:/istio/istio</id>
    <link href="https://github.com/istio/istio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Connect, secure, control, and observe services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Istio&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1395&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1395/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/istio/istio&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/istio/istio&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/istio.io/istio&#34;&gt;&lt;img src=&#34;https://godoc.org/istio.io/istio?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://istio.io/&#34;&gt; &lt;img src=&#34;https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg?sanitize=true&#34; alt=&#34;Istio logo&#34; title=&#34;Istio&#34; height=&#34;100&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;An open platform to connect, manage, and secure microservices.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For in-depth information about how to use Istio, visit &lt;a href=&#34;https://istio.io&#34;&gt;istio.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To ask questions and get assistance from our community, visit &lt;a href=&#34;https://discuss.istio.io&#34;&gt;discuss.istio.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To learn how to participate in our overall community, visit &lt;a href=&#34;https://istio.io/about/community&#34;&gt;our community page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In this README:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/#repositories&#34;&gt;Repositories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/#issue-management&#34;&gt;Issue management&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, here are some other documents you may wish to read:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istio/community#istio-community&#34;&gt;Istio Community&lt;/a&gt; - describes how to get involved and contribute to the Istio project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istio/istio/wiki/Preparing-for-Development&#34;&gt;Istio Developer&#39;s Guide&lt;/a&gt; - explains how to set up and use an Istio development environment&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istio/istio/wiki/Development-Conventions&#34;&gt;Project Conventions&lt;/a&gt; - describes the conventions we use within the code base&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istio/istio/wiki/Writing-Fast-and-Lean-Code&#34;&gt;Creating Fast and Lean Code&lt;/a&gt; - performance-oriented advice and guidelines for the code base&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll find many other useful documents on our &lt;a href=&#34;https://github.com/istio/istio/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://istio.io/latest/docs/concepts/what-is-istio/&#34;&gt;Istio&lt;/a&gt; is an open platform for providing a uniform way to &lt;a href=&#34;https://istio.io/latest/docs/examples/microservices-istio/&#34;&gt;integrate microservices&lt;/a&gt;, manage &lt;a href=&#34;https://istio.io/latest/docs/concepts/traffic-management/&#34;&gt;traffic flow&lt;/a&gt; across microservices, enforce policies and aggregate telemetry data. Istio&#39;s control plane provides an abstraction layer over the underlying cluster management platform, such as Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;Istio is composed of these components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Envoy&lt;/strong&gt; - Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a &lt;em&gt;secure microservice mesh&lt;/em&gt; providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Istiod&lt;/strong&gt; - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pilot&lt;/strong&gt; - Responsible for configuring the proxies at runtime.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Citadel&lt;/strong&gt; - Responsible for certificate issuance and rotation.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Galley&lt;/strong&gt; - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Operator&lt;/strong&gt; - The component provides user friendly options to operate the Istio service mesh.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repositories&lt;/h2&gt; &#xA;&lt;p&gt;The Istio project is divided across a few GitHub repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/istio/api&#34;&gt;istio/api&lt;/a&gt;. This repository defines component-level APIs and common configuration formats for the Istio platform.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/istio/community&#34;&gt;istio/community&lt;/a&gt;. This repository contains information on the Istio community, including the various documents that govern the Istio open source project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/README.md&#34;&gt;istio/istio&lt;/a&gt;. This is the main code repository. It hosts Istio&#39;s core components, install artifacts, and sample programs. It includes:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/istioctl/&#34;&gt;istioctl&lt;/a&gt;. This directory contains code for the &lt;a href=&#34;https://istio.io/latest/docs/reference/commands/istioctl/&#34;&gt;&lt;em&gt;istioctl&lt;/em&gt;&lt;/a&gt; command line utility.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/operator/&#34;&gt;operator&lt;/a&gt;. This directory contains code for the &lt;a href=&#34;https://istio.io/latest/docs/setup/install/operator/&#34;&gt;Istio Operator&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/pilot/&#34;&gt;pilot&lt;/a&gt;. This directory contains platform-specific code to populate the &lt;a href=&#34;https://istio.io/docs/concepts/traffic-management/#pilot&#34;&gt;abstract service model&lt;/a&gt;, dynamically reconfigure the proxies when the application topology changes, as well as translate &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/&#34;&gt;routing rules&lt;/a&gt; into proxy specific configuration.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/istio/istio/master/security/&#34;&gt;security&lt;/a&gt;. This directory contains &lt;a href=&#34;https://istio.io/latest/docs/concepts/security/&#34;&gt;security&lt;/a&gt; related code, including Citadel (acting as Certificate Authority), citadel agent, etc.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/istio/proxy&#34;&gt;istio/proxy&lt;/a&gt;. The Istio proxy contains extensions to the &lt;a href=&#34;https://github.com/envoyproxy/envoy&#34;&gt;Envoy proxy&lt;/a&gt; (in the form of Envoy filters) that support authentication, authorization, and telemetry collection.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issue management&lt;/h2&gt; &#xA;&lt;p&gt;We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Epic&lt;/strong&gt;. An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things. Each issue is ultimately part of an epic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Milestone&lt;/strong&gt;. Each issue is assigned a milestone. This is 0.1, 0.2, ..., or &#39;Nebulous Future&#39;. The milestone indicates when we think the issue should get addressed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Priority&lt;/strong&gt;. Each issue has a priority which is represented by the column in the &lt;a href=&#34;https://github.com/orgs/istio/projects/6&#34;&gt;Prioritization&lt;/a&gt; project. Priority can be one of P0, P1, P2, or &amp;gt;P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the milestone cannot be considered achieved if the issue isn&#39;t resolved.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ginuerzh/gost</title>
    <updated>2022-09-11T01:42:52Z</updated>
    <id>tag:github.com,2022-09-11:/ginuerzh/gost</id>
    <link href="https://github.com/ginuerzh/gost" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GO Simple Tunnel - a simple tunnel written in golang&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GO Simple Tunnel&lt;/h1&gt; &#xA;&lt;h3&gt;GO语言实现的安全隧道&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/ginuerzh/gost&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/ginuerzh/gost?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/ginuerzh/gost&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/ginuerzh/gost&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/ginuerzh/gost/branch/master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ginuerzh/gost/branch/master/graphs/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ginuerzh/gost/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/ginuerzh/gost.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/ginuerzh/gost/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/ginuerzh/gost.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snapcraft.io/gost&#34;&gt;&lt;img src=&#34;https://snapcraft.io/gost/badge.svg?sanitize=true&#34; alt=&#34;gost&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ginuerzh/gost/master/README_en.md&#34;&gt;English README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;！！！&lt;a href=&#34;https://latest.gost.run&#34;&gt;V3版本已经可用，欢迎抢先体验&lt;/a&gt;！！！&lt;/h3&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多端口监听&lt;/li&gt; &#xA; &lt;li&gt;可设置转发代理，支持多级转发(代理链)&lt;/li&gt; &#xA; &lt;li&gt;支持标准HTTP/HTTPS/HTTP2/SOCKS4(A)/SOCKS5代理协议&lt;/li&gt; &#xA; &lt;li&gt;Web代理支持&lt;a href=&#34;https://v2.gost.run/probe_resist/&#34;&gt;探测防御&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/configuration/&#34;&gt;支持多种隧道类型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/socks/&#34;&gt;SOCKS5代理支持TLS协商加密&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/socks/&#34;&gt;Tunnel UDP over TCP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/redirect/&#34;&gt;TCP/UDP透明代理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/port-forwarding/&#34;&gt;本地/远程TCP/UDP端口转发&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/ss/&#34;&gt;支持Shadowsocks(TCP/UDP)协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/sni/&#34;&gt;支持SNI代理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/permission/&#34;&gt;权限控制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/load-balancing/&#34;&gt;负载均衡&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/bypass/&#34;&gt;路由控制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DNS&lt;a href=&#34;https://v2.gost.run/resolver/&#34;&gt;解析&lt;/a&gt;和&lt;a href=&#34;https://v2.gost.run/dns/&#34;&gt;代理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v2.gost.run/tuntap/&#34;&gt;TUN/TAP设备&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Wiki站点: &lt;a href=&#34;https://v2.gost.run&#34;&gt;v2.gost.run&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Telegram讨论群: &lt;a href=&#34;https://t.me/gogost&#34;&gt;https://t.me/gogost&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Google讨论组: &lt;a href=&#34;https://groups.google.com/d/forum/go-gost&#34;&gt;https://groups.google.com/d/forum/go-gost&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;h4&gt;二进制文件&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ginuerzh/gost/releases&#34;&gt;https://github.com/ginuerzh/gost/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;源码编译&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ginuerzh/gost.git&#xA;cd gost/cmd/gost&#xA;go build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm ginuerzh/gost -V&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Homebrew&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install gost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Ubuntu商店&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo snap install core&#xA;sudo snap install gost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;快速上手&lt;/h2&gt; &#xA;&lt;h4&gt;不设置转发代理&lt;/h4&gt; &#xA;&lt;img src=&#34;https://ginuerzh.github.io/images/gost_01.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作为标准HTTP/SOCKS5代理&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;设置代理认证信息&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=admin:123456@localhost:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多端口监听&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=http2://:443 -L=socks5://:1080 -L=ss://aes-128-cfb:123456@:8338&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;设置转发代理&lt;/h4&gt; &#xA;&lt;img src=&#34;https://ginuerzh.github.io/images/gost_02.png&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=192.168.1.1:8081&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;转发代理认证&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=http://admin:123456@192.168.1.1:8081&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;设置多级转发代理(代理链)&lt;/h4&gt; &#xA;&lt;img src=&#34;https://ginuerzh.github.io/images/gost_03.png&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=quic://192.168.1.1:6121 -F=socks5+wss://192.168.1.2:1080 -F=http2://192.168.1.3:443 ... -F=a.b.c.d:NNNN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;gost按照-F设置的顺序通过代理链将请求最终转发给a.b.c.d:NNNN处理，每一个转发代理可以是任意HTTP/HTTPS/HTTP2/SOCKS4/SOCKS5/Shadowsocks类型代理。&lt;/p&gt; &#xA;&lt;h4&gt;本地端口转发(TCP)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=tcp://:2222/192.168.1.1:22 [-F=...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;将本地TCP端口2222上的数据(通过代理链)转发到192.168.1.1:22上。当代理链末端(最后一个-F参数)为SSH转发通道类型时，gost会直接使用SSH的本地端口转发功能:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=tcp://:2222/192.168.1.1:22 -F forward+ssh://:2222&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;本地端口转发(UDP)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=udp://:5353/192.168.1.1:53?ttl=60 [-F=...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;将本地UDP端口5353上的数据(通过代理链)转发到192.168.1.1:53上。 每条转发通道都有超时时间，当超过此时间，且在此时间段内无任何数据交互，则此通道将关闭。可以通过&lt;code&gt;ttl&lt;/code&gt;参数来设置超时时间，默认值为60秒。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt; 转发UDP数据时，如果有代理链，则代理链的末端(最后一个-F参数)必须是gost SOCKS5类型代理，gost会使用UDP over TCP方式进行转发。&lt;/p&gt; &#xA;&lt;h4&gt;远程端口转发(TCP)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=rtcp://:2222/192.168.1.1:22 [-F=... -F=socks5://172.24.10.1:1080]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;将172.24.10.1:2222上的数据(通过代理链)转发到192.168.1.1:22上。当代理链末端(最后一个-F参数)为SSH转发通道类型时，gost会直接使用SSH的远程端口转发功能:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=rtcp://:2222/192.168.1.1:22 -F forward+ssh://:2222&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;远程端口转发(UDP)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=rudp://:5353/192.168.1.1:53?ttl=60 [-F=... -F=socks5://172.24.10.1:1080]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;将172.24.10.1:5353上的数据(通过代理链)转发到192.168.1.1:53上。 每条转发通道都有超时时间，当超过此时间，且在此时间段内无任何数据交互，则此通道将关闭。可以通过&lt;code&gt;ttl&lt;/code&gt;参数来设置超时时间，默认值为60秒。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt; 转发UDP数据时，如果有代理链，则代理链的末端(最后一个-F参数)必须是GOST SOCKS5类型代理，gost会使用UDP-over-TCP方式进行转发。&lt;/p&gt; &#xA;&lt;h4&gt;HTTP2&lt;/h4&gt; &#xA;&lt;p&gt;gost的HTTP2支持两种模式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作为标准的HTTP2代理，并向下兼容HTTPS代理。&lt;/li&gt; &#xA; &lt;li&gt;作为通道传输其他协议。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;代理模式&lt;/h5&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=http2://:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=http2://server_ip:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;通道模式&lt;/h5&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=h2://:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=h2://server_ip:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;QUIC&lt;/h4&gt; &#xA;&lt;p&gt;gost对QUIC的支持是基于&lt;a href=&#34;https://github.com/lucas-clemente/quic-go&#34;&gt;quic-go&lt;/a&gt;库。&lt;/p&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=quic://:6121&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=quic://server_ip:6121&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt; QUIC模式只能作为代理链的第一个节点。&lt;/p&gt; &#xA;&lt;h4&gt;KCP&lt;/h4&gt; &#xA;&lt;p&gt;gost对KCP的支持是基于&lt;a href=&#34;https://github.com/xtaci/kcp-go&#34;&gt;kcp-go&lt;/a&gt;和&lt;a href=&#34;https://github.com/xtaci/kcptun&#34;&gt;kcptun&lt;/a&gt;库。&lt;/p&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=kcp://:8388&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=kcp://server_ip:8388&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;gost会自动加载当前工作目录中的kcp.json(如果存在)配置文件，或者可以手动通过参数指定配置文件路径：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=kcp://:8388?c=/path/to/conf/file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt; KCP模式只能作为代理链的第一个节点。&lt;/p&gt; &#xA;&lt;h4&gt;SSH&lt;/h4&gt; &#xA;&lt;p&gt;gost的SSH支持两种模式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作为转发通道，配合本地/远程TCP端口转发使用。&lt;/li&gt; &#xA; &lt;li&gt;作为通道传输其他协议。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;转发模式&lt;/h5&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=forward+ssh://:2222&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=rtcp://:1222/:22 -F=forward+ssh://server_ip:2222&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;通道模式&lt;/h5&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=ssh://:2222&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=ssh://server_ip:2222?ping=60&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;可以通过&lt;code&gt;ping&lt;/code&gt;参数设置心跳包发送周期，单位为秒。默认不发送心跳包。&lt;/p&gt; &#xA;&lt;h4&gt;透明代理&lt;/h4&gt; &#xA;&lt;p&gt;基于iptables的透明代理。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=redirect://:12345 -F=http2://server_ip:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;obfs4&lt;/h4&gt; &#xA;&lt;p&gt;此功能由&lt;a href=&#34;https://github.com/isofew&#34;&gt;@isofew&lt;/a&gt;贡献。&lt;/p&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=obfs4://:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;当服务端运行后会在控制台打印出连接地址供客户端使用:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;obfs4://:443/?cert=4UbQjIfjJEQHPOs8vs5sagrSXx1gfrDCGdVh2hpIPSKH0nklv1e4f29r7jb91VIrq4q5Jw&amp;amp;iat-mode=0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gost -L=:8888 -F=&#39;obfs4://server_ip:443?cert=4UbQjIfjJEQHPOs8vs5sagrSXx1gfrDCGdVh2hpIPSKH0nklv1e4f29r7jb91VIrq4q5Jw&amp;amp;iat-mode=0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;加密机制&lt;/h2&gt; &#xA;&lt;h4&gt;HTTP&lt;/h4&gt; &#xA;&lt;p&gt;对于HTTP可以使用TLS加密整个通讯过程，即HTTPS代理：&lt;/p&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=https://:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=http+tls://server_ip:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;HTTP2&lt;/h4&gt; &#xA;&lt;p&gt;gost的HTTP2代理模式仅支持使用TLS加密的HTTP2协议，不支持明文HTTP2传输。&lt;/p&gt; &#xA;&lt;p&gt;gost的HTTP2通道模式支持加密(h2)和明文(h2c)两种模式。&lt;/p&gt; &#xA;&lt;h4&gt;SOCKS5&lt;/h4&gt; &#xA;&lt;p&gt;gost支持标准SOCKS5协议的no-auth(0x00)和user/pass(0x02)方法，并在此基础上扩展了两个：tls(0x80)和tls-auth(0x82)，用于数据加密。&lt;/p&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=socks5://:1080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=socks5://server_ip:1080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果两端都是gost(如上)则数据传输会被加密(协商使用tls或tls-auth方法)，否则使用标准SOCKS5进行通讯(no-auth或user/pass方法)。&lt;/p&gt; &#xA;&lt;h4&gt;Shadowsocks&lt;/h4&gt; &#xA;&lt;p&gt;gost对shadowsocks的支持是基于&lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-go&#34;&gt;shadowsocks-go&lt;/a&gt;库。&lt;/p&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=ss://chacha20:123456@:8338&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;客户端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=ss://chacha20:123456@server_ip:8338&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Shadowsocks UDP relay&lt;/h5&gt; &#xA;&lt;p&gt;目前仅服务端支持UDP Relay。&lt;/p&gt; &#xA;&lt;p&gt;服务端:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=ssu://chacha20:123456@:8338&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;TLS&lt;/h4&gt; &#xA;&lt;p&gt;gost内置了TLS证书，如果需要使用其他TLS证书，有两种方法：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在gost运行目录放置cert.pem(公钥)和key.pem(私钥)两个文件即可，gost会自动加载运行目录下的cert.pem和key.pem文件。&lt;/li&gt; &#xA; &lt;li&gt;使用参数指定证书文件路径：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=&#34;http2://:443?cert=/path/to/my/cert/file&amp;amp;key=/path/to/my/key/file&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;对于客户端可以通过&lt;code&gt;secure&lt;/code&gt;参数开启服务器证书和域名校验:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=&#34;http2://server_domain_name:443?secure=true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;对于客户端可以指定CA证书进行&lt;a href=&#34;https://en.wikipedia.org/wiki/Transport_Layer_Security#Certificate_pinning&#34;&gt;证书锁定&lt;/a&gt;(Certificate Pinning):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gost -L=:8080 -F=&#34;http2://:443?ca=ca.pem&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;证书锁定功能由&lt;a href=&#34;https://github.com/sheerun&#34;&gt;@sheerun&lt;/a&gt;贡献&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cli/cli</title>
    <updated>2022-09-11T01:42:52Z</updated>
    <id>tag:github.com,2022-09-11:/cli/cli</id>
    <link href="https://github.com/cli/cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GitHub’s official command line tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub CLI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;gh&lt;/code&gt; is GitHub on the command line. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with &lt;code&gt;git&lt;/code&gt; and your code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/98482/84171218-327e7a80-aa40-11ea-8cd1-5177fc2d0e72.png&#34; alt=&#34;screenshot of gh pr status&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;GitHub CLI is available for repositories hosted on GitHub.com and GitHub Enterprise Server 2.20+, and to install on macOS, Windows, and Linux.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/#installation&#34;&gt;installation options see below&lt;/a&gt;, for usage instructions &lt;a href=&#34;https://cli.github.com/manual/&#34;&gt;see the manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If anything feels off, or if you feel that some functionality is missing, please check out the &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/.github/CONTRIBUTING.md&#34;&gt;contributing page&lt;/a&gt;. There you will find instructions for sharing your feedback, building the tool locally, and submitting pull requests to the project.&lt;/p&gt; &#xA;&lt;!-- this anchor is linked to from elsewhere, so avoid renaming it --&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;gh&lt;/code&gt; is available via &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;, &lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;, &lt;a href=&#34;https://docs.conda.io/en/latest/&#34;&gt;Conda&lt;/a&gt;, &lt;a href=&#34;https://spack.io&#34;&gt;Spack&lt;/a&gt;, and as a downloadable binary from the &lt;a href=&#34;https://github.com/cli/cli/releases/latest&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Homebrew&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Install:&lt;/th&gt; &#xA;   &lt;th&gt;Upgrade:&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;brew install gh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;brew upgrade gh&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;MacPorts&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Install:&lt;/th&gt; &#xA;   &lt;th&gt;Upgrade:&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo port install gh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo port selfupdate &amp;amp;&amp;amp; sudo port upgrade gh&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Conda&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Install:&lt;/th&gt; &#xA;   &lt;th&gt;Upgrade:&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;conda install gh --channel conda-forge&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;conda update gh --channel conda-forge&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Additional Conda installation options available on the &lt;a href=&#34;https://github.com/conda-forge/gh-feedstock#installing-gh&#34;&gt;gh-feedstock page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Spack&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Install:&lt;/th&gt; &#xA;   &lt;th&gt;Upgrade:&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;spack install gh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;spack uninstall gh &amp;amp;&amp;amp; spack install gh&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Linux &amp;amp; BSD&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;gh&lt;/code&gt; is available via &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/#homebrew&#34;&gt;Homebrew&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/#conda&#34;&gt;Conda&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/#spack&#34;&gt;Spack&lt;/a&gt;, and as downloadable binaries from the &lt;a href=&#34;https://github.com/cli/cli/releases/latest&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For instructions on specific distributions and package managers, see &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md&#34;&gt;Linux &amp;amp; BSD installation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;gh&lt;/code&gt; is available via &lt;a href=&#34;https://github.com/microsoft/winget-cli&#34;&gt;WinGet&lt;/a&gt;, &lt;a href=&#34;https://scoop.sh&#34;&gt;scoop&lt;/a&gt;, &lt;a href=&#34;https://chocolatey.org&#34;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/#conda&#34;&gt;Conda&lt;/a&gt;, and as downloadable MSI.&lt;/p&gt; &#xA;&lt;h4&gt;WinGet&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Install:&lt;/th&gt; &#xA;   &lt;th&gt;Upgrade:&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;winget install --id GitHub.cli&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;winget upgrade --id GitHub.cli&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;scoop&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Install:&lt;/th&gt; &#xA;   &lt;th&gt;Upgrade:&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;scoop install gh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;scoop update gh&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Chocolatey&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Install:&lt;/th&gt; &#xA;   &lt;th&gt;Upgrade:&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;choco install gh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;choco upgrade gh&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Signed MSI&lt;/h4&gt; &#xA;&lt;p&gt;MSI installers are available for download on the &lt;a href=&#34;https://github.com/cli/cli/releases/latest&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;GitHub Actions&lt;/h3&gt; &#xA;&lt;p&gt;GitHub CLI comes pre-installed in all &lt;a href=&#34;https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners&#34;&gt;GitHub-Hosted Runners&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other platforms&lt;/h3&gt; &#xA;&lt;p&gt;Download packaged binaries from the &lt;a href=&#34;https://github.com/cli/cli/releases/latest&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;See here on how to &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/docs/source.md&#34;&gt;build GitHub CLI from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Comparison with hub&lt;/h2&gt; &#xA;&lt;p&gt;For many years, &lt;a href=&#34;https://github.com/github/hub&#34;&gt;hub&lt;/a&gt; was the unofficial GitHub CLI tool. &lt;code&gt;gh&lt;/code&gt; is a new project that helps us explore what an official GitHub CLI tool can look like with a fundamentally different design. While both tools bring GitHub to the terminal, &lt;code&gt;hub&lt;/code&gt; behaves as a proxy to &lt;code&gt;git&lt;/code&gt;, and &lt;code&gt;gh&lt;/code&gt; is a standalone tool. Check out our &lt;a href=&#34;https://raw.githubusercontent.com/cli/cli/trunk/docs/gh-vs-hub.md&#34;&gt;more detailed explanation&lt;/a&gt; to learn more.&lt;/p&gt;</summary>
  </entry>
</feed>