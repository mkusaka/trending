<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-30T01:47:01Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>grafana/mcp-grafana</title>
    <updated>2025-03-30T01:47:01Z</updated>
    <id>tag:github.com,2025-03-30:/grafana/mcp-grafana</id>
    <link href="https://github.com/grafana/mcp-grafana" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MCP server for Grafana&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Grafana MCP server&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://modelcontextprotocol.io/&#34;&gt;Model Context Protocol&lt;/a&gt; (MCP) server for Grafana.&lt;/p&gt; &#xA;&lt;p&gt;This provides access to your Grafana instance and the surrounding ecosystem.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Search for dashboards&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get dashboard by UID&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; List and fetch datasource information&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Query datasources &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Prometheus&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Loki &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Log queries&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Metric queries&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Tempo&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Pyroscope&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Query Prometheus metadata &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Metric metadata&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Metric names&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Label names&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Label values&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Query Loki metadata &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Label names&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Label values&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stats&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Search, create, update and close incidents&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Start Sift investigations and view the results&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Alerting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; List and fetch alert rule information&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Get alert rule statuses (firing/normal/error/etc.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Create and change alert rules&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; List contact points&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Create and change contact points&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The list of tools is configurable, so you can choose which tools you want to make available to the MCP client. This is useful if you don&#39;t use certain functionality or if you don&#39;t want to take up too much of the context window.&lt;/p&gt; &#xA;&lt;h3&gt;Tools&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;search_dashboards&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Search&lt;/td&gt; &#xA;   &lt;td&gt;Search for dashboards&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;get_dashboard_by_uid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dashboard&lt;/td&gt; &#xA;   &lt;td&gt;Get a dashboard by uid&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_datasources&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Datasources&lt;/td&gt; &#xA;   &lt;td&gt;List datasources&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;get_datasource_by_uid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Datasources&lt;/td&gt; &#xA;   &lt;td&gt;Get a datasource by uid&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;get_datasource_by_name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Datasources&lt;/td&gt; &#xA;   &lt;td&gt;Get a datasource by name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;query_prometheus&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Prometheus&lt;/td&gt; &#xA;   &lt;td&gt;Execute a query against a Prometheus datasource&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_prometheus_metric_metadata&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Prometheus&lt;/td&gt; &#xA;   &lt;td&gt;List metric metadata&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_prometheus_metric_names&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Prometheus&lt;/td&gt; &#xA;   &lt;td&gt;List available metric names&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_prometheus_label_names&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Prometheus&lt;/td&gt; &#xA;   &lt;td&gt;List label names matching a selector&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_prometheus_label_values&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Prometheus&lt;/td&gt; &#xA;   &lt;td&gt;List values for a specific label&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_incidents&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Incident&lt;/td&gt; &#xA;   &lt;td&gt;List incidents in Grafana Incident&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;create_incident&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Incident&lt;/td&gt; &#xA;   &lt;td&gt;Create an incident in Grafana Incident&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;add_activity_to_incident&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Incident&lt;/td&gt; &#xA;   &lt;td&gt;Add an activity item to an incident in Grafana Incident&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resolve_incident&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Incident&lt;/td&gt; &#xA;   &lt;td&gt;Resolve an incident in Grafana Incident&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;query_loki_logs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Loki&lt;/td&gt; &#xA;   &lt;td&gt;Query and retrieve logs using LogQL (either log or metric queries)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_loki_label_names&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Loki&lt;/td&gt; &#xA;   &lt;td&gt;List all available label names in logs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_loki_label_values&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Loki&lt;/td&gt; &#xA;   &lt;td&gt;List values for a specific log label&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;query_loki_stats&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Loki&lt;/td&gt; &#xA;   &lt;td&gt;Get statistics about log streams&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;list_alert_rules&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Alerting&lt;/td&gt; &#xA;   &lt;td&gt;List alert rules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;get_alert_rule_by_uid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Alerting&lt;/td&gt; &#xA;   &lt;td&gt;Get alert rule by UID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a service account in Grafana with enough permissions to use the tools you want to use, generate a service account token, and copy it to the clipboard for use in the configuration file. Follow the &lt;a href=&#34;https://grafana.com/docs/grafana/latest/administration/service-accounts/&#34;&gt;Grafana documentation&lt;/a&gt; for details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the latest release of &lt;code&gt;mcp-grafana&lt;/code&gt; from the &lt;a href=&#34;https://github.com/grafana/mcp-grafana/releases&#34;&gt;releases page&lt;/a&gt; and place it in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you have a Go toolchain installed you can also build and install it from source, using the &lt;code&gt;GOBIN&lt;/code&gt; environment variable to specify the directory where the binary should be installed. This should also be in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GOBIN=&#34;$HOME/go/bin&#34; go install github.com/grafana/mcp-grafana/cmd/mcp-grafana@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the server configuration to your client configuration file. For example, for Claude Desktop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;grafana&#34;: {&#xA;      &#34;command&#34;: &#34;mcp-grafana&#34;,&#xA;      &#34;args&#34;: [],&#xA;      &#34;env&#34;: {&#xA;        &#34;GRAFANA_URL&#34;: &#34;http://localhost:3000&#34;,&#xA;        &#34;GRAFANA_API_KEY&#34;: &#34;&amp;lt;your service account token&amp;gt;&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: if you see &lt;code&gt;Error: spawn mcp-grafana ENOENT&lt;/code&gt; in Claude Desktop, you need to specify the full path to &lt;code&gt;mcp-grafana&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please open an issue or submit a pull request if you have any suggestions or improvements.&lt;/p&gt; &#xA;&lt;p&gt;This project is written in Go. Install Go following the instructions for your platform.&lt;/p&gt; &#xA;&lt;p&gt;To run the server, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run the server using the SSE transport inside Docker. To build the image, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make build-image&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to run the image, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it --rm -p 8000:8000 mcp-grafana:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;To run unit tests, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;TODO: add integration tests and cloud tests.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;More comprehensive integration tests will require a Grafana instance to be running locally on port 3000; you can start one with Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The integration tests can be run with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test-all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re adding more tools, please add integration tests for them. The existing tests should be a good starting point.&lt;/p&gt; &#xA;&lt;h3&gt;Linting&lt;/h3&gt; &#xA;&lt;p&gt;To lint the code, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/grafana/mcp-grafana/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>daeuniverse/dae</title>
    <updated>2025-03-30T01:47:01Z</updated>
    <id>tag:github.com,2025-03-30:/daeuniverse/dae</id>
    <link href="https://github.com/daeuniverse/dae" rel="alternate"></link>
    <summary type="html">&lt;p&gt;eBPF-based Linux high-performance transparent proxy solution.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dae&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/daeuniverse/dae/raw/main/logo.png&#34; border=&#34;0&#34; width=&#34;25%&#34;&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://github.com/daeuniverse/dae/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt; &lt;img src=&#34;https://custom-icon-badges.herokuapp.com/github/license/daeuniverse/dae?logo=law&amp;amp;color=orange&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fdaeuniverse%2Fdae&amp;amp;count_bg=%235C3DC8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=hits&amp;amp;edge_flat=false&#34;&gt; &lt;img src=&#34;https://custom-icon-badges.herokuapp.com/github/v/release/daeuniverse/dae?logo=rocket&#34; alt=&#34;version&#34;&gt; &lt;img src=&#34;https://custom-icon-badges.herokuapp.com/github/issues-pr-closed/daeuniverse/dae?color=purple&amp;amp;logo=git-pull-request&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://custom-icon-badges.herokuapp.com/github/last-commit/daeuniverse/dae?logo=history&amp;amp;logoColor=white&#34; alt=&#34;lastcommit&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;dae&lt;/em&gt;&lt;/strong&gt;, means goose, is a high-performance transparent proxy solution.&lt;/p&gt; &#xA;&lt;p&gt;To enhance traffic split performance as much as possible, dae employs the transparent proxy and traffic split suite within the Linux kernel using eBPF. As a result, dae can enable direct traffic to bypass the proxy application&#39;s forwarding, facilitating genuine direct traffic passage. Through this remarkable feat, there is minimal performance loss and negligible additional resource consumption for direct traffic.&lt;/p&gt; &#xA;&lt;p&gt;As a successor of &lt;a href=&#34;https://github.com/v2rayA/v2rayA&#34;&gt;v2rayA&lt;/a&gt;, dae abandoned v2ray-core to meet the needs of users more freely.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Implement &lt;code&gt;Real Direct&lt;/code&gt; traffic split (need ipforward on) to achieve &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1UaWU6nNho7edBNjNqC8dfGXLlW0-cm84MM7sH6Gp7UE/edit?usp=sharing&#34;&gt;high performance&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support to split traffic by process name in local host.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support to split traffic by MAC address in LAN.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support to split traffic with invert match rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support to automatically switch nodes according to policy. That is to say, support to automatically test independent TCP/UDP/IPv4/IPv6 latencies, and then use the best nodes for corresponding traffic according to user-defined policy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support advanced DNS resolution process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support full-cone NAT for shadowsocks, trojan(-go) and socks5 (no test).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support various trending proxy protocols, seen in &lt;a href=&#34;https://raw.githubusercontent.com/daeuniverse/dae/main/docs/en/proxy-protocols.md&#34;&gt;proxy-protocols.md&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/daeuniverse/dae/main/docs/en/README.md&#34;&gt;Quick Start Guide&lt;/a&gt; to start using &lt;code&gt;dae&lt;/code&gt; right away!&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you setup dae and also a shadowsocks server (or any UDP servers) on the same machine in public network, such as a VPS, don&#39;t forget to add &lt;code&gt;l4proto(udp) &amp;amp;&amp;amp; sport(your server ports) -&amp;gt; must_direct&lt;/code&gt; rule for your UDP server port. Because states of UDP are hard to maintain, all outgoing UDP packets will potentially be proxied (depends on your routing), including traffic to your client. This behaviour is not what we want to see. &lt;code&gt;must_direct&lt;/code&gt; makes all traffic from this port including DNS traffic direct.&lt;/li&gt; &#xA; &lt;li&gt;If users in mainland China find that the first screen time is very long when they visit some domestic websites for the first time, please check whether you use foreign DNS to handle some domestic domain in DNS routing. Sometimes this is hard to spot. For example, &lt;code&gt;ocsp.digicert.cn&lt;/code&gt; is included in &lt;code&gt;geosite:geolocation-!cn&lt;/code&gt; unexpectedly, which will cause some tls handshakes to take a long time. Be careful to use such domain sets in DNS routing.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/daeuniverse/dae/main/docs/en/how-it-works.md&#34;&gt;How it works&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Automatically check dns upstream and source loop (whether upstream is also a client of us) and remind the user to add sip rule.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; MACv2 extension extraction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Log to userspace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Protocol-oriented node features detecting (or filter), such as full-cone (especially VMess and VLESS).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add quick-start guide&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks goes to all &lt;a href=&#34;https://github.com/daeuniverse/dae/graphs/contributors&#34;&gt;contributors&lt;/a&gt;. If you would like to contribute, please see the &lt;a href=&#34;https://raw.githubusercontent.com/daeuniverse/dae/main/docs/en/development/contribute.md&#34;&gt;instructions&lt;/a&gt;. Also, it is recommended following the &lt;a href=&#34;https://raw.githubusercontent.com/daeuniverse/dae/main/docs/en/development/commit-msg-guide.md&#34;&gt;commit-msg-guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/daeuniverse/dae/raw/main/LICENSE&#34;&gt;AGPL-3.0 (C) daeuniverse&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/daeuniverse/dae&#34;&gt;&lt;img src=&#34;https://starchart.cc/daeuniverse/dae.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>golangci/golangci-lint</title>
    <updated>2025-03-30T01:47:01Z</updated>
    <id>tag:github.com,2025-03-30:/golangci/golangci-lint</id>
    <link href="https://github.com/golangci/golangci-lint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast linters runner for Go&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;golangci-lint logo&#34; src=&#34;https://raw.githubusercontent.com/golangci/golangci-lint/main/assets/go.png&#34; height=&#34;150&#34;&gt; &lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;golangci-lint&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Fast linters runner for Go&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;golangci-lint&lt;/code&gt; is a fast Go linters runner.&lt;/p&gt; &#xA;&lt;p&gt;It runs linters in parallel, uses caching, supports YAML configuration, integrates with all major IDEs, and includes over a hundred linters.&lt;/p&gt; &#xA;&lt;h2&gt;Install &lt;code&gt;golangci-lint&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golangci-lint.run/welcome/install/#local-installation&#34;&gt;On my machine&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golangci-lint.run/welcome/install/#ci-installation&#34;&gt;On CI/CD systems&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation is hosted at &lt;a href=&#34;https://golangci-lint.run&#34;&gt;https://golangci-lint.run&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Social Networks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gophers.slack.com/archives/CS0TBRKPC&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4285F4?logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Join Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fosstodon.org/@golangcilint&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Mastodon-6364FF?logo=mastodon&amp;amp;logoColor=white&#34; alt=&#34;Follow on Mastodon&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bsky.app/profile/golangci-lint.run&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Bluesky-0a7aff?logo=bluesky&amp;amp;logoColor=white&#34; alt=&#34;Follow on Bluesky&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/golangci&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-1DA1F2?logo=x&amp;amp;logoColor=white&#34; alt=&#34;Follow on Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supporting Us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/golangci-lint&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/OpenCollective-Donate-blue?logo=opencollective&amp;amp;style=for-the-badge&#34; alt=&#34;Open Collective backers and sponsors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/golangci&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-Donate-blue?logo=github&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golangci-lint.run/product/thanks/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Linter_Authors-Donate-blue?style=for-the-badge&#34; alt=&#34;Linter Authors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;golangci-lint&lt;/code&gt; is a free and open-source project built by volunteers.&lt;/p&gt; &#xA;&lt;p&gt;If you value it, consider supporting us, we appreciate it! &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Badges&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/golangci/golangci-lint/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/golangci/golangci-lint/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/golangci/golangci-lint&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/golangci/golangci-lint/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/golangci/golangci-lint.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/golangci/golangci-lint&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/golangci/golangci-lint&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://somsubhra.github.io/github-release-stats/?username=golangci&amp;amp;repository=golangci-lint&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/golangci/golangci-lint/total.svg?logo=github&#34; alt=&#34;GitHub Releases Stats of golangci-lint&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://golangci-lint.run/contributing/quick-start/&#34;&gt;How to contribute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/golangci/golangci-lint/graphs/contributors&#34;&gt; &lt;img src=&#34;https://opencollective.com/golangci-lint/contributors.svg?width=890&amp;amp;button=false&amp;amp;skip=golangcidev,CLAassistant,renovate,fossabot,golangcibot,kortschak,golangci-releaser,dependabot%5Bbot%5D&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;a href=&#34;https://www.jetbrains.com/go/?utm_source=OSS&amp;amp;utm_medium=referral&amp;amp;utm_campaign=golangci&#34; target=&#34;_blank&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;assets/goland-white.svg&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;assets/goland.svg&#34;&gt; &#xA;   &lt;img alt=&#34;The complete IDE crafted for professional Go developers.&#34; src=&#34;https://raw.githubusercontent.com/golangci/golangci-lint/main/assets/goland.svg?sanitize=true&#34; width=&#34;150&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/golangci/golangci-lint&#34;&gt;&lt;img src=&#34;https://starchart.cc/golangci/golangci-lint.svg?variant=adaptive&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>