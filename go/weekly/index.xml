<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-11T01:53:25Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>minio/minio</title>
    <updated>2023-06-11T01:53:25Z</updated>
    <id>tag:github.com,2023-06-11:/minio/minio</id>
    <link href="https://github.com/minio/minio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High Performance Object Storage for AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MinIO Quickstart Guide&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.min.io&#34;&gt;&lt;img src=&#34;https://slack.min.io/slack?type=svg&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/minio/minio/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/minio/minio.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/minio/minio/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-AGPL%20V3-blue&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://min.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/minio/minio/master/.github/logo.svg?sanitize=true&#34; alt=&#34;MinIO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MinIO is a High Performance Object Storage released under GNU Affero General Public License v3.0. It is API compatible with Amazon S3 cloud storage service. Use MinIO to build high performance infrastructure for machine learning, analytics and application data workloads.&lt;/p&gt; &#xA;&lt;p&gt;This README provides quickstart instructions on running MinIO on bare metal hardware, including container-based installations. For Kubernetes environments, use the &lt;a href=&#34;https://github.com/minio/operator/raw/master/README.md&#34;&gt;MinIO Kubernetes Operator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Container Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use the following commands to run a standalone MinIO server as a container.&lt;/p&gt; &#xA;&lt;p&gt;Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Stable&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to run the latest stable image of MinIO as a container using an ephemeral data volume:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;podman run -p 9000:9000 -p 9001:9001 \&#xA;  quay.io/minio/minio server /data --console-address &#34;:9001&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: To deploy MinIO on with persistent storage, you must map local persistent directories from the host OS to the container using the &lt;code&gt;podman -v&lt;/code&gt; option. For example, &lt;code&gt;-v /mnt/data:/data&lt;/code&gt; maps the host OS drive at &lt;code&gt;/mnt/data&lt;/code&gt; to &lt;code&gt;/data&lt;/code&gt; on the container.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;macOS&lt;/h2&gt; &#xA;&lt;p&gt;Use the following commands to run a standalone MinIO server on macOS.&lt;/p&gt; &#xA;&lt;p&gt;Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew (recommended)&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to install the latest stable MinIO package using &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install minio/stable/minio&#xA;minio server /data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: If you previously installed minio using &lt;code&gt;brew install minio&lt;/code&gt; then it is recommended that you reinstall minio from &lt;code&gt;minio/stable/minio&lt;/code&gt; official repo instead.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew uninstall minio&#xA;brew install minio/stable/minio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html/&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html/&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;h3&gt;Binary Download&lt;/h3&gt; &#xA;&lt;p&gt;Use the following command to download and run a standalone MinIO server on macOS. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget https://dl.min.io/server/minio/release/darwin-amd64/minio&#xA;chmod +x minio&#xA;./minio server /data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;h2&gt;GNU/Linux&lt;/h2&gt; &#xA;&lt;p&gt;Use the following command to run a standalone MinIO server on Linux hosts running 64-bit Intel/AMD architectures. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget https://dl.min.io/server/minio/release/linux-amd64/minio&#xA;chmod +x minio&#xA;./minio server /data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following table lists supported architectures. Replace the &lt;code&gt;wget&lt;/code&gt; URL with the architecture for your Linux host.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64-bit Intel/AMD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl.min.io/server/minio/release/linux-amd64/minio&#34;&gt;https://dl.min.io/server/minio/release/linux-amd64/minio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64-bit ARM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl.min.io/server/minio/release/linux-arm64/minio&#34;&gt;https://dl.min.io/server/minio/release/linux-arm64/minio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64-bit PowerPC LE (ppc64le)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl.min.io/server/minio/release/linux-ppc64le/minio&#34;&gt;https://dl.min.io/server/minio/release/linux-ppc64le/minio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IBM Z-Series (S390X)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl.min.io/server/minio/release/linux-s390x/minio&#34;&gt;https://dl.min.io/server/minio/release/linux-s390x/minio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html#&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Microsoft Windows&lt;/h2&gt; &#xA;&lt;p&gt;To run MinIO on 64-bit Windows hosts, download the MinIO executable from the following URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;https://dl.min.io/server/minio/release/windows-amd64/minio.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the following command to run a standalone MinIO server on the Windows host. Replace &lt;code&gt;D:\&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data. You must change the terminal or powershell directory to the location of the &lt;code&gt;minio.exe&lt;/code&gt; executable, &lt;em&gt;or&lt;/em&gt; add the path to that directory to the system &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;minio.exe server D:\&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html#&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Install from Source&lt;/h2&gt; &#xA;&lt;p&gt;Use the following commands to compile and run a standalone MinIO server from source. Source installation is only intended for developers and advanced users. If you do not have a working Golang environment, please follow &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;How to install Golang&lt;/a&gt;. Minimum version required is &lt;a href=&#34;https://golang.org/dl/#stable&#34;&gt;go1.19&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/minio/minio@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; &#xA;&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href=&#34;https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc&#34;&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href=&#34;https://min.io/docs/minio/linux/developers/minio-drivers.html&#34;&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;MinIO strongly recommends &lt;em&gt;against&lt;/em&gt; using compiled-from-source MinIO servers for production environments.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment Recommendations&lt;/h2&gt; &#xA;&lt;h3&gt;Allow port access for Firewalls&lt;/h3&gt; &#xA;&lt;p&gt;By default MinIO uses the port 9000 to listen for incoming connections. If your platform blocks the port by default, you may need to enable access to the port.&lt;/p&gt; &#xA;&lt;h3&gt;ufw&lt;/h3&gt; &#xA;&lt;p&gt;For hosts with ufw enabled (Debian based distros), you can use &lt;code&gt;ufw&lt;/code&gt; command to allow traffic to specific ports. Use below command to allow access to port 9000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ufw allow 9000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Below command enables all incoming traffic to ports ranging from 9000 to 9010.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ufw allow 9000:9010/tcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;firewall-cmd&lt;/h3&gt; &#xA;&lt;p&gt;For hosts with firewall-cmd enabled (CentOS), you can use &lt;code&gt;firewall-cmd&lt;/code&gt; command to allow traffic to specific ports. Use below commands to allow access to port 9000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;firewall-cmd --get-active-zones&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command gets the active zone(s). Now, apply port rules to the relevant zones returned above. For example if the zone is &lt;code&gt;public&lt;/code&gt;, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;firewall-cmd --zone=public --add-port=9000/tcp --permanent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;permanent&lt;/code&gt; makes sure the rules are persistent across firewall start, restart or reload. Finally reload the firewall for changes to take effect.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;firewall-cmd --reload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;iptables&lt;/h3&gt; &#xA;&lt;p&gt;For hosts with iptables enabled (RHEL, CentOS, etc), you can use &lt;code&gt;iptables&lt;/code&gt; command to enable all traffic coming to specific ports. Use below command to allow access to port 9000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;iptables -A INPUT -p tcp --dport 9000 -j ACCEPT&#xA;service iptables restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Below command enables all incoming traffic to ports ranging from 9000 to 9010.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;iptables -A INPUT -p tcp --dport 9000:9010 -j ACCEPT&#xA;service iptables restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Test MinIO Connectivity&lt;/h2&gt; &#xA;&lt;h3&gt;Test using MinIO Console&lt;/h3&gt; &#xA;&lt;p&gt;MinIO Server comes with an embedded web based object browser. Point your web browser to &lt;a href=&#34;http://127.0.0.1:9000&#34;&gt;http://127.0.0.1:9000&lt;/a&gt; to ensure your server has started successfully.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: MinIO runs console on random port by default if you wish choose a specific port use &lt;code&gt;--console-address&lt;/code&gt; to pick a specific interface and port.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Things to consider&lt;/h3&gt; &#xA;&lt;p&gt;MinIO redirects browser access requests to the configured server port (i.e. &lt;code&gt;127.0.0.1:9000&lt;/code&gt;) to the configured Console port. MinIO uses the hostname or IP address specified in the request when building the redirect URL. The URL and port &lt;em&gt;must&lt;/em&gt; be accessible by the client for the redirection to work.&lt;/p&gt; &#xA;&lt;p&gt;For deployments behind a load balancer, proxy, or ingress rule where the MinIO host IP address or port is not public, use the &lt;code&gt;MINIO_BROWSER_REDIRECT_URL&lt;/code&gt; environment variable to specify the external hostname for the redirect. The LB/Proxy must have rules for directing traffic to the Console port specifically.&lt;/p&gt; &#xA;&lt;p&gt;For example, consider a MinIO deployment behind a proxy &lt;code&gt;https://minio.example.net&lt;/code&gt;, &lt;code&gt;https://console.minio.example.net&lt;/code&gt; with rules for forwarding traffic on port :9000 and :9001 to MinIO and the MinIO Console respectively on the internal network. Set &lt;code&gt;MINIO_BROWSER_REDIRECT_URL&lt;/code&gt; to &lt;code&gt;https://console.minio.example.net&lt;/code&gt; to ensure the browser receives a valid reachable URL.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, if your TLS certificates do not have the IP SAN for the MinIO server host, the MinIO Console may fail to validate the connection to the server. Use the &lt;code&gt;MINIO_SERVER_URL&lt;/code&gt; environment variable and specify the proxy-accessible hostname of the MinIO server to allow the Console to use the MinIO server API using the TLS certificate.&lt;/p&gt; &#xA;&lt;p&gt;For example: &lt;code&gt;export MINIO_SERVER_URL=&#34;https://minio.example.net&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dashboard&lt;/th&gt; &#xA;   &lt;th&gt;Creating a bucket&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/minio/minio/raw/master/docs/screenshots/pic1.png?raw=true&#34; alt=&#34;Dashboard&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/minio/minio/raw/master/docs/screenshots/pic2.png?raw=true&#34; alt=&#34;Dashboard&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;mc&lt;/code&gt; provides a modern alternative to UNIX commands like ls, cat, cp, mirror, diff etc. It supports filesystems and Amazon S3 compatible cloud storage services. Follow the MinIO Client &lt;a href=&#34;https://min.io/docs/minio/linux/reference/minio-mc.html#quickstart&#34;&gt;Quickstart Guide&lt;/a&gt; for further instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading MinIO&lt;/h2&gt; &#xA;&lt;p&gt;Upgrades require zero downtime in MinIO, all upgrades are non-disruptive, all transactions on MinIO are atomic. So upgrading all the servers simultaneously is the recommended way to upgrade MinIO.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: requires internet access to update directly from &lt;a href=&#34;https://dl.min.io&#34;&gt;https://dl.min.io&lt;/a&gt;, optionally you can host any mirrors at &lt;a href=&#34;https://my-artifactory.example.com/minio/&#34;&gt;https://my-artifactory.example.com/minio/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For deployments that installed the MinIO server binary by hand, use &lt;a href=&#34;https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-update.html&#34;&gt;&lt;code&gt;mc admin update&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mc admin update &amp;lt;minio alias, e.g., myminio&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For deployments without external internet access (e.g. airgapped environments), download the binary from &lt;a href=&#34;https://dl.min.io&#34;&gt;https://dl.min.io&lt;/a&gt; and replace the existing MinIO binary let&#39;s say for example &lt;code&gt;/opt/bin/minio&lt;/code&gt;, apply executable permissions &lt;code&gt;chmod +x /opt/bin/minio&lt;/code&gt; and proceed to perform &lt;code&gt;mc admin service restart alias/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For installations using Systemd MinIO service, upgrade via RPM/DEB packages &lt;strong&gt;parallelly&lt;/strong&gt; on all servers or replace the binary lets say &lt;code&gt;/opt/bin/minio&lt;/code&gt; on all nodes, apply executable permissions &lt;code&gt;chmod +x /opt/bin/minio&lt;/code&gt; and process to perform &lt;code&gt;mc admin service restart alias/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Upgrade Checklist&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Test all upgrades in a lower environment (DEV, QA, UAT) before applying to production. Performing blind upgrades in production environments carries significant risk.&lt;/li&gt; &#xA; &lt;li&gt;Read the release notes for MinIO &lt;em&gt;before&lt;/em&gt; performing any upgrade, there is no forced requirement to upgrade to latest releases upon every releases. Some releases may not be relevant to your setup, avoid upgrading production environments unnecessarily.&lt;/li&gt; &#xA; &lt;li&gt;If you plan to use &lt;code&gt;mc admin update&lt;/code&gt;, MinIO process must have write access to the parent directory where the binary is present on the host system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mc admin update&lt;/code&gt; is not supported and should be avoided in kubernetes/container environments, please upgrade containers by upgrading relevant container images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;We do not recommend upgrading one MinIO server at a time, the product is designed to support parallel upgrades please follow our recommended guidelines.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Explore Further&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html&#34;&gt;MinIO Erasure Code Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min.io/docs/minio/linux/reference/minio-mc.html&#34;&gt;Use &lt;code&gt;mc&lt;/code&gt; with MinIO Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min.io/docs/minio/linux/developers/go/minio-go.html&#34;&gt;Use &lt;code&gt;minio-go&lt;/code&gt; SDK with MinIO Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://min.io/docs/minio/linux/index.html&#34;&gt;The MinIO documentation website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute to MinIO Project&lt;/h2&gt; &#xA;&lt;p&gt;Please follow MinIO &lt;a href=&#34;https://github.com/minio/minio/raw/master/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MinIO source is licensed under the GNU AGPLv3 license that can be found in the &lt;a href=&#34;https://github.com/minio/minio/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;MinIO &lt;a href=&#34;https://github.com/minio/minio/tree/master/docs&#34;&gt;Documentation&lt;/a&gt; © 2021 by MinIO, Inc is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;CC BY 4.0&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minio/minio/raw/master/COMPLIANCE.md&#34;&gt;License Compliance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>labring/sealos</title>
    <updated>2023-06-11T01:53:25Z</updated>
    <id>tag:github.com,2023-06-11:/labring/sealos</id>
    <link href="https://github.com/labring/sealos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sealos is a Kubernetes distribution, one-stop solution for your public&amp;private cloud.&lt;/p&gt;&lt;hr&gt;&lt;h2 align=&#34;center&#34;&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/img/sealos-left-dark.png#gh-dark-mode-only&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/img/sealos-left.png#gh-light-mode-only&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;p&gt;A Cloud Operating System designed for managing cloud-native applications&lt;/p&gt; &lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://vscode.dev/github/labring/sealos&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Dev%20Container&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Dev Container&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/labring/sealos/actions&#34;&gt;&lt;img src=&#34;https://github.com/labring/sealos/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/labring/kubernetes&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/labring/kubernetes&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Flabring%2Fsealos?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Flabring%2Fsealos.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/labring/sealos&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/labring/sealos/branch/main/graph/badge.svg?token=e41ZDcj06N&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sealos.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?url=https%3A%2F%2Fpostwoman.io&amp;amp;logo=Postwoman&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.oscs1024.com/project/labring/sealos?ref=badge_small&#34;&gt;&lt;img src=&#34;https://www.oscs1024.com/platform/badge/labring/sealos.svg?size=small&#34; alt=&#34;OSCS Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/eHyXHtSE&#34;&gt;&lt;img src=&#34;https://theme.zdassets.com/theme_assets/678183/cc59daa07820943e943c2fc283b9079d7003ff76.svg?sanitize=true&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/img/sealos-desktop.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://sealos.io/en/docs/Intro&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/labring/sealos/main/README_zh.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://github.com/orgs/labring/projects/4/views/9&#34;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Sealos is a cloud operating system distribution based on the Kubernetes kernel. It adopts a cloud-native approach, discarding traditional cloud computing architecture, and shifting towards a new architecture with Kubernetes as the cloud kernel. This allows enterprises to use the cloud as effortlessly as they would use a personal computer.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Deploy your app on Sealos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.sealos.io&#34;&gt;Try online demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sealos.io/docs/quick-start/install-apps-with-app-launchpad&#34;&gt;Easily Deploy Nginx in 30 Seconds on Sealos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sealos.io/docs/quick-start/install-db-with-database&#34;&gt;Start a mysql/pgsql/mongo highly available database in 30 seconds on Sealos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sealos.io/docs/examples/blog-platform/install-wordpress&#34;&gt;Running WordPress on Sealos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sealos.io/docs/examples/dial-testing-system/install-uptime-kuma&#34;&gt;Running the Uptime Kuma dial test system on Sealos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sealos.io/docs/category/low-code-platform&#34;&gt;Running a low-code platform on Sealos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/img/app-launchpad.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔍 Some Screen Shots of Sealos:&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Terminal&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;App Launchpad&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/img/terminal.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/img/app-launchpad-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Database&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Serverless&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/img/database.webp&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/labring/sealos/main/docs/4.0/img/laf.webp&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;💡 Core features&lt;/h2&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Instant Kubernetes Usage Upon Login&lt;/strong&gt;: There is no need to install a Kubernetes cluster. Sealos provides the ability for &lt;strong&gt;multiple tenants&lt;/strong&gt; to share a Kubernetes on the public internet. It also offers strong isolation capabilities to ensure the data safety of each tenant.&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Swiftly deploy any application on Sealos&lt;/strong&gt;: With the in-built App Launchpad, effortlessly deploy any application in an astonishingly short span of time.&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Resource Saving and Cost Reduction&lt;/strong&gt;: You only pay for the container. The automatic scaling function fundamentally solves the problem of resource wastage, saving between 10% to 40% in costs.&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Easy Public Network Access&lt;/strong&gt;: Sealos automatically assigns a secondary domain name to your business, helping you achieve easy public network access. It also supports custom domain name binding.&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Efficient Database Service&lt;/strong&gt;: Sealos offers a service that allows businesses to create high-availability databases within seconds. Through service discovery, the internal network DNS can connect directly to the database.&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;User-Friendly Operating Experience&lt;/strong&gt;: Sealos has an in-built terminal that supports command-line operation of the Kubernetes cluster, and also has in-built App Launchpad, allowing you to have a good user experience on Sealos, regardless of your familiarity with cloud-native technology.&lt;/p&gt; &#xA;&lt;h2&gt;🏘️ Community &amp;amp; support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌐 Visit the &lt;a href=&#34;https://sealos.io/&#34;&gt;Sealos website&lt;/a&gt; for full documentation and useful links.&lt;/li&gt; &#xA; &lt;li&gt;💬 Join our &lt;a href=&#34;https://discord.gg/eHyXHtSE&#34;&gt;Discord server&lt;/a&gt; is to chat with Sealos developers and other Sealos users. This is a good place to learn about Sealos and Kubernetes, ask questions, and share your experiences.&lt;/li&gt; &#xA; &lt;li&gt;🐦 Tweet at @sealosio on &lt;a href=&#34;https://twitter.com/sealosio&#34;&gt;Twitter&lt;/a&gt; and follow us.&lt;/li&gt; &#xA; &lt;li&gt;🐞 Create &lt;a href=&#34;https://github.com/labring/sealos/issues/new/choose&#34;&gt;GitHub Issues&lt;/a&gt; for bug reports and feature requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚧 Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Sealos maintains a &lt;a href=&#34;https://github.com/orgs/labring/projects/4/views/9&#34;&gt;public roadmap&lt;/a&gt;. It gives a a high-level view of the main priorities for the project, the maturity of different features and projects, and how to influence the project direction.&lt;/p&gt; &#xA;&lt;h2&gt;👩‍💻 Contributing &amp;amp; Development&lt;/h2&gt; &#xA;&lt;p&gt;Have a look through &lt;a href=&#34;https://github.com/labring/sealos/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc&#34;&gt;existing Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/labring/sealos/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-desc&#34;&gt;Pull Requests&lt;/a&gt; that you could help with. If you&#39;d like to request a feature or report a bug, please &lt;a href=&#34;https://github.com/labring/sealos/issues/new/choose&#34;&gt;create a GitHub Issue&lt;/a&gt; using one of the templates provided.&lt;/p&gt; &#xA;&lt;p&gt;📖 &lt;a href=&#34;https://raw.githubusercontent.com/labring/sealos/main/CONTRIBUTING.md&#34;&gt;See contribution guide →&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔧 &lt;a href=&#34;https://raw.githubusercontent.com/labring/sealos/main/DEVELOPGUIDE.md&#34;&gt;See development guide →&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/labring/sealos-action&#34;&gt;Sealos Action&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/labring-actions/cluster-image&#34;&gt;Cluster Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/labring-actions/runtime&#34;&gt;Rootfs Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/buildah&#34;&gt;Buildah&lt;/a&gt; The functionalities of Buildah are extensively utilized in Sealos 4.0 to ensure that cluster images are compatible with OCI standard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ## License --&gt; &#xA;&lt;!-- [![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Flabring%2Fsealos.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Flabring%2Fsealos?ref=badge_large) --&gt;</summary>
  </entry>
  <entry>
    <title>quic-go/quic-go</title>
    <updated>2023-06-11T01:53:25Z</updated>
    <id>tag:github.com,2023-06-11:/quic-go/quic-go</id>
    <link href="https://github.com/quic-go/quic-go" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A QUIC implementation in pure go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A QUIC implementation in pure Go&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/quic-go/quic-go/master/docs/quic.png&#34; width=&#34;303&#34; height=&#34;124&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/quic-go/quic-go&#34;&gt;&lt;img src=&#34;https://pkg.go.dev/badge/github.com/quic-go/quic-go&#34; alt=&#34;PkgGoDev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/quic-go/quic-go/&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/quic-go/quic-go/master.svg?style=flat-square&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;quic-go is an implementation of the QUIC protocol (&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9000&#34;&gt;RFC 9000&lt;/a&gt;, &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9001&#34;&gt;RFC 9001&lt;/a&gt;, &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9002&#34;&gt;RFC 9002&lt;/a&gt;) in Go. It has support for HTTP/3 (&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9114&#34;&gt;RFC 9114&lt;/a&gt;), including QPACK (&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9204&#34;&gt;RFC 9204&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;In addition to these base PR, it also implements the following RFS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unreliable Datagram Extension (&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9221&#34;&gt;RFC 9221&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Datagram Packetization Layer Path MTU Discovery (DPLPMTUD, &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc8899&#34;&gt;RFC 8899&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;QUIC Version 2 (&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9369&#34;&gt;RFC 9369&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition to the RFCs listed above, it currently implements the &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-transport-29&#34;&gt;IETF QUIC draft-29&lt;/a&gt;. Support for draft-29 will eventually be dropped, as it is phased out of the ecosystem.&lt;/p&gt; &#xA;&lt;h2&gt;Guides&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;We currently support Go 1.19.x and Go 1.20.x&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Running tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go test ./...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;QUIC without HTTP/3&lt;/h3&gt; &#xA;&lt;p&gt;Take a look at &lt;a href=&#34;https://raw.githubusercontent.com/quic-go/quic-go/master/example/echo/echo.go&#34;&gt;this echo example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;As a server&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/quic-go/quic-go/master/example/main.go&#34;&gt;example server&lt;/a&gt;. Starting a QUIC server is very similar to the standard lib http in go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;http.Handle(&#34;/&#34;, http.FileServer(http.Dir(wwwDir)))&#xA;http3.ListenAndServeQUIC(&#34;localhost:4242&#34;, &#34;/path/to/cert/chain.pem&#34;, &#34;/path/to/privkey.pem&#34;, nil)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;As a client&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/quic-go/quic-go/master/example/client/main.go&#34;&gt;example client&lt;/a&gt;. Use a &lt;code&gt;http3.RoundTripper&lt;/code&gt; as a &lt;code&gt;Transport&lt;/code&gt; in a &lt;code&gt;http.Client&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;http.Client{&#xA;  Transport: &amp;amp;http3.RoundTripper{},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Projects using quic-go&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Stars&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AdguardTeam/AdGuardHome&#34;&gt;AdGuardHome&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Free and open source, powerful network-wide ads &amp;amp; trackers blocking DNS server.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/AdguardTeam/AdGuardHome?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xyproto/algernon&#34;&gt;algernon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Small self-contained pure-Go web server with Lua, Markdown, HTTP/2, QUIC, Redis and PostgreSQL support&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/xyproto/algernon?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/caddyserver/caddy/&#34;&gt;caddy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fast, multi-platform web server with automatic HTTPS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/caddyserver/caddy?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cloudflare/cloudflared&#34;&gt;cloudflared&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A tunneling daemon that proxies traffic from the Cloudflare network to your origins&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/cloudflare/cloudflared?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/libp2p/go-libp2p&#34;&gt;go-libp2p&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;libp2p implementation in Go, powering &lt;a href=&#34;https://github.com/ipfs/kubo&#34;&gt;Kubo&lt;/a&gt; (IPFS) and &lt;a href=&#34;https://github.com/filecoin-project/lotus&#34;&gt;Lotus&lt;/a&gt; (Filecoin), among others&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/libp2p/go-libp2p?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dunglas/mercure&#34;&gt;Mercure&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An open, easy, fast, reliable and battery-efficient solution for real-time communications&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/dunglas/mercure?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ooni/probe-cli&#34;&gt;OONI Probe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Next generation OONI Probe. Library and CLI tool.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ooni/probe-cli?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/syncthing/syncthing/&#34;&gt;syncthing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open Source Continuous File Synchronization&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/syncthing/syncthing?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/traefik/traefik&#34;&gt;traefik&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Cloud Native Application Proxy&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/traefik/traefik?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/v2fly/v2ray-core&#34;&gt;v2ray-core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A platform for building proxies to bypass network restrictions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/v2fly/v2ray-core?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yomorun/yomo&#34;&gt;YoMo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Streaming Serverless Framework for Geo-distributed System&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/stars/yomorun/yomo?style=flat-square&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are always happy to welcome new contributors! We have a number of self-contained issues that are suitable for first-time contributors, they are tagged with &lt;a href=&#34;https://github.com/quic-go/quic-go/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;help wanted&lt;/a&gt;. If you have any questions, please feel free to reach out by opening an issue or leaving a comment.&lt;/p&gt;</summary>
  </entry>
</feed>