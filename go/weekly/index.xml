<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Go Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-01T01:40:01Z</updated>
  <subtitle>Weekly Trending of Go in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zerodha/kite-mcp-server</title>
    <updated>2025-06-01T01:40:01Z</updated>
    <id>tag:github.com,2025-06-01:/zerodha/kite-mcp-server</id>
    <link href="https://github.com/zerodha/kite-mcp-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zerodha Kite MCP server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kite MCP Server&lt;/h1&gt; &#xA;&lt;h2&gt;Claude config:&lt;/h2&gt; &#xA;&lt;p&gt;The path to the config file can be found in the &lt;code&gt;claude_desktop_config.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Linux: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;stdio mode:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;kite&#34;: {&#xA;      &#34;command&#34;: &#34;go&#34;,&#xA;      &#34;args&#34;: [&#34;run&#34;, &#34;&amp;lt;ABSOLUTE_PATH&amp;gt;/main.go&#34;],&#xA;      &#34;env&#34;: {&#xA;        &#34;APP_MODE&#34;: &#34;stdio&#34;,&#xA;        &#34;KITE_API_KEY&#34;: &#34;&amp;lt;your_api_key&amp;gt;&#34;,&#xA;        &#34;KITE_API_SECRET&#34;: &#34;&amp;lt;your_api_secret&amp;gt;&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SSE mode&lt;/h3&gt; &#xA;&lt;p&gt;For the SSE mode, you can run the following command to start the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go run main.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;kite&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;mcp-remote&#34;, &#34;http://localhost:8081/sse&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the hosted version, you can use the following config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;kite&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;mcp-remote&#34;, &#34;https://mcp.kite.trade/sse&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Kite Connect API Integration Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;API Method&lt;/th&gt; &#xA;   &lt;th&gt;Integration Status&lt;/th&gt; &#xA;   &lt;th&gt;Remarks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;User &amp;amp; Account Methods&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetUserProfile()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_profile&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetUserMargins()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_margins&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetHoldings()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_holdings&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetPositions()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_positions&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetFullUserProfile()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;InvalidateAccessToken()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;InvalidateRefreshToken()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;RenewAccessToken()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Orders &amp;amp; Trades Methods&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetOrders()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_orders&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetTrades()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_trades&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PlaceOrder()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;place_order&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModifyOrder()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;modify_order&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancelOrder()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;cancel_order&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ExitOrder()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ConvertPosition()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetOrderHistory()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetOrderTrades()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetOrderMargins()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetBasketMargins()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetOrderCharges()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GTT Orders&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetGTTs()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_gtts&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetGTT()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PlaceGTT()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;place_gtt_order&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModifyGTT()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;modify_gtt_order&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DeleteGTT()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;delete_gtt_order&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Market Data Methods&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetQuote()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_quotes&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetHistoricalData()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_historical_data&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetLTP()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetOHLC()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetInstruments()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[-]&lt;/td&gt; &#xA;   &lt;td&gt;Won&#39;t implement. Use &lt;code&gt;instruments_search&lt;/code&gt; tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetInstrumentsByExchange()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[-]&lt;/td&gt; &#xA;   &lt;td&gt;Won&#39;t implement&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetAuctionInstruments()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Mutual Funds Methods&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFOrders()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFOrderInfo()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PlaceMFOrder()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancelMFOrder()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFSIPs()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFSIPInfo()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PlaceMFSIP()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModifyMFSIP()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CancelMFSIP()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFHoldings()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[x]&lt;/td&gt; &#xA;   &lt;td&gt;Implemented as &lt;code&gt;get_mf_holdings&lt;/code&gt; tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFHoldingInfo()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFInstruments()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFOrdersByDate()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetMFAllottedISINs()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Other Methods&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;InitiateHoldingsAuth()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GetUserSegmentMargins()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[ ]&lt;/td&gt; &#xA;   &lt;td&gt;Not yet implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>cilium/cilium</title>
    <updated>2025-06-01T01:40:01Z</updated>
    <id>tag:github.com,2025-06-01:/cilium/cilium</id>
    <link href="https://github.com/cilium/cilium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;eBPF-based Networking, Security, and Observability&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://cdn.jsdelivr.net/gh/cilium/cilium@main/Documentation/images/logo.png&#34; width=&#34;350&#34; alt=&#34;Cilium Logo&#34;&gt; &#xA; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/cilium/cilium@main/Documentation/images/logo-dark.png&#34; width=&#34;350&#34; alt=&#34;Cilium Logo&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;|cii| |go-report| |clomonitor| |artifacthub| |slack| |go-doc| |rtd| |apache| |bsd| |gpl| |fossa| |gateway-api| |codespaces|&lt;/p&gt; &#xA;&lt;p&gt;Cilium is a networking, observability, and security solution with an eBPF-based dataplane. It provides a simple flat Layer 3 network with the ability to span multiple clusters in either a native routing or overlay mode. It is L7-protocol aware and can enforce network policies on L3-L7 using an identity based security model that is decoupled from network addressing.&lt;/p&gt; &#xA;&lt;p&gt;Cilium implements distributed load balancing for traffic between pods and to external services, and is able to fully replace kube-proxy, using efficient hash tables in eBPF allowing for almost unlimited scale. It also supports advanced functionality like integrated ingress and egress gateway, bandwidth management and service mesh, and provides deep network and security visibility and monitoring.&lt;/p&gt; &#xA;&lt;p&gt;A new Linux kernel technology called eBPF_ is at the foundation of Cilium. It supports dynamic insertion of eBPF bytecode into the Linux kernel at various integration points such as: network IO, application sockets, and tracepoints to implement security, networking and visibility logic. eBPF is highly efficient and flexible. To learn more about eBPF, visit &lt;code&gt;eBPF.io&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: Documentation/images/cilium-overview.png :alt: Overview of Cilium features for networking, observability, service mesh, and runtime security&lt;/p&gt; &#xA;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;a href=&#34;https://cncf.io/&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://github.com/cncf/artwork/blob/main/other/cncf-member/graduated/color/cncf-graduated-color.svg&#34;&gt; &#xA;  &lt;img src=&#34;https://github.com/cncf/artwork/raw/main/other/cncf-member/graduated/white/cncf-graduated-white.svg?sanitize=true&#34; alt=&#34;CNCF Graduated Project&#34; height=&#34;80&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://ebpf.io/&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;.github/assets/powered-by-ebpf.svg&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/cilium/cilium/main/.github/assets/powered-by-ebpf_white.svg?sanitize=true&#34; alt=&#34;Powered by eBPF&#34; height=&#34;80&#34; align=&#34;right&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Stable Releases&lt;/h1&gt; &#xA;&lt;p&gt;The Cilium community maintains minor stable releases for the last three minor Cilium versions. Older Cilium stable versions from minor releases prior to that are considered EOL.&lt;/p&gt; &#xA;&lt;p&gt;For upgrades to new minor releases please consult the &lt;code&gt;Cilium Upgrade Guide&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;Listed below are the actively maintained release branches along with their latest patch release, corresponding image pull tags and their release notes:&lt;/p&gt; &#xA;&lt;p&gt;+---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+ | &lt;code&gt;v1.17 &amp;lt;https://github.com/cilium/cilium/tree/v1.17&amp;gt;&lt;/code&gt;__ | 2025-05-14 | &lt;code&gt;quay.io/cilium/cilium:v1.17.4&lt;/code&gt; | &lt;code&gt;Release Notes &amp;lt;https://github.com/cilium/cilium/releases/tag/v1.17.4&amp;gt;&lt;/code&gt;__ | +---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+ | &lt;code&gt;v1.16 &amp;lt;https://github.com/cilium/cilium/tree/v1.16&amp;gt;&lt;/code&gt;__ | 2025-05-14 | &lt;code&gt;quay.io/cilium/cilium:v1.16.10&lt;/code&gt; | &lt;code&gt;Release Notes &amp;lt;https://github.com/cilium/cilium/releases/tag/v1.16.10&amp;gt;&lt;/code&gt;__ | +---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+ | &lt;code&gt;v1.15 &amp;lt;https://github.com/cilium/cilium/tree/v1.15&amp;gt;&lt;/code&gt;__ | 2025-05-14 | &lt;code&gt;quay.io/cilium/cilium:v1.15.17&lt;/code&gt; | &lt;code&gt;Release Notes &amp;lt;https://github.com/cilium/cilium/releases/tag/v1.15.17&amp;gt;&lt;/code&gt;__ | +---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+&lt;/p&gt; &#xA;&lt;h2&gt;Architectures&lt;/h2&gt; &#xA;&lt;p&gt;Cilium images are distributed for AMD64 and AArch64 architectures.&lt;/p&gt; &#xA;&lt;h2&gt;Software Bill of Materials&lt;/h2&gt; &#xA;&lt;p&gt;Starting with Cilium version 1.13.0, all images include a Software Bill of Materials (SBOM). The SBOM is generated in &lt;code&gt;SPDX&lt;/code&gt;_ format. More information on this is available on &lt;code&gt;Cilium SBOM&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;SPDX&lt;/code&gt;: &lt;a href=&#34;https://spdx.dev/&#34;&gt;https://spdx.dev/&lt;/a&gt; .. _&lt;code&gt;Cilium SBOM&lt;/code&gt;: &lt;a href=&#34;https://docs.cilium.io/en/latest/configuration/sbom/&#34;&gt;https://docs.cilium.io/en/latest/configuration/sbom/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;For development and testing purpose, the Cilium community publishes snapshots, early release candidates (RC) and CI container images build from the &lt;code&gt;main branch &amp;lt;https://github.com/cilium/cilium/commits/main&amp;gt;&lt;/code&gt;_. These images are not for use in production.&lt;/p&gt; &#xA;&lt;p&gt;For testing upgrades to new development releases please consult the latest development build of the &lt;code&gt;Cilium Upgrade Guide&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;Listed below are branches for testing along with their snapshots or RC releases, corresponding image pull tags and their release notes where applicable:&lt;/p&gt; &#xA;&lt;p&gt;+----------------------------------------------------------------------------+------------+-----------------------------------------+---------------------------------------------------------------------------------+ | &lt;code&gt;main &amp;lt;https://github.com/cilium/cilium/commits/main&amp;gt;&lt;/code&gt;__ | daily | &lt;code&gt;quay.io/cilium/cilium-ci:latest&lt;/code&gt; | N/A | +----------------------------------------------------------------------------+------------+-----------------------------------------+---------------------------------------------------------------------------------+ | &lt;code&gt;v1.18.0-pre.2 &amp;lt;https://github.com/cilium/cilium/commits/v1.18.0-pre.2&amp;gt;&lt;/code&gt;__ | 2025-05-01 | &lt;code&gt;quay.io/cilium/cilium:v1.18.0-pre.2&lt;/code&gt; | &lt;code&gt;Release Notes &amp;lt;https://github.com/cilium/cilium/releases/tag/v1.18.0-pre.2&amp;gt;&lt;/code&gt;__ | +----------------------------------------------------------------------------+------------+-----------------------------------------+---------------------------------------------------------------------------------+&lt;/p&gt; &#xA;&lt;h1&gt;Functionality Overview&lt;/h1&gt; &#xA;&lt;p&gt;.. begin-functionality-overview&lt;/p&gt; &#xA;&lt;h2&gt;Protect and secure APIs transparently&lt;/h2&gt; &#xA;&lt;p&gt;Ability to secure modern application protocols such as REST/HTTP, gRPC and Kafka. Traditional firewalls operate at Layer 3 and 4. A protocol running on a particular port is either completely trusted or blocked entirely. Cilium provides the ability to filter on individual application protocol requests such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allow all HTTP requests with method &lt;code&gt;GET&lt;/code&gt; and path &lt;code&gt;/public/.*&lt;/code&gt;. Deny all other requests.&lt;/li&gt; &#xA; &lt;li&gt;Allow &lt;code&gt;service1&lt;/code&gt; to produce on Kafka topic &lt;code&gt;topic1&lt;/code&gt; and &lt;code&gt;service2&lt;/code&gt; to consume on &lt;code&gt;topic1&lt;/code&gt;. Reject all other Kafka messages.&lt;/li&gt; &#xA; &lt;li&gt;Require the HTTP header &lt;code&gt;X-Token: [0-9]+&lt;/code&gt; to be present in all REST calls.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the section &lt;code&gt;Layer 7 Policy&lt;/code&gt;_ in our documentation for the latest list of supported protocols and examples on how to use it.&lt;/p&gt; &#xA;&lt;h2&gt;Secure service to service communication based on identities&lt;/h2&gt; &#xA;&lt;p&gt;Modern distributed applications rely on technologies such as application containers to facilitate agility in deployment and scale out on demand. This results in a large number of application containers being started in a short period of time. Typical container firewalls secure workloads by filtering on source IP addresses and destination ports. This concept requires the firewalls on all servers to be manipulated whenever a container is started anywhere in the cluster.&lt;/p&gt; &#xA;&lt;p&gt;In order to avoid this situation which limits scale, Cilium assigns a security identity to groups of application containers which share identical security policies. The identity is then associated with all network packets emitted by the application containers, allowing to validate the identity at the receiving node. Security identity management is performed using a key-value store.&lt;/p&gt; &#xA;&lt;h2&gt;Secure access to and from external services&lt;/h2&gt; &#xA;&lt;p&gt;Label based security is the tool of choice for cluster internal access control. In order to secure access to and from external services, traditional CIDR based security policies for both ingress and egress are supported. This allows to limit access to and from application containers to particular IP ranges.&lt;/p&gt; &#xA;&lt;h2&gt;Simple Networking&lt;/h2&gt; &#xA;&lt;p&gt;A simple flat Layer 3 network with the ability to span multiple clusters connects all application containers. IP allocation is kept simple by using host scope allocators. This means that each host can allocate IPs without any coordination between hosts.&lt;/p&gt; &#xA;&lt;p&gt;The following multi node networking models are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Overlay:&lt;/strong&gt; Encapsulation-based virtual network spanning all hosts. Currently, VXLAN and Geneve are baked in but all encapsulation formats supported by Linux can be enabled.&lt;/p&gt; &lt;p&gt;When to use this mode: This mode has minimal infrastructure and integration requirements. It works on almost any network infrastructure as the only requirement is IP connectivity between hosts which is typically already given.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Native Routing:&lt;/strong&gt; Use of the regular routing table of the Linux host. The network is required to be capable to route the IP addresses of the application containers.&lt;/p&gt; &lt;p&gt;When to use this mode: This mode is for advanced users and requires some awareness of the underlying networking infrastructure. This mode works well with:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Native IPv6 networks&lt;/li&gt; &#xA;   &lt;li&gt;In conjunction with cloud network routers&lt;/li&gt; &#xA;   &lt;li&gt;If you are already running routing daemons&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Load Balancing&lt;/h2&gt; &#xA;&lt;p&gt;Cilium implements distributed load balancing for traffic between application containers and to external services and is able to fully replace components such as kube-proxy. The load balancing is implemented in eBPF using efficient hashtables allowing for almost unlimited scale.&lt;/p&gt; &#xA;&lt;p&gt;For north-south type load balancing, Cilium&#39;s eBPF implementation is optimized for maximum performance, can be attached to XDP (eXpress Data Path), and supports direct server return (DSR) as well as Maglev consistent hashing if the load balancing operation is not performed on the source host.&lt;/p&gt; &#xA;&lt;p&gt;For east-west type load balancing, Cilium performs efficient service-to-backend translation right in the Linux kernel&#39;s socket layer (e.g. at TCP connect time) such that per-packet NAT operations overhead can be avoided in lower layers.&lt;/p&gt; &#xA;&lt;h2&gt;Bandwidth Management&lt;/h2&gt; &#xA;&lt;p&gt;Cilium implements bandwidth management through efficient EDT-based (Earliest Departure Time) rate-limiting with eBPF for container traffic that is egressing a node. This allows to significantly reduce transmission tail latencies for applications and to avoid locking under multi-queue NICs compared to traditional approaches such as HTB (Hierarchy Token Bucket) or TBF (Token Bucket Filter) as used in the bandwidth CNI plugin, for example.&lt;/p&gt; &#xA;&lt;h2&gt;Monitoring and Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;The ability to gain visibility and troubleshoot issues is fundamental to the operation of any distributed system. While we learned to love tools like &lt;code&gt;tcpdump&lt;/code&gt; and &lt;code&gt;ping&lt;/code&gt; and while they will always find a special place in our hearts, we strive to provide better tooling for troubleshooting. This includes tooling to provide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Event monitoring with metadata: When a packet is dropped, the tool doesn&#39;t just report the source and destination IP of the packet, the tool provides the full label information of both the sender and receiver among a lot of other information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Metrics export via Prometheus: Key metrics are exported via Prometheus for integration with your existing dashboards.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hubble_: An observability platform specifically written for Cilium. It provides service dependency maps, operational monitoring and alerting, and application and security visibility based on flow logs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _Hubble: &lt;a href=&#34;https://github.com/cilium/hubble/&#34;&gt;https://github.com/cilium/hubble/&lt;/a&gt; .. _&lt;code&gt;Layer 7 Policy&lt;/code&gt;: &lt;a href=&#34;https://docs.cilium.io/en/stable/security/policy/language/#layer-7-examples&#34;&gt;https://docs.cilium.io/en/stable/security/policy/language/#layer-7-examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. end-functionality-overview&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Why Cilium?&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Getting Started&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Architecture and Concepts&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Installing Cilium&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Frequently Asked Questions&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;Contributing_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Slack&lt;/h2&gt; &#xA;&lt;p&gt;Join the Cilium &lt;code&gt;Slack channel &amp;lt;https://slack.cilium.io&amp;gt;&lt;/code&gt;_ to chat with Cilium developers and other Cilium users. This is a good place to learn about Cilium, ask questions, and share your experiences.&lt;/p&gt; &#xA;&lt;h2&gt;Special Interest Groups (SIG)&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;Special Interest groups &amp;lt;https://github.com/cilium/community/blob/main/sigs.yaml&amp;gt;&lt;/code&gt;_ for a list of all SIGs and their meeting times.&lt;/p&gt; &#xA;&lt;h2&gt;Developer meetings&lt;/h2&gt; &#xA;&lt;p&gt;The Cilium developer community hangs out on Zoom to chat. Everybody is welcome.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Weekly, Wednesday, 5:00 pm &lt;code&gt;Europe/Zurich time &amp;lt;https://time.is/Canton_of_Zurich&amp;gt;&lt;/code&gt;__ (CET/CEST), usually equivalent to 8:00 am PT, or 11:00 am ET. &lt;code&gt;Meeting Notes and Zoom Info&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;Third Wednesday of each month, 9:00 am &lt;code&gt;Japan time &amp;lt;https://time.is/Tokyo&amp;gt;&lt;/code&gt;__ (JST). &lt;code&gt;APAC Meeting Notes and Zoom Info&lt;/code&gt;_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;eBPF &amp;amp; Cilium Office Hours livestream&lt;/h2&gt; &#xA;&lt;p&gt;We host a weekly community &lt;code&gt;YouTube livestream called eCHO &amp;lt;https://www.youtube.com/channel/UCJFUxkVQTBJh3LD1wYBWvuQ&amp;gt;&lt;/code&gt;_ which (very loosely!) stands for eBPF &amp;amp; Cilium Office Hours. Join us live, catch up with past episodes, or head over to the &lt;code&gt;eCHO repo &amp;lt;https://github.com/isovalent/eCHO&amp;gt;&lt;/code&gt;_ and let us know your ideas for topics we should cover.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;The Cilium project is governed by a group of &lt;code&gt;Maintainers and Committers &amp;lt;https://raw.githubusercontent.com/cilium/cilium/main/MAINTAINERS.md&amp;gt;&lt;/code&gt;&lt;strong&gt;. How they are selected and govern is outlined in our &lt;code&gt;governance document &amp;lt;https://github.com/cilium/community/blob/main/GOVERNANCE.md&amp;gt;&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;A list of adopters of the Cilium project who are deploying it in production, and of their use cases, can be found in file &lt;code&gt;USERS.md &amp;lt;https://github.com/cilium/cilium/blob/main/USERS.md&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;.. _apache-license: LICENSE .. _bsd-license: bpf/LICENSE.BSD-2-Clause .. _gpl-license: bpf/LICENSE.GPL-2.0&lt;/p&gt; &#xA;&lt;p&gt;The Cilium user space components are licensed under the &lt;code&gt;Apache License, Version 2.0 &amp;lt;apache-license_&amp;gt;&lt;/code&gt;&lt;strong&gt;. The BPF code templates are dual-licensed under the &lt;code&gt;General Public License, Version 2.0 (only) &amp;lt;gpl-license_&amp;gt;&lt;/code&gt;&lt;/strong&gt; and the &lt;code&gt;2-Clause BSD License &amp;lt;bsd-license_&amp;gt;&lt;/code&gt;__ (you can use the terms of either license, at your option).&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;Cilium Upgrade Guide&lt;/code&gt;: &lt;a href=&#34;https://docs.cilium.io/en/stable/operations/upgrade/&#34;&gt;https://docs.cilium.io/en/stable/operations/upgrade/&lt;/a&gt; .. _&lt;code&gt;Why Cilium?&lt;/code&gt;: &lt;a href=&#34;https://docs.cilium.io/en/stable/overview/intro&#34;&gt;https://docs.cilium.io/en/stable/overview/intro&lt;/a&gt; .. _&lt;code&gt;Getting Started&lt;/code&gt;: &lt;a href=&#34;https://docs.cilium.io/en/stable/#getting-started&#34;&gt;https://docs.cilium.io/en/stable/#getting-started&lt;/a&gt; .. _&lt;code&gt;Architecture and Concepts&lt;/code&gt;: &lt;a href=&#34;https://docs.cilium.io/en/stable/overview/component-overview/&#34;&gt;https://docs.cilium.io/en/stable/overview/component-overview/&lt;/a&gt; .. _&lt;code&gt;Installing Cilium&lt;/code&gt;: &lt;a href=&#34;https://docs.cilium.io/en/stable/gettingstarted/k8s-install-default/&#34;&gt;https://docs.cilium.io/en/stable/gettingstarted/k8s-install-default/&lt;/a&gt; .. _&lt;code&gt;Frequently Asked Questions&lt;/code&gt;: &lt;a href=&#34;https://github.com/cilium/cilium/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+label%3Akind%2Fquestion+&#34;&gt;https://github.com/cilium/cilium/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+label%3Akind%2Fquestion+&lt;/a&gt; .. _Contributing: &lt;a href=&#34;https://docs.cilium.io/en/stable/contributing/development/&#34;&gt;https://docs.cilium.io/en/stable/contributing/development/&lt;/a&gt; .. _Prerequisites: &lt;a href=&#34;https://docs.cilium.io/en/stable/operations/system_requirements/&#34;&gt;https://docs.cilium.io/en/stable/operations/system_requirements/&lt;/a&gt; .. _&lt;code&gt;eBPF&lt;/code&gt;: &lt;a href=&#34;https://ebpf.io&#34;&gt;https://ebpf.io&lt;/a&gt; .. _&lt;code&gt;eBPF.io&lt;/code&gt;: &lt;a href=&#34;https://ebpf.io&#34;&gt;https://ebpf.io&lt;/a&gt; .. _&lt;code&gt;Meeting Notes and Zoom Info&lt;/code&gt;: &lt;a href=&#34;https://docs.google.com/document/d/1Y_4chDk4rznD6UgXPlPvn3Dc7l-ZutGajUv1eF0VDwQ/edit#&#34;&gt;https://docs.google.com/document/d/1Y_4chDk4rznD6UgXPlPvn3Dc7l-ZutGajUv1eF0VDwQ/edit#&lt;/a&gt; .. _&lt;code&gt;APAC Meeting Notes and Zoom Info&lt;/code&gt;: &lt;a href=&#34;https://docs.google.com/document/d/1egv4qLydr0geP-GjQexYKm4tz3_tHy-LCBjVQcXcT5M/edit#&#34;&gt;https://docs.google.com/document/d/1egv4qLydr0geP-GjQexYKm4tz3_tHy-LCBjVQcXcT5M/edit#&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |go-report| image:: &lt;a href=&#34;https://goreportcard.com/badge/github.com/cilium/cilium&#34;&gt;https://goreportcard.com/badge/github.com/cilium/cilium&lt;/a&gt; :alt: Go Report Card :target: &lt;a href=&#34;https://goreportcard.com/report/github.com/cilium/cilium&#34;&gt;https://goreportcard.com/report/github.com/cilium/cilium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |go-doc| image:: &lt;a href=&#34;https://godoc.org/github.com/cilium/cilium?status.svg&#34;&gt;https://godoc.org/github.com/cilium/cilium?status.svg&lt;/a&gt; :alt: GoDoc :target: &lt;a href=&#34;https://godoc.org/github.com/cilium/cilium&#34;&gt;https://godoc.org/github.com/cilium/cilium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |rtd| image:: &lt;a href=&#34;https://readthedocs.org/projects/docs/badge/?version=latest&#34;&gt;https://readthedocs.org/projects/docs/badge/?version=latest&lt;/a&gt; :alt: Read the Docs :target: &lt;a href=&#34;https://docs.cilium.io/&#34;&gt;https://docs.cilium.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |apache| image:: &lt;a href=&#34;https://img.shields.io/badge/license-Apache-blue.svg&#34;&gt;https://img.shields.io/badge/license-Apache-blue.svg&lt;/a&gt; :alt: Apache licensed :target: apache-license_&lt;/p&gt; &#xA;&lt;p&gt;.. |bsd| image:: &lt;a href=&#34;https://img.shields.io/badge/license-BSD-blue.svg&#34;&gt;https://img.shields.io/badge/license-BSD-blue.svg&lt;/a&gt; :alt: BSD licensed :target: bsd-license_&lt;/p&gt; &#xA;&lt;p&gt;.. |gpl| image:: &lt;a href=&#34;https://img.shields.io/badge/license-GPL-blue.svg&#34;&gt;https://img.shields.io/badge/license-GPL-blue.svg&lt;/a&gt; :alt: GPL licensed :target: gpl-license_&lt;/p&gt; &#xA;&lt;p&gt;.. |slack| image:: &lt;a href=&#34;https://img.shields.io/badge/slack-cilium-brightgreen.svg?logo=slack&#34;&gt;https://img.shields.io/badge/slack-cilium-brightgreen.svg?logo=slack&lt;/a&gt; :alt: Join the Cilium slack channel :target: &lt;a href=&#34;https://slack.cilium.io&#34;&gt;https://slack.cilium.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |cii| image:: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1269/badge&#34;&gt;https://bestpractices.coreinfrastructure.org/projects/1269/badge&lt;/a&gt; :alt: CII Best Practices :target: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1269&#34;&gt;https://bestpractices.coreinfrastructure.org/projects/1269&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |clomonitor| image:: &lt;a href=&#34;https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cilium/badge&#34;&gt;https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cilium/badge&lt;/a&gt; :alt: CLOMonitor :target: &lt;a href=&#34;https://clomonitor.io/projects/cncf/cilium&#34;&gt;https://clomonitor.io/projects/cncf/cilium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |artifacthub| image:: &lt;a href=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cilium&#34;&gt;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cilium&lt;/a&gt; :alt: Artifact Hub :target: &lt;a href=&#34;https://artifacthub.io/packages/helm/cilium/cilium&#34;&gt;https://artifacthub.io/packages/helm/cilium/cilium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |fossa| image:: &lt;a href=&#34;https://app.fossa.com/api/projects/custom%2B162%2Fgit%40github.com%3Acilium%2Fcilium.git.svg?type=shield&#34;&gt;https://app.fossa.com/api/projects/custom%2B162%2Fgit%40github.com%3Acilium%2Fcilium.git.svg?type=shield&lt;/a&gt; :alt: FOSSA Status :target: &lt;a href=&#34;https://app.fossa.com/projects/custom%2B162%2Fgit%40github.com%3Acilium%2Fcilium.git?ref=badge_shield&#34;&gt;https://app.fossa.com/projects/custom%2B162%2Fgit%40github.com%3Acilium%2Fcilium.git?ref=badge_shield&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |gateway-api| image:: &lt;a href=&#34;https://img.shields.io/badge/Gateway%20API%20Conformance%20v1.2.0-Cilium-green&#34;&gt;https://img.shields.io/badge/Gateway%20API%20Conformance%20v1.2.0-Cilium-green&lt;/a&gt; :alt: Gateway API Status :target: &lt;a href=&#34;https://github.com/kubernetes-sigs/gateway-api/tree/main/conformance/reports/v1.2.0/cilium-cilium&#34;&gt;https://github.com/kubernetes-sigs/gateway-api/tree/main/conformance/reports/v1.2.0/cilium-cilium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |codespaces| image:: &lt;a href=&#34;https://img.shields.io/badge/Open_in_GitHub_Codespaces-gray?logo=github&#34;&gt;https://img.shields.io/badge/Open_in_GitHub_Codespaces-gray?logo=github&lt;/a&gt; :alt: Github Codespaces :target: &lt;a href=&#34;https://github.com/codespaces/new?hide_repo_select=true&amp;amp;ref=master&amp;amp;repo=48109239&amp;amp;machine=standardLinux32gb&amp;amp;location=WestEurope&#34;&gt;https://github.com/codespaces/new?hide_repo_select=true&amp;amp;ref=master&amp;amp;repo=48109239&amp;amp;machine=standardLinux32gb&amp;amp;location=WestEurope&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mark3labs/mcp-filesystem-server</title>
    <updated>2025-06-01T01:40:01Z</updated>
    <id>tag:github.com,2025-06-01:/mark3labs/mcp-filesystem-server</id>
    <link href="https://github.com/mark3labs/mcp-filesystem-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go server implementing Model Context Protocol (MCP) for filesystem operations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Filesystem Server&lt;/h1&gt; &#xA;&lt;p&gt;This MCP server provides secure access to the local filesystem via the Model Context Protocol (MCP).&lt;/p&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;h3&gt;Tools&lt;/h3&gt; &#xA;&lt;h4&gt;File Operations&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;read_file&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Read the complete contents of a file from the file system&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;path&lt;/code&gt; (required): Path to the file to read&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;read_multiple_files&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Read the contents of multiple files in a single operation&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;paths&lt;/code&gt; (required): List of file paths to read&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;write_file&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create a new file or overwrite an existing file with new content&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;path&lt;/code&gt; (required): Path where to write the file, &lt;code&gt;content&lt;/code&gt; (required): Content to write to the file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;copy_file&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy files and directories&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;source&lt;/code&gt; (required): Source path of the file or directory, &lt;code&gt;destination&lt;/code&gt; (required): Destination path&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;move_file&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Move or rename files and directories&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;source&lt;/code&gt; (required): Source path of the file or directory, &lt;code&gt;destination&lt;/code&gt; (required): Destination path&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;delete_file&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Delete a file or directory from the file system&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;path&lt;/code&gt; (required): Path to the file or directory to delete, &lt;code&gt;recursive&lt;/code&gt; (optional): Whether to recursively delete directories (default: false)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Directory Operations&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_directory&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Get a detailed listing of all files and directories in a specified path&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;path&lt;/code&gt; (required): Path of the directory to list&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;create_directory&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create a new directory or ensure a directory exists&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;path&lt;/code&gt; (required): Path of the directory to create&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;tree&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Returns a hierarchical JSON representation of a directory structure&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;path&lt;/code&gt; (required): Path of the directory to traverse, &lt;code&gt;depth&lt;/code&gt; (optional): Maximum depth to traverse (default: 3), &lt;code&gt;follow_symlinks&lt;/code&gt; (optional): Whether to follow symbolic links (default: false)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Search and Information&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;search_files&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Recursively search for files and directories matching a pattern&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;path&lt;/code&gt; (required): Starting path for the search, &lt;code&gt;pattern&lt;/code&gt; (required): Search pattern to match against file names&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_file_info&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Retrieve detailed metadata about a file or directory&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: &lt;code&gt;path&lt;/code&gt; (required): Path to the file or directory&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_allowed_directories&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Returns the list of directories that this server is allowed to access&lt;/li&gt; &#xA;   &lt;li&gt;Parameters: None&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Secure access to specified directories&lt;/li&gt; &#xA; &lt;li&gt;Path validation to prevent directory traversal attacks&lt;/li&gt; &#xA; &lt;li&gt;Symlink resolution with security checks&lt;/li&gt; &#xA; &lt;li&gt;MIME type detection&lt;/li&gt; &#xA; &lt;li&gt;Support for text, binary, and image files&lt;/li&gt; &#xA; &lt;li&gt;Size limits for inline content and base64 encoding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;h4&gt;Using Go Install&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install github.com/mark3labs/mcp-filesystem-server@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;As a standalone server&lt;/h4&gt; &#xA;&lt;p&gt;Start the MCP server with allowed directories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mcp-filesystem-server /path/to/allowed/directory [/another/allowed/directory ...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;As a library in your Go project&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;log&#34;&#xA;&#x9;&#34;os&#34;&#xA;&#xA;&#x9;&#34;github.com/mark3labs/mcp-filesystem-server/filesystemserver&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;// Create a new filesystem server with allowed directories&#xA;&#x9;allowedDirs := []string{&#34;/path/to/allowed/directory&#34;, &#34;/another/allowed/directory&#34;}&#xA;&#x9;fs, err := filesystemserver.NewFilesystemServer(allowedDirs)&#xA;&#x9;if err != nil {&#xA;&#x9;&#x9;log.Fatalf(&#34;Failed to create server: %v&#34;, err)&#xA;&#x9;}&#xA;&#xA;&#x9;// Serve requests&#xA;&#x9;if err := fs.Serve(); err != nil {&#xA;&#x9;&#x9;log.Fatalf(&#34;Server error: %v&#34;, err)&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage with Model Context Protocol&lt;/h3&gt; &#xA;&lt;p&gt;To integrate this server with apps that support MCP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;filesystem&#34;: {&#xA;      &#34;command&#34;: &#34;mcp-filesystem-server&#34;,&#xA;      &#34;args&#34;: [&#34;/path/to/allowed/directory&#34;, &#34;/another/allowed/directory&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;h4&gt;Running with Docker&lt;/h4&gt; &#xA;&lt;p&gt;You can run the Filesystem MCP server using Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -i --rm ghcr.io/mark3labs/mcp-filesystem-server:latest /path/to/allowed/directory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Configuration with MCP&lt;/h4&gt; &#xA;&lt;p&gt;To integrate the Docker image with apps that support MCP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;filesystem&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;ghcr.io/mark3labs/mcp-filesystem-server:latest&#34;,&#xA;        &#34;/path/to/allowed/directory&#34;&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/mark3labs/mcp-filesystem-server/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>