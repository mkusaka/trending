<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-17T01:58:54Z</updated>
  <subtitle>Weekly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>com-lihaoyi/mill</title>
    <updated>2023-09-17T01:58:54Z</updated>
    <id>tag:github.com,2023-09-17:/com-lihaoyi/mill</id>
    <link href="https://github.com/com-lihaoyi/mill" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your shiny new Java/Scala build tool!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/docs/logo.svg?sanitize=true&#34; alt=&#34;Mill Logo&#34;&gt;&lt;/span&gt; Mill&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;https://github.com/com-lihaoyi/mill/actions/workflows/actions.yml&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://github.com/com-lihaoyi/mill/actions/workflows/actions.yml/badge.svg?sanitize=true&#34; alt=&#34;Build and Release&#34;&gt;&lt;/span&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/lihaoyi/mill?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter Chat&#34;&gt;&lt;/span&gt;&lt;/a&gt; &lt;a href=&#34;https://index.scala-lang.org/com-lihaoyi/mill/mill-main&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://index.scala-lang.org/com-lihaoyi/mill/mill-main/latest.svg?sanitize=true&#34; alt=&#34;Mill&#34;&gt;&lt;/span&gt;&lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/lihaoyi&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/patreon-sponsor-ff69b4.svg?sanitize=true&#34; alt=&#34;Patreon&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Your shiny new Scala build tool! Confused by SBT? Frustrated by Maven? Perplexed by Gradle? Give Mill a try!&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA; &lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt; &#xA;  &lt;div id=&#34;toctitle&#34;&gt;&#xA;   Table of Contents&#xA;  &lt;/div&gt; &#xA;  &lt;ul class=&#34;sectlevel1&#34;&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#intellij-setup&#34;&gt;IntelliJ Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#manual-automated-testing&#34;&gt;Manual &amp;amp; Automated Testing&lt;/a&gt; &#xA;    &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#in-process-tests&#34;&gt;In-Process Tests&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#sub-process-tests-without-packagingpublishing&#34;&gt;Sub-Process Tests &lt;strong&gt;without&lt;/strong&gt; Packaging/Publishing&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#sub-process-tests-with-packagingpublishing&#34;&gt;Sub-Process Tests &lt;strong&gt;with&lt;/strong&gt; Packaging/Publishing&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#bootstrapping-building-mill-with-your-current-checkout-of-mill&#34;&gt;Bootstrapping: Building Mill with your current checkout of Mill&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#project-layout&#34;&gt;Project Layout&lt;/a&gt; &#xA;    &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#core-modules-that-are-included-in-the-main-assembly&#34;&gt;Core modules that are included in the main assembly&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#worker-modules-that-are-resolved-from-maven-central&#34;&gt;Worker modules that are resolved from Maven Central&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#contrib-modules&#34;&gt;Contrib modules&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#compatibility-stability&#34;&gt;Compatibility &amp;amp; Stability&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#project-maintenance&#34;&gt;Project Maintenance&lt;/a&gt; &#xA;    &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#pull-requests&#34;&gt;Pull Requests&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#commit-messages&#34;&gt;Commit Messages&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#changelog&#34;&gt;Changelog&lt;/a&gt; &#xA;    &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#0-11-2&#34;&gt;0.11.2 - 2023-08-28&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#0-11-1&#34;&gt;0.11.1 - 2023-06-23&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#0-11-0&#34;&gt;0.11.0 - 2023-06-06&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/mill/main/#older-releases&#34;&gt;Older releases&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you want to use Mill in your own projects, check out our documentation:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mill-build.com&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Here is some quick example, so that you can imagine how it looks:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;import mill._, scalalib._&#xA;&#xA;object foo extends ScalaModule {&#xA;  def scalaVersion = &#34;3.2.2&#34;&#xA;}&#xA;&#xA;object bar extends ScalaModule {&#xA;  def moduleDeps = Seq(foo)&#xA;  def scalaVersion = &#34;3.2.2&#34;&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you use Mill and like it, you will probably enjoy the following book by the Author:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.handsonscala.com/&#34;&gt;&lt;em&gt;Hands-on Scala Programming&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The remainder of this readme is developer-documentation targeted at people who wish to work on Mill’s own codebase. The developer docs assume you have read through the user-facing documentation linked above. It’s also worth spending a few minutes reading the following blog posts to get a sense of Mill’s design &amp;amp; motivation:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.lihaoyi.com/post/SowhatswrongwithSBT.html&#34;&gt;&#34;So, what’s wrong with SBT?&#34;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.lihaoyi.com/post/BuildToolsasPureFunctionalPrograms.html&#34;&gt;Build Tools as Pure Functional Programs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.lihaoyi.com/post/MillBetterScalaBuilds.html&#34;&gt;Mill: Better Scala Builds&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Mill is profiled using the &lt;a href=&#34;https://www.ej-technologies.com/products/jprofiler/overview.html&#34;&gt;JProfiler Java Profiler&lt;/a&gt;, by courtesy of EJ Technologies.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Mill is built using Mill. To begin, you just need a JVM installed, and the &lt;code&gt;./mill&lt;/code&gt; script will be sufficient to bootstrap the project.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;intellij-setup&#34;&gt;IntelliJ Setup&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you are using IntelliJ IDEA to edit Mill’s Scala code, you can create the IntelliJ project files via:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./mill -j 0 mill.idea.GenIdea/idea&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;manual-automated-testing&#34;&gt;Manual &amp;amp; Automated Testing&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The following table contains the main ways you can test the code in &lt;code&gt;com-lihaoyi/mill&lt;/code&gt;, via manual testing or automated tests:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt; &#xA;   &lt;colgroup&gt; &#xA;    &lt;col style=&#34;width: 25%;&#34;&gt; &#xA;    &lt;col style=&#34;width: 25%;&#34;&gt; &#xA;    &lt;col style=&#34;width: 25%;&#34;&gt; &#xA;    &lt;col style=&#34;width: 25%;&#34;&gt; &#xA;   &lt;/colgroup&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Config&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Automated Testing&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Manual Testing&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Manual Testing CI&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;In-Process Tests&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;main.__.test&lt;/code&gt;, &lt;code&gt;scalalib.test&lt;/code&gt;, &lt;code&gt;contrib.buildinfo.test&lt;/code&gt;, etc.&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Sub-Process w/o packaging/publishing&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;example.&lt;em&gt;_.local&lt;/em&gt;&lt;/code&gt;&lt;em&gt;, &lt;code&gt;integration._&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.local&lt;/code&gt;&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;dev.run&lt;/code&gt;&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;test-mill-dev.sh&lt;/code&gt;&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Sub-Process w/ packaging/publishing&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;example.&lt;em&gt;_.server&lt;/em&gt;&lt;/code&gt;&lt;em&gt;, &lt;code&gt;integration._&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.server&lt;/code&gt;&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;dev.assembly&lt;/code&gt;&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;test-mill-release.sh&lt;/code&gt;&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Bootstrapping: Building Mill with your current checkout of Mill&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;installLocal&lt;/code&gt;&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;test-mill-bootstrap.sh&lt;/code&gt;&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;in-process-tests&#34;&gt;In-Process Tests&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;In-process tests live in the &lt;code&gt;.test&lt;/code&gt; sub-modules of the various Mill modules. These range from tiny unit tests, to larger integration tests that instantiate a &lt;code&gt;TestUtil.BaseModule&lt;/code&gt; in-process and a &lt;code&gt;TestEvaluator&lt;/code&gt; to evaluate tasks on it.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Most &#34;core&#34; tests live in &lt;code&gt;main.__test&lt;/code&gt;; these should run almost instantly, and cover most of Mill’s functionality that is not specific to Scala/Scala.js/etc.. Tests specific to Scala/Scala.js/Scala-Native live in &lt;code&gt;scalalib.test&lt;/code&gt;/&lt;code&gt;scalajslib.test&lt;/code&gt;/&lt;code&gt;scalanativelib.test&lt;/code&gt; respectively, and take a lot longer to run because running them involves actually compiling Scala code.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The various &lt;code&gt;contrib&lt;/code&gt; modules also have tests in this style, e.g. &lt;code&gt;contrib.buildinfo.test&lt;/code&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Note that the in-memory tests compile the &lt;code&gt;BaseModule&lt;/code&gt; together with the test suite, and do not exercise the Mill script-file bootstrapping, transformation, and compilation process.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;sub-process-tests-without-packagingpublishing&#34;&gt;Sub-Process Tests &lt;strong&gt;without&lt;/strong&gt; Packaging/Publishing&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;code&gt;example.&lt;em&gt;_.local&lt;/em&gt;&lt;/code&gt;&lt;em&gt; and &lt;code&gt;integration._&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.local&lt;/code&gt; tests run Mill end-to-end in a subprocess, but &lt;strong&gt;without&lt;/strong&gt; the expensive/slow steps of packaging the core packages into an assembly jar and publishing the remaining packages to &lt;code&gt;~/.ivy2/local&lt;/code&gt;. You can reproduce these tests manually using &lt;code&gt;./mill dev.run &amp;lt;test-folder-path&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;code&gt;example&lt;/code&gt; tests are written in a single &lt;code&gt;build.sc&lt;/code&gt; file, with the test commands written in a comment with a bash-like syntax together with the build code and comments that explain the example. These serve three purposes:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;olist arabic&#34;&gt; &#xA;    &lt;ol class=&#34;arabic&#34;&gt; &#xA;     &lt;li&gt; &lt;p&gt;Basic smoke-tests to make sure the functionality works at all, without covering every edge case&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;User-facing documentation, with the test cases, test commands, and explanatory comments included in the Mill documentation site&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Example repositories, that Mill users can download to bootstrap their own projects&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The &lt;code&gt;integration&lt;/code&gt; tests are similar to &lt;code&gt;example&lt;/code&gt; tests and share most of their test infrastructure, but with differences:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;olist arabic&#34;&gt; &#xA;    &lt;ol class=&#34;arabic&#34;&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;integration&lt;/code&gt; tests are meant to test features more thoroughly then &lt;code&gt;example&lt;/code&gt; tests, covering more and deeper edge cases even at the expense of readability&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;integration&lt;/code&gt; tests are written using a Scala test suite extending &lt;code&gt;IntegrationTestSuite&lt;/code&gt;, giving more flexibility at the expense of readability&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;You can reproduce any of the tests manually using &lt;code&gt;dev.run&lt;/code&gt;, e.g.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Automated Test&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./mill &#34;example.basic[1-simple-scala].local&#34;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Manual Test&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./mill dev.run example/basic/1-simple-scala run --text hello&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Manual Test using Launcher Script&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./mill dev.launcher &amp;amp;&amp;amp; (cd example/basic/1-simple-scala &amp;amp;&amp;amp; ../../../out/dev/launcher.dest/run run --text hello)&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;sub-process-tests-with-packagingpublishing&#34;&gt;Sub-Process Tests &lt;strong&gt;with&lt;/strong&gt; Packaging/Publishing&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;code&gt;example.&lt;em&gt;_.server&lt;/em&gt;&lt;/code&gt;&lt;em&gt;, &lt;code&gt;integration._&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.server&lt;/code&gt;, &lt;code&gt;example.&lt;em&gt;_.fork&lt;/em&gt;&lt;/code&gt;&lt;em&gt; and &lt;code&gt;integration._&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.fork&lt;/code&gt; cover the same test cases as the &lt;code&gt;.local&lt;/code&gt; tests described above, but they perform packaging of the Mill core modules into an assembly jar, and publish the remaining modules to &lt;code&gt;~/.ivy2/local&lt;/code&gt;. This results in a more realistic test environment, but at the cost of taking tens-of-seconds more to run a test after making a code change.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;You can reproduce these tests manually using &lt;code&gt;dev.assembly&lt;/code&gt;:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./mill dev.assembly &amp;amp;&amp;amp; (cd example/basic/1-simple-scala &amp;amp;&amp;amp; ../../../out/dev/assembly.dest/mill run --text hello)&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;There are two flavors of these tests:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;olist arabic&#34;&gt; &#xA;    &lt;ol class=&#34;arabic&#34;&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;.server&lt;/code&gt; test run the test cases with the default configuration, so consecutive commands run in the same long-lived background server process&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;.fork&lt;/code&gt; test run the test cases with &lt;code&gt;--no-server&lt;/code&gt;, meaning each command runs in a newly spawned Mill process&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;In general you should spend most of your time working with the &lt;code&gt;.local&lt;/code&gt; version of the &lt;code&gt;example&lt;/code&gt; and &lt;code&gt;integration&lt;/code&gt; tests to save time, and only run &lt;code&gt;.fork&lt;/code&gt; or &lt;code&gt;.server&lt;/code&gt; once &lt;code&gt;.local&lt;/code&gt; is passing.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;bootstrapping-building-mill-with-your-current-checkout-of-mill&#34;&gt;Bootstrapping: Building Mill with your current checkout of Mill&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To test bootstrapping of Mill’s own Mill build using a version of Mill built from your checkout, you can run&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./mill installLocal&#xA;ci/patch-mill-bootstrap.sh&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;This creates a standalone assembly at &lt;code&gt;target/mill-release&lt;/code&gt; you can use, which references jars published locally in your &lt;code&gt;~/.ivy2/local&lt;/code&gt; cache, and applies any necessary patches to &lt;code&gt;build.sc&lt;/code&gt; to deal with changes in Mill between the version specified in &lt;code&gt;.config/mill-version&lt;/code&gt; that is normally used to build Mill and the &lt;code&gt;HEAD&lt;/code&gt; version your assembly was created from. You can then use this standalone assembly to build &amp;amp; re-build your current Mill checkout without worrying about stomping over compiled code that the assembly is using.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;This assembly is design to work on bash, bash-like shells and Windows Cmd. If you have another default shell like zsh or fish, you probably need to invoke it with &lt;code&gt;sh ~/mill-release&lt;/code&gt; or prepend the file with a proper shebang.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;If you want to install into a different location or a different Ivy repository, you can set its optional parameters.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;title&#34;&gt;&#xA;     Install into &#xA;     &lt;code&gt;/tmp&lt;/code&gt;&#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ./mill installLocal --binFile /tmp/mill --ivyRepo /tmp/millRepo&#xA;...&#xA;Published 44 modules and installed /tmp/mill&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;In case of troubles with caching and/or incremental compilation, you can always restart from scratch removing the &lt;code&gt;out&lt;/code&gt; directory:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;os.remove.all -rf out/&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;project-layout&#34;&gt;Project Layout&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The Mill project is organized roughly as follows:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;core-modules-that-are-included-in-the-main-assembly&#34;&gt;Core modules that are included in the main assembly&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;runner&lt;/code&gt;, &lt;code&gt;main.*&lt;/code&gt;, &lt;code&gt;scalalib&lt;/code&gt;, &lt;code&gt;scalajslib&lt;/code&gt;, &lt;code&gt;scalanativelib&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;These are general lightweight and dependency-free: mostly configuration &amp;amp; wiring of a Mill build and without the heavy lifting.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Heavy lifting is delegated to the worker modules (described below), which the core modules resolve from Maven Central (or from the local filesystem in dev) and load into isolated classloaders.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;worker-modules-that-are-resolved-from-maven-central&#34;&gt;Worker modules that are resolved from Maven Central&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib.worker&lt;/code&gt;, &lt;code&gt;scalajslib.worker[0.6]&lt;/code&gt;, &lt;code&gt;scalajslib.worker[1.0]&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;These modules are where the heavy-lifting happens, and include heavy dependencies like the Scala compiler, Scala.js optimizer, etc.. Rather than being bundled in the main assembly &amp;amp; classpath, these are resolved separately from Maven Central (or from the local filesystem in dev) and kept in isolated classloaders.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;This allows a single Mill build to use multiple versions of e.g. the Scala.js optimizer without classpath conflicts.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;contrib-modules&#34;&gt;Contrib modules&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;contrib/bloop/&lt;/code&gt;, &lt;code&gt;contrib/flyway/&lt;/code&gt;, &lt;code&gt;contrib/scoverage/&lt;/code&gt;, etc.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;These are modules that help integrate Mill with the wide variety of different tools and utilities available in the JVM ecosystem.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;These modules are not as stringently reviewed as the main Mill core/worker codebase, and are primarily maintained by their individual contributors. These are maintained as part of the primary Mill Github repo for easy testing/updating as the core Mill APIs evolve, ensuring that they are always tested and passing against the corresponding version of Mill.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;compatibility-stability&#34;&gt;Compatibility &amp;amp; Stability&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Mill maintains backward binary compatibility for each major version (&lt;code&gt;major.minor.point&lt;/code&gt;), enforced with Mima, for the following packages:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.api&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.util&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.define&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.eval&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.resolve&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.scalalib&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.scalajslib&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.scalanativelib&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Other packages like &lt;code&gt;mill.runner&lt;/code&gt;, &lt;code&gt;mill.bsp&lt;/code&gt;, etc. are on the classpath but offer no compatibility guarantees.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Currently, Mill does not offer compatibility guarantees for &lt;code&gt;mill.contrib&lt;/code&gt; packages, although they tend to evolve slowly. This may change over time as these packages mature over time.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;project-maintenance&#34;&gt;Project Maintenance&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;pull-requests&#34;&gt;Pull Requests&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Changes to the main branch need a pull request. Exceptions are preparation commits for releases, which are meant to be pushed with tags in one go&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Merged pull request (and closed issues) need to be assigned to a Milestone&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Pull requests are typically merged via &#34;Squash and merge&#34;, so we get a linear and useful history&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Larger pull request, where it makes sense to keep single commits, or with multiple authors may be committed via merge commits.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;commit-messages&#34;&gt;Commit Messages&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;The title should be meaningful and may contain the pull request number in parentheses (typically automatically generated on GitHub)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;The description should contain additional required details, which typically reflect the content of the first PR comment&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;A full link to the pull request should be added via a line: &lt;code&gt;Pull request: &amp;lt;link&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;If the PR has multiple authors but is merged as merge commit, those authors should be included via a line for each co-author: &lt;code&gt;Co-authored-by: &amp;lt;author&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;If the message contains links to other issues or pull requests, you should use full URLs to reference them&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;changelog&#34;&gt;Changelog&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;0-11-2&#34;&gt;0.11.2 - 2023-08-28&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;em&gt;Changes since 0.11.1:&lt;/em&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Target invalidation after making changes to &lt;code&gt;build.sc&lt;/code&gt; is now done at a fine-grained method-level granularity, using callgraph reachability analysis to see which targets depend on the code that was changed. See &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2417&#34;&gt;#2417&lt;/a&gt; for more details&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Fix redirection of stdout stream to stderr when using &lt;code&gt;show&lt;/code&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2689&#34;&gt;#2689&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Fix line numbers in errors for scripts starting with leading comments or whitespace &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2686&#34;&gt;#2686&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Fix &lt;code&gt;init&lt;/code&gt; command and support runnig Mill without existing &lt;code&gt;build.sc&lt;/code&gt; file &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2662&#34;&gt;#2662&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Fixes for BSP editor integration sometimes using the wrong output folder for meta-build metadata, causing subsequent builds from the command line to fail &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2692&#34;&gt;#2692&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Added a new &lt;code&gt;mill.idea.GenIdea/idea&lt;/code&gt; command to generate IntelliJ IDE metadata, improving-upon and replacing the older &lt;code&gt;mill.scalalib.GenIdea/idea&lt;/code&gt; command which is now deprecated &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2638&#34;&gt;#2638&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Update Coursier to 2.1.6 to mitigate CVE CVE-2022-46751 &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2705&#34;&gt;#2705&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/86?closed=1&#34;&gt;milestone 0.11.2&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.1…​0.11.2&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;0-11-1&#34;&gt;0.11.1 - 2023-06-23&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;em&gt;Changes since 0.11.0:&lt;/em&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.define.Cross&lt;/code&gt;: Introduced default cross segments and some CLI convenience&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.testrunner&lt;/code&gt;: Fixed exception when running ScalaTest or ZIOTest frameworks&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.runner&lt;/code&gt;: Removed some obsolete / defunct cli options&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.runner&lt;/code&gt;: Properly distinct-ify commands when resolving wide matching target patterns&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.scalajslib&lt;/code&gt;: Restored correct defaults for &lt;code&gt;esFeature&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.bsp&lt;/code&gt;: Fixed a &lt;code&gt;MatchError&lt;/code&gt; in the &lt;code&gt;buildtarget/scalaTestClasses&lt;/code&gt; request&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.contrib.bloop&lt;/code&gt;: Corrected accidentally changed package name resulting in non-functional plugin&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.contrib.scoverage&lt;/code&gt;: Fixed defunct plugin due to a missing type annotation&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Various internal improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Dependency updates: Ammonite 3.3.0-M0-32-96e851cb, bsp4j 2.1.0-M5, zinc 1.9.1&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Mill is now build with Mill 0.11&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/85?closed=1&#34;&gt;milestone 0.11.1&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0…​0.11.1&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;0-11-0&#34;&gt;0.11.0 - 2023-06-06&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M11.&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M11:&lt;/em&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;0.11.0 is the next breaking version after the 0.10.x series, with a large number of improvements. See the changelog below for 0.11.0-M1 to 0.11.0-M11 for a full list of user-facing changes.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/84?closed=1&#34;&gt;milestone 0.11.0&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M11…​0.11.0&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;older-releases&#34;&gt;Older releases&lt;/h3&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M11&#34;&gt;0.11.0-M11 - 2023-06-04&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M10.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M10:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make &lt;code&gt;foo.test&lt;/code&gt; command run tests with user code in the boot classloader, rather than in a sub-classloader &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2561&#34;&gt;#2561&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill backend server timeout is now configurable &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2550&#34;&gt;#2550&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill assembly is now distributed via Maven Central, rather than Github release assets, to remove an unnecessary single point of failure &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2560&#34;&gt;#2560&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;Tests&lt;/code&gt; inner trait was removed, to avoid trait shadowing which will be removed in Scala 3. Please use &lt;code&gt;ScalaTests&lt;/code&gt;, &lt;code&gt;ScalaJSTests&lt;/code&gt;, or &lt;code&gt;ScalaNativeTests&lt;/code&gt; instead &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2558&#34;&gt;#2558&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/83?closed=1&#34;&gt;milestone 0.11.0-M11&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M10…​0.11.0-M11&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M10&#34;&gt;0.11.0-M10 - 2023-05-24&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M9.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M9:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make &lt;code&gt;mill.define.Module&lt;/code&gt; a &lt;code&gt;trait&lt;/code&gt; to allow abstract/virtual modules to be &lt;code&gt;trait&lt;/code&gt;s rather than &lt;code&gt;class&lt;/code&gt;es &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2536&#34;&gt;#2536&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Move &lt;code&gt;mill.BuildInfo&lt;/code&gt; to &lt;code&gt;mill.main.BuildInfo&lt;/code&gt; to avoid name conflicts with &lt;code&gt;mill.contrib.buildinfo.BuildInfo&lt;/code&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2537&#34;&gt;#2537&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;PlatformScalaModule&lt;/code&gt; now exposes &lt;code&gt;platformScalaSuffix&lt;/code&gt; for user code to use &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2534&#34;&gt;#2534&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add &lt;code&gt;Agg.when&lt;/code&gt; operator to simplify common workflow of adding optional flags or command line parameters &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2535&#34;&gt;#2353&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Generalize handling of test module source folder layout, such that they always match the folder layout of the enclosing module &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2531&#34;&gt;#2531&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/82?closed=1&#34;&gt;milestone 0.11.0-M10&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M9…​0.11.0-M10&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M9&#34;&gt;0.11.0-M9 - 2023-05-18&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M8.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M8:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Overhauled target resolution logic. It is now significantly lazier, resulting in less of the module tree being un-necessarily instantiated, and also more precise and predictable &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2453&#34;&gt;#2453&lt;/a&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2511&#34;&gt;#2511&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow tasks to be passed as the CLI parameters of the &lt;code&gt;run&lt;/code&gt; command, allowing &lt;code&gt;run&lt;/code&gt; to be easily used in the implementation of other tasks &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2452&#34;&gt;#2452&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;T.input&lt;/code&gt;s are now watched properly with &lt;code&gt;--watch&lt;/code&gt;, and trigger re-evaluations when the watched value changes &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2489&#34;&gt;#2489&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for Java 20 &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2501&#34;&gt;#2501&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Broke up &lt;code&gt;mill.modules&lt;/code&gt; package &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2513&#34;&gt;#2513&lt;/a&gt;, with functionality re-distributed to &lt;code&gt;mill.util&lt;/code&gt; and &lt;code&gt;mill.scalalib&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Overhaul BSP-related code, for improved fidelity and correctness &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2415&#34;&gt;#2415&lt;/a&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2414&#34;&gt;#2414&lt;/a&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2518&#34;&gt;#2518&lt;/a&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2521&#34;&gt;#2521&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Enabled compilation warnings in &lt;code&gt;build.sc&lt;/code&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2519&#34;&gt;#2519&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Print out the CLI flags when inspecting &lt;code&gt;T.command&lt;/code&gt;s &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2522&#34;&gt;#2522&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/80?closed=1&#34;&gt;milestone 0.11.0-M9&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M8…​0.11.0-M9&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M8&#34;&gt;0.11.0-M8 - 2023-04-24&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M7.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M7:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added an &lt;a href=&#34;https://github.com/com-lihaoyi/mill/tree/main/example&#34;&gt;example/&lt;/a&gt; folder in the Mill repo, containing common build setups demonstrating Mill features with explanations of how each feature works&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Pre-compiled Scala incremental compiler interface &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2424&#34;&gt;#2424&lt;/a&gt;, to speed up clean builds&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add some helpers to simplify cross-version/cross-platform modules {#2406}[&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2406&#34; class=&#34;bare&#34;&gt;https://github.com/com-lihaoyi/mill/pull/2406&lt;/a&gt;]&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;You can now override &lt;code&gt;T{…​}&lt;/code&gt; &lt;code&gt;Target&lt;/code&gt;s with &lt;code&gt;T.source&lt;/code&gt; or &lt;code&gt;T.sources&lt;/code&gt;, and vice versa &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2402&#34;&gt;#2402&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Removed the Ammonite script runner dependency used to evaluate &lt;code&gt;build.sc&lt;/code&gt; files and instead compile them using Mill &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2377&#34;&gt;#2377&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add &lt;code&gt;TestModule.ZioTest&lt;/code&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2432&#34;&gt;#2432&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Caching fixes for external modules &lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/2419&#34;&gt;#2419&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Overhaul of the Mill &lt;code&gt;BuildInfo&lt;/code&gt; plugin, moving the key-value into resources to avoid needing to re-compile your module when the values change, adding &lt;code&gt;JavaModule&lt;/code&gt; support, and allowing Javadoc/Scaladoc comments to be associated with the generated &lt;code&gt;BuildInfo&lt;/code&gt; constants &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/2425&#34;&gt;#2425&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Global Configuration via &lt;code&gt;~/.mill/ammonite/predefScript.sc&lt;/code&gt; is no longer supported in this version. If that breaks your workflow, please report and tell us your use case so we can provide sufficient replacement or support for your use case before Mill 0.11.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Overhaul of the documentation. Created many executable example projects which are included in the documentation and run/tested on CI&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Change cross module definitions to be traits instead of classes, for greater regularity and less builerplate at call sites. &lt;em&gt;This change requires slight modification to existing build scripts that define cross modules.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/79?closed=1&#34;&gt;milestone 0.11.0-M8&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M7…​0.11.0-M8&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M7&#34;&gt;0.11.0-M7 - 2023-03-30&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M6.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M6:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Introduced automatic &lt;code&gt;PathRef&lt;/code&gt; validation for cached targets; default-enabled it for &lt;code&gt;CoursierModule.resolveDeps&lt;/code&gt; and various &lt;code&gt;resolvedIvyDeps&lt;/code&gt; targets&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;bsp&lt;/code&gt;: Update Protocol version to 2.1.0-M4&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;bsp&lt;/code&gt;: Support new &lt;code&gt;mainClasses&lt;/code&gt; field in run and test environments&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;bsp&lt;/code&gt;: Fixed handling of Mill plugins and other improvements&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalanativelib&lt;/code&gt;: new &lt;code&gt;nativeDump&lt;/code&gt; setting in &lt;code&gt;ScalaNativeModule&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;contrib.twirllib&lt;/code&gt;: Use newer scala-parser-combinators version when used with Scala 3&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;contrib.scalapblib&lt;/code&gt;: Added new flag to search for proto files in dependencies&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various refactorings to improve binary compatibility&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Updated dependencies: Ammonite 3.0.0-M0-5 coursier 2.1.0, scala native tools 0.4.12, semanticdb 4.7.6, trees 4.7.6, upickle 3.0.0&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;DX improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/78?closed=1&#34;&gt;milestone 0.11.0-M7&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M6…​0.11.0-M7&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M6&#34;&gt;0.11.0-M6 - 2023-03-09&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M5.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M5:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;main&lt;/code&gt;: Re-added missing &lt;code&gt;--color&lt;/code&gt; and &lt;code&gt;predef&lt;/code&gt; cli arguments.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/77?closed=1&#34;&gt;milestone 0.11.0-M6&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M5…​0.11.0-M6&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M5&#34;&gt;0.11.0-M5 - 2023-03-09&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M4.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M4:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;Cross&lt;/code&gt; is no longer adding the cross parameters to the &lt;code&gt;millSourcePath&lt;/code&gt;.&lt;/p&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;&lt;em&gt;You should review your cross modules setups to avoid build issues like incorrect source paths or missing files. &lt;code&gt;CrossScalaModule&lt;/code&gt; is not affected by this change.&lt;/em&gt;&lt;/p&gt; &#xA;       &lt;/div&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;API refactorings: &lt;code&gt;PathRef&lt;/code&gt;, moved &lt;code&gt;JarManifest&lt;/code&gt; to &lt;code&gt;mill.main&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;No longer inherit the Ammonite CLI config&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Fixed loosing customized &lt;code&gt;mapDependencies&lt;/code&gt; when &lt;code&gt;ScalaModule&lt;/code&gt; get mixed in after&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: New &lt;code&gt;TestModule.Weaver&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: New &lt;code&gt;JsEnvConfig.Selenium&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;testrunner&lt;/code&gt;: Fixed concurrency issue with test event reporting&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Updated dependencies: ammonite 3.0.0-M0-3, coursier 2.1.0-RC6, jarajar-abrams-core 1.8.2, lambdatest 0.8.0, log4j-core 2.20.0, os-lib 0.9.1, scoverage 2.0.8, semanticdb-scalac 4.7.5, trees 4.7.5&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Documentation updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/76?closed=1&#34;&gt;milestone 0.11.0-M5&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M4…​0.11.0-M5&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M4&#34;&gt;0.11.0-M4 - 2023-02-10&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M3.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M3:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: New configuration target &lt;code&gt;zincReportCachedProblems&lt;/code&gt; which, when &lt;code&gt;true&lt;/code&gt;, enables reporting of all found problems, even for files which were not re-compiled&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Improved SemanticDB support for Java and Scala&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Mitigate another coursier download issue&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: Fetch more tooling dependencies in &lt;code&gt;prepareOffline&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalanativelib&lt;/code&gt;: Fetch more tooling dependencies in &lt;code&gt;prepareOffline&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalanativelib&lt;/code&gt;: Updated tools to version 0.4.10&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;bsp&lt;/code&gt;: Improved support for the &lt;code&gt;mill-build&lt;/code&gt; module which should improve the editing experience for &lt;code&gt;build.sc&lt;/code&gt; and other build files&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Cleanups and internal improvements&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Updated dependencies: Ammonite 3.0.0-M0-1, junixsocket 2.6.2, semanticdb-java 0.8.13, upickle 3.0.0-M2&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/74?closed=1&#34;&gt;milestone 0.11.0-M4&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M3…​0.11.0-M4&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M3&#34;&gt;0.11.0-M3 - 2023-01-23&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M2.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M2:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Slightly changed the &lt;code&gt;out/&lt;/code&gt; folder layout for overridden and private tasks. Instead of &lt;code&gt;foo.overridden&lt;/code&gt; we now use a &lt;code&gt;foo.super&lt;/code&gt; path to hold the metadata and scratch files.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed the caching for private targets with same name but defined in different super traits.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed non-functional &lt;code&gt;clean&lt;/code&gt; command when used with arguments denoting modules.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Fixed &lt;code&gt;GenIdea&lt;/code&gt; issues on Windows, when the build uses plugins or additional libraries.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: &lt;code&gt;ScalaJSModule.ScalaJSTests&lt;/code&gt; now extends &lt;code&gt;ScalaModule.ScalaTests&lt;/code&gt; which improves consistency, better default values and compatibility with other modules like &lt;code&gt;ScoverageModule&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalanativelib&lt;/code&gt;: &lt;code&gt;ScalaNativeModule.ScalaNativeTests&lt;/code&gt; now extends &lt;code&gt;ScalaModule.ScalaTests&lt;/code&gt; which improves consistency, better default values and compatibility with other modules.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;contrib.gitlab&lt;/code&gt;: Improved error handling for token lookup and documentation.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Updated dependencies: coursier 2.1.0-RC5, jna 5.13.0, semanticdb-scala 4.7.3, trees 4.7.3&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Documentation improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/73?closed=1&#34;&gt;milestone 0.11.0-M3&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M2…​0.11.0-M3&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M2&#34;&gt;0.11.0-M2 - 2023-01-13&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.11.0-M1.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.11.0-M1:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Splitted BSP module into &lt;code&gt;mill.bsp&lt;/code&gt; and &lt;code&gt;mill.bsp.worker&lt;/code&gt; and removed various dependencies (guava, bsp4j, xtends, lsp4j, …​) from Mill API&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Added support to generate semanticdb data for Java source files&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: Added support for &lt;code&gt;scalaJSOutputPattern&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: Added suport for &lt;code&gt;scalaJSSourceMap&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: Dropped support for Scala.js 0.6&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Updated dependencies: ammonite 2.5.6, coursier 2.1.0-RC4, semanticdb 4.7.1, requests 0.8.0, scalafmt 3.6.1, trees 4.7.1, upickle 3.0.0-M1, utest 0.8.1&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various internal cleanups and improvements&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Documentation improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/72?closed=1&#34;&gt;milestone 0.11.0-M2&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.11.0-M1…​0.11.0-M2&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-11-0-M1&#34;&gt;0.11.0-M1 - 2022-12-17&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release is binary incompatible to 0.10.10.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.10:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Greatly improved dependency resolution between modules, making it possible to mix Java and Scala modules&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;main&lt;/code&gt;: Restrict &lt;code&gt;Cross&lt;/code&gt; parameter to be of type &lt;code&gt;Module&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Performance improvements in Zinc worker module&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Resources are no longer added to &lt;code&gt;compileClasspath&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Added new &lt;code&gt;compileResources&lt;/code&gt; which will end up in &lt;code&gt;compileClasspath&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Consolidated artifact and platform suffix handling&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt; : Performance improvements in worker module&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalanativelib&lt;/code&gt; : Performance improvements in worker module&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Updated dependencies: coursier 2.1.0-RC3, os-lib 0.9, scala 2.12.17, trees 4.7.0&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Removed lots of deprecated API&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various internal cleanups and improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/70?closed=1&#34;&gt;milestone 0.11.0-M1&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.10…​0.11.0-M1&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-12&#34;&gt;0.10.12 - 2023-03-20&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.11:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Mitigate another coursier download issue (backported from 0.11.0-M4)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;testrunner&lt;/code&gt;: Fixed a concurrency issue with test event reporting (backported from 0.11.0-M5)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: Deprecated &lt;code&gt;fastOpt&lt;/code&gt; and &lt;code&gt;fullOpt&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Updated dependencies: coursier 2.1.0, jarjar-abrams 1.8.2, jna 5.13.0, junixsocket 2.6.2, log4j-core 2.20.0, scalafmt-dynamic 3.6.1, trees 4.7.6&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/75?closed=1&#34;&gt;milestone 0.10.12&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.11…​0.10.12&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-11&#34;&gt;0.10.11 - 2023-01-24&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.10:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed non-functional &lt;code&gt;clean&lt;/code&gt; command when used with arguments denoting modules.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Fixed &lt;code&gt;GenIdea&lt;/code&gt; issues on Windows, when the build uses plugins or additional libraries.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: Performance improvements in worker module&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: Pass more settings from &lt;code&gt;ScalaJSModule&lt;/code&gt; to its &lt;code&gt;Tests&lt;/code&gt;&lt;/p&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;&lt;em&gt;If you have issues after the update (like &lt;code&gt;org.scalajs.jsenv.UnsupportedInputException&lt;/code&gt;, &lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/2300&#34; class=&#34;bare&#34;&gt;https://github.com/com-lihaoyi/mill/issues/2300&lt;/a&gt;), check your settings in the test modules for consistency.&lt;/em&gt;&lt;/p&gt; &#xA;       &lt;/div&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Some internal improvements backported from &lt;code&gt;0.11.0-M3&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/71?closed=1&#34;&gt;milestone 0.10.11&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.10…​0.10.11&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-10&#34;&gt;0.10.10 - 2022-12-06&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;After this release, the &lt;code&gt;main&lt;/code&gt; branch is open for development of the next major version of Mill, which is probably &lt;code&gt;0.11&lt;/code&gt;. Further maintenance work will happen in the &lt;code&gt;0.10.x&lt;/code&gt; branch.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.9:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Lots of documentation improvements, additions and restructurings&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;core&lt;/code&gt;: Fixed some rare issues with reading the &lt;code&gt;.mill-jvm-opts&lt;/code&gt; file&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;core&lt;/code&gt;: We made slight adaptions to the &lt;code&gt;T.dest&lt;/code&gt; location of target defined in included files, to fix potential colliding cache locations&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: JAR archives created by Mill now by default contain directory entries&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalalib&lt;/code&gt;: Updated zinc to 1.8.0&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalajslib&lt;/code&gt;: Added support for more &lt;code&gt;JsEnv&lt;/code&gt; providers&lt;/p&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;&lt;em&gt;If you get some issues (like &lt;code&gt;connect ECONNREFUSED&lt;/code&gt;, &lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/2204&#34; class=&#34;bare&#34;&gt;https://github.com/com-lihaoyi/mill/issues/2204&lt;/a&gt;) after the update, review your settings for &lt;code&gt;JsEnv&lt;/code&gt; providers.&lt;/em&gt;&lt;/p&gt; &#xA;       &lt;/div&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;scalanativelib&lt;/code&gt;: Support for incremental compilation since Scala Native 0.4.9&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;contrib.testng&lt;/code&gt;: The TestNG library is no longer provided transitively; you need to provide it explicitly&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;contrib.bloop&lt;/code&gt;: Fixed re-generation of bloop config dir; previously, it could happen, that there where no config files at all&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;BSP&lt;/code&gt;: implement &lt;code&gt;buildTarget/OutputPaths&lt;/code&gt; request&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various version bumps and internal improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/69?closed=1&#34;&gt;milestone 0.10.10&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.9…​0.10.10&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-9&#34;&gt;0.10.9 - 2022-11-10&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.8:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hardened Maven and Ivy artifact handling to prevent path-traversal attacks&lt;/strong&gt; (see &lt;a href=&#34;https://github.com/advisories/GHSA-wv7w-rj2x-556x&#34;&gt;CVE-2022-37866&lt;/a&gt;), also updated coursier dependency to a non-vulnerable version&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Decoupled &lt;code&gt;mill-moduledefs&lt;/code&gt; module into a &lt;a href=&#34;https://github.com/com-lihaoyi/mill-moduledefs&#34;&gt;separate project&lt;/a&gt;, to better suite compiler plugin packaging and improve support for various Scala versions&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Applied more workarounds to coursier concurrency issues to make parallel builds more robust&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added support for newer Scala versions in &lt;code&gt;GenIdea&lt;/code&gt; (2.2 and 2.3)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed an issue where &lt;code&gt;PublishModule&lt;/code&gt; dropped module dependencies when mixed-in after other trait which overrode &lt;code&gt;moduleDeps&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;new &lt;code&gt;JMH&lt;/code&gt; contrib plugin&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Lots of internal improvements and dependency updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/68?closed=1&#34;&gt;milestone 0.10.9&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.8…​0.10.9&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-8&#34;&gt;0.10.8 - 2022-10-10&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.7:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improvements for better Scala 3.2 support&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed non-working default commands in cross modules&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;CoursierModule&lt;/code&gt;: mitigate more download failure situations (e.g. checksum failures)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;PublishModule&lt;/code&gt;: properly show &lt;code&gt;gpg&lt;/code&gt; output in server mode&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;BSP&lt;/code&gt;: Better compiler message handling (&lt;code&gt;logMessage&lt;/code&gt; instead of &lt;code&gt;showMessage&lt;/code&gt;) and support for diagnostic code&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScoverageModule&lt;/code&gt;: Support for Scoverage 2.x&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New contrib module &lt;code&gt;GitlabPublishModule&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various internal improvements and version bumps&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Documentation improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/67?closed=1&#34;&gt;milestone 0.10.8&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.7…​0.10.8&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-7&#34;&gt;0.10.7 - 2022-08-24&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.6:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Don’t print unwanted debug messages from zinc&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/66?closed=1&#34;&gt;milestone 0.10.7&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.6…​0.10.7&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-6&#34;&gt;0.10.6 - 2022-08-24&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.5:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;PathRef&lt;/code&gt;s sigs are now more reproducible and independent of the used filesystem&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;JavaModule&lt;/code&gt; can now use a non-local Java Compiler to support all options&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;Logger&lt;/code&gt;: new &lt;code&gt;debugEnabled&lt;/code&gt; to detect whether debug logging is enabled&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;testkit&lt;/code&gt; module, to use &lt;code&gt;TestEvaluator&lt;/code&gt; in external projects&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed reading of &lt;code&gt;.mill-jvm-opts&lt;/code&gt; in server mode&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;BSP: Automatic SemanticDB enablement to improve Metals support&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;mill.twirllib.TwirlModule&lt;/code&gt; - new mandatory target &lt;code&gt;twirlScalaVersion&lt;/code&gt; to configure the Scala version used by Twirl compiler, and support for newer versions&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Lots of documentation updates and additions&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Upgraded to Zinc 1.7.1 and various other dependency updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/64?closed=1&#34;&gt;milestone 0.10.6&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.5…​0.10.6&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-5&#34;&gt;0.10.5 - 2022-07-01&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.4:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;init&lt;/code&gt; command, to create new Mill projects from Gitter8 (g8) templates&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;PathRef&lt;/code&gt; now gracefully ignores socket files. This also fixes an annoying issue when Mill was previously ran in a source directory.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed a bug with using &lt;code&gt;mill --repl&lt;/code&gt; without any further arguments, which was introduced in Mill 0.10.2 and prevented proper no-server mode&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed the &lt;code&gt;visualize&lt;/code&gt; command which wasn’t working on some newer JREs&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved Mill server support for Windows 11 and some Windows Server versions&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule&lt;/code&gt; / &lt;code&gt;ZincWorkerModule&lt;/code&gt;: Fixed incremental compilation issue with JRE 17 (and probably others)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;TestModule&lt;/code&gt; now better supports JUnit5 test suites&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaJsModule&lt;/code&gt;: internal improvements to the stability of the Scala.js linker&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaNativeModule&lt;/code&gt;: Added support for &lt;code&gt;nativeEmbedResources&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;BSP&lt;/code&gt;: improved handling of the &lt;code&gt;mill-build&lt;/code&gt; module when the BSP client is IntelliJ IDEA&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Documentation updates and link fixes&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various dependency updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/63?closed=1&#34;&gt;milestone 0.10.5&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.4…​0.10.5&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-4&#34;&gt;0.10.4 - 2022-05-06&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.3:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Switched from ipcsocket to junixsocket library to enhance the robustness of Mill client server communication. This should greatly improve the user experience on Windows.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Internal improvements and better support of GraalVM&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;The Mill Documentation site has now built-in search functionality&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaJsModule&lt;/code&gt;: New targets &lt;code&gt;fastLinkJS&lt;/code&gt; and &lt;code&gt;fullLinkJS&lt;/code&gt; and deprecated &lt;code&gt;fastOpt&lt;/code&gt; and &lt;code&gt;fullOpt&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaJsModule&lt;/code&gt;: Support for &lt;code&gt;ModuleSplitStyle&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;BSP&lt;/code&gt;: Updated to protocol version 2.1.0-M1, added support for test framework names and support for the JVM extension&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;GenIdea&lt;/code&gt;: More consistent ordering of libraries and dependent modules and support for Scala 3.1 language level&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;Bloop&lt;/code&gt;: Added support for runtime dependencies&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Enhanced test suite to cover Mill client server scenarios&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various dependency updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/62?closed=1&#34;&gt;milestone 0.10.4&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.3…​0.10.4&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-3&#34;&gt;0.10.3 - 2022-04-11&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.2:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed &lt;code&gt;import $file&lt;/code&gt; for files with hyphens and other symbols in its name&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed an issues with truncated output just before Mill finishes&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill commands now support arguments of type &lt;code&gt;Task[T]&lt;/code&gt;, which can improve writing re-usable commands, especially, they can be called from other tasks more easily&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;JavaModule&lt;/code&gt;: Improved correctness and performance of &lt;code&gt;compileClasspath&lt;/code&gt; and &lt;code&gt;bspCompileClasspath&lt;/code&gt; targets. This fixes an issue with BSP for large projects. Also, compile-time dependencies no longer sneak into the classpath transitively.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;JavaModule&lt;/code&gt;: Added &lt;code&gt;docJarUseArgsFile&lt;/code&gt; target and fix issue with Windows command length restrictions in &lt;code&gt;docJar&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;BSP&lt;/code&gt; and &lt;code&gt;Bloop&lt;/code&gt;: Better detect foreign modules&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various internal API refinements and improvements&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Reorganized integration test suite and build setup&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/61?closed=1&#34;&gt;milestone 0.10.3&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.2…​0.10.3&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-2&#34;&gt;0.10.2 - 2022-03-18&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.1:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill workers can now implement &lt;code&gt;AutoCloseable&lt;/code&gt; to properly free resources&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule&lt;/code&gt;: Fixed &lt;code&gt;repl&lt;/code&gt; start&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;CoursierModule&lt;/code&gt;: Fixed concurrent download issues with coursier (we detect and retry)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;MainModule&lt;/code&gt;: Fixed potential match error with &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;showNamed&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Restructured contrib module documentation&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Internal improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/60?closed=1&#34;&gt;milestone 0.10.2&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.1…​0.10.2&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-1&#34;&gt;0.10.1 - 2022-03-08&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.0:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;MillClienMain&lt;/code&gt; can now act as universal main to start mill with or without a server process&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved &lt;code&gt;show&lt;/code&gt; command that always returns valid JSON&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added &lt;code&gt;showNamed&lt;/code&gt; command that includes the task names in the output&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Implemented more granular cache invalidation which keeps more caches intact when you split your build setup over multiple &lt;code&gt;.sc&lt;/code&gt; files with &lt;code&gt;import $file&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;The local &lt;code&gt;.mill-jvm-opts&lt;/code&gt; file is no longer restricted to &lt;code&gt;-X&lt;/code&gt; options&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;CoursierModule&lt;/code&gt;: Added &lt;code&gt;coursierCacheCustomizer&lt;/code&gt; to support a &lt;code&gt;FileCache&lt;/code&gt; customizers&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;JavaModule&lt;/code&gt;: the &lt;code&gt;docJar&lt;/code&gt; target no longer includes hidden files&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule&lt;/code&gt;: Updated to latest zinc version&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule&lt;/code&gt;: Reworked scalac plugins handling for the better and to support Scala 3&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaNativeModule&lt;/code&gt;: fixed &lt;code&gt;Dep.withDottyCompat&lt;/code&gt; behavior&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaJSModule&lt;/code&gt;: support for linking multiple modules&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalafmtModule&lt;/code&gt;: Support for newer Scalafmt versions&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Tool chain: Update to Mill 0.10.0&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Tool chain: we no longer create files outside the mill project directory (e.g. &lt;code&gt;~/mill-release&lt;/code&gt; is now under &lt;code&gt;target/mill-release&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various dependency updates&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Lots of internal improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/59?closed=1&#34;&gt;milestone 0.10.1&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.0…​0.10.1&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-0&#34;&gt;0.10.0 - 2022-01-14&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.0-M5:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Changed structure of &lt;code&gt;out&lt;/code&gt; directory, &lt;code&gt;out/foo/dest&lt;/code&gt; is now &lt;code&gt;out/foo.dest&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed issues with loading of predef scripts&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;--watch&lt;/code&gt; now supports manual re-runs by pressing enter&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved subprocess handling&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Published poms can now contain properties and &lt;code&gt;versionScheme&lt;/code&gt; information&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved Scala.js support, including more target configuration options and support for Node 17&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved Scala Native for version &amp;gt; 0.4.2 and support Scala 3&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Internal improvements, fixes and dependency version updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/57?closed=1&#34;&gt;milestone 0.10.0&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.0-M5…​0.10.0&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-0-M5&#34;&gt;0.10.0-M5 - 2021-12-18&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This release breaks binary compatibility for external plugins.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.0-M4:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed Log4Shell security vulnerability in &lt;code&gt;ZincWorkerModule&lt;/code&gt; (CVE-2021-44228)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Factored out the testrunner into a new module, which also fixes some potential classloader issues when executing tests (e.g. with JNA)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Removed the limitation of max 22 inputs for tasks&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;--watched&lt;/code&gt; commands can now re-run when pressing enter-key&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;task and arguments of commands can now have hyphens in their name&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Reworked and decluttered the out-folder structure&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;prepareOffline&lt;/code&gt; now has a &lt;code&gt;all&lt;/code&gt; flag to control if all or only some dependency should be prefetched&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Made caching more effective for targets overridden in stackable-traits&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Further BSP improvements, esp. for Metals and Scala 3&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Lots of other internal improvements and fixes&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various dependency updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/55?closed=1&#34;&gt;milestone 0.10.0-M5&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.0-M4…​main&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-0-M4&#34;&gt;0.10.0-M4 - 2021-11-08&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.0-M3:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;BSP support rework and overhaul of built-in BSP server&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;GenIdea: failures when inspecting and resolving the build are not properly reported&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Coursier: we now implemented a workaround to tackle concurrent downloads issues&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;+&lt;/code&gt; separator to provide multiple targets (with parameters) via cmdline&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;--import&lt;/code&gt; cmdline option to run ad-hoc plugins without editing of &lt;code&gt;build.sc&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;T.ctx().workspace&lt;/code&gt; API to access the project root directory&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various internal improvements and bug fixes&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various refactorings and cleanups&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/54?closed=1&#34;&gt;milestone 0.10.0-M4&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.0-M3…​0.10.0-M4&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-0-M3&#34;&gt;0.10.0-M3 - 2021-09-29&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This is a milestone release. This release breaks binary compatibility for external plugins build for mill 0.9.x. The API is suspected to change before a 0.10.0 releae.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.10.0-M2:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule with PublishModule&lt;/code&gt;: the &lt;code&gt;scala-library&lt;/code&gt; artifact is now always part of the dependencies in published `pom.xml`s and `ivy.xml`s&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;JavaModule.mandatoryIvyDeps&lt;/code&gt; target to provide essential dependencies like scala-library without forcing the user to call &lt;code&gt;super.ivyDeps&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaJSModule.scalaLibraryIvyDeps&lt;/code&gt; no longer contains the scala-js-library, but only the scala-library; if you need that, use &lt;code&gt;ScalaJSModule.mandatoryIvyDeps&lt;/code&gt; instead.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;import $ivy&lt;/code&gt; support &lt;code&gt;$MILL_BIN_PLATFORM&lt;/code&gt; variable and a new sort notations for external plugins&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;We fixed and enabled lots of tests to run on Windows&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Some generic targets like &lt;code&gt;plan&lt;/code&gt; or &lt;code&gt;path&lt;/code&gt; now also return their output&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;GenIdea&lt;/code&gt;: improved support for Scala 3 projects *&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/53?closed=1&#34;&gt;milestone 0.10.0-M3&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.10.0-M2…​0.10.0-M3&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-10-0-M2&#34;&gt;0.10.0-M2 - 2021-09-17&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;This is a early milestone release. This release breaks binary compatibility for external plugins build for mill 0.9.x. The API is suspected to change before a 0.10.0 releae.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.9.9:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Removed deprecated API&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule&lt;/code&gt;: added &lt;code&gt;mandatoryScalacOptions&lt;/code&gt; to avoid the common issue that users forget to include mandatory options when defining their own.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Renamed &lt;code&gt;toolsClasspath&lt;/code&gt; targets found in various modules to avoid hard to resolve clashes when mixing traits&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed and improved our test suite on Windows&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various fixes and improvements&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various dependency updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/51?closed=1&#34;&gt;milestone 0.10.0-M2&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.9…​0.10.0-M2&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-12&#34;&gt;0.9.12 - 2022-01-07&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;fixed parsing of command parameters in &lt;code&gt;show&lt;/code&gt; command&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;zinc worker: Updated log4j2 to 2.17.1&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/58?closed=1&#34;&gt;milestone 0.9.12&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.11…​0.9.12&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-11&#34;&gt;0.9.11 - 2021-12-15&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;zinc worker: Updated log4j2 to 2.16.0 to fix Log4Shell (CVE-2021-44228) vulnerability&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/56?closed=1&#34;&gt;milestone 0.9.11&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.10…​0.9.11&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-10&#34;&gt;0.9.10 - 2021-11-13&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Some feature backports from mill 0.10&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;+&lt;/code&gt; separator to provide multiple targets (with parameters) via cmdline&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;--import&lt;/code&gt; cmdline option to run ad-hoc plugins without editing of &lt;code&gt;build.sc&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;import $ivy&lt;/code&gt; support &lt;code&gt;$MILL_BIN_PLATFORM&lt;/code&gt; variable and a new sort notations for external plugins&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/52?closed=1&#34;&gt;milestone 0.9.10&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.9…​0.9.10&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-9&#34;&gt;0.9.9 - 2021-07-15&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.9.8:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;BSP: Fixed/improved source item for root project&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bloop: Prevent compilation during bloop config generation&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;GenIdea: Fix content path of root project (mill-build)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various version bumps&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/50?closed=1&#34;&gt;milestone 0.9.9&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.8…​0.9.9&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-8&#34;&gt;0.9.8 - 2021-05-27&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.9.7:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed some potential binary incompatibilities with external plugins (builds against older os-lib versions)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed location and configuration of mills home path (used for caching of build scripts)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Properly close jar resources - should fix issues in &lt;code&gt;assembly&lt;/code&gt;, esp. on Windows where open resources are locked&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;BSP: Repaired mills BSP server&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;playlib: Fixed issues with the play-contrib module and added support for Play 2.8&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;GenIdea: changed dir for generated mill modules to &lt;code&gt;.idea/mill_modules&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various version bumps, including Scala 2.13.5&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/49?closed=1&#34;&gt;milestone 0.9.8&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.7…​0.9.8&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-7&#34;&gt;0.9.7 - 2021-05-14&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;Changes since 0.9.6:&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule&lt;/code&gt;: Support for Scala 3&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;CoursierModule&lt;/code&gt;: Support customized dependency resolution (needed to work with ScalaFX)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;TestModule&lt;/code&gt;: Added new &lt;code&gt;testFramework&lt;/code&gt; target and only support one test framework. Deprecated &lt;code&gt;testFrameworks&lt;/code&gt; targets.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;TestModule&lt;/code&gt;: Added new convenience traits to configure popular test frameworks, e.g. &lt;code&gt;TestModule.Junit4&lt;/code&gt;, &lt;code&gt;TestModule.ScalaTest&lt;/code&gt;, &lt;code&gt;TestModule.Utest&lt;/code&gt; and many more&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;Bloop&lt;/code&gt;: Added support for foreign modules&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Better support for Windows environments&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various internal improvements, cleanups, and deprecations&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various dependencies updates&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Removed tut contrib module because of unmaintained/archived upstream dependency&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/48?closed=1&#34;&gt;milestone 0.9.7&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.6…​0.9.7&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-6&#34;&gt;0.9.6 - 2021-04-03&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;The mill project home and repository has been moved to &lt;a href=&#34;https://github.com/com-lihaoyi/mill&#34; class=&#34;bare&#34;&gt;https://github.com/com-lihaoyi/mill&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;repl&lt;/code&gt; and &lt;code&gt;console&lt;/code&gt; targets now support &lt;code&gt;forkArgs&lt;/code&gt; and &lt;code&gt;forkEnv&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for Scala 3 release candidates and new Scaladoc 3 tool&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for Scala.js on Scala 3&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Scala Native improvements&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Test runner now uses an args file to support running tests on Windows&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;GenIdea: better supports source jars, full config contributions and provided/runtime dependencies&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various dependency updates&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Documentation site reworked to support multiple release versions&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved CI setup to better test mill on Windows&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/47?closed=1&#34;&gt;milestone 0.9.6&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.5…​0.9.6&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-5&#34;&gt;0.9.5 - 2021-01-26&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Updated zinc to 1.4.4&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for Scala Native 0.4.0&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for Scala.js ESModule (including Bloop support)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Inner &lt;code&gt;Tests&lt;/code&gt; traits in modules like &lt;code&gt;JavaModule&lt;/code&gt;, &lt;code&gt;ScalaModule&lt;/code&gt; and others now have unique names (&lt;code&gt;JavaModuleTests&lt;/code&gt;, &lt;code&gt;ScalaTests&lt;/code&gt;, etc), to allow for easier customization&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various version bumps of dependencies&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;CI now runs all tests, it did miss some before&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/46?closed=1&#34;&gt;milestone 0.9.5&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.4…​0.9.5&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-4&#34;&gt;0.9.4 - 2020-12-21&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Implemented more BSP protocol commands and fixed some glitches with IntelliJ&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Stabilized CI builds&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various fixes and improvements&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Various version bumps&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/45?closed=1&#34;&gt;milestone 0.9.4&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.9.3…​0.9.4&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-9-3&#34;&gt;0.9.3 - 2020-11-26&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;(We also tagged &lt;code&gt;0.9.0&lt;/code&gt;, &lt;code&gt;0.9.1&lt;/code&gt;, and &lt;code&gt;0.9.2&lt;/code&gt;, but due to release difficulties, we ask you not to use them.)&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Replace the built in &lt;code&gt;@main&lt;/code&gt; method functionality with the &lt;a href=&#34;https://github.com/lihaoyi/mainargs&#34;&gt;MainArgs&lt;/a&gt; library&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Note that the MainArgs replacement has some backwards incompatibilities: Short flags like &lt;code&gt;-i&lt;/code&gt; can no longer be passed via &lt;code&gt;--i&lt;/code&gt;, the &lt;code&gt;@doc(&#34;&#34;)&lt;/code&gt; is now &lt;code&gt;@arg(doc = &#34;&#34;)&lt;/code&gt;, &lt;code&gt;Seq[T]&lt;/code&gt; parameters are now passed via repeated &lt;code&gt;--foo&lt;/code&gt; flags rather than comma-separated.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add the ability to relocate/shade files in &lt;code&gt;.assembly&lt;/code&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/947&#34;&gt;#947&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Twirl enhancements &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/952&#34;&gt;#952&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add &lt;code&gt;scalacPluginClasspath&lt;/code&gt; to Tests &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/956&#34;&gt;#956&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add &lt;code&gt;toMap&lt;/code&gt; methods to &lt;code&gt;BuildInfo&lt;/code&gt; &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/958&#34;&gt;#958&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump coursier to version 2.0.0 &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/973&#34;&gt;#973&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make BSP support a first-class citizen &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/969&#34;&gt;#969&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Omit the suffix in &lt;code&gt;artifactName&lt;/code&gt; in cross modules &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/953&#34;&gt;#953&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow test classes with constructor parameters &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/982&#34;&gt;#982&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Proguard contrib module &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/972&#34;&gt;#972&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support Scala.js useECMAScript2015 option and ModuleKind.ESModule &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/1004&#34;&gt;#1004&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support Scala.js incremental linking &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/1007&#34;&gt;#1007&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/44?closed=1&#34;&gt;milestone 0.9.3&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.8.0…​0.9.3&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-8-0&#34;&gt;0.8.0 - 2020-07-20&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump external dependencies: uPickle 1.2.0, Ammonite 2.2.0, etc.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Use default coursier repos (#931)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Work around relative paths issue on windows (#936)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support Scala.js versions &amp;gt;1.0.0 (#934)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/43?closed=1&#34;&gt;milestone 0.8.0&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.7.4…​0.8.0&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-7-4&#34;&gt;0.7.4 - 2020-07-03&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;new command line options &lt;code&gt;--repl&lt;/code&gt; and &lt;code&gt;--no-server&lt;/code&gt;, deprecated &lt;code&gt;--interactive&lt;/code&gt; option&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for Scala.js 1.1&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed missing source maps for Scala.js 1.0 and 1.1&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved BSP contrib module&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/42?closed=1&#34;&gt;milestone 0.7.4&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.7.3…​0.7.4&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-7-3&#34;&gt;0.7.3&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/41?closed=1&#34;&gt;milestone 0.7.3&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.7.2…​0.7.3&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-7-2&#34;&gt;0.7.2 - 2020-05-19&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/40?closed=1&#34;&gt;milestone 0.7.2&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.7.1…​0.7.2&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-7-1&#34;&gt;0.7.1 - 2020-05-17&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/39?closed=1&#34;&gt;milestone 0.7.1&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.7.0…​0.7.1&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-7-0&#34;&gt;0.7.0 - 2020-05-15&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Greatly improved parallel builds via &lt;code&gt;-j &amp;lt;n&amp;gt;&lt;/code&gt;/&lt;code&gt;--jobs &amp;lt;n&amp;gt;&lt;/code&gt;, with better scheduling and utilization of multiple cores&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;build.sc&lt;/code&gt; files now uses Scala 2.13.2&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Avoid duplicate target resolution with &lt;code&gt;mill resolve __&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add ability to pass GPG arguments to publish via &lt;code&gt;--gpgArgs&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;-w&lt;/code&gt;/&lt;code&gt;--watch&lt;/code&gt; now works for &lt;code&gt;T.source&lt;/code&gt; targets&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/37?closed=1&#34;&gt;milestone 0.7.0&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.6.3…​0.7.0&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-6-3&#34;&gt;0.6.3 - 2020-05-10&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Finished incomplete support to publish extra artifacts to IVY repositories (&lt;code&gt;publishLocal&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved Sonatype uploads&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;GenIdea&lt;/code&gt;: improvements for shared source dirs and skipped modules&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScoverageModule&lt;/code&gt;: Some refactorings to allow better customization&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;More robust classpath handling under Windows&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/38?closed=1&#34;&gt;milestone 0.6.3&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.6.2…​0.6.3&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-6-2&#34;&gt;0.6.2 - 2020-04-22&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill can now execute targets in parallel. This is experimental and need to be enabled with &lt;code&gt;--jobs &amp;lt;n&amp;gt;&lt;/code&gt; option.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;PublishModule&lt;/code&gt;: new &lt;code&gt;publishM2Local&lt;/code&gt; to publish into local Maven repositories&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;PublishModule&lt;/code&gt;: enhanced &lt;code&gt;publishLocal&lt;/code&gt; to specify to ivy repository location&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Windows: Fixed windows launcher and more robust classpath handling&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaNativeModule&lt;/code&gt;: improved compiling and linking support&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;new contrib module &lt;code&gt;VersionFile&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;Dependency&lt;/code&gt;: improved dependency update checker and expose results for programmatic use&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;ǹew contrib module &lt;code&gt;Bintray&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;ǹew contrib module &lt;code&gt;Artifactory&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;fixed testCached support in various modules&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;GenIdea&lt;/code&gt;: improvements, esp. related to source jars&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/36?closed=1&#34;&gt;milestone 0.6.2&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.6.1…​0.6.2&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-6-1&#34;&gt;0.6.1 - 2020-02-24&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bugfix: Mill now no longer leaks open files (version bump to uPickle 1.0.0)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;New &lt;code&gt;--version&lt;/code&gt; option&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added Support for Scala.js 1.0.0+&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added Support for Scala Native 0.4.0-M2&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;JavaModule&lt;/code&gt;: Enhanced &lt;code&gt;ivyDepsTree&lt;/code&gt; to optionally include compile-time and runtime-time dependencies&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;JavaModule&lt;/code&gt;: &lt;code&gt;allSourceFiles&lt;/code&gt; no longer include Scala sources&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;JavaModule&lt;/code&gt;: assembly supports configurable separator when merging resources&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScoverageModule&lt;/code&gt;: respect &lt;code&gt;unmanagedClasspath&lt;/code&gt;, added console reporter&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaPBModule&lt;/code&gt;: added more configuration options&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bloop: Fixed inconsistent working directory when executing tests via bloop (forces &lt;code&gt;-Duser.dir&lt;/code&gt; when generating bloop config)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/35?closed=1&#34;&gt;milestone 0.6.1&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.6.0…​0.6.1&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-6-0&#34;&gt;0.6.0 - 2020-01-20&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for METALS 0.8.0 in VSCode&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/34?closed=1&#34;&gt;milestone 0.6.0&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.5.9…​0.6.0&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-5-9&#34;&gt;0.5.9 - 2020-01-14&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump library versions again&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Alias &lt;code&gt;T.ctx.&lt;strong&gt;&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; functions to &lt;code&gt;T.&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;T.dest&lt;/code&gt;, &lt;code&gt;T.log&lt;/code&gt;, etc.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump Mill’s client-connect-to-server timeout, to reduce flakiness when the server is taking a moment to start up&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.5.7…​0.5.9&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Version 0.5.8 has some binary compatibility issues in requests-scala/geny and should not be used.&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-5-7-2019-12-28&#34;&gt;0.5.7 - 2019-12-28&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump library versions: Ammonite 2.0.1, uPickle 0.9.6, Scalatags 0.8.3, OS-Lib 0.6.2, Requests 0.4.7, Geny 0.4.2&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/33?closed=1&#34;&gt;milestone 0.5.7&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.5.5…​0.5.7&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-5-5&#34;&gt;0.5.5 / 0.5.6 - 2019-12-20&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;(we skipped version 0.5.4 as we had some publishing issues)&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump library versions: Ammonite 1.9.2, uPickle 0.9.0, Scalatags 0.8.2, OS-Lib 0.5.0, Requests 0.3.0, Geny 0.2.0, uTest 0.7.1&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed a long standing issue that output of sub-processes are only shown when &lt;code&gt;-i&lt;/code&gt; option was used. Now, you will always seen output of sub-process.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill now properly restarts it’s server after it’s version has changed&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;PublishModule&lt;/code&gt;: added ability to publish into non-staging repositories&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaPBModule&lt;/code&gt;: added extra include path option&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/32?closed=1&#34;&gt;milestone 0.5.5&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.5.3…​0.5.5&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-5-3&#34;&gt;0.5.3 - 2019-12-07&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;GenIdea/idea&lt;/code&gt;: improved support for generated sources and use/download sources in more cases&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;ScalaJS: improvements and support for ScalaJS 0.6.29+ and 1.0.1.RC1&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Introduced new &lt;code&gt;CoursierModule&lt;/code&gt; to use dependency management independent from a compiler&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScoverageModule&lt;/code&gt;: better handling of report directories&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaPBModule&lt;/code&gt;: more configuration options&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;various other fixes and improvements&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/31?closed=1&#34;&gt;milestone 0.5.3&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.5.2…​0.5.3&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-5-2&#34;&gt;0.5.2 - 2019-10-17&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;TestModule&lt;/code&gt;: new `testCached`target, which only re-runs tests after relevant changes&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;TestModule.test&lt;/code&gt;: fixed issue when stacktraces have no filename info&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;Dependency/updates&lt;/code&gt;: fixed issue with reading stale dependencies&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;GenIdea/idea&lt;/code&gt;: no longer shared output directories between mill and IntelliJ IDEA&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;support for Dotty &amp;gt;= 0.18.1&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed backwards compatibility of mill wrapper script&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill now support the Build Server Protocol 2.0 (BSP) and can act as a build server&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;bloop: removed semanticDB dependency&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Documentation updates&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/30?closed=1&#34;&gt;milestone 0.5.2&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.5.1…​0.5.2&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-5-1&#34;&gt;0.5.1 - 2019-09-05&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;GenIdea: Bug fixes&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;GenIdea: Support for module specific extensions (Facets) and additional config files&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add ability to define JAR manifests&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Dotty support: Updates and support for binary compiler bridges&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Ivy: improved API to create optional dependendies&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Interpolate &lt;code&gt;$MILL_VERSION&lt;/code&gt; in ivy imports&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Zinc: Fixed logger output&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Scoverage: Upgrade to Scoverage 1.4.0&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Flyway: Upgrade to Flyway 6.0.1&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bloop: Updated semanticDB version to 4.2.2&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Documentation updates&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improved robustness in release/deployment process&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;&lt;em&gt;For details refer to &lt;a href=&#34;https://github.com/com-lihaoyi/mill/milestone/29?closed=1&#34;&gt;milestone 0.5.1&lt;/a&gt; and the &lt;a href=&#34;https://github.com/com-lihaoyi/mill/compare/0.5.0…​0.5.1&#34;&gt;list of commits&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-5-0&#34;&gt;0.5.0 - 2019-08-08&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill now supports a &lt;code&gt;./mill&lt;/code&gt; &lt;a href=&#34;https://mill-build.com/#bootstrap-scripts-linuxos-x-only&#34;&gt;bootstrap script&lt;/a&gt;, allowing a project to pin the version of Mill it requires, as well as letting contributors use &lt;code&gt;./mill …​&lt;/code&gt; to begin development without needing to install Mill beforehand.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for a &lt;code&gt;.mill-version&lt;/code&gt; file or &lt;code&gt;MILL_VERSION&lt;/code&gt; environment variable for &lt;a href=&#34;https://mill-build.com/#overriding-mill-versions&#34;&gt;Overriding Mill Versions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fix scoverage: inherit repositories from outer project &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/645&#34;&gt;#645&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-4-2&#34;&gt;0.4.2 - 2019-06-30&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improvements to IntelliJ project generation &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/616&#34;&gt;#616&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow configuration of Scala.js&#39; JsEnv &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/628&#34;&gt;#628&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-4-1&#34;&gt;0.4.1 - 2019-06-13&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixes for scala native test suites without test frameworks &lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/627&#34;&gt;#627&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fix publication of artifacts by increasing sonatype timeouts&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bug fixes for Scoverage integration &lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/623&#34;&gt;#623&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-4-0&#34;&gt;0.4.0 - 2019-05-20&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Publish &lt;code&gt;compileIvyDeps&lt;/code&gt; as provided scope (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/535&#34;&gt;535&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added contrib modules to integrate &lt;a href=&#34;https://mill-build.com/page/contrib-modules.html#bloop&#34;&gt;Bloop&lt;/a&gt;, &lt;a href=&#34;https://mill-build.com/page/contrib-modules.html#flyway&#34;&gt;Flyway&lt;/a&gt;, &lt;a href=&#34;https://mill-build.com/page/contrib-modules.html#play-framework&#34;&gt;Play Framework&lt;/a&gt;, &lt;a href=&#34;https://mill-build.com/page/contrib-modules.html#scoverage&#34;&gt;Scoverage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow configuration of GPG key names when publishing (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/530&#34;&gt;530&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump Ammonite version to 1.6.7, making &lt;a href=&#34;https://github.com/lihaoyi/requests-scala&#34;&gt;Requests-Scala&lt;/a&gt; available to use in your &lt;code&gt;build.sc&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for Scala 2.13.0-RC2&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;ScalaFmt support now uses the version specified in &lt;code&gt;.scalafmt.conf&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-3-6&#34;&gt;0.3.6 - 2019-01-17&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Started to splitting out mill.api from mill.core&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Avoid unnecessary dependency downloading by providing fetches per cache policy&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added detailed dependency download progress to the progress ticker&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed internal code generator to support large projects&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Zinc worker: compiler bridge can be either pre-compiled or on-demand-compiled&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Zinc worker: configurable scala library/compiler jar discovery&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Zinc worker: configurable compiler cache supporting parallelism&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Version bumps: ammonite 1.6.0, scala 2.12.8, zinc 1.2.5&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill now by default fails fast, so in case a build tasks fails, it exits immediately&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added new &lt;code&gt;-k&lt;/code&gt;/&lt;code&gt;--keep-going&lt;/code&gt; commandline option to disable fail fast behaviour and continue build as long as possible in case of a failure&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-3-5&#34;&gt;0.3.5 - 2018-11-18&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump uPickle to 0.7.1&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-3-4&#34;&gt;0.3.4 - 2018-11-06&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill is now bundled with &lt;a href=&#34;https://github.com/lihaoyi/os-lib&#34;&gt;OS-Lib&lt;/a&gt;, providing a simpler way of dealing with filesystem APIs and subprocesses&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-3-3&#34;&gt;0.3.3 - 2018-11-02&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added new &lt;code&gt;debug&lt;/code&gt; method to context logger, to log additional debug info into the task specific output dir (&lt;code&gt;out/&amp;lt;task&amp;gt;/log&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added &lt;code&gt;--debug&lt;/code&gt; option to enable debug output to STDERR&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fix &lt;code&gt;ScalaModule#docJar&lt;/code&gt; task when Scala minor versions differ &lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/475&#34;&gt;475&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-3-2&#34;&gt;0.3.2 - 2018-10-19&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Automatically detect main class to make &lt;code&gt;ScalaModule#assembly&lt;/code&gt; self-executable&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-3-0&#34;&gt;0.3.0 - 2018-10-19&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bump Ammonite to 1.3.2, Fastparse to 2.0.4&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Sped up &lt;code&gt;ScalaModule#docJar&lt;/code&gt; task by about 10x, greatly speeding up publishing&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add a flag &lt;code&gt;JavaModule#skipIdea&lt;/code&gt; you can override to disable Intellij project generation &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/458&#34;&gt;#458&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow sub-domains when publishing &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/441&#34;&gt;#441&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-2-8&#34;&gt;0.2.8 - 2018-09-21&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;mill inspect&lt;/code&gt; now displays out the doc-comment documentation for a task.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Avoid shutdown hook failures in tests &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/422&#34;&gt;#422&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Ignore unreadable output files rather than crashing &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/423&#34;&gt;#423&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Don’t compile hidden files &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/428&#34;&gt;#428&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-2-7&#34;&gt;0.2.7 - 2018-08-27&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add &lt;code&gt;visualizePlan&lt;/code&gt; command&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Basic build-info plugin in &lt;code&gt;mill-contrib-buildinfo&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;ScalaPB integration in &lt;code&gt;mill-contrib-scalapblib&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixes for Twirl support, now in &lt;code&gt;mill-contrib-twirllib&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for building Dotty projects &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/397&#34;&gt;#397&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow customization of &lt;code&gt;run&lt;/code&gt;/&lt;code&gt;runBackground&lt;/code&gt; working directory via &lt;code&gt;forkWorkingDir&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Reduced executable size, improved incremental compilation in &lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/414&#34;&gt;#414&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-2-6&#34;&gt;0.2.6 - 2018-07-30&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improve incremental compilation to work with transitive module dependencies&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Speed up hot compilation performance by properly re-using classloaders&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Speed up compilation time of &lt;code&gt;build.sc&lt;/code&gt; files by removing duplicate macro generated routing code&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-2-5&#34;&gt;0.2.5 - 2018-07-22&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add &lt;code&gt;.runBackground&lt;/code&gt; and &lt;code&gt;.runMainBackground&lt;/code&gt; commands, to run something in the background without waiting for it to return. The process will keep running until it exits normally, or until the same &lt;code&gt;.runBackground&lt;/code&gt; command is run a second time to spawn a new version of the process. Can be used with &lt;code&gt;-w&lt;/code&gt; for auto-reloading of long-running servers.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mill-build.com/page/common-project-layouts.html#scala-native-modules&#34;&gt;Scala-Native support&lt;/a&gt;. Try it out!&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add &lt;code&gt;--disable-ticker&lt;/code&gt; to reduce spam in CI&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fix propagation of &lt;code&gt;--color&lt;/code&gt; flag&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-2-4&#34;&gt;0.2.4 - 2018-07-07&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fix resolution of &lt;code&gt;scala-{library,compiler,reflect}&lt;/code&gt; in case of conflict&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow configuration of &lt;code&gt;JavaModule&lt;/code&gt; and &lt;code&gt;ScalafmtModule&lt;/code&gt; scala workers&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow hyphens in module and task names&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fix publishing of ScalaJS modules to properly handle upstream ScalaJS dependencies&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-2-3&#34;&gt;0.2.3 - 2018-06-03&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Added the &lt;a href=&#34;https://mill-build.com/#visualize&#34;&gt;mill show visualize&lt;/a&gt; command, making it easy to visualize the relationships between various tasks and modules in your Mill build.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improve Intellij support (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/351&#34;&gt;351&lt;/a&gt;): better jump-to-definition for third-party libraries, no longer stomping over manual configuration, and better handling of &lt;code&gt;import $ivy&lt;/code&gt; in your build file.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for un-signed publishing and cases where your GPG key has no passphrase (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/346&#34;&gt;346&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Basic support for Twirl, Play Framework’s templating language (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/271&#34;&gt;271&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Better performance for streaming large amounts of stdout from Mill’s daemon process.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow configuration of append/exclude rules in &lt;code&gt;ScalaModule#assembly&lt;/code&gt; (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/309&#34;&gt;309&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-2-2&#34;&gt;0.2.2 - 2018-05-20&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Preserve caches when transitioning between &lt;code&gt;-i&lt;/code&gt;/&lt;code&gt;--interactive&lt;/code&gt; and the fast client/server mode (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/329&#34;&gt;329&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Keep Mill daemon running if you Ctrl-C during &lt;code&gt;-w&lt;/code&gt;/&lt;code&gt;--watch&lt;/code&gt; mode (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/327&#34;&gt;327&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow &lt;code&gt;mill version&lt;/code&gt; to run without a build file (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/328&#34;&gt;328&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make &lt;code&gt;docJar&lt;/code&gt; (and thus publishing) robust against scratch files in the source directories (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/334&#34;&gt;334&lt;/a&gt;) and work with Scala compiler options (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/336&#34;&gt;336&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow passing Ammonite command-line options to the &lt;code&gt;foo.repl&lt;/code&gt; command (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/333&#34;&gt;333&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Add &lt;code&gt;mill clean&lt;/code&gt; (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/315&#34;&gt;315&lt;/a&gt;) to easily delete the Mill build caches for specific targets&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Improve IntelliJ integration of `MavenModule`s/`SbtModule`s&#39; test folders (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/298&#34;&gt;298&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Avoid showing useless stack traces when &lt;code&gt;foo.test&lt;/code&gt; result-reporting fails or &lt;code&gt;foo.run&lt;/code&gt; fails&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;ScalaFmt support (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/308&#34;&gt;308&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Allow &lt;code&gt;ScalaModule#generatedSources&lt;/code&gt; to allow single files (previous you could only pass in directories)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-2-0&#34;&gt;0.2.0 - 2018-04-10&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Universal (combined batch/sh) script generation for launcher, assembly, and release (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/264&#34;&gt;#264&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Windows client/server improvements (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/262&#34;&gt;#262&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Windows repl support (note: MSYS2 subsystem/shell will be supported when jline3 v3.6.3 is released)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed Java 9 support&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Remove need for running &lt;code&gt;publishAll&lt;/code&gt; using &lt;code&gt;--interactive&lt;/code&gt; when on OSX and your GPG key has a passphrase&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;First-class support for `JavaModule`s&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Properly pass compiler plugins to Scaladoc (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/282&#34;&gt;#282&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for ivy version-pinning via &lt;code&gt;ivy&#34;…​&#34;.forceVersion()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for ivy excludes via &lt;code&gt;ivy&#34;…​&#34;.exclude()&lt;/code&gt; (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/pull/254&#34;&gt;#254&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make &lt;code&gt;ivyDepsTree&lt;/code&gt; properly handle transitive dependencies (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/226&#34;&gt;#226&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fix handling of &lt;code&gt;runtime&lt;/code&gt;-scoped ivy dependencies (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/173&#34;&gt;#173&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make environment variables available to Mill builds (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/257&#34;&gt;#257&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support ScalaCheck test runner (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/286&#34;&gt;#286&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for using Typelevel Scala (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/275&#34;&gt;#275&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;If a module depends on multiple submodules with different versions of an ivy dependency, only one version is resolved (&lt;a href=&#34;https://github.com/com-lihaoyi/mill/issues/273&#34;&gt;#273&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-7&#34;&gt;0.1.7 - 2018-03-26&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for non-interactive (client/server) mode on Windows.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;More fixes for Java 9&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bumped the Mill daemon timeout from 1 minute to 5 minutes of inactivity before it shuts down.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Avoid leaking Node.js subprocesses when running &lt;code&gt;ScalaJSModule&lt;/code&gt; tests&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Passing command-line arguments with spaces in them to tests no longer parses wrongly&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule#repositories&lt;/code&gt;, &lt;code&gt;scalacPluginIvyDeps&lt;/code&gt;, &lt;code&gt;scalacOptions&lt;/code&gt;, &lt;code&gt;javacOptions&lt;/code&gt; are now automatically propagated to &lt;code&gt;Tests&lt;/code&gt; modules&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaJSModule&lt;/code&gt; linking errors no longer show a useless stack trace&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule#docJar&lt;/code&gt; now properly uses the compileClasspath rather than runClasspath&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Bumped underlying Ammonite version to &lt;a href=&#34;http://ammonite.io/#1.1.0&#34;&gt;1.1.0&lt;/a&gt;, which provides the improved Windows and Java 9 support&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-6-2018-03-13&#34;&gt;0.1.6 - 2018-03-13&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixes for non-interactive (client/server) mode on Java 9&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Windows batch (.bat) generation for launcher, assembly, and release&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-5&#34;&gt;0.1.5 - 2018-03-13&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Introduced the &lt;code&gt;mill plan foo.bar&lt;/code&gt; command, which shows you what the execution plan of running the &lt;code&gt;foo.bar&lt;/code&gt; task looks like without actually evaluating it.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill now generates an &lt;code&gt;out/mill-profile.json&lt;/code&gt; file containing task-timings, to make it easier to see where your mill evaluation time is going&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Introduced &lt;code&gt;ScalaModule#ivyDepsTree&lt;/code&gt; command to show dependencies tree&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Rename &lt;code&gt;describe&lt;/code&gt; to &lt;code&gt;inspect&lt;/code&gt; for consistency with SBT&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;mill resolve&lt;/code&gt; now prints results sorted alphabetically&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Node.js configuration can be customised with &lt;code&gt;ScalaJSModule#nodeJSConfig&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Scala.js &lt;code&gt;fullOpt&lt;/code&gt; now uses Google Closure Compiler after generating the optimized Javascript output&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Scala.js now supports &lt;code&gt;NoModule&lt;/code&gt; and &lt;code&gt;CommonJSModule&lt;/code&gt; module kinds&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Include &lt;code&gt;compileIvyDeps&lt;/code&gt; when generating IntelliJ projects&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed invalid POM generation&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for Java 9 (and 10)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixes for Windows support&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed test classes discovery by skipping interfaces&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Include &#34;optional&#34; artifacts in dependency resolution if they exist&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;out/{module_name}&lt;/code&gt; now added as a content root in generated IntelliJ project&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-4&#34;&gt;0.1.4 - 2018-03-04&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Speed up Mill client initialization by another 50-100ms&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Speed up incremental `assembly`s in the common case where upstream dependencies do not change.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make &lt;code&gt;ScalaJSModule#run&lt;/code&gt; work with main-method discovery&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make &lt;code&gt;ScalaWorkerModule&lt;/code&gt; user-defineable, so you can use your own custom coursier resolvers when resolving Mill’s own jars&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Simplify definitions of &lt;code&gt;SCM&lt;/code&gt; strings&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Make the build REPL explicitly require &lt;code&gt;-i&lt;/code&gt;/&lt;code&gt;--interactive&lt;/code&gt; to run&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Log a message when Mill is initializing the Zinc compiler interface&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-3&#34;&gt;0.1.3 - 2018-02-26&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Greatly reduced the overhead of evaluating Mill tasks, with a warm already-cached &lt;code&gt;mill dev.launcher&lt;/code&gt; now taking ~450ms instead of ~1000ms&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill now saves compiled build files in &lt;code&gt;~/.mill/ammonite&lt;/code&gt;, which is configurable via the &lt;code&gt;--home&lt;/code&gt; CLI arg.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixed linking of multi-module Scala.js projects&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-2&#34;&gt;0.1.2 - 2018-02-25&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Mill now keeps a long-lived work-daemon around in between commands; this should improve performance of things like &lt;code&gt;compile&lt;/code&gt; which benefit from the warm JVM. You can use &lt;code&gt;-i&lt;/code&gt;/&lt;code&gt;--interactive&lt;/code&gt; for interactive consoles/REPLs and for running commands without the daemon&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Implemented the &lt;code&gt;ScalaModule#launcher&lt;/code&gt; target for easily creating command-line launchers you can run outside of Mill&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;&lt;code&gt;ScalaModule#docJar&lt;/code&gt; no longer fails if you don’t have &lt;code&gt;scala-compiler&lt;/code&gt; on classpath&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Support for multiple &lt;code&gt;testFrameworks&lt;/code&gt; in a test module.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-1&#34;&gt;0.1.1 - 2018-02-19&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Fixes for &lt;code&gt;foo.console&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Enable Ammonite REPL integration via &lt;code&gt;foo.repl&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;0-1-0&#34;&gt;0.1.0 - 2018-02-18&lt;/h4&gt; &#xA;    &lt;div class=&#34;ulist&#34;&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;First public release&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>bytedeco/javacv-examples</title>
    <updated>2023-09-17T01:58:54Z</updated>
    <id>tag:github.com,2023-09-17:/bytedeco/javacv-examples</id>
    <link href="https://github.com/bytedeco/javacv-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Examples of using JavaCV / OpenCV library on Java Virtual Machine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaCV-Examples&lt;/h1&gt; &#xA;&lt;p&gt;This project contains examples of using &lt;a href=&#34;https://github.com/bytedeco/javacv&#34;&gt;JavaCV&lt;/a&gt; and other library wrappers from &lt;a href=&#34;https://github.com/bytedeco/javacpp-presets&#34;&gt;javacpp-presets&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bytedeco/javacv-examples/master/OpenCV_Cookbook&#34;&gt;OpenCV_Cookbook&lt;/a&gt; - JavaCV versions of the examples presented in the Robert Laganière&#39;s book &#34;OpenCV Computer Vision Application Programming Cookbook&#34;. The original examples in the Cookbook are in C++, here they are translated to use JavaCV API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bytedeco/javacv-examples/master/flandmark-demo&#34;&gt;flandmark-demo&lt;/a&gt; - example of using &lt;a href=&#34;https://github.com/uricamic/flandmark&#34;&gt;flandmark&lt;/a&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bytedeco/javacv-examples/master/FlyCapture2-demo&#34;&gt;FlyCapture2-demo&lt;/a&gt; - examples of using &lt;a href=&#34;https://github.com/bytedeco/javacpp-presets/tree/master/flycapture&#34;&gt;JVM wrapper&lt;/a&gt; for Flir/Point Grey &lt;a href=&#34;https://www.ptgrey.com/flycapture-sdk&#34;&gt;FlyCapture SDK&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bytedeco/javacv-examples/master/Spinnaker-demo&#34;&gt;Spinnaker-demo&lt;/a&gt; - examples of using &lt;a href=&#34;https://github.com/bytedeco/javacpp-presets/tree/master/spinnaker&#34;&gt;JVM wrapper&lt;/a&gt; for Flir/Point Grey &lt;a href=&#34;https://www.ptgrey.com/spinnaker-sdk&#34;&gt;Spinnaker SDK&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>garyaiki/Scala-Algorithms</title>
    <updated>2023-09-17T01:58:54Z</updated>
    <id>tag:github.com,2023-09-17:/garyaiki/Scala-Algorithms</id>
    <link href="https://github.com/garyaiki/Scala-Algorithms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scala translations of Robert Sedgewick&#39;s Java Algorthms&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scala-Algorithms&lt;/h1&gt; &#xA;&lt;p&gt;Java to Scala translations of around 50 algorithms from Robert Sedgewick and Kevin Wayne&#39;s website for their book &lt;em&gt;Algorithms&lt;/em&gt;. I chose those Robert Sedgewick elaborated on in his video lectures in Coursera courses &lt;a href=&#34;https://www.coursera.org/course/algs4partI&#34;&gt;Algorithms, Part I&lt;/a&gt; and &lt;a href=&#34;https://www.coursera.org/course/algs4partII&#34;&gt;Algorithms, Part II&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;The courses started soon after Martin Ordersky&#39;s courses &lt;a href=&#34;https://class.coursera.org/progfun-003&#34;&gt;Functional Programming Principles in Scala&lt;/a&gt; and &lt;a href=&#34;https://class.coursera.org/reactive-001&#34;&gt;Principles of Reactive Programming&lt;/a&gt; ended. On the &lt;em&gt;Algorithms I&lt;/em&gt; forums, I asked if there were Scala versions but there was no reply. I thought writing them myself would build a repertoire in Scala and algorithms and be useful to other Scala programmers.&lt;/p&gt; &#xA;&lt;h2&gt;Rule of least expressiveness&lt;/h2&gt; &#xA;&lt;p&gt;Scala combines Object Oriented and Functional Programming which gives you a bigger toolbox but makes you make choices other languages make for you. Peter Van Roy in &lt;a href=&#34;http://www.info.ucl.ac.be/~pvr/book.html&#34;&gt;Concepts, Techniques, and Models&lt;/a&gt; says: &lt;em&gt;each component should be programmed in its &#34;natural model&#34;. Using a less expressive model would give a more complex program and using a more expressive model would not give a simpler program but would make reasoning about it harder.&lt;/em&gt; So instead of trying to turn all tricky imperative code into pure functions, I left in vars, nulls, and side effects when getting rid of them would break or obscure equivalence to the originals.&lt;/p&gt; &#xA;&lt;p&gt;Too many Scala examples are either deceptively Java-like or cryptically concise. I tried to write useful idiomatic Scala without vexing Java programmers.&lt;/p&gt; &#xA;&lt;h2&gt;Algorithms in Scala and Java side by side&lt;/h2&gt; &#xA;&lt;p&gt;Java code written by Robert Sedgewick and Kevin Wayne is at &lt;a href=&#34;http://algs4.cs.princeton.edu/code/&#34;&gt;Java Algorithms and Clients&lt;/a&gt;, Scala translations have the same class names but with &lt;code&gt;.scala&lt;/code&gt; extensions. I followed their api so most methods have the same name but I made adjustments to follow Scala idioms.&lt;/p&gt; &#xA;&lt;p&gt;Scala code is in &lt;a href=&#34;https://github.com/garyaiki/Scala-Algorithms/tree/master/src/main/scala/org/gs&#34;&gt;src/main/scala/org/gs/&lt;/a&gt; choose a package then open a source file, for example &lt;a href=&#34;https://github.com/garyaiki/Scala-Algorithms/raw/master/src/main/scala/org/gs/digraph/AcyclicSP.scala&#34;&gt;AcyclicSP&lt;/a&gt;, on the first line is a link to Sedgewick and Wayne&#39;s code &lt;code&gt;/** @see&lt;/code&gt; &lt;a href=&#34;http://algs4.cs.princeton.edu/44sp/AcyclicSP.java.html&#34;&gt;http://algs4.cs.princeton.edu/44sp/AcyclicSP.java.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Common Scala idioms&lt;/h2&gt; &#xA;&lt;p&gt;The class definition is also the primary constructor&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class AcyclicSP(g: EdgeWeightedDigraph, s: Int) {...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Arrays and collections can be initalized when declared&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;private val _distTo = Array.fill[Double](g.V)(Double.PositiveInfinity)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Functions can be nested and can use variables defined in outer scopes. &lt;code&gt;Option&lt;/code&gt; is preferred to &lt;code&gt;null&lt;/code&gt;. Tail recursion is preferred to &lt;code&gt;while&lt;/code&gt; loops and &lt;code&gt;for&lt;/code&gt; loops that call &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; or &lt;code&gt;return&lt;/code&gt;. Pattern matching is preferred to complicated &lt;code&gt;if else&lt;/code&gt; conditions and where &lt;code&gt;Option&lt;/code&gt; values are extracted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/** nested tail recursive function that pattern matches Optional edges */&#xA;      @tailrec&#xA;      def loop(e: DirectedEdge) {&#xA;        e +=: path&#xA;        edgeTo(e.from) match {&#xA;          case None =&amp;gt;&#xA;          case Some(x) =&amp;gt; loop(x)&#xA;        }&#xA;      }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Arrays can be generic, &lt;code&gt;scala.reflect.ClassTag&lt;/code&gt; recovers type information at runtime. Ordering and comparison can also be generic and be passed implicitly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class IndexMinPQ[A: ClassTag](nMax: Int)(implicit ord: Ordering[A]) extends IndexPriorityQueue[A](nMax) {&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Immutable variables are preferred to mutable. Mutable class variables, declared as &lt;code&gt;.var&lt;/code&gt;, are usually turned into &lt;code&gt;.val&lt;/code&gt; or made private or protected. Public methods that return a collection, usually, return &lt;code&gt;List&lt;/code&gt;, which is recursive, rather than &lt;code&gt;Iterator&lt;/code&gt;, which is imperative&lt;/p&gt; &#xA;&lt;h2&gt;Scala and SBT setup&lt;/h2&gt; &#xA;&lt;p&gt;This uses Scala 2.10.3 &lt;a href=&#34;http://www.scala-lang.org/download/2.10.3.html&#34;&gt;download&lt;/a&gt; and &lt;a href=&#34;http://www.scala-sbt.org/0.13.1/docs/index.html&#34;&gt;SBT&lt;/a&gt; version 0.13.1 &lt;a href=&#34;http://www.scala-sbt.org/0.13.1/docs/Getting-Started/Setup.html#installing-sbt&#34;&gt;install&lt;/a&gt;, then add paths&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export SCALA_HOME=&#34;/Users/.../scala-2.10.3&#34;&#xA;export SBT_HOME=&#34;/Users/.../sbt&#34;&#xA;export PATH=...:$SCALA_HOME/bin::$SBT_HOME/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You don&#39;t need to launch Scala separately but to see if it is installed correctly you can launch it in a Terminal window in any directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Last login: Fri Jul 25 08:25:16 on console&#xA;...:~ ...$ scala&#xA;Welcome to Scala version 2.10.3 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_65).&#xA;Type in expressions to have them evaluated.&#xA;Type :help for more information.&#xA;&#xA;scala&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Quit Scala &lt;code&gt;scala&amp;gt; :q&lt;/code&gt; Then navigate to the downloaded project and start SBT &lt;strong&gt;giving it extra memory&lt;/strong&gt; so it can run tests on large datafiles.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;...:Scala-Algorithms ...$ sbt -mem 2048&#xA;Loading .../sbt/bin/sbt-launch-lib.bash&#xA;[info] Loading project definition from .../git/scala-algorthms/Scala-Algorithms/project&#xA;[info] Set current project to Scala-Algorithms (in build file:.../git/scala-algorthms/Scala-Algorithms/)&#xA;&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;##ScalaTest&lt;/p&gt; &#xA;&lt;p&gt;Usage examples are found in the ScalaTests.&lt;/p&gt; &#xA;&lt;p&gt;There are &lt;em&gt;a lot&lt;/em&gt; of tests, this was a great help in keeping the code working as I refactored. &lt;a href=&#34;http://www.scalatest.org&#34;&gt;ScalaTest&lt;/a&gt; comes in several styles. I chose &lt;a href=&#34;http://www.scalatest.org/user_guide/selecting_a_style&#34;&gt;FlatSpec&lt;/a&gt;, it creates &lt;a href=&#34;http://dannorth.net/introducing-bdd/&#34;&gt;BDD&lt;/a&gt; test reports that show non-coders what parts of a specification are working, unlike other BDD frameworks I&#39;ve tried, these are almost as easy to write as JUnit tests. Finding descriptive test names is the only extra work.&lt;/p&gt; &#xA;&lt;p&gt;To run tests, from the sbt prompt&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; test&#xA;[info] Compiling 55 Scala sources to .../git/scala-algorthms/Scala-Algorithms/target/scala-2.10/classes...&#xA;[info] Compiling 56 Scala sources to .../git/scala-algorthms/Scala-Algorithms/target/scala-2.10/test-classes...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;when tests complete there is a long BDD style report. Passes are green failures are red and ignored is orange (Github doesn&#39;t apply CSS in markdown, so no green in the Readme)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;...&#xA;[info] PrimMSTSuite:&#xA;[info] a PrimMST&#xA;[info] - should build from an EdgeWeightedGraph&#xA;[info] - should calulate total weight of edges in tinyEWG MST&#xA;[info] - should find expected edges in a MST&#xA;[info] - should be acyclic&#xA;[info] - should find when it has a spanning forest&#xA;[info] - should validate a minimal spanning forest&#xA;[info] - should calulate total edge weight of mediumEWG MST&#xA;[info] - should calulate total edge weight of largeEWG MST&#xA;[info] SymbolGraphSuite:&#xA;[info] a SymbolGraph&#xA;[info] - should find vertices as keys and routes&#xA;[info] - should find movies and their actors as keys and adjacencies&#xA;[info] - should find actors and their movies as keys and adjacencies&#xA;[info] ScalaTest&#xA;[info] Run completed in 1 minute, 26 seconds.&#xA;[info] Total number of tests run: 164&#xA;[info] Suites: completed 42, aborted 0&#xA;[info] Tests: succeeded 164, failed 0, canceled 0, ignored 1, pending 0&#xA;[info] All tests passed.&#xA;[info] Passed: Total 164, Failed 0, Errors 0, Passed 164, Ignored 1&#xA;[success] Total time: 87 s, completed Jul 25, 2014 3:17:07 PM&#xA;&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To validate against test data and expected results on the book&#39;s website, many tests read data files from it. Downloading them takes most of the test&#39;s time. A few tests are run on megabyte datafiles and these take most of the cpu time. The large datafile test for LazyPrimMST is ignored because it takes triple the time of all other tests combined. Change &lt;code&gt;ignore&lt;/code&gt; to &lt;code&gt;it&lt;/code&gt; in &lt;code&gt;.../git/scala-algorthms/Scala-Algorithms/src/test/scala/org/gs/digraph/LazyPrimMSTSuite.scala&lt;/code&gt; to run it. Its slowness should be taken as advice to use PrimMST instead.&lt;/p&gt; &#xA;&lt;p&gt;Test files are in &lt;a href=&#34;https://github.com/garyaiki/Scala-Algorithms/tree/master/src/test/scala/org/gs&#34;&gt;src/test/scala/org/gs/&lt;/a&gt; and append &#34;Suite&#34; to the name of the class under test.&lt;/p&gt; &#xA;&lt;h2&gt;Scaladoc&lt;/h2&gt; &#xA;&lt;p&gt;To generate scaladoc, from the sbt prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; doc&#xA;[info] Main Scala API documentation to .../git/scala-algorthms/Scala-Algorithms/target/scala-2.10/api...&#xA;model contains 74 documentable templates&#xA;[info] Main Scala API documentation successful.&#xA;[success] Total time: 8 s, completed Jul 25, 2014 2:26:57 PM&#xA;&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then open &lt;code&gt;.../git/scala-algorthms/Scala-Algorithms/target/scala-2.10/api/index.html&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Basic usage is shown on package pages.&lt;/p&gt; &#xA;&lt;p&gt;Comments are terse partly because Scaladoc is by convention more compact than Javadoc and because this is a translation of well commented Java code. Scaladocs do show api differences to Java. &lt;a href=&#34;http://algs4.cs.princeton.edu/home/&#34;&gt;Algorithms, 4th Edition&lt;/a&gt; describes each algorithm.&lt;/p&gt; &#xA;&lt;p&gt;###License and Copyright Java code is Copyright © 2002–2014 Robert Sedgewick and Kevin Wayne. All rights reserved. It has a GPLv3 license &lt;a href=&#34;http://algs4.cs.princeton.edu/faq/&#34;&gt;http://algs4.cs.princeton.edu/faq/&lt;/a&gt; Translation of software from one language to another falls under the copyright and license of the original authors. It adds a copyright for the translation which is subordinate to the original.&lt;/p&gt; &#xA;&lt;p&gt;Scala translation Copyright © 2014 Gary Struthers. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;###Disclaimer of Warranties. Gary Struthers disclaims to the fullest extent authorized by law any and all other warranties, whether express or implied, including, without limitation, any implied warranties of merchantability or fitness for a particular purpose.&lt;/p&gt;</summary>
  </entry>
</feed>