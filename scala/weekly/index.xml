<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-23T02:02:35Z</updated>
  <subtitle>Weekly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dhsu/euler-scala</title>
    <updated>2023-04-23T02:02:35Z</updated>
    <id>tag:github.com,2023-04-23:/dhsu/euler-scala</id>
    <link href="https://github.com/dhsu/euler-scala" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learning scala through project euler&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;euler-scala&lt;/h1&gt; &#xA;&lt;p&gt;Learning scala through project euler (&lt;a href=&#34;http://projecteuler.net&#34;&gt;http://projecteuler.net&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;With the exception of extending trait, &lt;code&gt;Problem&lt;/code&gt;, each problem implementation is self-contained. This is intentional because it forced the reimplementation of common mathematical functions such as &lt;code&gt;isPrime&lt;/code&gt; and &lt;code&gt;isPandigital&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Netflix/spark</title>
    <updated>2023-04-23T02:02:35Z</updated>
    <id>tag:github.com,2023-04-23:/Netflix/spark</id>
    <link href="https://github.com/Netflix/spark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Netflix branches of Apache Spark&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Spark&lt;/h1&gt; &#xA;&lt;p&gt;Spark is a fast and general cluster computing system for Big Data. It provides high-level APIs in Scala, Java, Python, and R, and an optimized engine that supports general computation graphs for data analysis. It also supports a rich set of higher-level tools including Spark SQL for SQL and DataFrames, MLlib for machine learning, GraphX for graph processing, and Spark Streaming for stream processing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://spark.apache.org/&#34;&gt;http://spark.apache.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Online Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the latest Spark documentation, including a programming guide, on the &lt;a href=&#34;http://spark.apache.org/documentation.html&#34;&gt;project web page&lt;/a&gt;. This README file only contains basic setup instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Building Spark&lt;/h2&gt; &#xA;&lt;p&gt;Spark is built using &lt;a href=&#34;http://maven.apache.org/&#34;&gt;Apache Maven&lt;/a&gt;. To build Spark and its example programs, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;build/mvn -DskipTests clean package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(You do not need to do this if you downloaded a pre-built package.)&lt;/p&gt; &#xA;&lt;p&gt;You can build Spark using more than one thread by using the -T option with Maven, see &lt;a href=&#34;https://cwiki.apache.org/confluence/display/MAVEN/Parallel+builds+in+Maven+3&#34;&gt;&#34;Parallel builds in Maven 3&#34;&lt;/a&gt;. More detailed documentation is available from the project site, at &lt;a href=&#34;http://spark.apache.org/docs/latest/building-spark.html&#34;&gt;&#34;Building Spark&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For general development tips, including info on developing Spark using an IDE, see &lt;a href=&#34;http://spark.apache.org/developer-tools.html&#34;&gt;&#34;Useful Developer Tools&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Interactive Scala Shell&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to start using Spark is through the Scala shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bin/spark-shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Try the following command, which should return 1000:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scala&amp;gt; sc.parallelize(1 to 1000).count()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Interactive Python Shell&lt;/h2&gt; &#xA;&lt;p&gt;Alternatively, if you prefer Python, you can use the Python shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bin/pyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run the following command, which should also return 1000:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; sc.parallelize(range(1000)).count()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example Programs&lt;/h2&gt; &#xA;&lt;p&gt;Spark also comes with several sample programs in the &lt;code&gt;examples&lt;/code&gt; directory. To run one of them, use &lt;code&gt;./bin/run-example &amp;lt;class&amp;gt; [params]&lt;/code&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bin/run-example SparkPi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will run the Pi example locally.&lt;/p&gt; &#xA;&lt;p&gt;You can set the MASTER environment variable when running examples to submit examples to a cluster. This can be a mesos:// or spark:// URL, &#34;yarn&#34; to run on YARN, and &#34;local&#34; to run locally with one thread, or &#34;local[N]&#34; to run locally with N threads. You can also use an abbreviated class name if the class is in the &lt;code&gt;examples&lt;/code&gt; package. For instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MASTER=spark://host:7077 ./bin/run-example SparkPi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Many of the example programs print usage help if no params are given.&lt;/p&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;Testing first requires &lt;a href=&#34;https://raw.githubusercontent.com/Netflix/spark/v2.4.4-dsv2/#building-spark&#34;&gt;building Spark&lt;/a&gt;. Once Spark is built, tests can be run using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./dev/run-tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please see the guidance on how to &lt;a href=&#34;http://spark.apache.org/developer-tools.html#individual-tests&#34;&gt;run tests for a module, or individual tests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There is also a Kubernetes integration test, see resource-managers/kubernetes/integration-tests/README.md&lt;/p&gt; &#xA;&lt;h2&gt;A Note About Hadoop Versions&lt;/h2&gt; &#xA;&lt;p&gt;Spark uses the Hadoop core library to talk to HDFS and other Hadoop-supported storage systems. Because the protocols have changed in different versions of Hadoop, you must build Spark against the same version that your cluster runs.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to the build documentation at &lt;a href=&#34;http://spark.apache.org/docs/latest/building-spark.html#specifying-the-hadoop-version-and-enabling-yarn&#34;&gt;&#34;Specifying the Hadoop Version and Enabling YARN&#34;&lt;/a&gt; for detailed guidance on building for a particular distribution of Hadoop, including building for particular Hive and Hive Thriftserver distributions.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;http://spark.apache.org/docs/latest/configuration.html&#34;&gt;Configuration Guide&lt;/a&gt; in the online documentation for an overview on how to configure Spark.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please review the &lt;a href=&#34;http://spark.apache.org/contributing.html&#34;&gt;Contribution to Spark guide&lt;/a&gt; for information on how to get started contributing to the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PurpleKingdomGames/tyrian</title>
    <updated>2023-04-23T02:02:35Z</updated>
    <id>tag:github.com,2023-04-23:/PurpleKingdomGames/tyrian</id>
    <link href="https://github.com/PurpleKingdomGames/tyrian" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Elm-inspired Scala UI library.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/tterb/atomic-design-ui/raw/master/LICENSEs&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/PurpleKingdomGames/tyrian?color=indigo&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PurpleKingdomGames/tyrian/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?color=purple&amp;amp;label=latest%20release&amp;amp;query=%24%5B0%5D.name&amp;amp;url=https%3A%2F%2Fapi.github.com%2Frepos%2FPurpleKingdomGames%2Ftyrian%2Ftags&#34; alt=&#34;Latest Tagged Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/b5CD47g&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/716435281208672356?color=blue&amp;amp;label=discord&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PurpleKingdomGames/tyrian/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/PurpleKingdomGames/tyrian/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Tyrian&lt;/h1&gt; &#xA;&lt;p&gt;An Elm-inspired Scala UI library for Scala 3.&lt;/p&gt; &#xA;&lt;p&gt;The main documentation site, complete with installation instructions, is available here: &lt;a href=&#34;https://tyrian.indigoengine.io/&#34;&gt;tyrian.indigoengine.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Local build instructions&lt;/h2&gt; &#xA;&lt;p&gt;Tyrian is fairly straight forward to build locally, run the following commands from your terminal in the project root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;sbt clean update compile test +publishLocal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is also a &lt;code&gt;build.sh&lt;/code&gt; script in the root folder, but that also builds the docs and example projects (based on the currently released version).&lt;/p&gt; &#xA;&lt;h3&gt;Nix dev-shell&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to have the environment set up without installing any dependencies globally (think &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, etc), you can give the &lt;a href=&#34;https://nixos.org/&#34;&gt;Nix&lt;/a&gt; development shells a try.&lt;/p&gt; &#xA;&lt;p&gt;To use this functionality, you are required to enable &lt;a href=&#34;https://nixos.wiki/wiki/Flakes#Installing_flakes&#34;&gt;flakes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ nix develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Locally you can run &lt;code&gt;nix develop&lt;/code&gt;. However, if you would like to use the same shell in a different repository, you can run the following command instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;nix develop github:PurpleKingdomGames/tyrian&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;What do you get?&lt;/h4&gt; &#xA;&lt;p&gt;The default dev shell ships with jdk, mill, sbt and coursier, ensuring all dependencies use the same JDK. It also ships with essential JS tooling in the form of yarn, npm and node.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ java --version&#xA;The program &#39;java&#39; is not in your PATH. It is provided by several packages.&#xA;&#xA;$ sbt --version&#xA;The program &#39;sbt&#39; is not in your PATH. It is provided by several packages.&#xA;&#xA;$ yarn --version&#xA;The program &#39;yarn&#39; is not in your PATH. It is provided by several packages.&#xA;&#xA;$ npm --version&#xA;The program &#39;npm&#39; is not in your PATH. It is provided by several packages.&#xA;&#xA;$ nix develop&#xA;&#xA;$ java --version&#xA;openjdk 17.0.1 2021-10-19&#xA;OpenJDK Runtime Environment (build 17.0.1+12-nixos)&#xA;OpenJDK 64-Bit Server VM (build 17.0.1+12-nixos, mixed mode, sharing)&#xA;&#xA;$ mill --version&#xA;Mill Build Tool version 0.10.0&#xA;Java version: 17.0.1, vendor: N/A, runtime: /nix/store/drg31yiw0619r981n0yyv7lnziiyxwww-openjdk-headless-17.0.1+12/lib/openjdk&#xA;Default locale: en_US, platform encoding: UTF-8&#xA;OS name: &#34;Linux&#34;, version: 5.16.10, arch: amd64&#xA;&#xA;$ sbt --version&#xA;sbt version in this project: &#x9;1.6.2&#xA;sbt script version: 1.6.2&#xA;&#xA;$ cs java-home&#xA;/nix/store/drg31yiw0619r981n0yyv7lnziiyxwww-openjdk-headless-17.0.1+12&#xA;&#xA;$ node --version&#xA;v16.14.0&#xA;&#xA;$ npm --version&#xA;8.3.1&#xA;&#xA;$ yarn --version&#xA;1.22.17&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>