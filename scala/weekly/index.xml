<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-24T01:43:05Z</updated>
  <subtitle>Weekly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>open-korean-text/open-korean-text</title>
    <updated>2024-11-24T01:43:05Z</updated>
    <id>tag:github.com,2024-11-24:/open-korean-text/open-korean-text</id>
    <link href="https://github.com/open-korean-text/open-korean-text" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Korean Text Processor - An Open-source Korean Text Processor&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;open-korean-text &lt;a href=&#34;https://coveralls.io/github/open-korean-text/open-korean-text?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/open-korean-text/open-korean-text/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/open-korean-text/open-korean-text&#34;&gt;&lt;img src=&#34;https://travis-ci.org/open-korean-text/open-korean-text.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;&lt;img src=&#34;http://img.shields.io/:license-Apache%202-red.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Open-source Korean Text Processor / 오픈소스 한국어 처리기 (Official Fork of twitter-korean-text)&lt;/p&gt; &#xA;&lt;p&gt;Scala/Java library to process Korean text with a Java wrapper. open-korean-text currently provides Korean normalization and tokenization. Please join our community at &lt;a href=&#34;https://groups.google.com/forum/#!forum/open-korean-text&#34;&gt;Google Forum&lt;/a&gt;. The intent of this text processor is not limited to short tweet texts.&lt;/p&gt; &#xA;&lt;p&gt;스칼라로 쓰여진 한국어 처리기입니다. 현재 텍스트 정규화와 형태소 분석, 스테밍을 지원하고 있습니다. 짧은 트윗은 물론이고 긴 글도 처리할 수 있습니다. 개발에 참여하시고 싶은 분은 &lt;a href=&#34;https://groups.google.com/forum/#!forum/open-korean-text&#34;&gt;Google Forum&lt;/a&gt;에 가입해 주세요. 사용법을 알고자 하시는 초보부터 코드에 참여하고 싶으신 분들까지 모두 환영합니다.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-korean-text/open-korean-text/master/docs/contribution-guide.md&#34;&gt;설치 및 수정하는 방법 상세 안내&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;open-korean-text의 목표는 빅데이터 등에서 간단한 한국어 처리를 통해 색인어를 추출하는 데에 있습니다. 완전한 수준의 형태소 분석을 지향하지는 않습니다.&lt;/p&gt; &#xA;&lt;p&gt;open-korean-text는 normalization, tokenization, stemming, phrase extraction 이렇게 네가지 기능을 지원합니다.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;정규화 normalization (입니닼ㅋㅋ -&amp;gt; 입니다 ㅋㅋ, 샤릉해 -&amp;gt; 사랑해)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;한국어를 처리하는 예시입니닼ㅋㅋㅋㅋㅋ -&amp;gt; 한국어를 처리하는 예시입니다 ㅋㅋ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;토큰화 tokenization&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;한국어를 처리하는 예시입니다 ㅋㅋ -&amp;gt; 한국어Noun, 를Josa, 처리Noun, 하는Verb, 예시Noun, 입니다Adjective(이다), ㅋㅋKoreanParticle&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;어근화 stemming (입니다 -&amp;gt; 이다)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;한국어를 처리하는 예시입니다 ㅋㅋ -&amp;gt; 한국어Noun, 를Josa, 처리Noun, 하다Verb, 예시Noun, 이다Adjective, ㅋㅋKoreanParticle&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;어구 추출 phrase extraction&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;한국어를 처리하는 예시입니다 ㅋㅋ -&amp;gt; 한국어, 처리, 예시, 처리하는 예시&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Introductory Presentation: &lt;a href=&#34;https://docs.google.com/presentation/d/10CZj8ry03oCk_Jqw879HFELzOLjJZ0EOi4KJbtRSIeU/&#34;&gt;Google Slides&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Web API Service&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-api&#34;&gt;open-korean-text-api&lt;/a&gt;&lt;br&gt; 이 API 서비스는 Heroku 서버에서 제공되며(Domain: &lt;a href=&#34;https://open-korean-text.herokuapp.com/&#34;&gt;https://open-korean-text.herokuapp.com/&lt;/a&gt;) 현재 정규화(normalization), 토큰화(tokenization), 어근화(stemmin), 어구 추출(phrase extract) 서비스를 제공합니다.&lt;/p&gt; &#xA;&lt;p&gt;각 서비스와 사용법은 다음과 같습니다.&lt;br&gt; &lt;code&gt;normalize&lt;/code&gt;, &lt;code&gt;tokenize&lt;/code&gt;, &lt;code&gt;stem&lt;/code&gt;, &lt;code&gt;extractPhrases&lt;/code&gt; 가 각 서비스의 &lt;strong&gt;Action&lt;/strong&gt; 이 되며 &lt;strong&gt;Query parameter&lt;/strong&gt; 는 &lt;code&gt;text&lt;/code&gt; 입니다.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;서비스&lt;/th&gt; &#xA;   &lt;th&gt;사용법&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;정규화&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://open-korean-text-api.herokuapp.com/normalize?text=%EC%98%A4%ED%94%88%EC%BD%94%EB%A6%AC%EC%95%88%ED%85%8D%EC%8A%A4%ED%8A%B8&#34;&gt;https://open-korean-text-api.herokuapp.com/normalize?text=오픈코리안텍스트&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;토큰화&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://open-korean-text-api.herokuapp.com/tokenize?text=%EC%98%A4%ED%94%88%EC%BD%94%EB%A6%AC%EC%95%88%ED%85%8D%EC%8A%A4%ED%8A%B8&#34;&gt;https://open-korean-text-api.herokuapp.com/tokenize?text=오픈코리안텍스트&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;어근화&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://open-korean-text-api.herokuapp.com/stem?text=%EC%98%A4%ED%94%88%EC%BD%94%EB%A6%AC%EC%95%88%ED%85%8D%EC%8A%A4%ED%8A%B8&#34;&gt;https://open-korean-text-api.herokuapp.com/stem?text=오픈코리안텍스트&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;어구 추출&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://open-korean-text-api.herokuapp.com/extractPhrases?text=%EC%98%A4%ED%94%88%EC%BD%94%EB%A6%AC%EC%95%88%ED%85%8D%EC%8A%A4%ED%8A%B8&#34;&gt;https://open-korean-text-api.herokuapp.com/extractPhrases?text=오픈코리안텍스트&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Semantic Versioning&lt;/h2&gt; &#xA;&lt;p&gt;1.0.2 (Major.Minor.Patch)&lt;/p&gt; &#xA;&lt;p&gt;Major: API change Minor: Processor behavior change Patch: Bug fixes without a behavior change&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://open-korean-text.github.io/open-korean-text/scaladocs/org/openkoreantext/processor/index.html&#34;&gt;Scala Doc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://open-korean-text.github.io/open-korean-text/index.html&#34;&gt;Maven Doc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ## Try it here --&gt; &#xA;&lt;!-- Gunja Agrawal kindly created a test API webpage for this project: [http://gunjaagrawal.com/langhack/](http://gunjaagrawal.com/langhack/) --&gt; &#xA;&lt;!-- Gunja Agrawal님이 만들어주신 테스트 웹 페이지 입니다. --&gt; &#xA;&lt;!-- [http://gunjaagrawal.com/langhack/](http://gunjaagrawal.com/langhack/) --&gt; &#xA;&lt;!-- Opensourced here: [twitter-korean-tokenizer-api](https://github.com/gunjaag/twitter-korean-tokenizer-api) --&gt; &#xA;&lt;h2&gt;Maven&lt;/h2&gt; &#xA;&lt;p&gt;To include this in your Maven-based JVM project, add the following lines to your pom.xml: / Maven을 이용할 경우 pom.xml에 다음의 내용을 추가하시면 됩니다:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;  &amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.openkoreantext&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;open-korean-text&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;2.1.0&amp;lt;/version&amp;gt;&#xA;  &amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Maven Repository: &lt;a href=&#34;http://mvnrepository.com/artifact/org.openkoreantext/open-korean-text&#34;&gt;http://mvnrepository.com/artifact/org.openkoreantext/open-korean-text&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- The maven site is available here http://twitter.github.io/open-korean-text/ and scaladocs are here http://twitter.github.io/open-korean-text/scaladocs/ --&gt; &#xA;&lt;h2&gt;Support for other languages.&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Contributor&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wrapper&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-wrapper-csharp&#34;&gt;.net/C#&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/modamoda&#34;&gt;modamoda&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wrapper&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-wrapper-node-1&#34;&gt;Node JS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Ch0p&#34;&gt;Ch0p&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wrapper&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-wrapper-node-2&#34;&gt;Node JS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rokoroku&#34;&gt;Youngrok Kim&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wrapper&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-wrapper-python&#34;&gt;Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jaepil&#34;&gt;Jaepil Jeong&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wrapper&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-4clj&#34;&gt;Clojure&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ksseono&#34;&gt;Seonho Kim&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wrapper&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-wrapper-ruby-1&#34;&gt;Ruby for Java Version&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jun85664396&#34;&gt;jun85664396&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wrapper&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-wrapper-ruby-2&#34;&gt;Ruby for Scala Version&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/keepcosmos&#34;&gt;Jaehyun Shin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Porting&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-python&#34;&gt;Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cedar101&#34;&gt;Baeg-il Kim&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Package&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/konlpy/konlpy&#34;&gt;Python Korean NLP&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/konlpy/konlpy&#34;&gt;KoNLPy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Package&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/open-korean-text-elastic-search&#34;&gt;Elastic Search&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/socurites&#34;&gt;socurites&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Package&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext&#34;&gt;Elastic Search&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/keepcosmos&#34;&gt;Jaehyun Shin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Package&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/71/oktjs&#34;&gt;JavaScript&lt;/a&gt; (browser-compatible)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/71&#34;&gt;Grégoire Geis&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get the source / 소스를 원하시는 경우&lt;/h2&gt; &#xA;&lt;p&gt;Clone the git repo and build using maven. / Git 전체를 클론하고 Maven을 이용하여 빌드합니다.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/open-korean-text/open-korean-text.git&#xA;cd open-korean-text&#xA;mvn compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &#39;pom.xml&#39; from your favorite IDE.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Usage / 사용 방법&lt;/h2&gt; &#xA;&lt;p&gt;You can find these &lt;a href=&#34;https://raw.githubusercontent.com/open-korean-text/open-korean-text/master/examples&#34;&gt;examples&lt;/a&gt; in examples folder. / &lt;a href=&#34;https://raw.githubusercontent.com/open-korean-text/open-korean-text/master/examples&#34;&gt;examples&lt;/a&gt; 폴더에 사용 방법 예제 파일이 있습니다.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-korean-text/open-korean-text/master/examples/src/main/scala/ScalaOpenKoreanTextExample.scala&#34;&gt;Scala Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-korean-text/open-korean-text/master/examples/src/main/java/JavaOpenKoreanTextProcessorExample.java&#34;&gt;Java Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn test&lt;/code&gt; will run our unit tests / 모든 유닛 테스트를 실행하려면 &lt;code&gt;mvn test&lt;/code&gt;를 이용해 주세요.&lt;/p&gt; &#xA;&lt;!-- ## Tools --&gt; &#xA;&lt;!-- We provide tools for quality assurance and test resources. They can be found under [src/main/scala/org/openkoreantext/processor/qa](src/main/scala/org/openkoreantext/processor/qa) and [src/main/scala/org/openkoreantext/processor/tools](src/main/scala/org/openkoreantext/processor/tools). --&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/open-korean-text/open-korean-text/master/CONTRIBUTING.md&#34;&gt;general contribution guide&lt;/a&gt;. We will add this project-specific contribution guide later.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-korean-text/open-korean-text/master/docs/contribution-guide.md&#34;&gt;설치 및 수정하는 방법 상세 안내&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Performance / 처리 속도&lt;/h2&gt; &#xA;&lt;p&gt;Tested on Intel i7 2.3 Ghz&lt;/p&gt; &#xA;&lt;p&gt;Initial loading time (초기 로딩 시간): 2~4 sec&lt;/p&gt; &#xA;&lt;p&gt;Average time per parsing a chunk (평균 어절 처리 시간): 0.12 ms&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tweets (Avg length ~50 chars)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tweets&lt;/th&gt; &#xA;   &lt;th&gt;100K&lt;/th&gt; &#xA;   &lt;th&gt;200K&lt;/th&gt; &#xA;   &lt;th&gt;300K&lt;/th&gt; &#xA;   &lt;th&gt;400K&lt;/th&gt; &#xA;   &lt;th&gt;500K&lt;/th&gt; &#xA;   &lt;th&gt;600K&lt;/th&gt; &#xA;   &lt;th&gt;700K&lt;/th&gt; &#xA;   &lt;th&gt;800K&lt;/th&gt; &#xA;   &lt;th&gt;900K&lt;/th&gt; &#xA;   &lt;th&gt;1M&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Time in Seconds&lt;/td&gt; &#xA;   &lt;td&gt;57.59&lt;/td&gt; &#xA;   &lt;td&gt;112.09&lt;/td&gt; &#xA;   &lt;td&gt;165.05&lt;/td&gt; &#xA;   &lt;td&gt;218.11&lt;/td&gt; &#xA;   &lt;td&gt;270.54&lt;/td&gt; &#xA;   &lt;td&gt;328.52&lt;/td&gt; &#xA;   &lt;td&gt;381.09&lt;/td&gt; &#xA;   &lt;td&gt;439.71&lt;/td&gt; &#xA;   &lt;td&gt;492.94&lt;/td&gt; &#xA;   &lt;td&gt;542.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Average per tweet: 0.54212 ms&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Benchmark test by &lt;a href=&#34;http://konlpy.org/&#34;&gt;KoNLPy&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://konlpy.org/ko/v0.4.2/_images/time.png&#34; alt=&#34;Benchmark test&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;http://konlpy.org/ko/v0.4.3/morph/#pos-tagging-with-konlpy&#34;&gt;http://konlpy.org/ko/v0.4.3/morph/#pos-tagging-with-konlpy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will Hohyon Ryu (유호현): &lt;a href=&#34;https://github.com/nlpenguin&#34;&gt;https://github.com/nlpenguin&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/NLPenguin&#34;&gt;https://twitter.com/NLPenguin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Admin Staff&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mingyu Kim (김민규): &lt;a href=&#34;https://github.com/MechanicKim&#34;&gt;https://github.com/MechanicKim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2014 Twitter, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>