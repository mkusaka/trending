<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-04T01:47:03Z</updated>
  <subtitle>Weekly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Azure/azure-event-hubs-spark</title>
    <updated>2022-12-04T01:47:03Z</updated>
    <id>tag:github.com,2022-12-04:/Azure/azure-event-hubs-spark</id>
    <link href="https://github.com/Azure/azure-event-hubs-spark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Enabling Continuous Data Processing with Apache Spark and Azure Event Hubs&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Azure/azure-event-hubs-spark/master/event-hubs_spark.png&#34; alt=&#34;Azure Event Hubs + Apache Spark Connector&#34; width=&#34;270&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Azure Event Hubs Connector for Apache Spark&lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://gitter.im/azure-event-hubs-spark&#34;&gt; &lt;img src=&#34;https://badges.gitter.im/gitterHQ/gitter.png&#34; alt=&#34;chat on gitter&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/Azure/azure-event-hubs-spark&#34;&gt; &lt;img src=&#34;https://travis-ci.org/Azure/azure-event-hubs-spark.svg?branch=master&#34; alt=&#34;build status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-event-hubs-spark/master/#star-our-repo&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/azure/azure-event-hubs-spark.svg?style=social&amp;amp;label=Stars&#34; alt=&#34;star our repo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;This is the source code of the Azure Event Hubs Connector for Apache Spark.&lt;/p&gt; &#xA;&lt;p&gt;Azure Event Hubs is a highly scalable publish-subscribe service that can ingest millions of events per second and stream them into multiple applications. Spark Streaming and Structured Streaming are scalable and fault-tolerant stream processing engines that allow users to process huge amounts of data using complex algorithms expressed with high-level functions like &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;reduce&lt;/code&gt;, &lt;code&gt;join&lt;/code&gt;, and &lt;code&gt;window&lt;/code&gt;. This data can then be pushed to filesystems, databases, or even back to Event Hubs.&lt;/p&gt; &#xA;&lt;p&gt;By making Event Hubs and Spark easier to use together, we hope this connector makes building scalable, fault-tolerant applications easier for our users.&lt;/p&gt; &#xA;&lt;h2&gt;Latest Releases&lt;/h2&gt; &#xA;&lt;h4&gt;Spark&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Spark Version&lt;/th&gt; &#xA;   &lt;th&gt;Package Name&lt;/th&gt; &#xA;   &lt;th&gt;Package Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spark 3.0&lt;/td&gt; &#xA;   &lt;td&gt;azure-eventhubs-spark_2.12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.maven.org/#artifactdetails%7Ccom.microsoft.azure%7Cazure-eventhubs-spark_2.12%7C2.3.22%7Cjar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maven%20central-2.3.22-brightgreen.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spark 2.4&lt;/td&gt; &#xA;   &lt;td&gt;azure-eventhubs-spark_2.11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.maven.org/#artifactdetails%7Ccom.microsoft.azure%7Cazure-eventhubs-spark_2.11%7C2.3.22%7Cjar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maven%20central-2.3.22-brightgreen.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spark 2.4&lt;/td&gt; &#xA;   &lt;td&gt;azure-eventhubs-spark_2.12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.maven.org/#artifactdetails%7Ccom.microsoft.azure%7Cazure-eventhubs-spark_2.12%7C2.3.22%7Cjar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maven%20central-2.3.22-brightgreen.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Databricks&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Databricks Runtime Version&lt;/th&gt; &#xA;   &lt;th&gt;Artifact Id&lt;/th&gt; &#xA;   &lt;th&gt;Package Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Databricks Runtime 8.X&lt;/td&gt; &#xA;   &lt;td&gt;azure-eventhubs-spark_2.12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.maven.org/#artifactdetails%7Ccom.microsoft.azure%7Cazure-eventhubs-spark_2.12%7C2.3.22%7Cjar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maven%20central-2.3.22-brightgreen.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Databricks Runtime 7.X&lt;/td&gt; &#xA;   &lt;td&gt;azure-eventhubs-spark_2.12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.maven.org/#artifactdetails%7Ccom.microsoft.azure%7Cazure-eventhubs-spark_2.12%7C2.3.22%7Cjar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maven%20central-2.3.22-brightgreen.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Databricks Runtime 6.X&lt;/td&gt; &#xA;   &lt;td&gt;azure-eventhubs-spark_2.11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.maven.org/#artifactdetails%7Ccom.microsoft.azure%7Cazure-eventhubs-spark_2.11%7C2.3.22%7Cjar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maven%20central-2.3.22-brightgreen.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Roadmap&lt;/h4&gt; &#xA;&lt;p&gt;There is an open issue for each planned feature/enhancement.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;We maintain an &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-event-hubs-spark/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt; - reach out to us via &lt;a href=&#34;https://gitter.im/azure-event-hubs-spark/Lobby&#34;&gt;gitter&lt;/a&gt; if you think anything needs to be added or clarified!&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Linking&lt;/h3&gt; &#xA;&lt;p&gt;For Scala/Java applications using SBT/Maven project definitions, link your application with the artifact below. &lt;strong&gt;Note:&lt;/strong&gt; See &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-event-hubs-spark/master/#latest-releases&#34;&gt;Latest Releases&lt;/a&gt; to find the correct artifact for your version of Apache Spark (or Databricks)!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;groupId = com.microsoft.azure&#xA;artifactId = azure-eventhubs-spark_2.11&#xA;version = 2.3.22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;groupId = com.microsoft.azure&#xA;artifactId = azure-eventhubs-spark_2.12&#xA;version = 2.3.22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Documentation for our connector can be found &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-event-hubs-spark/master/docs/&#34;&gt;here&lt;/a&gt;. The integration guides there contain all the information you need to use this library.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you&#39;re new to Apache Spark and/or Event Hubs, then we highly recommend reading their documentation first.&lt;/strong&gt; You can read Event Hubs documentation &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-what-is-event-hubs&#34;&gt;here&lt;/a&gt;, documentation for Spark Streaming &lt;a href=&#34;https://spark.apache.org/docs/latest/streaming-programming-guide.html&#34;&gt;here&lt;/a&gt;, and, the last but not least, Structured Streaming &lt;a href=&#34;https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Further Assistance&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you need additional assistance, please don&#39;t hesitate to ask!&lt;/strong&gt; General questions and discussion should happen on our &lt;a href=&#34;https://gitter.im/azure-event-hubs-spark&#34;&gt;gitter chat&lt;/a&gt;. Please open an issue for bug reports and feature requests! Feedback, feature requests, bug reports, etc are all welcomed!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to help contribute (we&#39;d love to have your help!), then go to our &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-event-hubs-spark/master/.github/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Build Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;In order to use the connector, you need to have:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 1.8 SDK installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maven.apache.org/download.cgi&#34;&gt;Maven 3.x&lt;/a&gt; installed (or &lt;a href=&#34;https://www.scala-sbt.org/1.x/docs/index.html&#34;&gt;SBT version 1.x&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More details on building from source and running tests can be found in our &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-event-hubs-spark/master/.github/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build Command&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;// Builds jar and runs all tests&#xA;mvn clean package&#xA;&#xA;// Builds jar, runs all tests, and installs jar to your local maven repository&#xA;mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>VirtusLab/avocADO</title>
    <updated>2022-12-04T01:47:03Z</updated>
    <id>tag:github.com,2022-12-04:/VirtusLab/avocADO</id>
    <link href="https://github.com/VirtusLab/avocADO" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Safe compile-time parallelization of for-comprehensions for Scala 3&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://index.scala-lang.org/virtuslab/avocado/avocado&#34;&gt;&lt;img src=&#34;https://index.scala-lang.org/virtuslab/avocado/avocado/latest-by-scala-version.svg?platform=jvm&#34; alt=&#34;avocado Scala version support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;avocADO - Safe compile-time parallelization of &lt;code&gt;for&lt;/code&gt; comprehensions&lt;/h1&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import cats.effect.IO&#xA;&#xA;import avocado.*&#xA;import avocado.instances.cats.given&#xA;&#xA;val run: IO[Int] =&#xA;  ado {&#xA;    for {&#xA;      a &amp;lt;- doStuff1&#xA;      b &amp;lt;- doStuff2(a)&#xA;      c &amp;lt;- doStuff3&#xA;      d &amp;lt;- doStuff4(a)&#xA;    } yield combine(a, b, c, d)&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;avocADO&lt;/code&gt; will transform the above for-comprehension to code equivalent to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;for {&#xA;  a &amp;lt;- doStuff1&#xA;  (b, c, d) &amp;lt;- doStuff2(a).zip(doStuff3).zip(doStuff4(a))&#xA;} yield combine(a, b, c, d)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;avocADO&lt;/code&gt; is a small library that allows for automatic rewriting of &lt;code&gt;for&lt;/code&gt; comprehensions to their parallel versions.&lt;/p&gt; &#xA;&lt;p&gt;The name &lt;code&gt;avocADO&lt;/code&gt; is a pun on the most important function exposed by the library - &lt;code&gt;ado&lt;/code&gt; (name taken from Haskell&#39;s language extension &lt;code&gt;ApplicativeDo&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Usage (with build tools)&lt;/h2&gt; &#xA;&lt;h3&gt;sbt&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies ++= Seq(&#xA;  &#34;org.virtuslab&#34; %% &#34;avocado&#34; % &#34;version from the badge&#34;,&#xA;  &#34;org.virtuslab&#34; %% &#34;avocado-cats&#34; % &#34;version from the badge&#34;, // for Cats&#xA;  &#34;org.virtuslab&#34; %% &#34;avocado-zio-2&#34; % &#34;version from the badge&#34;, // for ZIO 2.x&#xA;  &#34;org.virtuslab&#34; %% &#34;avocado-zio-1&#34; % &#34;version from the badge&#34;, // for ZIO 1.x&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;scala-cli&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;//&amp;gt; using lib &#34;org.virtuslab:&lt;span&gt;🥑&lt;/span&gt;version from the badge&#34;&#xA;//&amp;gt; using lib &#34;org.virtuslab::avocado-cats:version from the badge&#34; // for Cats&#xA;//&amp;gt; using lib &#34;org.virtuslab::avocado-zio-2:version from the badge&#34; // for ZIO 2.x&#xA;//&amp;gt; using lib &#34;org.virtuslab::avocado-zio-1:version from the badge&#34; // for ZIO 1.x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage (in code)&lt;/h2&gt; &#xA;&lt;p&gt;All you need to do in order to use &lt;code&gt;avocADO&lt;/code&gt; is to import the &lt;code&gt;ado&lt;/code&gt; function and an &lt;code&gt;AvocADO&lt;/code&gt; instance for your effect system. i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import avocado.* // This line exposes the `ado` function - entrypoint of the library&#xA;// You should choose one of the following imports depending on your effect system of choice&#xA;import avocado.instances.cats.given&#xA;import avocado.instances.zio2.given&#xA;import avocado.instances.zio1.given&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s it! All that&#39;s left is to wrap the &lt;code&gt;for&lt;/code&gt;-comprehensions that you want to parallelize with a call to &lt;code&gt;ado&lt;/code&gt; an watch your program run in parallel! Like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;ado {&#xA;  for {&#xA;    ...&#xA;  } yield ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage (custom monads)&lt;/h2&gt; &#xA;&lt;p&gt;On the off chance that &lt;code&gt;avocADO&lt;/code&gt; doesn&#39;t provide an instance for your favourite effect monad, you might have to write an instance of our &lt;code&gt;AvocADO&lt;/code&gt; typeclass yourself. Don&#39;t worry, it&#39;s relatively straightforward.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;AvocADO&lt;/code&gt; is just a &lt;code&gt;Monad&lt;/code&gt; with a changed name, so that it can be easily associated with &lt;code&gt;avocADO&lt;/code&gt;. So if you want to write an instance for a class called &lt;code&gt;Effect&lt;/code&gt; it might look like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;given AvocADO[Effect] = new AvocADO[Effect] {&#xA;  def pure[A](a: A): Effect[A] = Effect.pure(a)&#xA;  def map[A, B](fa: Effect[A], f: A =&amp;gt; B): Effect[B] = fa.map(f)&#xA;  def zip[A, B](fa: Effect[A], fb: Effect[B]): Effect[(A, B)] = fa.zipPar(fb) // This is the most important method&#xA;  def flatMap[A, B](fa: Effect[A], f: A =&amp;gt; Effect[B]): Effect[B] = fa.flatMap(f)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Every parallel part of the computation will be rewritten to a call to &lt;code&gt;zip&lt;/code&gt;, so in order to achieve any speedup, you have to provide a parallel implementation for &lt;code&gt;zip&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;Inspired by &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/-/wikis/applicative-do&#34;&gt;Haskell&#39;s Applicative do-notation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Similar project: &lt;a href=&#34;https://github.com/kitlangton/parallel-for&#34;&gt;&lt;code&gt;kitlangton/parallel-for&lt;/code&gt;&lt;/a&gt; (only for Scala 2)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JakeGreene/EnflickAkka</title>
    <updated>2022-12-04T01:47:03Z</updated>
    <id>tag:github.com,2022-12-04:/JakeGreene/EnflickAkka</id>
    <link href="https://github.com/JakeGreene/EnflickAkka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple introduction to Akka. Presented at enflick inc&#39;s Dec5 2012 TechTalk&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EnflickAkka&lt;/h1&gt; &#xA;&lt;p&gt;A simple introduction to Akka. Presented at enflick Inc&#39;s Dec5 2012 TechTalk&lt;/p&gt;</summary>
  </entry>
</feed>