<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-23T01:50:20Z</updated>
  <subtitle>Weekly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Dan-M/dumbsterweb</title>
    <updated>2022-10-23T01:50:20Z</updated>
    <id>tag:github.com,2022-10-23:/Dan-M/dumbsterweb</id>
    <link href="https://github.com/Dan-M/dumbsterweb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Lift web app wrapping Dumbster, the fake Smtp Server&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>http4s/http4s</title>
    <updated>2022-10-23T01:50:20Z</updated>
    <id>tag:github.com,2022-10-23:/http4s/http4s</id>
    <link href="https://github.com/http4s/http4s" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A minimal, idiomatic Scala interface for HTTP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Http4s &lt;a href=&#34;https://github.com/http4s/http4s/actions?query=branch%3Aseries%2F0.23+workflow%3A%22Continuous+Integration%22&#34;&gt;&lt;img src=&#34;https://github.com/http4s/http4s/workflows/Continuous%20Integration/badge.svg?branch=series/0.23&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/maven-central/v/org.http4s/http4s-core_2.13?versionPrefix=0.23&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.http4s/http4s-core_2.13?versionPrefix=0.23&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://typelevel.org/projects/#http4s&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/typelevel-library-green.svg?sanitize=true&#34; alt=&#34;Typelevel library&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://typelevel.org/cats/&#34;&gt;&lt;img src=&#34;https://typelevel.org/cats/img/cats-badge.svg?sanitize=true&#34; height=&#34;40px&#34; align=&#34;right&#34; alt=&#34;Cats friendly&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Http4s is a minimal, idiomatic Scala interface for HTTP services. Http4s is Scala&#39;s answer to Ruby&#39;s Rack, Python&#39;s WSGI, Haskell&#39;s WAI, and Java&#39;s Servlets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val http = HttpRoutes.of {&#xA;  case GET -&amp;gt; Root / &#34;hello&#34; =&amp;gt;&#xA;    Ok(&#34;Hello, better world.&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more at &lt;a href=&#34;https://http4s.org/&#34;&gt;http4s.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you run into any difficulties please enable partial unification in your &lt;code&gt;build.sbt&lt;/code&gt; (not needed for Scala 2.13 and beyond, because Scala 2.13.0+ has partial unification switched on by default)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;scalacOptions ++= Seq(&#34;-Ypartial-unification&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Running the &lt;strong&gt;blaze&lt;/strong&gt; backend requires a modern, supported version of the JVM to build and run, as it relies on server APIs unavailable before JDK8u252. Any JDK newer than JDK8u252, including 9+ is supported.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;http4s is proud to be a &lt;a href=&#34;https://typelevel.org/&#34;&gt;Typelevel&lt;/a&gt; project. We are committed to providing a friendly, safe and welcoming environment for all, and ask that the community adhere to the &lt;a href=&#34;https://http4s.org/code-of-conduct/&#34;&gt;Scala Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the Apache 2 license, quoted below.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Copyright 2013-2021 http4s [&lt;a href=&#34;https://http4s.org/&#34;&gt;https://http4s.org&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yourkit.com/&#34;&gt;&lt;img src=&#34;https://www.yourkit.com/images/yklogo.png&#34; alt=&#34;YourKit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://www.yourkit.com/&#34;&gt;YourKit&lt;/a&gt; for supporting this project&#39;s ongoing performance tuning efforts with licenses to their excellent product.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/tvm-vta</title>
    <updated>2022-10-23T01:50:20Z</updated>
    <id>tag:github.com,2022-10-23:/apache/tvm-vta</id>
    <link href="https://github.com/apache/tvm-vta" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open, Modular, Deep Learning Accelerator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VTA Hardware Design Stack&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.tlcpack.ai/job/tvm-vta/job/main/&#34;&gt;&lt;img src=&#34;https://ci.tlcpack.ai/job/tvm-vta/job/main/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;VTA (versatile tensor accelerator) is an open-source deep learning accelerator complemented with an end-to-end TVM-based compiler stack.&lt;/p&gt; &#xA;&lt;p&gt;The key features of VTA include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generic, modular, open-source hardware &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Streamlined workflow to deploy to FPGAs.&lt;/li&gt; &#xA;   &lt;li&gt;Simulator support to prototype compilation passes on regular workstations.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Driver and JIT runtime for both simulator and FPGA hardware back-end.&lt;/li&gt; &#xA; &lt;li&gt;End-to-end TVM stack integration &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Direct optimization and deployment of models from deep learning frameworks via TVM.&lt;/li&gt; &#xA;   &lt;li&gt;Customized and extensible TVM compiler back-end.&lt;/li&gt; &#xA;   &lt;li&gt;Flexible RPC support to ease deployment, and program FPGAs with the convenience of Python.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>