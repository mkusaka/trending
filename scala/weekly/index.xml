<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T02:23:34Z</updated>
  <subtitle>Weekly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lichess-org/lila</title>
    <updated>2022-07-17T02:23:34Z</updated>
    <id>tag:github.com,2022-07-17:/lichess-org/lila</id>
    <link href="https://github.com/lichess-org/lila" rel="alternate"></link>
    <summary type="html">&lt;p&gt;♞ lichess.org: the forever free, adless and open source chess server ♞&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://lichess.org&#34;&gt;lichess.org&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lichess-org/lila/actions?query=workflow%3A%22Build+server%22&#34;&gt;&lt;img src=&#34;https://github.com/lichess-org/lila/workflows/Build%20server/badge.svg?sanitize=true&#34; alt=&#34;Build server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lichess-org/lila/actions?query=workflow%3A%22Build+assets%22&#34;&gt;&lt;img src=&#34;https://github.com/lichess-org/lila/workflows/Build%20assets/badge.svg?sanitize=true&#34; alt=&#34;Build assets&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/lichess&#34;&gt;&lt;img src=&#34;https://d322cqt584bo4o.cloudfront.net/lichess/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/lichess&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-%40lichess-blue.svg?sanitize=true&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/lichess-org/lila/master/public/images/home-bicolor.png&#34; alt=&#34;Lichess homepage&#34; title=&#34;Lichess comes with light and dark theme, this screenshot shows both.&#34;&gt; &#xA;&lt;p&gt;Lila (li[chess in sca]la) is a free online chess game server focused on &lt;a href=&#34;https://lichess.org/games&#34;&gt;realtime&lt;/a&gt; gameplay and ease of use.&lt;/p&gt; &#xA;&lt;p&gt;It features a &lt;a href=&#34;https://lichess.org/games/search&#34;&gt;search engine&lt;/a&gt;, &lt;a href=&#34;https://lichess.org/ief49lif&#34;&gt;computer analysis&lt;/a&gt; distributed with &lt;a href=&#34;https://github.com/lichess-org/fishnet&#34;&gt;fishnet&lt;/a&gt;, &lt;a href=&#34;https://lichess.org/tournament&#34;&gt;tournaments&lt;/a&gt;, &lt;a href=&#34;https://lichess.org/simul&#34;&gt;simuls&lt;/a&gt;, &lt;a href=&#34;https://lichess.org/forum&#34;&gt;forums&lt;/a&gt;, &lt;a href=&#34;https://lichess.org/team&#34;&gt;teams&lt;/a&gt;, &lt;a href=&#34;https://lichess.org/training&#34;&gt;tactic trainer&lt;/a&gt;, a &lt;a href=&#34;https://lichess.org/mobile&#34;&gt;mobile app&lt;/a&gt;, and a &lt;a href=&#34;https://lichess.org/study&#34;&gt;shared analysis board&lt;/a&gt;. The UI is available in more than &lt;a href=&#34;https://crowdin.com/project/lichess&#34;&gt;130 languages&lt;/a&gt; thanks to the community.&lt;/p&gt; &#xA;&lt;p&gt;Lichess is written in &lt;a href=&#34;https://www.scala-lang.org/&#34;&gt;Scala 2.13&lt;/a&gt;, and relies on the &lt;a href=&#34;https://www.playframework.com/&#34;&gt;Play 2.8&lt;/a&gt; framework. &lt;a href=&#34;https://com-lihaoyi.github.io/scalatags/&#34;&gt;scalatags&lt;/a&gt; is used for templating. Pure chess logic is contained in the &lt;a href=&#34;https://github.com/lichess-org/scalachess&#34;&gt;scalachess&lt;/a&gt; submodule. The server is fully asynchronous, making heavy use of Scala Futures and &lt;a href=&#34;https://akka.io&#34;&gt;Akka streams&lt;/a&gt;. WebSocket connections are handled by a &lt;a href=&#34;https://github.com/lichess-org/lila-ws&#34;&gt;separate server&lt;/a&gt; that communicates using &lt;a href=&#34;https://redis.io/&#34;&gt;redis&lt;/a&gt;. Lichess talks to &lt;a href=&#34;https://stockfishchess.org/&#34;&gt;Stockfish&lt;/a&gt; deployed in an &lt;a href=&#34;https://github.com/lichess-org/fishnet&#34;&gt;AI cluster&lt;/a&gt; of donated servers. It uses &lt;a href=&#34;https://www.mongodb.com&#34;&gt;MongoDB&lt;/a&gt; to store more than 1.7 billion games, which are indexed by &lt;a href=&#34;https://github.com/elastic/elasticsearch&#34;&gt;elasticsearch&lt;/a&gt;. HTTP requests and WebSocket connections can be proxied by &lt;a href=&#34;https://nginx.org&#34;&gt;nginx&lt;/a&gt;. The web client is written in &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; and &lt;a href=&#34;https://github.com/snabbdom/snabbdom&#34;&gt;snabbdom&lt;/a&gt;, using &lt;a href=&#34;https://sass-lang.com/&#34;&gt;Sass&lt;/a&gt; to generate CSS. The &lt;a href=&#34;https://lichess.org/blog&#34;&gt;blog&lt;/a&gt; uses a free open content plan from &lt;a href=&#34;https://prismic.io&#34;&gt;prismic.io&lt;/a&gt;. All rated games are published in a &lt;a href=&#34;https://database.lichess.org&#34;&gt;free PGN database&lt;/a&gt;. Browser testing done with &lt;a href=&#34;https://www.browserstack.com&#34;&gt;Browserstack&lt;/a&gt;. Proxy detection done with &lt;a href=&#34;https://www.ip2location.com/database/ip2proxy&#34;&gt;IP2Proxy database&lt;/a&gt;. Please help us &lt;a href=&#34;https://crowdin.com/project/lichess&#34;&gt;translate Lichess with Crowdin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://lichess.org/source&#34;&gt;lichess.org/source&lt;/a&gt; for a list of repositories.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/lichess&#34;&gt;Join us on Discord&lt;/a&gt; for more info. Use &lt;a href=&#34;https://github.com/lichess-org/lila/issues&#34;&gt;GitHub issues&lt;/a&gt; for bug reports and feature requests.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;./lila # thin wrapper around sbt&#xA;run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Wiki describes &lt;a href=&#34;https://github.com/lichess-org/lila/wiki/Lichess-Development-Onboarding&#34;&gt;how to setup a development environment&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;HTTP API&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to use the &lt;a href=&#34;https://lichess.org/api&#34;&gt;Lichess API&lt;/a&gt; in your applications and websites.&lt;/p&gt; &#xA;&lt;h2&gt;Supported browsers&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chromium / Chrome&lt;/td&gt; &#xA;   &lt;td&gt;last 10&lt;/td&gt; &#xA;   &lt;td&gt;Full support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Firefox&lt;/td&gt; &#xA;   &lt;td&gt;63+&lt;/td&gt; &#xA;   &lt;td&gt;Full support (fastest local analysis since FF 79)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Edge&lt;/td&gt; &#xA;   &lt;td&gt;91+&lt;/td&gt; &#xA;   &lt;td&gt;Full support (reasonable support for 17+)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Opera&lt;/td&gt; &#xA;   &lt;td&gt;55+&lt;/td&gt; &#xA;   &lt;td&gt;Reasonable support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Safari&lt;/td&gt; &#xA;   &lt;td&gt;11.1+&lt;/td&gt; &#xA;   &lt;td&gt;Reasonable support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Older browsers (including any version of Internet Explorer) will not work. For your own sake, please upgrade. Security and performance, think about it!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Lila is licensed under the GNU Affero General Public License 3 or any later version at your choice with an exception for Highcharts. See &lt;a href=&#34;https://github.com/lichess-org/lila/raw/master/COPYING.md&#34;&gt;copying&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://lichess.org/thanks&#34;&gt;lichess.org/thanks&lt;/a&gt; and the contributors here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lichess-org/lila/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=lichess-org/lila&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Competence development program&lt;/h2&gt; &#xA;&lt;p&gt;Lichess would like to support its contributors in their competence development by covering costs of relevant training materials and activities. This is a small way to further empower contributors who have given their time to Lichess and to enable or improve additional contributions to Lichess in the future. For more information, including how to apply, check &lt;a href=&#34;https://lichess.org/page/competence-development&#34;&gt;Competence Development for Lichess contributors&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>broadinstitute/cromwell</title>
    <updated>2022-07-17T02:23:34Z</updated>
    <id>tag:github.com,2022-07-17:/broadinstitute/cromwell</id>
    <link href="https://github.com/broadinstitute/cromwell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scientific workflow engine designed for simplicity &amp; scalability. Trivially transition between one off use cases to massive scale production environments&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/broadinstitute/cromwell?branch=develop&#34;&gt;&lt;img src=&#34;https://travis-ci.com/broadinstitute/cromwell.svg?branch=develop&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/broadinstitute/cromwell&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/broadinstitute/cromwell/branch/develop/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Welcome to Cromwell&lt;/h2&gt; &#xA;&lt;p&gt;Cromwell is an open-source Workflow Management System for bioinformatics. Licensing is &lt;a href=&#34;https://raw.githubusercontent.com/broadinstitute/cromwell/develop/LICENSE.txt&#34;&gt;BSD 3-Clause&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://cromwell.readthedocs.io/en/stable&#34;&gt;Cromwell documentation has a dedicated site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First time to Cromwell? Get started with &lt;a href=&#34;https://cromwell.readthedocs.io/en/stable/tutorials/FiveMinuteIntro/&#34;&gt;Tutorials&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;p&gt;Thinking about contributing to Cromwell? Get started by reading our &lt;a href=&#34;https://raw.githubusercontent.com/broadinstitute/cromwell/develop/CONTRIBUTING.md&#34;&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Cromwell has a growing ecosystem of community-backed projects to make your experience even better! Check out our &lt;a href=&#34;https://cromwell.readthedocs.io/en/stable/Ecosystem/&#34;&gt;Ecosystem&lt;/a&gt; page to learn more.&lt;/p&gt; &#xA;&lt;p&gt;Talk to us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/cromwellhq/shared_invite/zt-dxmmrtye-JHxwKE53rfKE_ZWdOHIB4g&#34;&gt;Join the Cromwell Slack workspace&lt;/a&gt; to discuss the Cromwell workflow engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/openwdl/shared_invite/zt-ctmj4mhf-cFBNxIiZYs6SY9HgM9UAVw&#34;&gt;Join the OpenWDL Slack workspace&lt;/a&gt; to discuss the evolution of the WDL language itself. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;More information about WDL is available in &lt;a href=&#34;https://github.com/openwdl/wdl&#34;&gt;that project&#39;s repository&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Capabilities and roadmap&lt;/h3&gt; &#xA;&lt;p&gt;Many users today run their WDL workflows in &lt;a href=&#34;https://app.terra.bio/&#34;&gt;Terra&lt;/a&gt;, a managed cloud bioinformatics platform with built-in WDL support provided by Cromwell. See &lt;a href=&#34;https://support.terra.bio/hc/en-us/articles/360036379771-Get-started-running-workflows&#34;&gt;here&lt;/a&gt; for a quick-start guide.&lt;/p&gt; &#xA;&lt;p&gt;Users with specialized needs who wish to install and maintain their own Cromwell instances can &lt;a href=&#34;https://github.com/broadinstitute/cromwell/releases&#34;&gt;download&lt;/a&gt; a JAR or Docker image. The development team accepts reproducible bug reports from self-managed instances, but cannot feasibly provide direct support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cromwell.readthedocs.io/en/stable/backends/Backends/&#34;&gt;Cromwell&#39;s backends&lt;/a&gt; receive development resources proportional to user demand. The team is actively developing for Google Cloud and Microsoft Azure (see &lt;a href=&#34;https://github.com/microsoft/CromwellOnAzure&#34;&gt;Cromwell on Azure&lt;/a&gt;). Maintenance of other backends is primarily community-based.&lt;/p&gt; &#xA;&lt;p&gt;Cromwell &lt;a href=&#34;https://cromwell.readthedocs.io/en/stable/LanguageSupport/&#34;&gt;supports&lt;/a&gt; the WDL workflow language. Cromwell version 80 and above no longer support CWL.&lt;/p&gt; &#xA;&lt;p&gt;CWL will be re-introduced at a later date in the &lt;a href=&#34;https://terra.bio/&#34;&gt;Terra platform&lt;/a&gt;, using a solution other than Cromwell. See the blog post &lt;a href=&#34;https://terra.bio/terras-roadmap-to-supporting-more-workflow-languages/&#34;&gt;&#34;Terra’s roadmap to supporting more workflow languages&#34;&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Security reports&lt;/h3&gt; &#xA;&lt;p&gt;If you believe you have found a security issue please contact &lt;code&gt;infosec@broadinstitute.org&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Issue tracking&lt;/h3&gt; &#xA;&lt;p&gt;Need to file an issue? Head over to &lt;a href=&#34;https://github.com/broadinstitute/cromwell/issues&#34;&gt;Github Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you previously filed an issue in JIRA, the link is &lt;a href=&#34;https://broadworkbench.atlassian.net/jira/software/c/projects/CROM/issues&#34;&gt;here&lt;/a&gt;. New signups are no longer accepted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/broadinstitute/cromwell/develop/docs/jamie_the_cromwell_pig.png&#34; alt=&#34;Jamie, the Cromwell pig&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>typelevel/cats-effect</title>
    <updated>2022-07-17T02:23:34Z</updated>
    <id>tag:github.com,2022-07-17:/typelevel/cats-effect</id>
    <link href="https://github.com/typelevel/cats-effect" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The pure asynchronous runtime for Scala&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cats Effect&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://index.scala-lang.org/typelevel/cats-effect/cats-effect&#34;&gt;&lt;img src=&#34;https://index.scala-lang.org/typelevel/cats-effect/cats-effect/latest.svg?color=orange&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/QNnHKHq5Ts&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/632277896739946517.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=404244&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;256px&#34; height=&#34;256px&#34; src=&#34;https://raw.githubusercontent.com/typelevel/cats-effect/series/3.x/images/cats-effect-logo.png&#34;&gt; &#xA;&lt;p&gt;Cats Effect is a high-performance, asynchronous, composable framework for building real-world applications in a purely functional style within the Typelevel ecosystem. It provides a concrete tool, known as &#34;the &lt;code&gt;IO&lt;/code&gt; monad&#34;, for capturing and controlling actions, often referred to as &#34;effects&#34;, that your program wishes to perform within a resource-safe, typed context with seamless support for concurrency and coordination. These effects may be asynchronous (callback-driven) or synchronous (directly returning values); they may return within microseconds or run infinitely.&lt;/p&gt; &#xA;&lt;p&gt;Even more importantly, Cats Effect defines a set of typeclasses which define what it means to be a purely functional runtime system. These abstractions power a thriving ecosystem consisting of streaming frameworks, JDBC database layers, HTTP servers and clients, asynchronous clients for systems like Redis and MongoDB, and so much more! Additionally, you can leverage these abstractions within your own application to unlock powerful capabilities with little-or-no code changes, for example solving problems such as dependency injection, multiple error channels, shared state across modules, tracing, and more.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wired: &lt;strong&gt;3.3.13&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tired: &lt;strong&gt;2.5.5&lt;/strong&gt; (end of life)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies += &#34;org.typelevel&#34; %% &#34;cats-effect&#34; % &#34;3.3.13&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above represents the core, stable dependency which brings in the entirety of Cats Effect. This is &lt;em&gt;most likely&lt;/em&gt; what you want. All current Cats Effect releases are published for Scala 2.12, 2.13, 3.0, and Scala.js 1.7.&lt;/p&gt; &#xA;&lt;p&gt;Or, if you prefer a less bare-bones starting point, you can try &lt;a href=&#34;https://github.com/typelevel/ce3.g8&#34;&gt;the Giter8 template&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sbt -Dsbt.version=1.5.5 new typelevel/ce3.g8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Depending on your use-case, you may want to consider one of the several other modules which are made available within the Cats Effect release. If you&#39;re a datatype implementer (like &lt;a href=&#34;https://monix.io&#34;&gt;Monix&lt;/a&gt;), you probably only want to depend on &lt;strong&gt;kernel&lt;/strong&gt; (the typeclasses) in your compile scope and &lt;strong&gt;laws&lt;/strong&gt; in your test scope:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies ++= Seq(&#xA;  &#34;org.typelevel&#34; %% &#34;cats-effect-kernel&#34; % &#34;3.3.13&#34;,&#xA;  &#34;org.typelevel&#34; %% &#34;cats-effect-laws&#34;   % &#34;3.3.13&#34; % Test)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re a middleware framework (like &lt;a href=&#34;https://fs2.io/&#34;&gt;Fs2&lt;/a&gt;), you probably want to depend on &lt;strong&gt;std&lt;/strong&gt;, which gives you access to &lt;code&gt;Queue&lt;/code&gt;, &lt;code&gt;Semaphore&lt;/code&gt;, and much more without introducing a hard-dependency on &lt;code&gt;IO&lt;/code&gt; outside of your tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies ++= Seq(&#xA;  &#34;org.typelevel&#34; %% &#34;cats-effect-std&#34; % &#34;3.3.13&#34;,&#xA;  &#34;org.typelevel&#34; %% &#34;cats-effect&#34;     % &#34;3.3.13&#34; % Test)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also find some utility in the &lt;strong&gt;testkit&lt;/strong&gt; and &lt;strong&gt;kernel-testkit&lt;/strong&gt; projects, which contain &lt;code&gt;TestContext&lt;/code&gt;, generators for &lt;code&gt;IO&lt;/code&gt;, and a few other things:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies += &#34;org.typelevel&#34; %% &#34;cats-effect-testkit&#34; % &#34;3.3.13&#34; % Test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Cats Effect provides backward binary compatibility within the 2.x and 3.x version lines, and both forward and backward compatibility within any major/minor line. This is analogous to the versioning scheme used by Cats itself, as well as other major projects such as Scala.js. Thus, any project depending upon Cats Effect 2.2.1 can be used with libraries compiled against Cats Effect 2.0.0 or 2.2.3, but &lt;em&gt;not&lt;/em&gt; with libraries compiled against 2.3.0 or higher.&lt;/p&gt; &#xA;&lt;h3&gt;Updating from Cats Effect 1.x / 2.x&lt;/h3&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://typelevel.org/cats-effect/docs/migration-guide&#34;&gt;migration guide&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Hello, World&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import cats.effect._&#xA;&#xA;object Main extends IOApp.Simple {&#xA;  val run = IO.println(&#34;Hello, World!&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you need the ability to take arguments and return exit codes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import cats.effect._&#xA;&#xA;object Main extends IOApp {&#xA;  def run(args: List[String]): IO[ExitCode] =&#xA;    if (args.headOption.map(_ == &#34;--do-it&#34;).getOrElse(false))&#xA;      IO.println(&#34;I did it!&#34;).as(ExitCode.Success)&#xA;    else&#xA;      IO.println(&#34;Didn&#39;t do it&#34;).as(ExitCode(-1))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Five Simple Rules&lt;/h2&gt; &#xA;&lt;p&gt;Any program written using Cats Effect provides incredibly strong guarantees and powerful functionality, performance, safety, and composability, provided you follow each of the following rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wrap &lt;em&gt;all&lt;/em&gt; side-effects&lt;/strong&gt; in &lt;code&gt;delay&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;, &lt;code&gt;blocking&lt;/code&gt;, or &lt;code&gt;interruptible&lt;/code&gt;/&lt;code&gt;interruptibleMany&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(pro tip: try to keep the size of your &lt;code&gt;delay&lt;/code&gt; blocks small; two &lt;code&gt;delay&lt;/code&gt;s with a &lt;code&gt;flatMap&lt;/code&gt; is much better than one big &lt;code&gt;delay&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;bracket&lt;/code&gt; or &lt;code&gt;Resource&lt;/code&gt;&lt;/strong&gt; for anything which must be &lt;code&gt;close&lt;/code&gt;d&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;Never&lt;/em&gt; hard-block a thread&lt;/strong&gt; outside of &lt;code&gt;blocking&lt;/code&gt; or &lt;code&gt;interruptible&lt;/code&gt;/&lt;code&gt;interruptibleMany&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;IOApp&lt;/code&gt;&lt;/strong&gt; instead of writing your own &lt;code&gt;def main&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Never call anything that has &lt;strong&gt;the word &lt;code&gt;unsafe&lt;/code&gt; in the name&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you follow these rules, and you use libraries and frameworks which also follow these rules, you will get a truly astonishing array of things essentially for free:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extremely high performance, elastic, and scalable applications&lt;/li&gt; &#xA; &lt;li&gt;Proven backpressure mechanisms under extreme load in real deployments&lt;/li&gt; &#xA; &lt;li&gt;Reliable resource safety in all cases&lt;/li&gt; &#xA; &lt;li&gt;Aggressive interruption of unnecessary work (e.g. timeouts), automatically, without any extra implementation effort&lt;/li&gt; &#xA; &lt;li&gt;Composable and modular application architecture (real, &lt;em&gt;practical&lt;/em&gt; functional programming)&lt;/li&gt; &#xA; &lt;li&gt;Simple, safe, and incredibly powerful concurrency mechanisms that get &lt;em&gt;faster&lt;/em&gt; under high contention&lt;/li&gt; &#xA; &lt;li&gt;Highly tuned application runtime with optimized threading and memory management semantics&lt;/li&gt; &#xA; &lt;li&gt;Powerful and orthogonal abstractions which enable architectural decomposition that scales to any problem space&lt;/li&gt; &#xA; &lt;li&gt;Access to an entire ecosystem of uniquely powerful libraries and tooling&lt;/li&gt; &#xA; &lt;li&gt;…and so much more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;img width=&#34;461px&#34; height=&#34;356px&#34; align=&#34;right&#34; alt=&#34;a bar chart showing &#39;Fixed Thread Pool&#39; and &#39;Cats Effect 3&#39;, with the latter being substantially taller than the former&#34; src=&#34;https://raw.githubusercontent.com/typelevel/cats-effect/series/3.x/images/contention.png&#34;&gt; &#xA;&lt;p&gt;Most functional and async frameworks will tout their performance on synthetic microbenchmarks, measuring things like how many &lt;code&gt;flatMap&lt;/code&gt;s they can evaluate per microsecond and so on. However, most programs aren&#39;t just a bunch of &lt;code&gt;flatMap&lt;/code&gt;s, and the true performance bottlenecks are usually in things like contention scaling under high load, memory and other resource management, backpressure, page faults, and such. In these areas, Cats Effect is truly unrivaled on the JVM, and in most cases, applications written in a purely functional style using Cats Effect will &lt;em&gt;exceed&lt;/em&gt; the performance and elasticity of the same applications written in an imperative style.&lt;/p&gt; &#xA;&lt;p&gt;The chart to the right shows the results of a synthetic benchmark simulating an extremely high-contention scheduling scenario. The scenario is typical of something like a microservice handling extremely high requests-per-second, with each request representing some sort of scatter/gather semantic in which many complex asynchronous actions must be taken in parallel to produce a timely response.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/typelevel/cats-effect/raw/220d0106ca0ff6106746a41504b6ab07d8fc9199/benchmarks/src/main/scala/cats/effect/benchmarks/WorkStealingBenchmark.scala&#34;&gt;The benchmark&lt;/a&gt; measures the performance of a typical &#34;disruptor pattern&#34; application written using a fixed thread pool (from &lt;code&gt;java.util.concurrent.Executors&lt;/code&gt;) compared to the same workflow implemented using Cats Effect (specifically version 3.0). The scores are not a typo: Cats Effect is &lt;em&gt;almost 55x faster&lt;/em&gt; than the typical disruptor-style, hand-tuned implementation. Similarly dramatic results are consistently observed when comparing Cats Effect with other popular asynchronous and functional frameworks.&lt;/p&gt; &#xA;&lt;p&gt;As always, benchmarks are one thing, and your application is its own special snowflake with its own performance profile. Always measure and test &lt;em&gt;your application&lt;/em&gt; before assuming that someone else&#39;s performance results apply in your use-case. When in doubt, &lt;a href=&#34;https://discord.gg/QNnHKHq5Ts&#34;&gt;come talk with us&lt;/a&gt; and we&#39;ll give you an honest opinion!&lt;/p&gt; &#xA;&lt;h2&gt;Abstraction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/typelevel/cats-effect/series/3.x/images/hierarchy.svg?sanitize=true&#34; alt=&#34;the cats effect hierarchy of typeclasses as of version 3.0&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cats Effect isn&#39;t just designed to enable high performance applications with out-of-the-box safety and elasticity under load. It was intended first and foremost as a tool for implementing &lt;em&gt;composable&lt;/em&gt; and &lt;em&gt;reasonable&lt;/em&gt; software that is easy to write, easy to test, and easy to evolve as your team and requirements change over time. To achieve this goal, Cats Effect embraces and enables strong, typeful, purely-functional programming styles that are uniquely tailored for the Scala language.&lt;/p&gt; &#xA;&lt;p&gt;The typical Cats Effect system is often built in terms of simple, orthogonal, primitive capabilities which come together to represent all the expressive power necessary to encode a modern asynchronous runtime. Much like how the rules of addition, multiplication, and integers come together to define much of what we understand about basic arithmetic, so too do the rules of &lt;code&gt;Functor&lt;/code&gt;, &lt;code&gt;Monad&lt;/code&gt;, and &lt;code&gt;Concurrent&lt;/code&gt; come together to define the nature of a &lt;em&gt;program&lt;/em&gt; which has all the capabilities you need.&lt;/p&gt; &#xA;&lt;p&gt;By learning and leveraging these capabilities directly, it is possible to write functions and classes which clearly state their requirements and capabilities in a &lt;em&gt;statically typed&lt;/em&gt; and discoverable fashion, improving documentation, readability, and separation of concerns.&lt;/p&gt; &#xA;&lt;p&gt;And, just as with arithmetic, even when you don&#39;t directly leverage the nature of abstract mathematics in your daily life, those laws are still present shaping the world around you and enabling powerful and surprising things like computers and trains and restaurant menus. The laws and abstractions of Cats Effect support a powerful and unique ecosystem of frameworks, giving you access to rich and advanced functionality unparalleled in any language or ecosystem, battle tested in production environments ranging from some of the largest companies in the world to some of the nimblest startups.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/typelevel/cats-effect/series/3.x/CONTRIBUTING.md&#34;&gt;&lt;strong&gt;CONTRIBUTING.md&lt;/strong&gt;&lt;/a&gt; for more details. Lots to do!&lt;/p&gt; &#xA;&lt;h3&gt;Website&lt;/h3&gt; &#xA;&lt;p&gt;To build the documentation site locally, the following dependencies are needed, in addition to &lt;code&gt;sbt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node (14.x ideally)&lt;/li&gt; &#xA; &lt;li&gt;Yarn (any version should work)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: &lt;a href=&#34;https://nixos.org/&#34;&gt;Nix&lt;/a&gt; users can just run &lt;code&gt;nix-shell&lt;/code&gt; at the root directory and follow along the next instructions.&lt;/p&gt; &#xA;&lt;p&gt;Next, check out the documentation branch along with its submodules.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout --track origin/docs&#xA;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, build the site.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build.sh host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything goes well, your browser will open at the end of this.&lt;/p&gt; &#xA;&lt;h2&gt;Tool Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img width=&#34;185px&#34; height=&#34;44px&#34; align=&#34;right&#34; src=&#34;https://www.yourkit.com/images/yklogo.png&#34;&gt;Development of Cats Effect is generously supported in part by &lt;a href=&#34;https://www.yourkit.com&#34;&gt;YourKit&lt;/a&gt; through the use of their excellent Java profiler.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2017-2022 Typelevel&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>