<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-05T02:01:30Z</updated>
  <subtitle>Weekly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>scalacenter/bloop</title>
    <updated>2023-11-05T02:01:30Z</updated>
    <id>tag:github.com,2023-11-05:/scalacenter/bloop</id>
    <link href="https://github.com/scalacenter/bloop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bloop is a build server and CLI tool to compile, test and run Scala fast from any editor or build tool.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/scalacenter/bloop/main/website/static/img/impure-logo-bloop.png&#34; alt=&#34;logo&#34; width=&#34;20%&#34; height=&#34;20%&#34;&gt; &#xA; &lt;h1&gt;Compile, test and run Scala fast&lt;/h1&gt; &#xA; &lt;img alt=&#34;GitHub All Releases&#34; src=&#34;https://img.shields.io/github/downloads/scalacenter/bloop/total.svg?color=orange&amp;amp;style=flat-square&#34;&gt; &#xA; &lt;img alt=&#34;GitHub CI&#34; src=&#34;https://github.com/scalacenter/bloop/workflows/Continuous%20Integration/badge.svg?style=flat-square&#34;&gt; &#xA; &lt;img alt=&#34;GitHub release&#34; src=&#34;https://img.shields.io/github/release/scalacenter/bloop.svg?color=green&amp;amp;logo=github&#34;&gt; &#xA; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/scalacenter/bloop.svg?color=blue&amp;amp;style=flat-square&#34;&gt; &#xA; &lt;div align=&#34;left&#34;&gt; &#xA;  &lt;br&gt; &#xA;  &lt;p&gt;Bloop is a build server for the &lt;a href=&#34;https://scala-lang.org&#34;&gt;Scala programming language&lt;/a&gt;. Bloop aspires to provide the &lt;strong&gt;best&lt;/strong&gt; out-of-the-box experience to Scala developers and a solid platform for build tool authors to consume the Scala toolchain; to compile, test or run Scala code.&lt;/p&gt; &#xA;  &lt;p&gt;Bloop integrates with editors, build tools and other Scala tooling project to support many different workflows and allow bespoke integrations.&lt;/p&gt; &#xA;  &lt;br&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Pointers üëá&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;üíª Install bloop in your computer or CI server by following &lt;a href=&#34;https://scalacenter.github.io/bloop/setup&#34;&gt;our &lt;strong&gt;Installation page&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;üìö Learn more about bloop and how to use it from your favorite build tool and editor in &lt;a href=&#34;https://scalacenter.github.io/bloop&#34;&gt;our website&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;‚öôÔ∏è Tool author? Integrate your tool with bloop by reading the &lt;a href=&#34;https://scalacenter.github.io/bloop/docs/integration&#34;&gt;Integration Guide&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;‚ùìQuestions? Unsure if bloop is useful for your use case? Ask right away in our &lt;a href=&#34;https://discord.gg/KWF9zMhJWS&#34;&gt;Discord channel&lt;/a&gt;!&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA; &lt;/div&gt;&#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>build-server-protocol/build-server-protocol</title>
    <updated>2023-11-05T02:01:30Z</updated>
    <id>tag:github.com,2023-11-05:/build-server-protocol/build-server-protocol</id>
    <link href="https://github.com/build-server-protocol/build-server-protocol" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Protocol for IDEs and build tools to communicate about compile, run, test, debug and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/build-server-protocol/build-server-protocol/master/resources/buildServerProtocol64.svg?sanitize=true&#34; alt=&#34;bsp logo&#34;&gt; Build Server Protocol&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/7tMENrnv8p&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/discord?icon=discord&amp;amp;label&#34; alt=&#34;Join the chat on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is an effort to improve the integration between language server/editors and build tools. This effort is led by the &lt;a href=&#34;https://scala.epfl.ch/&#34;&gt;Scala Center&lt;/a&gt; and &lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt;, together with the help of other tooling developers in the Scala ecosystem and beyond.&lt;/p&gt; &#xA;&lt;p&gt;Even though the protocol currently focuses on Scala developer tools, it&#39;s designed to be language-agnostic.&lt;/p&gt; &#xA;&lt;p&gt;You can read the specification &lt;a href=&#34;https://build-server-protocol.github.io/docs/specification&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The specification text, docs and support libraries for some of the supported languages are automatically generated from the &lt;a href=&#34;https://raw.githubusercontent.com/build-server-protocol/build-server-protocol/master/spec/src/main/resources/META-INF/smithy/bsp/bsp.smithy&#34;&gt;smithy model&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to the protocol, please check out our &lt;a href=&#34;https://raw.githubusercontent.com/build-server-protocol/build-server-protocol/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; doc.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Current Maintainers&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adrien Piquerez - &lt;a href=&#34;https://github.com/adpi2&#34;&gt;@adpi2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrzej G≈Çuszak - &lt;a href=&#34;https://github.com/agluszak&#34;&gt;@agluszak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chris Kipp - &lt;a href=&#34;https://github.com/ckipp01&#34;&gt;@ckipp01&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Justin Kaeser - &lt;a href=&#34;https://github.com/jastice&#34;&gt;@jastice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;≈Åukasz Wawrzyk - &lt;a href=&#34;https://github.com/lukaszwawrzyk&#34;&gt;@lukaszwawrzyk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Marcin Abramowicz - &lt;a href=&#34;https://github.com/abrams27&#34;&gt;@abrams27&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tomasz Pasternak - &lt;a href=&#34;https://github.com/tpasternak&#34;&gt;@tpasternak&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Past Maintainers&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jorge Vicente Cantero - &lt;a href=&#34;https://github.com/jvican&#34;&gt;@jvican&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;√ìlafur P√°ll Geirsson - &lt;a href=&#34;https://github.com/olafurpg&#34;&gt;@olafurpg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Protocol Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;Unreleased&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add unstable &lt;code&gt;run/printStdout&lt;/code&gt;, &lt;code&gt;run/printStderr&lt;/code&gt; and &lt;code&gt;run/readStdin&lt;/code&gt; notifications&lt;/li&gt; &#xA; &lt;li&gt;Add an optional &lt;code&gt;originId&lt;/code&gt; field to &lt;code&gt;TaskStartParams&lt;/code&gt;, &lt;code&gt;TaskProgressParams&lt;/code&gt; and &lt;code&gt;TaskFinishParams&lt;/code&gt; and deprecate it in &lt;code&gt;CompileReport&lt;/code&gt; and &lt;code&gt;TestReport&lt;/code&gt; to support BSP clients that need to distinguish between multiple reports for the same target. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Migration: Use the &lt;code&gt;originId&lt;/code&gt; field in &lt;code&gt;TaskFinishParams&lt;/code&gt; instead of &lt;code&gt;CompileReport&lt;/code&gt;/&lt;code&gt;TestReport&lt;/code&gt; to identify the report.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add optional support for environment variables and working directory parameters in &lt;code&gt;buildTarget/run&lt;/code&gt; and &lt;code&gt;buildTarget/test&lt;/code&gt; requests. Mark arguments and environment variables lists in ScalaMainClass and ScalaTestSuites deprecated as they are replaced by the parameters in the base request.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;cargo&lt;/code&gt; (Rust build tool) protocol extension&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>