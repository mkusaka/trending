<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:59:31Z</updated>
  <subtitle>Weekly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>guardian/content-api-client-aws</title>
    <updated>2024-01-28T01:59:31Z</updated>
    <id>tag:github.com,2024-01-28:/guardian/content-api-client-aws</id>
    <link href="https://github.com/guardian/content-api-client-aws" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library for helping with requests to an IAM-authorised AWS api-gateway.&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;content-api-client-aws&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;A library for helping with requests to an IAM-authorised AWS api-gateway&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://index.scala-lang.org/guardian/content-api-client-aws/content-api-client-aws&#34;&gt;&lt;img src=&#34;https://index.scala-lang.org/guardian/content-api-client-aws/content-api-client-aws/latest-by-scala-version.svg?platform=jvm&#34; alt=&#34;content-api-client-aws Scala version support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/guardian/content-api-client-aws/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/guardian/content-api-client-aws/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Creates the necessary authorisation headers based on a request. E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import com.gu.contentapi.client.{IAMSigner, IAMEncoder}&#xA;&#xA;val signer = new IAMSigner(credentialsProvider, awsRegion))&#xA;&#xA;//Query params must be encoded correctly&#xA;val queryString = IAMEncoder.encodeParams(&#34;testparam=with spaces&#34;)&#xA;&#xA;val uri = URI.create(s&#34;$endpoint/$path?$queryString&#34;)&#xA;&#xA;val headers: Map[String,String] = signer.addIAMHeaders(Map.empty[String,String], uri)&#xA;&#xA;//...create a request with uri and headers&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>com-lihaoyi/scalasql</title>
    <updated>2024-01-28T01:59:31Z</updated>
    <id>tag:github.com,2024-01-28:/com-lihaoyi/scalasql</id>
    <link href="https://github.com/com-lihaoyi/scalasql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Query SQL databases from Scala via concise, type-safe, and familiar case classes and collection operations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ScalaSql&lt;/h1&gt; &#xA;&lt;p&gt;ScalaSql is a Scala library that allows type-safe low-boilerplate querying of SQL databases, using &#34;standard&#34; Scala collections operations running against typed &lt;code&gt;Table&lt;/code&gt; descriptions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import scalasql._, SqliteDialect._&#xA;&#xA;// Define your table model classes&#xA;case class City[T[_]](&#xA;    id: T[Int],&#xA;    name: T[String],&#xA;    countryCode: T[String],&#xA;    district: T[String],&#xA;    population: T[Long]&#xA;)&#xA;object City extends Table[City]&#xA;&#xA;// Connect to your database (example uses in-memory sqlite, org.xerial:sqlite-jdbc:3.43.0.0)&#xA;val dataSource = new org.sqlite.SQLiteDataSource()&#xA;dataSource.setUrl(s&#34;jdbc:sqlite:file.db&#34;)&#xA;lazy val dbClient = new scalasql.DbClient.DataSource(&#xA;  dataSource,&#xA;  config = new scalasql.Config {&#xA;    override def nameMapper(v: String) = v.toLowerCase() // Override default snake_case mapper&#xA;    override def logSql(sql: String, file: String, line: Int) = println(s&#34;$file:$line $sql&#34;)&#xA;  }&#xA;)&#xA;&#xA;dbClient.transaction{ db =&amp;gt;&#xA;&#xA;  // Initialize database table schema and data&#xA;  db.updateRaw(os.read(os.Path(&#34;scalasql/test/resources/world-schema.sql&#34;, os.pwd)))&#xA;  db.updateRaw(os.read(os.Path(&#34;scalasql/test/resources/world-data.sql&#34;, os.pwd)))&#xA;&#xA;  // Adding up population of all cities in China&#xA;  val citiesPop = db.run(City.select.filter(_.countryCode === &#34;CHN&#34;).map(_.population).sum)&#xA;  // SELECT SUM(city0.population) AS res FROM city city0 WHERE city0.countrycode = ?&#xA;  println(citiesPop)&#xA;  // 175953614&#xA;&#xA;  // Finding the 5-8th largest cities by population&#xA;  val fewLargestCities = db.run(&#xA;    City.select&#xA;        .sortBy(_.population).desc&#xA;        .drop(5).take(3)&#xA;        .map(c =&amp;gt; (c.name, c.population))&#xA;  )&#xA;  // SELECT city0.name AS res__0, city0.population AS res__1&#xA;  // FROM city city0 ORDER BY res__1 DESC LIMIT ? OFFSET ?&#xA;  println(fewLargestCities)&#xA;  // Seq((Karachi, 9269265), (Istanbul, 8787958), (Ciudad de MÃ©xico, 8591309))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ScalaSql supports PostgreSQL, MySQL, Sqlite, and H2 databases. Support for additional databases can be easily added.&lt;/p&gt; &#xA;&lt;p&gt;ScalaSql is a relatively new library, so please try it out, but be aware you may hit bugs or missing features! Please open &lt;a href=&#34;https://github.com/com-lihaoyi/scalasql/discussions&#34;&gt;Discussions&lt;/a&gt; for any questions, file &lt;a href=&#34;https://github.com/com-lihaoyi/scalasql/issues&#34;&gt;Issues&lt;/a&gt; for any bugs you hit, or send &lt;a href=&#34;https://github.com/com-lihaoyi/scalasql/pulls&#34;&gt;Pull Requests&lt;/a&gt; if you are able to investigate and fix them!&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with ScalaSql, add it to your &lt;code&gt;build.sc&lt;/code&gt; file as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;ivy&#34;com.lihaoyi::scalasql:0.1.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ScalaSql Quickstart Examples: self-contained files showing how to set up ScalaSql with a variety of supported databases and perform simple DDL and &lt;code&gt;SELECT&lt;/code&gt;/&lt;code&gt;INSERT&lt;/code&gt;/&lt;code&gt;UPDATE&lt;/code&gt;/&lt;code&gt;DELETE&lt;/code&gt; operations:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/scalasql/test/src/example/PostgresExample.scala&#34;&gt;Postgres&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/scalasql/test/src/example/MySqlExample.scala&#34;&gt;MySql&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/scalasql/test/src/example/SqliteExample.scala&#34;&gt;Sqlite&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/scalasql/test/src/example/H2Example.scala&#34;&gt;H2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/scalasql/test/src/example/HikariCpExample.scala&#34;&gt;HikariCP&lt;/a&gt; (and other connection pools)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/tutorial.md&#34;&gt;ScalaSql Tutorial&lt;/a&gt;: a structured walkthrough of how to use ScalaSql, connecting to a database and writing queries to &lt;code&gt;SELECT&lt;/code&gt;/&lt;code&gt;INSERT&lt;/code&gt;/&lt;code&gt;UPDATE&lt;/code&gt;/&lt;code&gt;DELETE&lt;/code&gt; against it to perform useful work. Ideal for newcomers to work through from top to bottom when getting started with the library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/cheatsheet.md&#34;&gt;ScalaSql Cheat Sheet&lt;/a&gt;: a compact summary of the main features of ScalaSql and the syntax to make use of them.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md&#34;&gt;ScalaSql Reference&lt;/a&gt;: a detailed listing of ScalaSql functionality, comprehensively covering everything that ScalaSql supports, in a single easily searchable place. Ideal for looking up exactly methods/operators ScalaSql supports, looking up how ScalaSql code translates to SQL, or looking up SQL syntax to find out how to express it using ScalaSql. Useful subsections include:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#dbapi&#34;&gt;DbApi&lt;/a&gt;, covering the main methods you can all to execute queries&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#transaction&#34;&gt;Transaction&lt;/a&gt;, covering usage of transactions and savepoints&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#select&#34;&gt;Select&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#insert&#34;&gt;Insert&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#update&#34;&gt;Update&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#delete&#34;&gt;Delete&lt;/a&gt;: covering operations on the primary queries you are likely to use&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#join&#34;&gt;Join&lt;/a&gt;, covering different kinds of joins&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#returning&#34;&gt;Returning&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#onconflict&#34;&gt;On Conflict&lt;/a&gt;: covering these modifiers on &lt;code&gt;INSERT&lt;/code&gt; and &lt;code&gt;UPDATE&lt;/code&gt; for the databases that support them&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#exprops&#34;&gt;Expression Operations&lt;/a&gt;, covering the different types of &lt;code&gt;Expr[T]&lt;/code&gt; values and the different operations you can do on each one&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#optional&#34;&gt;Option Operations&lt;/a&gt;, operations on &lt;code&gt;Expr[Option[T]&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#windowfunctions&#34;&gt;Window Functions&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#withcte&#34;&gt;With-Clauses/Common-Table-Expressions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#postgresdialect&#34;&gt;Postgres&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#mysqldialect&#34;&gt;MySql&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#sqlitedialect&#34;&gt;Sqlite&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/reference.md#h2dialect&#34;&gt;H2&lt;/a&gt; Dialects: operations that are specific to each database that may not be generally applicable&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/design.md&#34;&gt;ScalaSql Design&lt;/a&gt;: discusses the design of the ScalaSql library, why it is built the way it is, what tradeoffs it makes, and how it compares to other common Scala database query libraries. Ideal for contributors who want to understand the structure of the ScalaSql codebase, or for advanced users who may need to understand enough to extend ScalaSql with custom functionality.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/com-lihaoyi/scalasql/main/docs/developer.md&#34;&gt;Developer Docs&lt;/a&gt;: things you should read if you want to make changes to the &lt;code&gt;com-lihaoyi/scalasql&lt;/code&gt; codebase&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;0.1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First release!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;TODO&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scala 3 support&lt;/li&gt; &#xA; &lt;li&gt;JSON columns&lt;/li&gt; &#xA; &lt;li&gt;Add datetime functions&lt;/li&gt; &#xA; &lt;li&gt;Make &lt;code&gt;implicit ctx =&amp;gt;&lt;/code&gt; for defining &lt;code&gt;sql&#34;...&#34;&lt;/code&gt; snippets optional&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hmrc/jan-24-nic-change-calculator-admin-frontend</title>
    <updated>2024-01-28T01:59:31Z</updated>
    <id>tag:github.com,2024-01-28:/hmrc/jan-24-nic-change-calculator-admin-frontend</id>
    <link href="https://github.com/hmrc/jan-24-nic-change-calculator-admin-frontend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jan-24-nic-change-calculator-admin-frontend&lt;/h1&gt; &#xA;&lt;p&gt;This is a placeholder README.md for a new repository&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;This code is open source software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/hmrc/jan-24-nic-change-calculator-admin-frontend/main/%22http://www.apache.org/licenses/LICENSE-2.0.html%22&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>