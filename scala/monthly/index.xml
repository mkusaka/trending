<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-01T01:53:52Z</updated>
  <subtitle>Monthly Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>enso-org/enso</title>
    <updated>2024-11-01T01:53:52Z</updated>
    <id>tag:github.com,2024-11-01:/enso-org/enso</id>
    <link href="https://github.com/enso-org/enso" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hybrid visual and textual functional programming.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://enso.org&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1623053/114557275-cbd27a80-9c69-11eb-9e4d-a60187cdb7a4.gif&#34; width=&#34;640&#34; height=&#34;640&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/enso&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/401396655599124480.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Chat&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/enso-org/enso/actions&#34;&gt; &lt;img src=&#34;https://github.com/enso-org/enso/workflows/Engine%20CI/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/enso-org/enso/actions&#34;&gt; &lt;img src=&#34;https://github.com/enso-org/enso/workflows/GUI%20CI/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/enso-org/enso/raw/develop/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=Compiler%20License&amp;amp;message=Apache%20v2&amp;amp;color=2ec352&amp;amp;labelColor=2c3239&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/enso-org/enso/raw/develop/app/gui/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=GUI%20License&amp;amp;message=AGPL%20v3&amp;amp;color=2ec352&amp;amp;labelColor=2c3239&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://enso.org&#34;&gt;Enso.org&lt;/a&gt;. Get insights you can rely on. In real time.&lt;/h1&gt; &#xA;&lt;p&gt;Enso is an award-winning interactive programming language with dual visual and textual representations. It is a tool that spans the entire stack, going from high-level visualization and communication to the nitty-gritty of backend services, all in a single language. Watch the following introduction video to learn what Enso is, and how it helps companies build data workflows in minutes instead of weeks.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=fQvWMoOjmQk&#34; rel=&#34;nofollow&#34;&gt; &lt;img width=&#34;692&#34; alt=&#34;Screenshot 2021-04-15 at 12 16 32&#34; src=&#34;https://user-images.githubusercontent.com/1623053/114854125-c8173300-9de4-11eb-9b10-99a331eb2251.png&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Enso&#39;s Features&lt;/h1&gt; &#xA;&lt;p&gt;Turning your data into knowledge is slow and error-prone. You can’t trust tools that don’t embrace best practices and provide quality assurance. Enso redefines the way you can work with your data: it is interactive, provides intelligent assistance, and was designed on a strong mathematical foundation, so you can always trust the results you get.&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;44px&#34; src=&#34;https://raw.githubusercontent.com/enso-org/icons/master/blue/with-bg/it/web-apps-development/001-algorithm.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Intelligent suggestions of possible next steps. Build workflows in minutes instead of weeks.&lt;/b&gt;&#xA;  &lt;br&gt; Enso analyses the data, suggests possible next steps, and displays related help and examples. It lets you build dashboards, RPA workflows, and apps, with no coding required. Enso ships with a robust set of libraries, allowing you to work with local files, databases, HTTP services, and other applications in a seamless fashion. &#xA;  &lt;br&gt;&#xA;  &lt;a href=&#34;https://enso.org&#34;&gt;Learn more →&lt;/a&gt;&#xA;  &lt;a&gt;&lt;/a&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;44px&#34; src=&#34;https://raw.githubusercontent.com/enso-org/icons/master/blue/with-bg/it/badges/018-military.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Reproducible, trustworthy results.&lt;/b&gt;&#xA;  &lt;br&gt; Versioning and visual data quality management allow you to trust the results that you get. &#xA;  &lt;br&gt;&#xA;  &lt;a href=&#34;https://enso.org&#34;&gt;Learn more →&lt;/a&gt;&#xA;  &lt;a&gt;&lt;/a&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;44px&#34; src=&#34;https://raw.githubusercontent.com/enso-org/icons/master/blue/with-bg/it/basic-ui/041-graph.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;A powerful, purely functional language. Both visual and textual.&lt;/b&gt;&#xA;  &lt;br&gt; Enso incorporates many recent innovations in data processing and programming language design to allow you to work interactively and trust the results that you get. It is a purely functional programming language with higher-order functions, user-defined algebraic datatypes, pattern-matching, and two equivalent representations that you can switch between on-demand. &#xA;  &lt;br&gt;&#xA;  &lt;a href=&#34;https://enso.org&#34;&gt;Learn more →&lt;/a&gt;&#xA;  &lt;a&gt;&lt;/a&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;44px&#34; src=&#34;https://raw.githubusercontent.com/enso-org/icons/master/blue/with-bg/it/business/036-puzzle.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Mix languages with close-to-zero interop overhead.&lt;/b&gt;&#xA;  &lt;br&gt; Import any library from Enso, Java, JavaScript, R, or Python, and use functions, callbacks, and data types without any wrappers. Enso uses &#xA;  &lt;a href=&#34;https://www.graalvm.org&#34;&gt;GraalVM&lt;/a&gt; to compile them to the same instruction set with a unified memory model. &#xA;  &lt;br&gt;&#xA;  &lt;a href=&#34;https://enso.org&#34;&gt;Learn more →&lt;/a&gt;&#xA;  &lt;a&gt;&lt;/a&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;44px&#34; src=&#34;https://raw.githubusercontent.com/enso-org/icons/master/blue/with-bg/it/startup-and-new-business/051-rocket.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Fast. Up to 80x faster than Python.&lt;/b&gt;&#xA;  &lt;br&gt; It can even run other languages faster than their official runtimes. &#xA;  &lt;a href=&#34;https://github.com/oracle/fastr&#34;&gt;Enso-R (using FastR on the GraalVM)&lt;/a&gt; is 36x faster than GNU-R. &#xA;  &lt;br&gt;&#xA;  &lt;a href=&#34;https://github.com/enso-org/benchmarks&#34;&gt;See benchmarks →&lt;/a&gt;&#xA;  &lt;a&gt;&lt;/a&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;44px&#34; src=&#34;https://raw.githubusercontent.com/enso-org/icons/master/blue/with-bg/it/school/063-palette.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;A cutting-edge visualization engine.&lt;/b&gt;&#xA;  &lt;br&gt; Enso is equipped with a highly-tailored WebGL visualization engine capable of displaying many millions of data points at 60 frames per second in a web browser. Currently, Enso includes a set of core data visualizations out of the box, and you can easily extend it with libraries such as D3.js, Three.js, Babylon.js, deck.gl, VTK.js, Potree, and many more. &#xA;  &lt;br&gt;&#xA;  &lt;a href=&#34;https://enso.org&#34;&gt;Learn more →&lt;/a&gt;&#xA;  &lt;a&gt;&lt;/a&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;44px&#34; src=&#34;https://raw.githubusercontent.com/enso-org/icons/master/blue/with-bg/it/shipping/004-cargo-ship.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Runs everywhere.&lt;/b&gt;&#xA;  &lt;br&gt; Enso is available on macOS, Windows, and GNU/Linux, and the Enso IDE runs on web-native technologies. In time, you&#39;ll be able to run it in the web-browser, giving even your tablet and phone access to your data. &#xA;  &lt;br&gt;&#xA;  &lt;a href=&#34;https://enso.org&#34;&gt;Learn more →&lt;/a&gt;&#xA;  &lt;a&gt;&lt;/a&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; alt=&#34;An example Enso graph&#34; src=&#34;https://user-images.githubusercontent.com/1623053/105841783-7c1ed400-5fd5-11eb-8493-7c6a629a84b7.png&#34; width=&#34;380&#34;&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;36px&#34; src=&#34;https://github.com/google/material-design-icons/raw/master/src/action/get_app/materialiconsround/24px.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Download Enso&lt;/b&gt;&#xA;  &lt;br&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/enso-org/enso/releases&#34;&gt;Enso Interactive Environment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/enso-org/enso/releases&#34;&gt;Enso Compiler (CLI, optional)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;36px&#34; src=&#34;https://github.com/google/material-design-icons/raw/master/src/social/school/materialiconsround/24px.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Watch Tutorials&lt;/b&gt;&#xA;  &lt;br&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/enso-org/enso/raw/develop/app/gui/docs/product/shortcuts.md&#34;&gt;Enso keyboard shortcuts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/_Twh45PI_vU&amp;amp;list=PLk8NuufOVK01GhaObYr1_gqeASlkj2um0&#34;&gt;Enso 101&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/hFxugfGbvGI?list=PLk8NuufOVK01GhaObYr1_gqeASlkj2um0&#34;&gt;Analyze trams data&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/gXnojGR6wOI?list=PLk8NuufOVK01GhaObYr1_gqeASlkj2um0&#34;&gt;Analyze GitHub Stargazers data&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLk8NuufOVK01GhaObYr1_gqeASlkj2um0&#34;&gt;... other tutorials&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;36px&#34; src=&#34;https://github.com/google/material-design-icons/raw/master/src/hardware/cast_for_education/materialiconsround/24px.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Watch Video Podcasts&lt;/b&gt;&#xA;  &lt;br&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=U3pb7HiZIBg&amp;amp;t=2996s&amp;amp;ab_channel=Enso&#34;&gt;Enso Textual Language Basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/bcpOEX1x06I&#34;&gt;Using Java libraries in Enso&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/wFkh5LgAZTs&#34;&gt;Custom data visualizations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/BibjcUjdkO4&#34;&gt;Enso vision. What is in the future?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/Enso_org/videos?view=2&amp;amp;sort=dd&amp;amp;live_view=503&amp;amp;shelf_id=3&#34;&gt;... other video podcasts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;36px&#34; src=&#34;https://github.com/google/material-design-icons/raw/master/src/communication/forum/materialiconsround/24px.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Join Our Community&lt;/b&gt;&#xA;  &lt;br&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://discord.gg/enso&#34;&gt;Discord chat. Get help, share your use cases, meet the team behind Enso and other Enso users!&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;36px&#34; src=&#34;https://github.com/google/material-design-icons/raw/master/src/av/new_releases/materialiconsround/24px.svg?sanitize=true&#34;&gt; &#xA;&lt;ul&gt;&#xA; &lt;ul&gt; &#xA;  &lt;b&gt;Keep Up With the Latest Updates&lt;/b&gt;&#xA;  &lt;br&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/@enso_org&#34;&gt;Enso Development Blog&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://eepurl.com/bRru9j&#34;&gt;Enso Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/ul&gt;&#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Enso Source Code&lt;/h1&gt; &#xA;&lt;p&gt;If you want to start &lt;em&gt;using&lt;/em&gt; Enso, please see the download links in the &lt;a href=&#34;https://raw.githubusercontent.com/enso-org/enso/develop/#getting-started&#34;&gt;getting started&lt;/a&gt; section above. Alternatively, you can get the IDE &lt;a href=&#34;https://github.com/enso-org/enso/releases&#34;&gt;here&lt;/a&gt;. This section is intended for people interested in contributing to the development of Enso.&lt;/p&gt; &#xA;&lt;p&gt;Enso is a community-driven open source project which is, and will always be, open and free to use. Join us, help us to build it, and spread the word!&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Project Components&lt;/h3&gt; &#xA;&lt;p&gt;Enso consists of several sub projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enso Engine:&lt;/strong&gt; The Enso Engine is the set of tools that implement the Enso language and its associated services. These include the Enso interpreter, a just-in-time compiler and runtime (both powered by &lt;a href=&#34;https://www.graalvm.org&#34;&gt;GraalVM&lt;/a&gt;), and a language server that lets you inspect Enso code as it runs. These components can be used on their own as command line tools.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enso IDE:&lt;/strong&gt; The &lt;a href=&#34;https://github.com/enso-org/enso/tree/develop/app/gui&#34;&gt;Enso IDE&lt;/a&gt; is a desktop application that allows working with the visual form of Enso. It consists of an Electron application, a high performance WebGL UI framework, and the searcher which provides contextual search, hints, and documentation for all of Enso&#39;s functionality.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;The Enso Engine is licensed under the &lt;a href=&#34;https://opensource.org/licenses/apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;, as specified in the &lt;a href=&#34;https://github.com/enso-org/enso/raw/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file. The Enso IDE is licensed under the &lt;a href=&#34;https://opensource.org/licenses/AGPL-3.0&#34;&gt;AGPL 3.0&lt;/a&gt;, as specified in the &lt;a href=&#34;https://github.com/enso-org/enso/raw/develop/app/gui/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;This license set was chosen to provide you with complete freedom to use Enso, create libraries, and release them under any license of your choice, while also allowing us to release commercial products on top of the platform, including Enso Cloud and Enso Enterprise server managers.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Contributing to Enso&lt;/h3&gt; &#xA;&lt;p&gt;Enso is a community-driven open source project which is and will always be open and free to use. We are committed to a fully transparent development process and highly appreciate every contribution. If you love the vision behind Enso and you want to redefine the data processing world, join us and help us track down bugs, implement new features, improve the documentation or spread the word!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to help us make this vision a reality, please feel free to join our &lt;a href=&#34;https://discord.gg/enso&#34;&gt;chat&lt;/a&gt;, and take a look at our &lt;a href=&#34;https://raw.githubusercontent.com/enso-org/enso/develop/docs/CONTRIBUTING.md&#34;&gt;development and contribution guidelines&lt;/a&gt;. The latter describes all the ways in which you can help out with the project, as well as provides detailed instructions for building and hacking on Enso.&lt;/p&gt; &#xA;&lt;p&gt;If you believe that you have found a security vulnerability in Enso, or that you have a bug report that poses a security risk to Enso&#39;s users, please take a look at our &lt;a href=&#34;https://raw.githubusercontent.com/enso-org/enso/develop/docs/SECURITY.md&#34;&gt;security guidelines&lt;/a&gt; for a course of action.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Enso&#39;s Design&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to gain a better understanding of the principles on which Enso is based, or just delve into the why&#39;s and what&#39;s of Enso&#39;s design, please take a look in the &lt;a href=&#34;https://raw.githubusercontent.com/enso-org/enso/develop/docs/&#34;&gt;&lt;code&gt;docs/&lt;/code&gt; folder&lt;/a&gt;. It is split up into subfolders for each component of Enso. You can view this same documentation in a rendered form at &lt;a href=&#34;https://enso.org/docs/developer&#34;&gt;the developer docs website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This folder also contains a document on Enso&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/enso-org/enso/develop/docs/enso-philosophy.md&#34;&gt;design philosophy&lt;/a&gt;, that details the thought process that we use when contemplating changes or additions to the language.&lt;/p&gt; &#xA;&lt;p&gt;This documentation will evolve as Enso does, both to help newcomers to the project understand the reasoning behind the code, and also to act as a record of the decisions that have been made through Enso&#39;s evolution.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>firesim/firesim</title>
    <updated>2024-11-01T01:53:52Z</updated>
    <id>tag:github.com,2024-11-01:/firesim/firesim</id>
    <link href="https://github.com/firesim/firesim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FireSim: Fast and Effortless FPGA-accelerated Hardware Simulation with On-Prem and Cloud Flexibility&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FireSim: Fast and Effortless FPGA-accelerated Hardware Simulation with On-Prem and Cloud Flexibility&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://readthedocs.org/projects/firesim/badge/&#34; alt=&#34;FireSim Documentation Status&#34;&gt; &lt;img src=&#34;https://github.com/firesim/firesim/actions/workflows/firesim-run-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Github Actions Status&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;We held the First FireSim and Chipyard User/Developer Workshop at ASPLOS 2023 on March 26, 2023! This workshop featured a full-day of talks from users and developers in the FireSim and Chipyard community. YouTube videos of the talks are available on the &lt;a href=&#34;https://fires.im/workshop-2023/&#34;&gt;2023 Workshop Page&lt;/a&gt;!&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/#using-firesim&#34;&gt;Using FireSim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/#what-is-firesim&#34;&gt;What is FireSim?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/#what-can-i-simulate-with-firesim&#34;&gt;What can I simulate with FireSim?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/#need-help&#34;&gt;Need help?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/#publications&#34;&gt;Publications&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Using FireSim&lt;/h2&gt; &#xA;&lt;p&gt;To get started with FireSim, you can find our extensive documentation and getting-started guide at &lt;a href=&#34;https://docs.fires.im&#34;&gt;docs.fires.im&lt;/a&gt;. The FireSim codebase is open-source at &lt;a href=&#34;https://github.com/firesim/firesim&#34;&gt;github.com/firesim/firesim&lt;/a&gt; and we welcome pull requests and issues. You can also get help from the FireSim user community on our &lt;a href=&#34;https://groups.google.com/forum/#!forum/firesim&#34;&gt;User Forum&lt;/a&gt;. Additionally, we frequently run tutorials at various conferences and events; for overview purposes, you can find the most recent slide decks at &lt;a href=&#34;https://fires.im/tutorial-recent&#34;&gt;fires.im/tutorial-recent&lt;/a&gt; (you should still follow &lt;a href=&#34;https://docs.fires.im&#34;&gt;docs.fires.im&lt;/a&gt; for the most up to date getting-started guide).&lt;/p&gt; &#xA;&lt;p&gt;Another good overview from a recent event (in video format) can be found &lt;a href=&#34;https://www.youtube.com/watch?v=_leRHbe5t6M&#34;&gt;on YouTube&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is FireSim?&lt;/h2&gt; &#xA;&lt;p&gt;FireSim is an &lt;a href=&#34;https://github.com/firesim/firesim&#34;&gt;open-source&lt;/a&gt; FPGA-accelerated full-system hardware simulation platform that makes it easy to validate, profile, and debug RTL hardware implementations at 10s to 100s of MHz. FireSim simplifies co-simulating ASIC RTL with cycle-accurate hardware and software models for other system components (e.g. I/Os). FireSim can productively scale from individual SoC simulations hosted on on-prem FPGAs (e.g., a single Xilinx Alveo board attached to a desktop) to massive datacenter-scale simulations harnessing hundreds of cloud FPGAs (e.g., on Amazon EC2 F1).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Who&#39;s using and developing FireSim?&lt;/strong&gt; FireSim users across academia and industry (at 20+ institutions) have published over 40 papers using FireSim in many areas, including computer architecture, systems, networking, security, scientific computing, circuits, design automation, and more (see the &lt;a href=&#34;https://fires.im/publications/&#34;&gt;Publications page&lt;/a&gt;). FireSim has also been used in the development of shipping commercial silicon. FireSim was originally developed in the &lt;a href=&#34;https://eecs.berkeley.edu&#34;&gt;Electrical Engineering and Computer Sciences Department&lt;/a&gt; at the &lt;a href=&#34;https://berkeley.edu&#34;&gt;University of California, Berkeley&lt;/a&gt;, but now has industrial and academic contributors from all over the world.&lt;/p&gt; &#xA;&lt;p&gt;You can learn more about FireSim in the following places:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;FireSim website&lt;/strong&gt;: &lt;a href=&#34;https://fires.im&#34;&gt;https://fires.im&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FireSim ISCA 2018 Paper&lt;/strong&gt;: &lt;a href=&#34;https://sagark.org/assets/pubs/firesim-isca2018.pdf&#34;&gt;Paper PDF&lt;/a&gt; | &lt;a href=&#34;https://ieeexplore.ieee.org/document/8416816&#34;&gt;IEEE Xplore&lt;/a&gt; | &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3276543&#34;&gt;ACM DL&lt;/a&gt; | &lt;a href=&#34;https://sagark.org/assets/pubs/firesim-isca2018.bib.txt&#34;&gt;BibTeX&lt;/a&gt; | Selected as one of IEEE Micro’s “Top Picks from Computer Architecture Conferences, 2018”.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FireSim ISCA-50 Retrospective&lt;/strong&gt;: &lt;a href=&#34;https://sites.coecis.cornell.edu/isca50retrospective/files/2023/06/Karandikar_2018_FireSim.pdf&#34;&gt;Paper PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FireSim documentation&lt;/strong&gt;: &lt;a href=&#34;https://docs.fires.im&#34;&gt;https://docs.fires.im&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scala API Documentation&lt;/strong&gt;: &lt;a href=&#34;https://fires.im/firesim/latest/api/&#34;&gt;https://fires.im/firesim/latest/api/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LatchUp 2023 Update Talk&lt;/strong&gt;: &lt;a href=&#34;https://www.youtube.com/watch?v=_leRHbe5t6M&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FireSim (+Chipyard) Tutorial&lt;/strong&gt;: &lt;a href=&#34;https://fires.im/tutorial-recent/&#34;&gt;https://fires.im/tutorial-recent/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ASPLOS 2023 Tutorial Videos&lt;/strong&gt;: &lt;a href=&#34;https://www.youtube.com/playlist?list=PL-YKJjRMRb9xe1RP4uoM69CRyXZZFy2ta&#34;&gt;YouTube Playlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Updates/News&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt; | &lt;a href=&#34;https://fires.im/blog/&#34;&gt;FireSim Blog&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/firesimproject&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What can I simulate with FireSim?&lt;/h2&gt; &#xA;&lt;p&gt;FireSim can simulate arbitrary hardware designs written in &lt;a href=&#34;https://chisel.eecs.berkeley.edu&#34;&gt;Chisel&lt;/a&gt; or Verilog. With FireSim, users can write their own RTL (processors, accelerators, etc.) and run it at near-FPGA-prototype speeds on cloud or on-prem FPGAs, while obtaining performance results that match an ASIC implementation of the same design. Depending on the hardware design and the simulation scale, FireSim simulations run at 10s to 100s of MHz. Users can also integrate custom software models for components that they don&#39;t need or want to write as RTL. To help construct a closed and deterministic simulated environment around a design, FireSim includes validated and high-performance HW/SW models for I/Os like DRAM, Ethernet, Disks, UART, and more. The &lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/publications.md#userpapers&#34;&gt;User Publications page&lt;/a&gt; links to a selection of papers written by FireSim users.&lt;/p&gt; &#xA;&lt;p&gt;FireSim was originally developed to simulate datacenters by combining open RTL for RISC-V processors with a custom cycle-accurate network simulation. By default, FireSim provides all the RTL and models necessary to cycle-exactly simulate from one to thousands of multi-core compute nodes, derived directly from silicon-proven and open target-RTL (&lt;a href=&#34;https://riscv.org/&#34;&gt;RISC-V&lt;/a&gt; &lt;a href=&#34;https://github.com/freechipsproject/rocket-chip&#34;&gt;Rocket Chip&lt;/a&gt;, &lt;a href=&#34;https://github.com/ucb-bar/riscv-boom&#34;&gt;BOOM&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ucb-bar/chipyard&#34;&gt;Chipyard&lt;/a&gt;), with an optional cycle-accurate network simulation tying them together. FireSim also provides a &lt;a href=&#34;https://github.com/firesim/firemarshal&#34;&gt;Linux distribution&lt;/a&gt; that is compatible with the RISC-V systems it simulates and &lt;a href=&#34;https://docs.fires.im/en/latest/Advanced-Usage/Workloads/Defining-Custom-Workloads.html&#34;&gt;automates&lt;/a&gt; the process of including new workloads into this Linux distribution. These simulations run fast enough to interact with Linux on the simulated system at the command line, &lt;a href=&#34;https://twitter.com/firesimproject/status/1031267637303508993&#34;&gt;like a real computer&lt;/a&gt;. Users can even &lt;a href=&#34;http://docs.fires.im/en/latest/Advanced-Usage/Miscellaneous-Tips.html#experimental-support-for-sshing-into-simulated-nodes-and-accessing-the-internet-from-within-simulations&#34;&gt;SSH into simulated systems in FireSim&lt;/a&gt; and access the Internet from within them.&lt;/p&gt; &#xA;&lt;p&gt;Head to the &lt;a href=&#34;https://fires.im&#34;&gt;FireSim Website&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join the FireSim Mailing list: &lt;a href=&#34;https://groups.google.com/forum/#!forum/firesim&#34;&gt;https://groups.google.com/forum/#!forum/firesim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Post an issue on this repo&lt;/li&gt; &#xA; &lt;li&gt;Follow on Twitter for project updates: &lt;a href=&#34;https://twitter.com/firesimproject&#34;&gt;@firesimproject&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firesim/firesim/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Publications&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;ISCA 2018&lt;/strong&gt;: FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud&lt;/h3&gt; &#xA;&lt;p&gt;You can learn more about FireSim in our ISCA 2018 paper, which covers the overall FireSim infrastructure and large distributed simulations of networked clusters. This paper was selected as one of &lt;strong&gt;IEEE Micro’s &#34;Top Picks from Computer Architecture Conferences, 2018&#34;&lt;/strong&gt; and for &lt;strong&gt;&#34;ISCA@50 25-year Retrospective 1996-2020&#34;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Sagar Karandikar, Howard Mao, Donggyu Kim, David Biancolin, Alon Amid, Dayeol Lee, Nathan Pemberton, Emmanuel Amaro, Colin Schmidt, Aditya Chopra, Qijing Huang, Kyle Kovacs, Borivoje Nikolic, Randy Katz, Jonathan Bachrach, and Krste Asanović. &lt;strong&gt;FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud&lt;/strong&gt;. &lt;em&gt;In proceedings of the 45th International Symposium on Computer Architecture (ISCA’18)&lt;/em&gt;, Los Angeles, CA, June 2018.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sagark.org/assets/pubs/firesim-isca2018.pdf&#34;&gt;Paper PDF&lt;/a&gt; | &lt;a href=&#34;https://ieeexplore.ieee.org/document/8416816&#34;&gt;IEEE Xplore&lt;/a&gt; | &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3276543&#34;&gt;ACM DL&lt;/a&gt; | &lt;a href=&#34;https://sagark.org/assets/pubs/firesim-isca2018.bib.txt&#34;&gt;BibTeX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;FPGA 2019&lt;/strong&gt;: FASED: FPGA-Accelerated Simulation and Evaluation of DRAM&lt;/h3&gt; &#xA;&lt;p&gt;Our paper from FPGA 2019 details the DRAM model used in FireSim:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;David Biancolin, Sagar Karandikar, Donggyu Kim, Jack Koenig, Andrew Waterman, Jonathan Bachrach, Krste Asanović, &lt;strong&gt;FASED: FPGA-Accelerated Simulation and Evaluation of DRAM&lt;/strong&gt;, &lt;em&gt;In proceedings of the 27th ACM/SIGDA International Symposium on Field-Programmable Gate Arrays&lt;/em&gt;, Seaside, CA, February 2018.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://people.eecs.berkeley.edu/~biancolin/papers/fased-fpga19.pdf&#34;&gt;Paper PDF&lt;/a&gt; | &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3293894&#34;&gt;ACM DL&lt;/a&gt; | &lt;a href=&#34;https://people.eecs.berkeley.edu/~biancolin/bib/fased-fpga19.bib&#34;&gt;BibTeX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;IEEE Micro Top Picks of 2018&lt;/strong&gt;: FireSim: FPGA-Accelerated, Cycle-Accurate Scale-Out System Simulation in the Public Cloud&lt;/h3&gt; &#xA;&lt;p&gt;This article discusses several updates since the FireSim ISCA 2018 paper:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Sagar Karandikar, Howard Mao, Donggyu Kim, David Biancolin, Alon Amid, Dayeol Lee, Nathan Pemberton, Emmanuel Amaro, Colin Schmidt, Aditya Chopra, Qijing Huang, Kyle Kovacs, Borivoje Nikolic, Randy Katz, Jonathan Bachrach, and Krste Asanović. &lt;strong&gt;FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud&lt;/strong&gt;. &lt;em&gt;IEEE Micro, vol. 39, no. 3, pp. 56-65, (Micro Top Picks 2018 Issue)&lt;/em&gt;. May-June 2019.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sagark.org/assets/pubs/firesim-micro-top-picks2018.pdf&#34;&gt;Article PDF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;ICCAD 2019&lt;/strong&gt;: Golden Gate: Bridging The Resource-Efficiency Gap Between ASICs and FPGA Prototypes&lt;/h3&gt; &#xA;&lt;p&gt;Our paper describing FireSim&#39;s Compiler, &lt;em&gt;Golden Gate&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Albert Magyar, David T. Biancolin, Jack Koenig, Sanjit Seshia, Jonathan Bachrach, Krste Asanović, &lt;strong&gt;Golden Gate: Bridging The Resource-Efficiency Gap Between ASICs and FPGA Prototypes&lt;/strong&gt;, &lt;em&gt;In proceedings of the 39th International Conference on Computer-Aided Design (ICCAD &#39;19)&lt;/em&gt;, Westminster, CO, November 2019.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://davidbiancolin.github.io/papers/goldengate-iccad19.pdf&#34;&gt;Paper PDF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;ASPLOS 2020&lt;/strong&gt;: FirePerf: FPGA-Accelerated Full-System Hardware/Software Performance Profiling and Co-Design&lt;/h3&gt; &#xA;&lt;p&gt;Our paper that discusses system-level profiling features in FireSim:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Sagar Karandikar, Albert Ou, Alon Amid, Howard Mao, Randy Katz, Borivoje Nikolić, and Krste Asanović, &lt;strong&gt;FirePerf: FPGA-Accelerated Full-System Hardware/Software Performance Profiling and Co-Design&lt;/strong&gt;, &lt;em&gt;In Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS 2020)&lt;/em&gt;, Lausanne, Switzerland, March 2020.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sagark.org/assets/pubs/fireperf-asplos2020.pdf&#34;&gt;Paper PDF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;IEEE MICRO 2021&lt;/strong&gt;: Accessible, FPGA Resource-Optimized Simulation of Multi-Clock Systems in FireSim&lt;/h3&gt; &#xA;&lt;p&gt;In this special issue, we describe the automated instance-multithreading optimization and support for multiple clock domains in the simulated target.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;David Biancolin, Albert Magyar, Sagar Karandikar, Alon Amid, Borivoje Nikolić, Jonathan Bachrach, Krste Asanović. &lt;strong&gt;Accessible, FPGA Resource-Optimized Simulation of Multi-Clock Systems in FireSim&lt;/strong&gt;. &lt;em&gt;In IEEE Micro Volume: 41, Issue: 4, July-Aug. 1 2021&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://davidbiancolin.github.io/papers/firesim-micro21.pdf&#34;&gt;Article PDF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;ISCA@50 Retrospective: 1996-2020&lt;/strong&gt;: FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud&lt;/h3&gt; &#xA;&lt;p&gt;This retrospective paper, included in the &#34;ISCA@50 Retrospective: 1996-2020&#34; collection, provides an update and retrospective on FireSim&#39;s development and evolution since the original ISCA 2018 paper.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Sagar Karandikar, Howard Mao, Donggyu Kim, David Biancolin, Alon Amid, Dayeol Lee, Nathan Pemberton, Emmanuel Amaro, Colin Schmidt, Aditya Chopra, Qijing Huang, Kyle Kovacs, Borivoje Nikolic, Randy Katz, Jonathan Bachrach, and Krste Asanović. &lt;strong&gt;FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud&lt;/strong&gt;. &lt;em&gt;In ISCA@50 Retrospective: 1996-2020&lt;/em&gt;, Edited by José F. Martínez and Lizy K. John, June 2023.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sites.coecis.cornell.edu/isca50retrospective/files/2023/06/Karandikar_2018_FireSim.pdf&#34;&gt;Retrospective PDF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;ISCA 2024&lt;/strong&gt;: FireAxe: Partitioned FPGA-Accelerated Simulation of Large-Scale RTL Designs&lt;/h3&gt; &#xA;&lt;p&gt;Our paper from ISCA 2024 explains how the FireSim compiler can partition the design across multiple FPGAs to simulate scale-up SoC designs.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Joonho Whangbo, Edwin Lim, Chengyi Lux Zhang, Kevin Anderson, Abraham Gonzalez, Raghav Gupta, Nivedha Krishnakumar, Sagar Karandikar, Borivoje Nikolić, Yakun Sophia Shao, and Krste Asanović, “FireAxe: Partitioned FPGA-Accelerated Simulation of Large-Scale RTL Designs”, To appear, In Proceedings of the 51th ACM/IEEE International Symposium on Computer Architecture (ISCA 2024), Buenos Aires, Argentina, June 2024.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://joonho3020.github.io/assets/ISCA2024-FireAxe.pdf&#34;&gt;FireAxe PDF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find other publications, including publications that &lt;em&gt;use&lt;/em&gt; FireSim on the &lt;a href=&#34;https://fires.im/publications/&#34;&gt;FireSim Website&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>