<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T01:45:52Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sbrunk/storch</title>
    <updated>2023-01-29T01:45:52Z</updated>
    <id>tag:github.com,2023-01-29:/sbrunk/storch</id>
    <link href="https://github.com/sbrunk/storch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PyTorch bindings for Scala&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Storch - GPU Accelerated Deep Learning for Scala 3&lt;/h1&gt; &#xA;&lt;p&gt;Storch is a Scala library for fast tensor computations and deep learning, based on PyTorch.&lt;/p&gt; &#xA;&lt;p&gt;Like PyTorch, Storch provides&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A NumPy like API for working with tensors&lt;/li&gt; &#xA; &lt;li&gt;GPU support&lt;/li&gt; &#xA; &lt;li&gt;Automatic differentiation&lt;/li&gt; &#xA; &lt;li&gt;A neural network API for building and training neural networks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Storch aims to close to the Python API to make porting existing models and the life of people already familiar with PyTorch easier.&lt;/p&gt; &#xA;&lt;p&gt;For documentation, see &lt;a href=&#34;https://storch.dev&#34;&gt;https://storch.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val data = Seq(0,1,2,3)&#xA;// data: Seq[Int] = List(0, 1, 2, 3)&#xA;val t1 = torch.Tensor(data)&#xA;// t1: Tensor[Int32] = dtype=int32, shape=[4], device=CPU &#xA;// [0, 1, 2, 3]&#xA;t1.equal(torch.arange(0,4))&#xA;// res0: Boolean = true&#xA;val t2 = t1.to(dtype=float32)&#xA;// t2: Tensor[Float32] = dtype=float32, shape=[4], device=CPU &#xA;// [0,0000, 1,0000, 2,0000, 3,0000]&#xA;val t3 = t1 + t2&#xA;// t3: Tensor[Float32] = dtype=float32, shape=[4], device=CPU &#xA;// [0,0000, 2,0000, 4,0000, 6,0000]&#xA;&#xA;val shape = Seq(2l,3l)&#xA;// shape: Seq[Long] = List(2, 3)&#xA;val randTensor = torch.rand(shape)&#xA;// randTensor: Tensor[Float32] = dtype=float32, shape=[2, 3], device=CPU &#xA;// [[0,4341, 0,9738, 0,9305],&#xA;//  [0,8987, 0,1122, 0,3912]]&#xA;val zerosTensor = torch.zeros(shape, dtype=torch.int64)&#xA;// zerosTensor: Tensor[Int64] = dtype=int64, shape=[2, 3], device=CPU &#xA;// [[0, 0, 0],&#xA;//  [0, 0, 0]]&#xA;&#xA;val x = torch.ones(Seq(5))&#xA;// x: Tensor[Float32] = dtype=float32, shape=[5], device=CPU &#xA;// [1,0000, 1,0000, 1,0000, 1,0000, 1,0000]&#xA;val w = torch.randn(Seq(5, 3), requiresGrad=true)&#xA;// w: Tensor[Float32] = dtype=float32, shape=[5, 3], device=CPU &#xA;// [[0,8975, 0,5484, 0,2307],&#xA;//  [0,2689, 0,7430, 0,6446],&#xA;//  [0,9503, 0,6342, 0,7523],&#xA;//  [0,5332, 0,7497, 0,3665],&#xA;//  [0,3376, 0,6040, 0,5033]]&#xA;val b = torch.randn(Seq(3), requiresGrad=true)&#xA;// b: Tensor[Float32] = dtype=float32, shape=[3], device=CPU &#xA;// [0,2638, 0,9697, 0,3664]&#xA;val z = (x matmul w) + b&#xA;// z: Tensor[Float32] = dtype=float32, shape=[3], device=CPU &#xA;// [3,2513, 4,2490, 2,8640]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Sunbird-Obsrv/sunbird-data-pipeline</title>
    <updated>2023-01-29T01:45:52Z</updated>
    <id>tag:github.com,2023-01-29:/Sunbird-Obsrv/sunbird-data-pipeline</id>
    <link href="https://github.com/Sunbird-Obsrv/sunbird-data-pipeline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for set of real-time streaming jobs to process and enrich the telemetry data generated by various user devices. The repository also consists of ansible provisioning playbooks to automate data pipeline related infrastructure provisioning and deployment playbooks to automate deployment of various components related to data analytics.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sunbird-data-pipeline&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codacy.com/app/project-sunbird/sunbird-data-pipeline?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=project-sunbird/sunbird-data-pipeline&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/737bb0af576e4f229c30d950c28c5c50&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/project-sunbird/sunbird-data-pipeline&#34;&gt;&lt;img src=&#34;https://travis-ci.org/project-sunbird/sunbird-data-pipeline.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>