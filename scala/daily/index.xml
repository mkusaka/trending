<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-07T01:46:25Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jamie-allen/akka-osgi</title>
    <updated>2023-07-07T01:46:25Z</updated>
    <id>tag:github.com,2023-07-07:/jamie-allen/akka-osgi</id>
    <link href="https://github.com/jamie-allen/akka-osgi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A test project to deploy an Akka v2.1 ActorSystem in an OSGi bundle&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A Proof of Concept for Akka and OSGi&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;A simple test project to test creating an Akka v2.1-SNAPSHOT ActorSystem inside of an OSGi context. Akka 2.1 will include OSGi support, bundling all of the subprojects. This project is based on the &lt;a href=&#34;https://github.com/oscarvarto/sbtosgi-examples&#34;&gt;sbtosgi-examples&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;h2&gt;Felix versus Karaf versus Equinox&lt;/h2&gt; &#xA;&lt;p&gt;Initially, I attempted to execute this application in Felix, but ran into issues with the exposing of sun.misc.Unsafe. It is possible to configure Felix for bootdelegation of the package, but there is something wrong with the way akka.util.Unsafe is exposed at runtime, and I&#39;m not sure how to get around that. &lt;a href=&#34;https://github.com/gertv&#34;&gt;Gert Vanthienen&lt;/a&gt; was able to get tests of his pull requests into Akka for OSGi support to work with Karaf and no extra configuration, so I switched to Karaf as well.&lt;/p&gt; &#xA;&lt;p&gt;For what it&#39;s worth, the shell in Karaf is so much nicer than Felix as well. Felix has no history, no autocomplete and doesn&#39;t allow you to edit commands that you mistype. Karaf has all of these features and that makes it so much nicer to use. Good grief.&lt;/p&gt; &#xA;&lt;p&gt;I have not tried this under Equinox.&lt;/p&gt; &#xA;&lt;h2&gt;Build and Bundle This Project&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repo&lt;/li&gt; &#xA; &lt;li&gt;Make sure you&#39;re using SBT v0.11.3 (required for the sbtosgi 0.3.0-SNAPSHOT dependency, as it&#39;s not cross-built).&lt;/li&gt; &#xA; &lt;li&gt;At the command line at the root of the project, type &lt;code&gt;sbt update compile osgi-bundle&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installing Karaf&lt;/h2&gt; &#xA;&lt;p&gt;This information was shamelessly stolen from the sbtosgi-example project referenced above, though altered to reflect the runtime and requirements of this project.&lt;/p&gt; &#xA;&lt;p&gt;To download Apache Karaf, visit &lt;a href=&#34;http://karaf.apache.org/index/community/download.html&#34;&gt;this page&lt;/a&gt; and get the appropriate distribution for your environment. Untar it somewhere on your local drive, then go to that folder and start Karaf.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tar -xzf apache-karaf-2.2.7.tar.gz&#xA;$ cd apache-karaf-2.2.7&#xA;$ java -jar bin/karaf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;➜  apache-karaf-2.2.7  bin/karaf &#xA;        __ __                  ____      &#xA;       / //_/____ __________ _/ __/      &#xA;      / ,&amp;lt;  / __ `/ ___/ __ `/ /_        &#xA;     / /| |/ /_/ / /  / /_/ / __/        &#xA;    /_/ |_|\__,_/_/   \__,_/_/         &#xA;&#xA;  Apache Karaf (2.2.7)&#xA;&#xA;Hit &#39;&amp;lt;tab&amp;gt;&#39; for a list of available commands&#xA;and &#39;[cmd] --help&#39; for help on a specific command.&#xA;Hit &#39;&amp;lt;ctrl-d&amp;gt;&#39; or &#39;osgi:shutdown&#39; to shutdown Karaf.&#xA;&#xA;karaf@root&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a quick primer on how to use Karaf, &lt;a href=&#34;http://karaf.apache.org/manual/latest-2.2.x/quick-start.html&#34;&gt;see here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Managed Bundles&lt;/h1&gt; &#xA;&lt;h2&gt;Start the OSGi Container and Install the Required Bundles Manually&lt;/h2&gt; &#xA;&lt;p&gt;Before you install this bundle, you&#39;ll need to add library bundles for the Scala language library, Akka-Actor and Typesafe Config as dependencies. See the lib folder for my pre-built artifacts, in case you don&#39;t want to build your own. Note that the Akka bundle is a 2.1-SNAPSHOT as of revision &#34;35aaa220aa0c65333e75a7c199fe9ebc782c1b89&#34; on May 29, 2012, but the dependency on Typesafe Config has been changed to 0.4.2-SNAPSHOT. Also, the Config is a 0.4.2-SNAPSHOT as of revision &#34;b3ac8d0539d1df60ff3e5daaf5d619411f426f24&#34; on May 24, 2012. The Scala library is from my Scala IDE Eclipse distribution.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;install&lt;/code&gt; to load the bundles into the OSGi runtime, and then &lt;code&gt;start&lt;/code&gt; them by bundle ID. If you ever have to uninstall a bundle to replace it with a new version, use &lt;code&gt;uninstall&lt;/code&gt; and the bundle ID to remove.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;karaf@root&amp;gt; install file:///&amp;lt;path to akka-osgi project root&amp;gt;/lib/org.scala-ide.scala.compiler_2.9.2.v20120330-163119-949a4804e4-vfinal.jar&#xA;Bundle ID: 50&#xA;karaf@root&amp;gt; install file:///&amp;lt;path to akka-osgi project root&amp;gt;/lib/config-0.4.2-SNAPSHOT.jar&#xA;Bundle ID: 51&#xA;karaf@root&amp;gt; install file:///&amp;lt;path to akka-osgi project root&amp;gt;/lib/akka-actor-2.1-SNAPSHOT.jar&#xA;Bundle ID: 52&#xA;karaf@root&amp;gt; install file:///&amp;lt;path to akka-osgi project root&amp;gt;/target/scala-2.9.2/akka-osgi-poc_2.9.2-0.1-SNAPSHOT.jar&#xA;Bundle ID: 53&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The OSGi context should now look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;karaf@root&amp;gt; list&#xA;START LEVEL 100 , List Threshold: 50&#xA;   ID   State         Blueprint      Level  Name&#xA;[  50] [Installed  ] [            ] [   80] Scala Library for Eclipse (2.9.2.v20120330-163119-949a4804e4-vfinal)&#xA;[  51] [Installed  ] [            ] [   80] com.typesafe.config (0.4.2.SNAPSHOT)&#xA;[  52] [Installed  ] [            ] [   80] com.typesafe.akka.actor (2.1.0.SNAPSHOT)&#xA;[  53] [Installed  ] [            ] [   80] default.Akka OSGi POC (0.1.0.SNAPSHOT)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the bundles and see if the proof of concept works.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;karaf@root&amp;gt; start 50&#xA;karaf@root&amp;gt; start 51&#xA;karaf@root&amp;gt; start 52&#xA;karaf@root&amp;gt; start 53&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything has gone correctly, you will see the following output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;lots of configuration printed out, but ignore that&amp;gt;&#xA;Received 2&#xA;Received something else: foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Programmatically Starting the Karaf Context and Installing Bundles&lt;/h1&gt; &#xA;&lt;p&gt;In this case, an Akka actor is used to start and manage a Karaf container. It does everything the Managed Bundles do, except within the context of another Akka Actor. To see this in action, run the org.jamieallen.osgi.actor.launcher.KarafLauncher source file in Eclipse, IntelliJ, the command line, etc.&lt;/p&gt; &#xA;&lt;p&gt;Note that using the apache-karaf dependency required resolving several odd transitive dependencies. Four Spring bundles had group IDs that only work if you add a resolver for the repository at Springsource itself to get them. And there is an Eclipse dependency that I only managed to find with a resolver for eBay&#39;s open source repo.&lt;/p&gt; &#xA;&lt;p&gt;If you want to execute this class, please make sure you perform this command first at the project root: &lt;code&gt;sbt update compile osgi-bundle&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Results of executing this should show:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ActorMgr about to be started, initializing Karaf framework.&#xA;&amp;lt;Lots of configuration output that you can ignore&amp;gt;&#xA;Received 2&#xA;Received something else: foo&#xA;Context started, bundles installed and started: &#xA;org.eclipse.osgi_3.6.2.R36x_v20110210 [0]&#xA;org.scala-ide.scala.library_2.9.2.v20120330-163119-949a4804e4-vfinal [2]&#xA;com.typesafe.config_0.4.2.SNAPSHOT [3]&#xA;com.typesafe.akka.actor_2.1.0.SNAPSHOT [4]&#xA;default.Akka OSGi POC_0.1.0.SNAPSHOT [5]&#xA;Stopping ActorMgr&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>rockthejvm/scala-3-advanced</title>
    <updated>2023-07-07T01:46:25Z</updated>
    <id>tag:github.com,2023-07-07:/rockthejvm/scala-3-advanced</id>
    <link href="https://github.com/rockthejvm/scala-3-advanced" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official repository for the Rock the JVM Advanced Scala course&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;The official repository for the Advanced Scala 3 &amp;amp; Functional Programming course&lt;/h2&gt; &#xA;&lt;p&gt;Powered by &lt;a href=&#34;https://raw.githubusercontent.com/rockthejvm/scala-3-advanced/master/rockthejvm.com&#34;&gt;Rock the JVM!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the code we wrote during the Rock the JVM &lt;a href=&#34;https://rockthejvm.com/course/advanced-scala&#34;&gt;Advanced Scala 3 &amp;amp; Functional Programming course&lt;/a&gt;. Unless explicitly mentioned, the code in this repository is exactly what was caught on camera.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;How to install:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;either clone the repo or download as zip&lt;/li&gt; &#xA; &lt;li&gt;open with IntelliJ as it&#39;s a simple IDEA project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;Run this command in a git terminal to reset the code in its starting/clean state:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This repo also has Git tags for intermediate states of the code while we were working in the course. You can check out the appropriate tags for the different stages of the course. Useful especially for longer exercises where we modify the same code over multiple videos.&lt;/p&gt; &#xA;&lt;p&gt;The tags are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.1-scala-recap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.2-dark-sugars&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.3-advanced-pattern-matching&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.1-partial-functions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.2-functional-set&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.3-functional-collections&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.3-functional-set-part-2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.4-curries-pafs&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.5-lazy-eval&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.6-lazy-lists&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.7-lazy-lists-part-2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.8-monads&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2.9-monads-exercise&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.1-jvm-thread-intro&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.2-jvm-concurrency-problems&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.3-jvm-thread-communication&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.4-jvm-thread-communication-2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.5-jvm-thread-communication-3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.6-futures-intro&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.7-futures-fp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.8-futures-blocking&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.9-futures-promises&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.10-futures-exercises&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.11-parallel-collections&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4.1-givens&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4.2-extension-methods&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4.3-organization&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4.4-type-classes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4.5-type-classes-practice-json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4.6-context-functions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4.7-implicit-conversions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;4.8-implicits&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.1-advanced-inheritance&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.2-variance&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.3-variance-positions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.4-type-members&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.5-path-dependent-types&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.6-opaque-types&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.7-lit-union-intersection-types&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.8-self-types&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.9-f-bounded-polymorphism&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.10-structural-types&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;5.11-higher-kinded-types&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributions&lt;/h3&gt; &#xA;&lt;p&gt;If you have changes to suggest to this repo, either&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;submit a GitHub issue&lt;/li&gt; &#xA; &lt;li&gt;tell me in the course Q/A forum&lt;/li&gt; &#xA; &lt;li&gt;submit a pull request!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dimajix/flowman</title>
    <updated>2023-07-07T01:46:25Z</updated>
    <id>tag:github.com,2023-07-07:/dimajix/flowman</id>
    <link href="https://github.com/dimajix/flowman" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flowman is an ETL framework powered by Apache Spark. With its declarative approach, Flowman simplifies the development of complex data pipelines.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://flowman.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dimajix/flowman/main/docs/images/flowman-favicon.png&#34; alt=&#34;Flowman Logo&#34;&gt; Flowman&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The declarative data build tool based on Apache Spark.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flowman.readthedocs.io/en/latest/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/flowman/badge/?version=latest&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dimajix/flowman/actions/workflows/maven.yml&#34;&gt;&lt;img src=&#34;https://github.com/dimajix/flowman/actions/workflows/maven.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤔 What is Flowman?&lt;/h2&gt; &#xA;&lt;p&gt;Flowman is a &lt;em&gt;data build tool&lt;/em&gt; based on &lt;a href=&#34;https://spark.apache.org&#34;&gt;Apache Spark&lt;/a&gt; that simplifies the act of implementing data transformation logic as part of complex data pipelines. Flowman follows a strict &#34;everything-as-code&#34; approach, where the whole transformation logic is specified in purely declarative YAML files. These describe all details of the data sources, sinks and data transformations. This is much simpler and efficient than writing Spark jobs in Scala or Python. Flowman will take care of all the technical details of a correct and robust implementation and the developers can concentrate on the data transformations themselves.&lt;/p&gt; &#xA;&lt;p&gt;In addition to writing and executing data transformations, Flowman can also be used for managing physical data models, i.e. Hive or SQL tables. Flowman can create such tables from a specification with the correct schema and also automatically perform migrations. This helps to keep all aspects (like transformations and schema information) in a single place managed by a single tool.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flowman.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dimajix/flowman/main/docs/images/flowman-overview.png&#34; alt=&#34;Flowman Diagram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💪 Noteable Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Semantics of a build tool like Maven — just for data instead for applications&lt;/li&gt; &#xA; &lt;li&gt;Declarative syntax in YAML files&lt;/li&gt; &#xA; &lt;li&gt;Data model management (Create, Migrate and Destroy Hive tables, JDBC tables or file based storage)&lt;/li&gt; &#xA; &lt;li&gt;Generation of meaningful data model documentation&lt;/li&gt; &#xA; &lt;li&gt;Flexible expression language for parametrizing a project for different environments (DEV, TEST, PROD)&lt;/li&gt; &#xA; &lt;li&gt;Jobs for managing build targets (like copying files or uploading data via sftp)&lt;/li&gt; &#xA; &lt;li&gt;Automatic data dependency management within the execution of individual jobs&lt;/li&gt; &#xA; &lt;li&gt;Meaningful logging output &amp;amp; rich set of execution metrics&lt;/li&gt; &#xA; &lt;li&gt;Powerful yet simple command line tools&lt;/li&gt; &#xA; &lt;li&gt;Extendable via Plugins&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💾 Supported Data Sources and Sinks&lt;/h2&gt; &#xA;&lt;p&gt;Flowman supports a wide range of data sources, for example&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Various cloud blob storages (S3, ABS, ...)&lt;/li&gt; &#xA; &lt;li&gt;Relational databases (Postgres, Azure SQL, MS SQL Server, MariaDB, ...)&lt;/li&gt; &#xA; &lt;li&gt;Hadoop (HDFS &amp;amp; Hive)&lt;/li&gt; &#xA; &lt;li&gt;Streaming sources (Kafka)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For file-based sources and sinks, Flowman supports commonly used file formats like CSV, JSON, Parquet and much more. The official documentation provides an overview of &lt;a href=&#34;https://docs.flowman.io/en/latest/connectors/index.html&#34;&gt;supported connectors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the official homepage at &lt;a href=&#34;https://flowman.io&#34;&gt;Flowman.io&lt;/a&gt; and a comprehensive documentation at &lt;a href=&#34;https://docs.flowman.io&#34;&gt;Read the Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🤓 How do I use Flowman?&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install Flowman&lt;/h3&gt; &#xA;&lt;p&gt;You can set up Flowman by following our step-by-step instructions for &lt;a href=&#34;https://docs.flowman.io/en/latest/setup/installation.html&#34;&gt;local installations&lt;/a&gt; or by starting a &lt;a href=&#34;https://docs.flowman.io/en/latest/setup/docker.html&#34;&gt;Docker container&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Create a Project&lt;/h3&gt; &#xA;&lt;p&gt;Flowman will provide some example projects in the &lt;code&gt;examples&lt;/code&gt; subdirectory, which you can use as a starting point.&lt;/p&gt; &#xA;&lt;h3&gt;3. Execute the Project&lt;/h3&gt; &#xA;&lt;p&gt;You can execute the project interactively by starting the &lt;a href=&#34;https://docs.flowman.io/en/latest/cli/flowshell/index.html&#34;&gt;Flowman Shell&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Installation&lt;/h2&gt; &#xA;&lt;p&gt;You simply grab an appropriate pre-build package at &lt;a href=&#34;https://github.com/dimajix/flowman/releases&#34;&gt;GitHub&lt;/a&gt;, or you can use a Docker image, which is available at &lt;a href=&#34;https://hub.docker.com/repository/docker/dimajix/flowman&#34;&gt;Docker Hub&lt;/a&gt;. More details are described in the &lt;a href=&#34;https://raw.githubusercontent.com/dimajix/flowman/main/QUICKSTART.md&#34;&gt;Quickstart Guide&lt;/a&gt; or in the &lt;a href=&#34;https://docs.flowman.io/en/latest/setup/index.html&#34;&gt;official Flowman documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🏗 Building&lt;/h2&gt; &#xA;&lt;p&gt;You can build your own Flowman version via Maven with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please also read &lt;a href=&#34;https://raw.githubusercontent.com/dimajix/flowman/main/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt; for detailed instructions, specifically on build profiles.&lt;/p&gt; &#xA;&lt;h2&gt;💙 Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/flowman-io/shared_invite/zt-168ltudzp-52cCI1S69OMh7sSajtp~7A&#34;&gt;Slack&lt;/a&gt;: Message us on Slack&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;😍 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You want to contribute to Flowman? Welcome! Please read &lt;a href=&#34;https://raw.githubusercontent.com/dimajix/flowman/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; to understand how you can contribute to the project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dimajix/flowman/issues/new&#34;&gt;GitHub issue tracker for Flowman&lt;/a&gt; to report feature requests or bugs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📄 License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under Apache License 2.0 - see the &lt;a href=&#34;https://raw.githubusercontent.com/dimajix/flowman/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>