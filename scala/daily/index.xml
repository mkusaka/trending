<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-05T01:43:01Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>amkt922/scalalearning</title>
    <updated>2023-03-05T01:43:01Z</updated>
    <id>tag:github.com,2023-03-05:/amkt922/scalalearning</id>
    <link href="https://github.com/amkt922/scalalearning" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The repository for learning scala.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;scalalearning&lt;/h1&gt; &#xA;&lt;p&gt;The repository for learning scala.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kitlangton/neotype</title>
    <updated>2023-03-05T01:43:01Z</updated>
    <id>tag:github.com,2023-03-05:/kitlangton/neotype</id>
    <link href="https://github.com/kitlangton/neotype" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A friendly newtype library for Scala 3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;neotype&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oss.sonatype.org/content/repositories/releases/io/github/kitlangton/neotype_3/&#34; title=&#34;Sonatype Releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/nexus/r/https/oss.sonatype.org/io.github.kitlangton/neotype_3.svg?sanitize=true&#34; alt=&#34;Release Artifacts&#34; title=&#34;Sonatype Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots/io/github/kitlangton/neotype_3/&#34; title=&#34;Sonatype Snapshots&#34;&gt;&lt;img src=&#34;https://img.shields.io/nexus/s/https/oss.sonatype.org/io.github.kitlangton/neotype_3.svg?sanitize=true&#34; alt=&#34;Snapshot Artifacts&#34; title=&#34;Sonatype Snapshots&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A friendly newtype library for Scala 3.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;&#34;io.github.kitlangton&#34; %% &#34;neotype&#34; % &#34;0.0.5&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compile-time Checked Values&lt;/li&gt; &#xA; &lt;li&gt;Write validations as &lt;strong&gt;plain, old Scala expressions&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Very Helpful Error Messages (&lt;em&gt;see below&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;No Runtime Allocations (Thanks to &lt;code&gt;inline&lt;/code&gt; and &lt;code&gt;opaque type&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ability to integrate with other libraries (e.g. &lt;code&gt;zio-json&lt;/code&gt;, &lt;code&gt;circe&lt;/code&gt;, etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import neotype.*&#xA;&#xA;// Define a newtype:&#xA;given NonEmptyString: Newtype[String] with&#xA;  // Hey, a plain old Scala expression!&#xA;  inline def validate(input: String): Boolean =&#xA;    input.nonEmpty&#xA;&#xA;// Wrap values, which checked at compile-time:&#xA;NonEmptyString(&#34;Hello&#34;) // OK&#xA;NonEmptyString(&#34;&#34;)      // Compile Error&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;Error: /Users/kit/code/neotype/examples/src/main/scala/neotype/examples/Main.scala:9:16 &#xA;  NonEmptyString(&#34;&#34;)                  &#xA;  ^^^^^^^^^^^^^^^^^^&#xA;  —— Newtype Error ——————————————————————————————————————————————————————————&#xA;  NonEmptyString was called with an INVALID String.&#xA;  input: &#34;&#34;&#xA;  check: input.nonEmpty&#xA;  ———————————————————————————————————————————————————————————————————————————&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>