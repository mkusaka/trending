<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-08T01:45:14Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>darrenjw/fp-ssc-course</title>
    <updated>2023-02-08T01:45:14Z</updated>
    <id>tag:github.com,2023-02-08:/darrenjw/fp-ssc-course</id>
    <link href="https://github.com/darrenjw/fp-ssc-course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An introduction to functional programming for scalable statistical computing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fp-ssc-course&lt;/h1&gt; &#xA;&lt;h3&gt;An introduction to functional programming for scalable statistical computing and machine learning&lt;/h3&gt; &#xA;&lt;h2&gt;A half-day short-course&lt;/h2&gt; &#xA;&lt;p&gt;A brief introduction to ideas of functional programming in the context of scalable statistical computing, illustrated with hands-on examples in Scala, Haskell, (Python+)JAX and Dex. &lt;a href=&#34;https://www.scala-lang.org/&#34;&gt;Scala&lt;/a&gt; and &lt;a href=&#34;https://www.haskell.org/&#34;&gt;Haskell&lt;/a&gt; are general purpose strongly typed functional programming languages. &lt;a href=&#34;https://jax.readthedocs.io/en/latest/&#34;&gt;JAX&lt;/a&gt; is a functional language for differentiable array programming embedded in Python, and &lt;a href=&#34;https://github.com/google-research/dex-lang&#34;&gt;Dex&lt;/a&gt; is a new experimental strongly typed functional language for differentiable array processing.&lt;/p&gt; &#xA;&lt;p&gt;This course is still subject to minor revision, but is now essentially complete. The first iteration will be delivered to &lt;a href=&#34;https://statml.io/&#34;&gt;StatML&lt;/a&gt; PhD students on 2023-05-18. It was supposed to be delivered in February 2023, but has been deferred due to &lt;a href=&#34;https://www.ucu.org.uk/&#34;&gt;UCU&lt;/a&gt; strike action. Note that all materials are freely available, and the course is quite suitable for self-study. If you are self-studying, you should probably allow a full day (including laptop setup).&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please note that you need to install some software on your system &lt;strong&gt;in advance&lt;/strong&gt; of the course.&lt;/em&gt; See the &lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Setup.md&#34;&gt;Setup&lt;/a&gt; guide for details.&lt;/p&gt; &#xA;&lt;p&gt;You will also need a copy of this repo. If you know git, clone it ASAP, and then do a pull the day before the course. If you don&#39;t know git, click on the green &#34;Code&#34; button and download a zip file, but do (or re-do) this the day before the course to make sure you have an up-to-date version.&lt;/p&gt; &#xA;&lt;p&gt;It would also be useful to have a copy of my &lt;a href=&#34;https://github.com/darrenjw/logreg&#34;&gt;logreg&lt;/a&gt; repo, which explores MCMC algorithms in a variety of (functional) languages.&lt;/p&gt; &#xA;&lt;h3&gt;Abstract&lt;/h3&gt; &#xA;&lt;p&gt;Non-trivial research problems in statistical computing and machine learning are often complex and computationally intensive, requiring a custom implementation in some programming language. All of the languages commonly used for this purpose are very old, dating back to the dawn of the computing age, and are quite unsuitable for scalable and efficient statistical computation. There have been huge advances in computing science in the decades since these languages were created, and many new, different and better programming languages have been created. Although functional programming languages are not new, there has been a large resurgence of interest in functional languages in the last decade or two, as people have begun to appreciate the advantages of the functional approach, especially in the context of developing large, scalable software systems, and the ability to take advantage of modern computing hardware.&lt;/p&gt; &#xA;&lt;p&gt;This short course will provide a brief introduction to ideas of functional programming in the context of scalable statistical computing, illustrated with hands-on examples in Scala, Haskell, (Python+)JAX and Dex. Scala and Haskell are general purpose strongly typed functional programming languages. JAX is a functional language for differentiable array programming embedded in Python, and Dex is a new experimental strongly typed functional language for differentiable array processing.&lt;/p&gt; &#xA;&lt;h3&gt;Materials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Setup.md&#34;&gt;Laptop setup&lt;/a&gt; - to be completed &lt;em&gt;in advance&lt;/em&gt; of the course&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Intro/Readme.md&#34;&gt;&lt;em&gt;Introduction to FP&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Scala/md/ScalaCC.md&#34;&gt;&lt;em&gt;Scala crash-course&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Scala/md/ScalaHO.md&#34;&gt;Scala hands-on&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Intro/Example.md&#34;&gt;&lt;em&gt;Running example&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Scala/md/Example.md&#34;&gt;Scala example and hands-on&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Haskell/README.md&#34;&gt;Haskell crash-course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Haskell/Example.md&#34;&gt;Haskell example and hands-on&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/JAX/Readme.md&#34;&gt;JAX crash-course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/JAX/Example.md&#34;&gt;JAX example and hands-on&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://darrenjw.github.io/fp-ssc-course/DexCC.html&#34;&gt;Dex crash-course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Dex/Example.md&#34;&gt;Dex example and hands-on&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Intro/Random.md&#34;&gt;Functional and parallel random numbers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Intro/RandomHO.md&#34;&gt;Splittable random numbers hands-on&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/darrenjw/fp-ssc-course/main/Intro/Resources.md&#34;&gt;Wrap-up and next steps&lt;/a&gt; (including additional learning resources)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>