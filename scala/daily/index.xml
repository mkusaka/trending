<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-21T01:36:57Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>se-tuebingen-exercises/helloworld</title>
    <updated>2022-10-21T01:36:57Z</updated>
    <id>tag:github.com,2022-10-21:/se-tuebingen-exercises/helloworld</id>
    <link href="https://github.com/se-tuebingen-exercises/helloworld" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A hello world project with Scala 3.2.0 and sbt&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hello World&lt;/h1&gt; &#xA;&lt;p&gt;A simple &#34;hello world&#34; project with Scala 3.2.0 and sbt.&lt;/p&gt; &#xA;&lt;h2&gt;Preliminaries&lt;/h2&gt; &#xA;&lt;p&gt;To run the project, you need to have a few things installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a recent version of the JDK (&amp;gt;= 12)&lt;/li&gt; &#xA; &lt;li&gt;the sbt build tool&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are missing a dependency, the &lt;a href=&#34;https://ps-forum.cs.uni-tuebingen.de/c/se/guides&#34;&gt;forum&lt;/a&gt; will provide detailed guides on how to install them.&lt;/p&gt; &#xA;&lt;h2&gt;Running the Program&lt;/h2&gt; &#xA;&lt;p&gt;Working with sbt and Scala will be covered in a separate homework, so do not worry about the details, so far. Here, we will just run our program to see whether all dependencies are installed, correctly.&lt;/p&gt; &#xA;&lt;p&gt;To run hello world, we first enter the &#34;sbt terminal&#34;. Open a terminal of your choice and navigate (using the &lt;code&gt;cd&lt;/code&gt; command on Unix systems) to the project directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd helloworld/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From the very root of the directory (not within some other folder), start &lt;code&gt;sbt&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sbt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything goes well, you will be greeted with a prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[info] welcome to sbt 1.7.1 (Homebrew Java 19)&#xA;[info] loading global plugins from /Users/jonathan/.sbt/1.0/plugins&#xA;[info] loading project definition from /private/tmp/helloworld/project&#xA;[info] loading settings for project helloworld from build.sbt ...&#xA;[info] set current project to helloworld (in build file:/private/tmp/helloworld/)&#xA;[info] sbt server started at local:///Users/jonathan/.sbt/1.0/server/b4d7872362a29e152887/sock&#xA;[info] started sbt server&#xA;sbt:helloworld&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here you can run many different commands to interact with your program. The most important ones for now are&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;run&lt;/code&gt; -- this will run the program.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;compile&lt;/code&gt; -- this will compile the source code into Java byte code (you can find the generated code in the &lt;code&gt;target&lt;/code&gt; folder)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Simply enter &lt;code&gt;run&lt;/code&gt;, and sbt will do all the heavy lifting. It downloads the correct version of the Scala language compiler for you. Afterwards, it compiles the file &lt;code&gt;hello.scala&lt;/code&gt;. Finally, it runs the method marked with &lt;code&gt;@main&lt;/code&gt;. You should see something similar to the following output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt:helloworld&amp;gt; run&#xA;[info] compiling 1 Scala source to /private/tmp/helloworld/target/scala-3.2.0/classes ...&#xA;[info] running sayHello&#xA;Hey, what&#39;s your name? (please press &amp;lt;Enter&amp;gt; after entering your name)&#xA;Jonathan&#xA;Hello there, Jonathan!&#xA;&#xA;Seems like you have all dependencies set up correctly.&#xA;Apparently, this application is running on Mac OS X with JDK 19.&#xA;&#xA;[success] Total time: 2 s, completed 12 Oct 2022, 17:59:26&#xA;sbt:helloworld&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The application will ask you for your name and then print back a simple greeting. After exiting, sbt is now ready to take the next command.&lt;/p&gt;</summary>
  </entry>
</feed>