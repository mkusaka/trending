<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-29T01:34:49Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fmasion/playHazelcast</title>
    <updated>2024-05-29T01:34:49Z</updated>
    <id>tag:github.com,2024-05-29:/fmasion/playHazelcast</id>
    <link href="https://github.com/fmasion/playHazelcast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;playframework 2.3.x hazelcast integration plugin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PlayHazelcast&lt;/h1&gt; &#xA;&lt;p&gt;playframework 2.3.x hazelcast integration plugin&lt;/p&gt; &#xA;&lt;h1&gt;HazelCast 3.2.3 Plugin for Play 2.3.x&lt;/h1&gt; &#xA;&lt;p&gt;For play 2.2.x see in play2.2.x branch&lt;/p&gt; &#xA;&lt;p&gt;This is a set &lt;strong&gt;of 2 plugins&lt;/strong&gt; that provide basic &lt;a href=&#34;http://http://www.hazelcast.com/&#34;&gt;Hazelcast&lt;/a&gt; integration in Play!.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;HazelcastPlugin&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HazelcastClientPlugin&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is packaged with Hazelcast 3.2.3 community edition &lt;a href=&#34;http://www.hazelcast.com/downloads.jsp&#34;&gt;licenced under Apache 2 licence&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;###HazelcastPlugin&lt;/p&gt; &#xA;&lt;p&gt;In fact this first plugin only binds an Hazelcast instance lifecycle to play application&#39;s one and exposes the Hazelcast instance : do WTFYW with it. It starts an instance with play and stop it with play (stopping one play instance doesn&#39;t stop the cluster)&lt;/p&gt; &#xA;&lt;p&gt;It includes :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hazelcast.jar&lt;/li&gt; &#xA; &lt;li&gt;Hazelcast-cloud.jar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So it only enables to start an Hazelcast instance on your own servers as well as all needed to start it on AWS.&lt;/p&gt; &#xA;&lt;p&gt;###HazelcastClientPlugin&lt;/p&gt; &#xA;&lt;p&gt;This second plugin only provides (and configure the connection of) an Hazelcast-client to handle an Hazelcast cluster through one of it&#39;s member.&lt;/p&gt; &#xA;&lt;p&gt;The hazelcast instance you manipulate with the client is not necessarily initiated by play (it could be an existing Hazelcast cluster your app is joining)&lt;/p&gt; &#xA;&lt;p&gt;It includes :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hazelcast.jar&lt;/li&gt; &#xA; &lt;li&gt;Hazelcast-client.jar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So it only enables your app to connect an existing Hazelcast instance&lt;/p&gt; &#xA;&lt;h3&gt;Used Together&lt;/h3&gt; &#xA;&lt;p&gt;You can use them together but they are not tied&lt;/p&gt; &#xA;&lt;h3&gt;Reasons&lt;/h3&gt; &#xA;&lt;p&gt;This very basic integration is done intentionally. Hazelcast is very feature rich and it belongs to other upcomings plugins to extend Play in a particular way by using this very simple plugin if needed.&lt;/p&gt; &#xA;&lt;p&gt;Moreover this upcoming services should use the &lt;a href=&#34;http://mvnrepository.com/artifact/com.hazelcast/hazelcast-client/2.6.6&#34;&gt;&lt;strong&gt;Hazelcast-client library&lt;/strong&gt;&lt;/a&gt; in order to be able to interact with any Hazelcast cluster (not only the one tied to play).&lt;/p&gt; &#xA;&lt;p&gt;Imagine you want to write an open source monitoring tool for Hazelcast with play framework* It would be nice to monitor any Hazelcast cluster not only the one your app creates&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;(there&#39;s a monitoring tool provided for free but limited to 2 instances without subscribtion fee and it&#39;s a war so you&#39;ll need a container)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Consider using this plugin for :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;simple cluster management&lt;/strong&gt; (make your play app cluster aware)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;share and sync data between all machines in your cluster&lt;/strong&gt; (in a replicated, fail-safe and &lt;strong&gt;observable&lt;/strong&gt; way)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cluster based scheduler&lt;/strong&gt; (coming soon stay tuned...)&lt;/li&gt; &#xA; &lt;li&gt;cluster wide cache replacement for ehcache (&lt;a href=&#34;http://www.hazelcast.org/docs/latest/manual/html-single/hazelcast-documentation.html#memcache-client&#34;&gt;memcached interface&lt;/a&gt;) or using &lt;strong&gt;&lt;a href=&#34;https://github.com/fmasion/playHazelCache&#34;&gt;playHazelCache plugin&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;distributed ORM 2nd level cache (&lt;a href=&#34;http://www.hazelcast.org/docs/latest/manual/html-single/hazelcast-documentation.html#hibernate-second-level-cache&#34;&gt;could fit especially well with hibernate&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;in memory &lt;a href=&#34;http://www.hazelcast.org/docs/latest/manual/html-single/hazelcast-documentation.html#distributed-computing&#34;&gt;grid computation&lt;/a&gt; (making wrappers on executors to enable a cluster wide monadic way to express fuctionnal operation…would be cool)&lt;/li&gt; &#xA; &lt;li&gt;easy cluster wide &lt;a href=&#34;http://www.hazelcast.org/docs/latest/manual/html-single/hazelcast-documentation.html#topic&#34;&gt;pub/sub&lt;/a&gt; (despite there&#39;s some nice tools already in play)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lmgtfy.com/?q=buzz+lightyear+%22to%2Binfinity%2Band%2Bbeyond%22&#34;&gt;much more up to you…&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I don&#39;t encourage you to build statefull apps, but they&#39;re some use cases where you need your data be accessible from every some/machine in the cluster. With Hazelcast you &lt;strong&gt;may not&lt;/strong&gt; need to deploy a specific middleware (memcached, redis, Hbase, Infinyspan …) that can certainly do much more than you&#39;ll need.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s not a &lt;strong&gt;golden Hammer&lt;/strong&gt; put it in your stack after prototyping and evaluating if it fits your need.&lt;/p&gt; &#xA;&lt;p&gt;As usual this comes without any warranty of any kind.&lt;/p&gt; &#xA;&lt;h1&gt;How to install&lt;/h1&gt; &#xA;&lt;p&gt;In your application, add this configuration to the &lt;code&gt;project/Build.scala&lt;/code&gt; file :&lt;/p&gt; &#xA;&lt;p&gt;add this resolver (same for both plugins) :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;resolvers += &#34;bintray&#34; at &#34;http://dl.bintray.com/fmasion/maven&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;for play 2.2.x use : &#34;http://fmasion.github.com/releases/&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;choose your dependency :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    &#34;playhazelcast&#34;  % &#34;playhazelcast_2.10&#34; % &#34;3.2.3-play2.3&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and / or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;playhazelcastclient&#34;  % &#34;playhazelcastclient_2.10&#34; % &#34;3.2.3-play2.3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your application, add to &lt;code&gt;conf/play.plugins&lt;/code&gt; (or create the file if it dosn&#39;t exist) this configuration :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;500:playHazelcast.HazelcastPlugin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and / or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;600:playHazelcastClient.api.HazelcastClientPlugin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first number is a priority, you can adjust it if you have other plugins which depend on the one in this case when used jointly the client plugin must start after&lt;/p&gt; &#xA;&lt;p&gt;Finally in the &lt;code&gt;conf/application.conf&lt;/code&gt; you can configure some elements. Theses elements overide the default config. If You provide a conf file it is first used then the keys in the &lt;code&gt;application.conf&lt;/code&gt; are applied to overide those defined in the conf file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;hz.port=5701&#xA;# hz.configfile=&#34;conf/config.xml&#34;&#xA;&#xA;# defining group enables multiple hz instances on the same server&#xA;# so the same machine can participate to many cluster&#xA;# Also there are other product that use hazelcast internaly so it provides connection to annother cluster&#xA;# hz.groupname=&#34;dev&#34;&#xA;# hz.grouppassword=&#34;dev-pass&#34;&#xA;&#xA;# hazelcast tries to connect and increment ports trying to find other machine on the lan&#xA;# it makes easy the use of multiple server on the same machine&#xA;# hz.portautoincrement=true&#xA;&#xA;# No licenceKey is required for community edition&#xA;# hz.licenceKey=&#34;XXXXXXXXX&#34;&#xA;&#x9;&#xA;# for hazelcastClient you configure a list of seeds (some of the member to contact if present)&#xA;# the first seed that respond enables the connection&#xA;# by default addMembershipListener will keep members up to date &#xA;# so connection to the cluster won&#39;t go down if the connected member fails &#xA;hz.addresses = [127.0.0.1:5701]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;No licenceKey is required for community edition. It&#39;s just if you use enterprise edition (adds jaas base security/credentials, out of heap datastorage, non limited monitoring, C# client, )&lt;/p&gt; &#xA;&lt;p&gt;If no config.xml file is provided the app lauches with Hazelcast defaults. To know how to configure hazelcast (in particulary in EC2) &lt;a href=&#34;http://www.hazelcast.com/docs.jsp&#34;&gt;RTFM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Simply access the Hazelcast instance (in Scala or Java) :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HazelcastPlugin.getInstance();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and / or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HazelcastClientPlugin.getClient();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Sample&lt;/h1&gt; &#xA;&lt;p&gt;For an example, see the bundled sample app&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the Apache 2 license, quoted below.&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2013 F. Masion.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this project except in compliance with the License. You may obtain a copy of the License at &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>