<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-17T01:36:20Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>broadinstitute/thurloe</title>
    <updated>2023-08-17T01:36:20Z</updated>
    <id>tag:github.com,2023-08-17:/broadinstitute/thurloe</id>
    <link href="https://github.com/broadinstitute/thurloe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple service to store arbitrary key/value pairs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Thurloe&lt;/h1&gt; &#xA;&lt;p&gt;A simple service to store arbitrary key/value pairs&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Locally&lt;/h3&gt; &#xA;&lt;p&gt;Install the Java Cryptography Extension (for java 8) as described in this &lt;a href=&#34;https://stackoverflow.com/questions/6481627/java-security-illegal-key-size-or-default-parameters&#34;&gt;SO post&lt;/a&gt;. Tests will fail without it.&lt;/p&gt; &#xA;&lt;p&gt;Make sure &lt;a href=&#34;http://www.scala-sbt.org/&#34;&gt;sbt&lt;/a&gt; is installed.&lt;br&gt; Make sure you&#39;ve installed git-secrets. Then use these commands to ensure git-hooks are run and start a server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cp -r hooks/ .git/hooks/ #this step can be skipped if you use the rsync script to spin up locally&#xA;$ chmod 755 .git/hooks/apply-get-secrets.sh #this step as well&#xA;$ sbt run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create a stand-alone JAR in the &lt;code&gt;target/scala-2.11&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sbt assembly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With Docker&lt;/h3&gt; &#xA;&lt;p&gt;Does not require having sbt installed. To build the JAR and move it to the working directory, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./docker/build.sh jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build a docker container from the jar, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./docker/build.sh -d build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that you can also run &lt;code&gt;build.sh&lt;/code&gt; once with both commands.&lt;/p&gt; &#xA;&lt;p&gt;To run the docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run -p 8000:8000 -d broadinsitute/thurloe:${GIT_SHA:0:12}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then one can issue requests to &lt;code&gt;localhost&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; For Mac OS X users using boot2docker, run &lt;code&gt;boot2docker ip&lt;/code&gt; to get IP address to issue HTTP requests to&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;HTTP API&lt;/h2&gt; &#xA;&lt;h3&gt;POST /api/thurloe&lt;/h3&gt; &#xA;&lt;p&gt;Adds a new key/value pair to Thurloe&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http --print=hbHB POST http://localhost:8000/api/thurloe &amp;lt; payload.json&#xA;curl -X POST -d @payload.json http://localhost:8000/api/thurloe --header &#34;Content-Type: application/json&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where payload.json contains:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;userId&#34;: &#34;uid&#34;,&#xA;  &#34;keyValuePair&#34;: {&#xA;    &#34;key&#34;: &#34;k&#34;,&#xA;    &#34;value&#34;: &#34;v&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Request:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;POST /api/thurloe HTTP/1.1&#xA;Accept: application/json&#xA;Accept-Encoding: gzip, deflate&#xA;Connection: keep-alive&#xA;Content-Length: 80&#xA;Content-Type: application/json&#xA;Host: localhost:8000&#xA;User-Agent: HTTPie/0.9.2&#xA;&#xA;{&#xA;    &#34;keyValuePair&#34;: {&#xA;        &#34;key&#34;: &#34;k&#34;,&#xA;        &#34;value&#34;: &#34;v&#34;&#xA;    },&#xA;    &#34;userId&#34;: &#34;uid&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the key already exists, a &lt;strong&gt;406 Not Acceptable&lt;/strong&gt; will be returned.&lt;/p&gt; &#xA;&lt;h3&gt;GET /api/thurloe?userId=:userId&amp;amp;key=:key&amp;amp;value=:value&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;http --print=hbHB http://localhost:8000/api/thurloe?userId=u&amp;amp;key=k&amp;amp;value=v&#xA;curl http://localhost:8000/api/thurloe?userId=u&amp;amp;key=k&amp;amp;value=v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All parameters are optional. They act as filters on the returned values in that everything returned must match any and all of the specified parameters. If any value is specified multiple times (e.g. &lt;code&gt;userId=aaa&amp;amp;userId=bbb&lt;/code&gt;) then any matching values are returned.&lt;/p&gt; &#xA;&lt;p&gt;Response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HTTP/1.1 200 OK&#xA;Content-Length: 79&#xA;Content-Type: application/json; charset=UTF-8&#xA;Date: Tue, 15 Sep 2015 18:50:36 GMT&#xA;Server: spray-can/1.3.3&#xA;&#xA;[&#xA;    {&#xA;        &#34;keyValuePair&#34;: {&#xA;            &#34;key&#34;: &#34;k&#34;,&#xA;            &#34;value&#34;: &#34;v&#34;&#xA;        },&#xA;        &#34;userId&#34;: &#34;u&#34;&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GET /api/thurloe/:user_id/:key&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;http --print=hbHB http://localhost:8000/api/thurloe/uid/k&#xA;curl http://localhost:8000/api/thurloe/uid/k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HTTP/1.1 200 OK&#xA;Content-Length: 79&#xA;Content-Type: application/json; charset=UTF-8&#xA;Date: Tue, 15 Sep 2015 18:50:36 GMT&#xA;Server: spray-can/1.3.3&#xA;&#xA;{&#xA;    &#34;keyValuePair&#34;: {&#xA;        &#34;key&#34;: &#34;k&#34;,&#xA;        &#34;value&#34;: &#34;v&#34;&#xA;    },&#xA;    &#34;userId&#34;: &#34;uid&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the key or user ID is not found, a &lt;strong&gt;404 Not Found&lt;/strong&gt; will be returned.&lt;/p&gt; &#xA;&lt;h3&gt;GET /api/thurloe/:user_id&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;http --print=hbHB http://localhost:8000/api/thurloe/uid&#xA;curl http://localhost:8000/api/thurloe/uid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;HTTP/1.1 200 OK&#xA;Content-Length: 124&#xA;Content-Type: application/json; charset=UTF-8&#xA;Date: Tue, 15 Sep 2015 18:54:13 GMT&#xA;Server: spray-can/1.3.3&#xA;&#xA;{&#xA;    &#34;keyValuePairs&#34;: [&#xA;        {&#xA;            &#34;key&#34;: &#34;k&#34;,&#xA;            &#34;value&#34;: &#34;v&#34;&#xA;        },&#xA;        {&#xA;            &#34;key&#34;: &#34;k2&#34;,&#xA;            &#34;value&#34;: &#34;v2&#34;&#xA;        }&#xA;    ],&#xA;    &#34;userId&#34;: &#34;uid&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the key or user ID is not found, a &lt;strong&gt;404 Not Found&lt;/strong&gt; will be returned.&lt;/p&gt; &#xA;&lt;h3&gt;DELETE /api/thurloe/:user_id/:key&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;http --print=hbHB DELETE http://localhost:8000/api/thurloe/uid/k2&#xA;curl -X DELETE http://localhost:8000/api/thurloe/uid/k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the key is not found, a 404 is returned:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HTTP/1.1 404 Not Found&#xA;Content-Length: 17&#xA;Content-Type: text/plain; charset=UTF-8&#xA;Date: Tue, 15 Sep 2015 18:58:19 GMT&#xA;Server: spray-can/1.3.3&#xA;&#xA;Key not found: k2&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>vkostyukov/scalacaster</title>
    <updated>2023-08-17T01:36:20Z</updated>
    <id>tag:github.com,2023-08-17:/vkostyukov/scalacaster</id>
    <link href="https://github.com/vkostyukov/scalacaster" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Purely Functional Algorithms and Data Structures in Scala&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Why Scalacaster?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/vkostyukov/scalacaster?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/vkostyukov/scalacaster&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since &lt;a href=&#34;http://www.fender.com/guitars/stratocaster/&#34;&gt;Fender Stratocaster&lt;/a&gt; is a classic guitar, &lt;strong&gt;Scalacaster&lt;/strong&gt; is about classic algorithms and data structures in Scala. Scalacaster includes loads of widely used implementation techniques and approaches, which have been developed by best programmers and enthusiasts of functional programming. Studying purely functional data structures is always fun and challenge for researchers, since data structures in a functional setting are much elegant and smarter than in an imperative setting.&lt;/p&gt; &#xA;&lt;h2&gt;How to use Scalacaster?&lt;/h2&gt; &#xA;&lt;p&gt;Scalacaster is neither a library nor framework. Moreover, Scalacaster`s code is not supposed to be executed at all. Scalacaster&#39;s code is not for Scala compiler but for human beings, for enthusiasts and researchers of the Scala programming language and its application in the area of implementation of the purely functional data structures. So, the best way to use Scalacaster is to read through its source code and comments.&lt;/p&gt; &#xA;&lt;h2&gt;What is inside?&lt;/h2&gt; &#xA;&lt;h5&gt;Primitive routines&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Numbers theory &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/primitive/Numbers.scala&#34;&gt;&lt;code&gt;src/primitive/Numbers.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Strings &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/primitive/Strings.scala&#34;&gt;&lt;code&gt;src/primitive/Strings.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Simple Collections&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;List &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/collection/List.scala&#34;&gt;&lt;code&gt;src/collection/List.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Queue &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/collection/Queue.scala&#34;&gt;&lt;code&gt;src/collection/Queue.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stack &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/collection/Stack.scala&#34;&gt;&lt;code&gt;src/collection/Stack.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/collection/Set.scala&#34;&gt;&lt;code&gt;src/collection/Set.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Heaps&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Standard Binary Heap &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/heap/StandardHeap.scala&#34;&gt;&lt;code&gt;src/heap/StandardHeap.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Leftist Heap &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/heap/LeftistHeap.scala&#34;&gt;&lt;code&gt;src/heap/LeftistHeap.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pairing Heap &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/heap/PairingHeap.scala&#34;&gt;&lt;code&gt;src/heap/PairingHeap.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Skew Heap &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/heap/SkewHeap.scala&#34;&gt;&lt;code&gt;src/heap/SkewHeap.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Trees&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Binary Search Tree &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/tree/Tree.scala&#34;&gt;&lt;code&gt;src/tree/Tree.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Red-Black Tree &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/tree/RBTree.scala&#34;&gt;&lt;code&gt;src/tree/RBTree.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AA Tree &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/tree/AATree.scala&#34;&gt;&lt;code&gt;src/tree/AATree.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Graphs&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Graph &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/graph/Graph.scala&#34;&gt;&lt;code&gt;src/graph/Graph.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;InductiveGraph &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/graph/InductiveGraph.scala&#34;&gt;&lt;code&gt;src/graph/InductiveGraph.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Sorting Algorithms&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Quick Sort &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/sort/QuickSort.scala&#34;&gt;&lt;code&gt;src/sort/QuickSort.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Merge Sort &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/sort/MergeSort.scala&#34;&gt;&lt;code&gt;src/sort/MergeSort.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bubble Sort &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/sort/BubbleSort.scala&#34;&gt;&lt;code&gt;src/sort/BubbleSort.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Insertion Sort &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/sort/InsertionSort.scala&#34;&gt;&lt;code&gt;src/sort/InsertionSort.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Selection Sort &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/sort/SelectionSort.scala&#34;&gt;&lt;code&gt;src/sort/SelectionSort.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Searching Algorithms&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Selection Search (k-th order statistic) &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/search/SelectionSearch.scala&#34;&gt;&lt;code&gt;src/search/SelectionSearch.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Binary Search &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/search/BinarySearch.scala&#34;&gt;&lt;code&gt;src/search/BinarySearch.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linear Search &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/search/LinearSearch.scala&#34;&gt;&lt;code&gt;src/search/LinearSearch.scala&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Give it a star&lt;/li&gt; &#xA; &lt;li&gt;Drop the feedback to the author &lt;a href=&#34;https://twitter.com/vkostyukov&#34;&gt;@vkostyukov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send a PR with fixes of typos/bugs/etc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What to read next?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/vkostyukov/purely-functional-data-structures-in-scala-26175521&#34;&gt;Slides about Scalacaster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki/dp/0521663504&#34;&gt;Purely Functional Data Structures by Chris Okasaki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cstheory.stackexchange.com/questions/1539/whats-new-in-purely-functional-data-structures-since-okasaki&#34;&gt;What&#39;s new in Purely Functional DS since Okasaki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://arxiv.org/pdf/1312.4666v1.pdf&#34;&gt;A Functional Approach to Standard Binary Heaps&lt;/a&gt; (see &lt;a href=&#34;https://github.com/vkostyukov/scalacaster/raw/master/src/heap/StandardHeap.scala&#34;&gt;&lt;code&gt;StandardHeap.scala&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://vkostyukov.net/posts/combinatorial-algorithms-in-scala/&#34;&gt;Combinatorial Algorithms in Scala&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://vkostyukov.net/posts/designing-a-pfds&#34;&gt;Designing a Purely Functional Data Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pNhBQJN44YQ&#34;&gt;Functional Data Structures in Scala by Daniel Spiewak&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;This work is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>