<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-14T01:59:42Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>twitter-archive/snowflake</title>
    <updated>2022-06-14T01:59:42Z</updated>
    <id>tag:github.com,2022-06-14:/twitter-archive/snowflake</id>
    <link href="https://github.com/twitter-archive/snowflake" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Snowflake is a network service for generating unique ID numbers at high scale with some simple guarantees.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;We have retired the initial release of Snowflake and working on open sourcing the next version based on &lt;a href=&#34;https://twitter.github.io/twitter-server/&#34;&gt;Twitter-server&lt;/a&gt;, in a form that can run anywhere without requiring Twitter&#39;s own infrastructure services.&lt;/p&gt; &#xA;&lt;p&gt;The initial version, released in 2010, was based on Apache Thrift and it predated &lt;a href=&#34;https://twitter.github.io/finagle/&#34;&gt;Finagle&lt;/a&gt;, our building block for RPC services at Twitter. The Snowflake we&#39;re using internally is a full rewrite and heavily relies on existing infrastructure at Twitter to run. We cannot commit to a date but we&#39;re doing our best to add necessary features to make Snowflake fit for many environments outside of Twitter.&lt;/p&gt; &#xA;&lt;p&gt;Source code is still in the repository and is reachable from &lt;a href=&#34;https://github.com/twitter/snowflake/releases/tag/snowflake-2010&#34;&gt;snowflake-2010&lt;/a&gt; tag.&lt;/p&gt; &#xA;&lt;p&gt;We won&#39;t be accepting pull requests or responding to issues for the retired release.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MightyPirates/OpenComputers</title>
    <updated>2022-06-14T01:59:42Z</updated>
    <id>tag:github.com,2022-06-14:/MightyPirates/OpenComputers</id>
    <link href="https://github.com/MightyPirates/OpenComputers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Home of the OpenComputers mod for Minecraft.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MightyPirates/OpenComputers/master-MC1.7.10/assets/misc/banner.png&#34; alt=&#34;Welcome to OpenComputers&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenComputers is a Minecraft mod that adds programmable computers and robots to the game. The built-in computer implementation uses Lua 5.2 and is fully persistent. This means programs will continue running across reloads. For more information, please &lt;a href=&#34;https://ocdoc.cil.li/&#34;&gt;see the wiki&lt;/a&gt;. Feel invited to visit the &lt;a href=&#34;https://oc.cil.li/&#34;&gt;community forums&lt;/a&gt; or drop by in the &lt;a href=&#34;http://webchat.esper.net/?channels=#oc&#34;&gt;IRC channel #oc on esper.net&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A few useful links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.minecraftforum.net/topic/2201440-opencomputers-v122/&#34;&gt;Minecraft Forum Thread&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/releases&#34;&gt;Downloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/issues?state=open&#34;&gt;Bug Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ocdoc.cil.li/&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/tree/master-MC1.7.10/src/main/resources/assets/opencomputers/doc&#34;&gt;Ingame Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://webchat.esper.net/?channels=#oc&#34;&gt;IRC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oc.cil.li/&#34;&gt;Community Forums&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Experimental Builds&lt;/h3&gt; &#xA;&lt;p&gt;You can find experimental builds &lt;a href=&#34;http://ci.cil.li/&#34;&gt;on the build server&lt;/a&gt;. Expect these to be generally more unstable than builds marked as releases. Use these &lt;strong&gt;at your own risk&lt;/strong&gt;, but - when using the latest one - please &lt;em&gt;do&lt;/em&gt; report bugs you encounter using them. Thanks!&lt;/p&gt; &#xA;&lt;h2&gt;License / Use in Modpacks&lt;/h2&gt; &#xA;&lt;p&gt;This mod is &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/raw/master-MC1.7.10/LICENSE&#34;&gt;licensed under the &lt;strong&gt;MIT license&lt;/strong&gt;&lt;/a&gt;. All &lt;strong&gt;assets are public domain&lt;/strong&gt;, unless otherwise stated; all are free to be distributed as long as the license / source credits are kept. This means you can use this mod in any mod pack &lt;strong&gt;as you please&lt;/strong&gt;. I&#39;d be happy to hear about you using it, though, just out of curiosity.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;Assets and Localizations&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Translations&lt;/strong&gt;&lt;br&gt; Translations to other languages are very much appreciated. You can find the localization files &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/tree/master-MC1.7.10/src/main/resources/assets/opencomputers/lang&#34;&gt;in this folder&lt;/a&gt;. If a localization you wanted to create already exists, please take the time to see if the present one is complete - the strings change every so often, invalidating some of the translations. If you start a fresh localization, please base it off of the English or German one, those are the &#39;master&#39; localization files. If you add a new language, please also add it to &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/raw/master-MC1.7.10/src/main/resources/pack.mcmeta&#34;&gt;the pack.mcmeta&lt;/a&gt; file. Keep it sorted alphabetically, use the name and region Minecraft itself uses. If you don&#39;t know how to do that, that&#39;s OK, I&#39;ll do it later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Textures&lt;/strong&gt;&lt;br&gt; If you would like to contribute better textures for certain items or blocks, feel free to pull-request them. If you would like to contribute &lt;em&gt;alternative&lt;/em&gt; textures, make it a resource pack, and post it on the forums, for example.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;br&gt; Help with keeping the &lt;a href=&#34;https://ocdoc.cil.li/&#34;&gt;wiki&lt;/a&gt; up to date would be &lt;em&gt;really&lt;/em&gt; appreciated. If you notice anything amiss and know better, fix it. If you don&#39;t ask someone who does, then fix it. If you had a question answered, consider adding that information somewhere in the wiki where you would have expected to find that information.&lt;br&gt; There are also the files containing the ingame help &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/tree/master-MC1.7.10/src/main/resources/assets/opencomputers/loot/OpenOS/usr/man&#34;&gt;for programs&lt;/a&gt; and &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/tree/master-MC1.7.10/src/main/resources/assets/opencomputers/doc&#34;&gt;for blocks and items&lt;/a&gt;, which could probably be much better than they are right now. Improvements to them, and new ones (e.g. for the libraries, such as &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;sides&lt;/code&gt;) would help a lot. Thanks!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Robot Names&lt;/strong&gt;&lt;br&gt; Robots get a random name when placed (unless set with an Anvil). The list the names are chose from &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/raw/master-MC1.7.10/src/main/resources/assets/opencomputers/robot.names&#34;&gt;can be found here&lt;/a&gt;. Feel free to pull request additional names! &lt;em&gt;However&lt;/em&gt;: since the list has grown to a considerable length already, here are the two basic criteria for new names: it must either be a real or fictional robot, or an AI that at least &lt;em&gt;appears&lt;/em&gt; to be self-aware.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Bug fixes, features and scripts&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;&lt;br&gt; If you&#39;ve found a bug, please report it in the &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/issues?state=open&#34;&gt;issue tracker&lt;/a&gt;, after checking it has not been reported before - and possibly even fixed by now. If you think you can and have fixed it, feel free to do a pull request, I&#39;ll happily pull it if it looks all right to me - otherwise I&#39;ll gladly tell you what to change to get it merged.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;br&gt; If you&#39;d like to propose a new feature, take it to the &lt;a href=&#34;https://oc.cil.li/&#34;&gt;forums&lt;/a&gt; or the &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/issues?state=open&#34;&gt;issue tracker&lt;/a&gt;. If you&#39;d like to contribute code that adds new features, please make sure to discuss the feature with me, first - again, the issue tracker is an OK place for this, there are a couple of feature requests there, already. Alternatively start a topic on the forums to discuss the feature, and / or stop by the &lt;a href=&#34;http://webchat.esper.net/?channels=#oc&#34;&gt;IRC&lt;/a&gt; to talk about it. Blind / unexpected feature pull requests might very well not make it, so save yourself some time by talking about it, first! Thanks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scripts / Programs&lt;/strong&gt;&lt;br&gt; OpenComputers generates floppy disks in dungeon chests that can contain data from a selection of &#39;loot&#39; directories. For example, the IRC client and OPPM (a package manager) are two programs that can be found on such loot disks. If you&#39;d like to contribute a program that can be found this way, please have a look at &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/tree/master-MC1.7.10/src/main/resources/assets/opencomputers/loot&#34;&gt;the loot readme&lt;/a&gt;, which explains how to add custom loot. Simply pull request your loot!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Core Scripts&lt;/strong&gt;&lt;br&gt; If you would like to contribute scripts to the &#34;core&#34; Lua code (which basically defines &#39;OpenOS&#39;), please have a look at the &lt;a href=&#34;https://ocdoc.cil.li/lua_conventions&#34;&gt;code conventions&lt;/a&gt; for Lua to save us all some time. Bug fixes are always welcome. Additional programs and features should be kept small. Bigger programs (rule of thumb: larger than 3KiB) should go onto loot disks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Drivers&lt;/strong&gt;&lt;br&gt; As of OC 1.4, mod interaction that was previously provided by OpenComponents it now fully integrated into OC itself. If you wish to contribute a driver for blocks from other mods, cool! Have a look at the &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/tree/master-MC1.7.10/src/main/scala/li/cil/oc/integration&#34;&gt;integration&lt;/a&gt; package to get an idea of how to structure modules and read the readme in that package for more information (in particular on additional criteria to get your PR merged).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Pull requests&lt;/h4&gt; &#xA;&lt;p&gt;The following are a few quick guidelines on pull requests. That is to say they are not necessarily &lt;em&gt;rules&lt;/em&gt;, so there may be exceptions and all that. Just try to stick to those points as a baseline.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure your code is formatted properly.&lt;/li&gt; &#xA; &lt;li&gt;Make sure it builds and works.&lt;/li&gt; &#xA; &lt;li&gt;Try to keep your changes as minimal as possible. In particular, no whitespace changes in existing files, please.&lt;/li&gt; &#xA; &lt;li&gt;Feel free to code in Java, but don&#39;t be surprised if I convert it to Scala later on, if I feel it makes the code more concise ;-)&lt;/li&gt; &#xA; &lt;li&gt;When adding mod dependencies, keep them &lt;em&gt;weak&lt;/em&gt;, i.e. make sure OC still works without that mod. Also, prefer adding a Gradle dependency over adding API class files to the repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html&#34;&gt;Squash&lt;/a&gt; your commits!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also, and this should go without saying, your contributed code will also fall under OC&#39;s license, unless otherwise specified (in the super rare case of adding third-party stuff, add the according license information as a &lt;code&gt;LICENSE-???&lt;/code&gt; file, please).&lt;/p&gt; &#xA;&lt;h2&gt;Extending&lt;/h2&gt; &#xA;&lt;h3&gt;In your own mod&lt;/h3&gt; &#xA;&lt;p&gt;To use &lt;a href=&#34;https://github.com/MightyPirates/OpenComputers/tree/master-MC1.7.10/src/main/java/li/cil/oc/api&#34;&gt;the API&lt;/a&gt; in your own mod, either get the API JAR from the &lt;a href=&#34;http://ci.cil.li/&#34;&gt;build server&lt;/a&gt;, or if you&#39;re using &lt;a href=&#34;http://gradle.org/&#34;&gt;Gradle&lt;/a&gt;, add a dependency to the maven repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;    maven { url = &#34;http://maven.cil.li/&#34; }&#xA;}&#xA;dependencies {&#xA;    compile &#34;li.cil.oc:OpenComputers:MC1.7.10-1.5.+:api&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adjust the version number accordingly to the version you&#39;d like to build against.&lt;/p&gt; &#xA;&lt;p&gt;To run the mod in your development environment, download the &lt;a href=&#34;https://ci.cil.li/view/OpenComputers/job/OpenComputers-MC1.7.10/&#34;&gt;&lt;code&gt;dev&lt;/code&gt; JAR from the build server&lt;/a&gt; and drop it into your development environment&#39;s &lt;code&gt;eclipse/mods&lt;/code&gt; (Eclipse) or &lt;code&gt;run/mods&lt;/code&gt; (IntelliJ IDEA) folder.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, leave out the &lt;code&gt;api&lt;/code&gt; classifier and you can build against the dev JAR directly. This way you don&#39;t have to add it to your mods folder, but you will have to add &lt;code&gt;-Dfml.coreMods.load=li.cil.oc.common.launch.TransformerLoader&lt;/code&gt; to the VM options in your run configuration.&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions, please do not hesitate to ask, either in the &lt;a href=&#34;https://oc.cil.li/&#34;&gt;forums&lt;/a&gt; or in the &lt;a href=&#34;http://webchat.esper.net/?channels=#oc&#34;&gt;IRC&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;OpenComputers&lt;/h3&gt; &#xA;&lt;p&gt;Want to tinker with the mod itself? Here is how - for IntelliJ IDEA users.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you have the Gradle plugin enabled in IntelliJ IDEA (File-&amp;gt;Settings-&amp;gt;Plugins).&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have the Scala plugin enabled.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Clone the repository, then in it run&lt;br&gt; &lt;code&gt;gradlew setupDecompWorkspace&lt;/code&gt;&lt;br&gt; to setup the workspace, including assets and such, then&lt;br&gt; &lt;code&gt;gradlew idea&lt;/code&gt;&lt;br&gt; to create an IntelliJ IDEA project.&lt;/p&gt; &#xA;&lt;p&gt;Open the project and you will be asked to &lt;em&gt;import the Gradle project&lt;/em&gt; (check your Event Log if you missed the pop-up). &lt;strong&gt;Do so&lt;/strong&gt;. This will configure additionally referenced libraries.&lt;/p&gt; &#xA;&lt;p&gt;For more specific instructions, read &lt;a href=&#34;https://ocdoc.cil.li/tutorial:debug_1.7.10&#34;&gt;Steps to run master MC1.7.10 from IDEA&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the case you wish to use Eclipse rather than IntelliJ IDEA, the process is mostly the same, except you must run &lt;code&gt;gradlew eclipse&lt;/code&gt; rather than &lt;code&gt;gradlew idea&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenXiangShan/chisel-playground</title>
    <updated>2022-06-14T01:59:42Z</updated>
    <id>tag:github.com,2022-06-14:/OpenXiangShan/chisel-playground</id>
    <link href="https://github.com/OpenXiangShan/chisel-playground" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chisel Project Template&lt;/h1&gt; &#xA;&lt;p&gt;Another version of the &lt;a href=&#34;https://github.com/ucb-bar/chisel-template&#34;&gt;Chisel template&lt;/a&gt; supporting mill. mill is another Scala/Java build tool without obscure DSL like SBT. It is much faster than SBT.&lt;/p&gt; &#xA;&lt;p&gt;Contents at a glance:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.gitignore&lt;/code&gt; - helps Git ignore junk like generated files, build products, and temporary files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;build.sc&lt;/code&gt; - instructs mill to build the Chisel project&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Makefile&lt;/code&gt; - rules to call mill&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playground/src/GCD.scala&lt;/code&gt; - GCD source file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playground/src/DecoupledGCD.scala&lt;/code&gt; - another GCD source file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playground/src/Elaborate.scala&lt;/code&gt; - wrapper file to call chisel command with the GCD module&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playground/test/src/GCDSpec.scala&lt;/code&gt; - GCD tester&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Feel free to rename or delete files under &lt;code&gt;playground/&lt;/code&gt; or use them as a reference/template.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First, install mill by referring to the documentation &lt;a href=&#34;https://com-lihaoyi.github.io/mill&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run all tests in this design (recommended for test-driven development):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To generate Verilog:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make verilog&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>