<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-23T01:37:47Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wjlow/intro-to-scala</title>
    <updated>2022-09-23T01:37:47Z</updated>
    <id>tag:github.com,2022-09-23:/wjlow/intro-to-scala</id>
    <link href="https://github.com/wjlow/intro-to-scala" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Intro to Scala Fundamentals&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/wjlow/intro-to-scala&#34;&gt;&lt;img src=&#34;https://travis-ci.org/wjlow/intro-to-scala.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a two day course. You are expected to know how to program in at least one programming language (Java, Ruby, JavaScript, etc.). The course teaches the fundamentals of using Scala as a functional programming language.&lt;/p&gt; &#xA;&lt;p&gt;This course is meant to be run in person. There are comments in the exercises to try and point you in the right direction so you should be able to do this in your spare time if you desire. Unit tests are included to verify your solutions for each exercise.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;./auto/sbt test&lt;/code&gt; to run the tests. The first time you run the tests, they will all fail. This is a good thing! As you complete each exercise correctly, the tests will pass.&lt;/p&gt; &#xA;&lt;p&gt;We welcome pull requests and feedback!&lt;/p&gt; &#xA;&lt;h2&gt;Schedule&lt;/h2&gt; &#xA;&lt;h3&gt;Day 1&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Time&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Topic/Exercise&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;09.00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Start&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;09.15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Intro to FP/Scala&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;IntroExercises&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.45&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Morning break&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Intro to ADTs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TypesExercises&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12.15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lunch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13.30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ListExercises&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Afternoon break&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NullExercises&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OptionExercises pt. 1 (Safe constructors)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OptionExercises pt. 2 (first half)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;End&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Day 2&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Time&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Topic/Exercise&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;09.15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Intro to Error Handling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OptionExercises pt. 2 (second half)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Morning break&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.45&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OptionExercises pt. 3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ExceptionExercises&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12.15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lunch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13.15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Exceptions2EitherExercises&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TryExercises&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Afternoon break&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LogParser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.45&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Wrap up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.00&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;End&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Pre-requisites&lt;/h2&gt; &#xA;&lt;p&gt;At a minimum, you need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This repository&lt;/li&gt; &#xA; &lt;li&gt;Java 11 installed (even if you have a newer version)&lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Text editor (IntelliJ is recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1. Fork or clone this repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/wjlow/intro-to-scala.git&#xA;$ cd intro-to-scala/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Install Java 11 (even if you already have a later version pre-installed)&lt;/h4&gt; &#xA;&lt;p&gt;Test if you have Java 11 already with &lt;code&gt;java -version&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;macOS (using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;)&lt;/h5&gt; &#xA;&lt;p&gt;Run the following two commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew tap AdoptOpenJDK/openjdk&#xA;$ brew cask install adoptopenjdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Install &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;macOS&lt;/h5&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://docs.docker.com/docker-for-mac/install/&#34;&gt;Docker for Mac&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4. Run SBT through Docker&lt;/h4&gt; &#xA;&lt;p&gt;To run the &lt;code&gt;sbt&lt;/code&gt; shell using Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./auto/sbt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Launching SBT might take some time, so we recommend using SBT&#39;s interactive shell to run commands, instead of lauching SBT for each command.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/#compilation&#34;&gt;5. Compile program to resolve dependencies before the course&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/#ide-setup&#34;&gt;6. IDE setup&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;p&gt;Launch the SBT shell.&lt;/p&gt; &#xA;&lt;p&gt;To only compile production code use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To compile production and test code use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; test:compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to run tests&lt;/h2&gt; &#xA;&lt;h3&gt;To run all tests&lt;/h3&gt; &#xA;&lt;p&gt;To run all tests use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first time you run all the tests you will get a lot of errors! These tests will be fixed by you during the duration of the course.&lt;/p&gt; &#xA;&lt;h3&gt;Running a single test file&lt;/h3&gt; &#xA;&lt;p&gt;In the meantime, run only a single test case at a time to keep things manageable.&lt;/p&gt; &#xA;&lt;p&gt;To run a single test, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; ~testOnly package.path.of.test.TestName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, to run only the &lt;em&gt;introcourse.level01.IntroExercisesTest&lt;/em&gt; test case, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; ~testOnly introcourse.level01.IntroExercisesTest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run by test case name only, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; ~testOnly *TestName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, to run the &lt;em&gt;introcourse.level01.IntroExercisesTest&lt;/em&gt; test case, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; ~testOnly *IntroExercisesTest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;~&lt;/code&gt; watches for changes to your files and runs the command automatically. It&#39;s nice to use it to get really fast feedback as you are working on the exercises!&lt;/p&gt; &#xA;&lt;p&gt;To stop watching changes through &lt;code&gt;~&lt;/code&gt;, press &lt;kbd&gt;Enter&lt;/kbd&gt; to return to the SBT shell prompt.&lt;/p&gt; &#xA;&lt;h2&gt;Jumping into a Scala REPL&lt;/h2&gt; &#xA;&lt;p&gt;To launch into a Scala REPL with all production code use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once in the console, you can import your production code as such:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import package.objectname._&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, to use functions defined in &lt;em&gt;introcourse.level01.IntroExercises&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scala&amp;gt; import introcourse.level01.IntroExercises._&#xA;scala&amp;gt; add(1, 2)&#xA;res0: Int = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To launch into a Scala REPL with all production and test code use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; test:console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Type &lt;code&gt;:q&lt;/code&gt; to exit from the REPL and return to SBT.&lt;/p&gt; &#xA;&lt;h2&gt;Exiting SBT&lt;/h2&gt; &#xA;&lt;p&gt;To exit the SBT shell use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&amp;gt; exit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;IDE setup&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;IntelliJ IDEA (recommended)&lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/intellij.png&#34; alt=&#34;intellij&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/idea/download/#section=mac&#34;&gt;Download IntelliJ (free Community edition is fine)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Install and open IntelliJ&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;If running IntelliJ for the very first time, it might ask you what &#34;featured&#34; plugin you want to install. Select &lt;em&gt;Install&lt;/em&gt; for Scala, otherwise install manually: &lt;em&gt;Configure -&amp;gt; Plugins -&amp;gt; Browse Repositories -&amp;gt; Scala&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Restart IntelliJ to activate the plugin&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open IntelliJ and open this project: &lt;em&gt;Open -&amp;gt; Select directory where project is in&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;IntelliJ will detect this as an SBT project. Select &lt;code&gt;Import SBT Project&lt;/code&gt; when prompted&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;In the pop-up, choose &lt;em&gt;SDK -&amp;gt; JDK -&amp;gt; Java 11&lt;/em&gt;. If Java 11 is not available, add it by selecting &lt;em&gt;New...&lt;/em&gt; to the right of &lt;em&gt;Project JDK&lt;/em&gt;, then &lt;em&gt;+JDK&lt;/em&gt;, then &lt;code&gt;/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk&lt;/code&gt; and finally &lt;em&gt;Open&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Wait for IntelliJ to refresh the project and download dependencies (this might take a while)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build the project with &lt;kbd&gt;Cmd&lt;/kbd&gt; + &lt;kbd&gt;F9&lt;/kbd&gt;. If you get no errors, IntelliJ setup is all done!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;Tips:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;You can run individual tests by right-clicking and then selecting &lt;em&gt;Run ...ExercisesTest&lt;/em&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/#how-to-run-tests&#34;&gt;or just use SBT&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Use &lt;kbd&gt;Cmd&lt;/kbd&gt; + &lt;kbd&gt;P&lt;/kbd&gt; inside the argument of a function to see what type the argument needs to be.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Use &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;P&lt;/kbd&gt; to find out the type of a highlighted expression.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Text Editor (Vim/Sublime/Atom/Emacs)&lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/sublime.png&#34; alt=&#34;text editor&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open the current directory in an editor of your choice.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open the SBT shell in a terminal window.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Compiling - &lt;a href=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/#compilation&#34;&gt;See SBT instructions on how to compile code&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Running Tests - &lt;a href=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/#how-to-run-tests&#34;&gt;See SBT instructions on how to run tests&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Looking up Scala API - You can also search through the &lt;a href=&#34;https://www.scala-lang.org/api/current/&#34;&gt;Scala APIs&lt;/a&gt; to find any necessary methods or use a documentation browser like &lt;a href=&#34;https://kapeli.com/dash&#34;&gt;Dash&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;To explore the Scala API or any of the exercises use the Scala REPL - &lt;a href=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/#jumping-into-a-scala-repl&#34;&gt;See SBT instructions on how to jump into the REPL&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wjlow/intro-to-scala/master/scala-api.png&#34; alt=&#34;scala api browser&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Further documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.scala-lang.org/api/current/&#34;&gt;Scala API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.scala-sbt.org/1.x/docs/index.html&#34;&gt;SBT 1.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://doc.scalatest.org/3.0.0/index.html#org.scalatest.fixture.FunSpec&#34;&gt;ScalaTest 3.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://doc.scalactic.org/3.0.0/index.html#org.scalactic.TypeCheckedTripleEquals&#34;&gt;Scalactic 3.x&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>