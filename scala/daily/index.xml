<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-13T01:40:57Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>spotify/tfreader</title>
    <updated>2022-11-13T01:40:57Z</updated>
    <id>tag:github.com,2022-11-13:/spotify/tfreader</id>
    <link href="https://github.com/spotify/tfreader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TensorFlow TFRecord reader CLI tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tfreader &lt;img src=&#34;https://github.com/spotify/tfreader/workflows/main/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Simple native CLI tool to read &lt;code&gt;TensorFlow&lt;/code&gt; &lt;code&gt;TFRecords&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;MacOs&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew tap spotify/public&#xA;brew install tfreader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;Right now we only have binaries available under &lt;a href=&#34;https://github.com/spotify/tfreader/releases&#34;&gt;releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Usage: tfr [options] &amp;lt;files? | STDIN&amp;gt;&#xA;TensorFlow TFRecord reader CLI tool&#xA;Options:&#xA;&#xA;  -c, --check-crc32     Enable checks CRC32 on each record&#xA;  -f, --flat            Output examples as flat JSON objects&#xA;  -n, --number  &amp;lt;arg&amp;gt;   Number of records to output&#xA;  -r, --record  &amp;lt;arg&amp;gt;   Record type to be read { example | prediction_log }&#xA;  -h, --help            Show help message&#xA;&#xA; trailing arguments:&#xA;  files (not required)   files? | STDIN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h4&gt;Google Cloud Storage&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tfr -n 1 gs://&amp;lt;bucket&amp;gt;/&amp;lt;path&amp;gt;/part-00000-of-00004.tfrecords | jq .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Local Filesystem&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tfr -n 1 core/src/test/resources/part-00000-of-00004.tfrecords | jq .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;stdin&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat core/src/test/resources/part-00000-of-00004.tfrecords | tfr -n 1 | jq .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Output&lt;/h3&gt; &#xA;&lt;h4&gt;Flat&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;tips&#34;: [0],&#xA;  &#34;trip_seconds&#34;: [60],&#xA;  &#34;payment_type&#34;: [&#34;Cash&#34;],&#xA;  &#34;trip_miles&#34;: [0],&#xA;  &#34;dropoff_longitude&#34;: [-87.63785],&#xA;  &#34;dropoff_latitude&#34;: [41.893215],&#xA;  &#34;pickup_longitude&#34;: [-87.63187],&#xA;  &#34;pickup_latitude&#34;: [41.89204],&#xA;  &#34;trip_start_timestamp&#34;: [1402934400],&#xA;  &#34;trip_start_day&#34;: [2],&#xA;  &#34;trip_start_hour&#34;: [16],&#xA;  &#34;trip_start_month&#34;: [6],&#xA;  &#34;fare&#34;: [3.25],&#xA;  &#34;dropoff_census_tract&#34;: [&#34;17031081800&#34;],&#xA;  &#34;dropoff_community_area&#34;: [&#34;8&#34;],&#xA;  &#34;pickup_community_area&#34;: [&#34;8&#34;],&#xA;  &#34;trip_id&#34;: [&#34;8106c1f6-e6f3-426f-9aaf-b4e9703b4f10&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Default&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;features&#34;: {&#xA;    &#34;feature&#34;: {&#xA;      &#34;tips&#34;: {&#xA;        &#34;floatList&#34;: {&#xA;          &#34;value&#34;: [0]&#xA;        }&#xA;      },&#xA;      &#34;trip_seconds&#34;: {&#xA;        &#34;int64List&#34;: {&#xA;          &#34;value&#34;: [60]&#xA;        }&#xA;      },&#xA;      &#34;payment_type&#34;: {&#xA;        &#34;bytesList&#34;: {&#xA;          &#34;value&#34;: [&#34;Cash&#34;]&#xA;        }&#xA;      },&#xA;      &#34;trip_miles&#34;: {&#xA;        &#34;floatList&#34;: {&#xA;          &#34;value&#34;: [0]&#xA;        }&#xA;      },&#xA;      &#34;dropoff_longitude&#34;: {&#xA;        &#34;floatList&#34;: {&#xA;          &#34;value&#34;: [-87.63785]&#xA;        }&#xA;      },&#xA;      &#34;dropoff_latitude&#34;: {&#xA;        &#34;floatList&#34;: {&#xA;          &#34;value&#34;: [41.893215]&#xA;        }&#xA;      },&#xA;      &#34;pickup_longitude&#34;: {&#xA;        &#34;floatList&#34;: {&#xA;          &#34;value&#34;: [-87.63187]&#xA;        }&#xA;      },&#xA;      &#34;pickup_latitude&#34;: {&#xA;        &#34;floatList&#34;: {&#xA;          &#34;value&#34;: [41.89204]&#xA;        }&#xA;      },&#xA;      &#34;trip_start_timestamp&#34;: {&#xA;        &#34;int64List&#34;: {&#xA;          &#34;value&#34;: [1402934400]&#xA;        }&#xA;      },&#xA;      &#34;trip_start_day&#34;: {&#xA;        &#34;int64List&#34;: {&#xA;          &#34;value&#34;: [2]&#xA;        }&#xA;      },&#xA;      &#34;trip_start_hour&#34;: {&#xA;        &#34;int64List&#34;: {&#xA;          &#34;value&#34;: [16]&#xA;        }&#xA;      },&#xA;      &#34;trip_start_month&#34;: {&#xA;        &#34;int64List&#34;: {&#xA;          &#34;value&#34;: [6]&#xA;        }&#xA;      },&#xA;      &#34;fare&#34;: {&#xA;        &#34;floatList&#34;: {&#xA;          &#34;value&#34;: [3.25]&#xA;        }&#xA;      },&#xA;      &#34;dropoff_census_tract&#34;: {&#xA;        &#34;bytesList&#34;: {&#xA;          &#34;value&#34;: [&#34;17031081800&#34;]&#xA;        }&#xA;      },&#xA;      &#34;dropoff_community_area&#34;: {&#xA;        &#34;bytesList&#34;: {&#xA;          &#34;value&#34;: [&#34;8&#34;]&#xA;        }&#xA;      },&#xA;      &#34;pickup_community_area&#34;: {&#xA;        &#34;bytesList&#34;: {&#xA;          &#34;value&#34;: [&#34;8&#34;]&#xA;        }&#xA;      },&#xA;      &#34;trip_id&#34;: {&#xA;        &#34;bytesList&#34;: {&#xA;          &#34;value&#34;: [&#34;8106c1f6-e6f3-426f-9aaf-b4e9703b4f10&#34;]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>albuch/sbt-dependency-check</title>
    <updated>2022-11-13T01:40:57Z</updated>
    <id>tag:github.com,2022-11-13:/albuch/sbt-dependency-check</id>
    <link href="https://github.com/albuch/sbt-dependency-check" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SBT Plugin for OWASP DependencyCheck. Monitor your dependencies and report if there are any publicly known vulnerabilities (e.g. CVEs). ðŸŒˆ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sbt-dependency-check &lt;a href=&#34;https://github.com/albuch/sbt-dependency-check/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/albuch/sbt-dependency-check/actions/workflows/ci.yml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codacy.com/app/albuch/sbt-dependency-check?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=albuch/sbt-dependency-check&amp;amp;utm_campaign=Badge_Grade_Dashboard&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/25bd3b5e4f8e4ee78cfbdca62de31ca7&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;Apache 2.0 License&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The sbt-dependency-check plugin allows projects to monitor dependent libraries for known, published vulnerabilities (e.g. CVEs). The plugin achieves this by using the awesome &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck&#34;&gt;OWASP DependencyCheck library&lt;/a&gt; which already offers several integrations with other build and continuous integration systems. For more information on how OWASP DependencyCheck works and how to read the reports check the &lt;a href=&#34;https://jeremylong.github.io/DependencyCheck/index.html&#34;&gt;project&#39;s documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#tasks&#34;&gt;Tasks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#analyzer-configuration&#34;&gt;Analyzer Configuration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#advanced-configuration&#34;&gt;Advanced Configuration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#multi-project-setup&#34;&gt;Multi-Project setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#changing-log-level&#34;&gt;Changing Log Level&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#global-plugin-configuration&#34;&gt;Global Plugin Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#running-behind-a-proxy&#34;&gt;Running behind a proxy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#development&#34;&gt;Development&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#release&#34;&gt;Release&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;sbt-dependency-check is an AutoPlugin. Simply add the plugin to &lt;code&gt;project/plugins.sbt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;addSbtPlugin(&#34;net.vonbuchholtz&#34; % &#34;sbt-dependency-check&#34; % &#34;4.2.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use sbt-dependency-check &lt;code&gt;v2.0.0&lt;/code&gt; or higher as previous versions aren&#39;t compatible with NVD feeds anymore. Starting with sbt-dependency-check &lt;code&gt;v3.0.0&lt;/code&gt; sbt v0.13.x is no longer supported.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Tasks&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Task&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheck&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Runs dependency-check against the current project, its aggregates and dependencies and generates a report for each project.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;$ sbt dependencyCheck&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckAggregate&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Runs dependency-check against the current project, its aggregates and dependencies and generates a single report in the current project&#39;s output directory.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;$ sbt dependencyCheckAggregate&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckAnyProject&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Runs dependency-check against all projects, aggregates and dependencies and generates a single report in the current project&#39;s output directory.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;$ sbt dependencyCheckAnyProject&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckUpdateOnly&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Updates the local cache of the NVD data from NIST.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;$ sbt dependencyCheckUpdateOnly&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPurge&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Deletes the local copy of the NVD. This is used to force a refresh of the data.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;$ sbt dependencyCheckPurge&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckListSettings&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Prints all settings and their values for the project.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;$ sbt dependencyCheckListSettings&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The reports will be written to the default location &lt;code&gt;crossTarget.value&lt;/code&gt;. This can be overwritten by setting &lt;code&gt;dependencyCheckOutputDirectory&lt;/code&gt;. See Configuration for details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The first run might take a while as the full data from the National Vulnerability Database (NVD) hosted by NIST: &lt;a href=&#34;https://nvd.nist.gov&#34;&gt;https://nvd.nist.gov&lt;/a&gt; has to be downloaded and imported into the database. Later runs will only download change sets unless the last update was more than 7 days ago. It is recommended to set up a mirror of the NVD feed in your local network to reduce the risk of rate limiting. See &lt;a href=&#34;https://github.com/stevespringett/nist-data-mirror&#34;&gt;https://github.com/stevespringett/nist-data-mirror&lt;/a&gt; for instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;sbt-dependency-check&lt;/code&gt; uses the default configuration of &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck&#34;&gt;OWASP DependencyCheck&lt;/a&gt;. You can override them in your &lt;code&gt;build.sbt&lt;/code&gt; files. Use the task &lt;code&gt;dependencyCheckListSettings&lt;/code&gt; to print all available settings and their values to sbt console.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Setting&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Default Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckAutoUpdate&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether auto-updating of the NVD CVE/CPE data is enabled. It is not recommended that this be turned to false.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCveValidForHours&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the number of hours to wait before checking for new updates from the NVD.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckFailBuildOnCVSS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specifies if the build should be failed if a CVSS score above, or equal to, a specified level is identified. The default is 11 which means since the CVSS scores are 0-10, by default the build will never fail. More information on CVSS scores can be found at the &lt;a href=&#34;https://nvd.nist.gov/vuln-metrics/cvss&#34;&gt;NVD&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;11.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckJUnitFailBuildOnCVSS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;If using the JUNIT report format the dependencyCheckJUnitFailOnCVSS sets the CVSS score threshold that is considered a failure. The default value is 0 - all vulnerabilities are considered a failure.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckFormat&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The report format to be generated (HTML, XML, JUNIT, CSV, JSON, SARIF, ALL). This setting is ignored if dependencyCheckReportFormats is set.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTML&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckFormats&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A sequence of report formats to be generated (HTML, XML, JUNIT, CSV, JSON, SARIF, ALL).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckOutputDirectory&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The location to write the report(s).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;crossTarget.value&lt;/code&gt; e.g. &lt;code&gt;./target/scala-2.11&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckScanSet&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An optional sequence of files that specify additional files and/or directories to analyze as part of the scan. If not specified, defaults to standard scala conventions (see &lt;a href=&#34;http://www.scala-sbt.org/0.13/docs/Directories.html#Source+code&#34;&gt;SBT documentation&lt;/a&gt; for details).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;/src/main/resources&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckSkip&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Skips the dependency-check analysis&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckSkipTestScope&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Skips analysis for artifacts with Test Scope&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckSkipRuntimeScope&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Skips analysis for artifacts with Runtime Scope&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckSkipProvidedScope&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Skips analysis for artifacts with Provided Scope&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckSkipOptionalScope&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Skips analysis for artifacts with Optional Scope&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckSuppressionFiles&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The sequence of file paths to the XML suppression files - used to suppress false positives. See &lt;a href=&#34;https://jeremylong.github.io/DependencyCheck/general/suppression.html&#34;&gt;Suppressing False Positives&lt;/a&gt; for the file syntax.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckHintsFile&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The file path to the XML hints file - used to resolve &lt;a href=&#34;https://jeremylong.github.io/DependencyCheck/general/hints.html&#34;&gt;false negatives&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckUseSbtModuleIdAsGav&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use the SBT ModuleId as GAV identifier. Ensures GAV is available even if Maven Central isn&#39;t.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckAnalysisTimeout&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set the analysis timeout in minutes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckEnableExperimental&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enable the experimental analyzers. If not enabled the experimental analyzers (see below) will not be loaded or used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckEnableRetired&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enable the retired analyzers. If not enabled retired analyzers will not be loaded or used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Analyzer Configuration&lt;/h4&gt; &#xA;&lt;p&gt;The following properties are used to configure the various file type analyzers. These properties can be used to turn off specific analyzers if it is not needed. Note, that specific analyzers will automatically disable themselves if no file types that they support are detected - so specifically disabling them may not be needed. For more information about the individual analyzers see the &lt;a href=&#34;https://jeremylong.github.io/DependencyCheck/analyzers/index.html&#34;&gt;DependencyCheck Analyzer documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Setting&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Default Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckArchiveAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the Archive Analyzer will be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckZipExtensions&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A comma-separated list of additional file extensions to be treated like a ZIP file, the contents will be extracted and analyzed.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckJarAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether Jar Analyzer will be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckDartAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the experimental Dart analyzer is enabled. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCentralAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether Central Analyzer will be used. If this analyzer is being disabled there is a good chance you also want to disable the Nexus Analyzer (see below).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCentralAnalyzerUseCache&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the Central Analyer will cache results. Cached results expire after 30 days.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckOSSIndexAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the OSS Index Analyzer will be enabled.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckOSSIndexAnalyzerUrl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;URL of the Sonatype OSS Index service.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ossindex.sonatype.org&#34;&gt;https://ossindex.sonatype.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckOSSIndexAnalyzerUseCache&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the OSS Index Analyzer will cache results. Cached results expire after 24 hours.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckOSSIndexAnalyzerUsername&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The optional username to use for the Sonatype OSS Index service. Note: an account with OSS Index is not required.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckOSSIndexAnalyzerPassword&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The optional password to use for the Sonatype OSS Index service.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckOSSIndexWarnOnlyOnRemoteErrors&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether remote errors from the OSS Index (e.g. BAD GATEWAY, RATE LIMIT EXCEEDED) will result in warnings only instead of failing execution.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNexusAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether Nexus Analyzer will be used. This analyzer is superseded by the Central Analyzer; however, you can configure this to run against a Nexus Pro installation.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNexusUrl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Defines the Nexus Serverâ€™s web service end point (example &lt;a href=&#34;http://domain.enterprise/service/local/&#34;&gt;http://domain.enterprise/service/local/&lt;/a&gt;). If not set the Nexus Analyzer will be disabled.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://repository.sonatype.org/service/local/&#34;&gt;https://repository.sonatype.org/service/local/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNexusUsesProxy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whether or not the defined proxy should be used when connecting to Nexus.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNexusUser&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The username to authenticate to the Nexus Server&#39;s web service end point. If not set the Nexus Analyzer will use an unauthenticated connection.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNexusPassword&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The password to authenticate to the Nexus Server&#39;s web service end point. If not set the Nexus Analyzer will use an unauthenticated connection.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPyDistributionAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the &lt;em&gt;experimental&lt;/em&gt; Python Distribution Analyzer will be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPyPackageAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the &lt;em&gt;experimental&lt;/em&gt; Python Package Analyzer will be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckRubygemsAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the &lt;em&gt;experimental&lt;/em&gt; Ruby Gemspec Analyzer will be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckOpensslAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the openssl Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCmakeAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; CMake Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckAutoconfAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; autoconf Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckMavenInstallAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the Maven install Analyzer should be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPipAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; pip Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPipfileAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Pipfile Analyzer should be used &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckComposerAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; PHP Composer Lock File Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCpanFileAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Perl CPAN File Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNodeAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;retired&lt;/em&gt; Node.js Analyzer should be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNodePackageSkipDevDependencies&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the Node.js Analyzer will skip devDependencies.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNodeAuditAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the Node Audit Analyzer should be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNodeAuditSkipDevDependencies&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the Node Audit Analyzer will skip devDependencies.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNodeAuditAnalyzerUrl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the URL to the NPM Audit API. If not set uses default URL.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNodeAuditAnalyzerUseCache&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the Node Audit Analyzer will cache results. Cached results expire after 24 hours.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNPMCPEAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the or not the &lt;em&gt;experimental&lt;/em&gt; NPM CPE Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckYarnAuditAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the Yarn Audit Analyzer should be used. This analyzer requires yarn and an internet connection. Use &lt;code&gt;dependencyCheckNodeAuditSkipDevDependencies&lt;/code&gt; to skip dev dependencies.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPathToYarn&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the path to the Yarn executable.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPNPMAuditAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the Pnpm Audit Analyzer is enabled. This analyzer requires pnpm and an internet connection. Use &lt;code&gt;nodeAuditSkipDevDependencies&lt;/code&gt; to skip dev dependencies.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPathToPNPM&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the path to the &lt;code&gt;pnpm&lt;/code&gt; executable.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNuspecAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the .NET Nuget Nuspec Analyzer will be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckNugetConfAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the &lt;em&gt;experimental&lt;/em&gt; .NET Nuget packages.config Analyzer will be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCocoapodsEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Cocoapods Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckMixAuditAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Mix Audit Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckMixAuditPath&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the path to the mix_audit executable; only used if mix audit analyzer is enabled and experimental analyzers are enabled.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckSwiftEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Swift Package Manager Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckSwiftPackageResolvedAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Swift Package Resolved Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckBundleAuditEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Ruby Bundle Audit Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPathToBundleAudit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The path to Ruby Bundle Audit.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckBundleAuditWorkingDirectory&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the path for the working directory that the Ruby Bundle Audit binary should be executed from.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckAssemblyAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the .NET Assembly Analyzer should be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckMSBuildAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the MSBuild Analyzer should be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPathToDotNETCore&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The path to .NET Core for .NET assembly analysis on non-windows systems.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPEAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; PE Analyzer that reads the PE headers of DLL and EXE files should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckRetireJSAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the RetireJS Analyzer should be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckRetireJSForceUpdate&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the RetireJS Analyzer should update regardless of the Â´dependencyCheckAutoUpdateÂ´ setting.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckRetireJSAnalyzerRepoJSUrl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set the URL to the RetireJS repository. &lt;strong&gt;Note&lt;/strong&gt; the file name must be &lt;code&gt;jsrepository.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Retirejs/retire.js/master/repository/jsrepository.json&#34;&gt;https://raw.githubusercontent.com/Retirejs/retire.js/master/repository/jsrepository.json&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckRetireJsAnalyzerRepoValidFor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set the interval in hours until the next check for CVEs updates is performed by the RetireJS analyzer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;24&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckRetireJsAnalyzerFilters&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set one or more filters for the RetireJS analyzer.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckRetireJsAnalyzerFilterNonVulnerable&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the RetireJS analyzer should filter non-vulnerable dependencies&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckArtifactoryAnalyzerEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the JFrog Artifactory analyzer will be used&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckArtifactoryAnalyzerUrl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The Artifactory server URL.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckArtifactoryAnalyzerUseProxy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether Artifactory should be accessed through a proxy or not.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckArtifactoryAnalyzerParallelAnalysis&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether the Artifactory analyzer should be run in parallel or not.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckArtifactoryAnalyzerUsername&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The user name (only used with API token) to connect to Artifactory instance.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckArtifactoryAnalyzerApiToken&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The API token to connect to Artifactory instance. &lt;strong&gt;Note:&lt;/strong&gt; These settings should not be added to your local &lt;code&gt;build.sbt&lt;/code&gt; file and commited to your code repository for security reasons. They can be added to &lt;code&gt;~/.sbt/&amp;lt;version&amp;gt;/global.sbt&lt;/code&gt; file instead&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckArtifactoryAnalyzerBearerToken&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The bearer token to connect to Artifactory instance. &lt;strong&gt;Note:&lt;/strong&gt; These settings should not be added to your local &lt;code&gt;build.sbt&lt;/code&gt; file and commited to your code repository for security reasons. They can be added to &lt;code&gt;~/.sbt/&amp;lt;version&amp;gt;/global.sbt&lt;/code&gt; file instead&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckGolangDepEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Golang Dependency Analyzer should be used. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckGolangModEnabled&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets whether or not the &lt;em&gt;experimental&lt;/em&gt; Golang Module Analyzer should be used. Requires &lt;code&gt;go&lt;/code&gt; to be installed. &lt;code&gt;dependencyCheckEnableExperimental&lt;/code&gt; must be set to true.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckPathToGo&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The path to the &#34;go&#34; runtime.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Advanced Configuration&lt;/h4&gt; &#xA;&lt;p&gt;The following properties can be configured in the plugin. However, they are less frequently changed. One exception may be the cvedUrl properties, which can be used to host a mirror of the NVD within an enterprise environment.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Setting&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Default Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCveUrlModified&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;URL for the modified CVE JSON data feed. When mirroring the NVD you must mirror the *.json.gz and the *.meta files. Optional if your custom &lt;code&gt;dependencyCheckCveUrlBase&lt;/code&gt; is just a domain name change.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-modified.json.gz&#34;&gt;https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-modified.json.gz&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCveUrlBase&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Base URL for each year&#39;s CVE JSON data feed, the %d will be replaced with the year.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-%d.json.gz&#34;&gt;https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-%d.json.gz&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCveUser&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The username used when connecting to the &lt;code&gt;dependencyCheckCveUrlBase&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCvePassword&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The password used when connecting to the &lt;code&gt;dependencyCheckCveUrlBase&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCveWaitTime&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The time in milliseconds to wait between downloads from the NVD.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCveStartYear&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The first year of NVD CVE data to download from the NVD.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2002&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckConnectionTimeout&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the URL Connection Timeout (in milliseconds) used when downloading external data.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckConnectionReadTimeout&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the URL Read Timeout (in milliseconds) used when downloading external data.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckDataDirectory&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets the data directory to hold SQL CVEs contents. This should generally not be changed.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[JAR]\data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckDatabaseDriverName&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The name of the database driver. Example: org.h2.Driver.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;org.h2.Driver&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckDatabaseDriverPath&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The path to the database driver JAR file; only used if the driver is not in the class path.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckConnectionString&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The connection string used to connect to the database, the %s will be replace with a name for the database&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;jdbc:h2:file:%s;AUTOCOMMIT=ON;MV_STORE=FALSE;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckDatabaseUser&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The username used when connecting to the database.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dcuser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckDatabasePassword&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The password used when connecting to the database.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dependencyCheckCpeStartsWith&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The starting String to identify the CPEs that are qualified to be imported.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Multi-Project setup&lt;/h3&gt; &#xA;&lt;p&gt;Use either &lt;code&gt;Global&lt;/code&gt; or &lt;code&gt;ThisBuild&lt;/code&gt; scope if you want to define a setting for all projects. Define on the project level if you want to diverge from the default or Global/ThisBuild setting for a specific project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;build.sbt&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Scala&#34;&gt;&#xA;Global / dependencyCheckFormats := Seq(&#34;HTML&#34;, &#34;JSON&#34;)&#xA;&#xA;lazy val root = (project in file(&#34;.&#34;))&#xA;  .aggregate(core)&#xA;  .settings(&#xA;&#x9;libraryDependencies += &#34;com.github.t3hnar&#34; %% &#34;scala-bcrypt&#34; % &#34;2.6&#34; % &#34;test&#34;,&#xA;&#x9;dependencyCheckSkipTestScope := false&#xA;  )&#xA;&#xA;lazy val util = (project in file(&#34;util&#34;))&#xA;  .settings(&#xA;    libraryDependencies += &#34;commons-beanutils&#34; % &#34;commons-beanutils&#34; % &#34;1.9.1&#34;&#xA;  )&#xA;&#xA;lazy val core = project.dependsOn(util)&#xA;  .settings(&#xA;    libraryDependencies += &#34;org.apache.commons&#34; % &#34;commons-collections4&#34; % &#34;4.1&#34; % &#34;runtime&#34;,&#xA;    dependencyCheckSkip := true&#xA;  )&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Almost all settings are only evaluated for the project you are executing the task on, not for each individual sub-project. The exemption that are supported to work for &lt;code&gt;aggregate()&lt;/code&gt; and &lt;code&gt;dependsOn()&lt;/code&gt; projects, are the scope skipping settings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dependencyCheckSkip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dependencyCheckSkipTestScope&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dependencyCheckSkipRuntimeScope&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dependencyCheckSkipProvidedScope&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dependencyCheckSkipOptionalScope&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should set these individually for each project if necessary.&lt;/p&gt; &#xA;&lt;h3&gt;Changing Log Level&lt;/h3&gt; &#xA;&lt;p&gt;Add the following to your &lt;code&gt;build.sbt&lt;/code&gt; file to increase the log level from default &lt;code&gt;info&lt;/code&gt; to e.g. &lt;code&gt;debug&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;logLevel in dependencyCheck := Level.Debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and add &lt;code&gt;-Dlog4j2.level=debug&lt;/code&gt; when running a check:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt -Dlog4j2.level=debug dependencyCheck&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;dependencyCheck&lt;/code&gt; with the right &lt;a href=&#34;https://raw.githubusercontent.com/albuch/sbt-dependency-check/main/#tasks&#34;&gt;task name&lt;/a&gt; that you use for your project.&lt;/p&gt; &#xA;&lt;h3&gt;Global Plugin Configuration&lt;/h3&gt; &#xA;&lt;p&gt;If you want to apply some default configuration for all your SBT projects you can add them as Global Settings:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the plugin to &lt;code&gt;~/.sbt/1.0/plugins/sbt-dependency-check.sbt&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Scala&#34;&gt;addSbtPlugin(&#34;net.vonbuchholtz&#34; % &#34;sbt-dependency-check&#34; % &#34;4.2.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add settings at &lt;code&gt;~/.sbt/1.0/global.sbt&lt;/code&gt; using their fully qualified name (including package and nested object structure). E.g.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Scala&#34;&gt;net.vonbuchholtz.sbt.dependencycheck.DependencyCheckPlugin.autoImport.dependencyCheckFormat := &#34;All&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For further information about global settings and plugins check the sbt documentation: &lt;a href=&#34;https://www.scala-sbt.org/1.x/docs/Global-Settings.html&#34;&gt;https://www.scala-sbt.org/1.x/docs/Global-Settings.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running behind a proxy&lt;/h3&gt; &#xA;&lt;p&gt;SBT and &lt;code&gt;sbt-dependency-check&lt;/code&gt; both honor the standard http and https proxy settings for the JVM.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt -Dhttp.proxyHost=proxy.example.com \&#xA;    -Dhttp.proxyPort=3218 \&#xA;    -Dhttp.proxyUser=username \&#xA;    -Dhttp.proxyPassword=password \&#xA;    -DnoProxyHosts=&#34;localhost|http://www.google.com&#34; \&#xA;    dependencyCheck&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default h2 DB user and password can be found at &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck/raw/main/core/src/main/resources/dependencycheck.properties#L38&#34;&gt;dependencycheck.properties&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To update ODC DB Schema for sbt scripted test case &lt;code&gt;purgeDeletesDatabase&lt;/code&gt; run query &lt;code&gt;Update PUBLIC.PROPERTIES t SET t.&#34;VALUE&#34;= &#39;&amp;lt;NEW_VERSION_NUMBER&amp;gt;&#39; WHERE t.ID = &#39;version&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Release&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;release&lt;/code&gt; task and follow instructions. Verify that release reached &lt;a href=&#34;https://repo1.maven.org/maven2/net/vonbuchholtz/sbt-dependency-check_2.12_1.0/&#34;&gt;Maven Central&lt;/a&gt;. It takes up to two additional hours to be indexed for &lt;a href=&#34;https://search.maven.org&#34;&gt;https://search.maven.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2016-2022 Alexander Baron v. Buchholtz&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>