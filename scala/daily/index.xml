<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-24T01:47:47Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zio/zio-petclinic</title>
    <updated>2022-08-24T01:47:47Z</updated>
    <id>tag:github.com,2022-08-24:/zio/zio-petclinic</id>
    <link href="https://github.com/zio/zio-petclinic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An idiomatic pet clinic application written with ZIO.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ZIO Pet Clinic: An idiomatic pet clinic application written with ZIO.&lt;/h1&gt; &#xA;&lt;p&gt;This is a fullstack web app that serves as an example for best utilizing ZIO and the libraries within its ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;This app uses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dream11/zio-http&#34;&gt;ZIO HTTP&lt;/a&gt; for the HTTP server&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zio/zio-json&#34;&gt;ZIO JSON&lt;/a&gt; for JSON serialization&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zio/zio-quill&#34;&gt;ZIO Quill&lt;/a&gt; for SQL queries&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scottweaver/testcontainers-for-zio&#34;&gt;ZIO Test Containers&lt;/a&gt; for testing database queries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can play with the app &lt;a href=&#34;https://zio-pet-clinic.surge.sh&#34;&gt;here&lt;/a&gt;. &lt;em&gt;Keep in mind that this runs on a free Heroku instance, so it might take ~10 seconds to respond the first time. Also, all data will be reset every 15 minutes in order to keep it nice and tidy.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also run the app locally. First, open your terminal and clone the project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone git@github.com:zio/zio-petclinic.git&#xA;cd zio-petclinic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, open three terminal windows or panes and run the following commands:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pane 1&lt;/strong&gt; &lt;em&gt;Installs frontend dependencies and runs the development server&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn install&#xA;yarn exec vite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pane 2&lt;/strong&gt; &lt;em&gt;Compiles and runs the http server&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sbt&#xA;~ backend/reStart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pane 3&lt;/strong&gt; &lt;em&gt;Compiles the frontend JavaScript&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sbt&#xA;~ frontend/fastLinkJS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open the browser and navigate to &lt;a href=&#34;http://localhost:3000&#34;&gt;localhost:3000&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wellner/jcarafe</title>
    <updated>2022-08-24T01:47:47Z</updated>
    <id>tag:github.com,2022-08-24:/wellner/jcarafe</id>
    <link href="https://github.com/wellner/jcarafe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jcarafe&lt;/h1&gt; &#xA;&lt;h1&gt;==================================== Build Instructions&lt;/h1&gt; &#xA;&lt;p&gt;This README provides basic instructions for how to build jCarafe from source.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure that you have a JDK installed (i.e. &#34;javac&#34;) and available on your working path.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and install the latest version of Simple Build Tool (SBT)&lt;/p&gt; &lt;p&gt;Available at: &lt;a href=&#34;http://www.scala-sbt.org&#34;&gt;http://www.scala-sbt.org&lt;/a&gt;&lt;/p&gt; &lt;p&gt;** Note: Ensure proxy settings are appropriate and ensure your machine has a connection to the Internet. See the SBT documentation for setting the http proxy. Typically, this involves adding &#34;-Dhttp.proxyHost=&#xA;   &lt;hostname&gt;&#xA;    &#34; and &#34;-Dhttp.proxyPort=&#xA;    &lt;port number&gt;&#xA;     &#34; as arguments to the &#34;java&#34; invocation that launches SBT.&#xA;     &lt;br&gt; It is also recommended to set the Java runtime heap allocation to at least 1024m, more if available.&#xA;    &lt;/port&gt;&#xA;   &lt;/hostname&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Place the &#34;sbt&#34; shell script or &#34;sbt.bat&#34; file in your path, following the SBT instructions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build jcarafe-core and jcarafe-ext. Execute the commands below from the top-level &#34;jcarafe&#34; directory.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmd&amp;gt; sbt &#34;project jcarafe-core&#34; javacc &#34;project jcarafe&#34; assembly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This command will generate the jar files&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   jcarafe-core/target/jcarafe-core-assembly-0.9.8.x.jar&#xA;   jcarafe-ext/target/jcarafe-ext-assembly-0.9.8.x.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Step (3) above will produce a single .jar file with all the class files found in jcarafe-core and a separate .jar file in jcarafe-ext that includes all of jcarafe-core and jcarafe-ext. Note that other build targets are available for packaging up jcarafe as a library (e.g. &#34;sbt package&#34;). See the SBT documentation for more details.&lt;/p&gt; &#xA;&lt;h1&gt;===================================== Generating Source-level Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Enter the top-level &#34;jcarafe/&#34; directory and execute the following SBT command:&lt;/p&gt; &#xA;&lt;p&gt;cmd&amp;gt; sbt doc&lt;/p&gt; &#xA;&lt;p&gt;This will generate source-level documentation in the following directories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    jcarafe/jcarafe-core/target/scala-2.10/api&#xA;    jcarafe/jcarafe-ext/target/scala-2.10/api&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>