<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-29T01:34:59Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rolandtritsch/scala-sbt-tutorial</title>
    <updated>2023-09-29T01:34:59Z</updated>
    <id>tag:github.com,2023-09-29:/rolandtritsch/scala-sbt-tutorial</id>
    <link href="https://github.com/rolandtritsch/scala-sbt-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Playground/sandbox to explore SBT capabilities and features&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SBT Playground&lt;/h1&gt; &#xA;&lt;p&gt;I am using this repo to document some of my experiments to understand SBT better.&lt;/p&gt; &#xA;&lt;p&gt;Some important key concepts are (obviously) ...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sub-Projects&lt;/li&gt; &#xA; &lt;li&gt;Settings, Tasks, ...&lt;/li&gt; &#xA; &lt;li&gt;Scopes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Project, Configuration, Task ...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I am (almost exclusively) use &lt;code&gt;Build.scala&lt;/code&gt;, because it exposes the full power (and flexibility) of SBT. I am only using &lt;code&gt;*.sbt&lt;/code&gt; to define the version (so that you have something to play around with to see how the &lt;code&gt;*.sbt-files&lt;/code&gt; fit into it). In general I recommend to use &lt;code&gt;Build.scala&lt;/code&gt; as much as possible, because sooner or later you will run into configuration issues, that will require you to use &lt;code&gt;Build.scala&lt;/code&gt; and by then you want to know, how to use it.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Just run &lt;code&gt;&amp;gt; sbt&lt;/code&gt; to compile &lt;code&gt;./project/Build.scala&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;At the prompt run ... &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;inspect show-time inspect hello-world show show-time show hell-world&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;Build.scala&lt;/code&gt; to play around with the settings&lt;/li&gt; &#xA; &lt;li&gt;Either restart sbt or run &lt;code&gt;&amp;gt; reload&lt;/code&gt; to reload/recompile &lt;code&gt;Build.scala&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting into it&lt;/h2&gt; &#xA;&lt;h3&gt;0.0.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Explore the difference between the configuration &lt;code&gt;Compile&lt;/code&gt; and the task &lt;code&gt;compile&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Explore if and how the build settings will override project settings &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;e.g. if there is a setting for &lt;code&gt;ThisBuild&lt;/code&gt; in configuration &lt;code&gt;Compile&lt;/code&gt;, then how will that become visible in sub-projects?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;&amp;gt; inspect hello-world&lt;/code&gt; and try to guess what the following commands will display &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;show sub-project1/&lt;em&gt;:hello-world show sub-project1/compile:hello-world show sub-project1/compile:compile::hello-world show sub-project2/compile:compile::hello-world show sub-project1/&lt;/em&gt;:compile::hello-world show sub-project2/*:compile::hello-world&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.0.3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a dependency between show-timer and show-timer-upper&lt;/li&gt; &#xA; &lt;li&gt;And apply &lt;code&gt;.toUpperCase&lt;/code&gt; to show-timer-upper&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.0.4&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sbt-assembly work&lt;/li&gt; &#xA; &lt;li&gt;This shows a lot of good stuff, e.g. ... &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;How to make one task depend on another (with &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;The difference between compile, package and publish&lt;/li&gt; &#xA;   &lt;li&gt;How to use Artifacts (for publishing something)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;To make it work you can run &lt;code&gt;&amp;gt; sbt clean publish-local&lt;/code&gt; and can then run the jar files from the commandline (they are self-contained): &lt;code&gt;&amp;gt; java -jar ./sub1/target/scala-2.9.2/sub-project1_2.9.2-0.0.1-assembly.jar&lt;/code&gt; and &lt;code&gt;&amp;gt; java -jar ./sub2/target/scala-2.9.2/sub-project2_2.9.2-0.0.2-assembly.jar&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>