<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-18T01:38:31Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>typelevel/mouse</title>
    <updated>2024-03-18T01:38:31Z</updated>
    <id>tag:github.com,2024-03-18:/typelevel/mouse</id>
    <link href="https://github.com/typelevel/mouse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A small companion to cats&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mouse &lt;img src=&#34;https://github.com/typelevel/mouse/workflows/Continuous%20Integration/badge.svg?sanitize=true&#34; alt=&#34;Continuous Integration&#34;&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/org.typelevel/mouse_2.12&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.typelevel/mouse_2.12.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://typelevel.org/cats/&#34;&gt;&lt;img src=&#34;https://typelevel.org/cats/img/cats-badge.svg?sanitize=true&#34; height=&#34;40px&#34; align=&#34;right&#34; alt=&#34;Cats friendly&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Mouse is a small companion to the &lt;a href=&#34;https://github.com/typelevel/cats&#34;&gt;Cats&lt;/a&gt; functional programming library and the Scala standard library.&lt;/p&gt; &#xA;&lt;p&gt;The library arose from this &lt;a href=&#34;https://github.com/typelevel/cats/issues/791&#34;&gt;Cats issue&lt;/a&gt; and is a &lt;a href=&#34;http://typelevel.org/projects/&#34;&gt;Typelevel member&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mouse is published for Scala 2.12, 2.13 and 3.0. For Scala.jvm:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&#34;org.typelevel&#34; %% &#34;mouse&#34; % version&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For scala.js 1.x:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&#34;org.typelevel&#34; %%% &#34;mouse&#34; % version&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Learn more about Mouse at &lt;a href=&#34;https://typelevel.org/mouse/&#34;&gt;https://typelevel.org/mouse/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Content&lt;/h2&gt; &#xA;&lt;p&gt;Mouse includes enrichments for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/any.scala&#34;&gt;Any&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/boolean.scala&#34;&gt;Boolean&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/double.scala&#34;&gt;Double&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/anyf.scala&#34;&gt;F[A] for any F, A&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/feither.scala&#34;&gt;F[Either[A, B]]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/foption.scala&#34;&gt;F[Option[A]]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/fnested.scala&#34;&gt;F[G[A]]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/fnested.scala&#34;&gt;F[G[H[A]]]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/ftuple.scala&#34;&gt;F[TupleN]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/int.scala&#34;&gt;Int&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/list.scala&#34;&gt;List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/long.scala&#34;&gt;Long&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/map.scala&#34;&gt;Map&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/option.scala&#34;&gt;Option&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/set.scala&#34;&gt;Set&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/string.scala&#34;&gt;String&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala/mouse/try.scala&#34;&gt;Try&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/shared/src/main/scala-2/src/main/scala/mouse/tuple.scala&#34;&gt;Tuple&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;scala&amp;gt; import mouse.all._&#xA;import mouse.all._&#xA;&#xA;scala&amp;gt; true.option(&#34;Its true!&#34;)&#xA;res0: Option[String] = Some(Its true!)&#xA;&#xA;scala&amp;gt; def makeEven(i: Int) = (i % 2 == 1).applyIf(i)(_ - 1)&#xA;def makeEven(i: Int): Int&#xA;&#xA;scala&amp;gt; val e1: Either[String, Int] = Left(&#34;failed&#34;)&#xA;e1: Either[String,Int] = Left(failed)&#xA;&#xA;scala&amp;gt; true.whenA(e1)&#xA;res0: Either[String,Unit] = Left(failed)&#xA;&#xA;scala&amp;gt; false.whenA(e1)&#xA;res1: Either[String,Unit] = Right(())&#xA;&#xA;scala&amp;gt; res0.cata(msg =&amp;gt; s&#34;Message received: ${msg}&#34;, &#34;No message&#34;)&#xA;res1: String = Message received: Its true!&#xA;&#xA;scala&amp;gt; &#34;1.0&#34;.parseFloat&#xA;res0: Either[NumberFormatException, Float] = Right(1.0F)&#xA;&#xA;scala&amp;gt; &#34;foo&#34;.parseIntValidated&#xA;res1: cats.data.Validated[NumberFormatException,Int] = Invalid(java.lang.NumberFormatException: For input string: &#34;foo&#34;)&#xA;&#xA;scala&amp;gt; val t1 = scala.util.Try(new java.net.URL(&#34;https://www.github.com&#34;))&#xA;t1: scala.util.Try[java.net.URL] = Success(https://www.github.com)&#xA;&#xA;scala&amp;gt; t1.cata(msg =&amp;gt; s&#34;URL is valid!&#34;, error =&amp;gt; s&#34;URL is invalid: ${error.getMessage}&#34;)&#xA;res1: String = URL is valid!&#xA;&#xA;scala&amp;gt; t1.toEither&#xA;res2: Either[Throwable,java.net.URL] = Right(https://www.github.com)&#xA;&#xA;scala&amp;gt; val t2 = scala.util.Try(new java.net.URL(&#34;https//www.github.com&#34;))&#xA;t2: scala.util.Try[java.net.URL] = Failure(java.net.MalformedURLException: no protocol: https//www.github.com)&#xA;&#xA;scala&amp;gt; t2.cata(msg =&amp;gt; s&#34;URL is valid!&#34;, error =&amp;gt; s&#34;URL is invalid: ${error.getMessage}&#34;)&#xA;res3: String = URL is invalid: no protocol: https//www.github.com&#xA;&#xA;scala&amp;gt; t2.toEither&#xA;res4: Either[Throwable,java.net.URL] = Left(java.net.MalformedURLException: no protocol: https//www.github.com)&#xA;&#xA;scala&amp;gt; val intToBytes = 123456789.toByteArray&#xA;intToBytes: Array[Byte] = Array(7, 91, -51, 21)&#xA;&#xA;scala&amp;gt; val longToBase64 = 123456789L.toBase64&#xA;longToBase64: String = AAAAAAdbzRU&#xA;&#xA;scala&amp;gt; 5.squared&#xA;res0: Int = 25&#xA;&#xA;scala&amp;gt; 1.5 |&amp;gt; (_.toInt) |&amp;gt; (_.toString)&#xA;res0: String = 1&#xA;&#xA;//lift a partial function into a total function to an Either, when you want to treat unhandled input cases as an error&#xA;scala&amp;gt; liftEither[Option[Int]]({case Some(n) =&amp;gt; n}, a =&amp;gt; s&#34;Unexpected: $a&#34;)(Some(6))&#xA;res0: Either[String,Int] = Right(6)&#xA;&#xA;scala&amp;gt; val mapped = Map(1 -&amp;gt; 2, 3 -&amp;gt; 4).mapKeys(_ * 2)&#xA;mapped: Map[Int,Int] = Map(2 -&amp;gt; 2, 6 -&amp;gt; 4)&#xA;&#xA;scala&amp;gt; val foption = List(Option(1), Option(2), Option(4)).mapIn(_ * 2)&#xA;foption: List[Option[Int]] = List(Some(2), Some(4), Some(8))&#xA;&#xA;scala&amp;gt; val feither = List(Either.cond(true, 1, &#34;0&#34;)).mapIn(_ * 2)&#xA;foption: List[Either[String, Int]] = List(Right(2))&#xA;&#xA;scala&amp;gt; val listOption = List(Option(1), Option(2)).mapNested2(_ * 2)&#xA;listOption: List[Option[Int]] = List(Some(2), Some(4))&#xA;&#xA;scala&amp;gt; val listOptionList = List(Option(List(1)), Option(List(2))).mapNested3(_ * 2)&#xA;listOptionList: List[Option[List[Int]]] = List(Some(List(2)), Some(List(4)))&#xA;&#xA;scala&amp;gt; val tupleHead = (1, 2, 4, 8).head&#xA;tupleHead: Int = 1&#xA;&#xA;scala&amp;gt; val tupleLast = (1, 2, 4, 8).last&#xA;tupleHead: Int = 8&#xA;&#xA;scala&amp;gt; Set(0).tailOrEmpty&#xA;val res3: Set[Int] = Set()&#xA;&#xA;scala&amp;gt; Nil.tailOrEmpty&#xA;val res1: List[Nothing] = List()&#xA;&#xA;scala&amp;gt; Set(0).tailOption&#xA;val res4: Option[cats.data.NonEmptySet[Int]] = None&#xA;&#xA;scala&amp;gt; List(0,1,2).tailOption&#xA;val res5: Option[cats.data.NonEmptyList[Int]] = Some(NonEmptyList(1, 2))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scope of Library&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide enrichments to classes from the Scala standard library that convert to Cats datatypes, or otherwise improve the functional programming experience.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Mouse is maintained by @benhutchison and @danicheg.&lt;/p&gt; &#xA;&lt;p&gt;Issues and pull requests are welcome. Code contributions should be aligned with the above scope to be included, and include unit tests. See &lt;a href=&#34;https://raw.githubusercontent.com/typelevel/mouse/main/DEV.md&#34;&gt;contributing guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;This project supports the &lt;a href=&#34;https://www.scala-lang.org/conduct/&#34;&gt;Scala code of conduct&lt;/a&gt; and aims that its channels (mailing list, Gitter, github, etc.) to be welcoming environments for everyone.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>otobrglez/tiny-aria2</title>
    <updated>2024-03-18T01:38:31Z</updated>
    <id>tag:github.com,2024-03-18:/otobrglez/tiny-aria2</id>
    <link href="https://github.com/otobrglez/tiny-aria2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;tiny-aria2 is a small and UI for aria2.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tiny-aria2&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/otobrglez/tiny-aria2&#34;&gt;tiny-aria2&lt;/a&gt; is a small and simple user interface / UI for &lt;a href=&#34;https://aria2.github.io/&#34;&gt;aria2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It connects to &lt;code&gt;aria2&lt;/code&gt; via its &lt;a href=&#34;https://aria2.github.io/manual/en/html/aria2c.htm&#34;&gt;JSON-RPC&lt;/a&gt; interface.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/otobrglez/tiny-aria2/assets/225946/0f65b3b0-4034-4dbb-8301-4459c3ab3512&#34;&gt;https://github.com/otobrglez/tiny-aria2/assets/225946/0f65b3b0-4034-4dbb-8301-4459c3ab3512&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PORT&lt;/code&gt; - Port on which the service listens.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ARIA2_URI&lt;/code&gt; - URI / URL where aria2 service / daemon is listening to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ARIA2_USERNAME&lt;/code&gt; - &lt;code&gt;aria2&lt;/code&gt; username&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ARIA2_PASSWORD&lt;/code&gt; - &lt;code&gt;aria2&lt;/code&gt; password&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To build and run a Docker Image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sbt docker:publishLocal&#xA;&#xA;docker run -ti --rm \&#xA;  -e PORT=4447 \&#xA;  -p 4448:4447 \&#xA;  -e ARIA2_URI=http://aria2host \&#xA;  -e ARIA2_USERNAME=pirate123 \&#xA;  -e ARIA2_PASSWORD=pirate123 \&#xA;  docker.io/pinkstack/tiny-aria2:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build a fat-jar one shall use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sbt assembly&#xA;&#xA;java -jar target/*/tiny-aria2.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;aria2 Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;aria2&lt;/code&gt; locally or build an image with something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM ubuntu&#xA;&#xA;RUN apt-get update -yy &amp;amp;&amp;amp; \&#xA;    apt-get install aria2 -yy &amp;amp;&amp;amp; \&#xA;    apt-get auto-remove -y &amp;amp;&amp;amp; \&#xA;    apt-get auto-clean&#xA;&#xA;EXPOSE 6800&#xA;&#xA;CMD [&#34;aria2c&#34;, \&#xA;    &#34;--enable-rpc&#34;, \&#xA;    &#34;--rpc-listen-all&#34;, \&#xA;    &#34;--rpc-user&#34;, &#34;pirate&#34;, \&#xA;    &#34;--rpc-passwd&#34;, &#34;pirate&#34;, \&#xA;    &#34;--rpc-allow-origin-all&#34;, \&#xA;    &#34;--max-concurrent-downloads&#34;, &#34;5&#34;, \&#xA;    &#34;--log-level&#34;, &#34;info&#34;, \&#xA;    &#34;--console-log-level&#34;, &#34;info&#34;, \&#xA;    &#34;--save-session-interval&#34;, &#34;10&#34;, \&#xA;    &#34;--dir&#34;, &#34;/data&#34;, \&#xA;    &#34;--save-session&#34;, &#34;/data/aria2c-session.txt&#34;, \&#xA;    &#34;--seed-ratio&#34;, &#34;0.1&#34; \&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/otobrglez&#34;&gt;Oto Brglez&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>