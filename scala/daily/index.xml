<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-04T01:45:04Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>softinio/scalanews</title>
    <updated>2023-02-04T01:45:04Z</updated>
    <id>tag:github.com,2023-02-04:/softinio/scalanews</id>
    <link href="https://github.com/softinio/scalanews" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scala News - A Community Crowd Sourced newsletter&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/softinio/scalanews/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Pages&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Scala News&lt;/h1&gt; &#xA;&lt;p&gt;For more information have a look at our &lt;a href=&#34;https://raw.githubusercontent.com/softinio/scalanews/main/docs/Resources/About.md&#34;&gt;about us&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute Links&lt;/h2&gt; &#xA;&lt;p&gt;Create a PR adding your link to &lt;a href=&#34;https://raw.githubusercontent.com/softinio/scalanews/main/next/next.md&#34;&gt;next/next.md&lt;/a&gt;. This is the file that will get published next.&lt;/p&gt; &#xA;&lt;h2&gt;Do you have a Scala related Blog?&lt;/h2&gt; &#xA;&lt;p&gt;Create a PR adding your blog to our Blog directory: &lt;a href=&#34;https://raw.githubusercontent.com/softinio/scalanews/main/docs/Resources/Blog_Directory.md&#34;&gt;docs/Resources/Blog_Directory.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Created By&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.softinio.com&#34;&gt;Salar Rahmanian&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gemini-hlsw/lucuma-react</title>
    <updated>2023-02-04T01:45:04Z</updated>
    <id>tag:github.com,2023-02-04:/gemini-hlsw/lucuma-react</id>
    <link href="https://github.com/gemini-hlsw/lucuma-react" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lucuma-react&lt;/h1&gt; &#xA;&lt;p&gt;Common utilities and facades for React and Scala.js&lt;/p&gt; &#xA;&lt;p&gt;Example running a demo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sbt semanticUIDemo/fastLinkJS&#xA;npm install --force&#xA;vite -c semantic-ui-demo/vite.config.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that vite should be run from the root directory, but point at the config file for a particular model. To generate/update the vite config for a module use &lt;code&gt;sbt viteConfigGenerate&lt;/code&gt;. It will get stale with every Scala 3 patch release.&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;lucuma-react-common&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-cats&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Facades&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;lucuma-react-beautiful-dnd&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-clipboard&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-datepicker&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-draggable&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-grid-layout&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-highcharts&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-semantic-ui&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-table&lt;/li&gt; &#xA; &lt;li&gt;lucuma-tanstack-table&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-tree&lt;/li&gt; &#xA; &lt;li&gt;lucuma-react-virtuoso&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To add a new module follow roughly these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the module(s) to the build, and add them to the root aggregate project.&lt;/li&gt; &#xA; &lt;li&gt;If there is more than one module (e.g. facade+demo), create an aggregate project for them.&lt;/li&gt; &#xA; &lt;li&gt;Add the aggregate (or the sole module) to the projects list. This adds a separate CI job.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;yarn add --dev whatever&lt;/code&gt; to add the npm dep to the &lt;code&gt;package.json&lt;/code&gt; in the root. Except for any type-related dependencies for ScalablyTyped, see the next step.&lt;/li&gt; &#xA; &lt;li&gt;Type-related dependencies should be put in a &lt;code&gt;package.json&lt;/code&gt; specific for that module as a normal dep (not a dev dep). This helps to focus ScalablyTyped on generating facades specifically for that dep. Also, make sure to register that &lt;code&gt;package.json&lt;/code&gt; with the dependabot config&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This repo uses a single &lt;code&gt;package.json&lt;/code&gt; at the root that is used by all the modules. This ensures that the version of shared dependencies are kept in sync. However, each module has its own &lt;code&gt;yarn.lock&lt;/code&gt;, mostly because this is how ScalaJS Bundler wants it. Unfortunately, this means that all the lockfiles must be kept synchronized.&lt;/p&gt; &#xA;&lt;p&gt;If a PR is complaining about outdated lockfiles, you can run the &#34;Update lockfiles&#34; workfow on that branch. Lucuma-steward will run &lt;code&gt;yarn install&lt;/code&gt; and &lt;code&gt;sbt npmInstallDependencies&lt;/code&gt; and commit the changes. Of course, you can also run these steps locally and commit.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gemini-hlsw/lucuma-react/actions/workflows/update-lockfiles.yml&#34;&gt;https://github.com/gemini-hlsw/lucuma-react/actions/workflows/update-lockfiles.yml&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>