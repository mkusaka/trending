<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-02T01:40:56Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sethrylan/PonderThis</title>
    <updated>2024-06-02T01:40:56Z</updated>
    <id>tag:github.com,2024-06-02:/sethrylan/PonderThis</id>
    <link href="https://github.com/sethrylan/PonderThis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;IBM Research Challenges&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>fedora-infra/mobile</title>
    <updated>2024-06-02T01:40:56Z</updated>
    <id>tag:github.com,2024-06-02:/fedora-infra/mobile</id>
    <link href="https://github.com/fedora-infra/mobile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Android app that allows the Fedora community to interact with Fedora&#39;s web apps on the go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fedora Mobile&lt;/h1&gt; &#xA;&lt;a href=&#34;http://jenkins.cloud.fedoraproject.org/job/fedora-mobile/lastBuild/&#34;&gt; &lt;img src=&#34;http://shieldkins.elrod.me/fedora/fedora-mobile&#34; alt=&#34;Fedora Mobile Status&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Fedora Mobile is a one-stop-shop application for interacting with the Fedora community you know and love, on the go.&lt;/p&gt; &#xA;&lt;p&gt;It provides access to several applications run throughout the Fedora Infrastructure, and allows contributors and users to stay involved without being in front of a computer.&lt;/p&gt; &#xA;&lt;p&gt;Some things that Fedora Mobile sets out to do:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide account synchronization between your phone and the &lt;a href=&#34;https://admin.fedoraproject.org/accounts/&#34;&gt;Fedora Accounts System&lt;/a&gt; using the Android Accounts Provider API.&lt;/li&gt; &#xA; &lt;li&gt;Provide access to &lt;a href=&#34;https://apps.fedoraproject.org/calendar/&#34;&gt;Fedocal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Be able to quickly check the &lt;a href=&#34;http://status.fedoraproject.org/&#34;&gt;status&lt;/a&gt; of Fedora services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.fedoraproject.org/tagger/&#34;&gt;Tag packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.fedoraproject.org/packages/&#34;&gt;Search packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;View the &lt;a href=&#34;https://badges.fedoraproject.org/&#34;&gt;Fedora Badges&lt;/a&gt; leaderboard.&lt;/li&gt; &#xA; &lt;li&gt;And more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We target Android 3.0+ for the time being. The reason for this is that Fedora&#39;s mission is to &#34;lead the &lt;strong&gt;advancement&lt;/strong&gt; of free and open source software and content as a collaborative community&#34; - advancement being key.&lt;/p&gt; &#xA;&lt;p&gt;Not having to deal with 2.x&#39;s quirks also lets us do some things more cleanly and take advantage of newer features like Navigation Drawers and the Action Bar without having to depend on thirdparty hacks/libraries.&lt;/p&gt; &#xA;&lt;h1&gt;Trying it out&lt;/h1&gt; &#xA;&lt;p&gt;You can get the latest working HEAD build from the Fedora Infrastructure Jenkins instance at &lt;a href=&#34;http://jenkins.cloud.fedoraproject.org/job/fedora-mobile/ws/target/fedora-mobile-0.1.apk&#34;&gt;http://jenkins.cloud.fedoraproject.org/job/fedora-mobile/ws/target/fedora-mobile-0.1.apk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A short URL that goes to the same thing (easier for typing on phones and tablets) is &lt;a href=&#34;http://da.gd/j&#34;&gt;http://da.gd/j&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;Because the readme is too short and I need to fill some space. ;)&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;img src=&#34;http://i.imgur.com/HHnvOc3.png&#34;&gt; &#xA;&lt;h1&gt;Setting up a development environment&lt;/h1&gt; &#xA;&lt;p&gt;Fedora Mobile is primarily written in Scala - but don&#39;t let this scare you.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re familiar with the Android SDK, you&#39;ll find the Fedora Mobile code really familiar. Because Scala runs on the JVM, we can use the same Java libraries that native Java programs use, within our code. Yep, a &lt;code&gt;ListView&lt;/code&gt; is still a &lt;code&gt;ListView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(Ideally we would make very heavy use of scalaz&#39;s &lt;code&gt;Free&lt;/code&gt; and wrap the Android SDK like crazy, but I digress).&lt;/p&gt; &#xA;&lt;p&gt;For the rest of this section, we&#39;ll assume that you&#39;re on a fairly modern Fedora version -- if not, some things might differ slightly. The general idea is to get a working SBT (Simple Build Tool) launcher working, and to get the Android SDK somewhere safe that SBT can read.&lt;/p&gt; &#xA;&lt;p&gt;This guide does NOT assume any particular IDE - in fact, I (@CodeBlock) solely use Emacs to develop. However, if you must use an IDE, maybe consider the &lt;a href=&#34;http://www.scala-ide.org/&#34;&gt;Scala IDE&lt;/a&gt; for Eclipse.&lt;/p&gt; &#xA;&lt;h2&gt;Installing dependencies&lt;/h2&gt; &#xA;&lt;p&gt;The Android development platform requires some 32-bit packages to be installed. We also need a working Java compiler and runtime.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum install glibc.i686 \&#xA;  glibc-devel.i686 \&#xA;  libstdc++.i686 \&#xA;  zlib-devel.i686 \&#xA;  ncurses-devel.i686 \&#xA;  libX11-devel.i686 \&#xA;  libXrender.i686 \&#xA;  libXrandr.i686 \&#xA;  java-1.7-openjdk \&#xA;  java-1.7-openjdk-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;https://fedoraproject.org/wiki/HOWTO_Setup_Android_Development&#34;&gt;Fedora Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get the Android SDK&lt;/h2&gt; &#xA;&lt;p&gt;To start out, get the &lt;a href=&#34;https://developer.android.com/sdk/index.html&#34;&gt;Android SDK&lt;/a&gt;. You&#39;ll likely want the one that says &lt;strong&gt;Linux 64-bit&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unzip the SDK and put the result someplace safe. I use &lt;code&gt;~/devel/android-sdk-linux/&lt;/code&gt;. Discard the zip.&lt;/p&gt; &#xA;&lt;p&gt;Permanently set your &lt;code&gt;$ANDROID_HOME&lt;/code&gt; environment variable to wherever you unzipped the SDK to. Do this by adding a line like the following to your &lt;code&gt;.bashrc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export ANDROID_HOME=~/devel/android-sdk-linux/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remember to &lt;code&gt;source ~/.bashrc&lt;/code&gt; to make it take effect right away.&lt;/p&gt; &#xA;&lt;h2&gt;Install the right API level(s)&lt;/h2&gt; &#xA;&lt;p&gt;NOTE: &lt;strong&gt;Fedora Mobile supports Android 3.0 and up, which is API Level 11+.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open up the &lt;strong&gt;Android SDK Manager&lt;/strong&gt; by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ANDROID_HOME/tools/android&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once it comes up, select at least everything under API Level 11 and API Level 17, and click Install. This will take some time.&lt;/p&gt; &#xA;&lt;h2&gt;The Emulator&lt;/h2&gt; &#xA;&lt;p&gt;Android provides a nice emulator that we can use for testing the app as we develop.&lt;/p&gt; &#xA;&lt;p&gt;Close out of the Android SDK Manager, and open the &lt;strong&gt;Android Virtual Device Manager&lt;/strong&gt;. Do this by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ANDROID_HOME/tools/android avd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When it comes up, do the following (changing fields as needed):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New&lt;/li&gt; &#xA; &lt;li&gt;AVD Name: &lt;code&gt;android-4.2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Device: (anything - I use &#34;Nexus 4&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Target: &lt;code&gt;Android 4.2.2 - API Level 17&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;CPU: ARM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hit OK, then do the same for API Level 11.&lt;/p&gt; &#xA;&lt;p&gt;Close out of the Android Virtual Device Manager.&lt;/p&gt; &#xA;&lt;h2&gt;Getting SBT&lt;/h2&gt; &#xA;&lt;p&gt;We make use of the &lt;code&gt;sbt&lt;/code&gt; buildsystem (and android-sdk-plugin). &lt;code&gt;sbt&lt;/code&gt; is packaged in Fedora, but there is a nicer fork of the launch script by Paul Phillips. I&#39;ve packaged the script in a copr, and suggest using it instead.&lt;/p&gt; &#xA;&lt;p&gt;To set up sbt, just do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf copr enable codeblock/sbt-extras &amp;amp;&amp;amp; sudo dnf install sbt-extras&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting the code and getting started&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;re almost done!&lt;/p&gt; &#xA;&lt;p&gt;At this point, if you haven&#39;t done so, clone this repository.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a committer,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:fedora-infra/mobile.git; cd mobile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Otherwise,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git://github.com/fedora-infra/mobile.git; cd mobile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run &lt;code&gt;sbt update&lt;/code&gt; and wait. The first time you run SBT (and similar build tools), it has to &#34;download the internet.&#34; :)&lt;/p&gt; &#xA;&lt;p&gt;Once it completes, you can just run &lt;code&gt;sbt&lt;/code&gt; which will get you an SBT console. The advantage of using the console is not having to wait for JVM to start up, every time you want to run an SBT command.&lt;/p&gt; &#xA;&lt;p&gt;All of the following assume you&#39;re in the SBT shell. You can do the same things from your shell prompt by doing &lt;code&gt;sbt &amp;lt;the command&amp;gt;&lt;/code&gt;, but it&#39;s slower that way due to JVM startup times.&lt;/p&gt; &#xA;&lt;p&gt;Start your emulator (or connect your physical device using &lt;code&gt;adb&lt;/code&gt;). Make sure you can access the device (emulated or not) via &lt;code&gt;adb shell&lt;/code&gt; before proceeding. If you can&#39;t, fix that. :)&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;android:install&lt;/code&gt; in the SBT shell to compile the application and install it into your device.&lt;/p&gt; &#xA;&lt;p&gt;In most cases, you can make your changes, then just do &lt;code&gt;android:install&lt;/code&gt; to compile and run. Rarely, you might need to clean the project of old build artifacts, and you can do that with the &lt;code&gt;clean&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;To compile without installing to the emulator, use &lt;code&gt;compile&lt;/code&gt;. This is sometimes quicker just for making sure syntax is fine and everything typechecks.&lt;/p&gt; &#xA;&lt;p&gt;To just obtain an APK (without installing into the device), use &lt;code&gt;android:packageDebug&lt;/code&gt;. You can install that APK to a physical device.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;When you encounter &#34;The application has quit&#34; errors, it means an uncaught exception was thrown. You can use ADB and &lt;code&gt;logcat&lt;/code&gt; to see the traceback.&lt;/p&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ANDROID_HOME/platform-tools/adb shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you&#39;re in the shell, use &lt;code&gt;logcat&lt;/code&gt;. The output will be verbose, but the exception should be near the bottom.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The application is licensed under the Mozilla Public License, version 2. See LICENSE.&lt;/p&gt;</summary>
  </entry>
</feed>