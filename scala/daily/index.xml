<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-04T01:43:26Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>twitter/scalding</title>
    <updated>2023-04-04T01:43:26Z</updated>
    <id>tag:github.com,2023-04-04:/twitter/scalding</id>
    <link href="https://github.com/twitter/scalding" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Scala API for Cascading&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scalding&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/twitter/scalding/actions&#34;&gt;&lt;img src=&#34;https://github.com/twitter/scalding/actions/workflows/CI.yml/badge.svg?branch=develop&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/twitter/scalding&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/twitter/scalding/develop.svg?maxAge=3600&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://index.scala-lang.org/twitter/scalding/scalding-core&#34;&gt;&lt;img src=&#34;https://index.scala-lang.org/twitter/scalding/scalding-core/latest.svg?color=orange&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/twitter/scalding?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/twitter/scalding.svg?sanitize=true&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scalding is a Scala library that makes it easy to specify Hadoop MapReduce jobs. Scalding is built on top of &lt;a href=&#34;http://www.cascading.org/&#34;&gt;Cascading&lt;/a&gt;, a Java library that abstracts away low-level Hadoop details. Scalding is comparable to &lt;a href=&#34;http://pig.apache.org/&#34;&gt;Pig&lt;/a&gt;, but offers tight integration with Scala, bringing advantages of Scala to your MapReduce jobs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/twitter/scalding/develop/logo/scalding.png&#34; alt=&#34;Scalding Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Word Count&lt;/h2&gt; &#xA;&lt;p&gt;Hadoop is a distributed system for counting words. Here is how it&#39;s done in Scalding.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;package com.twitter.scalding.examples&#xA;&#xA;import com.twitter.scalding._&#xA;import com.twitter.scalding.source.TypedText&#xA;&#xA;class WordCountJob(args: Args) extends Job(args) {&#xA;  TypedPipe.from(TextLine(args(&#34;input&#34;)))&#xA;    .flatMap { line =&amp;gt; tokenize(line) }&#xA;    .groupBy { word =&amp;gt; word } // use each word for a key&#xA;    .size // in each group, get the size&#xA;    .write(TypedText.tsv[(String, Long)](args(&#34;output&#34;)))&#xA;&#xA;  // Split a piece of text into individual words.&#xA;  def tokenize(text: String): Array[String] = {&#xA;    // Lowercase each word and remove punctuation.&#xA;    text.toLowerCase.replaceAll(&#34;[^a-zA-Z0-9\\s]&#34;, &#34;&#34;).split(&#34;\\s+&#34;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that the &lt;code&gt;tokenize&lt;/code&gt; function, which is standard Scala, integrates naturally with the rest of the MapReduce job. This is a very powerful feature of Scalding. (Compare it to the use of UDFs in Pig.)&lt;/p&gt; &#xA;&lt;p&gt;You can find more example code under &lt;a href=&#34;https://github.com/twitter/scalding/tree/master/scalding-commons/src/main/scala/com/twitter/scalding/examples&#34;&gt;examples/&lt;/a&gt;. If you&#39;re interested in comparing Scalding to other languages, see our &lt;a href=&#34;https://github.com/twitter/scalding/wiki/Rosetta-Code&#34;&gt;Rosetta Code page&lt;/a&gt;, which has several MapReduce tasks in Scalding and other frameworks (e.g., Pig and Hadoop Streaming).&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/scalding/wiki/Getting-Started&#34;&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt; page on the &lt;a href=&#34;https://github.com/twitter/scalding/wiki&#34;&gt;Scalding Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://twitter.github.com/scalding&#34;&gt;Scalding Scaladocs&lt;/a&gt; provide details beyond the API References. Prefer using this as it&#39;s always up to date.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/scalding/develop/tutorial/WONDERLAND.md&#34;&gt;&lt;strong&gt;REPL in Wonderland&lt;/strong&gt;&lt;/a&gt; a hands-on tour of the scalding REPL requiring only git and java installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/scalding/tree/master/tutorial&#34;&gt;&lt;strong&gt;Runnable tutorials&lt;/strong&gt;&lt;/a&gt; in the source.&lt;/li&gt; &#xA; &lt;li&gt;The API Reference, including many example Scalding snippets: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/scalding/wiki/Type-safe-api-reference&#34;&gt;Type-safe API Reference&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/scalding/wiki/Fields-based-API-Reference&#34;&gt;Fields-based API Reference&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The Matrix Library provides a way of working with key-attribute-value scalding pipes: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://github.com/twitter/scalding/wiki/Introduction-to-Matrix-Library&#34;&gt;Introduction to Matrix Library&lt;/a&gt; contains an overview and a &#34;getting started&#34; example&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://github.com/twitter/scalding/wiki/Matrix-API-Reference&#34;&gt;Matrix API Reference&lt;/a&gt; contains the Matrix Library API reference with examples&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/scalding/wiki/Calling-Scalding-from-inside-your-application&#34;&gt;&lt;strong&gt;Introduction to Scalding Execution&lt;/strong&gt;&lt;/a&gt; contains general rules and examples of calling Scalding from inside another application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please feel free to use the beautiful &lt;a href=&#34;https://drive.google.com/folderview?id=0B3i3pDi3yVgNbm9pMUdDcHFKVEk&amp;amp;usp=sharing&#34;&gt;Scalding logo&lt;/a&gt; artwork anywhere.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;For user questions or scalding development (internals, extending, release planning): &lt;a href=&#34;https://groups.google.com/forum/#!forum/scalding-dev&#34;&gt;https://groups.google.com/forum/#!forum/scalding-dev&lt;/a&gt; (Google search also works as a first step)&lt;/p&gt; &#xA;&lt;p&gt;In the remote possibility that there exist bugs in this code, please report them to: &lt;a href=&#34;https://github.com/twitter/scalding/issues&#34;&gt;https://github.com/twitter/scalding/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;http://twitter.com/scalding&#34;&gt;@Scalding&lt;/a&gt; on Twitter for updates.&lt;/p&gt; &#xA;&lt;p&gt;Chat: &lt;a href=&#34;https://gitter.im/twitter/scalding?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/twitter/scalding.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get Involved + Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests and bug reports are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;We use a lightweight form of project governence inspired by the one used by Apache projects. Please see &lt;a href=&#34;https://github.com/twitter/analytics-infra-governance#contributing-and-committership&#34;&gt;Contributing and Committership&lt;/a&gt; for our code of conduct and our pull request review process. The TL;DR is send us a pull request, iterate on the feedback + discussion, and get a +1 from a &lt;a href=&#34;https://raw.githubusercontent.com/twitter/scalding/develop/COMMITTERS.md&#34;&gt;Committer&lt;/a&gt; in order to get your PR accepted.&lt;/p&gt; &#xA;&lt;p&gt;The current list of active committers (who can +1 a pull request) can be found here: &lt;a href=&#34;https://raw.githubusercontent.com/twitter/scalding/develop/COMMITTERS.md&#34;&gt;Committers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A list of contributors to the project can be found here: &lt;a href=&#34;https://github.com/twitter/scalding/graphs/contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;There is a script (called sbt) in the root that loads the correct sbt version to build:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;./sbt update&lt;/code&gt; (takes 2 minutes or more)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./sbt test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./sbt assembly&lt;/code&gt; (needed to make the jar used by the scald.rb script)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The test suite takes a while to run. When you&#39;re in sbt, here&#39;s a shortcut to run just one test:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;gt; test-only com.twitter.scalding.FileSourceTest&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/twitter/scalding/wiki/Frequently-asked-questions#issues-with-sbt&#34;&gt;FAQ page&lt;/a&gt; if you encounter problems when using sbt.&lt;/p&gt; &#xA;&lt;p&gt;We use Github Actions to verify the build: &lt;a href=&#34;https://github.com/twitter/scalding/actions&#34;&gt;&lt;img src=&#34;https://github.com/twitter/scalding/actions/workflows/CI.yml/badge.svg?branch=develop&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://coveralls.io/r/twitter/scalding&#34;&gt;Coveralls&lt;/a&gt; for code coverage results: &lt;a href=&#34;https://coveralls.io/r/twitter/scalding?branch=develop&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/twitter/scalding/badge.png?branch=develop&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scalding modules are available from maven central.&lt;/p&gt; &#xA;&lt;p&gt;The current groupid and version for all modules is, respectively, &lt;code&gt;&#34;com.twitter&#34;&lt;/code&gt; and &lt;code&gt;0.17.2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Current published artifacts are&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;scalding-core_2.11&lt;/code&gt;, &lt;code&gt;scalding-core_2.12&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scalding-args_2.11&lt;/code&gt;, &lt;code&gt;scalding-args_2.12&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scalding-date_2.11&lt;/code&gt;, &lt;code&gt;scalding-date_2.12&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scalding-commons_2.11&lt;/code&gt;, &lt;code&gt;scalding-commons_2.12&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scalding-avro_2.11&lt;/code&gt;, &lt;code&gt;scalding-avro_2.12&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scalding-parquet_2.11&lt;/code&gt;, &lt;code&gt;scalding-parquet_2.12&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scalding-repl_2.11&lt;/code&gt;, &lt;code&gt;scalding-repl_2.12&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The suffix denotes the scala version.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ebay&lt;/li&gt; &#xA; &lt;li&gt;Etsy&lt;/li&gt; &#xA; &lt;li&gt;Sharethrough&lt;/li&gt; &#xA; &lt;li&gt;Snowplow Analytics&lt;/li&gt; &#xA; &lt;li&gt;Soundcloud&lt;/li&gt; &#xA; &lt;li&gt;Twitter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To see a full list of users or to add yourself, see the &lt;a href=&#34;https://github.com/twitter/scalding/wiki/Powered-By&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authors:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Avi Bryant &lt;a href=&#34;http://twitter.com/avibryant&#34;&gt;http://twitter.com/avibryant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Oscar Boykin &lt;a href=&#34;http://twitter.com/posco&#34;&gt;http://twitter.com/posco&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Argyris Zymnis &lt;a href=&#34;http://twitter.com/argyris&#34;&gt;http://twitter.com/argyris&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks for assistance and contributions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sam Ritchie &lt;a href=&#34;http://twitter.com/sritchie&#34;&gt;http://twitter.com/sritchie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Aaron Siegel: &lt;a href=&#34;http://twitter.com/asiegel&#34;&gt;http://twitter.com/asiegel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ian O&#39;Connell &lt;a href=&#34;http://twitter.com/0x138&#34;&gt;http://twitter.com/0x138&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alex Levenson &lt;a href=&#34;http://twitter.com/THISWILLWORK&#34;&gt;http://twitter.com/THISWILLWORK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jonathan Coveney &lt;a href=&#34;http://twitter.com/jco&#34;&gt;http://twitter.com/jco&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kevin Lin &lt;a href=&#34;http://twitter.com/reconditesea&#34;&gt;http://twitter.com/reconditesea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Brad Greenlee: &lt;a href=&#34;http://twitter.com/bgreenlee&#34;&gt;http://twitter.com/bgreenlee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Edwin Chen &lt;a href=&#34;http://twitter.com/edchedch&#34;&gt;http://twitter.com/edchedch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arkajit Dey: &lt;a href=&#34;http://twitter.com/arkajit&#34;&gt;http://twitter.com/arkajit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Krishnan Raman: &lt;a href=&#34;http://twitter.com/dxbydt_jasq&#34;&gt;http://twitter.com/dxbydt_jasq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Flavian Vasile &lt;a href=&#34;http://twitter.com/flavianv&#34;&gt;http://twitter.com/flavianv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chris Wensel &lt;a href=&#34;http://twitter.com/cwensel&#34;&gt;http://twitter.com/cwensel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ning Liang &lt;a href=&#34;http://twitter.com/ningliang&#34;&gt;http://twitter.com/ningliang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dmitriy Ryaboy &lt;a href=&#34;http://twitter.com/squarecog&#34;&gt;http://twitter.com/squarecog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dong Wang &lt;a href=&#34;http://twitter.com/dongwang218&#34;&gt;http://twitter.com/dongwang218&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Josh Attenberg &lt;a href=&#34;http://twitter.com/jattenberg&#34;&gt;http://twitter.com/jattenberg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Juliet Hougland &lt;a href=&#34;https://twitter.com/j_houg&#34;&gt;https://twitter.com/j_houg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eddie Xie &lt;a href=&#34;https://twitter.com/eddiex&#34;&gt;https://twitter.com/eddiex&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A full list of &lt;a href=&#34;https://github.com/twitter/scalding/graphs/contributors&#34;&gt;contributors&lt;/a&gt; can be found on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2016 Twitter, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>twitter/iago2</title>
    <updated>2023-04-04T01:43:26Z</updated>
    <id>tag:github.com,2023-04-04:/twitter/iago2</id>
    <link href="https://github.com/twitter/iago2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A load generator, built for engineers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;Top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Iago, A Load Generator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://travis-ci.com/twitter/iago2&#34;&gt;&lt;img src=&#34;https://travis-ci.com/twitter/iago2.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/quick_start.rst&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/overview.rst&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/architecture.rst&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/implementing_tests.rst&#34;&gt;Implementing Your Test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/configuring_tests.rst&#34;&gt;Configuring and Launching Your Test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/weighted_requests.rst&#34;&gt;Weighted Requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/metrics.rst&#34;&gt;Metrics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/tracing.rst&#34;&gt;Tracing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/using_iago_library.rst&#34;&gt;Using Iago2 as a Library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/migration.rst&#34;&gt;Iago to Iago2 Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/contributing.rst&#34;&gt;Contributing to Iago2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/iago2/raw/master/docs/faq.rst&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sensitive security issues: please submit your report to &lt;a href=&#34;https://hackerone.com/twitter&#34;&gt;Twitter HackerOne&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Non-security issues: please open an issue via &lt;a href=&#34;https://github.com/twitter/iago2/issues&#34;&gt;github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing to Iago2&lt;/h2&gt; &#xA;&lt;p&gt;Iago2 is open source, hosted on Github &lt;a href=&#34;https://github.com/twitter/iago2&#34;&gt;here&lt;/a&gt;. If you have a contribution to make, please fork the repo and submit a pull request. And please check out our Code of Conduct &lt;a href=&#34;https://github.com/twitter/code-of-conduct/raw/master/code-of-conduct.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Iago2 is under &lt;a href=&#34;https://github.com/twitter/iago2/raw/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ChangeLog&lt;/h2&gt; &#xA;&lt;p&gt;2018-09-18&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;fixed an issue that local iago server fails to start sometimes&lt;/li&gt; &#xA; &lt;li&gt;fixed flaky unit tests&lt;/li&gt; &#xA; &lt;li&gt;updated README.md and travis-ci config&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2018-07-23&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;removed RecordProcessor.processLines&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2018-07-06&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;replaced remaining com.twitter.logging.Logging with com.twitter.server.logging.Logging&lt;/li&gt; &#xA; &lt;li&gt;modified the types of feederRamInBytes, feederDiskInBytes, serverRamInBytes and serverDiskInBytes to &#34;Long&#34; in iago launcher AuroraMode&lt;/li&gt; &#xA; &lt;li&gt;properly close file source in com.twitter.iago.feeder.LogSourceImpl (default LogSource implementation)&lt;/li&gt; &#xA; &lt;li&gt;added documentation table of contents and license link in README.md for easier access&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2018-05-31&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;removed Kestrel transport&lt;/li&gt; &#xA; &lt;li&gt;removed dependency com.twitter.util-logging&lt;/li&gt; &#xA; &lt;li&gt;added an example of aurora mode launching script&lt;/li&gt; &#xA; &lt;li&gt;updated the documentation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2018-04-10&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;initial iago2 source code import&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/iago2/master/#Top&#34;&gt;Top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>B1Z0N/twitter-algorithm-with-author_is_elon</title>
    <updated>2023-04-04T01:43:26Z</updated>
    <id>tag:github.com,2023-04-04:/B1Z0N/twitter-algorithm-with-author_is_elon</id>
    <link href="https://github.com/B1Z0N/twitter-algorithm-with-author_is_elon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ORIGINAL source code for Twitter&#39;s Recommendation Algorithm with author_is_elon &#34;if&#34;(see the link below)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Twitter Recommendation Algorithm&lt;/h1&gt; &#xA;&lt;p&gt;The Twitter Recommendation Algorithm is a set of services and jobs that are responsible for constructing and serving the Home Timeline. For an introduction to how the algorithm works, please refer to our &lt;a href=&#34;https://blog.twitter.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm&#34;&gt;engineering blog&lt;/a&gt;. The diagram below illustrates how major services and jobs interconnect.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/docs/system-diagram.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;These are the main components of the Recommendation Algorithm included in this repository:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Component&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Feature&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/simclusters-ann/README.md&#34;&gt;simclusters-ann&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Community detection and sparse embeddings into those communities.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/twitter/the-algorithm-ml/raw/main/projects/twhin/README.md&#34;&gt;TwHIN&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dense knowledge graph embeddings for Users and Tweets.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/trust_and_safety_models/README.md&#34;&gt;trust-and-safety-models&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Models for detecting NSFW or abusive content.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/src/scala/com/twitter/interaction_graph/README.md&#34;&gt;real-graph&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Model to predict likelihood of a Twitter User interacting with another User.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/src/scala/com/twitter/graph/batch/job/tweepcred/README&#34;&gt;tweepcred&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Page-Rank algorithm for calculating Twitter User reputation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/recos-injector/README.md&#34;&gt;recos-injector&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Streaming event processor for building input streams for &lt;a href=&#34;https://github.com/twitter/GraphJet&#34;&gt;GraphJet&lt;/a&gt; based services.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/graph-feature-service/README.md&#34;&gt;graph-feature-service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serves graph features for a directed pair of Users (e.g. how many of User A&#39;s following liked Tweets from User B).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Candidate Source&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/src/java/com/twitter/search/README.md&#34;&gt;search-index&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Find and rank In-Network Tweets. ~50% of Tweets come from this candidate source.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/cr-mixer/README.md&#34;&gt;cr-mixer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Coordination layer for fetching Out-of-Network tweet candidates from underlying compute services.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/src/scala/com/twitter/recos/user_tweet_entity_graph/README.md&#34;&gt;user-tweet-entity-graph&lt;/a&gt; (UTEG)&lt;/td&gt; &#xA;   &lt;td&gt;Maintains an in memory User to Tweet interaction graph, and finds candidates based on traversals of this graph. This is built on the &lt;a href=&#34;https://github.com/twitter/GraphJet&#34;&gt;GraphJet&lt;/a&gt; framework. Several other GraphJet based features and candidate sources are located &lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/src/scala/com/twitter/recos&#34;&gt;here&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/follow-recommendations-service/README.md&#34;&gt;follow-recommendation-service&lt;/a&gt; (FRS)&lt;/td&gt; &#xA;   &lt;td&gt;Provides Users with recommendations for accounts to follow, and Tweets from those accounts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ranking&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/src/python/twitter/deepbird/projects/timelines/scripts/models/earlybird/README.md&#34;&gt;light-ranker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Light ranker model used by search index (Earlybird) to rank Tweets.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/twitter/the-algorithm-ml/raw/main/projects/home/recap/README.md&#34;&gt;heavy-ranker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Neural network for ranking candidate tweets. One of the main signals used to select timeline Tweets post candidate sourcing.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tweet mixing &amp;amp; filtering&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/home-mixer/README.md&#34;&gt;home-mixer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Main service used to construct and serve the Home Timeline. Built on &lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/product-mixer/README.md&#34;&gt;product-mixer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/visibilitylib/README.md&#34;&gt;visibility-filters&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Responsible for filtering Twitter content to support legal compliance, improve product quality, increase user trust, protect revenue through the use of hard-filtering, visible product treatments, and coarse-grained downranking.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/timelineranker/README.md&#34;&gt;timelineranker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Legacy service which provides relevance-scored tweets from the Earlybird Search Index and UTEG service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Software framework&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/navi/navi/README.md&#34;&gt;navi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;High performance, machine learning model serving written in Rust.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/product-mixer/README.md&#34;&gt;product-mixer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Software framework for building feeds of content.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/B1Z0N/twitter-algorithm-with-author_is_elon/master/twml/README.md&#34;&gt;twml&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Legacy machine learning framework built on TensorFlow v1.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;We include Bazel BUILD files for most components, but not a top level BUILD or WORKSPACE file.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We invite the community to submit GitHub issues and pull requests for suggestions on improving the recommendation algorithm. We are working on tools to manage these suggestions and sync changes to our internal repository. Any security concerns or issues should be routed to our official &lt;a href=&#34;https://hackerone.com/twitter&#34;&gt;bug bounty program&lt;/a&gt; through HackerOne. We hope to benefit from the collective intelligence and expertise of the global community in helping us identify issues and suggest improvements, ultimately leading to a better Twitter.&lt;/p&gt; &#xA;&lt;p&gt;Read our blog on the open source initiative &lt;a href=&#34;https://blog.twitter.com/en_us/topics/company/2023/a-new-era-of-transparency-for-twitter&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>